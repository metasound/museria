/*!
 * museria face
 * @version 0.0.8
 * {@link https://github.com/ortexx/museria}
 */
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/browser/face/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./dist/museria.client.js":
/*!********************************!*\
  !*** ./dist/museria.client.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * museria client
 * @version 0.0.7
 * {@link https://github.com/ortexx/museria}
 */
!function(t,e){ true?module.exports=e():undefined}(window,(function(){return function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=79)}([function(t,e){"function"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}},function(t,e,n){"use strict";(function(t){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var i=n(81),r=n(82),a=n(47);function o(){return c.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(t,e){if(o()<e)throw new RangeError("Invalid typed array length");return c.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=c.prototype:(null===t&&(t=new c(e)),t.length=e),t}function c(t,e,n){if(!(c.TYPED_ARRAY_SUPPORT||this instanceof c))return new c(t,e,n);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return p(this,t)}return u(this,t,e,n)}function u(t,e,n,i){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,i){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(i||0))throw new RangeError("'length' is out of bounds");e=void 0===n&&void 0===i?new Uint8Array(e):void 0===i?new Uint8Array(e,n):new Uint8Array(e,n,i);c.TYPED_ARRAY_SUPPORT?(t=e).__proto__=c.prototype:t=f(t,e);return t}(t,e,n,i):"string"==typeof e?function(t,e,n){"string"==typeof n&&""!==n||(n="utf8");if(!c.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var i=0|h(e,n),r=(t=s(t,i)).write(e,n);r!==i&&(t=t.slice(0,r));return t}(t,e,n):function(t,e){if(c.isBuffer(e)){var n=0|d(e.length);return 0===(t=s(t,n)).length?t:(e.copy(t,0,0,n),t)}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||(i=e.length)!=i?s(t,0):f(t,e);if("Buffer"===e.type&&a(e.data))return f(t,e.data)}var i;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function l(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function p(t,e){if(l(e),t=s(t,e<0?0:0|d(e)),!c.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function f(t,e){var n=e.length<0?0:0|d(e.length);t=s(t,n);for(var i=0;i<n;i+=1)t[i]=255&e[i];return t}function d(t){if(t>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|t}function h(t,e){if(c.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var i=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return z(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return U(t).length;default:if(i)return z(t).length;e=(""+e).toLowerCase(),i=!0}}function m(t,e,n){var i=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return A(this,e,n);case"utf8":case"utf-8":return T(this,e,n);case"ascii":return C(this,e,n);case"latin1":case"binary":return S(this,e,n);case"base64":return k(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return F(this,e,n);default:if(i)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),i=!0}}function g(t,e,n){var i=t[e];t[e]=t[n],t[n]=i}function y(t,e,n,i,r){if(0===t.length)return-1;if("string"==typeof n?(i=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=r?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(r)return-1;n=t.length-1}else if(n<0){if(!r)return-1;n=0}if("string"==typeof e&&(e=c.from(e,i)),c.isBuffer(e))return 0===e.length?-1:b(t,e,n,i,r);if("number"==typeof e)return e&=255,c.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):b(t,[e],n,i,r);throw new TypeError("val must be string, number or Buffer")}function b(t,e,n,i,r){var a,o=1,s=t.length,c=e.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(t.length<2||e.length<2)return-1;o=2,s/=2,c/=2,n/=2}function u(t,e){return 1===o?t[e]:t.readUInt16BE(e*o)}if(r){var l=-1;for(a=n;a<s;a++)if(u(t,a)===u(e,-1===l?0:a-l)){if(-1===l&&(l=a),a-l+1===c)return l*o}else-1!==l&&(a-=a-l),l=-1}else for(n+c>s&&(n=s-c),a=n;a>=0;a--){for(var p=!0,f=0;f<c;f++)if(u(t,a+f)!==u(e,f)){p=!1;break}if(p)return a}return-1}function v(t,e,n,i){n=Number(n)||0;var r=t.length-n;i?(i=Number(i))>r&&(i=r):i=r;var a=e.length;if(a%2!=0)throw new TypeError("Invalid hex string");i>a/2&&(i=a/2);for(var o=0;o<i;++o){var s=parseInt(e.substr(2*o,2),16);if(isNaN(s))return o;t[n+o]=s}return o}function w(t,e,n,i){return N(z(e,t.length-n),t,n,i)}function x(t,e,n,i){return N(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,i)}function D(t,e,n,i){return x(t,e,n,i)}function _(t,e,n,i){return N(U(e),t,n,i)}function E(t,e,n,i){return N(function(t,e){for(var n,i,r,a=[],o=0;o<t.length&&!((e-=2)<0);++o)n=t.charCodeAt(o),i=n>>8,r=n%256,a.push(r),a.push(i);return a}(e,t.length-n),t,n,i)}function k(t,e,n){return 0===e&&n===t.length?i.fromByteArray(t):i.fromByteArray(t.slice(e,n))}function T(t,e,n){n=Math.min(t.length,n);for(var i=[],r=e;r<n;){var a,o,s,c,u=t[r],l=null,p=u>239?4:u>223?3:u>191?2:1;if(r+p<=n)switch(p){case 1:u<128&&(l=u);break;case 2:128==(192&(a=t[r+1]))&&(c=(31&u)<<6|63&a)>127&&(l=c);break;case 3:a=t[r+1],o=t[r+2],128==(192&a)&&128==(192&o)&&(c=(15&u)<<12|(63&a)<<6|63&o)>2047&&(c<55296||c>57343)&&(l=c);break;case 4:a=t[r+1],o=t[r+2],s=t[r+3],128==(192&a)&&128==(192&o)&&128==(192&s)&&(c=(15&u)<<18|(63&a)<<12|(63&o)<<6|63&s)>65535&&c<1114112&&(l=c)}null===l?(l=65533,p=1):l>65535&&(l-=65536,i.push(l>>>10&1023|55296),l=56320|1023&l),i.push(l),r+=p}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);var n="",i=0;for(;i<e;)n+=String.fromCharCode.apply(String,t.slice(i,i+=4096));return n}(i)}e.Buffer=c,e.SlowBuffer=function(t){+t!=t&&(t=0);return c.alloc(+t)},e.INSPECT_MAX_BYTES=50,c.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=o(),c.poolSize=8192,c._augment=function(t){return t.__proto__=c.prototype,t},c.from=function(t,e,n){return u(null,t,e,n)},c.TYPED_ARRAY_SUPPORT&&(c.prototype.__proto__=Uint8Array.prototype,c.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&c[Symbol.species]===c&&Object.defineProperty(c,Symbol.species,{value:null,configurable:!0})),c.alloc=function(t,e,n){return function(t,e,n,i){return l(e),e<=0?s(t,e):void 0!==n?"string"==typeof i?s(t,e).fill(n,i):s(t,e).fill(n):s(t,e)}(null,t,e,n)},c.allocUnsafe=function(t){return p(null,t)},c.allocUnsafeSlow=function(t){return p(null,t)},c.isBuffer=function(t){return!(null==t||!t._isBuffer)},c.compare=function(t,e){if(!c.isBuffer(t)||!c.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,i=e.length,r=0,a=Math.min(n,i);r<a;++r)if(t[r]!==e[r]){n=t[r],i=e[r];break}return n<i?-1:i<n?1:0},c.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(t,e){if(!a(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return c.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var i=c.allocUnsafe(e),r=0;for(n=0;n<t.length;++n){var o=t[n];if(!c.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(i,r),r+=o.length}return i},c.byteLength=h,c.prototype._isBuffer=!0,c.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)g(this,e,e+1);return this},c.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)g(this,e,e+3),g(this,e+1,e+2);return this},c.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)g(this,e,e+7),g(this,e+1,e+6),g(this,e+2,e+5),g(this,e+3,e+4);return this},c.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?T(this,0,t):m.apply(this,arguments)},c.prototype.equals=function(t){if(!c.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===c.compare(this,t)},c.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},c.prototype.compare=function(t,e,n,i,r){if(!c.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===i&&(i=0),void 0===r&&(r=this.length),e<0||n>t.length||i<0||r>this.length)throw new RangeError("out of range index");if(i>=r&&e>=n)return 0;if(i>=r)return-1;if(e>=n)return 1;if(this===t)return 0;for(var a=(r>>>=0)-(i>>>=0),o=(n>>>=0)-(e>>>=0),s=Math.min(a,o),u=this.slice(i,r),l=t.slice(e,n),p=0;p<s;++p)if(u[p]!==l[p]){a=u[p],o=l[p];break}return a<o?-1:o<a?1:0},c.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},c.prototype.indexOf=function(t,e,n){return y(this,t,e,n,!0)},c.prototype.lastIndexOf=function(t,e,n){return y(this,t,e,n,!1)},c.prototype.write=function(t,e,n,i){if(void 0===e)i="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)i=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===i&&(i="utf8")):(i=n,n=void 0)}var r=this.length-e;if((void 0===n||n>r)&&(n=r),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var a=!1;;)switch(i){case"hex":return v(this,t,e,n);case"utf8":case"utf-8":return w(this,t,e,n);case"ascii":return x(this,t,e,n);case"latin1":case"binary":return D(this,t,e,n);case"base64":return _(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,t,e,n);default:if(a)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),a=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function C(t,e,n){var i="";n=Math.min(t.length,n);for(var r=e;r<n;++r)i+=String.fromCharCode(127&t[r]);return i}function S(t,e,n){var i="";n=Math.min(t.length,n);for(var r=e;r<n;++r)i+=String.fromCharCode(t[r]);return i}function A(t,e,n){var i=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>i)&&(n=i);for(var r="",a=e;a<n;++a)r+=M(t[a]);return r}function F(t,e,n){for(var i=t.slice(e,n),r="",a=0;a<i.length;a+=2)r+=String.fromCharCode(i[a]+256*i[a+1]);return r}function j(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function O(t,e,n,i,r,a){if(!c.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>r||e<a)throw new RangeError('"value" argument is out of bounds');if(n+i>t.length)throw new RangeError("Index out of range")}function B(t,e,n,i){e<0&&(e=65535+e+1);for(var r=0,a=Math.min(t.length-n,2);r<a;++r)t[n+r]=(e&255<<8*(i?r:1-r))>>>8*(i?r:1-r)}function q(t,e,n,i){e<0&&(e=4294967295+e+1);for(var r=0,a=Math.min(t.length-n,4);r<a;++r)t[n+r]=e>>>8*(i?r:3-r)&255}function R(t,e,n,i,r,a){if(n+i>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function I(t,e,n,i,a){return a||R(t,0,n,4),r.write(t,e,n,i,23,4),n+4}function L(t,e,n,i,a){return a||R(t,0,n,8),r.write(t,e,n,i,52,8),n+8}c.prototype.slice=function(t,e){var n,i=this.length;if((t=~~t)<0?(t+=i)<0&&(t=0):t>i&&(t=i),(e=void 0===e?i:~~e)<0?(e+=i)<0&&(e=0):e>i&&(e=i),e<t&&(e=t),c.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=c.prototype;else{var r=e-t;n=new c(r,void 0);for(var a=0;a<r;++a)n[a]=this[a+t]}return n},c.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||j(t,e,this.length);for(var i=this[t],r=1,a=0;++a<e&&(r*=256);)i+=this[t+a]*r;return i},c.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||j(t,e,this.length);for(var i=this[t+--e],r=1;e>0&&(r*=256);)i+=this[t+--e]*r;return i},c.prototype.readUInt8=function(t,e){return e||j(t,1,this.length),this[t]},c.prototype.readUInt16LE=function(t,e){return e||j(t,2,this.length),this[t]|this[t+1]<<8},c.prototype.readUInt16BE=function(t,e){return e||j(t,2,this.length),this[t]<<8|this[t+1]},c.prototype.readUInt32LE=function(t,e){return e||j(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},c.prototype.readUInt32BE=function(t,e){return e||j(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},c.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||j(t,e,this.length);for(var i=this[t],r=1,a=0;++a<e&&(r*=256);)i+=this[t+a]*r;return i>=(r*=128)&&(i-=Math.pow(2,8*e)),i},c.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||j(t,e,this.length);for(var i=e,r=1,a=this[t+--i];i>0&&(r*=256);)a+=this[t+--i]*r;return a>=(r*=128)&&(a-=Math.pow(2,8*e)),a},c.prototype.readInt8=function(t,e){return e||j(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},c.prototype.readInt16LE=function(t,e){e||j(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt16BE=function(t,e){e||j(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt32LE=function(t,e){return e||j(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},c.prototype.readInt32BE=function(t,e){return e||j(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},c.prototype.readFloatLE=function(t,e){return e||j(t,4,this.length),r.read(this,t,!0,23,4)},c.prototype.readFloatBE=function(t,e){return e||j(t,4,this.length),r.read(this,t,!1,23,4)},c.prototype.readDoubleLE=function(t,e){return e||j(t,8,this.length),r.read(this,t,!0,52,8)},c.prototype.readDoubleBE=function(t,e){return e||j(t,8,this.length),r.read(this,t,!1,52,8)},c.prototype.writeUIntLE=function(t,e,n,i){(t=+t,e|=0,n|=0,i)||O(this,t,e,n,Math.pow(2,8*n)-1,0);var r=1,a=0;for(this[e]=255&t;++a<n&&(r*=256);)this[e+a]=t/r&255;return e+n},c.prototype.writeUIntBE=function(t,e,n,i){(t=+t,e|=0,n|=0,i)||O(this,t,e,n,Math.pow(2,8*n)-1,0);var r=n-1,a=1;for(this[e+r]=255&t;--r>=0&&(a*=256);)this[e+r]=t/a&255;return e+n},c.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||O(this,t,e,1,255,0),c.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},c.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||O(this,t,e,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):B(this,t,e,!0),e+2},c.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||O(this,t,e,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):B(this,t,e,!1),e+2},c.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||O(this,t,e,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):q(this,t,e,!0),e+4},c.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||O(this,t,e,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):q(this,t,e,!1),e+4},c.prototype.writeIntLE=function(t,e,n,i){if(t=+t,e|=0,!i){var r=Math.pow(2,8*n-1);O(this,t,e,n,r-1,-r)}var a=0,o=1,s=0;for(this[e]=255&t;++a<n&&(o*=256);)t<0&&0===s&&0!==this[e+a-1]&&(s=1),this[e+a]=(t/o>>0)-s&255;return e+n},c.prototype.writeIntBE=function(t,e,n,i){if(t=+t,e|=0,!i){var r=Math.pow(2,8*n-1);O(this,t,e,n,r-1,-r)}var a=n-1,o=1,s=0;for(this[e+a]=255&t;--a>=0&&(o*=256);)t<0&&0===s&&0!==this[e+a+1]&&(s=1),this[e+a]=(t/o>>0)-s&255;return e+n},c.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||O(this,t,e,1,127,-128),c.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},c.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||O(this,t,e,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):B(this,t,e,!0),e+2},c.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||O(this,t,e,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):B(this,t,e,!1),e+2},c.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||O(this,t,e,4,2147483647,-2147483648),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):q(this,t,e,!0),e+4},c.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||O(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):q(this,t,e,!1),e+4},c.prototype.writeFloatLE=function(t,e,n){return I(this,t,e,!0,n)},c.prototype.writeFloatBE=function(t,e,n){return I(this,t,e,!1,n)},c.prototype.writeDoubleLE=function(t,e,n){return L(this,t,e,!0,n)},c.prototype.writeDoubleBE=function(t,e,n){return L(this,t,e,!1,n)},c.prototype.copy=function(t,e,n,i){if(n||(n=0),i||0===i||(i=this.length),e>=t.length&&(e=t.length),e||(e=0),i>0&&i<n&&(i=n),i===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),t.length-e<i-n&&(i=t.length-e+n);var r,a=i-n;if(this===t&&n<e&&e<i)for(r=a-1;r>=0;--r)t[r+e]=this[r+n];else if(a<1e3||!c.TYPED_ARRAY_SUPPORT)for(r=0;r<a;++r)t[r+e]=this[r+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+a),e);return a},c.prototype.fill=function(t,e,n,i){if("string"==typeof t){if("string"==typeof e?(i=e,e=0,n=this.length):"string"==typeof n&&(i=n,n=this.length),1===t.length){var r=t.charCodeAt(0);r<256&&(t=r)}if(void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!c.isEncoding(i))throw new TypeError("Unknown encoding: "+i)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var a;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"==typeof t)for(a=e;a<n;++a)this[a]=t;else{var o=c.isBuffer(t)?t:z(new c(t,i).toString()),s=o.length;for(a=0;a<n-e;++a)this[a+e]=o[a%s]}return this};var P=/[^+\/0-9A-Za-z-_]/g;function M(t){return t<16?"0"+t.toString(16):t.toString(16)}function z(t,e){var n;e=e||1/0;for(var i=t.length,r=null,a=[],o=0;o<i;++o){if((n=t.charCodeAt(o))>55295&&n<57344){if(!r){if(n>56319){(e-=3)>-1&&a.push(239,191,189);continue}if(o+1===i){(e-=3)>-1&&a.push(239,191,189);continue}r=n;continue}if(n<56320){(e-=3)>-1&&a.push(239,191,189),r=n;continue}n=65536+(r-55296<<10|n-56320)}else r&&(e-=3)>-1&&a.push(239,191,189);if(r=null,n<128){if((e-=1)<0)break;a.push(n)}else if(n<2048){if((e-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function U(t){return i.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(P,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function N(t,e,n,i){for(var r=0;r<i&&!(r+n>=e.length||r>=t.length);++r)e[r+n]=t[r];return r}}).call(this,n(4))},function(t,e,n){var i=n(1),r=i.Buffer;function a(t,e){for(var n in t)e[n]=t[n]}function o(t,e,n){return r(t,e,n)}r.from&&r.alloc&&r.allocUnsafe&&r.allocUnsafeSlow?t.exports=i:(a(i,e),e.Buffer=o),a(r,o),o.from=function(t,e,n){if("number"==typeof t)throw new TypeError("Argument must not be a number");return r(t,e,n)},o.alloc=function(t,e,n){if("number"!=typeof t)throw new TypeError("Argument must be a number");var i=r(t);return void 0!==e?"string"==typeof n?i.fill(e,n):i.fill(e):i.fill(0),i},o.allocUnsafe=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return r(t)},o.allocUnsafeSlow=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return i.SlowBuffer(t)}},function(t,e){var n,i,r=t.exports={};function a(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(t){n=a}try{i="function"==typeof clearTimeout?clearTimeout:o}catch(t){i=o}}();var c,u=[],l=!1,p=-1;function f(){l&&c&&(l=!1,c.length?u=c.concat(u):p=-1,u.length&&d())}function d(){if(!l){var t=s(f);l=!0;for(var e=u.length;e;){for(c=u,u=[];++p<e;)c&&c[p].run();p=-1,e=u.length}c=null,l=!1,function(t){if(i===clearTimeout)return clearTimeout(t);if((i===o||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(t);try{i(t)}catch(e){try{return i.call(null,t)}catch(e){return i.call(this,t)}}}(t)}}function h(t,e){this.fun=t,this.array=e}function m(){}r.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];u.push(new h(t,e)),1!==u.length||l||s(d)},h.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=m,r.addListener=m,r.once=m,r.off=m,r.removeListener=m,r.removeAllListeners=m,r.emit=m,r.prependListener=m,r.prependOnceListener=m,r.listeners=function(t){return[]},r.binding=function(t){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(t){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e){},function(t,e){t.exports=function(t){var e=typeof t;return null!=t&&("object"==e||"function"==e)}},function(t,e){var n=Array.isArray;t.exports=n},function(t,e,n){"use strict";var i=n(27),r=Object.keys||function(t){var e=[];for(var n in t)e.push(n);return e};t.exports=p;var a=n(11);a.inherits=n(0);var o=n(65),s=n(41);a.inherits(p,o);for(var c=r(s.prototype),u=0;u<c.length;u++){var l=c[u];p.prototype[l]||(p.prototype[l]=s.prototype[l])}function p(t){if(!(this instanceof p))return new p(t);o.call(this,t),s.call(this,t),t&&!1===t.readable&&(this.readable=!1),t&&!1===t.writable&&(this.writable=!1),this.allowHalfOpen=!0,t&&!1===t.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",f)}function f(){this.allowHalfOpen||this._writableState.ended||i.nextTick(d,this)}function d(t){t.end()}Object.defineProperty(p.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(p.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(t){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=t,this._writableState.destroyed=t)}}),p.prototype._destroy=function(t,e){this.push(null),this.end(),i.nextTick(e,t)}},function(t,e,n){var i=n(49),r="object"==typeof self&&self&&self.Object===Object&&self,a=i||r||Function("return this")();t.exports=a},function(t,e){t.exports=function(t){return null!=t&&"object"==typeof t}},function(t,e,n){(function(t){function n(t){return Object.prototype.toString.call(t)}e.isArray=function(t){return Array.isArray?Array.isArray(t):"[object Array]"===n(t)},e.isBoolean=function(t){return"boolean"==typeof t},e.isNull=function(t){return null===t},e.isNullOrUndefined=function(t){return null==t},e.isNumber=function(t){return"number"==typeof t},e.isString=function(t){return"string"==typeof t},e.isSymbol=function(t){return"symbol"==typeof t},e.isUndefined=function(t){return void 0===t},e.isRegExp=function(t){return"[object RegExp]"===n(t)},e.isObject=function(t){return"object"==typeof t&&null!==t},e.isDate=function(t){return"[object Date]"===n(t)},e.isError=function(t){return"[object Error]"===n(t)||t instanceof Error},e.isFunction=function(t){return"function"==typeof t},e.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},e.isBuffer=t.isBuffer}).call(this,n(1).Buffer)},function(t,e,n){"use strict";t.exports={}},function(t,e,n){(function(t){var i=Object.getOwnPropertyDescriptors||function(t){for(var e=Object.keys(t),n={},i=0;i<e.length;i++)n[e[i]]=Object.getOwnPropertyDescriptor(t,e[i]);return n},r=/%[sdj%]/g;e.format=function(t){if(!y(t)){for(var e=[],n=0;n<arguments.length;n++)e.push(s(arguments[n]));return e.join(" ")}n=1;for(var i=arguments,a=i.length,o=String(t).replace(r,(function(t){if("%%"===t)return"%";if(n>=a)return t;switch(t){case"%s":return String(i[n++]);case"%d":return Number(i[n++]);case"%j":try{return JSON.stringify(i[n++])}catch(t){return"[Circular]"}default:return t}})),c=i[n];n<a;c=i[++n])m(c)||!w(c)?o+=" "+c:o+=" "+s(c);return o},e.deprecate=function(n,i){if(void 0!==t&&!0===t.noDeprecation)return n;if(void 0===t)return function(){return e.deprecate(n,i).apply(this,arguments)};var r=!1;return function(){if(!r){if(t.throwDeprecation)throw new Error(i);t.traceDeprecation?console.trace(i):console.error(i),r=!0}return n.apply(this,arguments)}};var a,o={};function s(t,n){var i={seen:[],stylize:u};return arguments.length>=3&&(i.depth=arguments[2]),arguments.length>=4&&(i.colors=arguments[3]),h(n)?i.showHidden=n:n&&e._extend(i,n),b(i.showHidden)&&(i.showHidden=!1),b(i.depth)&&(i.depth=2),b(i.colors)&&(i.colors=!1),b(i.customInspect)&&(i.customInspect=!0),i.colors&&(i.stylize=c),l(i,t,i.depth)}function c(t,e){var n=s.styles[e];return n?"["+s.colors[n][0]+"m"+t+"["+s.colors[n][1]+"m":t}function u(t,e){return t}function l(t,n,i){if(t.customInspect&&n&&_(n.inspect)&&n.inspect!==e.inspect&&(!n.constructor||n.constructor.prototype!==n)){var r=n.inspect(i,t);return y(r)||(r=l(t,r,i)),r}var a=function(t,e){if(b(e))return t.stylize("undefined","undefined");if(y(e)){var n="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(n,"string")}if(g(e))return t.stylize(""+e,"number");if(h(e))return t.stylize(""+e,"boolean");if(m(e))return t.stylize("null","null")}(t,n);if(a)return a;var o=Object.keys(n),s=function(t){var e={};return t.forEach((function(t,n){e[t]=!0})),e}(o);if(t.showHidden&&(o=Object.getOwnPropertyNames(n)),D(n)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return p(n);if(0===o.length){if(_(n)){var c=n.name?": "+n.name:"";return t.stylize("[Function"+c+"]","special")}if(v(n))return t.stylize(RegExp.prototype.toString.call(n),"regexp");if(x(n))return t.stylize(Date.prototype.toString.call(n),"date");if(D(n))return p(n)}var u,w="",E=!1,k=["{","}"];(d(n)&&(E=!0,k=["[","]"]),_(n))&&(w=" [Function"+(n.name?": "+n.name:"")+"]");return v(n)&&(w=" "+RegExp.prototype.toString.call(n)),x(n)&&(w=" "+Date.prototype.toUTCString.call(n)),D(n)&&(w=" "+p(n)),0!==o.length||E&&0!=n.length?i<0?v(n)?t.stylize(RegExp.prototype.toString.call(n),"regexp"):t.stylize("[Object]","special"):(t.seen.push(n),u=E?function(t,e,n,i,r){for(var a=[],o=0,s=e.length;o<s;++o)S(e,String(o))?a.push(f(t,e,n,i,String(o),!0)):a.push("");return r.forEach((function(r){r.match(/^\d+$/)||a.push(f(t,e,n,i,r,!0))})),a}(t,n,i,s,o):o.map((function(e){return f(t,n,i,s,e,E)})),t.seen.pop(),function(t,e,n){if(t.reduce((function(t,e){return e.indexOf("\n")>=0&&0,t+e.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60)return n[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+n[1];return n[0]+e+" "+t.join(", ")+" "+n[1]}(u,w,k)):k[0]+w+k[1]}function p(t){return"["+Error.prototype.toString.call(t)+"]"}function f(t,e,n,i,r,a){var o,s,c;if((c=Object.getOwnPropertyDescriptor(e,r)||{value:e[r]}).get?s=c.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):c.set&&(s=t.stylize("[Setter]","special")),S(i,r)||(o="["+r+"]"),s||(t.seen.indexOf(c.value)<0?(s=m(n)?l(t,c.value,null):l(t,c.value,n-1)).indexOf("\n")>-1&&(s=a?s.split("\n").map((function(t){return"  "+t})).join("\n").substr(2):"\n"+s.split("\n").map((function(t){return"   "+t})).join("\n")):s=t.stylize("[Circular]","special")),b(o)){if(a&&r.match(/^\d+$/))return s;(o=JSON.stringify(""+r)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=t.stylize(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=t.stylize(o,"string"))}return o+": "+s}function d(t){return Array.isArray(t)}function h(t){return"boolean"==typeof t}function m(t){return null===t}function g(t){return"number"==typeof t}function y(t){return"string"==typeof t}function b(t){return void 0===t}function v(t){return w(t)&&"[object RegExp]"===E(t)}function w(t){return"object"==typeof t&&null!==t}function x(t){return w(t)&&"[object Date]"===E(t)}function D(t){return w(t)&&("[object Error]"===E(t)||t instanceof Error)}function _(t){return"function"==typeof t}function E(t){return Object.prototype.toString.call(t)}function k(t){return t<10?"0"+t.toString(10):t.toString(10)}e.debuglog=function(n){if(b(a)&&(a=t.env.NODE_DEBUG||""),n=n.toUpperCase(),!o[n])if(new RegExp("\\b"+n+"\\b","i").test(a)){var i=t.pid;o[n]=function(){var t=e.format.apply(e,arguments);console.error("%s %d: %s",n,i,t)}}else o[n]=function(){};return o[n]},e.inspect=s,s.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},s.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},e.isArray=d,e.isBoolean=h,e.isNull=m,e.isNullOrUndefined=function(t){return null==t},e.isNumber=g,e.isString=y,e.isSymbol=function(t){return"symbol"==typeof t},e.isUndefined=b,e.isRegExp=v,e.isObject=w,e.isDate=x,e.isError=D,e.isFunction=_,e.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},e.isBuffer=n(164);var T=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function C(){var t=new Date,e=[k(t.getHours()),k(t.getMinutes()),k(t.getSeconds())].join(":");return[t.getDate(),T[t.getMonth()],e].join(" ")}function S(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.log=function(){console.log("%s - %s",C(),e.format.apply(e,arguments))},e.inherits=n(0),e._extend=function(t,e){if(!e||!w(e))return t;for(var n=Object.keys(e),i=n.length;i--;)t[n[i]]=e[n[i]];return t};var A="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;function F(t,e){if(!t){var n=new Error("Promise was rejected with a falsy value");n.reason=t,t=n}return e(t)}e.promisify=function(t){if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');if(A&&t[A]){var e;if("function"!=typeof(e=t[A]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(e,A,{value:e,enumerable:!1,writable:!1,configurable:!0}),e}function e(){for(var e,n,i=new Promise((function(t,i){e=t,n=i})),r=[],a=0;a<arguments.length;a++)r.push(arguments[a]);r.push((function(t,i){t?n(t):e(i)}));try{t.apply(this,r)}catch(t){n(t)}return i}return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),A&&Object.defineProperty(e,A,{value:e,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(e,i(t))},e.promisify.custom=A,e.callbackify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');function n(){for(var n=[],i=0;i<arguments.length;i++)n.push(arguments[i]);var r=n.pop();if("function"!=typeof r)throw new TypeError("The last argument must be of type Function");var a=this,o=function(){return r.apply(a,arguments)};e.apply(this,n).then((function(e){t.nextTick(o,null,e)}),(function(e){t.nextTick(F,e,o)}))}return Object.setPrototypeOf(n,Object.getPrototypeOf(e)),Object.defineProperties(n,i(e)),n}}).call(this,n(3))},function(t,e,n){var i=n(2).Buffer;function r(t,e){this._block=i.alloc(t),this._finalSize=e,this._blockSize=t,this._len=0}r.prototype.update=function(t,e){"string"==typeof t&&(e=e||"utf8",t=i.from(t,e));for(var n=this._block,r=this._blockSize,a=t.length,o=this._len,s=0;s<a;){for(var c=o%r,u=Math.min(a-s,r-c),l=0;l<u;l++)n[c+l]=t[s+l];s+=u,(o+=u)%r==0&&this._update(n)}return this._len+=a,this},r.prototype.digest=function(t){var e=this._len%this._blockSize;this._block[e]=128,this._block.fill(0,e+1),e>=this._finalSize&&(this._update(this._block),this._block.fill(0));var n=8*this._len;if(n<=4294967295)this._block.writeUInt32BE(n,this._blockSize-4);else{var i=(4294967295&n)>>>0,r=(n-i)/4294967296;this._block.writeUInt32BE(r,this._blockSize-8),this._block.writeUInt32BE(i,this._blockSize-4)}this._update(this._block);var a=this._hash();return t?a.toString(t):a},r.prototype._update=function(){throw new Error("_update must be implemented by subclass")},t.exports=r},function(t,e,n){"use strict";(function(e){var i,r=n(1),a=r.Buffer,o={};for(i in r)r.hasOwnProperty(i)&&"SlowBuffer"!==i&&"Buffer"!==i&&(o[i]=r[i]);var s=o.Buffer={};for(i in a)a.hasOwnProperty(i)&&"allocUnsafe"!==i&&"allocUnsafeSlow"!==i&&(s[i]=a[i]);if(o.Buffer.prototype=a.prototype,s.from&&s.from!==Uint8Array.from||(s.from=function(t,e,n){if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type '+typeof t);if(t&&void 0===t.length)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);return a(t,e,n)}),s.alloc||(s.alloc=function(t,e,n){if("number"!=typeof t)throw new TypeError('The "size" argument must be of type number. Received type '+typeof t);if(t<0||t>=2*(1<<30))throw new RangeError('The value "'+t+'" is invalid for option "size"');var i=a(t);return e&&0!==e.length?"string"==typeof n?i.fill(e,n):i.fill(e):i.fill(0),i}),!o.kStringMaxLength)try{o.kStringMaxLength=e.binding("buffer").kStringMaxLength}catch(t){}o.constants||(o.constants={MAX_LENGTH:o.kMaxLength},o.kStringMaxLength&&(o.constants.MAX_STRING_LENGTH=o.kStringMaxLength)),t.exports=o}).call(this,n(3))},function(t,e,n){var i=n(22),r=n(96),a=n(97),o=i?i.toStringTag:void 0;t.exports=function(t){return null==t?void 0===t?"[object Undefined]":"[object Null]":o&&o in Object(t)?r(t):a(t)}},function(t,e,n){(e=t.exports=n(65)).Stream=e,e.Readable=e,e.Writable=n(41),e.Duplex=n(8),e.Transform=n(68),e.PassThrough=n(155)},function(t,e,n){var i=n(83),r=n(138)((function(t,e,n){i(t,e,n)}));t.exports=r},function(t,e,n){var i=n(85),r=n(86),a=n(87),o=n(88),s=n(89);function c(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var i=t[e];this.set(i[0],i[1])}}c.prototype.clear=i,c.prototype.delete=r,c.prototype.get=a,c.prototype.has=o,c.prototype.set=s,t.exports=c},function(t,e,n){var i=n(21);t.exports=function(t,e){for(var n=t.length;n--;)if(i(t[n][0],e))return n;return-1}},function(t,e){t.exports=function(t,e){return t===e||t!=t&&e!=e}},function(t,e,n){var i=n(9).Symbol;t.exports=i},function(t,e,n){var i=n(33)(Object,"create");t.exports=i},function(t,e,n){var i=n(110);t.exports=function(t,e){var n=t.__data__;return i(e)?n["string"==typeof e?"string":"hash"]:n.map}},function(t,e,n){var i=n(125),r=n(10),a=Object.prototype,o=a.hasOwnProperty,s=a.propertyIsEnumerable,c=i(function(){return arguments}())?i:function(t){return r(t)&&o.call(t,"callee")&&!s.call(t,"callee")};t.exports=c},function(t,e){var n=/^(?:0|[1-9]\d*)$/;t.exports=function(t,e){var i=typeof t;return!!(e=null==e?9007199254740991:e)&&("number"==i||"symbol"!=i&&n.test(t))&&t>-1&&t%1==0&&t<e}},function(t,e,n){"use strict";(function(e){void 0===e||!e.version||0===e.version.indexOf("v0.")||0===e.version.indexOf("v1.")&&0!==e.version.indexOf("v1.8.")?t.exports={nextTick:function(t,n,i,r){if("function"!=typeof t)throw new TypeError('"callback" argument must be a function');var a,o,s=arguments.length;switch(s){case 0:case 1:return e.nextTick(t);case 2:return e.nextTick((function(){t.call(null,n)}));case 3:return e.nextTick((function(){t.call(null,n,i)}));case 4:return e.nextTick((function(){t.call(null,n,i,r)}));default:for(a=new Array(s-1),o=0;o<a.length;)a[o++]=arguments[o];return e.nextTick((function(){t.apply(null,a)}))}}}:t.exports=e}).call(this,n(3))},function(t,e,n){"use strict";var i=n(2).Buffer,r=i.isEncoding||function(t){switch((t=""+t)&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function a(t){var e;switch(this.encoding=function(t){var e=function(t){if(!t)return"utf8";for(var e;;)switch(t){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return t;default:if(e)return;t=(""+t).toLowerCase(),e=!0}}(t);if("string"!=typeof e&&(i.isEncoding===r||!r(t)))throw new Error("Unknown encoding: "+t);return e||t}(t),this.encoding){case"utf16le":this.text=c,this.end=u,e=4;break;case"utf8":this.fillLast=s,e=4;break;case"base64":this.text=l,this.end=p,e=3;break;default:return this.write=f,void(this.end=d)}this.lastNeed=0,this.lastTotal=0,this.lastChar=i.allocUnsafe(e)}function o(t){return t<=127?0:t>>5==6?2:t>>4==14?3:t>>3==30?4:t>>6==2?-1:-2}function s(t){var e=this.lastTotal-this.lastNeed,n=function(t,e,n){if(128!=(192&e[0]))return t.lastNeed=0,"�";if(t.lastNeed>1&&e.length>1){if(128!=(192&e[1]))return t.lastNeed=1,"�";if(t.lastNeed>2&&e.length>2&&128!=(192&e[2]))return t.lastNeed=2,"�"}}(this,t);return void 0!==n?n:this.lastNeed<=t.length?(t.copy(this.lastChar,e,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(t.copy(this.lastChar,e,0,t.length),void(this.lastNeed-=t.length))}function c(t,e){if((t.length-e)%2==0){var n=t.toString("utf16le",e);if(n){var i=n.charCodeAt(n.length-1);if(i>=55296&&i<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=t[t.length-1],t.toString("utf16le",e,t.length-1)}function u(t){var e=t&&t.length?this.write(t):"";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return e+this.lastChar.toString("utf16le",0,n)}return e}function l(t,e){var n=(t.length-e)%3;return 0===n?t.toString("base64",e):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=t[t.length-1]:(this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1]),t.toString("base64",e,t.length-n))}function p(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+this.lastChar.toString("base64",0,3-this.lastNeed):e}function f(t){return t.toString(this.encoding)}function d(t){return t&&t.length?this.write(t):""}e.StringDecoder=a,a.prototype.write=function(t){if(0===t.length)return"";var e,n;if(this.lastNeed){if(void 0===(e=this.fillLast(t)))return"";n=this.lastNeed,this.lastNeed=0}else n=0;return n<t.length?e?e+this.text(t,n):this.text(t,n):e||""},a.prototype.end=function(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+"�":e},a.prototype.text=function(t,e){var n=function(t,e,n){var i=e.length-1;if(i<n)return 0;var r=o(e[i]);if(r>=0)return r>0&&(t.lastNeed=r-1),r;if(--i<n||-2===r)return 0;if((r=o(e[i]))>=0)return r>0&&(t.lastNeed=r-2),r;if(--i<n||-2===r)return 0;if((r=o(e[i]))>=0)return r>0&&(2===r?r=0:t.lastNeed=r-3),r;return 0}(this,t,e);if(!this.lastNeed)return t.toString("utf8",e);this.lastTotal=n;var i=t.length-(n-this.lastNeed);return t.copy(this.lastChar,0,i),t.toString("utf8",e,i)},a.prototype.fillLast=function(t){if(this.lastNeed<=t.length)return t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,t.length),this.lastNeed-=t.length}},function(t,e,n){(function(e){const i=n(12),r=n(162),a=n(69),o=n(12).lookup,s=n(12),c=n(163),u=n(31),l={hostValidationRegex:/^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$/,validateSchema:function(t,e){(Array.isArray(t)||"object"!=typeof t)&&(t={type:t});const n=()=>JSON.stringify(e,null,2),i=()=>JSON.stringify(t,null,2),r=Array.isArray(t.type)?t.type:[t.type],a=Array.isArray(e)?"array":typeof e;if(-1==r.indexOf(a)){const t=`Wrong data type "${a}" instead of "${r}" ${n()} for ${i()}`;throw new u.WorkError(t,"ERR_STORACLE_VALIDATE_SCHEMA_WRONG_DATA_TYPE")}if("array"==a){const r="function"==typeof t.minLength?r(e):t.minLength,a="function"==typeof t.maxLength?a(e):t.maxLength;if(r&&e.length<r){const t=`Wrong array min length ${n()} for ${i()}`;throw new u.WorkError(t,"ERR_STORACLE_VALIDATE_SCHEMA_WRONG_ARRAY_MIN_LENGTH")}if(a&&e.length>a){const t=`Wrong array max length ${n()} for ${i()}`;throw new u.WorkError(t,"ERR_STORACLE_VALIDATE_SCHEMA_WRONG_ARRAY_MAX_LENGTH")}t.items&&e.forEach(e=>this.validateSchema(t.items,e))}else if("object"==a){const r=t.props||{},a=t.required;if(a&&!Array.isArray(a))throw new Error(`Option "required" for ${i()} must be an array`);if(t.canBeNull&&null===e)return;if(!1===t.canBeNull&&null===e){const t=`Data for ${i()} can't be null`;throw new u.WorkError(t,"ERR_STORACLE_VALIDATE_SCHEMA_NULL")}if(t.strict){const t=Object.keys(r).sort(),a=Object.keys(e).sort();if(t.toString()!=a.toString()){const t=`Wrong strict object structure ${n()} for ${i()}`;throw new u.WorkError(t,"ERR_STORACLE_VALIDATE_SCHEMA_STRICT")}}if(t.expected)for(let t in e)if(!r.hasOwnProperty(t)){const t=`Wrong expected object structure ${n()} for ${i()}`;throw new u.WorkError(t,"ERR_STORACLE_VALIDATE_SCHEMA_EXPECTED")}const o={};a&&a.forEach(t=>o[t]=!0);for(let t in r)if(e.hasOwnProperty(t))this.validateSchema(r[t],e[t]);else if(a&&o[t]){const e=`Property "${t}" is required in ${n()} for ${i()}`;throw new u.WorkError(e,"ERR_STORACLE_VALIDATE_SCHEMA_REQUIRED_PROPS")}}if(!t.hasOwnProperty("value"))return;let o;if("function"==typeof t.value)o=t.value(e);else if(t.value instanceof RegExp)o=String(e).match(t.value);else{o=-1!=(Array.isArray(t.value)?t.value:[t.value]).indexOf(e)}if(!o){const t=`Validation is failed for ${n()}`;throw new u.WorkError(t,"ERR_STORACLE_VALIDATE_SCHEMA_VALUE")}},isBrowserEnv:function(){return"object"==typeof window},getRandomElement:function(t){return t[Math.floor(Math.random()*t.length)]},getMs:function(t){return"string"!=typeof t||"auto"==t?t:a(t)},getBytes:function(t){return"string"!=typeof t||t.match("%")||"auto"==t?t:r(t)},getCpuUsage:async function(t={}){return await new Promise((n,i)=>{const r=e.cpuUsage(),a=e.hrtime();setTimeout(()=>{try{const t=e.cpuUsage(r),i=e.hrtime(a),o=1e6*i[0]+i[1]/1e3,s=100*(t.user+t.system)/o;n(s)}catch(t){i(t)}},t.timeout||1e3)})},isPortUsed:async function(t){return await s.check(+t,"localhost")},getHostIp:async function(t){return"localhost"==t?"127.0.0.1":this.isValidIp(t)?t:await new Promise((e,n)=>{o(t,(t,i)=>t?"ENOTFOUND"==t.code?e(null):n(t):e(i))})},getAddressIp:async function(t){return await this.getHostIp(this.splitAddress(t)[0])},getRequestTimer:function(t,e={}){let n=Date.now();return i=>{if(void 0===t)return;const r=Date.now();if(t-=r-n,n=r,i&&!Array.isArray(i)&&(i=[i]),i){let n=i.reduce((t,e)=>t+e)/t,r=n>1?i[0]/n:i[0],a=e.min>t?t:e.min;return a&&r<a&&(r=a),r>0?r:0}return t}},getRemoteIp:function(t){let e=(t.headers["x-forwarded-for"]||t.connection.remoteAddress||"").split(",")[0].trim();return e.match(":")&&(e=e.replace("::1","127.0.0.1"),e.match(".")&&(e=e.replace(/^::ffff:/,"")),this.isIpv6(e)&&(e=this.getFullIpv6(e))),e},getFullIpv6:function(t){return c.parse(t).toString({format:"v6",zeroElide:!1,zeroPad:!0})},isIpv6:function(t){return!("string"!=typeof t||!t.match(":")||!i(t))},ipv4Tov6:function(t){return this.getFullIpv6("::ffff:"+t)},isIpEqual:function(t,e){return 0==c.compare(c.parse(t),c.parse(e))},createAddress:function(t,e){return this.isIpv6(t)?`[${this.getFullIpv6(t)}]:${e}`:`${t}:${e}`},isValidPort:function(t){return+t>0&&+t<=65535},isValidIp:function(t){return i(t)},isValidHostname:function(t){return"string"==typeof t&&(this.hostValidationRegex.test(t)||this.isValidIp(t))},isValidAddress:function(t){if(!t||"string"!=typeof t)return!1;const e=this.splitAddress(t),n=e[0],i=e[1];return this.isValidHostname(n)&&this.isValidPort(i)},splitAddress:function(t){let e;return t&&"string"==typeof t?t.match("]")?(e=t.split("]:"),[this.getFullIpv6(e[0].slice(1)),+e[1]]):(e=t.split(":"),[e[0],+e[1]]):[]},createRequestTimeoutError:function(){const t=new Error("Request timed out");return t.code="ERR_SPREADABLE_REQUEST_TIMEDOUT",t},isRequestTimeoutError:function(t){return-1!=["ESOCKETTIMEDOUT","ETIMEDOUT"].indexOf(t.code)||"request-timeout"==t.type}};t.exports=l}).call(this,n(3))},function(t,e,n){t.exports=r;var i=n(40).EventEmitter;function r(){i.call(this)}n(0)(r,i),r.Readable=n(17),r.Writable=n(165),r.Duplex=n(166),r.Transform=n(167),r.PassThrough=n(168),r.Stream=r,r.prototype.pipe=function(t,e){var n=this;function r(e){t.writable&&!1===t.write(e)&&n.pause&&n.pause()}function a(){n.readable&&n.resume&&n.resume()}n.on("data",r),t.on("drain",a),t._isStdio||e&&!1===e.end||(n.on("end",s),n.on("close",c));var o=!1;function s(){o||(o=!0,t.end())}function c(){o||(o=!0,"function"==typeof t.destroy&&t.destroy())}function u(t){if(l(),0===i.listenerCount(this,"error"))throw t}function l(){n.removeListener("data",r),t.removeListener("drain",a),n.removeListener("end",s),n.removeListener("close",c),n.removeListener("error",u),t.removeListener("error",u),n.removeListener("end",l),n.removeListener("close",l),t.removeListener("close",l)}return n.on("error",u),t.on("error",u),n.on("end",l),n.on("close",l),t.on("close",l),t.emit("pipe",n),t}},function(t,e){t.exports.WorkError=class extends Error{constructor(t,e){super(t),this.code=e}},t.exports.AccessError=class extends Error{constructor(t){super(t),this.statusCode=403}},t.exports.NotFoundError=class extends Error{constructor(t){super(t),this.statusCode=404}}},function(t,e,n){var i=n(7),r=n(218),a=n(219),o=n(222);t.exports=function(t,e){return i(t)?t:r(t,e)?[t]:a(o(t))}},function(t,e,n){var i=n(95),r=n(101);t.exports=function(t,e){var n=r(t,e);return i(n)?n:void 0}},function(t,e,n){var i=n(16),r=n(6);t.exports=function(t){if(!r(t))return!1;var e=i(t);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(t,e,n){var i=n(52);t.exports=function(t,e,n){"__proto__"==e&&i?i(t,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[e]=n}},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e,n){var i=n(34),r=n(38);t.exports=function(t){return null!=t&&r(t.length)&&!i(t)}},function(t,e){t.exports=function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}},function(t,e,n){"use strict";var i=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==i)return i;throw new Error("unable to locate global object")}();t.exports=e=i.fetch,e.default=i.fetch.bind(i),e.Headers=i.Headers,e.Request=i.Request,e.Response=i.Response},function(t,e,n){"use strict";var i,r="object"==typeof Reflect?Reflect:null,a=r&&"function"==typeof r.apply?r.apply:function(t,e,n){return Function.prototype.apply.call(t,e,n)};i=r&&"function"==typeof r.ownKeys?r.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var o=Number.isNaN||function(t){return t!=t};function s(){s.init.call(this)}t.exports=s,s.EventEmitter=s,s.prototype._events=void 0,s.prototype._eventsCount=0,s.prototype._maxListeners=void 0;var c=10;function u(t){return void 0===t._maxListeners?s.defaultMaxListeners:t._maxListeners}function l(t,e,n,i){var r,a,o,s;if("function"!=typeof n)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof n);if(void 0===(a=t._events)?(a=t._events=Object.create(null),t._eventsCount=0):(void 0!==a.newListener&&(t.emit("newListener",e,n.listener?n.listener:n),a=t._events),o=a[e]),void 0===o)o=a[e]=n,++t._eventsCount;else if("function"==typeof o?o=a[e]=i?[n,o]:[o,n]:i?o.unshift(n):o.push(n),(r=u(t))>0&&o.length>r&&!o.warned){o.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=t,c.type=e,c.count=o.length,s=c,console&&console.warn&&console.warn(s)}return t}function p(){for(var t=[],e=0;e<arguments.length;e++)t.push(arguments[e]);this.fired||(this.target.removeListener(this.type,this.wrapFn),this.fired=!0,a(this.listener,this.target,t))}function f(t,e,n){var i={fired:!1,wrapFn:void 0,target:t,type:e,listener:n},r=p.bind(i);return r.listener=n,i.wrapFn=r,r}function d(t,e,n){var i=t._events;if(void 0===i)return[];var r=i[e];return void 0===r?[]:"function"==typeof r?n?[r.listener||r]:[r]:n?function(t){for(var e=new Array(t.length),n=0;n<e.length;++n)e[n]=t[n].listener||t[n];return e}(r):m(r,r.length)}function h(t){var e=this._events;if(void 0!==e){var n=e[t];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function m(t,e){for(var n=new Array(e),i=0;i<e;++i)n[i]=t[i];return n}Object.defineProperty(s,"defaultMaxListeners",{enumerable:!0,get:function(){return c},set:function(t){if("number"!=typeof t||t<0||o(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");c=t}}),s.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},s.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||o(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this},s.prototype.getMaxListeners=function(){return u(this)},s.prototype.emit=function(t){for(var e=[],n=1;n<arguments.length;n++)e.push(arguments[n]);var i="error"===t,r=this._events;if(void 0!==r)i=i&&void 0===r.error;else if(!i)return!1;if(i){var o;if(e.length>0&&(o=e[0]),o instanceof Error)throw o;var s=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw s.context=o,s}var c=r[t];if(void 0===c)return!1;if("function"==typeof c)a(c,this,e);else{var u=c.length,l=m(c,u);for(n=0;n<u;++n)a(l[n],this,e)}return!0},s.prototype.addListener=function(t,e){return l(this,t,e,!1)},s.prototype.on=s.prototype.addListener,s.prototype.prependListener=function(t,e){return l(this,t,e,!0)},s.prototype.once=function(t,e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e);return this.on(t,f(this,t,e)),this},s.prototype.prependOnceListener=function(t,e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e);return this.prependListener(t,f(this,t,e)),this},s.prototype.removeListener=function(t,e){var n,i,r,a,o;if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e);if(void 0===(i=this._events))return this;if(void 0===(n=i[t]))return this;if(n===e||n.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete i[t],i.removeListener&&this.emit("removeListener",t,n.listener||e));else if("function"!=typeof n){for(r=-1,a=n.length-1;a>=0;a--)if(n[a]===e||n[a].listener===e){o=n[a].listener,r=a;break}if(r<0)return this;0===r?n.shift():function(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}(n,r),1===n.length&&(i[t]=n[0]),void 0!==i.removeListener&&this.emit("removeListener",t,o||e)}return this},s.prototype.off=s.prototype.removeListener,s.prototype.removeAllListeners=function(t){var e,n,i;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[t]),this;if(0===arguments.length){var r,a=Object.keys(n);for(i=0;i<a.length;++i)"removeListener"!==(r=a[i])&&this.removeAllListeners(r);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(e=n[t]))this.removeListener(t,e);else if(void 0!==e)for(i=e.length-1;i>=0;i--)this.removeListener(t,e[i]);return this},s.prototype.listeners=function(t){return d(this,t,!0)},s.prototype.rawListeners=function(t){return d(this,t,!1)},s.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):h.call(t,e)},s.prototype.listenerCount=h,s.prototype.eventNames=function(){return this._eventsCount>0?i(this._events):[]}},function(t,e,n){"use strict";(function(e,i,r){var a=n(27);function o(t){var e=this;this.next=null,this.entry=null,this.finish=function(){!function(t,e,n){var i=t.entry;t.entry=null;for(;i;){var r=i.callback;e.pendingcb--,r(n),i=i.next}e.corkedRequestsFree?e.corkedRequestsFree.next=t:e.corkedRequestsFree=t}(e,t)}}t.exports=b;var s,c=!e.browser&&["v0.10","v0.9."].indexOf(e.version.slice(0,5))>-1?i:a.nextTick;b.WritableState=y;var u=n(11);u.inherits=n(0);var l={deprecate:n(154)},p=n(66),f=n(2).Buffer,d=r.Uint8Array||function(){};var h,m=n(67);function g(){}function y(t,e){s=s||n(8),t=t||{};var i=e instanceof s;this.objectMode=!!t.objectMode,i&&(this.objectMode=this.objectMode||!!t.writableObjectMode);var r=t.highWaterMark,u=t.writableHighWaterMark,l=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:i&&(u||0===u)?u:l,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var p=!1===t.decodeStrings;this.decodeStrings=!p,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(t){!function(t,e){var n=t._writableState,i=n.sync,r=n.writecb;if(function(t){t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0}(n),e)!function(t,e,n,i,r){--e.pendingcb,n?(a.nextTick(r,i),a.nextTick(E,t,e),t._writableState.errorEmitted=!0,t.emit("error",i)):(r(i),t._writableState.errorEmitted=!0,t.emit("error",i),E(t,e))}(t,n,i,e,r);else{var o=D(n);o||n.corked||n.bufferProcessing||!n.bufferedRequest||x(t,n),i?c(w,t,n,o,r):w(t,n,o,r)}}(e,t)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new o(this)}function b(t){if(s=s||n(8),!(h.call(b,this)||this instanceof s))return new b(t);this._writableState=new y(t,this),this.writable=!0,t&&("function"==typeof t.write&&(this._write=t.write),"function"==typeof t.writev&&(this._writev=t.writev),"function"==typeof t.destroy&&(this._destroy=t.destroy),"function"==typeof t.final&&(this._final=t.final)),p.call(this)}function v(t,e,n,i,r,a,o){e.writelen=i,e.writecb=o,e.writing=!0,e.sync=!0,n?t._writev(r,e.onwrite):t._write(r,a,e.onwrite),e.sync=!1}function w(t,e,n,i){n||function(t,e){0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain"))}(t,e),e.pendingcb--,i(),E(t,e)}function x(t,e){e.bufferProcessing=!0;var n=e.bufferedRequest;if(t._writev&&n&&n.next){var i=e.bufferedRequestCount,r=new Array(i),a=e.corkedRequestsFree;a.entry=n;for(var s=0,c=!0;n;)r[s]=n,n.isBuf||(c=!1),n=n.next,s+=1;r.allBuffers=c,v(t,e,!0,e.length,r,"",a.finish),e.pendingcb++,e.lastBufferedRequest=null,a.next?(e.corkedRequestsFree=a.next,a.next=null):e.corkedRequestsFree=new o(e),e.bufferedRequestCount=0}else{for(;n;){var u=n.chunk,l=n.encoding,p=n.callback;if(v(t,e,!1,e.objectMode?1:u.length,u,l,p),n=n.next,e.bufferedRequestCount--,e.writing)break}null===n&&(e.lastBufferedRequest=null)}e.bufferedRequest=n,e.bufferProcessing=!1}function D(t){return t.ending&&0===t.length&&null===t.bufferedRequest&&!t.finished&&!t.writing}function _(t,e){t._final((function(n){e.pendingcb--,n&&t.emit("error",n),e.prefinished=!0,t.emit("prefinish"),E(t,e)}))}function E(t,e){var n=D(e);return n&&(!function(t,e){e.prefinished||e.finalCalled||("function"==typeof t._final?(e.pendingcb++,e.finalCalled=!0,a.nextTick(_,t,e)):(e.prefinished=!0,t.emit("prefinish")))}(t,e),0===e.pendingcb&&(e.finished=!0,t.emit("finish"))),n}u.inherits(b,p),y.prototype.getBuffer=function(){for(var t=this.bufferedRequest,e=[];t;)e.push(t),t=t.next;return e},function(){try{Object.defineProperty(y.prototype,"buffer",{get:l.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(t){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(h=Function.prototype[Symbol.hasInstance],Object.defineProperty(b,Symbol.hasInstance,{value:function(t){return!!h.call(this,t)||this===b&&(t&&t._writableState instanceof y)}})):h=function(t){return t instanceof this},b.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},b.prototype.write=function(t,e,n){var i,r=this._writableState,o=!1,s=!r.objectMode&&(i=t,f.isBuffer(i)||i instanceof d);return s&&!f.isBuffer(t)&&(t=function(t){return f.from(t)}(t)),"function"==typeof e&&(n=e,e=null),s?e="buffer":e||(e=r.defaultEncoding),"function"!=typeof n&&(n=g),r.ended?function(t,e){var n=new Error("write after end");t.emit("error",n),a.nextTick(e,n)}(this,n):(s||function(t,e,n,i){var r=!0,o=!1;return null===n?o=new TypeError("May not write null values to stream"):"string"==typeof n||void 0===n||e.objectMode||(o=new TypeError("Invalid non-string/buffer chunk")),o&&(t.emit("error",o),a.nextTick(i,o),r=!1),r}(this,r,t,n))&&(r.pendingcb++,o=function(t,e,n,i,r,a){if(!n){var o=function(t,e,n){t.objectMode||!1===t.decodeStrings||"string"!=typeof e||(e=f.from(e,n));return e}(e,i,r);i!==o&&(n=!0,r="buffer",i=o)}var s=e.objectMode?1:i.length;e.length+=s;var c=e.length<e.highWaterMark;c||(e.needDrain=!0);if(e.writing||e.corked){var u=e.lastBufferedRequest;e.lastBufferedRequest={chunk:i,encoding:r,isBuf:n,callback:a,next:null},u?u.next=e.lastBufferedRequest:e.bufferedRequest=e.lastBufferedRequest,e.bufferedRequestCount+=1}else v(t,e,!1,s,i,r,a);return c}(this,r,s,t,e,n)),o},b.prototype.cork=function(){this._writableState.corked++},b.prototype.uncork=function(){var t=this._writableState;t.corked&&(t.corked--,t.writing||t.corked||t.finished||t.bufferProcessing||!t.bufferedRequest||x(this,t))},b.prototype.setDefaultEncoding=function(t){if("string"==typeof t&&(t=t.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((t+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+t);return this._writableState.defaultEncoding=t,this},Object.defineProperty(b.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),b.prototype._write=function(t,e,n){n(new Error("_write() is not implemented"))},b.prototype._writev=null,b.prototype.end=function(t,e,n){var i=this._writableState;"function"==typeof t?(n=t,t=null,e=null):"function"==typeof e&&(n=e,e=null),null!=t&&this.write(t,e),i.corked&&(i.corked=1,this.uncork()),i.ending||i.finished||function(t,e,n){e.ending=!0,E(t,e),n&&(e.finished?a.nextTick(n):t.once("finish",n));e.ended=!0,t.writable=!1}(this,i,n)},Object.defineProperty(b.prototype,"destroyed",{get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(t){this._writableState&&(this._writableState.destroyed=t)}}),b.prototype.destroy=m.destroy,b.prototype._undestroy=m.undestroy,b.prototype._destroy=function(t,e){this.end(),e(t)}}).call(this,n(3),n(5).setImmediate,n(4))},function(t,e,n){(function(e,i){var r=n(70),a=n(30).Stream,o=n(13),s=/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/;function c(t){return t.charAt(0).toUpperCase()+t.slice(1)}function u(t,e,n,i,a){throw new r.AssertionError({message:o.format("%s (%s) is required",t,e),actual:void 0===a?typeof i:a(i),expected:e,operator:n||"===",stackStartFunction:u.caller})}function l(t){return Object.prototype.toString.call(t).slice(8,-1)}function p(){}var f={bool:{check:function(t){return"boolean"==typeof t}},func:{check:function(t){return"function"==typeof t}},string:{check:function(t){return"string"==typeof t}},object:{check:function(t){return"object"==typeof t&&null!==t}},number:{check:function(t){return"number"==typeof t&&!isNaN(t)}},finite:{check:function(t){return"number"==typeof t&&!isNaN(t)&&isFinite(t)}},buffer:{check:function(t){return e.isBuffer(t)},operator:"Buffer.isBuffer"},array:{check:function(t){return Array.isArray(t)},operator:"Array.isArray"},stream:{check:function(t){return t instanceof a},operator:"instanceof",actual:l},date:{check:function(t){return t instanceof Date},operator:"instanceof",actual:l},regexp:{check:function(t){return t instanceof RegExp},operator:"instanceof",actual:l},uuid:{check:function(t){return"string"==typeof t&&s.test(t)},operator:"isUUID"}};t.exports=function t(e){var n,a=Object.keys(f);return n=i.env.NODE_NDEBUG?p:function(t,e){t||u(e,"true",t)},a.forEach((function(t){if(e)n[t]=p;else{var i=f[t];n[t]=function(e,n){i.check(e)||u(n,t,i.operator,e,i.actual)}}})),a.forEach((function(t){var i="optional"+c(t);if(e)n[i]=p;else{var r=f[t];n[i]=function(e,n){null!=e&&(r.check(e)||u(n,t,r.operator,e,r.actual))}}})),a.forEach((function(t){var i="arrayOf"+c(t);if(e)n[i]=p;else{var r=f[t],a="["+t+"]";n[i]=function(t,e){var n;for(Array.isArray(t)||u(e,a,r.operator,t,r.actual),n=0;n<t.length;n++)r.check(t[n])||u(e,a,r.operator,t,r.actual)}}})),a.forEach((function(t){var i="optionalArrayOf"+c(t);if(e)n[i]=p;else{var r=f[t],a="["+t+"]";n[i]=function(t,e){var n;if(null!=t)for(Array.isArray(t)||u(e,a,r.operator,t,r.actual),n=0;n<t.length;n++)r.check(t[n])||u(e,a,r.operator,t,r.actual)}}})),Object.keys(r).forEach((function(t){n[t]="AssertionError"!==t&&e?p:r[t]})),n._setExports=t,n}(i.env.NODE_NDEBUG)}).call(this,n(1).Buffer,n(3))},function(t,e){t.exports=()=>class{async init(){this.__initialized=Date.now()}async deinit(){this.__initialized=!1}async destroy(){this.__destroying=!0,await this.deinit(),this.__destroying=!1}isInitialized(){return!!this.__initialized}isDestroying(){return!!this.__destroying}}},function(t){t.exports=JSON.parse('[["0","\\u0000",127,"€"],["8140","丂丄丅丆丏丒丗丟丠両丣並丩丮丯丱丳丵丷丼乀乁乂乄乆乊乑乕乗乚乛乢乣乤乥乧乨乪",5,"乲乴",9,"乿",6,"亇亊"],["8180","亐亖亗亙亜亝亞亣亪亯亰亱亴亶亷亸亹亼亽亾仈仌仏仐仒仚仛仜仠仢仦仧仩仭仮仯仱仴仸仹仺仼仾伀伂",6,"伋伌伒",4,"伜伝伡伣伨伩伬伭伮伱伳伵伷伹伻伾",4,"佄佅佇",5,"佒佔佖佡佢佦佨佪佫佭佮佱佲併佷佸佹佺佽侀侁侂侅來侇侊侌侎侐侒侓侕侖侘侙侚侜侞侟価侢"],["8240","侤侫侭侰",4,"侶",8,"俀俁係俆俇俈俉俋俌俍俒",4,"俙俛俠俢俤俥俧俫俬俰俲俴俵俶俷俹俻俼俽俿",11],["8280","個倎倐們倓倕倖倗倛倝倞倠倢倣値倧倫倯",10,"倻倽倿偀偁偂偄偅偆偉偊偋偍偐",4,"偖偗偘偙偛偝",7,"偦",5,"偭",8,"偸偹偺偼偽傁傂傃傄傆傇傉傊傋傌傎",20,"傤傦傪傫傭",4,"傳",6,"傼"],["8340","傽",17,"僐",5,"僗僘僙僛",10,"僨僩僪僫僯僰僱僲僴僶",4,"僼",9,"儈"],["8380","儉儊儌",5,"儓",13,"儢",28,"兂兇兊兌兎兏児兒兓兗兘兙兛兝",4,"兣兤兦內兩兪兯兲兺兾兿冃冄円冇冊冋冎冏冐冑冓冔冘冚冝冞冟冡冣冦",4,"冭冮冴冸冹冺冾冿凁凂凃凅凈凊凍凎凐凒",5],["8440","凘凙凚凜凞凟凢凣凥",5,"凬凮凱凲凴凷凾刄刅刉刋刌刏刐刓刔刕刜刞刟刡刢刣別刦刧刪刬刯刱刲刴刵刼刾剄",5,"剋剎剏剒剓剕剗剘"],["8480","剙剚剛剝剟剠剢剣剤剦剨剫剬剭剮剰剱剳",9,"剾劀劃",4,"劉",6,"劑劒劔",6,"劜劤劥劦劧劮劯劰労",9,"勀勁勂勄勅勆勈勊勌勍勎勏勑勓勔動勗務",5,"勠勡勢勣勥",10,"勱",7,"勻勼勽匁匂匃匄匇匉匊匋匌匎"],["8540","匑匒匓匔匘匛匜匞匟匢匤匥匧匨匩匫匬匭匯",9,"匼匽區卂卄卆卋卌卍卐協単卙卛卝卥卨卪卬卭卲卶卹卻卼卽卾厀厁厃厇厈厊厎厏"],["8580","厐",4,"厖厗厙厛厜厞厠厡厤厧厪厫厬厭厯",6,"厷厸厹厺厼厽厾叀參",4,"収叏叐叒叓叕叚叜叝叞叡叢叧叴叺叾叿吀吂吅吇吋吔吘吙吚吜吢吤吥吪吰吳吶吷吺吽吿呁呂呄呅呇呉呌呍呎呏呑呚呝",4,"呣呥呧呩",7,"呴呹呺呾呿咁咃咅咇咈咉咊咍咑咓咗咘咜咞咟咠咡"],["8640","咢咥咮咰咲咵咶咷咹咺咼咾哃哅哊哋哖哘哛哠",4,"哫哬哯哰哱哴",5,"哻哾唀唂唃唄唅唈唊",4,"唒唓唕",5,"唜唝唞唟唡唥唦"],["8680","唨唩唫唭唲唴唵唶唸唹唺唻唽啀啂啅啇啈啋",4,"啑啒啓啔啗",4,"啝啞啟啠啢啣啨啩啫啯",5,"啹啺啽啿喅喆喌喍喎喐喒喓喕喖喗喚喛喞喠",6,"喨",8,"喲喴営喸喺喼喿",4,"嗆嗇嗈嗊嗋嗎嗏嗐嗕嗗",4,"嗞嗠嗢嗧嗩嗭嗮嗰嗱嗴嗶嗸",4,"嗿嘂嘃嘄嘅"],["8740","嘆嘇嘊嘋嘍嘐",7,"嘙嘚嘜嘝嘠嘡嘢嘥嘦嘨嘩嘪嘫嘮嘯嘰嘳嘵嘷嘸嘺嘼嘽嘾噀",11,"噏",4,"噕噖噚噛噝",4],["8780","噣噥噦噧噭噮噯噰噲噳噴噵噷噸噹噺噽",7,"嚇",6,"嚐嚑嚒嚔",14,"嚤",10,"嚰",6,"嚸嚹嚺嚻嚽",12,"囋",8,"囕囖囘囙囜団囥",5,"囬囮囯囲図囶囷囸囻囼圀圁圂圅圇國",6],["8840","園",9,"圝圞圠圡圢圤圥圦圧圫圱圲圴",4,"圼圽圿坁坃坄坅坆坈坉坋坒",4,"坘坙坢坣坥坧坬坮坰坱坲坴坵坸坹坺坽坾坿垀"],["8880","垁垇垈垉垊垍",4,"垔",6,"垜垝垞垟垥垨垪垬垯垰垱垳垵垶垷垹",8,"埄",6,"埌埍埐埑埓埖埗埛埜埞埡埢埣埥",7,"埮埰埱埲埳埵埶執埻埼埾埿堁堃堄堅堈堉堊堌堎堏堐堒堓堔堖堗堘堚堛堜堝堟堢堣堥",4,"堫",4,"報堲堳場堶",7],["8940","堾",5,"塅",6,"塎塏塐塒塓塕塖塗塙",4,"塟",5,"塦",4,"塭",16,"塿墂墄墆墇墈墊墋墌"],["8980","墍",4,"墔",4,"墛墜墝墠",7,"墪",17,"墽墾墿壀壂壃壄壆",10,"壒壓壔壖",13,"壥",5,"壭壯壱売壴壵壷壸壺",7,"夃夅夆夈",4,"夎夐夑夒夓夗夘夛夝夞夠夡夢夣夦夨夬夰夲夳夵夶夻"],["8a40","夽夾夿奀奃奅奆奊奌奍奐奒奓奙奛",4,"奡奣奤奦",12,"奵奷奺奻奼奾奿妀妅妉妋妌妎妏妐妑妔妕妘妚妛妜妝妟妠妡妢妦"],["8a80","妧妬妭妰妱妳",5,"妺妼妽妿",6,"姇姈姉姌姍姎姏姕姖姙姛姞",4,"姤姦姧姩姪姫姭",11,"姺姼姽姾娀娂娊娋娍娎娏娐娒娔娕娖娗娙娚娛娝娞娡娢娤娦娧娨娪",6,"娳娵娷",4,"娽娾娿婁",4,"婇婈婋",9,"婖婗婘婙婛",5],["8b40","婡婣婤婥婦婨婩婫",8,"婸婹婻婼婽婾媀",17,"媓",6,"媜",13,"媫媬"],["8b80","媭",4,"媴媶媷媹",4,"媿嫀嫃",5,"嫊嫋嫍",4,"嫓嫕嫗嫙嫚嫛嫝嫞嫟嫢嫤嫥嫧嫨嫪嫬",4,"嫲",22,"嬊",11,"嬘",25,"嬳嬵嬶嬸",7,"孁",6],["8c40","孈",7,"孒孖孞孠孡孧孨孫孭孮孯孲孴孶孷學孹孻孼孾孿宂宆宊宍宎宐宑宒宔宖実宧宨宩宬宭宮宯宱宲宷宺宻宼寀寁寃寈寉寊寋寍寎寏"],["8c80","寑寔",8,"寠寢寣實寧審",4,"寯寱",6,"寽対尀専尃尅將專尋尌對導尐尒尓尗尙尛尞尟尠尡尣尦尨尩尪尫尭尮尯尰尲尳尵尶尷屃屄屆屇屌屍屒屓屔屖屗屘屚屛屜屝屟屢層屧",6,"屰屲",6,"屻屼屽屾岀岃",4,"岉岊岋岎岏岒岓岕岝",4,"岤",4],["8d40","岪岮岯岰岲岴岶岹岺岻岼岾峀峂峃峅",5,"峌",5,"峓",5,"峚",6,"峢峣峧峩峫峬峮峯峱",9,"峼",4],["8d80","崁崄崅崈",5,"崏",4,"崕崗崘崙崚崜崝崟",4,"崥崨崪崫崬崯",4,"崵",7,"崿",7,"嵈嵉嵍",10,"嵙嵚嵜嵞",10,"嵪嵭嵮嵰嵱嵲嵳嵵",12,"嶃",21,"嶚嶛嶜嶞嶟嶠"],["8e40","嶡",21,"嶸",12,"巆",6,"巎",12,"巜巟巠巣巤巪巬巭"],["8e80","巰巵巶巸",4,"巿帀帄帇帉帊帋帍帎帒帓帗帞",7,"帨",4,"帯帰帲",4,"帹帺帾帿幀幁幃幆",5,"幍",6,"幖",4,"幜幝幟幠幣",14,"幵幷幹幾庁庂広庅庈庉庌庍庎庒庘庛庝庡庢庣庤庨",4,"庮",4,"庴庺庻庼庽庿",6],["8f40","廆廇廈廋",5,"廔廕廗廘廙廚廜",11,"廩廫",8,"廵廸廹廻廼廽弅弆弇弉弌弍弎弐弒弔弖弙弚弜弝弞弡弢弣弤"],["8f80","弨弫弬弮弰弲",6,"弻弽弾弿彁",14,"彑彔彙彚彛彜彞彟彠彣彥彧彨彫彮彯彲彴彵彶彸彺彽彾彿徃徆徍徎徏徑従徔徖徚徛徝從徟徠徢",5,"復徫徬徯",5,"徶徸徹徺徻徾",4,"忇忈忊忋忎忓忔忕忚忛応忞忟忢忣忥忦忨忩忬忯忰忲忳忴忶忷忹忺忼怇"],["9040","怈怉怋怌怐怑怓怗怘怚怞怟怢怣怤怬怭怮怰",4,"怶",4,"怽怾恀恄",6,"恌恎恏恑恓恔恖恗恘恛恜恞恟恠恡恥恦恮恱恲恴恵恷恾悀"],["9080","悁悂悅悆悇悈悊悋悎悏悐悑悓悕悗悘悙悜悞悡悢悤悥悧悩悪悮悰悳悵悶悷悹悺悽",7,"惇惈惉惌",4,"惒惓惔惖惗惙惛惞惡",4,"惪惱惲惵惷惸惻",4,"愂愃愄愅愇愊愋愌愐",4,"愖愗愘愙愛愜愝愞愡愢愥愨愩愪愬",18,"慀",6],["9140","慇慉態慍慏慐慒慓慔慖",6,"慞慟慠慡慣慤慥慦慩",6,"慱慲慳慴慶慸",18,"憌憍憏",4,"憕"],["9180","憖",6,"憞",8,"憪憫憭",9,"憸",5,"憿懀懁懃",4,"應懌",4,"懓懕",16,"懧",13,"懶",8,"戀",5,"戇戉戓戔戙戜戝戞戠戣戦戧戨戩戫戭戯戰戱戲戵戶戸",4,"扂扄扅扆扊"],["9240","扏扐払扖扗扙扚扜",6,"扤扥扨扱扲扴扵扷扸扺扻扽抁抂抃抅抆抇抈抋",5,"抔抙抜抝択抣抦抧抩抪抭抮抯抰抲抳抴抶抷抸抺抾拀拁"],["9280","拃拋拏拑拕拝拞拠拡拤拪拫拰拲拵拸拹拺拻挀挃挄挅挆挊挋挌挍挏挐挒挓挔挕挗挘挙挜挦挧挩挬挭挮挰挱挳",5,"挻挼挾挿捀捁捄捇捈捊捑捒捓捔捖",7,"捠捤捥捦捨捪捫捬捯捰捲捳捴捵捸捹捼捽捾捿掁掃掄掅掆掋掍掑掓掔掕掗掙",6,"採掤掦掫掯掱掲掵掶掹掻掽掿揀"],["9340","揁揂揃揅揇揈揊揋揌揑揓揔揕揗",6,"揟揢揤",4,"揫揬揮揯揰揱揳揵揷揹揺揻揼揾搃搄搆",4,"損搎搑搒搕",5,"搝搟搢搣搤"],["9380","搥搧搨搩搫搮",5,"搵",4,"搻搼搾摀摂摃摉摋",6,"摓摕摖摗摙",4,"摟",7,"摨摪摫摬摮",9,"摻",6,"撃撆撈",8,"撓撔撗撘撚撛撜撝撟",4,"撥撦撧撨撪撫撯撱撲撳撴撶撹撻撽撾撿擁擃擄擆",6,"擏擑擓擔擕擖擙據"],["9440","擛擜擝擟擠擡擣擥擧",24,"攁",7,"攊",7,"攓",4,"攙",8],["9480","攢攣攤攦",4,"攬攭攰攱攲攳攷攺攼攽敀",4,"敆敇敊敋敍敎敐敒敓敔敗敘敚敜敟敠敡敤敥敧敨敩敪敭敮敯敱敳敵敶數",14,"斈斉斊斍斎斏斒斔斕斖斘斚斝斞斠斢斣斦斨斪斬斮斱",7,"斺斻斾斿旀旂旇旈旉旊旍旐旑旓旔旕旘",7,"旡旣旤旪旫"],["9540","旲旳旴旵旸旹旻",4,"昁昄昅昇昈昉昋昍昐昑昒昖昗昘昚昛昜昞昡昢昣昤昦昩昪昫昬昮昰昲昳昷",4,"昽昿晀時晄",6,"晍晎晐晑晘"],["9580","晙晛晜晝晞晠晢晣晥晧晩",4,"晱晲晳晵晸晹晻晼晽晿暀暁暃暅暆暈暉暊暋暍暎暏暐暒暓暔暕暘",4,"暞",8,"暩",4,"暯",4,"暵暶暷暸暺暻暼暽暿",25,"曚曞",7,"曧曨曪",5,"曱曵曶書曺曻曽朁朂會"],["9640","朄朅朆朇朌朎朏朑朒朓朖朘朙朚朜朞朠",5,"朧朩朮朰朲朳朶朷朸朹朻朼朾朿杁杄杅杇杊杋杍杒杔杕杗",4,"杝杢杣杤杦杧杫杬杮東杴杶"],["9680","杸杹杺杻杽枀枂枃枅枆枈枊枌枍枎枏枑枒枓枔枖枙枛枟枠枡枤枦枩枬枮枱枲枴枹",7,"柂柅",9,"柕柖柗柛柟柡柣柤柦柧柨柪柫柭柮柲柵",7,"柾栁栂栃栄栆栍栐栒栔栕栘",4,"栞栟栠栢",6,"栫",6,"栴栵栶栺栻栿桇桋桍桏桒桖",5],["9740","桜桝桞桟桪桬",7,"桵桸",8,"梂梄梇",7,"梐梑梒梔梕梖梘",9,"梣梤梥梩梪梫梬梮梱梲梴梶梷梸"],["9780","梹",6,"棁棃",5,"棊棌棎棏棐棑棓棔棖棗棙棛",4,"棡棢棤",9,"棯棲棳棴棶棷棸棻棽棾棿椀椂椃椄椆",4,"椌椏椑椓",11,"椡椢椣椥",7,"椮椯椱椲椳椵椶椷椸椺椻椼椾楀楁楃",16,"楕楖楘楙楛楜楟"],["9840","楡楢楤楥楧楨楩楪楬業楯楰楲",4,"楺楻楽楾楿榁榃榅榊榋榌榎",5,"榖榗榙榚榝",9,"榩榪榬榮榯榰榲榳榵榶榸榹榺榼榽"],["9880","榾榿槀槂",7,"構槍槏槑槒槓槕",5,"槜槝槞槡",11,"槮槯槰槱槳",9,"槾樀",9,"樋",11,"標",5,"樠樢",5,"権樫樬樭樮樰樲樳樴樶",6,"樿",4,"橅橆橈",7,"橑",6,"橚"],["9940","橜",4,"橢橣橤橦",10,"橲",6,"橺橻橽橾橿檁檂檃檅",8,"檏檒",4,"檘",7,"檡",5],["9980","檧檨檪檭",114,"欥欦欨",6],["9a40","欯欰欱欳欴欵欶欸欻欼欽欿歀歁歂歄歅歈歊歋歍",11,"歚",7,"歨歩歫",13,"歺歽歾歿殀殅殈"],["9a80","殌殎殏殐殑殔殕殗殘殙殜",4,"殢",7,"殫",7,"殶殸",6,"毀毃毄毆",4,"毌毎毐毑毘毚毜",4,"毢",7,"毬毭毮毰毱毲毴毶毷毸毺毻毼毾",6,"氈",4,"氎氒気氜氝氞氠氣氥氫氬氭氱氳氶氷氹氺氻氼氾氿汃汄汅汈汋",4,"汑汒汓汖汘"],["9b40","汙汚汢汣汥汦汧汫",4,"汱汳汵汷汸決汻汼汿沀沄沇沊沋沍沎沑沒沕沖沗沘沚沜沝沞沠沢沨沬沯沰沴沵沶沷沺泀況泂泃泆泇泈泋泍泎泏泑泒泘"],["9b80","泙泚泜泝泟泤泦泧泩泬泭泲泴泹泿洀洂洃洅洆洈洉洊洍洏洐洑洓洔洕洖洘洜洝洟",5,"洦洨洩洬洭洯洰洴洶洷洸洺洿浀浂浄浉浌浐浕浖浗浘浛浝浟浡浢浤浥浧浨浫浬浭浰浱浲浳浵浶浹浺浻浽",4,"涃涄涆涇涊涋涍涏涐涒涖",4,"涜涢涥涬涭涰涱涳涴涶涷涹",5,"淁淂淃淈淉淊"],["9c40","淍淎淏淐淒淓淔淕淗淚淛淜淟淢淣淥淧淨淩淪淭淯淰淲淴淵淶淸淺淽",7,"渆渇済渉渋渏渒渓渕渘渙減渜渞渟渢渦渧渨渪測渮渰渱渳渵"],["9c80","渶渷渹渻",7,"湅",7,"湏湐湑湒湕湗湙湚湜湝湞湠",10,"湬湭湯",14,"満溁溂溄溇溈溊",4,"溑",6,"溙溚溛溝溞溠溡溣溤溦溨溩溫溬溭溮溰溳溵溸溹溼溾溿滀滃滄滅滆滈滉滊滌滍滎滐滒滖滘滙滛滜滝滣滧滪",5],["9d40","滰滱滲滳滵滶滷滸滺",7,"漃漄漅漇漈漊",4,"漐漑漒漖",9,"漡漢漣漥漦漧漨漬漮漰漲漴漵漷",6,"漿潀潁潂"],["9d80","潃潄潅潈潉潊潌潎",9,"潙潚潛潝潟潠潡潣潤潥潧",5,"潯潰潱潳潵潶潷潹潻潽",6,"澅澆澇澊澋澏",12,"澝澞澟澠澢",4,"澨",10,"澴澵澷澸澺",5,"濁濃",5,"濊",6,"濓",10,"濟濢濣濤濥"],["9e40","濦",7,"濰",32,"瀒",7,"瀜",6,"瀤",6],["9e80","瀫",9,"瀶瀷瀸瀺",17,"灍灎灐",13,"灟",11,"灮灱灲灳灴灷灹灺灻災炁炂炃炄炆炇炈炋炌炍炏炐炑炓炗炘炚炛炞",12,"炰炲炴炵炶為炾炿烄烅烆烇烉烋",12,"烚"],["9f40","烜烝烞烠烡烢烣烥烪烮烰",6,"烸烺烻烼烾",10,"焋",4,"焑焒焔焗焛",10,"焧",7,"焲焳焴"],["9f80","焵焷",13,"煆煇煈煉煋煍煏",12,"煝煟",4,"煥煩",4,"煯煰煱煴煵煶煷煹煻煼煾",5,"熅",4,"熋熌熍熎熐熑熒熓熕熖熗熚",4,"熡",6,"熩熪熫熭",5,"熴熶熷熸熺",8,"燄",9,"燏",4],["a040","燖",9,"燡燢燣燤燦燨",5,"燯",9,"燺",11,"爇",19],["a080","爛爜爞",9,"爩爫爭爮爯爲爳爴爺爼爾牀",6,"牉牊牋牎牏牐牑牓牔牕牗牘牚牜牞牠牣牤牥牨牪牫牬牭牰牱牳牴牶牷牸牻牼牽犂犃犅",4,"犌犎犐犑犓",11,"犠",11,"犮犱犲犳犵犺",6,"狅狆狇狉狊狋狌狏狑狓狔狕狖狘狚狛"],["a1a1","　、。·ˉˇ¨〃々—～‖…‘’“”〔〕〈",7,"〖〗【】±×÷∶∧∨∑∏∪∩∈∷√⊥∥∠⌒⊙∫∮≡≌≈∽∝≠≮≯≤≥∞∵∴♂♀°′″℃＄¤￠￡‰§№☆★○●◎◇◆□■△▲※→←↑↓〓"],["a2a1","ⅰ",9],["a2b1","⒈",19,"⑴",19,"①",9],["a2e5","㈠",9],["a2f1","Ⅰ",11],["a3a1","！＂＃￥％",88,"￣"],["a4a1","ぁ",82],["a5a1","ァ",85],["a6a1","Α",16,"Σ",6],["a6c1","α",16,"σ",6],["a6e0","︵︶︹︺︿﹀︽︾﹁﹂﹃﹄"],["a6ee","︻︼︷︸︱"],["a6f4","︳︴"],["a7a1","А",5,"ЁЖ",25],["a7d1","а",5,"ёж",25],["a840","ˊˋ˙–―‥‵℅℉↖↗↘↙∕∟∣≒≦≧⊿═",35,"▁",6],["a880","█",7,"▓▔▕▼▽◢◣◤◥☉⊕〒〝〞"],["a8a1","āáǎàēéěèīíǐìōóǒòūúǔùǖǘǚǜüêɑ"],["a8bd","ńň"],["a8c0","ɡ"],["a8c5","ㄅ",36],["a940","〡",8,"㊣㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕︰￢￤"],["a959","℡㈱"],["a95c","‐"],["a960","ー゛゜ヽヾ〆ゝゞ﹉",9,"﹔﹕﹖﹗﹙",8],["a980","﹢",4,"﹨﹩﹪﹫"],["a996","〇"],["a9a4","─",75],["aa40","狜狝狟狢",5,"狪狫狵狶狹狽狾狿猀猂猄",5,"猋猌猍猏猐猑猒猔猘猙猚猟猠猣猤猦猧猨猭猯猰猲猳猵猶猺猻猼猽獀",8],["aa80","獉獊獋獌獎獏獑獓獔獕獖獘",7,"獡",10,"獮獰獱"],["ab40","獲",11,"獿",4,"玅玆玈玊玌玍玏玐玒玓玔玕玗玘玙玚玜玝玞玠玡玣",5,"玪玬玭玱玴玵玶玸玹玼玽玾玿珁珃",4],["ab80","珋珌珎珒",6,"珚珛珜珝珟珡珢珣珤珦珨珪珫珬珮珯珰珱珳",4],["ac40","珸",10,"琄琇琈琋琌琍琎琑",8,"琜",5,"琣琤琧琩琫琭琯琱琲琷",4,"琽琾琿瑀瑂",11],["ac80","瑎",6,"瑖瑘瑝瑠",12,"瑮瑯瑱",4,"瑸瑹瑺"],["ad40","瑻瑼瑽瑿璂璄璅璆璈璉璊璌璍璏璑",10,"璝璟",7,"璪",15,"璻",12],["ad80","瓈",9,"瓓",8,"瓝瓟瓡瓥瓧",6,"瓰瓱瓲"],["ae40","瓳瓵瓸",6,"甀甁甂甃甅",7,"甎甐甒甔甕甖甗甛甝甞甠",4,"甦甧甪甮甴甶甹甼甽甿畁畂畃畄畆畇畉畊畍畐畑畒畓畕畖畗畘"],["ae80","畝",7,"畧畨畩畫",6,"畳畵當畷畺",4,"疀疁疂疄疅疇"],["af40","疈疉疊疌疍疎疐疓疕疘疛疜疞疢疦",4,"疭疶疷疺疻疿痀痁痆痋痌痎痏痐痑痓痗痙痚痜痝痟痠痡痥痩痬痭痮痯痲痳痵痶痷痸痺痻痽痾瘂瘄瘆瘇"],["af80","瘈瘉瘋瘍瘎瘏瘑瘒瘓瘔瘖瘚瘜瘝瘞瘡瘣瘧瘨瘬瘮瘯瘱瘲瘶瘷瘹瘺瘻瘽癁療癄"],["b040","癅",6,"癎",5,"癕癗",4,"癝癟癠癡癢癤",6,"癬癭癮癰",7,"癹発發癿皀皁皃皅皉皊皌皍皏皐皒皔皕皗皘皚皛"],["b080","皜",7,"皥",8,"皯皰皳皵",9,"盀盁盃啊阿埃挨哎唉哀皑癌蔼矮艾碍爱隘鞍氨安俺按暗岸胺案肮昂盎凹敖熬翱袄傲奥懊澳芭捌扒叭吧笆八疤巴拔跋靶把耙坝霸罢爸白柏百摆佰败拜稗斑班搬扳般颁板版扮拌伴瓣半办绊邦帮梆榜膀绑棒磅蚌镑傍谤苞胞包褒剥"],["b140","盄盇盉盋盌盓盕盙盚盜盝盞盠",4,"盦",7,"盰盳盵盶盷盺盻盽盿眀眂眃眅眆眊県眎",10,"眛眜眝眞眡眣眤眥眧眪眫"],["b180","眬眮眰",4,"眹眻眽眾眿睂睄睅睆睈",7,"睒",7,"睜薄雹保堡饱宝抱报暴豹鲍爆杯碑悲卑北辈背贝钡倍狈备惫焙被奔苯本笨崩绷甭泵蹦迸逼鼻比鄙笔彼碧蓖蔽毕毙毖币庇痹闭敝弊必辟壁臂避陛鞭边编贬扁便变卞辨辩辫遍标彪膘表鳖憋别瘪彬斌濒滨宾摈兵冰柄丙秉饼炳"],["b240","睝睞睟睠睤睧睩睪睭",11,"睺睻睼瞁瞂瞃瞆",5,"瞏瞐瞓",11,"瞡瞣瞤瞦瞨瞫瞭瞮瞯瞱瞲瞴瞶",4],["b280","瞼瞾矀",12,"矎",8,"矘矙矚矝",4,"矤病并玻菠播拨钵波博勃搏铂箔伯帛舶脖膊渤泊驳捕卜哺补埠不布步簿部怖擦猜裁材才财睬踩采彩菜蔡餐参蚕残惭惨灿苍舱仓沧藏操糙槽曹草厕策侧册测层蹭插叉茬茶查碴搽察岔差诧拆柴豺搀掺蝉馋谗缠铲产阐颤昌猖"],["b340","矦矨矪矯矰矱矲矴矵矷矹矺矻矼砃",5,"砊砋砎砏砐砓砕砙砛砞砠砡砢砤砨砪砫砮砯砱砲砳砵砶砽砿硁硂硃硄硆硈硉硊硋硍硏硑硓硔硘硙硚"],["b380","硛硜硞",11,"硯",7,"硸硹硺硻硽",6,"场尝常长偿肠厂敞畅唱倡超抄钞朝嘲潮巢吵炒车扯撤掣彻澈郴臣辰尘晨忱沉陈趁衬撑称城橙成呈乘程惩澄诚承逞骋秤吃痴持匙池迟弛驰耻齿侈尺赤翅斥炽充冲虫崇宠抽酬畴踌稠愁筹仇绸瞅丑臭初出橱厨躇锄雏滁除楚"],["b440","碄碅碆碈碊碋碏碐碒碔碕碖碙碝碞碠碢碤碦碨",7,"碵碶碷碸確碻碼碽碿磀磂磃磄磆磇磈磌磍磎磏磑磒磓磖磗磘磚",9],["b480","磤磥磦磧磩磪磫磭",4,"磳磵磶磸磹磻",5,"礂礃礄礆",6,"础储矗搐触处揣川穿椽传船喘串疮窗幢床闯创吹炊捶锤垂春椿醇唇淳纯蠢戳绰疵茨磁雌辞慈瓷词此刺赐次聪葱囱匆从丛凑粗醋簇促蹿篡窜摧崔催脆瘁粹淬翠村存寸磋撮搓措挫错搭达答瘩打大呆歹傣戴带殆代贷袋待逮"],["b540","礍",5,"礔",9,"礟",4,"礥",14,"礵",4,"礽礿祂祃祄祅祇祊",8,"祔祕祘祙祡祣"],["b580","祤祦祩祪祫祬祮祰",6,"祹祻",4,"禂禃禆禇禈禉禋禌禍禎禐禑禒怠耽担丹单郸掸胆旦氮但惮淡诞弹蛋当挡党荡档刀捣蹈倒岛祷导到稻悼道盗德得的蹬灯登等瞪凳邓堤低滴迪敌笛狄涤翟嫡抵底地蒂第帝弟递缔颠掂滇碘点典靛垫电佃甸店惦奠淀殿碉叼雕凋刁掉吊钓调跌爹碟蝶迭谍叠"],["b640","禓",6,"禛",11,"禨",10,"禴",4,"禼禿秂秄秅秇秈秊秌秎秏秐秓秔秖秗秙",5,"秠秡秢秥秨秪"],["b680","秬秮秱",6,"秹秺秼秾秿稁稄稅稇稈稉稊稌稏",4,"稕稖稘稙稛稜丁盯叮钉顶鼎锭定订丢东冬董懂动栋侗恫冻洞兜抖斗陡豆逗痘都督毒犊独读堵睹赌杜镀肚度渡妒端短锻段断缎堆兑队对墩吨蹲敦顿囤钝盾遁掇哆多夺垛躲朵跺舵剁惰堕蛾峨鹅俄额讹娥恶厄扼遏鄂饿恩而儿耳尔饵洱二"],["b740","稝稟稡稢稤",14,"稴稵稶稸稺稾穀",5,"穇",9,"穒",4,"穘",16],["b780","穩",6,"穱穲穳穵穻穼穽穾窂窅窇窉窊窋窌窎窏窐窓窔窙窚窛窞窡窢贰发罚筏伐乏阀法珐藩帆番翻樊矾钒繁凡烦反返范贩犯饭泛坊芳方肪房防妨仿访纺放菲非啡飞肥匪诽吠肺废沸费芬酚吩氛分纷坟焚汾粉奋份忿愤粪丰封枫蜂峰锋风疯烽逢冯缝讽奉凤佛否夫敷肤孵扶拂辐幅氟符伏俘服"],["b840","窣窤窧窩窪窫窮",4,"窴",10,"竀",10,"竌",9,"竗竘竚竛竜竝竡竢竤竧",5,"竮竰竱竲竳"],["b880","竴",4,"竻竼竾笀笁笂笅笇笉笌笍笎笐笒笓笖笗笘笚笜笝笟笡笢笣笧笩笭浮涪福袱弗甫抚辅俯釜斧脯腑府腐赴副覆赋复傅付阜父腹负富讣附妇缚咐噶嘎该改概钙盖溉干甘杆柑竿肝赶感秆敢赣冈刚钢缸肛纲岗港杠篙皋高膏羔糕搞镐稿告哥歌搁戈鸽胳疙割革葛格蛤阁隔铬个各给根跟耕更庚羹"],["b940","笯笰笲笴笵笶笷笹笻笽笿",5,"筆筈筊筍筎筓筕筗筙筜筞筟筡筣",10,"筯筰筳筴筶筸筺筼筽筿箁箂箃箄箆",6,"箎箏"],["b980","箑箒箓箖箘箙箚箛箞箟箠箣箤箥箮箯箰箲箳箵箶箷箹",7,"篂篃範埂耿梗工攻功恭龚供躬公宫弓巩汞拱贡共钩勾沟苟狗垢构购够辜菇咕箍估沽孤姑鼓古蛊骨谷股故顾固雇刮瓜剐寡挂褂乖拐怪棺关官冠观管馆罐惯灌贯光广逛瑰规圭硅归龟闺轨鬼诡癸桂柜跪贵刽辊滚棍锅郭国果裹过哈"],["ba40","篅篈築篊篋篍篎篏篐篒篔",4,"篛篜篞篟篠篢篣篤篧篨篩篫篬篭篯篰篲",4,"篸篹篺篻篽篿",7,"簈簉簊簍簎簐",5,"簗簘簙"],["ba80","簚",4,"簠",5,"簨簩簫",12,"簹",5,"籂骸孩海氦亥害骇酣憨邯韩含涵寒函喊罕翰撼捍旱憾悍焊汗汉夯杭航壕嚎豪毫郝好耗号浩呵喝荷菏核禾和何合盒貉阂河涸赫褐鹤贺嘿黑痕很狠恨哼亨横衡恒轰哄烘虹鸿洪宏弘红喉侯猴吼厚候后呼乎忽瑚壶葫胡蝴狐糊湖"],["bb40","籃",9,"籎",36,"籵",5,"籾",9],["bb80","粈粊",6,"粓粔粖粙粚粛粠粡粣粦粧粨粩粫粬粭粯粰粴",4,"粺粻弧虎唬护互沪户花哗华猾滑画划化话槐徊怀淮坏欢环桓还缓换患唤痪豢焕涣宦幻荒慌黄磺蝗簧皇凰惶煌晃幌恍谎灰挥辉徽恢蛔回毁悔慧卉惠晦贿秽会烩汇讳诲绘荤昏婚魂浑混豁活伙火获或惑霍货祸击圾基机畸稽积箕"],["bc40","粿糀糂糃糄糆糉糋糎",6,"糘糚糛糝糞糡",6,"糩",5,"糰",7,"糹糺糼",13,"紋",5],["bc80","紑",14,"紡紣紤紥紦紨紩紪紬紭紮細",6,"肌饥迹激讥鸡姬绩缉吉极棘辑籍集及急疾汲即嫉级挤几脊己蓟技冀季伎祭剂悸济寄寂计记既忌际妓继纪嘉枷夹佳家加荚颊贾甲钾假稼价架驾嫁歼监坚尖笺间煎兼肩艰奸缄茧检柬碱硷拣捡简俭剪减荐槛鉴践贱见键箭件"],["bd40","紷",54,"絯",7],["bd80","絸",32,"健舰剑饯渐溅涧建僵姜将浆江疆蒋桨奖讲匠酱降蕉椒礁焦胶交郊浇骄娇嚼搅铰矫侥脚狡角饺缴绞剿教酵轿较叫窖揭接皆秸街阶截劫节桔杰捷睫竭洁结解姐戒藉芥界借介疥诫届巾筋斤金今津襟紧锦仅谨进靳晋禁近烬浸"],["be40","継",12,"綧",6,"綯",42],["be80","線",32,"尽劲荆兢茎睛晶鲸京惊精粳经井警景颈静境敬镜径痉靖竟竞净炯窘揪究纠玖韭久灸九酒厩救旧臼舅咎就疚鞠拘狙疽居驹菊局咀矩举沮聚拒据巨具距踞锯俱句惧炬剧捐鹃娟倦眷卷绢撅攫抉掘倔爵觉决诀绝均菌钧军君峻"],["bf40","緻",62],["bf80","縺縼",4,"繂",4,"繈",21,"俊竣浚郡骏喀咖卡咯开揩楷凯慨刊堪勘坎砍看康慷糠扛抗亢炕考拷烤靠坷苛柯棵磕颗科壳咳可渴克刻客课肯啃垦恳坑吭空恐孔控抠口扣寇枯哭窟苦酷库裤夸垮挎跨胯块筷侩快宽款匡筐狂框矿眶旷况亏盔岿窥葵奎魁傀"],["c040","繞",35,"纃",23,"纜纝纞"],["c080","纮纴纻纼绖绤绬绹缊缐缞缷缹缻",6,"罃罆",9,"罒罓馈愧溃坤昆捆困括扩廓阔垃拉喇蜡腊辣啦莱来赖蓝婪栏拦篮阑兰澜谰揽览懒缆烂滥琅榔狼廊郎朗浪捞劳牢老佬姥酪烙涝勒乐雷镭蕾磊累儡垒擂肋类泪棱楞冷厘梨犁黎篱狸离漓理李里鲤礼莉荔吏栗丽厉励砾历利傈例俐"],["c140","罖罙罛罜罝罞罠罣",4,"罫罬罭罯罰罳罵罶罷罸罺罻罼罽罿羀羂",7,"羋羍羏",4,"羕",4,"羛羜羠羢羣羥羦羨",6,"羱"],["c180","羳",4,"羺羻羾翀翂翃翄翆翇翈翉翋翍翏",4,"翖翗翙",5,"翢翣痢立粒沥隶力璃哩俩联莲连镰廉怜涟帘敛脸链恋炼练粮凉梁粱良两辆量晾亮谅撩聊僚疗燎寥辽潦了撂镣廖料列裂烈劣猎琳林磷霖临邻鳞淋凛赁吝拎玲菱零龄铃伶羚凌灵陵岭领另令溜琉榴硫馏留刘瘤流柳六龙聋咙笼窿"],["c240","翤翧翨翪翫翬翭翯翲翴",6,"翽翾翿耂耇耈耉耊耎耏耑耓耚耛耝耞耟耡耣耤耫",5,"耲耴耹耺耼耾聀聁聄聅聇聈聉聎聏聐聑聓聕聖聗"],["c280","聙聛",13,"聫",5,"聲",11,"隆垄拢陇楼娄搂篓漏陋芦卢颅庐炉掳卤虏鲁麓碌露路赂鹿潞禄录陆戮驴吕铝侣旅履屡缕虑氯律率滤绿峦挛孪滦卵乱掠略抡轮伦仑沦纶论萝螺罗逻锣箩骡裸落洛骆络妈麻玛码蚂马骂嘛吗埋买麦卖迈脉瞒馒蛮满蔓曼慢漫"],["c340","聾肁肂肅肈肊肍",5,"肔肕肗肙肞肣肦肧肨肬肰肳肵肶肸肹肻胅胇",4,"胏",6,"胘胟胠胢胣胦胮胵胷胹胻胾胿脀脁脃脄脅脇脈脋"],["c380","脌脕脗脙脛脜脝脟",12,"脭脮脰脳脴脵脷脹",4,"脿谩芒茫盲氓忙莽猫茅锚毛矛铆卯茂冒帽貌贸么玫枚梅酶霉煤没眉媒镁每美昧寐妹媚门闷们萌蒙檬盟锰猛梦孟眯醚靡糜迷谜弥米秘觅泌蜜密幂棉眠绵冕免勉娩缅面苗描瞄藐秒渺庙妙蔑灭民抿皿敏悯闽明螟鸣铭名命谬摸"],["c440","腀",5,"腇腉腍腎腏腒腖腗腘腛",4,"腡腢腣腤腦腨腪腫腬腯腲腳腵腶腷腸膁膃",4,"膉膋膌膍膎膐膒",5,"膙膚膞",4,"膤膥"],["c480","膧膩膫",7,"膴",5,"膼膽膾膿臄臅臇臈臉臋臍",6,"摹蘑模膜磨摩魔抹末莫墨默沫漠寞陌谋牟某拇牡亩姆母墓暮幕募慕木目睦牧穆拿哪呐钠那娜纳氖乃奶耐奈南男难囊挠脑恼闹淖呢馁内嫩能妮霓倪泥尼拟你匿腻逆溺蔫拈年碾撵捻念娘酿鸟尿捏聂孽啮镊镍涅您柠狞凝宁"],["c540","臔",14,"臤臥臦臨臩臫臮",4,"臵",5,"臽臿舃與",4,"舎舏舑舓舕",5,"舝舠舤舥舦舧舩舮舲舺舼舽舿"],["c580","艀艁艂艃艅艆艈艊艌艍艎艐",7,"艙艛艜艝艞艠",7,"艩拧泞牛扭钮纽脓浓农弄奴努怒女暖虐疟挪懦糯诺哦欧鸥殴藕呕偶沤啪趴爬帕怕琶拍排牌徘湃派攀潘盘磐盼畔判叛乓庞旁耪胖抛咆刨炮袍跑泡呸胚培裴赔陪配佩沛喷盆砰抨烹澎彭蓬棚硼篷膨朋鹏捧碰坯砒霹批披劈琵毗"],["c640","艪艫艬艭艱艵艶艷艸艻艼芀芁芃芅芆芇芉芌芐芓芔芕芖芚芛芞芠芢芣芧芲芵芶芺芻芼芿苀苂苃苅苆苉苐苖苙苚苝苢苧苨苩苪苬苭苮苰苲苳苵苶苸"],["c680","苺苼",4,"茊茋茍茐茒茓茖茘茙茝",9,"茩茪茮茰茲茷茻茽啤脾疲皮匹痞僻屁譬篇偏片骗飘漂瓢票撇瞥拼频贫品聘乒坪苹萍平凭瓶评屏坡泼颇婆破魄迫粕剖扑铺仆莆葡菩蒲埔朴圃普浦谱曝瀑期欺栖戚妻七凄漆柒沏其棋奇歧畦崎脐齐旗祈祁骑起岂乞企启契砌器气迄弃汽泣讫掐"],["c740","茾茿荁荂荄荅荈荊",4,"荓荕",4,"荝荢荰",6,"荹荺荾",6,"莇莈莊莋莌莍莏莐莑莔莕莖莗莙莚莝莟莡",6,"莬莭莮"],["c780","莯莵莻莾莿菂菃菄菆菈菉菋菍菎菐菑菒菓菕菗菙菚菛菞菢菣菤菦菧菨菫菬菭恰洽牵扦钎铅千迁签仟谦乾黔钱钳前潜遣浅谴堑嵌欠歉枪呛腔羌墙蔷强抢橇锹敲悄桥瞧乔侨巧鞘撬翘峭俏窍切茄且怯窃钦侵亲秦琴勤芹擒禽寝沁青轻氢倾卿清擎晴氰情顷请庆琼穷秋丘邱球求囚酋泅趋区蛆曲躯屈驱渠"],["c840","菮華菳",4,"菺菻菼菾菿萀萂萅萇萈萉萊萐萒",5,"萙萚萛萞",5,"萩",7,"萲",5,"萹萺萻萾",7,"葇葈葉"],["c880","葊",6,"葒",4,"葘葝葞葟葠葢葤",4,"葪葮葯葰葲葴葷葹葻葼取娶龋趣去圈颧权醛泉全痊拳犬券劝缺炔瘸却鹊榷确雀裙群然燃冉染瓤壤攘嚷让饶扰绕惹热壬仁人忍韧任认刃妊纫扔仍日戎茸蓉荣融熔溶容绒冗揉柔肉茹蠕儒孺如辱乳汝入褥软阮蕊瑞锐闰润若弱撒洒萨腮鳃塞赛三叁"],["c940","葽",4,"蒃蒄蒅蒆蒊蒍蒏",7,"蒘蒚蒛蒝蒞蒟蒠蒢",12,"蒰蒱蒳蒵蒶蒷蒻蒼蒾蓀蓂蓃蓅蓆蓇蓈蓋蓌蓎蓏蓒蓔蓕蓗"],["c980","蓘",4,"蓞蓡蓢蓤蓧",4,"蓭蓮蓯蓱",10,"蓽蓾蔀蔁蔂伞散桑嗓丧搔骚扫嫂瑟色涩森僧莎砂杀刹沙纱傻啥煞筛晒珊苫杉山删煽衫闪陕擅赡膳善汕扇缮墒伤商赏晌上尚裳梢捎稍烧芍勺韶少哨邵绍奢赊蛇舌舍赦摄射慑涉社设砷申呻伸身深娠绅神沈审婶甚肾慎渗声生甥牲升绳"],["ca40","蔃",8,"蔍蔎蔏蔐蔒蔔蔕蔖蔘蔙蔛蔜蔝蔞蔠蔢",8,"蔭",9,"蔾",4,"蕄蕅蕆蕇蕋",10],["ca80","蕗蕘蕚蕛蕜蕝蕟",4,"蕥蕦蕧蕩",8,"蕳蕵蕶蕷蕸蕼蕽蕿薀薁省盛剩胜圣师失狮施湿诗尸虱十石拾时什食蚀实识史矢使屎驶始式示士世柿事拭誓逝势是嗜噬适仕侍释饰氏市恃室视试收手首守寿授售受瘦兽蔬枢梳殊抒输叔舒淑疏书赎孰熟薯暑曙署蜀黍鼠属术述树束戍竖墅庶数漱"],["cb40","薂薃薆薈",6,"薐",10,"薝",6,"薥薦薧薩薫薬薭薱",5,"薸薺",6,"藂",6,"藊",4,"藑藒"],["cb80","藔藖",5,"藝",6,"藥藦藧藨藪",14,"恕刷耍摔衰甩帅栓拴霜双爽谁水睡税吮瞬顺舜说硕朔烁斯撕嘶思私司丝死肆寺嗣四伺似饲巳松耸怂颂送宋讼诵搜艘擞嗽苏酥俗素速粟僳塑溯宿诉肃酸蒜算虽隋随绥髓碎岁穗遂隧祟孙损笋蓑梭唆缩琐索锁所塌他它她塔"],["cc40","藹藺藼藽藾蘀",4,"蘆",10,"蘒蘓蘔蘕蘗",15,"蘨蘪",13,"蘹蘺蘻蘽蘾蘿虀"],["cc80","虁",11,"虒虓處",4,"虛虜虝號虠虡虣",7,"獭挞蹋踏胎苔抬台泰酞太态汰坍摊贪瘫滩坛檀痰潭谭谈坦毯袒碳探叹炭汤塘搪堂棠膛唐糖倘躺淌趟烫掏涛滔绦萄桃逃淘陶讨套特藤腾疼誊梯剔踢锑提题蹄啼体替嚏惕涕剃屉天添填田甜恬舔腆挑条迢眺跳贴铁帖厅听烃"],["cd40","虭虯虰虲",6,"蚃",6,"蚎",4,"蚔蚖",5,"蚞",4,"蚥蚦蚫蚭蚮蚲蚳蚷蚸蚹蚻",4,"蛁蛂蛃蛅蛈蛌蛍蛒蛓蛕蛖蛗蛚蛜"],["cd80","蛝蛠蛡蛢蛣蛥蛦蛧蛨蛪蛫蛬蛯蛵蛶蛷蛺蛻蛼蛽蛿蜁蜄蜅蜆蜋蜌蜎蜏蜐蜑蜔蜖汀廷停亭庭挺艇通桐酮瞳同铜彤童桶捅筒统痛偷投头透凸秃突图徒途涂屠土吐兔湍团推颓腿蜕褪退吞屯臀拖托脱鸵陀驮驼椭妥拓唾挖哇蛙洼娃瓦袜歪外豌弯湾玩顽丸烷完碗挽晚皖惋宛婉万腕汪王亡枉网往旺望忘妄威"],["ce40","蜙蜛蜝蜟蜠蜤蜦蜧蜨蜪蜫蜬蜭蜯蜰蜲蜳蜵蜶蜸蜹蜺蜼蜽蝀",6,"蝊蝋蝍蝏蝐蝑蝒蝔蝕蝖蝘蝚",5,"蝡蝢蝦",7,"蝯蝱蝲蝳蝵"],["ce80","蝷蝸蝹蝺蝿螀螁螄螆螇螉螊螌螎",4,"螔螕螖螘",6,"螠",4,"巍微危韦违桅围唯惟为潍维苇萎委伟伪尾纬未蔚味畏胃喂魏位渭谓尉慰卫瘟温蚊文闻纹吻稳紊问嗡翁瓮挝蜗涡窝我斡卧握沃巫呜钨乌污诬屋无芜梧吾吴毋武五捂午舞伍侮坞戊雾晤物勿务悟误昔熙析西硒矽晰嘻吸锡牺"],["cf40","螥螦螧螩螪螮螰螱螲螴螶螷螸螹螻螼螾螿蟁",4,"蟇蟈蟉蟌",4,"蟔",6,"蟜蟝蟞蟟蟡蟢蟣蟤蟦蟧蟨蟩蟫蟬蟭蟯",9],["cf80","蟺蟻蟼蟽蟿蠀蠁蠂蠄",5,"蠋",7,"蠔蠗蠘蠙蠚蠜",4,"蠣稀息希悉膝夕惜熄烯溪汐犀檄袭席习媳喜铣洗系隙戏细瞎虾匣霞辖暇峡侠狭下厦夏吓掀锨先仙鲜纤咸贤衔舷闲涎弦嫌显险现献县腺馅羡宪陷限线相厢镶香箱襄湘乡翔祥详想响享项巷橡像向象萧硝霄削哮嚣销消宵淆晓"],["d040","蠤",13,"蠳",5,"蠺蠻蠽蠾蠿衁衂衃衆",5,"衎",5,"衕衖衘衚",6,"衦衧衪衭衯衱衳衴衵衶衸衹衺"],["d080","衻衼袀袃袆袇袉袊袌袎袏袐袑袓袔袕袗",4,"袝",4,"袣袥",5,"小孝校肖啸笑效楔些歇蝎鞋协挟携邪斜胁谐写械卸蟹懈泄泻谢屑薪芯锌欣辛新忻心信衅星腥猩惺兴刑型形邢行醒幸杏性姓兄凶胸匈汹雄熊休修羞朽嗅锈秀袖绣墟戌需虚嘘须徐许蓄酗叙旭序畜恤絮婿绪续轩喧宣悬旋玄"],["d140","袬袮袯袰袲",4,"袸袹袺袻袽袾袿裀裃裄裇裈裊裋裌裍裏裐裑裓裖裗裚",4,"裠裡裦裧裩",6,"裲裵裶裷裺裻製裿褀褁褃",5],["d180","褉褋",4,"褑褔",4,"褜",4,"褢褣褤褦褧褨褩褬褭褮褯褱褲褳褵褷选癣眩绚靴薛学穴雪血勋熏循旬询寻驯巡殉汛训讯逊迅压押鸦鸭呀丫芽牙蚜崖衙涯雅哑亚讶焉咽阉烟淹盐严研蜒岩延言颜阎炎沿奄掩眼衍演艳堰燕厌砚雁唁彦焰宴谚验殃央鸯秧杨扬佯疡羊洋阳氧仰痒养样漾邀腰妖瑶"],["d240","褸",8,"襂襃襅",24,"襠",5,"襧",19,"襼"],["d280","襽襾覀覂覄覅覇",26,"摇尧遥窑谣姚咬舀药要耀椰噎耶爷野冶也页掖业叶曳腋夜液一壹医揖铱依伊衣颐夷遗移仪胰疑沂宜姨彝椅蚁倚已乙矣以艺抑易邑屹亿役臆逸肄疫亦裔意毅忆义益溢诣议谊译异翼翌绎茵荫因殷音阴姻吟银淫寅饮尹引隐"],["d340","覢",30,"觃觍觓觔觕觗觘觙觛觝觟觠觡觢觤觧觨觩觪觬觭觮觰觱觲觴",6],["d380","觻",4,"訁",5,"計",21,"印英樱婴鹰应缨莹萤营荧蝇迎赢盈影颖硬映哟拥佣臃痈庸雍踊蛹咏泳涌永恿勇用幽优悠忧尤由邮铀犹油游酉有友右佑釉诱又幼迂淤于盂榆虞愚舆余俞逾鱼愉渝渔隅予娱雨与屿禹宇语羽玉域芋郁吁遇喻峪御愈欲狱育誉"],["d440","訞",31,"訿",8,"詉",21],["d480","詟",25,"詺",6,"浴寓裕预豫驭鸳渊冤元垣袁原援辕园员圆猿源缘远苑愿怨院曰约越跃钥岳粤月悦阅耘云郧匀陨允运蕴酝晕韵孕匝砸杂栽哉灾宰载再在咱攒暂赞赃脏葬遭糟凿藻枣早澡蚤躁噪造皂灶燥责择则泽贼怎增憎曾赠扎喳渣札轧"],["d540","誁",7,"誋",7,"誔",46],["d580","諃",32,"铡闸眨栅榨咋乍炸诈摘斋宅窄债寨瞻毡詹粘沾盏斩辗崭展蘸栈占战站湛绽樟章彰漳张掌涨杖丈帐账仗胀瘴障招昭找沼赵照罩兆肇召遮折哲蛰辙者锗蔗这浙珍斟真甄砧臻贞针侦枕疹诊震振镇阵蒸挣睁征狰争怔整拯正政"],["d640","諤",34,"謈",27],["d680","謤謥謧",30,"帧症郑证芝枝支吱蜘知肢脂汁之织职直植殖执值侄址指止趾只旨纸志挚掷至致置帜峙制智秩稚质炙痔滞治窒中盅忠钟衷终种肿重仲众舟周州洲诌粥轴肘帚咒皱宙昼骤珠株蛛朱猪诸诛逐竹烛煮拄瞩嘱主著柱助蛀贮铸筑"],["d740","譆",31,"譧",4,"譭",25],["d780","讇",24,"讬讱讻诇诐诪谉谞住注祝驻抓爪拽专砖转撰赚篆桩庄装妆撞壮状椎锥追赘坠缀谆准捉拙卓桌琢茁酌啄着灼浊兹咨资姿滋淄孜紫仔籽滓子自渍字鬃棕踪宗综总纵邹走奏揍租足卒族祖诅阻组钻纂嘴醉最罪尊遵昨左佐柞做作坐座"],["d840","谸",8,"豂豃豄豅豈豊豋豍",7,"豖豗豘豙豛",5,"豣",6,"豬",6,"豴豵豶豷豻",6,"貃貄貆貇"],["d880","貈貋貍",6,"貕貖貗貙",20,"亍丌兀丐廿卅丕亘丞鬲孬噩丨禺丿匕乇夭爻卮氐囟胤馗毓睾鼗丶亟鼐乜乩亓芈孛啬嘏仄厍厝厣厥厮靥赝匚叵匦匮匾赜卦卣刂刈刎刭刳刿剀剌剞剡剜蒯剽劂劁劐劓冂罔亻仃仉仂仨仡仫仞伛仳伢佤仵伥伧伉伫佞佧攸佚佝"],["d940","貮",62],["d980","賭",32,"佟佗伲伽佶佴侑侉侃侏佾佻侪佼侬侔俦俨俪俅俚俣俜俑俟俸倩偌俳倬倏倮倭俾倜倌倥倨偾偃偕偈偎偬偻傥傧傩傺僖儆僭僬僦僮儇儋仝氽佘佥俎龠汆籴兮巽黉馘冁夔勹匍訇匐凫夙兕亠兖亳衮袤亵脔裒禀嬴蠃羸冫冱冽冼"],["da40","贎",14,"贠赑赒赗赟赥赨赩赪赬赮赯赱赲赸",8,"趂趃趆趇趈趉趌",4,"趒趓趕",9,"趠趡"],["da80","趢趤",12,"趲趶趷趹趻趽跀跁跂跅跇跈跉跊跍跐跒跓跔凇冖冢冥讠讦讧讪讴讵讷诂诃诋诏诎诒诓诔诖诘诙诜诟诠诤诨诩诮诰诳诶诹诼诿谀谂谄谇谌谏谑谒谔谕谖谙谛谘谝谟谠谡谥谧谪谫谮谯谲谳谵谶卩卺阝阢阡阱阪阽阼陂陉陔陟陧陬陲陴隈隍隗隰邗邛邝邙邬邡邴邳邶邺"],["db40","跕跘跙跜跠跡跢跥跦跧跩跭跮跰跱跲跴跶跼跾",6,"踆踇踈踋踍踎踐踑踒踓踕",7,"踠踡踤",4,"踫踭踰踲踳踴踶踷踸踻踼踾"],["db80","踿蹃蹅蹆蹌",4,"蹓",5,"蹚",11,"蹧蹨蹪蹫蹮蹱邸邰郏郅邾郐郄郇郓郦郢郜郗郛郫郯郾鄄鄢鄞鄣鄱鄯鄹酃酆刍奂劢劬劭劾哿勐勖勰叟燮矍廴凵凼鬯厶弁畚巯坌垩垡塾墼壅壑圩圬圪圳圹圮圯坜圻坂坩垅坫垆坼坻坨坭坶坳垭垤垌垲埏垧垴垓垠埕埘埚埙埒垸埴埯埸埤埝"],["dc40","蹳蹵蹷",4,"蹽蹾躀躂躃躄躆躈",6,"躑躒躓躕",6,"躝躟",11,"躭躮躰躱躳",6,"躻",7],["dc80","軃",10,"軏",21,"堋堍埽埭堀堞堙塄堠塥塬墁墉墚墀馨鼙懿艹艽艿芏芊芨芄芎芑芗芙芫芸芾芰苈苊苣芘芷芮苋苌苁芩芴芡芪芟苄苎芤苡茉苷苤茏茇苜苴苒苘茌苻苓茑茚茆茔茕苠苕茜荑荛荜茈莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茺茳荦荥"],["dd40","軥",62],["dd80","輤",32,"荨茛荩荬荪荭荮莰荸莳莴莠莪莓莜莅荼莶莩荽莸荻莘莞莨莺莼菁萁菥菘堇萘萋菝菽菖萜萸萑萆菔菟萏萃菸菹菪菅菀萦菰菡葜葑葚葙葳蒇蒈葺蒉葸萼葆葩葶蒌蒎萱葭蓁蓍蓐蓦蒽蓓蓊蒿蒺蓠蒡蒹蒴蒗蓥蓣蔌甍蔸蓰蔹蔟蔺"],["de40","轅",32,"轪辀辌辒辝辠辡辢辤辥辦辧辪辬辭辮辯農辳辴辵辷辸辺辻込辿迀迃迆"],["de80","迉",4,"迏迒迖迗迚迠迡迣迧迬迯迱迲迴迵迶迺迻迼迾迿逇逈逌逎逓逕逘蕖蔻蓿蓼蕙蕈蕨蕤蕞蕺瞢蕃蕲蕻薤薨薇薏蕹薮薜薅薹薷薰藓藁藜藿蘧蘅蘩蘖蘼廾弈夼奁耷奕奚奘匏尢尥尬尴扌扪抟抻拊拚拗拮挢拶挹捋捃掭揶捱捺掎掴捭掬掊捩掮掼揲揸揠揿揄揞揎摒揆掾摅摁搋搛搠搌搦搡摞撄摭撖"],["df40","這逜連逤逥逧",5,"逰",4,"逷逹逺逽逿遀遃遅遆遈",4,"過達違遖遙遚遜",5,"遤遦遧適遪遫遬遯",4,"遶",6,"遾邁"],["df80","還邅邆邇邉邊邌",4,"邒邔邖邘邚邜邞邟邠邤邥邧邨邩邫邭邲邷邼邽邿郀摺撷撸撙撺擀擐擗擤擢攉攥攮弋忒甙弑卟叱叽叩叨叻吒吖吆呋呒呓呔呖呃吡呗呙吣吲咂咔呷呱呤咚咛咄呶呦咝哐咭哂咴哒咧咦哓哔呲咣哕咻咿哌哙哚哜咩咪咤哝哏哞唛哧唠哽唔哳唢唣唏唑唧唪啧喏喵啉啭啁啕唿啐唼"],["e040","郂郃郆郈郉郋郌郍郒郔郕郖郘郙郚郞郟郠郣郤郥郩郪郬郮郰郱郲郳郵郶郷郹郺郻郼郿鄀鄁鄃鄅",19,"鄚鄛鄜"],["e080","鄝鄟鄠鄡鄤",10,"鄰鄲",6,"鄺",8,"酄唷啖啵啶啷唳唰啜喋嗒喃喱喹喈喁喟啾嗖喑啻嗟喽喾喔喙嗪嗷嗉嘟嗑嗫嗬嗔嗦嗝嗄嗯嗥嗲嗳嗌嗍嗨嗵嗤辔嘞嘈嘌嘁嘤嘣嗾嘀嘧嘭噘嘹噗嘬噍噢噙噜噌噔嚆噤噱噫噻噼嚅嚓嚯囔囗囝囡囵囫囹囿圄圊圉圜帏帙帔帑帱帻帼"],["e140","酅酇酈酑酓酔酕酖酘酙酛酜酟酠酦酧酨酫酭酳酺酻酼醀",4,"醆醈醊醎醏醓",6,"醜",5,"醤",5,"醫醬醰醱醲醳醶醷醸醹醻"],["e180","醼",10,"釈釋釐釒",9,"針",8,"帷幄幔幛幞幡岌屺岍岐岖岈岘岙岑岚岜岵岢岽岬岫岱岣峁岷峄峒峤峋峥崂崃崧崦崮崤崞崆崛嵘崾崴崽嵬嵛嵯嵝嵫嵋嵊嵩嵴嶂嶙嶝豳嶷巅彳彷徂徇徉後徕徙徜徨徭徵徼衢彡犭犰犴犷犸狃狁狎狍狒狨狯狩狲狴狷猁狳猃狺"],["e240","釦",62],["e280","鈥",32,"狻猗猓猡猊猞猝猕猢猹猥猬猸猱獐獍獗獠獬獯獾舛夥飧夤夂饣饧",5,"饴饷饽馀馄馇馊馍馐馑馓馔馕庀庑庋庖庥庠庹庵庾庳赓廒廑廛廨廪膺忄忉忖忏怃忮怄忡忤忾怅怆忪忭忸怙怵怦怛怏怍怩怫怊怿怡恸恹恻恺恂"],["e340","鉆",45,"鉵",16],["e380","銆",7,"銏",24,"恪恽悖悚悭悝悃悒悌悛惬悻悱惝惘惆惚悴愠愦愕愣惴愀愎愫慊慵憬憔憧憷懔懵忝隳闩闫闱闳闵闶闼闾阃阄阆阈阊阋阌阍阏阒阕阖阗阙阚丬爿戕氵汔汜汊沣沅沐沔沌汨汩汴汶沆沩泐泔沭泷泸泱泗沲泠泖泺泫泮沱泓泯泾"],["e440","銨",5,"銯",24,"鋉",31],["e480","鋩",32,"洹洧洌浃浈洇洄洙洎洫浍洮洵洚浏浒浔洳涑浯涞涠浞涓涔浜浠浼浣渚淇淅淞渎涿淠渑淦淝淙渖涫渌涮渫湮湎湫溲湟溆湓湔渲渥湄滟溱溘滠漭滢溥溧溽溻溷滗溴滏溏滂溟潢潆潇漤漕滹漯漶潋潴漪漉漩澉澍澌潸潲潼潺濑"],["e540","錊",51,"錿",10],["e580","鍊",31,"鍫濉澧澹澶濂濡濮濞濠濯瀚瀣瀛瀹瀵灏灞宀宄宕宓宥宸甯骞搴寤寮褰寰蹇謇辶迓迕迥迮迤迩迦迳迨逅逄逋逦逑逍逖逡逵逶逭逯遄遑遒遐遨遘遢遛暹遴遽邂邈邃邋彐彗彖彘尻咫屐屙孱屣屦羼弪弩弭艴弼鬻屮妁妃妍妩妪妣"],["e640","鍬",34,"鎐",27],["e680","鎬",29,"鏋鏌鏍妗姊妫妞妤姒妲妯姗妾娅娆姝娈姣姘姹娌娉娲娴娑娣娓婀婧婊婕娼婢婵胬媪媛婷婺媾嫫媲嫒嫔媸嫠嫣嫱嫖嫦嫘嫜嬉嬗嬖嬲嬷孀尕尜孚孥孳孑孓孢驵驷驸驺驿驽骀骁骅骈骊骐骒骓骖骘骛骜骝骟骠骢骣骥骧纟纡纣纥纨纩"],["e740","鏎",7,"鏗",54],["e780","鐎",32,"纭纰纾绀绁绂绉绋绌绐绔绗绛绠绡绨绫绮绯绱绲缍绶绺绻绾缁缂缃缇缈缋缌缏缑缒缗缙缜缛缟缡",6,"缪缫缬缭缯",4,"缵幺畿巛甾邕玎玑玮玢玟珏珂珑玷玳珀珉珈珥珙顼琊珩珧珞玺珲琏琪瑛琦琥琨琰琮琬"],["e840","鐯",14,"鐿",43,"鑬鑭鑮鑯"],["e880","鑰",20,"钑钖钘铇铏铓铔铚铦铻锜锠琛琚瑁瑜瑗瑕瑙瑷瑭瑾璜璎璀璁璇璋璞璨璩璐璧瓒璺韪韫韬杌杓杞杈杩枥枇杪杳枘枧杵枨枞枭枋杷杼柰栉柘栊柩枰栌柙枵柚枳柝栀柃枸柢栎柁柽栲栳桠桡桎桢桄桤梃栝桕桦桁桧桀栾桊桉栩梵梏桴桷梓桫棂楮棼椟椠棹"],["e940","锧锳锽镃镈镋镕镚镠镮镴镵長",7,"門",42],["e980","閫",32,"椤棰椋椁楗棣椐楱椹楠楂楝榄楫榀榘楸椴槌榇榈槎榉楦楣楹榛榧榻榫榭槔榱槁槊槟榕槠榍槿樯槭樗樘橥槲橄樾檠橐橛樵檎橹樽樨橘橼檑檐檩檗檫猷獒殁殂殇殄殒殓殍殚殛殡殪轫轭轱轲轳轵轶轸轷轹轺轼轾辁辂辄辇辋"],["ea40","闌",27,"闬闿阇阓阘阛阞阠阣",6,"阫阬阭阯阰阷阸阹阺阾陁陃陊陎陏陑陒陓陖陗"],["ea80","陘陙陚陜陝陞陠陣陥陦陫陭",4,"陳陸",12,"隇隉隊辍辎辏辘辚軎戋戗戛戟戢戡戥戤戬臧瓯瓴瓿甏甑甓攴旮旯旰昊昙杲昃昕昀炅曷昝昴昱昶昵耆晟晔晁晏晖晡晗晷暄暌暧暝暾曛曜曦曩贲贳贶贻贽赀赅赆赈赉赇赍赕赙觇觊觋觌觎觏觐觑牮犟牝牦牯牾牿犄犋犍犏犒挈挲掰"],["eb40","隌階隑隒隓隕隖隚際隝",9,"隨",7,"隱隲隴隵隷隸隺隻隿雂雃雈雊雋雐雑雓雔雖",9,"雡",6,"雫"],["eb80","雬雭雮雰雱雲雴雵雸雺電雼雽雿霂霃霅霊霋霌霐霑霒霔霕霗",4,"霝霟霠搿擘耄毪毳毽毵毹氅氇氆氍氕氘氙氚氡氩氤氪氲攵敕敫牍牒牖爰虢刖肟肜肓肼朊肽肱肫肭肴肷胧胨胩胪胛胂胄胙胍胗朐胝胫胱胴胭脍脎胲胼朕脒豚脶脞脬脘脲腈腌腓腴腙腚腱腠腩腼腽腭腧塍媵膈膂膑滕膣膪臌朦臊膻"],["ec40","霡",8,"霫霬霮霯霱霳",4,"霺霻霼霽霿",18,"靔靕靗靘靚靜靝靟靣靤靦靧靨靪",7],["ec80","靲靵靷",4,"靽",7,"鞆",4,"鞌鞎鞏鞐鞓鞕鞖鞗鞙",4,"臁膦欤欷欹歃歆歙飑飒飓飕飙飚殳彀毂觳斐齑斓於旆旄旃旌旎旒旖炀炜炖炝炻烀炷炫炱烨烊焐焓焖焯焱煳煜煨煅煲煊煸煺熘熳熵熨熠燠燔燧燹爝爨灬焘煦熹戾戽扃扈扉礻祀祆祉祛祜祓祚祢祗祠祯祧祺禅禊禚禧禳忑忐"],["ed40","鞞鞟鞡鞢鞤",6,"鞬鞮鞰鞱鞳鞵",46],["ed80","韤韥韨韮",4,"韴韷",23,"怼恝恚恧恁恙恣悫愆愍慝憩憝懋懑戆肀聿沓泶淼矶矸砀砉砗砘砑斫砭砜砝砹砺砻砟砼砥砬砣砩硎硭硖硗砦硐硇硌硪碛碓碚碇碜碡碣碲碹碥磔磙磉磬磲礅磴礓礤礞礴龛黹黻黼盱眄眍盹眇眈眚眢眙眭眦眵眸睐睑睇睃睚睨"],["ee40","頏",62],["ee80","顎",32,"睢睥睿瞍睽瞀瞌瞑瞟瞠瞰瞵瞽町畀畎畋畈畛畲畹疃罘罡罟詈罨罴罱罹羁罾盍盥蠲钅钆钇钋钊钌钍钏钐钔钗钕钚钛钜钣钤钫钪钭钬钯钰钲钴钶",4,"钼钽钿铄铈",6,"铐铑铒铕铖铗铙铘铛铞铟铠铢铤铥铧铨铪"],["ef40","顯",5,"颋颎颒颕颙颣風",37,"飏飐飔飖飗飛飜飝飠",4],["ef80","飥飦飩",30,"铩铫铮铯铳铴铵铷铹铼铽铿锃锂锆锇锉锊锍锎锏锒",4,"锘锛锝锞锟锢锪锫锩锬锱锲锴锶锷锸锼锾锿镂锵镄镅镆镉镌镎镏镒镓镔镖镗镘镙镛镞镟镝镡镢镤",8,"镯镱镲镳锺矧矬雉秕秭秣秫稆嵇稃稂稞稔"],["f040","餈",4,"餎餏餑",28,"餯",26],["f080","饊",9,"饖",12,"饤饦饳饸饹饻饾馂馃馉稹稷穑黏馥穰皈皎皓皙皤瓞瓠甬鸠鸢鸨",4,"鸲鸱鸶鸸鸷鸹鸺鸾鹁鹂鹄鹆鹇鹈鹉鹋鹌鹎鹑鹕鹗鹚鹛鹜鹞鹣鹦",6,"鹱鹭鹳疒疔疖疠疝疬疣疳疴疸痄疱疰痃痂痖痍痣痨痦痤痫痧瘃痱痼痿瘐瘀瘅瘌瘗瘊瘥瘘瘕瘙"],["f140","馌馎馚",10,"馦馧馩",47],["f180","駙",32,"瘛瘼瘢瘠癀瘭瘰瘿瘵癃瘾瘳癍癞癔癜癖癫癯翊竦穸穹窀窆窈窕窦窠窬窨窭窳衤衩衲衽衿袂袢裆袷袼裉裢裎裣裥裱褚裼裨裾裰褡褙褓褛褊褴褫褶襁襦襻疋胥皲皴矜耒耔耖耜耠耢耥耦耧耩耨耱耋耵聃聆聍聒聩聱覃顸颀颃"],["f240","駺",62],["f280","騹",32,"颉颌颍颏颔颚颛颞颟颡颢颥颦虍虔虬虮虿虺虼虻蚨蚍蚋蚬蚝蚧蚣蚪蚓蚩蚶蛄蚵蛎蚰蚺蚱蚯蛉蛏蚴蛩蛱蛲蛭蛳蛐蜓蛞蛴蛟蛘蛑蜃蜇蛸蜈蜊蜍蜉蜣蜻蜞蜥蜮蜚蜾蝈蜴蜱蜩蜷蜿螂蜢蝽蝾蝻蝠蝰蝌蝮螋蝓蝣蝼蝤蝙蝥螓螯螨蟒"],["f340","驚",17,"驲骃骉骍骎骔骕骙骦骩",6,"骲骳骴骵骹骻骽骾骿髃髄髆",4,"髍髎髏髐髒體髕髖髗髙髚髛髜"],["f380","髝髞髠髢髣髤髥髧髨髩髪髬髮髰",8,"髺髼",6,"鬄鬅鬆蟆螈螅螭螗螃螫蟥螬螵螳蟋蟓螽蟑蟀蟊蟛蟪蟠蟮蠖蠓蟾蠊蠛蠡蠹蠼缶罂罄罅舐竺竽笈笃笄笕笊笫笏筇笸笪笙笮笱笠笥笤笳笾笞筘筚筅筵筌筝筠筮筻筢筲筱箐箦箧箸箬箝箨箅箪箜箢箫箴篑篁篌篝篚篥篦篪簌篾篼簏簖簋"],["f440","鬇鬉",5,"鬐鬑鬒鬔",10,"鬠鬡鬢鬤",10,"鬰鬱鬳",7,"鬽鬾鬿魀魆魊魋魌魎魐魒魓魕",5],["f480","魛",32,"簟簪簦簸籁籀臾舁舂舄臬衄舡舢舣舭舯舨舫舸舻舳舴舾艄艉艋艏艚艟艨衾袅袈裘裟襞羝羟羧羯羰羲籼敉粑粝粜粞粢粲粼粽糁糇糌糍糈糅糗糨艮暨羿翎翕翥翡翦翩翮翳糸絷綦綮繇纛麸麴赳趄趔趑趱赧赭豇豉酊酐酎酏酤"],["f540","魼",62],["f580","鮻",32,"酢酡酰酩酯酽酾酲酴酹醌醅醐醍醑醢醣醪醭醮醯醵醴醺豕鹾趸跫踅蹙蹩趵趿趼趺跄跖跗跚跞跎跏跛跆跬跷跸跣跹跻跤踉跽踔踝踟踬踮踣踯踺蹀踹踵踽踱蹉蹁蹂蹑蹒蹊蹰蹶蹼蹯蹴躅躏躔躐躜躞豸貂貊貅貘貔斛觖觞觚觜"],["f640","鯜",62],["f680","鰛",32,"觥觫觯訾謦靓雩雳雯霆霁霈霏霎霪霭霰霾龀龃龅",5,"龌黾鼋鼍隹隼隽雎雒瞿雠銎銮鋈錾鍪鏊鎏鐾鑫鱿鲂鲅鲆鲇鲈稣鲋鲎鲐鲑鲒鲔鲕鲚鲛鲞",5,"鲥",4,"鲫鲭鲮鲰",7,"鲺鲻鲼鲽鳄鳅鳆鳇鳊鳋"],["f740","鰼",62],["f780","鱻鱽鱾鲀鲃鲄鲉鲊鲌鲏鲓鲖鲗鲘鲙鲝鲪鲬鲯鲹鲾",4,"鳈鳉鳑鳒鳚鳛鳠鳡鳌",4,"鳓鳔鳕鳗鳘鳙鳜鳝鳟鳢靼鞅鞑鞒鞔鞯鞫鞣鞲鞴骱骰骷鹘骶骺骼髁髀髅髂髋髌髑魅魃魇魉魈魍魑飨餍餮饕饔髟髡髦髯髫髻髭髹鬈鬏鬓鬟鬣麽麾縻麂麇麈麋麒鏖麝麟黛黜黝黠黟黢黩黧黥黪黯鼢鼬鼯鼹鼷鼽鼾齄"],["f840","鳣",62],["f880","鴢",32],["f940","鵃",62],["f980","鶂",32],["fa40","鶣",62],["fa80","鷢",32],["fb40","鸃",27,"鸤鸧鸮鸰鸴鸻鸼鹀鹍鹐鹒鹓鹔鹖鹙鹝鹟鹠鹡鹢鹥鹮鹯鹲鹴",9,"麀"],["fb80","麁麃麄麅麆麉麊麌",5,"麔",8,"麞麠",5,"麧麨麩麪"],["fc40","麫",8,"麵麶麷麹麺麼麿",4,"黅黆黇黈黊黋黌黐黒黓黕黖黗黙黚點黡黣黤黦黨黫黬黭黮黰",8,"黺黽黿",6],["fc80","鼆",4,"鼌鼏鼑鼒鼔鼕鼖鼘鼚",5,"鼡鼣",8,"鼭鼮鼰鼱"],["fd40","鼲",4,"鼸鼺鼼鼿",4,"齅",10,"齒",38],["fd80","齹",5,"龁龂龍",11,"龜龝龞龡",4,"郎凉秊裏隣"],["fe40","兀嗀﨎﨏﨑﨓﨔礼﨟蘒﨡﨣﨤﨧﨨﨩"]]')},function(t,e,n){var i=n(16),r=n(10);t.exports=function(t){return"symbol"==typeof t||r(t)&&"[object Symbol]"==i(t)}},function(t,e,n){var i=n(45);t.exports=function(t){if("string"==typeof t||i(t))return t;var e=t+"";return"0"==e&&1/t==-1/0?"-0":e}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e,n){var i=n(33)(n(9),"Map");t.exports=i},function(t,e,n){(function(e){var n="object"==typeof e&&e&&e.Object===Object&&e;t.exports=n}).call(this,n(4))},function(t,e,n){var i=n(102),r=n(109),a=n(111),o=n(112),s=n(113);function c(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var i=t[e];this.set(i[0],i[1])}}c.prototype.clear=i,c.prototype.delete=r,c.prototype.get=a,c.prototype.has=o,c.prototype.set=s,t.exports=c},function(t,e,n){var i=n(35),r=n(21);t.exports=function(t,e,n){(void 0===n||r(t[e],n))&&(void 0!==n||e in t)||i(t,e,n)}},function(t,e,n){var i=n(33),r=function(){try{var t=i(Object,"defineProperty");return t({},"",{}),t}catch(t){}}();t.exports=r},function(t,e,n){var i=n(124)(Object.getPrototypeOf,Object);t.exports=i},function(t,e){var n=Object.prototype;t.exports=function(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||n)}},function(t,e,n){(function(t){var i=n(9),r=n(127),a=e&&!e.nodeType&&e,o=a&&"object"==typeof t&&t&&!t.nodeType&&t,s=o&&o.exports===a?i.Buffer:void 0,c=(s?s.isBuffer:void 0)||r;t.exports=c}).call(this,n(36)(t))},function(t,e,n){var i=n(129),r=n(130),a=n(131),o=a&&a.isTypedArray,s=o?r(o):i;t.exports=s},function(t,e){t.exports=function(t,e){if(("constructor"!==e||"function"!=typeof t[e])&&"__proto__"!=e)return t[e]}},function(t,e,n){var i=n(35),r=n(21),a=Object.prototype.hasOwnProperty;t.exports=function(t,e,n){var o=t[e];a.call(t,e)&&r(o,n)&&(void 0!==n||e in t)||i(t,e,n)}},function(t,e,n){var i=n(134),r=n(136),a=n(37);t.exports=function(t){return a(t)?i(t,!0):r(t)}},function(t,e){t.exports=function(t){return t}},function(t,e,n){var i=n(140),r=Math.max;t.exports=function(t,e,n){return e=r(void 0===e?t.length-1:e,0),function(){for(var a=arguments,o=-1,s=r(a.length-e,0),c=Array(s);++o<s;)c[o]=a[e+o];o=-1;for(var u=Array(e+1);++o<e;)u[o]=a[o];return u[e]=n(c),i(t,this,u)}}},function(t,e,n){var i=n(141),r=n(143)(i);t.exports=r},function(t,e,n){(function(t){e.fetch=s(t.fetch)&&s(t.ReadableStream),e.writableStream=s(t.WritableStream),e.abortController=s(t.AbortController),e.blobConstructor=!1;try{new Blob([new ArrayBuffer(1)]),e.blobConstructor=!0}catch(t){}var n;function i(){if(void 0!==n)return n;if(t.XMLHttpRequest){n=new t.XMLHttpRequest;try{n.open("GET",t.XDomainRequest?"/":"https://example.com")}catch(t){n=null}}else n=null;return n}function r(t){var e=i();if(!e)return!1;try{return e.responseType=t,e.responseType===t}catch(t){}return!1}var a=void 0!==t.ArrayBuffer,o=a&&s(t.ArrayBuffer.prototype.slice);function s(t){return"function"==typeof t}e.arraybuffer=e.fetch||a&&r("arraybuffer"),e.msstream=!e.fetch&&o&&r("ms-stream"),e.mozchunkedarraybuffer=!e.fetch&&a&&r("moz-chunked-arraybuffer"),e.overrideMimeType=e.fetch||!!i()&&s(i().overrideMimeType),e.vbArray=s(t.VBArray),n=null}).call(this,n(4))},function(t,e,n){(function(t,i,r){var a=n(63),o=n(0),s=n(17),c=e.readyStates={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4},u=e.IncomingMessage=function(e,n,o,c){var u=this;if(s.Readable.call(u),u._mode=o,u.headers={},u.rawHeaders=[],u.trailers={},u.rawTrailers=[],u.on("end",(function(){t.nextTick((function(){u.emit("close")}))})),"fetch"===o){if(u._fetchResponse=n,u.url=n.url,u.statusCode=n.status,u.statusMessage=n.statusText,n.headers.forEach((function(t,e){u.headers[e.toLowerCase()]=t,u.rawHeaders.push(e,t)})),a.writableStream){var l=new WritableStream({write:function(t){return new Promise((function(e,n){u._destroyed?n():u.push(new i(t))?e():u._resumeFetch=e}))},close:function(){r.clearTimeout(c),u._destroyed||u.push(null)},abort:function(t){u._destroyed||u.emit("error",t)}});try{return void n.body.pipeTo(l).catch((function(t){r.clearTimeout(c),u._destroyed||u.emit("error",t)}))}catch(t){}}var p=n.body.getReader();!function t(){p.read().then((function(e){if(!u._destroyed){if(e.done)return r.clearTimeout(c),void u.push(null);u.push(new i(e.value)),t()}})).catch((function(t){r.clearTimeout(c),u._destroyed||u.emit("error",t)}))}()}else{if(u._xhr=e,u._pos=0,u.url=e.responseURL,u.statusCode=e.status,u.statusMessage=e.statusText,e.getAllResponseHeaders().split(/\r?\n/).forEach((function(t){var e=t.match(/^([^:]+):\s*(.*)/);if(e){var n=e[1].toLowerCase();"set-cookie"===n?(void 0===u.headers[n]&&(u.headers[n]=[]),u.headers[n].push(e[2])):void 0!==u.headers[n]?u.headers[n]+=", "+e[2]:u.headers[n]=e[2],u.rawHeaders.push(e[1],e[2])}})),u._charset="x-user-defined",!a.overrideMimeType){var f=u.rawHeaders["mime-type"];if(f){var d=f.match(/;\s*charset=([^;])(;|$)/);d&&(u._charset=d[1].toLowerCase())}u._charset||(u._charset="utf-8")}}};o(u,s.Readable),u.prototype._read=function(){var t=this._resumeFetch;t&&(this._resumeFetch=null,t())},u.prototype._onXHRProgress=function(){var t=this,e=t._xhr,n=null;switch(t._mode){case"text:vbarray":if(e.readyState!==c.DONE)break;try{n=new r.VBArray(e.responseBody).toArray()}catch(t){}if(null!==n){t.push(new i(n));break}case"text":try{n=e.responseText}catch(e){t._mode="text:vbarray";break}if(n.length>t._pos){var a=n.substr(t._pos);if("x-user-defined"===t._charset){for(var o=new i(a.length),s=0;s<a.length;s++)o[s]=255&a.charCodeAt(s);t.push(o)}else t.push(a,t._charset);t._pos=n.length}break;case"arraybuffer":if(e.readyState!==c.DONE||!e.response)break;n=e.response,t.push(new i(new Uint8Array(n)));break;case"moz-chunked-arraybuffer":if(n=e.response,e.readyState!==c.LOADING||!n)break;t.push(new i(new Uint8Array(n)));break;case"ms-stream":if(n=e.response,e.readyState!==c.LOADING)break;var u=new r.MSStreamReader;u.onprogress=function(){u.result.byteLength>t._pos&&(t.push(new i(new Uint8Array(u.result.slice(t._pos)))),t._pos=u.result.byteLength)},u.onload=function(){t.push(null)},u.readAsArrayBuffer(n)}t._xhr.readyState===c.DONE&&"ms-stream"!==t._mode&&t.push(null)}}).call(this,n(3),n(1).Buffer,n(4))},function(t,e,n){"use strict";(function(e,i){var r=n(27);t.exports=v;var a,o=n(47);v.ReadableState=b;n(40).EventEmitter;var s=function(t,e){return t.listeners(e).length},c=n(66),u=n(2).Buffer,l=e.Uint8Array||function(){};var p=n(11);p.inherits=n(0);var f=n(151),d=void 0;d=f&&f.debuglog?f.debuglog("stream"):function(){};var h,m=n(152),g=n(67);p.inherits(v,c);var y=["error","close","destroy","pause","resume"];function b(t,e){t=t||{};var i=e instanceof(a=a||n(8));this.objectMode=!!t.objectMode,i&&(this.objectMode=this.objectMode||!!t.readableObjectMode);var r=t.highWaterMark,o=t.readableHighWaterMark,s=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:i&&(o||0===o)?o:s,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new m,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(h||(h=n(28).StringDecoder),this.decoder=new h(t.encoding),this.encoding=t.encoding)}function v(t){if(a=a||n(8),!(this instanceof v))return new v(t);this._readableState=new b(t,this),this.readable=!0,t&&("function"==typeof t.read&&(this._read=t.read),"function"==typeof t.destroy&&(this._destroy=t.destroy)),c.call(this)}function w(t,e,n,i,r){var a,o=t._readableState;null===e?(o.reading=!1,function(t,e){if(e.ended)return;if(e.decoder){var n=e.decoder.end();n&&n.length&&(e.buffer.push(n),e.length+=e.objectMode?1:n.length)}e.ended=!0,_(t)}(t,o)):(r||(a=function(t,e){var n;i=e,u.isBuffer(i)||i instanceof l||"string"==typeof e||void 0===e||t.objectMode||(n=new TypeError("Invalid non-string/buffer chunk"));var i;return n}(o,e)),a?t.emit("error",a):o.objectMode||e&&e.length>0?("string"==typeof e||o.objectMode||Object.getPrototypeOf(e)===u.prototype||(e=function(t){return u.from(t)}(e)),i?o.endEmitted?t.emit("error",new Error("stream.unshift() after end event")):x(t,o,e,!0):o.ended?t.emit("error",new Error("stream.push() after EOF")):(o.reading=!1,o.decoder&&!n?(e=o.decoder.write(e),o.objectMode||0!==e.length?x(t,o,e,!1):k(t,o)):x(t,o,e,!1))):i||(o.reading=!1));return function(t){return!t.ended&&(t.needReadable||t.length<t.highWaterMark||0===t.length)}(o)}function x(t,e,n,i){e.flowing&&0===e.length&&!e.sync?(t.emit("data",n),t.read(0)):(e.length+=e.objectMode?1:n.length,i?e.buffer.unshift(n):e.buffer.push(n),e.needReadable&&_(t)),k(t,e)}Object.defineProperty(v.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(t){this._readableState&&(this._readableState.destroyed=t)}}),v.prototype.destroy=g.destroy,v.prototype._undestroy=g.undestroy,v.prototype._destroy=function(t,e){this.push(null),e(t)},v.prototype.push=function(t,e){var n,i=this._readableState;return i.objectMode?n=!0:"string"==typeof t&&((e=e||i.defaultEncoding)!==i.encoding&&(t=u.from(t,e),e=""),n=!0),w(this,t,e,!1,n)},v.prototype.unshift=function(t){return w(this,t,null,!0,!1)},v.prototype.isPaused=function(){return!1===this._readableState.flowing},v.prototype.setEncoding=function(t){return h||(h=n(28).StringDecoder),this._readableState.decoder=new h(t),this._readableState.encoding=t,this};function D(t,e){return t<=0||0===e.length&&e.ended?0:e.objectMode?1:t!=t?e.flowing&&e.length?e.buffer.head.data.length:e.length:(t>e.highWaterMark&&(e.highWaterMark=function(t){return t>=8388608?t=8388608:(t--,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,t++),t}(t)),t<=e.length?t:e.ended?e.length:(e.needReadable=!0,0))}function _(t){var e=t._readableState;e.needReadable=!1,e.emittedReadable||(d("emitReadable",e.flowing),e.emittedReadable=!0,e.sync?r.nextTick(E,t):E(t))}function E(t){d("emit readable"),t.emit("readable"),A(t)}function k(t,e){e.readingMore||(e.readingMore=!0,r.nextTick(T,t,e))}function T(t,e){for(var n=e.length;!e.reading&&!e.flowing&&!e.ended&&e.length<e.highWaterMark&&(d("maybeReadMore read 0"),t.read(0),n!==e.length);)n=e.length;e.readingMore=!1}function C(t){d("readable nexttick read 0"),t.read(0)}function S(t,e){e.reading||(d("resume read 0"),t.read(0)),e.resumeScheduled=!1,e.awaitDrain=0,t.emit("resume"),A(t),e.flowing&&!e.reading&&t.read(0)}function A(t){var e=t._readableState;for(d("flow",e.flowing);e.flowing&&null!==t.read(););}function F(t,e){return 0===e.length?null:(e.objectMode?n=e.buffer.shift():!t||t>=e.length?(n=e.decoder?e.buffer.join(""):1===e.buffer.length?e.buffer.head.data:e.buffer.concat(e.length),e.buffer.clear()):n=function(t,e,n){var i;t<e.head.data.length?(i=e.head.data.slice(0,t),e.head.data=e.head.data.slice(t)):i=t===e.head.data.length?e.shift():n?function(t,e){var n=e.head,i=1,r=n.data;t-=r.length;for(;n=n.next;){var a=n.data,o=t>a.length?a.length:t;if(o===a.length?r+=a:r+=a.slice(0,t),0===(t-=o)){o===a.length?(++i,n.next?e.head=n.next:e.head=e.tail=null):(e.head=n,n.data=a.slice(o));break}++i}return e.length-=i,r}(t,e):function(t,e){var n=u.allocUnsafe(t),i=e.head,r=1;i.data.copy(n),t-=i.data.length;for(;i=i.next;){var a=i.data,o=t>a.length?a.length:t;if(a.copy(n,n.length-t,0,o),0===(t-=o)){o===a.length?(++r,i.next?e.head=i.next:e.head=e.tail=null):(e.head=i,i.data=a.slice(o));break}++r}return e.length-=r,n}(t,e);return i}(t,e.buffer,e.decoder),n);var n}function j(t){var e=t._readableState;if(e.length>0)throw new Error('"endReadable()" called on non-empty stream');e.endEmitted||(e.ended=!0,r.nextTick(O,e,t))}function O(t,e){t.endEmitted||0!==t.length||(t.endEmitted=!0,e.readable=!1,e.emit("end"))}function B(t,e){for(var n=0,i=t.length;n<i;n++)if(t[n]===e)return n;return-1}v.prototype.read=function(t){d("read",t),t=parseInt(t,10);var e=this._readableState,n=t;if(0!==t&&(e.emittedReadable=!1),0===t&&e.needReadable&&(e.length>=e.highWaterMark||e.ended))return d("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?j(this):_(this),null;if(0===(t=D(t,e))&&e.ended)return 0===e.length&&j(this),null;var i,r=e.needReadable;return d("need readable",r),(0===e.length||e.length-t<e.highWaterMark)&&d("length less than watermark",r=!0),e.ended||e.reading?d("reading or ended",r=!1):r&&(d("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this._read(e.highWaterMark),e.sync=!1,e.reading||(t=D(n,e))),null===(i=t>0?F(t,e):null)?(e.needReadable=!0,t=0):e.length-=t,0===e.length&&(e.ended||(e.needReadable=!0),n!==t&&e.ended&&j(this)),null!==i&&this.emit("data",i),i},v.prototype._read=function(t){this.emit("error",new Error("_read() is not implemented"))},v.prototype.pipe=function(t,e){var n=this,a=this._readableState;switch(a.pipesCount){case 0:a.pipes=t;break;case 1:a.pipes=[a.pipes,t];break;default:a.pipes.push(t)}a.pipesCount+=1,d("pipe count=%d opts=%j",a.pipesCount,e);var c=(!e||!1!==e.end)&&t!==i.stdout&&t!==i.stderr?l:v;function u(e,i){d("onunpipe"),e===n&&i&&!1===i.hasUnpiped&&(i.hasUnpiped=!0,d("cleanup"),t.removeListener("close",y),t.removeListener("finish",b),t.removeListener("drain",p),t.removeListener("error",g),t.removeListener("unpipe",u),n.removeListener("end",l),n.removeListener("end",v),n.removeListener("data",m),f=!0,!a.awaitDrain||t._writableState&&!t._writableState.needDrain||p())}function l(){d("onend"),t.end()}a.endEmitted?r.nextTick(c):n.once("end",c),t.on("unpipe",u);var p=function(t){return function(){var e=t._readableState;d("pipeOnDrain",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&s(t,"data")&&(e.flowing=!0,A(t))}}(n);t.on("drain",p);var f=!1;var h=!1;function m(e){d("ondata"),h=!1,!1!==t.write(e)||h||((1===a.pipesCount&&a.pipes===t||a.pipesCount>1&&-1!==B(a.pipes,t))&&!f&&(d("false write response, pause",n._readableState.awaitDrain),n._readableState.awaitDrain++,h=!0),n.pause())}function g(e){d("onerror",e),v(),t.removeListener("error",g),0===s(t,"error")&&t.emit("error",e)}function y(){t.removeListener("finish",b),v()}function b(){d("onfinish"),t.removeListener("close",y),v()}function v(){d("unpipe"),n.unpipe(t)}return n.on("data",m),function(t,e,n){if("function"==typeof t.prependListener)return t.prependListener(e,n);t._events&&t._events[e]?o(t._events[e])?t._events[e].unshift(n):t._events[e]=[n,t._events[e]]:t.on(e,n)}(t,"error",g),t.once("close",y),t.once("finish",b),t.emit("pipe",n),a.flowing||(d("pipe resume"),n.resume()),t},v.prototype.unpipe=function(t){var e=this._readableState,n={hasUnpiped:!1};if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes?this:(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit("unpipe",this,n),this);if(!t){var i=e.pipes,r=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var a=0;a<r;a++)i[a].emit("unpipe",this,n);return this}var o=B(e.pipes,t);return-1===o?this:(e.pipes.splice(o,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit("unpipe",this,n),this)},v.prototype.on=function(t,e){var n=c.prototype.on.call(this,t,e);if("data"===t)!1!==this._readableState.flowing&&this.resume();else if("readable"===t){var i=this._readableState;i.endEmitted||i.readableListening||(i.readableListening=i.needReadable=!0,i.emittedReadable=!1,i.reading?i.length&&_(this):r.nextTick(C,this))}return n},v.prototype.addListener=v.prototype.on,v.prototype.resume=function(){var t=this._readableState;return t.flowing||(d("resume"),t.flowing=!0,function(t,e){e.resumeScheduled||(e.resumeScheduled=!0,r.nextTick(S,t,e))}(this,t)),this},v.prototype.pause=function(){return d("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(d("pause"),this._readableState.flowing=!1,this.emit("pause")),this},v.prototype.wrap=function(t){var e=this,n=this._readableState,i=!1;for(var r in t.on("end",(function(){if(d("wrapped end"),n.decoder&&!n.ended){var t=n.decoder.end();t&&t.length&&e.push(t)}e.push(null)})),t.on("data",(function(r){(d("wrapped data"),n.decoder&&(r=n.decoder.write(r)),n.objectMode&&null==r)||(n.objectMode||r&&r.length)&&(e.push(r)||(i=!0,t.pause()))})),t)void 0===this[r]&&"function"==typeof t[r]&&(this[r]=function(e){return function(){return t[e].apply(t,arguments)}}(r));for(var a=0;a<y.length;a++)t.on(y[a],this.emit.bind(this,y[a]));return this._read=function(e){d("wrapped _read",e),i&&(i=!1,t.resume())},this},Object.defineProperty(v.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),v._fromList=F}).call(this,n(4),n(3))},function(t,e,n){t.exports=n(40).EventEmitter},function(t,e,n){"use strict";var i=n(27);function r(t,e){t.emit("error",e)}t.exports={destroy:function(t,e){var n=this,a=this._readableState&&this._readableState.destroyed,o=this._writableState&&this._writableState.destroyed;return a||o?(e?e(t):!t||this._writableState&&this._writableState.errorEmitted||i.nextTick(r,this,t),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(t||null,(function(t){!e&&t?(i.nextTick(r,n,t),n._writableState&&(n._writableState.errorEmitted=!0)):e&&e(t)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}}},function(t,e,n){"use strict";t.exports=o;var i=n(8),r=n(11);function a(t,e){var n=this._transformState;n.transforming=!1;var i=n.writecb;if(!i)return this.emit("error",new Error("write callback called multiple times"));n.writechunk=null,n.writecb=null,null!=e&&this.push(e),i(t);var r=this._readableState;r.reading=!1,(r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}function o(t){if(!(this instanceof o))return new o(t);i.call(this,t),this._transformState={afterTransform:a.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,t&&("function"==typeof t.transform&&(this._transform=t.transform),"function"==typeof t.flush&&(this._flush=t.flush)),this.on("prefinish",s)}function s(){var t=this;"function"==typeof this._flush?this._flush((function(e,n){c(t,e,n)})):c(this,null,null)}function c(t,e,n){if(e)return t.emit("error",e);if(null!=n&&t.push(n),t._writableState.length)throw new Error("Calling transform done when ws.length != 0");if(t._transformState.transforming)throw new Error("Calling transform done when still transforming");return t.push(null)}r.inherits=n(0),r.inherits(o,i),o.prototype.push=function(t,e){return this._transformState.needTransform=!1,i.prototype.push.call(this,t,e)},o.prototype._transform=function(t,e,n){throw new Error("_transform() is not implemented")},o.prototype._write=function(t,e,n){var i=this._transformState;if(i.writecb=n,i.writechunk=t,i.writeencoding=e,!i.transforming){var r=this._readableState;(i.needTransform||r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}},o.prototype._read=function(t){var e=this._transformState;null!==e.writechunk&&e.writecb&&!e.transforming?(e.transforming=!0,this._transform(e.writechunk,e.writeencoding,e.afterTransform)):e.needTransform=!0},o.prototype._destroy=function(t,e){var n=this;i.prototype._destroy.call(this,t,(function(t){e(t),n.emit("close")}))}},function(t,e){var n=1e3,i=6e4,r=36e5,a=24*r;function o(t,e,n,i){var r=e>=1.5*n;return Math.round(t/n)+" "+i+(r?"s":"")}t.exports=function(t,e){e=e||{};var s=typeof t;if("string"===s&&t.length>0)return function(t){if((t=String(t)).length>100)return;var e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);if(!e)return;var o=parseFloat(e[1]);switch((e[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*o;case"weeks":case"week":case"w":return 6048e5*o;case"days":case"day":case"d":return o*a;case"hours":case"hour":case"hrs":case"hr":case"h":return o*r;case"minutes":case"minute":case"mins":case"min":case"m":return o*i;case"seconds":case"second":case"secs":case"sec":case"s":return o*n;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return o;default:return}}(t);if("number"===s&&isFinite(t))return e.long?function(t){var e=Math.abs(t);if(e>=a)return o(t,e,a,"day");if(e>=r)return o(t,e,r,"hour");if(e>=i)return o(t,e,i,"minute");if(e>=n)return o(t,e,n,"second");return t+" ms"}(t):function(t){var e=Math.abs(t);if(e>=a)return Math.round(t/a)+"d";if(e>=r)return Math.round(t/r)+"h";if(e>=i)return Math.round(t/i)+"m";if(e>=n)return Math.round(t/n)+"s";return t+"ms"}(t);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(t))}},function(t,e,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function i(t,e){if(t===e)return 0;for(var n=t.length,i=e.length,r=0,a=Math.min(n,i);r<a;++r)if(t[r]!==e[r]){n=t[r],i=e[r];break}return n<i?-1:i<n?1:0}function r(t){return e.Buffer&&"function"==typeof e.Buffer.isBuffer?e.Buffer.isBuffer(t):!(null==t||!t._isBuffer)}var a=n(13),o=Object.prototype.hasOwnProperty,s=Array.prototype.slice,c="foo"===function(){}.name;function u(t){return Object.prototype.toString.call(t)}function l(t){return!r(t)&&("function"==typeof e.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):!!t&&(t instanceof DataView||!!(t.buffer&&t.buffer instanceof ArrayBuffer))))}var p=t.exports=y,f=/\s*function\s+([^\(\s]*)\s*/;function d(t){if(a.isFunction(t)){if(c)return t.name;var e=t.toString().match(f);return e&&e[1]}}function h(t,e){return"string"==typeof t?t.length<e?t:t.slice(0,e):t}function m(t){if(c||!a.isFunction(t))return a.inspect(t);var e=d(t);return"[Function"+(e?": "+e:"")+"]"}function g(t,e,n,i,r){throw new p.AssertionError({message:n,actual:t,expected:e,operator:i,stackStartFunction:r})}function y(t,e){t||g(t,!0,e,"==",p.ok)}function b(t,e,n,o){if(t===e)return!0;if(r(t)&&r(e))return 0===i(t,e);if(a.isDate(t)&&a.isDate(e))return t.getTime()===e.getTime();if(a.isRegExp(t)&&a.isRegExp(e))return t.source===e.source&&t.global===e.global&&t.multiline===e.multiline&&t.lastIndex===e.lastIndex&&t.ignoreCase===e.ignoreCase;if(null!==t&&"object"==typeof t||null!==e&&"object"==typeof e){if(l(t)&&l(e)&&u(t)===u(e)&&!(t instanceof Float32Array||t instanceof Float64Array))return 0===i(new Uint8Array(t.buffer),new Uint8Array(e.buffer));if(r(t)!==r(e))return!1;var c=(o=o||{actual:[],expected:[]}).actual.indexOf(t);return-1!==c&&c===o.expected.indexOf(e)||(o.actual.push(t),o.expected.push(e),function(t,e,n,i){if(null==t||null==e)return!1;if(a.isPrimitive(t)||a.isPrimitive(e))return t===e;if(n&&Object.getPrototypeOf(t)!==Object.getPrototypeOf(e))return!1;var r=v(t),o=v(e);if(r&&!o||!r&&o)return!1;if(r)return t=s.call(t),e=s.call(e),b(t,e,n);var c,u,l=D(t),p=D(e);if(l.length!==p.length)return!1;for(l.sort(),p.sort(),u=l.length-1;u>=0;u--)if(l[u]!==p[u])return!1;for(u=l.length-1;u>=0;u--)if(c=l[u],!b(t[c],e[c],n,i))return!1;return!0}(t,e,n,o))}return n?t===e:t==e}function v(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function w(t,e){if(!t||!e)return!1;if("[object RegExp]"==Object.prototype.toString.call(e))return e.test(t);try{if(t instanceof e)return!0}catch(t){}return!Error.isPrototypeOf(e)&&!0===e.call({},t)}function x(t,e,n,i){var r;if("function"!=typeof e)throw new TypeError('"block" argument must be a function');"string"==typeof n&&(i=n,n=null),r=function(t){var e;try{t()}catch(t){e=t}return e}(e),i=(n&&n.name?" ("+n.name+").":".")+(i?" "+i:"."),t&&!r&&g(r,n,"Missing expected exception"+i);var o="string"==typeof i,s=!t&&r&&!n;if((!t&&a.isError(r)&&o&&w(r,n)||s)&&g(r,n,"Got unwanted exception"+i),t&&r&&n&&!w(r,n)||!t&&r)throw r}p.AssertionError=function(t){this.name="AssertionError",this.actual=t.actual,this.expected=t.expected,this.operator=t.operator,t.message?(this.message=t.message,this.generatedMessage=!1):(this.message=function(t){return h(m(t.actual),128)+" "+t.operator+" "+h(m(t.expected),128)}(this),this.generatedMessage=!0);var e=t.stackStartFunction||g;if(Error.captureStackTrace)Error.captureStackTrace(this,e);else{var n=new Error;if(n.stack){var i=n.stack,r=d(e),a=i.indexOf("\n"+r);if(a>=0){var o=i.indexOf("\n",a+1);i=i.substring(o+1)}this.stack=i}}},a.inherits(p.AssertionError,Error),p.fail=g,p.ok=y,p.equal=function(t,e,n){t!=e&&g(t,e,n,"==",p.equal)},p.notEqual=function(t,e,n){t==e&&g(t,e,n,"!=",p.notEqual)},p.deepEqual=function(t,e,n){b(t,e,!1)||g(t,e,n,"deepEqual",p.deepEqual)},p.deepStrictEqual=function(t,e,n){b(t,e,!0)||g(t,e,n,"deepStrictEqual",p.deepStrictEqual)},p.notDeepEqual=function(t,e,n){b(t,e,!1)&&g(t,e,n,"notDeepEqual",p.notDeepEqual)},p.notDeepStrictEqual=function t(e,n,i){b(e,n,!0)&&g(e,n,i,"notDeepStrictEqual",t)},p.strictEqual=function(t,e,n){t!==e&&g(t,e,n,"===",p.strictEqual)},p.notStrictEqual=function(t,e,n){t===e&&g(t,e,n,"!==",p.notStrictEqual)},p.throws=function(t,e,n){x(!0,t,e,n)},p.doesNotThrow=function(t,e,n){x(!1,t,e,n)},p.ifError=function(t){if(t)throw t};var D=Object.keys||function(t){var e=[];for(var n in t)o.call(t,n)&&e.push(n);return e}}).call(this,n(4))},function(t,e,n){(function(t){var i=n(70),r=n(13);function a(t){var e,n,a,o,u,l,p,f,d,h=["([^%]*)","%","(['\\-+ #0]*?)","([1-9]\\d*)?","(\\.([1-9]\\d*))?","[lhjztL]*?","([diouxXfFeEgGaAcCsSp%jr])"].join(""),m=new RegExp(h),g=Array.prototype.slice.call(arguments,1),y="",b=1;for(i.equal("string",typeof t);null!==(d=m.exec(t));)if(y+=d[1],t=t.substring(d[0].length),e=d[2]||"",n=d[3]||0,a=d[4]||"",u=!1,p=!1,l=" ","%"!=(o=d[6])){if(0===g.length)throw new Error("too few args to sprintf");if(f=g.shift(),b++,e.match(/[\' #]/))throw new Error("unsupported flags: "+e);if(a.length>0)throw new Error("non-zero precision not supported");switch(e.match(/-/)&&(u=!0),e.match(/0/)&&(l="0"),e.match(/\+/)&&(p=!0),o){case"s":if(null==f)throw new Error("argument "+b+": attempted to print undefined or null as a string");y+=s(l,n,u,f.toString());break;case"d":f=Math.floor(f);case"f":y+=(p=p&&f>0?"+":"")+s(l,n,u,f.toString());break;case"x":y+=s(l,n,u,f.toString(16));break;case"j":0===n&&(n=10),y+=r.inspect(f,!1,n);break;case"r":y+=c(f);break;default:throw new Error("unsupported conversion: "+o)}}else y+="%";return y+=t}function o(t){var e=Array.prototype.slice.call(arguments,1);return t.write(a.apply(this,e))}function s(t,e,n,i){for(var r=i;r.length<e;)n?r+=t:r=t+r;return r}function c(t){var e;if(!(t instanceof Error))throw new Error(a("invalid type for %%r: %j",t));if(e="EXCEPTION: "+t.constructor.name+": "+t.stack,t.cause&&"function"==typeof t.cause){var n=t.cause();n&&(e+="\nCaused by: "+c(n))}return e}e.sprintf=a,e.printf=function(){var e=Array.prototype.slice.call(arguments);e.unshift(t.stdout),o.apply(null,e)},e.fprintf=o}).call(this,n(3))},function(t,e,n){(function(e){const i=n(176),r=n(180),a=n(192),o=n(12),s=n(12),c=n(30),u=n(5),l=n(76),p=Object.assign({},n(29));p.isFileReadStream=function(t){return c&&"function"==typeof c&&c.Readable&&t instanceof c.Readable},p.getDiskInfo=async function(t){return await o.check(t)},p.getFileInfo=async function(t,n={}){n=Object.assign({size:!0,mime:!0,ext:!0,hash:!0},n);let r={};if("function"==typeof Blob&&t instanceof Blob)n.size&&(r.size=t.size),n.mime&&(r.mime=t.type),n.mime&&n.ext&&(r.ext=i.getExtension(r.mime)),n.hash&&(r.hash=await this.getFileHash(t));else if(this.isFileReadStream(t)||"string"==typeof t){const e=t.path||t;n.size&&(r.size=(await s.stat(e)).size),n.mime&&(r.mime=await this.getFileMimeType(e)),n.mime&&n.ext&&(r.ext=i.getExtension(r.mime)),n.hash&&(r.hash=await this.getFileHash(e))}else{if(!("function"==typeof e&&t instanceof e))throw new l.WorkError("Wrong file format","ERR_STORACLE_WRONG_FILE");n.size&&(r.size=t.length),n.mime&&(r.mime=await this.getFileMimeType(t)),n.mime&&n.ext&&(r.ext=i.getExtension(r.mime)),n.hash&&(r.hash=await this.getFileHash(t))}return r},p.getFileHash=async function(t){if("function"==typeof Blob&&t instanceof Blob)return await r(await this.blobToBuffer(t),{algorithm:"md5"});if(this.isFileReadStream(t)||"string"==typeof t)return await r.fromFile(t.path||t,{algorithm:"md5"});if("function"==typeof e&&t instanceof e)return await r(t,{algorithm:"md5"});throw new l.WorkError("Wrong file format","ERR_STORACLE_WRONG_FILE")},p.getFileMimeType=async function(t){return await new Promise((n,i)=>{this.isFileReadStream(t)&&(t=t.path),a[t instanceof e?"fromBuffer":"fromFile"](t,(t,e)=>{if(t)return i(i);n(e?e.mime:"text/plain")})})},p.blobToBuffer=async function(t){return await new Promise((n,i)=>{const r=new FileReader,a=t=>{if(r.removeEventListener("loadend",a),t.error)return i(t.error);n(e.from(r.result))};r.addEventListener("loadend",a),r.readAsArrayBuffer(t)})},p.isValidFileLink=function(t,e={}){if("string"!=typeof t)return!1;const n=u.parse(t);return!(!n.hostname||!this.isValidHostname(n.hostname))&&(!(!n.port||!this.isValidPort(n.port))&&(!!n.protocol.match(/^https?:?$/)&&!(!n.pathname||!n.pathname.match(new RegExp(`\\/${e.action||"file"}\\/[a-z0-9]+(\\.[\\w\\d]+)*$`)))))},t.exports=p}).call(this,n(1).Buffer)},function(t,e,n){"use strict";var i=n(2).Buffer,r=n(30).Transform;function a(t){r.call(this),this._block=i.allocUnsafe(t),this._blockSize=t,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}n(0)(a,r),a.prototype._transform=function(t,e,n){var i=null;try{this.update(t,e)}catch(t){i=t}n(i)},a.prototype._flush=function(t){var e=null;try{this.push(this.digest())}catch(t){e=t}t(e)},a.prototype.update=function(t,e){if(function(t,e){if(!i.isBuffer(t)&&"string"!=typeof t)throw new TypeError(e+" must be a string or a buffer")}(t,"Data"),this._finalized)throw new Error("Digest already called");i.isBuffer(t)||(t=i.from(t,e));for(var n=this._block,r=0;this._blockOffset+t.length-r>=this._blockSize;){for(var a=this._blockOffset;a<this._blockSize;)n[a++]=t[r++];this._update(),this._blockOffset=0}for(;r<t.length;)n[this._blockOffset++]=t[r++];for(var o=0,s=8*t.length;s>0;++o)this._length[o]+=s,(s=this._length[o]/4294967296|0)>0&&(this._length[o]-=4294967296*s);return this},a.prototype._update=function(){throw new Error("_update is not implemented")},a.prototype.digest=function(t){if(this._finalized)throw new Error("Digest already called");this._finalized=!0;var e=this._digest();void 0!==t&&(e=e.toString(t)),this._block.fill(0),this._blockOffset=0;for(var n=0;n<4;++n)this._length[n]=0;return e},a.prototype._digest=function(){throw new Error("_digest is not implemented")},t.exports=a},function(t,e,n){var i=n(0),r=n(14),a=n(2).Buffer,o=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],s=new Array(64);function c(){this.init(),this._w=s,r.call(this,64,56)}function u(t,e,n){return n^t&(e^n)}function l(t,e,n){return t&e|n&(t|e)}function p(t){return(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10)}function f(t){return(t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7)}function d(t){return(t>>>7|t<<25)^(t>>>18|t<<14)^t>>>3}i(c,r),c.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},c.prototype._update=function(t){for(var e,n=this._w,i=0|this._a,r=0|this._b,a=0|this._c,s=0|this._d,c=0|this._e,h=0|this._f,m=0|this._g,g=0|this._h,y=0;y<16;++y)n[y]=t.readInt32BE(4*y);for(;y<64;++y)n[y]=0|(((e=n[y-2])>>>17|e<<15)^(e>>>19|e<<13)^e>>>10)+n[y-7]+d(n[y-15])+n[y-16];for(var b=0;b<64;++b){var v=g+f(c)+u(c,h,m)+o[b]+n[b]|0,w=p(i)+l(i,r,a)|0;g=m,m=h,h=c,c=s+v|0,s=a,a=r,r=i,i=v+w|0}this._a=i+this._a|0,this._b=r+this._b|0,this._c=a+this._c|0,this._d=s+this._d|0,this._e=c+this._e|0,this._f=h+this._f|0,this._g=m+this._g|0,this._h=g+this._h|0},c.prototype._hash=function(){var t=a.allocUnsafe(32);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t.writeInt32BE(this._h,28),t},t.exports=c},function(t,e,n){var i=n(0),r=n(14),a=n(2).Buffer,o=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],s=new Array(160);function c(){this.init(),this._w=s,r.call(this,128,112)}function u(t,e,n){return n^t&(e^n)}function l(t,e,n){return t&e|n&(t|e)}function p(t,e){return(t>>>28|e<<4)^(e>>>2|t<<30)^(e>>>7|t<<25)}function f(t,e){return(t>>>14|e<<18)^(t>>>18|e<<14)^(e>>>9|t<<23)}function d(t,e){return(t>>>1|e<<31)^(t>>>8|e<<24)^t>>>7}function h(t,e){return(t>>>1|e<<31)^(t>>>8|e<<24)^(t>>>7|e<<25)}function m(t,e){return(t>>>19|e<<13)^(e>>>29|t<<3)^t>>>6}function g(t,e){return(t>>>19|e<<13)^(e>>>29|t<<3)^(t>>>6|e<<26)}function y(t,e){return t>>>0<e>>>0?1:0}i(c,r),c.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},c.prototype._update=function(t){for(var e=this._w,n=0|this._ah,i=0|this._bh,r=0|this._ch,a=0|this._dh,s=0|this._eh,c=0|this._fh,b=0|this._gh,v=0|this._hh,w=0|this._al,x=0|this._bl,D=0|this._cl,_=0|this._dl,E=0|this._el,k=0|this._fl,T=0|this._gl,C=0|this._hl,S=0;S<32;S+=2)e[S]=t.readInt32BE(4*S),e[S+1]=t.readInt32BE(4*S+4);for(;S<160;S+=2){var A=e[S-30],F=e[S-30+1],j=d(A,F),O=h(F,A),B=m(A=e[S-4],F=e[S-4+1]),q=g(F,A),R=e[S-14],I=e[S-14+1],L=e[S-32],P=e[S-32+1],M=O+I|0,z=j+R+y(M,O)|0;z=(z=z+B+y(M=M+q|0,q)|0)+L+y(M=M+P|0,P)|0,e[S]=z,e[S+1]=M}for(var U=0;U<160;U+=2){z=e[U],M=e[U+1];var N=l(n,i,r),$=l(w,x,D),W=p(n,w),H=p(w,n),G=f(s,E),Y=f(E,s),V=o[U],K=o[U+1],X=u(s,c,b),J=u(E,k,T),Z=C+Y|0,Q=v+G+y(Z,C)|0;Q=(Q=(Q=Q+X+y(Z=Z+J|0,J)|0)+V+y(Z=Z+K|0,K)|0)+z+y(Z=Z+M|0,M)|0;var tt=H+$|0,et=W+N+y(tt,H)|0;v=b,C=T,b=c,T=k,c=s,k=E,s=a+Q+y(E=_+Z|0,_)|0,a=r,_=D,r=i,D=x,i=n,x=w,n=Q+et+y(w=Z+tt|0,Z)|0}this._al=this._al+w|0,this._bl=this._bl+x|0,this._cl=this._cl+D|0,this._dl=this._dl+_|0,this._el=this._el+E|0,this._fl=this._fl+k|0,this._gl=this._gl+T|0,this._hl=this._hl+C|0,this._ah=this._ah+n+y(this._al,w)|0,this._bh=this._bh+i+y(this._bl,x)|0,this._ch=this._ch+r+y(this._cl,D)|0,this._dh=this._dh+a+y(this._dl,_)|0,this._eh=this._eh+s+y(this._el,E)|0,this._fh=this._fh+c+y(this._fl,k)|0,this._gh=this._gh+b+y(this._gl,T)|0,this._hh=this._hh+v+y(this._hl,C)|0},c.prototype._hash=function(){var t=a.allocUnsafe(64);function e(e,n,i){t.writeInt32BE(e,i),t.writeInt32BE(n,i+4)}return e(this._ah,this._al,0),e(this._bh,this._bl,8),e(this._ch,this._cl,16),e(this._dh,this._dl,24),e(this._eh,this._el,32),e(this._fh,this._fl,40),e(this._gh,this._gl,48),e(this._hh,this._hl,56),t},t.exports=c},function(t,e,n){t.exports=Object.assign({},n(31))},function(t){t.exports=JSON.parse('[["a140","",62],["a180","",32],["a240","",62],["a280","",32],["a2ab","",5],["a2e3","€"],["a2ef",""],["a2fd",""],["a340","",62],["a380","",31,"　"],["a440","",62],["a480","",32],["a4f4","",10],["a540","",62],["a580","",32],["a5f7","",7],["a640","",62],["a680","",32],["a6b9","",7],["a6d9","",6],["a6ec",""],["a6f3",""],["a6f6","",8],["a740","",62],["a780","",32],["a7c2","",14],["a7f2","",12],["a896","",10],["a8bc",""],["a8bf","ǹ"],["a8c1",""],["a8ea","",20],["a958",""],["a95b",""],["a95d",""],["a989","〾⿰",11],["a997","",12],["a9f0","",14],["aaa1","",93],["aba1","",93],["aca1","",93],["ada1","",93],["aea1","",93],["afa1","",93],["d7fa","",4],["f8a1","",93],["f9a1","",93],["faa1","",93],["fba1","",93],["fca1","",93],["fda1","",93],["fe50","⺁⺄㑳㑇⺈⺋㖞㘚㘎⺌⺗㥮㤘㧏㧟㩳㧐㭎㱮㳠⺧⺪䁖䅟⺮䌷⺳⺶⺷䎱䎬⺻䏝䓖䙡䙌"],["fe80","䜣䜩䝼䞍⻊䥇䥺䥽䦂䦃䦅䦆䦟䦛䦷䦶䲣䲟䲠䲡䱷䲢䴓",6,"䶮",93]]')},function(t){t.exports=JSON.parse('[["0","\\u0000",127],["a140","　，、。．‧；：？！︰…‥﹐﹑﹒·﹔﹕﹖﹗｜–︱—︳╴︴﹏（）︵︶｛｝︷︸〔〕︹︺【】︻︼《》︽︾〈〉︿﹀「」﹁﹂『』﹃﹄﹙﹚"],["a1a1","﹛﹜﹝﹞‘’“”〝〞‵′＃＆＊※§〃○●△▲◎☆★◇◆□■▽▼㊣℅¯￣＿ˍ﹉﹊﹍﹎﹋﹌﹟﹠﹡＋－×÷±√＜＞＝≦≧≠∞≒≡﹢",4,"～∩∪⊥∠∟⊿㏒㏑∫∮∵∴♀♂⊕⊙↑↓←→↖↗↙↘∥∣／"],["a240","＼∕﹨＄￥〒￠￡％＠℃℉﹩﹪﹫㏕㎜㎝㎞㏎㎡㎎㎏㏄°兙兛兞兝兡兣嗧瓩糎▁",7,"▏▎▍▌▋▊▉┼┴┬┤├▔─│▕┌┐└┘╭"],["a2a1","╮╰╯═╞╪╡◢◣◥◤╱╲╳０",9,"Ⅰ",9,"〡",8,"十卄卅Ａ",25,"ａ",21],["a340","ｗｘｙｚΑ",16,"Σ",6,"α",16,"σ",6,"ㄅ",10],["a3a1","ㄐ",25,"˙ˉˊˇˋ"],["a3e1","€"],["a440","一乙丁七乃九了二人儿入八几刀刁力匕十卜又三下丈上丫丸凡久么也乞于亡兀刃勺千叉口土士夕大女子孑孓寸小尢尸山川工己已巳巾干廾弋弓才"],["a4a1","丑丐不中丰丹之尹予云井互五亢仁什仃仆仇仍今介仄元允內六兮公冗凶分切刈勻勾勿化匹午升卅卞厄友及反壬天夫太夭孔少尤尺屯巴幻廿弔引心戈戶手扎支文斗斤方日曰月木欠止歹毋比毛氏水火爪父爻片牙牛犬王丙"],["a540","世丕且丘主乍乏乎以付仔仕他仗代令仙仞充兄冉冊冬凹出凸刊加功包匆北匝仟半卉卡占卯卮去可古右召叮叩叨叼司叵叫另只史叱台句叭叻四囚外"],["a5a1","央失奴奶孕它尼巨巧左市布平幼弁弘弗必戊打扔扒扑斥旦朮本未末札正母民氐永汁汀氾犯玄玉瓜瓦甘生用甩田由甲申疋白皮皿目矛矢石示禾穴立丞丟乒乓乩亙交亦亥仿伉伙伊伕伍伐休伏仲件任仰仳份企伋光兇兆先全"],["a640","共再冰列刑划刎刖劣匈匡匠印危吉吏同吊吐吁吋各向名合吃后吆吒因回囝圳地在圭圬圯圩夙多夷夸妄奸妃好她如妁字存宇守宅安寺尖屹州帆并年"],["a6a1","式弛忙忖戎戌戍成扣扛托收早旨旬旭曲曳有朽朴朱朵次此死氖汝汗汙江池汐汕污汛汍汎灰牟牝百竹米糸缶羊羽老考而耒耳聿肉肋肌臣自至臼舌舛舟艮色艾虫血行衣西阡串亨位住佇佗佞伴佛何估佐佑伽伺伸佃佔似但佣"],["a740","作你伯低伶余佝佈佚兌克免兵冶冷別判利刪刨劫助努劬匣即卵吝吭吞吾否呎吧呆呃吳呈呂君吩告吹吻吸吮吵吶吠吼呀吱含吟听囪困囤囫坊坑址坍"],["a7a1","均坎圾坐坏圻壯夾妝妒妨妞妣妙妖妍妤妓妊妥孝孜孚孛完宋宏尬局屁尿尾岐岑岔岌巫希序庇床廷弄弟彤形彷役忘忌志忍忱快忸忪戒我抄抗抖技扶抉扭把扼找批扳抒扯折扮投抓抑抆改攻攸旱更束李杏材村杜杖杞杉杆杠"],["a840","杓杗步每求汞沙沁沈沉沅沛汪決沐汰沌汨沖沒汽沃汲汾汴沆汶沍沔沘沂灶灼災灸牢牡牠狄狂玖甬甫男甸皂盯矣私秀禿究系罕肖肓肝肘肛肚育良芒"],["a8a1","芋芍見角言谷豆豕貝赤走足身車辛辰迂迆迅迄巡邑邢邪邦那酉釆里防阮阱阪阬並乖乳事些亞享京佯依侍佳使佬供例來侃佰併侈佩佻侖佾侏侑佺兔兒兕兩具其典冽函刻券刷刺到刮制剁劾劻卒協卓卑卦卷卸卹取叔受味呵"],["a940","咖呸咕咀呻呷咄咒咆呼咐呱呶和咚呢周咋命咎固垃坷坪坩坡坦坤坼夜奉奇奈奄奔妾妻委妹妮姑姆姐姍始姓姊妯妳姒姅孟孤季宗定官宜宙宛尚屈居"],["a9a1","屆岷岡岸岩岫岱岳帘帚帖帕帛帑幸庚店府底庖延弦弧弩往征彿彼忝忠忽念忿怏怔怯怵怖怪怕怡性怩怫怛或戕房戾所承拉拌拄抿拂抹拒招披拓拔拋拈抨抽押拐拙拇拍抵拚抱拘拖拗拆抬拎放斧於旺昔易昌昆昂明昀昏昕昊"],["aa40","昇服朋杭枋枕東果杳杷枇枝林杯杰板枉松析杵枚枓杼杪杲欣武歧歿氓氛泣注泳沱泌泥河沽沾沼波沫法泓沸泄油況沮泗泅泱沿治泡泛泊沬泯泜泖泠"],["aaa1","炕炎炒炊炙爬爭爸版牧物狀狎狙狗狐玩玨玟玫玥甽疝疙疚的盂盲直知矽社祀祁秉秈空穹竺糾罔羌羋者肺肥肢肱股肫肩肴肪肯臥臾舍芳芝芙芭芽芟芹花芬芥芯芸芣芰芾芷虎虱初表軋迎返近邵邸邱邶采金長門阜陀阿阻附"],["ab40","陂隹雨青非亟亭亮信侵侯便俠俑俏保促侶俘俟俊俗侮俐俄係俚俎俞侷兗冒冑冠剎剃削前剌剋則勇勉勃勁匍南卻厚叛咬哀咨哎哉咸咦咳哇哂咽咪品"],["aba1","哄哈咯咫咱咻咩咧咿囿垂型垠垣垢城垮垓奕契奏奎奐姜姘姿姣姨娃姥姪姚姦威姻孩宣宦室客宥封屎屏屍屋峙峒巷帝帥帟幽庠度建弈弭彥很待徊律徇後徉怒思怠急怎怨恍恰恨恢恆恃恬恫恪恤扁拜挖按拼拭持拮拽指拱拷"],["ac40","拯括拾拴挑挂政故斫施既春昭映昧是星昨昱昤曷柿染柱柔某柬架枯柵柩柯柄柑枴柚查枸柏柞柳枰柙柢柝柒歪殃殆段毒毗氟泉洋洲洪流津洌洱洞洗"],["aca1","活洽派洶洛泵洹洧洸洩洮洵洎洫炫為炳炬炯炭炸炮炤爰牲牯牴狩狠狡玷珊玻玲珍珀玳甚甭畏界畎畋疫疤疥疢疣癸皆皇皈盈盆盃盅省盹相眉看盾盼眇矜砂研砌砍祆祉祈祇禹禺科秒秋穿突竿竽籽紂紅紀紉紇約紆缸美羿耄"],["ad40","耐耍耑耶胖胥胚胃胄背胡胛胎胞胤胝致舢苧范茅苣苛苦茄若茂茉苒苗英茁苜苔苑苞苓苟苯茆虐虹虻虺衍衫要觔計訂訃貞負赴赳趴軍軌述迦迢迪迥"],["ada1","迭迫迤迨郊郎郁郃酋酊重閂限陋陌降面革韋韭音頁風飛食首香乘亳倌倍倣俯倦倥俸倩倖倆值借倚倒們俺倀倔倨俱倡個候倘俳修倭倪俾倫倉兼冤冥冢凍凌准凋剖剜剔剛剝匪卿原厝叟哨唐唁唷哼哥哲唆哺唔哩哭員唉哮哪"],["ae40","哦唧唇哽唏圃圄埂埔埋埃堉夏套奘奚娑娘娜娟娛娓姬娠娣娩娥娌娉孫屘宰害家宴宮宵容宸射屑展屐峭峽峻峪峨峰島崁峴差席師庫庭座弱徒徑徐恙"],["aea1","恣恥恐恕恭恩息悄悟悚悍悔悌悅悖扇拳挈拿捎挾振捕捂捆捏捉挺捐挽挪挫挨捍捌效敉料旁旅時晉晏晃晒晌晅晁書朔朕朗校核案框桓根桂桔栩梳栗桌桑栽柴桐桀格桃株桅栓栘桁殊殉殷氣氧氨氦氤泰浪涕消涇浦浸海浙涓"],["af40","浬涉浮浚浴浩涌涊浹涅浥涔烊烘烤烙烈烏爹特狼狹狽狸狷玆班琉珮珠珪珞畔畝畜畚留疾病症疲疳疽疼疹痂疸皋皰益盍盎眩真眠眨矩砰砧砸砝破砷"],["afa1","砥砭砠砟砲祕祐祠祟祖神祝祗祚秤秣秧租秦秩秘窄窈站笆笑粉紡紗紋紊素索純紐紕級紜納紙紛缺罟羔翅翁耆耘耕耙耗耽耿胱脂胰脅胭胴脆胸胳脈能脊胼胯臭臬舀舐航舫舨般芻茫荒荔荊茸荐草茵茴荏茲茹茶茗荀茱茨荃"],["b040","虔蚊蚪蚓蚤蚩蚌蚣蚜衰衷袁袂衽衹記訐討訌訕訊託訓訖訏訑豈豺豹財貢起躬軒軔軏辱送逆迷退迺迴逃追逅迸邕郡郝郢酒配酌釘針釗釜釙閃院陣陡"],["b0a1","陛陝除陘陞隻飢馬骨高鬥鬲鬼乾偺偽停假偃偌做偉健偶偎偕偵側偷偏倏偯偭兜冕凰剪副勒務勘動匐匏匙匿區匾參曼商啪啦啄啞啡啃啊唱啖問啕唯啤唸售啜唬啣唳啁啗圈國圉域堅堊堆埠埤基堂堵執培夠奢娶婁婉婦婪婀"],["b140","娼婢婚婆婊孰寇寅寄寂宿密尉專將屠屜屝崇崆崎崛崖崢崑崩崔崙崤崧崗巢常帶帳帷康庸庶庵庾張強彗彬彩彫得徙從徘御徠徜恿患悉悠您惋悴惦悽"],["b1a1","情悻悵惜悼惘惕惆惟悸惚惇戚戛扈掠控捲掖探接捷捧掘措捱掩掉掃掛捫推掄授掙採掬排掏掀捻捩捨捺敝敖救教敗啟敏敘敕敔斜斛斬族旋旌旎晝晚晤晨晦晞曹勗望梁梯梢梓梵桿桶梱梧梗械梃棄梭梆梅梔條梨梟梡梂欲殺"],["b240","毫毬氫涎涼淳淙液淡淌淤添淺清淇淋涯淑涮淞淹涸混淵淅淒渚涵淚淫淘淪深淮淨淆淄涪淬涿淦烹焉焊烽烯爽牽犁猜猛猖猓猙率琅琊球理現琍瓠瓶"],["b2a1","瓷甜產略畦畢異疏痔痕疵痊痍皎盔盒盛眷眾眼眶眸眺硫硃硎祥票祭移窒窕笠笨笛第符笙笞笮粒粗粕絆絃統紮紹紼絀細紳組累終紲紱缽羞羚翌翎習耜聊聆脯脖脣脫脩脰脤舂舵舷舶船莎莞莘荸莢莖莽莫莒莊莓莉莠荷荻荼"],["b340","莆莧處彪蛇蛀蚶蛄蚵蛆蛋蚱蚯蛉術袞袈被袒袖袍袋覓規訪訝訣訥許設訟訛訢豉豚販責貫貨貪貧赧赦趾趺軛軟這逍通逗連速逝逐逕逞造透逢逖逛途"],["b3a1","部郭都酗野釵釦釣釧釭釩閉陪陵陳陸陰陴陶陷陬雀雪雩章竟頂頃魚鳥鹵鹿麥麻傢傍傅備傑傀傖傘傚最凱割剴創剩勞勝勛博厥啻喀喧啼喊喝喘喂喜喪喔喇喋喃喳單喟唾喲喚喻喬喱啾喉喫喙圍堯堪場堤堰報堡堝堠壹壺奠"],["b440","婷媚婿媒媛媧孳孱寒富寓寐尊尋就嵌嵐崴嵇巽幅帽幀幃幾廊廁廂廄弼彭復循徨惑惡悲悶惠愜愣惺愕惰惻惴慨惱愎惶愉愀愒戟扉掣掌描揀揩揉揆揍"],["b4a1","插揣提握揖揭揮捶援揪換摒揚揹敞敦敢散斑斐斯普晰晴晶景暑智晾晷曾替期朝棺棕棠棘棗椅棟棵森棧棹棒棲棣棋棍植椒椎棉棚楮棻款欺欽殘殖殼毯氮氯氬港游湔渡渲湧湊渠渥渣減湛湘渤湖湮渭渦湯渴湍渺測湃渝渾滋"],["b540","溉渙湎湣湄湲湩湟焙焚焦焰無然煮焜牌犄犀猶猥猴猩琺琪琳琢琥琵琶琴琯琛琦琨甥甦畫番痢痛痣痙痘痞痠登發皖皓皴盜睏短硝硬硯稍稈程稅稀窘"],["b5a1","窗窖童竣等策筆筐筒答筍筋筏筑粟粥絞結絨絕紫絮絲絡給絢絰絳善翔翕耋聒肅腕腔腋腑腎脹腆脾腌腓腴舒舜菩萃菸萍菠菅萋菁華菱菴著萊菰萌菌菽菲菊萸萎萄菜萇菔菟虛蛟蛙蛭蛔蛛蛤蛐蛞街裁裂袱覃視註詠評詞証詁"],["b640","詔詛詐詆訴診訶詖象貂貯貼貳貽賁費賀貴買貶貿貸越超趁跎距跋跚跑跌跛跆軻軸軼辜逮逵週逸進逶鄂郵鄉郾酣酥量鈔鈕鈣鈉鈞鈍鈐鈇鈑閔閏開閑"],["b6a1","間閒閎隊階隋陽隅隆隍陲隄雁雅雄集雇雯雲韌項順須飧飪飯飩飲飭馮馭黃黍黑亂傭債傲傳僅傾催傷傻傯僇剿剷剽募勦勤勢勣匯嗟嗨嗓嗦嗎嗜嗇嗑嗣嗤嗯嗚嗡嗅嗆嗥嗉園圓塞塑塘塗塚塔填塌塭塊塢塒塋奧嫁嫉嫌媾媽媼"],["b740","媳嫂媲嵩嵯幌幹廉廈弒彙徬微愚意慈感想愛惹愁愈慎慌慄慍愾愴愧愍愆愷戡戢搓搾搞搪搭搽搬搏搜搔損搶搖搗搆敬斟新暗暉暇暈暖暄暘暍會榔業"],["b7a1","楚楷楠楔極椰概楊楨楫楞楓楹榆楝楣楛歇歲毀殿毓毽溢溯滓溶滂源溝滇滅溥溘溼溺溫滑準溜滄滔溪溧溴煎煙煩煤煉照煜煬煦煌煥煞煆煨煖爺牒猷獅猿猾瑯瑚瑕瑟瑞瑁琿瑙瑛瑜當畸瘀痰瘁痲痱痺痿痴痳盞盟睛睫睦睞督"],["b840","睹睪睬睜睥睨睢矮碎碰碗碘碌碉硼碑碓硿祺祿禁萬禽稜稚稠稔稟稞窟窠筷節筠筮筧粱粳粵經絹綑綁綏絛置罩罪署義羨群聖聘肆肄腱腰腸腥腮腳腫"],["b8a1","腹腺腦舅艇蒂葷落萱葵葦葫葉葬葛萼萵葡董葩葭葆虞虜號蛹蜓蜈蜇蜀蛾蛻蜂蜃蜆蜊衙裟裔裙補裘裝裡裊裕裒覜解詫該詳試詩詰誇詼詣誠話誅詭詢詮詬詹詻訾詨豢貊貉賊資賈賄貲賃賂賅跡跟跨路跳跺跪跤跦躲較載軾輊"],["b940","辟農運遊道遂達逼違遐遇遏過遍遑逾遁鄒鄗酬酪酩釉鈷鉗鈸鈽鉀鈾鉛鉋鉤鉑鈴鉉鉍鉅鈹鈿鉚閘隘隔隕雍雋雉雊雷電雹零靖靴靶預頑頓頊頒頌飼飴"],["b9a1","飽飾馳馱馴髡鳩麂鼎鼓鼠僧僮僥僖僭僚僕像僑僱僎僩兢凳劃劂匱厭嗾嘀嘛嘗嗽嘔嘆嘉嘍嘎嗷嘖嘟嘈嘐嗶團圖塵塾境墓墊塹墅塽壽夥夢夤奪奩嫡嫦嫩嫗嫖嫘嫣孵寞寧寡寥實寨寢寤察對屢嶄嶇幛幣幕幗幔廓廖弊彆彰徹慇"],["ba40","愿態慷慢慣慟慚慘慵截撇摘摔撤摸摟摺摑摧搴摭摻敲斡旗旖暢暨暝榜榨榕槁榮槓構榛榷榻榫榴槐槍榭槌榦槃榣歉歌氳漳演滾漓滴漩漾漠漬漏漂漢"],["baa1","滿滯漆漱漸漲漣漕漫漯澈漪滬漁滲滌滷熔熙煽熊熄熒爾犒犖獄獐瑤瑣瑪瑰瑭甄疑瘧瘍瘋瘉瘓盡監瞄睽睿睡磁碟碧碳碩碣禎福禍種稱窪窩竭端管箕箋筵算箝箔箏箸箇箄粹粽精綻綰綜綽綾綠緊綴網綱綺綢綿綵綸維緒緇綬"],["bb40","罰翠翡翟聞聚肇腐膀膏膈膊腿膂臧臺與舔舞艋蓉蒿蓆蓄蒙蒞蒲蒜蓋蒸蓀蓓蒐蒼蓑蓊蜿蜜蜻蜢蜥蜴蜘蝕蜷蜩裳褂裴裹裸製裨褚裯誦誌語誣認誡誓誤"],["bba1","說誥誨誘誑誚誧豪貍貌賓賑賒赫趙趕跼輔輒輕輓辣遠遘遜遣遙遞遢遝遛鄙鄘鄞酵酸酷酴鉸銀銅銘銖鉻銓銜銨鉼銑閡閨閩閣閥閤隙障際雌雒需靼鞅韶頗領颯颱餃餅餌餉駁骯骰髦魁魂鳴鳶鳳麼鼻齊億儀僻僵價儂儈儉儅凜"],["bc40","劇劈劉劍劊勰厲嘮嘻嘹嘲嘿嘴嘩噓噎噗噴嘶嘯嘰墀墟增墳墜墮墩墦奭嬉嫻嬋嫵嬌嬈寮寬審寫層履嶝嶔幢幟幡廢廚廟廝廣廠彈影德徵慶慧慮慝慕憂"],["bca1","慼慰慫慾憧憐憫憎憬憚憤憔憮戮摩摯摹撞撲撈撐撰撥撓撕撩撒撮播撫撚撬撙撢撳敵敷數暮暫暴暱樣樟槨樁樞標槽模樓樊槳樂樅槭樑歐歎殤毅毆漿潼澄潑潦潔澆潭潛潸潮澎潺潰潤澗潘滕潯潠潟熟熬熱熨牖犛獎獗瑩璋璃"],["bd40","瑾璀畿瘠瘩瘟瘤瘦瘡瘢皚皺盤瞎瞇瞌瞑瞋磋磅確磊碾磕碼磐稿稼穀稽稷稻窯窮箭箱範箴篆篇篁箠篌糊締練緯緻緘緬緝編緣線緞緩綞緙緲緹罵罷羯"],["bda1","翩耦膛膜膝膠膚膘蔗蔽蔚蓮蔬蔭蔓蔑蔣蔡蔔蓬蔥蓿蔆螂蝴蝶蝠蝦蝸蝨蝙蝗蝌蝓衛衝褐複褒褓褕褊誼諒談諄誕請諸課諉諂調誰論諍誶誹諛豌豎豬賠賞賦賤賬賭賢賣賜質賡赭趟趣踫踐踝踢踏踩踟踡踞躺輝輛輟輩輦輪輜輞"],["be40","輥適遮遨遭遷鄰鄭鄧鄱醇醉醋醃鋅銻銷鋪銬鋤鋁銳銼鋒鋇鋰銲閭閱霄霆震霉靠鞍鞋鞏頡頫頜颳養餓餒餘駝駐駟駛駑駕駒駙骷髮髯鬧魅魄魷魯鴆鴉"],["bea1","鴃麩麾黎墨齒儒儘儔儐儕冀冪凝劑劓勳噙噫噹噩噤噸噪器噥噱噯噬噢噶壁墾壇壅奮嬝嬴學寰導彊憲憑憩憊懍憶憾懊懈戰擅擁擋撻撼據擄擇擂操撿擒擔撾整曆曉暹曄曇暸樽樸樺橙橫橘樹橄橢橡橋橇樵機橈歙歷氅濂澱澡"],["bf40","濃澤濁澧澳激澹澶澦澠澴熾燉燐燒燈燕熹燎燙燜燃燄獨璜璣璘璟璞瓢甌甍瘴瘸瘺盧盥瞠瞞瞟瞥磨磚磬磧禦積穎穆穌穋窺篙簑築篤篛篡篩篦糕糖縊"],["bfa1","縑縈縛縣縞縝縉縐罹羲翰翱翮耨膳膩膨臻興艘艙蕊蕙蕈蕨蕩蕃蕉蕭蕪蕞螃螟螞螢融衡褪褲褥褫褡親覦諦諺諫諱謀諜諧諮諾謁謂諷諭諳諶諼豫豭貓賴蹄踱踴蹂踹踵輻輯輸輳辨辦遵遴選遲遼遺鄴醒錠錶鋸錳錯錢鋼錫錄錚"],["c040","錐錦錡錕錮錙閻隧隨險雕霎霑霖霍霓霏靛靜靦鞘頰頸頻頷頭頹頤餐館餞餛餡餚駭駢駱骸骼髻髭鬨鮑鴕鴣鴦鴨鴒鴛默黔龍龜優償儡儲勵嚎嚀嚐嚅嚇"],["c0a1","嚏壕壓壑壎嬰嬪嬤孺尷屨嶼嶺嶽嶸幫彌徽應懂懇懦懋戲戴擎擊擘擠擰擦擬擱擢擭斂斃曙曖檀檔檄檢檜櫛檣橾檗檐檠歜殮毚氈濘濱濟濠濛濤濫濯澀濬濡濩濕濮濰燧營燮燦燥燭燬燴燠爵牆獰獲璩環璦璨癆療癌盪瞳瞪瞰瞬"],["c140","瞧瞭矯磷磺磴磯礁禧禪穗窿簇簍篾篷簌篠糠糜糞糢糟糙糝縮績繆縷縲繃縫總縱繅繁縴縹繈縵縿縯罄翳翼聱聲聰聯聳臆臃膺臂臀膿膽臉膾臨舉艱薪"],["c1a1","薄蕾薜薑薔薯薛薇薨薊虧蟀蟑螳蟒蟆螫螻螺蟈蟋褻褶襄褸褽覬謎謗謙講謊謠謝謄謐豁谿豳賺賽購賸賻趨蹉蹋蹈蹊轄輾轂轅輿避遽還邁邂邀鄹醣醞醜鍍鎂錨鍵鍊鍥鍋錘鍾鍬鍛鍰鍚鍔闊闋闌闈闆隱隸雖霜霞鞠韓顆颶餵騁"],["c240","駿鮮鮫鮪鮭鴻鴿麋黏點黜黝黛鼾齋叢嚕嚮壙壘嬸彝懣戳擴擲擾攆擺擻擷斷曜朦檳檬櫃檻檸櫂檮檯歟歸殯瀉瀋濾瀆濺瀑瀏燻燼燾燸獷獵璧璿甕癖癘"],["c2a1","癒瞽瞿瞻瞼礎禮穡穢穠竄竅簫簧簪簞簣簡糧織繕繞繚繡繒繙罈翹翻職聶臍臏舊藏薩藍藐藉薰薺薹薦蟯蟬蟲蟠覆覲觴謨謹謬謫豐贅蹙蹣蹦蹤蹟蹕軀轉轍邇邃邈醫醬釐鎔鎊鎖鎢鎳鎮鎬鎰鎘鎚鎗闔闖闐闕離雜雙雛雞霤鞣鞦"],["c340","鞭韹額顏題顎顓颺餾餿餽餮馥騎髁鬃鬆魏魎魍鯊鯉鯽鯈鯀鵑鵝鵠黠鼕鼬儳嚥壞壟壢寵龐廬懲懷懶懵攀攏曠曝櫥櫝櫚櫓瀛瀟瀨瀚瀝瀕瀘爆爍牘犢獸"],["c3a1","獺璽瓊瓣疇疆癟癡矇礙禱穫穩簾簿簸簽簷籀繫繭繹繩繪羅繳羶羹羸臘藩藝藪藕藤藥藷蟻蠅蠍蟹蟾襠襟襖襞譁譜識證譚譎譏譆譙贈贊蹼蹲躇蹶蹬蹺蹴轔轎辭邊邋醱醮鏡鏑鏟鏃鏈鏜鏝鏖鏢鏍鏘鏤鏗鏨關隴難霪霧靡韜韻類"],["c440","願顛颼饅饉騖騙鬍鯨鯧鯖鯛鶉鵡鵲鵪鵬麒麗麓麴勸嚨嚷嚶嚴嚼壤孀孃孽寶巉懸懺攘攔攙曦朧櫬瀾瀰瀲爐獻瓏癢癥礦礪礬礫竇競籌籃籍糯糰辮繽繼"],["c4a1","纂罌耀臚艦藻藹蘑藺蘆蘋蘇蘊蠔蠕襤覺觸議譬警譯譟譫贏贍躉躁躅躂醴釋鐘鐃鏽闡霰飄饒饑馨騫騰騷騵鰓鰍鹹麵黨鼯齟齣齡儷儸囁囀囂夔屬巍懼懾攝攜斕曩櫻欄櫺殲灌爛犧瓖瓔癩矓籐纏續羼蘗蘭蘚蠣蠢蠡蠟襪襬覽譴"],["c540","護譽贓躊躍躋轟辯醺鐮鐳鐵鐺鐸鐲鐫闢霸霹露響顧顥饗驅驃驀騾髏魔魑鰭鰥鶯鶴鷂鶸麝黯鼙齜齦齧儼儻囈囊囉孿巔巒彎懿攤權歡灑灘玀瓤疊癮癬"],["c5a1","禳籠籟聾聽臟襲襯觼讀贖贗躑躓轡酈鑄鑑鑒霽霾韃韁顫饕驕驍髒鬚鱉鰱鰾鰻鷓鷗鼴齬齪龔囌巖戀攣攫攪曬欐瓚竊籤籣籥纓纖纔臢蘸蘿蠱變邐邏鑣鑠鑤靨顯饜驚驛驗髓體髑鱔鱗鱖鷥麟黴囑壩攬灞癱癲矗罐羈蠶蠹衢讓讒"],["c640","讖艷贛釀鑪靂靈靄韆顰驟鬢魘鱟鷹鷺鹼鹽鼇齷齲廳欖灣籬籮蠻觀躡釁鑲鑰顱饞髖鬣黌灤矚讚鑷韉驢驥纜讜躪釅鑽鑾鑼鱷鱸黷豔鑿鸚爨驪鬱鸛鸞籲"],["c940","乂乜凵匚厂万丌乇亍囗兀屮彳丏冇与丮亓仂仉仈冘勼卬厹圠夃夬尐巿旡殳毌气爿丱丼仨仜仩仡仝仚刌匜卌圢圣夗夯宁宄尒尻屴屳帄庀庂忉戉扐氕"],["c9a1","氶汃氿氻犮犰玊禸肊阞伎优伬仵伔仱伀价伈伝伂伅伢伓伄仴伒冱刓刉刐劦匢匟卍厊吇囡囟圮圪圴夼妀奼妅奻奾奷奿孖尕尥屼屺屻屾巟幵庄异弚彴忕忔忏扜扞扤扡扦扢扙扠扚扥旯旮朾朹朸朻机朿朼朳氘汆汒汜汏汊汔汋"],["ca40","汌灱牞犴犵玎甪癿穵网艸艼芀艽艿虍襾邙邗邘邛邔阢阤阠阣佖伻佢佉体佤伾佧佒佟佁佘伭伳伿佡冏冹刜刞刡劭劮匉卣卲厎厏吰吷吪呔呅吙吜吥吘"],["caa1","吽呏呁吨吤呇囮囧囥坁坅坌坉坋坒夆奀妦妘妠妗妎妢妐妏妧妡宎宒尨尪岍岏岈岋岉岒岊岆岓岕巠帊帎庋庉庌庈庍弅弝彸彶忒忑忐忭忨忮忳忡忤忣忺忯忷忻怀忴戺抃抌抎抏抔抇扱扻扺扰抁抈扷扽扲扴攷旰旴旳旲旵杅杇"],["cb40","杙杕杌杈杝杍杚杋毐氙氚汸汧汫沄沋沏汱汯汩沚汭沇沕沜汦汳汥汻沎灴灺牣犿犽狃狆狁犺狅玕玗玓玔玒町甹疔疕皁礽耴肕肙肐肒肜芐芏芅芎芑芓"],["cba1","芊芃芄豸迉辿邟邡邥邞邧邠阰阨阯阭丳侘佼侅佽侀侇佶佴侉侄佷佌侗佪侚佹侁佸侐侜侔侞侒侂侕佫佮冞冼冾刵刲刳剆刱劼匊匋匼厒厔咇呿咁咑咂咈呫呺呾呥呬呴呦咍呯呡呠咘呣呧呤囷囹坯坲坭坫坱坰坶垀坵坻坳坴坢"],["cc40","坨坽夌奅妵妺姏姎妲姌姁妶妼姃姖妱妽姀姈妴姇孢孥宓宕屄屇岮岤岠岵岯岨岬岟岣岭岢岪岧岝岥岶岰岦帗帔帙弨弢弣弤彔徂彾彽忞忥怭怦怙怲怋"],["cca1","怴怊怗怳怚怞怬怢怍怐怮怓怑怌怉怜戔戽抭抴拑抾抪抶拊抮抳抯抻抩抰抸攽斨斻昉旼昄昒昈旻昃昋昍昅旽昑昐曶朊枅杬枎枒杶杻枘枆构杴枍枌杺枟枑枙枃杽极杸杹枔欥殀歾毞氝沓泬泫泮泙沶泔沭泧沷泐泂沺泃泆泭泲"],["cd40","泒泝沴沊沝沀泞泀洰泍泇沰泹泏泩泑炔炘炅炓炆炄炑炖炂炚炃牪狖狋狘狉狜狒狔狚狌狑玤玡玭玦玢玠玬玝瓝瓨甿畀甾疌疘皯盳盱盰盵矸矼矹矻矺"],["cda1","矷祂礿秅穸穻竻籵糽耵肏肮肣肸肵肭舠芠苀芫芚芘芛芵芧芮芼芞芺芴芨芡芩苂芤苃芶芢虰虯虭虮豖迒迋迓迍迖迕迗邲邴邯邳邰阹阽阼阺陃俍俅俓侲俉俋俁俔俜俙侻侳俛俇俖侺俀侹俬剄剉勀勂匽卼厗厖厙厘咺咡咭咥哏"],["ce40","哃茍咷咮哖咶哅哆咠呰咼咢咾呲哞咰垵垞垟垤垌垗垝垛垔垘垏垙垥垚垕壴复奓姡姞姮娀姱姝姺姽姼姶姤姲姷姛姩姳姵姠姾姴姭宨屌峐峘峌峗峋峛"],["cea1","峞峚峉峇峊峖峓峔峏峈峆峎峟峸巹帡帢帣帠帤庰庤庢庛庣庥弇弮彖徆怷怹恔恲恞恅恓恇恉恛恌恀恂恟怤恄恘恦恮扂扃拏挍挋拵挎挃拫拹挏挌拸拶挀挓挔拺挕拻拰敁敃斪斿昶昡昲昵昜昦昢昳昫昺昝昴昹昮朏朐柁柲柈枺"],["cf40","柜枻柸柘柀枷柅柫柤柟枵柍枳柷柶柮柣柂枹柎柧柰枲柼柆柭柌枮柦柛柺柉柊柃柪柋欨殂殄殶毖毘毠氠氡洨洴洭洟洼洿洒洊泚洳洄洙洺洚洑洀洝浂"],["cfa1","洁洘洷洃洏浀洇洠洬洈洢洉洐炷炟炾炱炰炡炴炵炩牁牉牊牬牰牳牮狊狤狨狫狟狪狦狣玅珌珂珈珅玹玶玵玴珫玿珇玾珃珆玸珋瓬瓮甮畇畈疧疪癹盄眈眃眄眅眊盷盻盺矧矨砆砑砒砅砐砏砎砉砃砓祊祌祋祅祄秕种秏秖秎窀"],["d040","穾竑笀笁籺籸籹籿粀粁紃紈紁罘羑羍羾耇耎耏耔耷胘胇胠胑胈胂胐胅胣胙胜胊胕胉胏胗胦胍臿舡芔苙苾苹茇苨茀苕茺苫苖苴苬苡苲苵茌苻苶苰苪"],["d0a1","苤苠苺苳苭虷虴虼虳衁衎衧衪衩觓訄訇赲迣迡迮迠郱邽邿郕郅邾郇郋郈釔釓陔陏陑陓陊陎倞倅倇倓倢倰倛俵俴倳倷倬俶俷倗倜倠倧倵倯倱倎党冔冓凊凄凅凈凎剡剚剒剞剟剕剢勍匎厞唦哢唗唒哧哳哤唚哿唄唈哫唑唅哱"],["d140","唊哻哷哸哠唎唃唋圁圂埌堲埕埒垺埆垽垼垸垶垿埇埐垹埁夎奊娙娖娭娮娕娏娗娊娞娳孬宧宭宬尃屖屔峬峿峮峱峷崀峹帩帨庨庮庪庬弳弰彧恝恚恧"],["d1a1","恁悢悈悀悒悁悝悃悕悛悗悇悜悎戙扆拲挐捖挬捄捅挶捃揤挹捋捊挼挩捁挴捘捔捙挭捇挳捚捑挸捗捀捈敊敆旆旃旄旂晊晟晇晑朒朓栟栚桉栲栳栻桋桏栖栱栜栵栫栭栯桎桄栴栝栒栔栦栨栮桍栺栥栠欬欯欭欱欴歭肂殈毦毤"],["d240","毨毣毢毧氥浺浣浤浶洍浡涒浘浢浭浯涑涍淯浿涆浞浧浠涗浰浼浟涂涘洯浨涋浾涀涄洖涃浻浽浵涐烜烓烑烝烋缹烢烗烒烞烠烔烍烅烆烇烚烎烡牂牸"],["d2a1","牷牶猀狺狴狾狶狳狻猁珓珙珥珖玼珧珣珩珜珒珛珔珝珚珗珘珨瓞瓟瓴瓵甡畛畟疰痁疻痄痀疿疶疺皊盉眝眛眐眓眒眣眑眕眙眚眢眧砣砬砢砵砯砨砮砫砡砩砳砪砱祔祛祏祜祓祒祑秫秬秠秮秭秪秜秞秝窆窉窅窋窌窊窇竘笐"],["d340","笄笓笅笏笈笊笎笉笒粄粑粊粌粈粍粅紞紝紑紎紘紖紓紟紒紏紌罜罡罞罠罝罛羖羒翃翂翀耖耾耹胺胲胹胵脁胻脀舁舯舥茳茭荄茙荑茥荖茿荁茦茜茢"],["d3a1","荂荎茛茪茈茼荍茖茤茠茷茯茩荇荅荌荓茞茬荋茧荈虓虒蚢蚨蚖蚍蚑蚞蚇蚗蚆蚋蚚蚅蚥蚙蚡蚧蚕蚘蚎蚝蚐蚔衃衄衭衵衶衲袀衱衿衯袃衾衴衼訒豇豗豻貤貣赶赸趵趷趶軑軓迾迵适迿迻逄迼迶郖郠郙郚郣郟郥郘郛郗郜郤酐"],["d440","酎酏釕釢釚陜陟隼飣髟鬯乿偰偪偡偞偠偓偋偝偲偈偍偁偛偊偢倕偅偟偩偫偣偤偆偀偮偳偗偑凐剫剭剬剮勖勓匭厜啵啶唼啍啐唴唪啑啢唶唵唰啒啅"],["d4a1","唌唲啥啎唹啈唭唻啀啋圊圇埻堔埢埶埜埴堀埭埽堈埸堋埳埏堇埮埣埲埥埬埡堎埼堐埧堁堌埱埩埰堍堄奜婠婘婕婧婞娸娵婭婐婟婥婬婓婤婗婃婝婒婄婛婈媎娾婍娹婌婰婩婇婑婖婂婜孲孮寁寀屙崞崋崝崚崠崌崨崍崦崥崏"],["d540","崰崒崣崟崮帾帴庱庴庹庲庳弶弸徛徖徟悊悐悆悾悰悺惓惔惏惤惙惝惈悱惛悷惊悿惃惍惀挲捥掊掂捽掽掞掭掝掗掫掎捯掇掐据掯捵掜捭掮捼掤挻掟"],["d5a1","捸掅掁掑掍捰敓旍晥晡晛晙晜晢朘桹梇梐梜桭桮梮梫楖桯梣梬梩桵桴梲梏桷梒桼桫桲梪梀桱桾梛梖梋梠梉梤桸桻梑梌梊桽欶欳欷欸殑殏殍殎殌氪淀涫涴涳湴涬淩淢涷淶淔渀淈淠淟淖涾淥淜淝淛淴淊涽淭淰涺淕淂淏淉"],["d640","淐淲淓淽淗淍淣涻烺焍烷焗烴焌烰焄烳焐烼烿焆焓焀烸烶焋焂焎牾牻牼牿猝猗猇猑猘猊猈狿猏猞玈珶珸珵琄琁珽琇琀珺珼珿琌琋珴琈畤畣痎痒痏"],["d6a1","痋痌痑痐皏皉盓眹眯眭眱眲眴眳眽眥眻眵硈硒硉硍硊硌砦硅硐祤祧祩祪祣祫祡离秺秸秶秷窏窔窐笵筇笴笥笰笢笤笳笘笪笝笱笫笭笯笲笸笚笣粔粘粖粣紵紽紸紶紺絅紬紩絁絇紾紿絊紻紨罣羕羜羝羛翊翋翍翐翑翇翏翉耟"],["d740","耞耛聇聃聈脘脥脙脛脭脟脬脞脡脕脧脝脢舑舸舳舺舴舲艴莐莣莨莍荺荳莤荴莏莁莕莙荵莔莩荽莃莌莝莛莪莋荾莥莯莈莗莰荿莦莇莮荶莚虙虖蚿蚷"],["d7a1","蛂蛁蛅蚺蚰蛈蚹蚳蚸蛌蚴蚻蚼蛃蚽蚾衒袉袕袨袢袪袚袑袡袟袘袧袙袛袗袤袬袌袓袎覂觖觙觕訰訧訬訞谹谻豜豝豽貥赽赻赹趼跂趹趿跁軘軞軝軜軗軠軡逤逋逑逜逌逡郯郪郰郴郲郳郔郫郬郩酖酘酚酓酕釬釴釱釳釸釤釹釪"],["d840","釫釷釨釮镺閆閈陼陭陫陱陯隿靪頄飥馗傛傕傔傞傋傣傃傌傎傝偨傜傒傂傇兟凔匒匑厤厧喑喨喥喭啷噅喢喓喈喏喵喁喣喒喤啽喌喦啿喕喡喎圌堩堷"],["d8a1","堙堞堧堣堨埵塈堥堜堛堳堿堶堮堹堸堭堬堻奡媯媔媟婺媢媞婸媦婼媥媬媕媮娷媄媊媗媃媋媩婻婽媌媜媏媓媝寪寍寋寔寑寊寎尌尰崷嵃嵫嵁嵋崿崵嵑嵎嵕崳崺嵒崽崱嵙嵂崹嵉崸崼崲崶嵀嵅幄幁彘徦徥徫惉悹惌惢惎惄愔"],["d940","惲愊愖愅惵愓惸惼惾惁愃愘愝愐惿愄愋扊掔掱掰揎揥揨揯揃撝揳揊揠揶揕揲揵摡揟掾揝揜揄揘揓揂揇揌揋揈揰揗揙攲敧敪敤敜敨敥斌斝斞斮旐旒"],["d9a1","晼晬晻暀晱晹晪晲朁椌棓椄棜椪棬棪棱椏棖棷棫棤棶椓椐棳棡椇棌椈楰梴椑棯棆椔棸棐棽棼棨椋椊椗棎棈棝棞棦棴棑椆棔棩椕椥棇欹欻欿欼殔殗殙殕殽毰毲毳氰淼湆湇渟湉溈渼渽湅湢渫渿湁湝湳渜渳湋湀湑渻渃渮湞"],["da40","湨湜湡渱渨湠湱湫渹渢渰湓湥渧湸湤湷湕湹湒湦渵渶湚焠焞焯烻焮焱焣焥焢焲焟焨焺焛牋牚犈犉犆犅犋猒猋猰猢猱猳猧猲猭猦猣猵猌琮琬琰琫琖"],["daa1","琚琡琭琱琤琣琝琩琠琲瓻甯畯畬痧痚痡痦痝痟痤痗皕皒盚睆睇睄睍睅睊睎睋睌矞矬硠硤硥硜硭硱硪确硰硩硨硞硢祴祳祲祰稂稊稃稌稄窙竦竤筊笻筄筈筌筎筀筘筅粢粞粨粡絘絯絣絓絖絧絪絏絭絜絫絒絔絩絑絟絎缾缿罥"],["db40","罦羢羠羡翗聑聏聐胾胔腃腊腒腏腇脽腍脺臦臮臷臸臹舄舼舽舿艵茻菏菹萣菀菨萒菧菤菼菶萐菆菈菫菣莿萁菝菥菘菿菡菋菎菖菵菉萉萏菞萑萆菂菳"],["dba1","菕菺菇菑菪萓菃菬菮菄菻菗菢萛菛菾蛘蛢蛦蛓蛣蛚蛪蛝蛫蛜蛬蛩蛗蛨蛑衈衖衕袺裗袹袸裀袾袶袼袷袽袲褁裉覕覘覗觝觚觛詎詍訹詙詀詗詘詄詅詒詈詑詊詌詏豟貁貀貺貾貰貹貵趄趀趉跘跓跍跇跖跜跏跕跙跈跗跅軯軷軺"],["dc40","軹軦軮軥軵軧軨軶軫軱軬軴軩逭逴逯鄆鄬鄄郿郼鄈郹郻鄁鄀鄇鄅鄃酡酤酟酢酠鈁鈊鈥鈃鈚鈦鈏鈌鈀鈒釿釽鈆鈄鈧鈂鈜鈤鈙鈗鈅鈖镻閍閌閐隇陾隈"],["dca1","隉隃隀雂雈雃雱雰靬靰靮頇颩飫鳦黹亃亄亶傽傿僆傮僄僊傴僈僂傰僁傺傱僋僉傶傸凗剺剸剻剼嗃嗛嗌嗐嗋嗊嗝嗀嗔嗄嗩喿嗒喍嗏嗕嗢嗖嗈嗲嗍嗙嗂圔塓塨塤塏塍塉塯塕塎塝塙塥塛堽塣塱壼嫇嫄嫋媺媸媱媵媰媿嫈媻嫆"],["dd40","媷嫀嫊媴媶嫍媹媐寖寘寙尟尳嵱嵣嵊嵥嵲嵬嵞嵨嵧嵢巰幏幎幊幍幋廅廌廆廋廇彀徯徭惷慉慊愫慅愶愲愮慆愯慏愩慀戠酨戣戥戤揅揱揫搐搒搉搠搤"],["dda1","搳摃搟搕搘搹搷搢搣搌搦搰搨摁搵搯搊搚摀搥搧搋揧搛搮搡搎敯斒旓暆暌暕暐暋暊暙暔晸朠楦楟椸楎楢楱椿楅楪椹楂楗楙楺楈楉椵楬椳椽楥棰楸椴楩楀楯楄楶楘楁楴楌椻楋椷楜楏楑椲楒椯楻椼歆歅歃歂歈歁殛嗀毻毼"],["de40","毹毷毸溛滖滈溏滀溟溓溔溠溱溹滆滒溽滁溞滉溷溰滍溦滏溲溾滃滜滘溙溒溎溍溤溡溿溳滐滊溗溮溣煇煔煒煣煠煁煝煢煲煸煪煡煂煘煃煋煰煟煐煓"],["dea1","煄煍煚牏犍犌犑犐犎猼獂猻猺獀獊獉瑄瑊瑋瑒瑑瑗瑀瑏瑐瑎瑂瑆瑍瑔瓡瓿瓾瓽甝畹畷榃痯瘏瘃痷痾痼痹痸瘐痻痶痭痵痽皙皵盝睕睟睠睒睖睚睩睧睔睙睭矠碇碚碔碏碄碕碅碆碡碃硹碙碀碖硻祼禂祽祹稑稘稙稒稗稕稢稓"],["df40","稛稐窣窢窞竫筦筤筭筴筩筲筥筳筱筰筡筸筶筣粲粴粯綈綆綀綍絿綅絺綎絻綃絼綌綔綄絽綒罭罫罧罨罬羦羥羧翛翜耡腤腠腷腜腩腛腢腲朡腞腶腧腯"],["dfa1","腄腡舝艉艄艀艂艅蓱萿葖葶葹蒏蒍葥葑葀蒆葧萰葍葽葚葙葴葳葝蔇葞萷萺萴葺葃葸萲葅萩菙葋萯葂萭葟葰萹葎葌葒葯蓅蒎萻葇萶萳葨葾葄萫葠葔葮葐蜋蜄蛷蜌蛺蛖蛵蝍蛸蜎蜉蜁蛶蜍蜅裖裋裍裎裞裛裚裌裐覅覛觟觥觤"],["e040","觡觠觢觜触詶誆詿詡訿詷誂誄詵誃誁詴詺谼豋豊豥豤豦貆貄貅賌赨赩趑趌趎趏趍趓趔趐趒跰跠跬跱跮跐跩跣跢跧跲跫跴輆軿輁輀輅輇輈輂輋遒逿"],["e0a1","遄遉逽鄐鄍鄏鄑鄖鄔鄋鄎酮酯鉈鉒鈰鈺鉦鈳鉥鉞銃鈮鉊鉆鉭鉬鉏鉠鉧鉯鈶鉡鉰鈱鉔鉣鉐鉲鉎鉓鉌鉖鈲閟閜閞閛隒隓隑隗雎雺雽雸雵靳靷靸靲頏頍頎颬飶飹馯馲馰馵骭骫魛鳪鳭鳧麀黽僦僔僗僨僳僛僪僝僤僓僬僰僯僣僠"],["e140","凘劀劁勩勫匰厬嘧嘕嘌嘒嗼嘏嘜嘁嘓嘂嗺嘝嘄嗿嗹墉塼墐墘墆墁塿塴墋塺墇墑墎塶墂墈塻墔墏壾奫嫜嫮嫥嫕嫪嫚嫭嫫嫳嫢嫠嫛嫬嫞嫝嫙嫨嫟孷寠"],["e1a1","寣屣嶂嶀嵽嶆嵺嶁嵷嶊嶉嶈嵾嵼嶍嵹嵿幘幙幓廘廑廗廎廜廕廙廒廔彄彃彯徶愬愨慁慞慱慳慒慓慲慬憀慴慔慺慛慥愻慪慡慖戩戧戫搫摍摛摝摴摶摲摳摽摵摦撦摎撂摞摜摋摓摠摐摿搿摬摫摙摥摷敳斠暡暠暟朅朄朢榱榶槉"],["e240","榠槎榖榰榬榼榑榙榎榧榍榩榾榯榿槄榽榤槔榹槊榚槏榳榓榪榡榞槙榗榐槂榵榥槆歊歍歋殞殟殠毃毄毾滎滵滱漃漥滸漷滻漮漉潎漙漚漧漘漻漒滭漊"],["e2a1","漶潳滹滮漭潀漰漼漵滫漇漎潃漅滽滶漹漜滼漺漟漍漞漈漡熇熐熉熀熅熂熏煻熆熁熗牄牓犗犕犓獃獍獑獌瑢瑳瑱瑵瑲瑧瑮甀甂甃畽疐瘖瘈瘌瘕瘑瘊瘔皸瞁睼瞅瞂睮瞀睯睾瞃碲碪碴碭碨硾碫碞碥碠碬碢碤禘禊禋禖禕禔禓"],["e340","禗禈禒禐稫穊稰稯稨稦窨窫窬竮箈箜箊箑箐箖箍箌箛箎箅箘劄箙箤箂粻粿粼粺綧綷緂綣綪緁緀緅綝緎緄緆緋緌綯綹綖綼綟綦綮綩綡緉罳翢翣翥翞"],["e3a1","耤聝聜膉膆膃膇膍膌膋舕蒗蒤蒡蒟蒺蓎蓂蒬蒮蒫蒹蒴蓁蓍蒪蒚蒱蓐蒝蒧蒻蒢蒔蓇蓌蒛蒩蒯蒨蓖蒘蒶蓏蒠蓗蓔蓒蓛蒰蒑虡蜳蜣蜨蝫蝀蜮蜞蜡蜙蜛蝃蜬蝁蜾蝆蜠蜲蜪蜭蜼蜒蜺蜱蜵蝂蜦蜧蜸蜤蜚蜰蜑裷裧裱裲裺裾裮裼裶裻"],["e440","裰裬裫覝覡覟覞觩觫觨誫誙誋誒誏誖谽豨豩賕賏賗趖踉踂跿踍跽踊踃踇踆踅跾踀踄輐輑輎輍鄣鄜鄠鄢鄟鄝鄚鄤鄡鄛酺酲酹酳銥銤鉶銛鉺銠銔銪銍"],["e4a1","銦銚銫鉹銗鉿銣鋮銎銂銕銢鉽銈銡銊銆銌銙銧鉾銇銩銝銋鈭隞隡雿靘靽靺靾鞃鞀鞂靻鞄鞁靿韎韍頖颭颮餂餀餇馝馜駃馹馻馺駂馽駇骱髣髧鬾鬿魠魡魟鳱鳲鳵麧僿儃儰僸儆儇僶僾儋儌僽儊劋劌勱勯噈噂噌嘵噁噊噉噆噘"],["e540","噚噀嘳嘽嘬嘾嘸嘪嘺圚墫墝墱墠墣墯墬墥墡壿嫿嫴嫽嫷嫶嬃嫸嬂嫹嬁嬇嬅嬏屧嶙嶗嶟嶒嶢嶓嶕嶠嶜嶡嶚嶞幩幝幠幜緳廛廞廡彉徲憋憃慹憱憰憢憉"],["e5a1","憛憓憯憭憟憒憪憡憍慦憳戭摮摰撖撠撅撗撜撏撋撊撌撣撟摨撱撘敶敺敹敻斲斳暵暰暩暲暷暪暯樀樆樗槥槸樕槱槤樠槿槬槢樛樝槾樧槲槮樔槷槧橀樈槦槻樍槼槫樉樄樘樥樏槶樦樇槴樖歑殥殣殢殦氁氀毿氂潁漦潾澇濆澒"],["e640","澍澉澌潢潏澅潚澖潶潬澂潕潲潒潐潗澔澓潝漀潡潫潽潧澐潓澋潩潿澕潣潷潪潻熲熯熛熰熠熚熩熵熝熥熞熤熡熪熜熧熳犘犚獘獒獞獟獠獝獛獡獚獙"],["e6a1","獢璇璉璊璆璁瑽璅璈瑼瑹甈甇畾瘥瘞瘙瘝瘜瘣瘚瘨瘛皜皝皞皛瞍瞏瞉瞈磍碻磏磌磑磎磔磈磃磄磉禚禡禠禜禢禛歶稹窲窴窳箷篋箾箬篎箯箹篊箵糅糈糌糋緷緛緪緧緗緡縃緺緦緶緱緰緮緟罶羬羰羭翭翫翪翬翦翨聤聧膣膟"],["e740","膞膕膢膙膗舖艏艓艒艐艎艑蔤蔻蔏蔀蔩蔎蔉蔍蔟蔊蔧蔜蓻蔫蓺蔈蔌蓴蔪蓲蔕蓷蓫蓳蓼蔒蓪蓩蔖蓾蔨蔝蔮蔂蓽蔞蓶蔱蔦蓧蓨蓰蓯蓹蔘蔠蔰蔋蔙蔯虢"],["e7a1","蝖蝣蝤蝷蟡蝳蝘蝔蝛蝒蝡蝚蝑蝞蝭蝪蝐蝎蝟蝝蝯蝬蝺蝮蝜蝥蝏蝻蝵蝢蝧蝩衚褅褌褔褋褗褘褙褆褖褑褎褉覢覤覣觭觰觬諏諆誸諓諑諔諕誻諗誾諀諅諘諃誺誽諙谾豍貏賥賟賙賨賚賝賧趠趜趡趛踠踣踥踤踮踕踛踖踑踙踦踧"],["e840","踔踒踘踓踜踗踚輬輤輘輚輠輣輖輗遳遰遯遧遫鄯鄫鄩鄪鄲鄦鄮醅醆醊醁醂醄醀鋐鋃鋄鋀鋙銶鋏鋱鋟鋘鋩鋗鋝鋌鋯鋂鋨鋊鋈鋎鋦鋍鋕鋉鋠鋞鋧鋑鋓"],["e8a1","銵鋡鋆銴镼閬閫閮閰隤隢雓霅霈霂靚鞊鞎鞈韐韏頞頝頦頩頨頠頛頧颲餈飺餑餔餖餗餕駜駍駏駓駔駎駉駖駘駋駗駌骳髬髫髳髲髱魆魃魧魴魱魦魶魵魰魨魤魬鳼鳺鳽鳿鳷鴇鴀鳹鳻鴈鴅鴄麃黓鼏鼐儜儓儗儚儑凞匴叡噰噠噮"],["e940","噳噦噣噭噲噞噷圜圛壈墽壉墿墺壂墼壆嬗嬙嬛嬡嬔嬓嬐嬖嬨嬚嬠嬞寯嶬嶱嶩嶧嶵嶰嶮嶪嶨嶲嶭嶯嶴幧幨幦幯廩廧廦廨廥彋徼憝憨憖懅憴懆懁懌憺"],["e9a1","憿憸憌擗擖擐擏擉撽撉擃擛擳擙攳敿敼斢曈暾曀曊曋曏暽暻暺曌朣樴橦橉橧樲橨樾橝橭橶橛橑樨橚樻樿橁橪橤橐橏橔橯橩橠樼橞橖橕橍橎橆歕歔歖殧殪殫毈毇氄氃氆澭濋澣濇澼濎濈潞濄澽澞濊澨瀄澥澮澺澬澪濏澿澸"],["ea40","澢濉澫濍澯澲澰燅燂熿熸燖燀燁燋燔燊燇燏熽燘熼燆燚燛犝犞獩獦獧獬獥獫獪瑿璚璠璔璒璕璡甋疀瘯瘭瘱瘽瘳瘼瘵瘲瘰皻盦瞚瞝瞡瞜瞛瞢瞣瞕瞙"],["eaa1","瞗磝磩磥磪磞磣磛磡磢磭磟磠禤穄穈穇窶窸窵窱窷篞篣篧篝篕篥篚篨篹篔篪篢篜篫篘篟糒糔糗糐糑縒縡縗縌縟縠縓縎縜縕縚縢縋縏縖縍縔縥縤罃罻罼罺羱翯耪耩聬膱膦膮膹膵膫膰膬膴膲膷膧臲艕艖艗蕖蕅蕫蕍蕓蕡蕘"],["eb40","蕀蕆蕤蕁蕢蕄蕑蕇蕣蔾蕛蕱蕎蕮蕵蕕蕧蕠薌蕦蕝蕔蕥蕬虣虥虤螛螏螗螓螒螈螁螖螘蝹螇螣螅螐螑螝螄螔螜螚螉褞褦褰褭褮褧褱褢褩褣褯褬褟觱諠"],["eba1","諢諲諴諵諝謔諤諟諰諈諞諡諨諿諯諻貑貒貐賵賮賱賰賳赬赮趥趧踳踾踸蹀蹅踶踼踽蹁踰踿躽輶輮輵輲輹輷輴遶遹遻邆郺鄳鄵鄶醓醐醑醍醏錧錞錈錟錆錏鍺錸錼錛錣錒錁鍆錭錎錍鋋錝鋺錥錓鋹鋷錴錂錤鋿錩錹錵錪錔錌"],["ec40","錋鋾錉錀鋻錖閼闍閾閹閺閶閿閵閽隩雔霋霒霐鞙鞗鞔韰韸頵頯頲餤餟餧餩馞駮駬駥駤駰駣駪駩駧骹骿骴骻髶髺髹髷鬳鮀鮅鮇魼魾魻鮂鮓鮒鮐魺鮕"],["eca1","魽鮈鴥鴗鴠鴞鴔鴩鴝鴘鴢鴐鴙鴟麈麆麇麮麭黕黖黺鼒鼽儦儥儢儤儠儩勴嚓嚌嚍嚆嚄嚃噾嚂噿嚁壖壔壏壒嬭嬥嬲嬣嬬嬧嬦嬯嬮孻寱寲嶷幬幪徾徻懃憵憼懧懠懥懤懨懞擯擩擣擫擤擨斁斀斶旚曒檍檖檁檥檉檟檛檡檞檇檓檎"],["ed40","檕檃檨檤檑橿檦檚檅檌檒歛殭氉濌澩濴濔濣濜濭濧濦濞濲濝濢濨燡燱燨燲燤燰燢獳獮獯璗璲璫璐璪璭璱璥璯甐甑甒甏疄癃癈癉癇皤盩瞵瞫瞲瞷瞶"],["eda1","瞴瞱瞨矰磳磽礂磻磼磲礅磹磾礄禫禨穜穛穖穘穔穚窾竀竁簅簏篲簀篿篻簎篴簋篳簂簉簃簁篸篽簆篰篱簐簊糨縭縼繂縳顈縸縪繉繀繇縩繌縰縻縶繄縺罅罿罾罽翴翲耬膻臄臌臊臅臇膼臩艛艚艜薃薀薏薧薕薠薋薣蕻薤薚薞"],["ee40","蕷蕼薉薡蕺蕸蕗薎薖薆薍薙薝薁薢薂薈薅蕹蕶薘薐薟虨螾螪螭蟅螰螬螹螵螼螮蟉蟃蟂蟌螷螯蟄蟊螴螶螿螸螽蟞螲褵褳褼褾襁襒褷襂覭覯覮觲觳謞"],["eea1","謘謖謑謅謋謢謏謒謕謇謍謈謆謜謓謚豏豰豲豱豯貕貔賹赯蹎蹍蹓蹐蹌蹇轃轀邅遾鄸醚醢醛醙醟醡醝醠鎡鎃鎯鍤鍖鍇鍼鍘鍜鍶鍉鍐鍑鍠鍭鎏鍌鍪鍹鍗鍕鍒鍏鍱鍷鍻鍡鍞鍣鍧鎀鍎鍙闇闀闉闃闅閷隮隰隬霠霟霘霝霙鞚鞡鞜"],["ef40","鞞鞝韕韔韱顁顄顊顉顅顃餥餫餬餪餳餲餯餭餱餰馘馣馡騂駺駴駷駹駸駶駻駽駾駼騃骾髾髽鬁髼魈鮚鮨鮞鮛鮦鮡鮥鮤鮆鮢鮠鮯鴳鵁鵧鴶鴮鴯鴱鴸鴰"],["efa1","鵅鵂鵃鴾鴷鵀鴽翵鴭麊麉麍麰黈黚黻黿鼤鼣鼢齔龠儱儭儮嚘嚜嚗嚚嚝嚙奰嬼屩屪巀幭幮懘懟懭懮懱懪懰懫懖懩擿攄擽擸攁攃擼斔旛曚曛曘櫅檹檽櫡櫆檺檶檷櫇檴檭歞毉氋瀇瀌瀍瀁瀅瀔瀎濿瀀濻瀦濼濷瀊爁燿燹爃燽獶"],["f040","璸瓀璵瓁璾璶璻瓂甔甓癜癤癙癐癓癗癚皦皽盬矂瞺磿礌礓礔礉礐礒礑禭禬穟簜簩簙簠簟簭簝簦簨簢簥簰繜繐繖繣繘繢繟繑繠繗繓羵羳翷翸聵臑臒"],["f0a1","臐艟艞薴藆藀藃藂薳薵薽藇藄薿藋藎藈藅薱薶藒蘤薸薷薾虩蟧蟦蟢蟛蟫蟪蟥蟟蟳蟤蟔蟜蟓蟭蟘蟣螤蟗蟙蠁蟴蟨蟝襓襋襏襌襆襐襑襉謪謧謣謳謰謵譇謯謼謾謱謥謷謦謶謮謤謻謽謺豂豵貙貘貗賾贄贂贀蹜蹢蹠蹗蹖蹞蹥蹧"],["f140","蹛蹚蹡蹝蹩蹔轆轇轈轋鄨鄺鄻鄾醨醥醧醯醪鎵鎌鎒鎷鎛鎝鎉鎧鎎鎪鎞鎦鎕鎈鎙鎟鎍鎱鎑鎲鎤鎨鎴鎣鎥闒闓闑隳雗雚巂雟雘雝霣霢霥鞬鞮鞨鞫鞤鞪"],["f1a1","鞢鞥韗韙韖韘韺顐顑顒颸饁餼餺騏騋騉騍騄騑騊騅騇騆髀髜鬈鬄鬅鬩鬵魊魌魋鯇鯆鯃鮿鯁鮵鮸鯓鮶鯄鮹鮽鵜鵓鵏鵊鵛鵋鵙鵖鵌鵗鵒鵔鵟鵘鵚麎麌黟鼁鼀鼖鼥鼫鼪鼩鼨齌齕儴儵劖勷厴嚫嚭嚦嚧嚪嚬壚壝壛夒嬽嬾嬿巃幰"],["f240","徿懻攇攐攍攉攌攎斄旞旝曞櫧櫠櫌櫑櫙櫋櫟櫜櫐櫫櫏櫍櫞歠殰氌瀙瀧瀠瀖瀫瀡瀢瀣瀩瀗瀤瀜瀪爌爊爇爂爅犥犦犤犣犡瓋瓅璷瓃甖癠矉矊矄矱礝礛"],["f2a1","礡礜礗礞禰穧穨簳簼簹簬簻糬糪繶繵繸繰繷繯繺繲繴繨罋罊羃羆羷翽翾聸臗臕艤艡艣藫藱藭藙藡藨藚藗藬藲藸藘藟藣藜藑藰藦藯藞藢蠀蟺蠃蟶蟷蠉蠌蠋蠆蟼蠈蟿蠊蠂襢襚襛襗襡襜襘襝襙覈覷覶觶譐譈譊譀譓譖譔譋譕"],["f340","譑譂譒譗豃豷豶貚贆贇贉趬趪趭趫蹭蹸蹳蹪蹯蹻軂轒轑轏轐轓辴酀鄿醰醭鏞鏇鏏鏂鏚鏐鏹鏬鏌鏙鎩鏦鏊鏔鏮鏣鏕鏄鏎鏀鏒鏧镽闚闛雡霩霫霬霨霦"],["f3a1","鞳鞷鞶韝韞韟顜顙顝顗颿颽颻颾饈饇饃馦馧騚騕騥騝騤騛騢騠騧騣騞騜騔髂鬋鬊鬎鬌鬷鯪鯫鯠鯞鯤鯦鯢鯰鯔鯗鯬鯜鯙鯥鯕鯡鯚鵷鶁鶊鶄鶈鵱鶀鵸鶆鶋鶌鵽鵫鵴鵵鵰鵩鶅鵳鵻鶂鵯鵹鵿鶇鵨麔麑黀黼鼭齀齁齍齖齗齘匷嚲"],["f440","嚵嚳壣孅巆巇廮廯忀忁懹攗攖攕攓旟曨曣曤櫳櫰櫪櫨櫹櫱櫮櫯瀼瀵瀯瀷瀴瀱灂瀸瀿瀺瀹灀瀻瀳灁爓爔犨獽獼璺皫皪皾盭矌矎矏矍矲礥礣礧礨礤礩"],["f4a1","禲穮穬穭竷籉籈籊籇籅糮繻繾纁纀羺翿聹臛臙舋艨艩蘢藿蘁藾蘛蘀藶蘄蘉蘅蘌藽蠙蠐蠑蠗蠓蠖襣襦覹觷譠譪譝譨譣譥譧譭趮躆躈躄轙轖轗轕轘轚邍酃酁醷醵醲醳鐋鐓鏻鐠鐏鐔鏾鐕鐐鐨鐙鐍鏵鐀鏷鐇鐎鐖鐒鏺鐉鏸鐊鏿"],["f540","鏼鐌鏶鐑鐆闞闠闟霮霯鞹鞻韽韾顠顢顣顟飁飂饐饎饙饌饋饓騲騴騱騬騪騶騩騮騸騭髇髊髆鬐鬒鬑鰋鰈鯷鰅鰒鯸鱀鰇鰎鰆鰗鰔鰉鶟鶙鶤鶝鶒鶘鶐鶛"],["f5a1","鶠鶔鶜鶪鶗鶡鶚鶢鶨鶞鶣鶿鶩鶖鶦鶧麙麛麚黥黤黧黦鼰鼮齛齠齞齝齙龑儺儹劘劗囃嚽嚾孈孇巋巏廱懽攛欂櫼欃櫸欀灃灄灊灈灉灅灆爝爚爙獾甗癪矐礭礱礯籔籓糲纊纇纈纋纆纍罍羻耰臝蘘蘪蘦蘟蘣蘜蘙蘧蘮蘡蘠蘩蘞蘥"],["f640","蠩蠝蠛蠠蠤蠜蠫衊襭襩襮襫觺譹譸譅譺譻贐贔趯躎躌轞轛轝酆酄酅醹鐿鐻鐶鐩鐽鐼鐰鐹鐪鐷鐬鑀鐱闥闤闣霵霺鞿韡顤飉飆飀饘饖騹騽驆驄驂驁騺"],["f6a1","騿髍鬕鬗鬘鬖鬺魒鰫鰝鰜鰬鰣鰨鰩鰤鰡鶷鶶鶼鷁鷇鷊鷏鶾鷅鷃鶻鶵鷎鶹鶺鶬鷈鶱鶭鷌鶳鷍鶲鹺麜黫黮黭鼛鼘鼚鼱齎齥齤龒亹囆囅囋奱孋孌巕巑廲攡攠攦攢欋欈欉氍灕灖灗灒爞爟犩獿瓘瓕瓙瓗癭皭礵禴穰穱籗籜籙籛籚"],["f740","糴糱纑罏羇臞艫蘴蘵蘳蘬蘲蘶蠬蠨蠦蠪蠥襱覿覾觻譾讄讂讆讅譿贕躕躔躚躒躐躖躗轠轢酇鑌鑐鑊鑋鑏鑇鑅鑈鑉鑆霿韣顪顩飋饔饛驎驓驔驌驏驈驊"],["f7a1","驉驒驐髐鬙鬫鬻魖魕鱆鱈鰿鱄鰹鰳鱁鰼鰷鰴鰲鰽鰶鷛鷒鷞鷚鷋鷐鷜鷑鷟鷩鷙鷘鷖鷵鷕鷝麶黰鼵鼳鼲齂齫龕龢儽劙壨壧奲孍巘蠯彏戁戃戄攩攥斖曫欑欒欏毊灛灚爢玂玁玃癰矔籧籦纕艬蘺虀蘹蘼蘱蘻蘾蠰蠲蠮蠳襶襴襳觾"],["f840","讌讎讋讈豅贙躘轤轣醼鑢鑕鑝鑗鑞韄韅頀驖驙鬞鬟鬠鱒鱘鱐鱊鱍鱋鱕鱙鱌鱎鷻鷷鷯鷣鷫鷸鷤鷶鷡鷮鷦鷲鷰鷢鷬鷴鷳鷨鷭黂黐黲黳鼆鼜鼸鼷鼶齃齏"],["f8a1","齱齰齮齯囓囍孎屭攭曭曮欓灟灡灝灠爣瓛瓥矕礸禷禶籪纗羉艭虃蠸蠷蠵衋讔讕躞躟躠躝醾醽釂鑫鑨鑩雥靆靃靇韇韥驞髕魙鱣鱧鱦鱢鱞鱠鸂鷾鸇鸃鸆鸅鸀鸁鸉鷿鷽鸄麠鼞齆齴齵齶囔攮斸欘欙欗欚灢爦犪矘矙礹籩籫糶纚"],["f940","纘纛纙臠臡虆虇虈襹襺襼襻觿讘讙躥躤躣鑮鑭鑯鑱鑳靉顲饟鱨鱮鱭鸋鸍鸐鸏鸒鸑麡黵鼉齇齸齻齺齹圞灦籯蠼趲躦釃鑴鑸鑶鑵驠鱴鱳鱱鱵鸔鸓黶鼊"],["f9a1","龤灨灥糷虪蠾蠽蠿讞貜躩軉靋顳顴飌饡馫驤驦驧鬤鸕鸗齈戇欞爧虌躨钂钀钁驩驨鬮鸙爩虋讟钃鱹麷癵驫鱺鸝灩灪麤齾齉龘碁銹裏墻恒粧嫺╔╦╗╠╬╣╚╩╝╒╤╕╞╪╡╘╧╛╓╥╖╟╫╢╙╨╜║═╭╮╰╯▓"]]')},function(t,e,n){"use strict";t.exports=n(80)()},function(t,e,n){(function(e){const i=n(5),r=n(18),a=n(39),o=n(145)(),s=n(194),c=n(240);t.exports=t=>class extends(t||o){static get utils(){return s}static get errors(){return c}constructor(t={}){super(t=r({request:{fileStoringTimeout:"11m",fileGettingTimeout:"5m"}},t))}async getSongInfo(t,e={}){const n=await this.request("get-song-info",{body:{title:t},timeout:e.timeout||this.options.request.fileLinkGettingTimeout,useInitialAddress:e.useInitialAddress});return n.info.forEach(t=>t.tags=s.createSongTags(t.tags)),n.info}async getSong(t,e={}){const n=await this.request("get-song-info",{body:{title:t},timeout:e.timeout||this.options.request.fileLinkGettingTimeout,useInitialAddress:e.useInitialAddress});if(!n.info.length)return null;let i={tags:{}};for(let t=n.info.length-1;t>=0;t--){const e=n.info[t];!e.coverLink&&delete e.coverLink;const r=s.mergeSongTags(i.tags,e.tags);i=Object.assign(i,e),i.tags=r}return i}async getSongAudioLink(t,e={}){return(await this.request("get-song-link",{body:{title:t,type:"audio"},timeout:e.timeout||this.options.request.fileLinkGettingTimeout,useInitialAddress:e.useInitialAddress})).link}async getSongCoverLink(t,e={}){return(await this.request("get-song-link",{body:{title:t,type:"cover"},timeout:e.timeout||this.options.request.fileLinkGettingTimeout,useInitialAddress:e.useInitialAddress})).link}async getSongToBuffer(t,n,i={}){this.envTest(!1,"getSongToBuffer");const r=i.timeout||this.options.request.fileGettingTimeout,o=this.createRequestTimer(r);let u=await this.request("get-song-link",{body:{title:t,type:n},timeout:o([this.options.request.fileLinkGettingTimeout]),useInitialAddress:i.useInitialAddress});if(!u.link)throw new c.WorkError(`Link for song "${t}" is not found`,"ERR_MUSERIA_NOT_FOUND_LINK");return await new Promise(async(t,n)=>{try{const i=[];(await a(u.link,this.createDefaultRequestOptions({method:"GET",timeout:o()}))).body.on("error",t=>n(s.isRequestTimeoutError(t)?s.createRequestTimeoutError():t)).on("data",t=>i.push(t)).on("end",()=>t(e.concat(i)))}catch(t){n(t)}})}async getSongAudioToBuffer(t,e={}){return this.getSongToBuffer(t,"audio",e)}async getSongCoverToBuffer(t,e={}){return this.getSongToBuffer(t,"cover",e)}async getSongToPath(t,e,n,r={}){this.envTest(!1,"getSongToBuffer");const o=r.timeout||this.options.request.fileGettingTimeout,u=this.createRequestTimer(o);let l=await this.request("get-song-link",{body:{title:t,type:n},timeout:u([this.options.request.fileLinkGettingTimeout]),useInitialAddress:r.useInitialAddress});if(!l.link)throw new c.WorkError(`Link for song "${t}" is not found`,"ERR_MUSERIA_NOT_FOUND_LINK");return await new Promise(async(t,n)=>{try{(await a(l.link,this.createDefaultRequestOptions({method:"GET",timeout:u()}))).body.on("error",t=>n(s.isRequestTimeoutError(t)?s.createRequestTimeoutError():t)).pipe(i.createWriteStream(e)).on("error",n).on("finish",t)}catch(t){n(t)}})}async getSongAudioToPath(t,e,n={}){return this.getSongToPath(t,e,"audio",n)}async getSongCoverToPath(t,e,n={}){return this.getSongToPath(t,e,"cover",n)}async getSongToBlob(t,e,n={}){this.envTest(!1,"getSongToBuffer");const i=n.timeout||this.options.request.fileGettingTimeout,r=this.createRequestTimer(i);let o=await this.request("get-song-link",{body:{title:t,type:e},timeout:r([this.options.request.fileLinkGettingTimeout]),useInitialAddress:n.useInitialAddress});if(!o.link)throw new c.WorkError(`Link for song "${t}" is not found`,"ERR_MUSERIA_NOT_FOUND_LINK");return o=await a(o.link,this.createDefaultRequestOptions({method:"GET",timeout:r()})),o.blob()}async getSongAudioToBlob(t,e={}){return this.getSongToBlob(t,"audio",e)}async getSongCoverToBlob(t,e={}){return this.getSongToBlob(t,"cover",e)}async addSong(t,e={}){const n=()=>s.isFileReadStream(t)&&t.destroy();try{const r=await s.getFileInfo(t),a=await s.getSongTags(t);if(!s.isSongTitle(a.fullTitle))throw new c.WorkError(`Wrong song title "${a.fullTitle}"`,"ERR_MUSERIA_SONG_WRONG_TITLE");"string"==typeof t&&(t=i.createReadStream(t));const o=await this.request("add-song",{formData:{file:{value:t,options:{filename:r.hash+(r.ext?"."+r.ext:""),contentType:r.mime}}},timeout:e.timeout||this.options.request.fileStoringTimeout,useInitialAddress:e.useInitialAddress});return n(),o}catch(t){throw n(),t}}async removeSong(t,e={}){return await this.request("remove-song",{body:{title:t},timeout:e.timeout||this.options.request.fileRemovalTimeout,useInitialAddress:e.useInitialAddress})}createRequestedSongLink(t,e,n={}){return n=Object.assign({query:{type:e,title:t}},n),this.createRequestUrl("request-song",n)}createRequestedSongAudioLink(t,e={}){return this.createRequestedSongLink(t,"audio",e)}createRequestedSongCoverLink(t,e={}){return this.createRequestedSongLink(t,"cover",e)}}}).call(this,n(1).Buffer)},function(t,e,n){"use strict";e.byteLength=function(t){var e=u(t),n=e[0],i=e[1];return 3*(n+i)/4-i},e.toByteArray=function(t){var e,n,i=u(t),o=i[0],s=i[1],c=new a(function(t,e,n){return 3*(e+n)/4-n}(0,o,s)),l=0,p=s>0?o-4:o;for(n=0;n<p;n+=4)e=r[t.charCodeAt(n)]<<18|r[t.charCodeAt(n+1)]<<12|r[t.charCodeAt(n+2)]<<6|r[t.charCodeAt(n+3)],c[l++]=e>>16&255,c[l++]=e>>8&255,c[l++]=255&e;2===s&&(e=r[t.charCodeAt(n)]<<2|r[t.charCodeAt(n+1)]>>4,c[l++]=255&e);1===s&&(e=r[t.charCodeAt(n)]<<10|r[t.charCodeAt(n+1)]<<4|r[t.charCodeAt(n+2)]>>2,c[l++]=e>>8&255,c[l++]=255&e);return c},e.fromByteArray=function(t){for(var e,n=t.length,r=n%3,a=[],o=0,s=n-r;o<s;o+=16383)a.push(l(t,o,o+16383>s?s:o+16383));1===r?(e=t[n-1],a.push(i[e>>2]+i[e<<4&63]+"==")):2===r&&(e=(t[n-2]<<8)+t[n-1],a.push(i[e>>10]+i[e>>4&63]+i[e<<2&63]+"="));return a.join("")};for(var i=[],r=[],a="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,c=o.length;s<c;++s)i[s]=o[s],r[o.charCodeAt(s)]=s;function u(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function l(t,e,n){for(var r,a,o=[],s=e;s<n;s+=3)r=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(255&t[s+2]),o.push(i[(a=r)>>18&63]+i[a>>12&63]+i[a>>6&63]+i[63&a]);return o.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,n,i,r){var a,o,s=8*r-i-1,c=(1<<s)-1,u=c>>1,l=-7,p=n?r-1:0,f=n?-1:1,d=t[e+p];for(p+=f,a=d&(1<<-l)-1,d>>=-l,l+=s;l>0;a=256*a+t[e+p],p+=f,l-=8);for(o=a&(1<<-l)-1,a>>=-l,l+=i;l>0;o=256*o+t[e+p],p+=f,l-=8);if(0===a)a=1-u;else{if(a===c)return o?NaN:1/0*(d?-1:1);o+=Math.pow(2,i),a-=u}return(d?-1:1)*o*Math.pow(2,a-i)},e.write=function(t,e,n,i,r,a){var o,s,c,u=8*a-r-1,l=(1<<u)-1,p=l>>1,f=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,d=i?0:a-1,h=i?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(s=isNaN(e)?1:0,o=l):(o=Math.floor(Math.log(e)/Math.LN2),e*(c=Math.pow(2,-o))<1&&(o--,c*=2),(e+=o+p>=1?f/c:f*Math.pow(2,1-p))*c>=2&&(o++,c/=2),o+p>=l?(s=0,o=l):o+p>=1?(s=(e*c-1)*Math.pow(2,r),o+=p):(s=e*Math.pow(2,p-1)*Math.pow(2,r),o=0));r>=8;t[n+d]=255&s,d+=h,s/=256,r-=8);for(o=o<<r|s,u+=r;u>0;t[n+d]=255&o,d+=h,o/=256,u-=8);t[n+d-h]|=128*m}},function(t,e,n){var i=n(84),r=n(51),a=n(114),o=n(116),s=n(6),c=n(59),u=n(57);t.exports=function t(e,n,l,p,f){e!==n&&a(n,(function(a,c){if(f||(f=new i),s(a))o(e,n,c,l,t,p,f);else{var d=p?p(u(e,c),a,c+"",e,n,f):void 0;void 0===d&&(d=a),r(e,c,d)}}),c)}},function(t,e,n){var i=n(19),r=n(90),a=n(91),o=n(92),s=n(93),c=n(94);function u(t){var e=this.__data__=new i(t);this.size=e.size}u.prototype.clear=r,u.prototype.delete=a,u.prototype.get=o,u.prototype.has=s,u.prototype.set=c,t.exports=u},function(t,e){t.exports=function(){this.__data__=[],this.size=0}},function(t,e,n){var i=n(20),r=Array.prototype.splice;t.exports=function(t){var e=this.__data__,n=i(e,t);return!(n<0)&&(n==e.length-1?e.pop():r.call(e,n,1),--this.size,!0)}},function(t,e,n){var i=n(20);t.exports=function(t){var e=this.__data__,n=i(e,t);return n<0?void 0:e[n][1]}},function(t,e,n){var i=n(20);t.exports=function(t){return i(this.__data__,t)>-1}},function(t,e,n){var i=n(20);t.exports=function(t,e){var n=this.__data__,r=i(n,t);return r<0?(++this.size,n.push([t,e])):n[r][1]=e,this}},function(t,e,n){var i=n(19);t.exports=function(){this.__data__=new i,this.size=0}},function(t,e){t.exports=function(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n}},function(t,e){t.exports=function(t){return this.__data__.get(t)}},function(t,e){t.exports=function(t){return this.__data__.has(t)}},function(t,e,n){var i=n(19),r=n(48),a=n(50);t.exports=function(t,e){var n=this.__data__;if(n instanceof i){var o=n.__data__;if(!r||o.length<199)return o.push([t,e]),this.size=++n.size,this;n=this.__data__=new a(o)}return n.set(t,e),this.size=n.size,this}},function(t,e,n){var i=n(34),r=n(98),a=n(6),o=n(100),s=/^\[object .+?Constructor\]$/,c=Function.prototype,u=Object.prototype,l=c.toString,p=u.hasOwnProperty,f=RegExp("^"+l.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");t.exports=function(t){return!(!a(t)||r(t))&&(i(t)?f:s).test(o(t))}},function(t,e,n){var i=n(22),r=Object.prototype,a=r.hasOwnProperty,o=r.toString,s=i?i.toStringTag:void 0;t.exports=function(t){var e=a.call(t,s),n=t[s];try{t[s]=void 0;var i=!0}catch(t){}var r=o.call(t);return i&&(e?t[s]=n:delete t[s]),r}},function(t,e){var n=Object.prototype.toString;t.exports=function(t){return n.call(t)}},function(t,e,n){var i,r=n(99),a=(i=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+i:"";t.exports=function(t){return!!a&&a in t}},function(t,e,n){var i=n(9)["__core-js_shared__"];t.exports=i},function(t,e){var n=Function.prototype.toString;t.exports=function(t){if(null!=t){try{return n.call(t)}catch(t){}try{return t+""}catch(t){}}return""}},function(t,e){t.exports=function(t,e){return null==t?void 0:t[e]}},function(t,e,n){var i=n(103),r=n(19),a=n(48);t.exports=function(){this.size=0,this.__data__={hash:new i,map:new(a||r),string:new i}}},function(t,e,n){var i=n(104),r=n(105),a=n(106),o=n(107),s=n(108);function c(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var i=t[e];this.set(i[0],i[1])}}c.prototype.clear=i,c.prototype.delete=r,c.prototype.get=a,c.prototype.has=o,c.prototype.set=s,t.exports=c},function(t,e,n){var i=n(23);t.exports=function(){this.__data__=i?i(null):{},this.size=0}},function(t,e){t.exports=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e}},function(t,e,n){var i=n(23),r=Object.prototype.hasOwnProperty;t.exports=function(t){var e=this.__data__;if(i){var n=e[t];return"__lodash_hash_undefined__"===n?void 0:n}return r.call(e,t)?e[t]:void 0}},function(t,e,n){var i=n(23),r=Object.prototype.hasOwnProperty;t.exports=function(t){var e=this.__data__;return i?void 0!==e[t]:r.call(e,t)}},function(t,e,n){var i=n(23);t.exports=function(t,e){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=i&&void 0===e?"__lodash_hash_undefined__":e,this}},function(t,e,n){var i=n(24);t.exports=function(t){var e=i(this,t).delete(t);return this.size-=e?1:0,e}},function(t,e){t.exports=function(t){var e=typeof t;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==t:null===t}},function(t,e,n){var i=n(24);t.exports=function(t){return i(this,t).get(t)}},function(t,e,n){var i=n(24);t.exports=function(t){return i(this,t).has(t)}},function(t,e,n){var i=n(24);t.exports=function(t,e){var n=i(this,t),r=n.size;return n.set(t,e),this.size+=n.size==r?0:1,this}},function(t,e,n){var i=n(115)();t.exports=i},function(t,e){t.exports=function(t){return function(e,n,i){for(var r=-1,a=Object(e),o=i(e),s=o.length;s--;){var c=o[t?s:++r];if(!1===n(a[c],c,a))break}return e}}},function(t,e,n){var i=n(51),r=n(117),a=n(118),o=n(121),s=n(122),c=n(25),u=n(7),l=n(126),p=n(55),f=n(34),d=n(6),h=n(128),m=n(56),g=n(57),y=n(132);t.exports=function(t,e,n,b,v,w,x){var D=g(t,n),_=g(e,n),E=x.get(_);if(E)i(t,n,E);else{var k=w?w(D,_,n+"",t,e,x):void 0,T=void 0===k;if(T){var C=u(_),S=!C&&p(_),A=!C&&!S&&m(_);k=_,C||S||A?u(D)?k=D:l(D)?k=o(D):S?(T=!1,k=r(_,!0)):A?(T=!1,k=a(_,!0)):k=[]:h(_)||c(_)?(k=D,c(D)?k=y(D):d(D)&&!f(D)||(k=s(_))):T=!1}T&&(x.set(_,k),v(k,_,b,w,x),x.delete(_)),i(t,n,k)}}},function(t,e,n){(function(t){var i=n(9),r=e&&!e.nodeType&&e,a=r&&"object"==typeof t&&t&&!t.nodeType&&t,o=a&&a.exports===r?i.Buffer:void 0,s=o?o.allocUnsafe:void 0;t.exports=function(t,e){if(e)return t.slice();var n=t.length,i=s?s(n):new t.constructor(n);return t.copy(i),i}}).call(this,n(36)(t))},function(t,e,n){var i=n(119);t.exports=function(t,e){var n=e?i(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}},function(t,e,n){var i=n(120);t.exports=function(t){var e=new t.constructor(t.byteLength);return new i(e).set(new i(t)),e}},function(t,e,n){var i=n(9).Uint8Array;t.exports=i},function(t,e){t.exports=function(t,e){var n=-1,i=t.length;for(e||(e=Array(i));++n<i;)e[n]=t[n];return e}},function(t,e,n){var i=n(123),r=n(53),a=n(54);t.exports=function(t){return"function"!=typeof t.constructor||a(t)?{}:i(r(t))}},function(t,e,n){var i=n(6),r=Object.create,a=function(){function t(){}return function(e){if(!i(e))return{};if(r)return r(e);t.prototype=e;var n=new t;return t.prototype=void 0,n}}();t.exports=a},function(t,e){t.exports=function(t,e){return function(n){return t(e(n))}}},function(t,e,n){var i=n(16),r=n(10);t.exports=function(t){return r(t)&&"[object Arguments]"==i(t)}},function(t,e,n){var i=n(37),r=n(10);t.exports=function(t){return r(t)&&i(t)}},function(t,e){t.exports=function(){return!1}},function(t,e,n){var i=n(16),r=n(53),a=n(10),o=Function.prototype,s=Object.prototype,c=o.toString,u=s.hasOwnProperty,l=c.call(Object);t.exports=function(t){if(!a(t)||"[object Object]"!=i(t))return!1;var e=r(t);if(null===e)return!0;var n=u.call(e,"constructor")&&e.constructor;return"function"==typeof n&&n instanceof n&&c.call(n)==l}},function(t,e,n){var i=n(16),r=n(38),a=n(10),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,t.exports=function(t){return a(t)&&r(t.length)&&!!o[i(t)]}},function(t,e){t.exports=function(t){return function(e){return t(e)}}},function(t,e,n){(function(t){var i=n(49),r=e&&!e.nodeType&&e,a=r&&"object"==typeof t&&t&&!t.nodeType&&t,o=a&&a.exports===r&&i.process,s=function(){try{var t=a&&a.require&&a.require("util").types;return t||o&&o.binding&&o.binding("util")}catch(t){}}();t.exports=s}).call(this,n(36)(t))},function(t,e,n){var i=n(133),r=n(59);t.exports=function(t){return i(t,r(t))}},function(t,e,n){var i=n(58),r=n(35);t.exports=function(t,e,n,a){var o=!n;n||(n={});for(var s=-1,c=e.length;++s<c;){var u=e[s],l=a?a(n[u],t[u],u,n,t):void 0;void 0===l&&(l=t[u]),o?r(n,u,l):i(n,u,l)}return n}},function(t,e,n){var i=n(135),r=n(25),a=n(7),o=n(55),s=n(26),c=n(56),u=Object.prototype.hasOwnProperty;t.exports=function(t,e){var n=a(t),l=!n&&r(t),p=!n&&!l&&o(t),f=!n&&!l&&!p&&c(t),d=n||l||p||f,h=d?i(t.length,String):[],m=h.length;for(var g in t)!e&&!u.call(t,g)||d&&("length"==g||p&&("offset"==g||"parent"==g)||f&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,m))||h.push(g);return h}},function(t,e){t.exports=function(t,e){for(var n=-1,i=Array(t);++n<t;)i[n]=e(n);return i}},function(t,e,n){var i=n(6),r=n(54),a=n(137),o=Object.prototype.hasOwnProperty;t.exports=function(t){if(!i(t))return a(t);var e=r(t),n=[];for(var s in t)("constructor"!=s||!e&&o.call(t,s))&&n.push(s);return n}},function(t,e){t.exports=function(t){var e=[];if(null!=t)for(var n in Object(t))e.push(n);return e}},function(t,e,n){var i=n(139),r=n(144);t.exports=function(t){return i((function(e,n){var i=-1,a=n.length,o=a>1?n[a-1]:void 0,s=a>2?n[2]:void 0;for(o=t.length>3&&"function"==typeof o?(a--,o):void 0,s&&r(n[0],n[1],s)&&(o=a<3?void 0:o,a=1),e=Object(e);++i<a;){var c=n[i];c&&t(e,c,i,o)}return e}))}},function(t,e,n){var i=n(60),r=n(61),a=n(62);t.exports=function(t,e){return a(r(t,e,i),t+"")}},function(t,e){t.exports=function(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}},function(t,e,n){var i=n(142),r=n(52),a=n(60),o=r?function(t,e){return r(t,"toString",{configurable:!0,enumerable:!1,value:i(e),writable:!0})}:a;t.exports=o},function(t,e){t.exports=function(t){return function(){return t}}},function(t,e){var n=Date.now;t.exports=function(t){var e=0,i=0;return function(){var r=n(),a=16-(r-i);if(i=r,a>0){if(++e>=800)return arguments[0]}else e=0;return t.apply(void 0,arguments)}}},function(t,e,n){var i=n(21),r=n(37),a=n(26),o=n(6);t.exports=function(t,e,n){if(!o(n))return!1;var s=typeof e;return!!("number"==s?r(n)&&a(e,n.length):"string"==s&&e in n)&&i(n[e],t)}},function(t,e,n){(function(e){const i=n(18),r=n(39),a=n(146)(),o=n(5),s=n(72),c=n(76);t.exports=t=>class extends(t||a){static get utils(){return s}static get errors(){return c}constructor(t={}){super(t=i({request:{fileStoringTimeout:"2.05h",fileGettingTimeout:"1h",fileRemovalTimeout:"6s",fileLinkGettingTimeout:"6s"}},t))}async getFileLink(t,e={}){return(await this.request("get-file-link",{body:{hash:t},timeout:e.timeout||this.options.request.fileLinkGettingTimeout,useInitialAddress:e.useInitialAddress})).link}async getFileLinks(t,e={}){return(await this.request("get-file-links",{body:{hash:t},timeout:e.timeout||this.options.request.fileLinkGettingTimeout,useInitialAddress:e.useInitialAddress})).links}async getFileToBuffer(t,n={}){this.envTest(!1,"getFileToBuffer");const i=n.timeout||this.options.request.fileGettingTimeout,a=this.createRequestTimer(i);let o=await this.request("get-file-link",{body:{hash:t},timeout:a([this.options.request.fileLinkGettingTimeout]),useInitialAddress:n.useInitialAddress});if(!o.link)throw new c.WorkError(`Link for hash "${t}" is not found`,"ERR_STORACLE_NOT_FOUND_LINK");return await new Promise(async(t,n)=>{try{const i=[];(await r(o.link,this.createDefaultRequestOptions({method:"GET",timeout:a()}))).body.on("error",t=>n(s.isRequestTimeoutError(t)?s.createRequestTimeoutError():t)).on("data",t=>i.push(t)).on("end",()=>t(e.concat(i)))}catch(t){n(t)}})}async getFileToPath(t,e,n={}){this.envTest(!1,"getFileToPath");const i=n.timeout||this.options.request.fileGettingTimeout,a=this.createRequestTimer(i);let u=await this.request("get-file-link",{body:{hash:t},timeout:a([this.options.request.fileLinkGettingTimeout]),useInitialAddress:n.useInitialAddress});if(!u.link)throw new c.WorkError(`Link for hash "${t}" is not found`,"ERR_STORACLE_NOT_FOUND_LINK");return await new Promise(async(t,n)=>{try{(await r(u.link,this.createDefaultRequestOptions({method:"GET",timeout:a()}))).body.on("error",t=>n(s.isRequestTimeoutError(t)?s.createRequestTimeoutError():t)).pipe(o.createWriteStream(e)).on("error",n).on("finish",t)}catch(t){n(t)}})}async getFileToBlob(t,e={}){this.envTest(!0,"getFileToBlob");const n=e.timeout||this.options.request.fileGettingTimeout,i=this.createRequestTimer(n);let a=await this.request("get-file-link",{body:{hash:t},timeout:i([this.options.request.fileLinkGettingTimeout]),useInitialAddress:e.useInitialAddress});if(!a.link)throw new c.WorkError(`Link for hash "${t}" is not found`,"ERR_STORACLE_NOT_FOUND_LINK");return a=await r(a.link,this.createDefaultRequestOptions({method:"GET",timeout:i()})),a.blob()}async storeFile(t,e={}){const n=()=>s.isFileReadStream(t)&&t.destroy();try{const i=await s.getFileInfo(t);"string"==typeof t&&(t=o.createReadStream(t));const r=await this.request("store-file",{formData:{file:{value:t,options:{filename:i.hash+(i.ext?"."+i.ext:""),contentType:i.mime}}},timeout:e.timeout||this.options.request.fileStoringTimeout,useInitialAddress:e.useInitialAddress});return n(),r.hash}catch(t){throw n(),t}}async removeFile(t,e={}){return await this.request("remove-file",{body:{hash:t},timeout:e.timeout||this.options.request.fileRemovalTimeout,useInitialAddress:e.useInitialAddress})}createRequestedFileLink(t,e={}){return this.createRequestUrl(`request-file/${t}`,e)}prepareOptions(){super.prepareOptions(),this.options.request.fileGettingTimeout=s.getMs(this.options.request.fileGettingTimeout),this.options.request.fileStoringTimeout=s.getMs(this.options.request.fileStoringTimeout),this.options.request.fileRemovalTimeout=s.getMs(this.options.request.fileRemovalTimeout),this.options.request.fileLinkGettingTimeout=s.getMs(this.options.request.fileLinkGettingTimeout)}}}).call(this,n(1).Buffer)},function(t,e,n){const i=n(18),r=n(39),a=n(147),o=n(148),s=n(159),c=n(29),u=n(31),l=n(69),p=n(172)(),f=n(174)(),d=n(43)();t.exports=t=>class extends(t||d){static get LoggerTransport(){return p}static get TaskTransport(){return f}constructor(t={}){if(super(...arguments),!t.address)throw new Error('You must pass the node address in "ip:port" format');this.options=i({request:{pingTimeout:"1s",clientTimeout:"8s"},secretKey:"",https:!1,logger:{level:"info"},task:{workerChangeInterval:"30s"}},t),!this.options.logger&&(this.options.logger={level:!1}),this.LoggerTransport=this.constructor.LoggerTransport,this.TaskTransport=this.constructor.TaskTransport,this.address=t.address,this.prepareOptions()}async init(){await this.prepareServices(),await this.initServices();const t=Array.isArray(this.address)?this.address:[this.address],e=await this.getAvailableAddress(t);if(!e)throw new Error("Provided addresses are not available");this.workerAddress=e,await this.changeWorker(),super.init.apply(this,arguments)}async deinit(){await this.deinitServices(),super.deinit.apply(this,arguments)}async prepareServices(){this.logger=new this.LoggerTransport(this,this.options.logger),this.options.task&&(this.task=new this.TaskTransport(this,this.options.task)),this.task&&this.options.task.workerChangeInterval&&await this.task.add("workerChange",this.options.task.workerChangeInterval,()=>this.changeWorker())}async initServices(){await this.logger.init(),this.task&&await this.task.init()}async deinitServices(){this.task&&await this.task.deinit(),await this.logger.deinit()}async getAvailableAddress(t){let e;for(let n=0;n<t.length;n++){const i=t[n];try{await r(`${this.getRequestProtocol()}://${i}/ping`,this.createDefaultRequestOptions({method:"GET",timeout:this.options.request.pingTimeout})),e=i;break}catch(t){this.logger.warn(t.stack)}}return e||null}async changeWorker(){const t=this.workerAddress,e=(await this.request("get-available-node",{useInitialAddress:!0})).address;if(e!=t)try{await r(`${this.getRequestProtocol()}://${e}/ping`,this.createDefaultRequestOptions({method:"GET",timeout:this.options.request.pingTimeout})),this.workerAddress=e}catch(e){this.logger.warn(e.stack),this.workerAddress=t}}async request(t,e={}){let n=(e=i(this.createDefaultRequestOptions(),e)).formData||e.body||{};if(n.timeout=e.timeout,n.timestamp=Date.now(),e.formData){const t=new a;for(let e in n){let i=n[e];"object"==typeof i?t.append(e,i.value,i.options):t.append(e,i)}e.body=t,delete e.formData}else e.headers["content-type"]="application/json",e.body=JSON.stringify(n);e.url=this.createRequestUrl(t,{useInitialAddress:e.useInitialAddress});const o=Date.now();try{const t=await r(e.url,e);this.logger.info(`Request to "${e.url}": ${l(Date.now()-o)}`);const n=await t.json();if(t.ok)return n;if(!n||"object"!=typeof n)throw new Error(n||"Unknown error");if(!n.code)throw new Error(n.message);throw new u.WorkError(n.message,n.code)}catch(t){throw c.isRequestTimeoutError(t)&&(t=c.createRequestTimeoutError()),t.requestOptions=e,t}}createRequestUrl(t,e={}){const n=e.query?s.stringify(e.query):null,i=e.useInitialAddress?this.address:this.workerAddress;let r=`${this.getRequestProtocol()}://${i}/client/${t}`;return n&&(r+="?"+n),r}createDefaultRequestOptions(t={}){const e={method:"POST",timeout:this.options.request.clientTimeout,headers:{"network-secret-key":this.options.secretKey}};return t.timeout&&(t.timeout=c.getMs(t.timeout)),"object"==typeof this.options.https&&this.options.https.ca&&(t.agent=t.agent||new o.Agent,t.agent.options.ca=this.options.https.ca),i({},e,t)}createRequestTimer(t){return c.getRequestTimer(t,{min:this.options.request.pingTimeout})}prepareOptions(){this.options.request.clientTimeout=c.getMs(this.options.request.clientTimeout)}getRequestProtocol(){return this.options.https?"https":"http"}envTest(t,e){const n=c.isBrowserEnv();if(t&&!n)throw new Error(`You can't use "${e}" method in the nodejs environment`);if(!t&&n)throw new Error(`You can't use "${e}" method in the browser environment`)}}},function(t,e){t.exports="object"==typeof self?self.FormData:window.FormData},function(t,e,n){var i=n(149),r=n(5),a=t.exports;for(var o in i)i.hasOwnProperty(o)&&(a[o]=i[o]);function s(t){if("string"==typeof t&&(t=r.parse(t)),t.protocol||(t.protocol="https:"),"https:"!==t.protocol)throw new Error('Protocol "'+t.protocol+'" not supported. Expected "https:"');return t}a.request=function(t,e){return t=s(t),i.request.call(this,t,e)},a.get=function(t,e){return t=s(t),i.get.call(this,t,e)}},function(t,e,n){(function(t){var i=n(150),r=n(64),a=n(157),o=n(158),s=n(5),c=e;c.request=function(e,n){e="string"==typeof e?s.parse(e):a(e);var r=-1===t.location.protocol.search(/^https?:$/)?"http:":"",o=e.protocol||r,c=e.hostname||e.host,u=e.port,l=e.path||"/";c&&-1!==c.indexOf(":")&&(c="["+c+"]"),e.url=(c?o+"//"+c:"")+(u?":"+u:"")+l,e.method=(e.method||"GET").toUpperCase(),e.headers=e.headers||{};var p=new i(e);return n&&p.on("response",n),p},c.get=function(t,e){var n=c.request(t,e);return n.end(),n},c.ClientRequest=i,c.IncomingMessage=r.IncomingMessage,c.Agent=function(){},c.Agent.defaultMaxSockets=4,c.globalAgent=new c.Agent,c.STATUS_CODES=o,c.METHODS=["CHECKOUT","CONNECT","COPY","DELETE","GET","HEAD","LOCK","M-SEARCH","MERGE","MKACTIVITY","MKCOL","MOVE","NOTIFY","OPTIONS","PATCH","POST","PROPFIND","PROPPATCH","PURGE","PUT","REPORT","SEARCH","SUBSCRIBE","TRACE","UNLOCK","UNSUBSCRIBE"]}).call(this,n(4))},function(t,e,n){(function(e,i,r){var a=n(63),o=n(0),s=n(64),c=n(17),u=n(156),l=s.IncomingMessage,p=s.readyStates;var f=t.exports=function(t){var n,i=this;c.Writable.call(i),i._opts=t,i._body=[],i._headers={},t.auth&&i.setHeader("Authorization","Basic "+new e(t.auth).toString("base64")),Object.keys(t.headers).forEach((function(e){i.setHeader(e,t.headers[e])}));var r=!0;if("disable-fetch"===t.mode||"requestTimeout"in t&&!a.abortController)r=!1,n=!0;else if("prefer-streaming"===t.mode)n=!1;else if("allow-wrong-content-type"===t.mode)n=!a.overrideMimeType;else{if(t.mode&&"default"!==t.mode&&"prefer-fast"!==t.mode)throw new Error("Invalid value for opts.mode");n=!0}i._mode=function(t,e){return a.fetch&&e?"fetch":a.mozchunkedarraybuffer?"moz-chunked-arraybuffer":a.msstream?"ms-stream":a.arraybuffer&&t?"arraybuffer":a.vbArray&&t?"text:vbarray":"text"}(n,r),i._fetchTimer=null,i.on("finish",(function(){i._onFinish()}))};o(f,c.Writable),f.prototype.setHeader=function(t,e){var n=t.toLowerCase();-1===d.indexOf(n)&&(this._headers[n]={name:t,value:e})},f.prototype.getHeader=function(t){var e=this._headers[t.toLowerCase()];return e?e.value:null},f.prototype.removeHeader=function(t){delete this._headers[t.toLowerCase()]},f.prototype._onFinish=function(){var t=this;if(!t._destroyed){var n=t._opts,o=t._headers,s=null;"GET"!==n.method&&"HEAD"!==n.method&&(s=a.arraybuffer?u(e.concat(t._body)):a.blobConstructor?new i.Blob(t._body.map((function(t){return u(t)})),{type:(o["content-type"]||{}).value||""}):e.concat(t._body).toString());var c=[];if(Object.keys(o).forEach((function(t){var e=o[t].name,n=o[t].value;Array.isArray(n)?n.forEach((function(t){c.push([e,t])})):c.push([e,n])})),"fetch"===t._mode){var l=null;if(a.abortController){var f=new AbortController;l=f.signal,t._fetchAbortController=f,"requestTimeout"in n&&0!==n.requestTimeout&&(t._fetchTimer=i.setTimeout((function(){t.emit("requestTimeout"),t._fetchAbortController&&t._fetchAbortController.abort()}),n.requestTimeout))}i.fetch(t._opts.url,{method:t._opts.method,headers:c,body:s||void 0,mode:"cors",credentials:n.withCredentials?"include":"same-origin",signal:l}).then((function(e){t._fetchResponse=e,t._connect()}),(function(e){i.clearTimeout(t._fetchTimer),t._destroyed||t.emit("error",e)}))}else{var d=t._xhr=new i.XMLHttpRequest;try{d.open(t._opts.method,t._opts.url,!0)}catch(e){return void r.nextTick((function(){t.emit("error",e)}))}"responseType"in d&&(d.responseType=t._mode.split(":")[0]),"withCredentials"in d&&(d.withCredentials=!!n.withCredentials),"text"===t._mode&&"overrideMimeType"in d&&d.overrideMimeType("text/plain; charset=x-user-defined"),"requestTimeout"in n&&(d.timeout=n.requestTimeout,d.ontimeout=function(){t.emit("requestTimeout")}),c.forEach((function(t){d.setRequestHeader(t[0],t[1])})),t._response=null,d.onreadystatechange=function(){switch(d.readyState){case p.LOADING:case p.DONE:t._onXHRProgress()}},"moz-chunked-arraybuffer"===t._mode&&(d.onprogress=function(){t._onXHRProgress()}),d.onerror=function(){t._destroyed||t.emit("error",new Error("XHR error"))};try{d.send(s)}catch(e){return void r.nextTick((function(){t.emit("error",e)}))}}}},f.prototype._onXHRProgress=function(){(function(t){try{var e=t.status;return null!==e&&0!==e}catch(t){return!1}})(this._xhr)&&!this._destroyed&&(this._response||this._connect(),this._response._onXHRProgress())},f.prototype._connect=function(){var t=this;t._destroyed||(t._response=new l(t._xhr,t._fetchResponse,t._mode,t._fetchTimer),t._response.on("error",(function(e){t.emit("error",e)})),t.emit("response",t._response))},f.prototype._write=function(t,e,n){this._body.push(t),n()},f.prototype.abort=f.prototype.destroy=function(){this._destroyed=!0,i.clearTimeout(this._fetchTimer),this._response&&(this._response._destroyed=!0),this._xhr?this._xhr.abort():this._fetchAbortController&&this._fetchAbortController.abort()},f.prototype.end=function(t,e,n){"function"==typeof t&&(n=t,t=void 0),c.Writable.prototype.end.call(this,t,e,n)},f.prototype.flushHeaders=function(){},f.prototype.setTimeout=function(){},f.prototype.setNoDelay=function(){},f.prototype.setSocketKeepAlive=function(){};var d=["accept-charset","accept-encoding","access-control-request-headers","access-control-request-method","connection","content-length","cookie","cookie2","date","dnt","expect","host","keep-alive","origin","referer","te","trailer","transfer-encoding","upgrade","via"]}).call(this,n(1).Buffer,n(4),n(3))},function(t,e){},function(t,e,n){"use strict";var i=n(2).Buffer,r=n(153);t.exports=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.head=null,this.tail=null,this.length=0}return t.prototype.push=function(t){var e={data:t,next:null};this.length>0?this.tail.next=e:this.head=e,this.tail=e,++this.length},t.prototype.unshift=function(t){var e={data:t,next:this.head};0===this.length&&(this.tail=e),this.head=e,++this.length},t.prototype.shift=function(){if(0!==this.length){var t=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,t}},t.prototype.clear=function(){this.head=this.tail=null,this.length=0},t.prototype.join=function(t){if(0===this.length)return"";for(var e=this.head,n=""+e.data;e=e.next;)n+=t+e.data;return n},t.prototype.concat=function(t){if(0===this.length)return i.alloc(0);if(1===this.length)return this.head.data;for(var e,n,r,a=i.allocUnsafe(t>>>0),o=this.head,s=0;o;)e=o.data,n=a,r=s,e.copy(n,r),s+=o.data.length,o=o.next;return a},t}(),r&&r.inspect&&r.inspect.custom&&(t.exports.prototype[r.inspect.custom]=function(){var t=r.inspect({length:this.length});return this.constructor.name+" "+t})},function(t,e){},function(t,e,n){(function(e){function n(t){try{if(!e.localStorage)return!1}catch(t){return!1}var n=e.localStorage[t];return null!=n&&"true"===String(n).toLowerCase()}t.exports=function(t,e){if(n("noDeprecation"))return t;var i=!1;return function(){if(!i){if(n("throwDeprecation"))throw new Error(e);n("traceDeprecation")?console.trace(e):console.warn(e),i=!0}return t.apply(this,arguments)}}}).call(this,n(4))},function(t,e,n){"use strict";t.exports=a;var i=n(68),r=n(11);function a(t){if(!(this instanceof a))return new a(t);i.call(this,t)}r.inherits=n(0),r.inherits(a,i),a.prototype._transform=function(t,e,n){n(null,t)}},function(t,e,n){var i=n(1).Buffer;t.exports=function(t){if(t instanceof Uint8Array){if(0===t.byteOffset&&t.byteLength===t.buffer.byteLength)return t.buffer;if("function"==typeof t.buffer.slice)return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}if(i.isBuffer(t)){for(var e=new Uint8Array(t.length),n=t.length,r=0;r<n;r++)e[r]=t[r];return e.buffer}throw new Error("Argument must be a Buffer")}},function(t,e){t.exports=function(){for(var t={},e=0;e<arguments.length;e++){var i=arguments[e];for(var r in i)n.call(i,r)&&(t[r]=i[r])}return t};var n=Object.prototype.hasOwnProperty},function(t,e){t.exports={100:"Continue",101:"Switching Protocols",102:"Processing",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",208:"Already Reported",226:"IM Used",300:"Multiple Choices",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",308:"Permanent Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Payload Too Large",414:"URI Too Long",415:"Unsupported Media Type",416:"Range Not Satisfiable",417:"Expectation Failed",418:"I'm a teapot",421:"Misdirected Request",422:"Unprocessable Entity",423:"Locked",424:"Failed Dependency",425:"Unordered Collection",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",451:"Unavailable For Legal Reasons",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",509:"Bandwidth Limit Exceeded",510:"Not Extended",511:"Network Authentication Required"}},function(t,e,n){"use strict";e.decode=e.parse=n(160),e.encode=e.stringify=n(161)},function(t,e,n){"use strict";function i(t,e){return Object.prototype.hasOwnProperty.call(t,e)}t.exports=function(t,e,n,a){e=e||"&",n=n||"=";var o={};if("string"!=typeof t||0===t.length)return o;var s=/\+/g;t=t.split(e);var c=1e3;a&&"number"==typeof a.maxKeys&&(c=a.maxKeys);var u=t.length;c>0&&u>c&&(u=c);for(var l=0;l<u;++l){var p,f,d,h,m=t[l].replace(s,"%20"),g=m.indexOf(n);g>=0?(p=m.substr(0,g),f=m.substr(g+1)):(p=m,f=""),d=decodeURIComponent(p),h=decodeURIComponent(f),i(o,d)?r(o[d])?o[d].push(h):o[d]=[o[d],h]:o[d]=h}return o};var r=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)}},function(t,e,n){"use strict";var i=function(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}};t.exports=function(t,e,n,s){return e=e||"&",n=n||"=",null===t&&(t=void 0),"object"==typeof t?a(o(t),(function(o){var s=encodeURIComponent(i(o))+n;return r(t[o])?a(t[o],(function(t){return s+encodeURIComponent(i(t))})).join(e):s+encodeURIComponent(i(t[o]))})).join(e):s?encodeURIComponent(i(s))+n+encodeURIComponent(i(t)):""};var r=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)};function a(t,e){if(t.map)return t.map(e);for(var n=[],i=0;i<t.length;i++)n.push(e(t[i],i));return n}var o=Object.keys||function(t){var e=[];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e.push(n);return e}},function(t,e,n){"use strict";
/*!
 * bytes
 * Copyright(c) 2012-2014 TJ Holowaychuk
 * Copyright(c) 2015 Jed Watson
 * MIT Licensed
 */t.exports=function(t,e){if("string"==typeof t)return c(t);if("number"==typeof t)return s(t,e);return null},t.exports.format=s,t.exports.parse=c;var i=/\B(?=(\d{3})+(?!\d))/g,r=/(?:\.0*|(\.[^0]+)0+)$/,a={b:1,kb:1024,mb:1<<20,gb:1<<30,tb:Math.pow(1024,4),pb:Math.pow(1024,5)},o=/^((-|\+)?(\d+(?:\.\d+)?)) *(kb|mb|gb|tb|pb)$/i;function s(t,e){if(!Number.isFinite(t))return null;var n=Math.abs(t),o=e&&e.thousandsSeparator||"",s=e&&e.unitSeparator||"",c=e&&void 0!==e.decimalPlaces?e.decimalPlaces:2,u=Boolean(e&&e.fixedDecimals),l=e&&e.unit||"";l&&a[l.toLowerCase()]||(l=n>=a.pb?"PB":n>=a.tb?"TB":n>=a.gb?"GB":n>=a.mb?"MB":n>=a.kb?"KB":"B");var p=(t/a[l.toLowerCase()]).toFixed(c);return u||(p=p.replace(r,"$1")),o&&(p=p.replace(i,o)),p+s+l}function c(t){if("number"==typeof t&&!isNaN(t))return t;if("string"!=typeof t)return null;var e,n=o.exec(t),i="b";return n?(e=parseFloat(n[1]),i=n[4].toLowerCase()):(e=parseInt(t,10),i="b"),Math.floor(a[i]*e)}},function(t,e,n){(function(e){var i=n(42),r=n(169);function a(t,e,n){Error.captureStackTrace&&Error.captureStackTrace(this,a),this.input=t,this.message=e,void 0!==n&&(this.message+=" at index "+n)}function o(t){var e;return e=(t[0]>>8)+"."+(255&t[0])+".",e+=(t[1]>>8)+"."+(255&t[1])}function s(t){return!("object"!=typeof t||!Array.isArray(t._fields)||"object"!=typeof t._attrs)}function c(t){if("string"==typeof t)return b(t);if(s(t))return t;throw new Error("Invalid argument: Addr or parsable string expected")}function u(t,e,n){var i,r=null,a=0;if(e){var o=null,s=null;for(i=0;i<t.length;i++)0===t[i]?null===o?(o=i,s=1):s++:null!==o&&(s>a&&(r=o,a=s),o=null);null!==o&&s>a&&(r=o,a=s)}var c,u=[];for(i=0;i<t.length;i++){if(null!==r){if(i===r){if(8===a)return["::"];0===r||r+a===t.length?u.push(":"):u.push("")}if(i>=r&&i<r+a)continue}c=t[i].toString(16),n&&4!=c.length&&(c="0000".slice(c.length)+c),u.push(c)}return u}function l(t){if("string"==typeof t)return new h(t);if(t instanceof h)return t;throw new Error("Invalid argument: CIDR or parsable string expected")}n(13).inherits(a,Error);var p={format:"auto",zeroElide:!0,zeroPad:!1};function f(t,e){return t&&t.hasOwnProperty(e)?t[e]:p[e]}function d(){this._fields=[0,0,0,0,0,0,0,0],this._attrs={}}function h(t,e){if(void 0===e){i.string(t);var n=t.match(/^([a-fA-F0-9:.]+)\/([0-9]+)$/);if(null===n)throw new Error("Invalid argument: <addr>/<prefix> expected");t=n[1],e=parseInt(n[2],10)}if(i.number(e),e|=0,(t=c(t))._attrs.ipv4Bare&&(e+=96),e<0||e>128)throw new Error("Invalid prefix length");this._prefix=e,this._mask=function(t){i.number(t),t|=0,i.ok(t<=128),i.ok(t>=0);var e,n=new d;for(e=0;t>16;e++,t-=16)n._fields[e]=65535;return t>0&&(n._fields[e]=65535-((1<<16-t)-1)),n}(e),this._addr=t.and(this._mask)}d.prototype.kind=function(){return m.contains(this)?"ipv4":"ipv6"},d.prototype.toString=function(t){i.optionalObject(t,"opts");var e=f(t,"format"),n=f(t,"zeroElide"),r=f(t,"zeroPad");switch(i.string(e,"opts.format"),i.bool(n,"opts.zeroElide"),i.bool(r,"opts.zeroPad"),"auto"===e&&(e=this._attrs.ipv4Bare?"v4":this._attrs.ipv4Mapped?"v4-mapped":"v6"),e){case"v4":if(!m.contains(this))throw new Error("cannot print non-v4 address in dotted quad notation");return o(this._fields.slice(6));case"v4-mapped":if(!m.contains(this))throw new Error("cannot print non-v4 address as a v4-mapped address");var a=u(this._fields.slice(0,6),n,r);return a.push(o(this._fields.slice(6))),a.join(":");case"v6":return u(this._fields,n,r).join(":");default:throw new Error('unrecognized format method "'+e+'"')}},d.prototype.toBuffer=function(t){if(void 0!==t){if(!e.isBuffer(t))throw new Error("optional arg must be Buffer")}else t=new e(16);var n;for(n=0;n<8;n++)t.writeUInt16BE(this._fields[n],2*n);return t},d.prototype.toLong=function(){if(!m.contains(this))throw new Error("only possible for ipv4-mapped addresses");return(this._fields[6]<<16>>>0)+this._fields[7]},d.prototype.clone=function(){var t=new d;for(var e in t._fields=this._fields.slice(),this._attrs)t._attrs[e]=this._attrs[e];return t},d.prototype.offset=function(t){if(t<-4294967295||t>4294967295)throw new Error("offsets should be between -4294967295 and 4294967295");var e,n,i,r=this.clone();for(e=7;e>=0&&((n=r._fields[e]+t)>65535?(t=n>>>16,n&=65535):n<0?(t=Math.floor(n/65536),n=((i=65536)+n%i)%i):t=0,r._fields[e]=n,0!==t);e--)if(0===e||6===e&&this._attrs.ipv4Mapped)return null;return r},d.prototype.and=function(t){var e;t=c(t);var n=this.clone();for(e=0;e<8;e++)n._fields[e]=n._fields[e]&t._fields[e];return n},d.prototype.or=function(t){var e;t=c(t);var n=this.clone();for(e=0;e<8;e++)n._fields[e]=n._fields[e]|t._fields[e];return n},d.prototype.not=function(){var t,e=this.clone();for(t=0;t<8;t++)e._fields[t]=65535&~e._fields[t];return e},d.prototype.compare=function(t){return v(this,t)},h.prototype.contains=function(t){return t=c(t),0===this._addr.compare(t.and(this._mask))},h.prototype.first=function(){return this._prefix>=127?this._addr:this._addr.offset(1)},h.prototype.last=function(){var t=this._addr.or(this._mask.not());return this._prefix>=127?t:this._addr._attrs.ipv4Mapped?t.offset(-1):t},h.prototype.broadcast=function(){if(!m.contains(this._addr))throw new Error("Only IPv4 networks have broadcast addresses");return this._addr.or(this._mask.not())},h.prototype.compare=function(t){return g(this,t)},h.prototype.prefixLength=function(t){switch(i.optionalString(t,"format"),void 0!==t&&"auto"!==t||(t=this._addr._attrs.ipv4Bare?"v4":"v6"),t){case"v4":if(!m.contains(this._addr))throw new Error("cannot return v4 prefix length for non-v4 address");return this._prefix-96;case"v6":return this._prefix;default:throw new Error('unrecognized format method "'+t+'"')}},h.prototype.address=function(){return this._addr},h.prototype.toString=function(t){i.optionalObject(t,"opts");var e=f(t,"format");return"v4-mapped"===e&&(e="v6"),this._addr.toString(t)+"/"+this.prefixLength(e)};var m=new h("::ffff:0:0",96);function g(t,e){t=l(t),e=l(e);var n=v(t._addr,e._addr);return 0===n?e._prefix-t._prefix:n}function y(t,e){if(t=c(t),e=c(e),t.compare(e)>0)throw new Error("begin address must be <= end address");this._begin=t,this._end=e}function b(t){if("string"==typeof t)return function(t){i.string(t),t=t.toLowerCase();var e,n,o,s,c=new d,u=[],l=[],p=null,f="";if(t.length>40)throw new a(t,"Input too long");for(e=0;e<t.length;e++)if(":"===(n=t[e]))if(e+1<t.length&&":"===t[e+1]){if(null!==p)throw new a(t,"Multiple :: delimiters",e);""!==f&&(u.push(f),f=""),p=u.length,e++}else{if(""===f)throw new a(t,"illegal delimiter",e);u.push(f),f=""}else"."===n?(l.push(f),f=""):f+=n;if(""!==f)0!==l.length?l.push(f):u.push(f),f="";else if(p!==u.length||l.length>0)throw new a(t,"Cannot end with delimiter besides ::");if(0===l.length){if(u.length>8)throw new a(t,"Too many fields");if(u.length<8&&null===p)throw new a(t,"Too few fields")}else{if(4!==l.length)throw new a(t,"IPv4 portion must have 4 fields");if(0===u.length&&null===p&&(c._attrs.ipv4Bare=!0,u=["ffff"],p=0),u.length>6)throw new a(t,"Too many fields");if(u.length<6&&null===p)throw new a(t,"Too few fields")}for(e=0;e<u.length;e++){if(o=u[e],(s=r.parseInteger(o,{base:16,allowSign:!1}))instanceof Error||s<0||s>65535)throw new a(t,"Invalid field value: "+o);u[e]=s}for(e=0;e<l.length;e++){if(o=l[e],(s=r.parseInteger(o,{base:10,allowSign:!1}))instanceof Error||s<0||s>255)throw new a(t,"Invalid field value: "+o);l[e]=s}0!==l.length&&(u.push(256*l[0]+l[1]),u.push(256*l[2]+l[3]));if(u.length<8&&null!==p){var h=[];for(e=0;e<8-u.length;e++)h.push(0);u=Array.prototype.concat(u.slice(0,p),h,u.slice(p))}if(0!==l.length){if(!function(t){var e,n=[0,0,0,0,0,65535];for(e=0;e<6;e++)if(t[e]!=n[e])return!1;return!0}(u))throw new a(t,"invalid dotted-quad notation");c._attrs.ipv4Mapped=!0}return c._fields=u,c}(t);if("number"==typeof t)return function(t){if(i.number(t),t!==Math.floor(t))throw new Error("Value must be integer");if(t<0||t>4294967295)throw new Error("Value must be 32 bit");var e=new d;return e._fields[7]=65535&t,e._fields[6]=t>>>16,e._fields[5]=65535,e._attrs.ipv4Bare=!0,e._attrs.ipv4Mapped=!0,e}(t);if("object"==typeof t&&s(t))return t;throw new Error("Invalid argument: only string|number allowed")}function v(t,e){var n;for(t=c(t),e=c(e),n=0;n<8;n++){if(t._fields[n]<e._fields[n])return-1;if(t._fields[n]>e._fields[n])return 1}return 0}y.prototype.contains=function(t){return t=c(t),this._begin.compare(t)<=0&&this._end.compare(t)>=0},y.prototype.first=function(){return this._begin},y.prototype.last=function(){return this._end},t.exports={parse:b,compare:v,createCIDR:function(t,e){return new h(t,e)},compareCIDR:g,createAddrRange:function(t,e){return new y(t,e)}}}).call(this,n(1).Buffer)},function(t,e){t.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},function(t,e,n){t.exports=n(41)},function(t,e,n){t.exports=n(8)},function(t,e,n){t.exports=n(17).Transform},function(t,e,n){t.exports=n(17).PassThrough},function(t,e,n){var i=n(42),r=(n(13),n(71)),a=n(170),o=n(171);function s(t,e){return i.equal(typeof e,"string"),Object.prototype.hasOwnProperty.call(t,e)}e.deepCopy=function t(e){var n,i,r="__deepCopy";if(e&&e[r])throw new Error("attempted deep copy of cyclic object");if(e&&e.constructor==Object){for(i in n={},e[r]=!0,e)i!=r&&(n[i]=t(e[i]));return delete e[r],n}if(e&&e.constructor==Array){for(n=[],e[r]=!0,i=0;i<e.length;i++)n.push(t(e[i]));return delete e[r],n}return e},e.deepEqual=function t(e,n){if(typeof e!=typeof n)return!1;if(null===e||null===n||"object"!=typeof e)return e===n;if(e.constructor!=n.constructor)return!1;var i;for(i in e){if(!n.hasOwnProperty(i))return!1;if(!t(e[i],n[i]))return!1}for(i in n)if(!e.hasOwnProperty(i))return!1;return!0},e.isEmpty=function(t){var e;for(e in t)return!1;return!0},e.hasKey=s,e.forEachKey=function(t,e){for(var n in t)s(t,n)&&e(n,t[n])},e.pluck=function(t,e){return i.equal(typeof e,"string"),function t(e,n){if(null===e||"object"!=typeof e)return;if(e.hasOwnProperty(n))return e[n];var i=n.indexOf(".");if(-1==i)return;var r=n.substr(0,i);return e.hasOwnProperty(r)?t(e[r],n.substr(i+1)):void 0}(t,e)},e.flattenObject=function t(e,n){if(0===n)return[e];i.ok(null!==e),i.equal(typeof e,"object"),i.equal(typeof n,"number"),i.ok(n>=0);var r,a=[];for(r in e)t(e[r],n-1).forEach((function(t){a.push([r].concat(t))}));return a},e.flattenIter=function(t,e,n){!function t(e,n,r,a){var o,s;if(0===n)return(o=r.slice(0)).push(e),void a(o);for(s in i.ok(null!==e),i.equal(typeof e,"object"),i.equal(typeof n,"number"),i.ok(n>=0),e)(o=r.slice(0)).push(s),t(e[s],n-1,o,a)}(t,e,[],n)},e.validateJsonObject=m,e.validateJsonObjectJS=m,e.randElt=function(t){return i.ok(Array.isArray(t)&&t.length>0,"randElt argument must be a non-empty array"),t[Math.floor(Math.random()*t.length)]},e.extraProperties=function(t,e){i.ok("object"==typeof t&&null!==t,"obj argument must be a non-null object"),i.ok(Array.isArray(e),"allowed argument must be an array of strings");for(var n=0;n<e.length;n++)i.ok("string"==typeof e[n],"allowed argument must be an array of strings");return Object.keys(t).filter((function(t){return-1===e.indexOf(t)}))},e.mergeObjects=v,e.startsWith=function(t,e){return t.substr(0,e.length)==e},e.endsWith=function(t,e){return t.substr(t.length-e.length,e.length)==e},e.parseInteger=function(t,e){i.string(t,"str"),i.optionalObject(e,"options");var n,r=!1,a=f;e&&(r=s(e,"base"),a=v(a,e),i.number(a.base,"options.base"),i.ok(a.base>=2,"options.base >= 2"),i.ok(a.base<=36,"options.base <= 36"),i.bool(a.allowSign,"options.allowSign"),i.bool(a.allowPrefix,"options.allowPrefix"),i.bool(a.allowTrailing,"options.allowTrailing"),i.bool(a.allowImprecise,"options.allowImprecise"),i.bool(a.trimWhitespace,"options.trimWhitespace"),i.bool(a.leadingZeroIsOctal,"options.leadingZeroIsOctal"),a.leadingZeroIsOctal&&i.ok(!r,'"base" and "leadingZeroIsOctal" are mutually exclusive'));var o,c=-1,u=a.base,m=1,g=0,y=0,b=t.length;if(a.trimWhitespace)for(;y<b&&h(t.charCodeAt(y));)++y;a.allowSign&&("-"===t[y]?(y+=1,m=-1):"+"===t[y]&&(y+=1));"0"===t[y]&&(a.allowPrefix&&(-1===(c=function(t){return 98===t||66===t?2:111===t||79===t?8:116===t||84===t?10:120===t||88===t?16:-1}(t.charCodeAt(y+1)))||r&&c!==u||(u=c,y+=2)),-1===c&&a.leadingZeroIsOctal&&(u=8));for(o=y;y<b&&(-1!==(n=d(t.charCodeAt(y)))&&n<u);++y)g*=u,g+=n;if(o===y)return new Error("invalid number: "+JSON.stringify(t));if(a.trimWhitespace)for(;y<b&&h(t.charCodeAt(y));)++y;if(y<b&&!a.allowTrailing)return new Error("trailing characters after number: "+JSON.stringify(t.slice(y)));if(0===g)return 0;var w=g*m;if(!a.allowImprecise&&(g>l||w<p))return new Error("number is outside of the supported range: "+JSON.stringify(t.slice(o,y)));return w},e.iso8601=function(t){"number"==typeof t&&(t=new Date(t));return i.ok(t.constructor===Date),r.sprintf("%4d-%02d-%02dT%02d:%02d:%02d.%03dZ",t.getUTCFullYear(),t.getUTCMonth()+1,t.getUTCDate(),t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds(),t.getUTCMilliseconds())},e.rfc1123=function(t){return r.sprintf("%s, %02d %s %04d %02d:%02d:%02d GMT",u[t.getUTCDay()],t.getUTCDate(),c[t.getUTCMonth()],t.getUTCFullYear(),t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds())},e.parseDateTime=function(t){var e=+t;return isNaN(e)?new Date(t):new Date(e)},e.hrtimediff=y,e.hrtimeDiff=y,e.hrtimeAccum=b,e.hrtimeAdd=function(t,e){return g(t),b([t[0],t[1]],e)},e.hrtimeNanosec=function(t){return g(t),Math.floor(1e9*t[0]+t[1])},e.hrtimeMicrosec=function(t){return g(t),Math.floor(1e6*t[0]+t[1]/1e3)},e.hrtimeMillisec=function(t){return g(t),Math.floor(1e3*t[0]+t[1]/1e6)};var c=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],u=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];var l=Number.MAX_SAFE_INTEGER||9007199254740991,p=Number.MIN_SAFE_INTEGER||-9007199254740991,f={base:10,allowSign:!0,allowPrefix:!1,allowTrailing:!1,allowImprecise:!1,trimWhitespace:!1,leadingZeroIsOctal:!1};function d(t){return t>=48&&t<=57?t-48:t>=65&&t<=90?t-55:t>=97&&t<=122?t-87:-1}function h(t){return 32===t||t>=9&&t<=13||160===t||5760===t||6158===t||t>=8192&&t<=8202||8232===t||8233===t||8239===t||8287===t||12288===t||65279===t}function m(t,e){var n=o.validate(e,t);if(0===n.errors.length)return null;var i,r,s=n.errors[0],c=s.property,u=s.message.toLowerCase();-1!=(i=u.indexOf("the property "))&&-1!=(r=u.indexOf(" is not defined in the schema and the schema does not allow additional properties"))&&(i+="the property ".length,c=""===c?u.substr(i,r-i):c+"."+u.substr(i,r-i),u="unsupported property");var l=new a.VError('property "%s": %s',c,u);return l.jsv_details=s,l}function g(t){i.ok(t[0]>=0&&t[1]>=0,"negative numbers not allowed in hrtimes"),i.ok(t[1]<1e9,"nanoseconds column overflow")}function y(t,e){g(t),g(e),i.ok(t[0]>e[0]||t[0]==e[0]&&t[1]>=e[1],"negative differences not allowed");var n=[t[0]-e[0],0];return t[1]>=e[1]?n[1]=t[1]-e[1]:(n[0]--,n[1]=1e9-(e[1]-t[1])),n}function b(t,e){return g(t),g(e),t[1]+=e[1],t[1]>=1e9&&(t[0]++,t[1]-=1e9),t[0]+=e[0],t}function v(t,e,n){var i,r;if(i={},n)for(r in n)i[r]=n[r];if(t)for(r in t)i[r]=t[r];if(e)for(r in e)i[r]=e[r];return i}},function(t,e,n){var i=n(42),r=n(13),a=n(71),o=n(11).isError,s=a.sprintf;function c(t){var e,n,r,a;if(i.object(t,"args"),i.bool(t.strict,"args.strict"),i.array(t.argv,"args.argv"),0===(e=t.argv).length)n={},r=[];else if(o(e[0]))n={cause:e[0]},r=e.slice(1);else if("object"==typeof e[0]){for(a in n={},e[0])n[a]=e[0][a];r=e.slice(1)}else i.string(e[0],"first argument to VError, SError, or WError constructor must be a string, object, or Error"),n={},r=e;return i.object(n),n.strict||t.strict||(r=r.map((function(t){return null===t?"null":void 0===t?"undefined":t}))),{options:n,shortmessage:0===r.length?"":s.apply(null,r)}}function u(){var t,e,n,r,a,s,l;if(t=Array.prototype.slice.call(arguments,0),!(this instanceof u))return e=Object.create(u.prototype),u.apply(e,arguments),e;if((n=c({argv:t,strict:!1})).options.name&&(i.string(n.options.name,'error\'s "name" must be a string'),this.name=n.options.name),this.jse_shortmsg=n.shortmessage,s=n.shortmessage,(r=n.options.cause)&&(i.ok(o(r),"cause is not an Error"),this.jse_cause=r,n.options.skipCauseMessage||(s+=": "+r.message)),this.jse_info={},n.options.info)for(l in n.options.info)this.jse_info[l]=n.options.info[l];return this.message=s,Error.call(this,s),Error.captureStackTrace&&(a=n.options.constructorOpt||this.constructor,Error.captureStackTrace(this,a)),this}function l(){var t,e,n,i;return t=Array.prototype.slice.call(arguments,0),this instanceof l?(i=(n=c({argv:t,strict:!0})).options,u.call(this,i,"%s",n.shortmessage),this):(e=Object.create(l.prototype),l.apply(e,arguments),e)}function p(t){i.array(t,"list of errors"),i.ok(t.length>0,"must be at least one error"),this.ase_errors=t,u.call(this,{cause:t[0]},"first of %d error%s",t.length,1==t.length?"":"s")}function f(){var t,e,n,i;return t=Array.prototype.slice.call(arguments,0),this instanceof f?((i=(n=c({argv:t,strict:!1})).options).skipCauseMessage=!0,u.call(this,i,"%s",n.shortmessage),this):(e=Object.create(f.prototype),f.apply(e,t),e)}t.exports=u,u.VError=u,u.SError=l,u.WError=f,u.MultiError=p,r.inherits(u,Error),u.prototype.name="VError",u.prototype.toString=function(){var t=this.hasOwnProperty("name")&&this.name||this.constructor.name||this.constructor.prototype.name;return this.message&&(t+=": "+this.message),t},u.prototype.cause=function(){var t=u.cause(this);return null===t?void 0:t},u.cause=function(t){return i.ok(o(t),"err must be an Error"),o(t.jse_cause)?t.jse_cause:null},u.info=function(t){var e,n,r;if(i.ok(o(t),"err must be an Error"),e=null!==(n=u.cause(t))?u.info(n):{},"object"==typeof t.jse_info&&null!==t.jse_info)for(r in t.jse_info)e[r]=t.jse_info[r];return e},u.findCauseByName=function(t,e){var n;for(i.ok(o(t),"err must be an Error"),i.string(e,"name"),i.ok(e.length>0,"name cannot be empty"),n=t;null!==n;n=u.cause(n))if(i.ok(o(n)),n.name==e)return n;return null},u.hasCauseWithName=function(t,e){return null!==u.findCauseByName(t,e)},u.fullStack=function(t){i.ok(o(t),"err must be an Error");var e=u.cause(t);return e?t.stack+"\ncaused by: "+u.fullStack(e):t.stack},u.errorFromList=function(t){return i.arrayOfObject(t,"errors"),0===t.length?null:(t.forEach((function(t){i.ok(o(t))})),1==t.length?t[0]:new p(t))},u.errorForEach=function(t,e){i.ok(o(t),"err must be an Error"),i.func(e,"func"),t instanceof p?t.errors().forEach((function(t){e(t)})):e(t)},r.inherits(l,u),r.inherits(p,u),p.prototype.name="MultiError",p.prototype.errors=function(){return this.ase_errors.slice(0)},r.inherits(f,u),f.prototype.name="WError",f.prototype.toString=function(){var t=this.hasOwnProperty("name")&&this.name||this.constructor.name||this.constructor.prototype.name;return this.message&&(t+=": "+this.message),this.jse_cause&&this.jse_cause.message&&(t+="; caused by "+this.jse_cause.toString()),t},f.prototype.cause=function(t){return o(t)&&(this.jse_cause=t),this.jse_cause}},function(t,e,n){var i;void 0===(i=function(){return function(){var t=n;t.Integer={type:"integer"};var e={String:String,Boolean:Boolean,Number:Number,Object:Object,Array:Array,Date:Date};function n(t,e){return n(t,e,{changing:!1})}t.validate=n,t.checkPropertyChange=function(t,e,i){return n(t,e,{changing:i||"property"})};var n=t._validate=function(t,n,i){i||(i={});var r=i.changing;function a(t){return t.type||e[t.name]==t&&t.name.toLowerCase()}var o=[];function s(t,e,n,c){var u;function l(t){o.push({property:n,message:t})}if(n+=n?"number"==typeof c?"["+c+"]":void 0===c?"":"."+c:c,("object"!=typeof e||e instanceof Array)&&(n||"function"!=typeof e)&&(!e||!a(e)))return"function"==typeof e?t instanceof e||l("is not an instance of the class/constructor "+e.name):e&&l("Invalid schema/property definition "+e),null;function p(t,e){if(t){if(!("string"!=typeof t||"any"==t||("null"==t?null===e:typeof e==t)||e instanceof Array&&"array"==t||e instanceof Date&&"date"==t||"integer"==t&&e%1==0))return[{property:n,message:typeof e+" value found, but a "+t+" is required"}];if(t instanceof Array){for(var i=[],r=0;r<t.length&&(i=p(t[r],e)).length;r++);if(i.length)return i}else if("object"==typeof t){var a=o;o=[],s(e,t,n);var c=o;return o=a,c}}return[]}if(r&&e.readonly&&l("is a readonly field, it can not be changed"),e.extends&&s(t,e.extends,n,c),void 0===t)e.required&&l("is missing and it is required");else if(o=o.concat(p(a(e),t)),e.disallow&&!p(e.disallow,t).length&&l(" disallowed value was matched"),null!==t){if(t instanceof Array){if(e.items){var f=e.items instanceof Array,d=e.items;for(c=0,u=t.length;c<u;c+=1)f&&(d=e.items[c]),i.coerce&&(t[c]=i.coerce(t[c],d)),o.concat(s(t[c],d,n,c))}e.minItems&&t.length<e.minItems&&l("There must be a minimum of "+e.minItems+" in the array"),e.maxItems&&t.length>e.maxItems&&l("There must be a maximum of "+e.maxItems+" in the array")}else(e.properties||e.additionalProperties)&&o.concat(function(t,e,n,a){if("object"==typeof e)for(var c in("object"!=typeof t||t instanceof Array)&&o.push({property:n,message:"an object is required"}),e)if(e.hasOwnProperty(c)){var u=t[c];if(void 0===u&&i.existingOnly)continue;var l=e[c];void 0===u&&l.default&&(u=t[c]=l.default),i.coerce&&c in t&&(u=t[c]=i.coerce(u,l)),s(u,l,n,c)}for(c in t){if(t.hasOwnProperty(c)&&("_"!=c.charAt(0)||"_"!=c.charAt(1))&&e&&!e[c]&&!1===a){if(i.filter){delete t[c];continue}o.push({property:n,message:typeof u+"The property "+c+" is not defined in the schema and the schema does not allow additional properties"})}var p=e&&e[c]&&e[c].requires;!p||p in t||o.push({property:n,message:"the presence of the property "+c+" requires that "+p+" also be present"}),u=t[c],!a||e&&"object"==typeof e&&c in e||(i.coerce&&(u=t[c]=i.coerce(u,a)),s(u,a,n,c)),!r&&u&&u.$schema&&(o=o.concat(s(u,u.$schema,n,c)))}return o}(t,e.properties,n,e.additionalProperties));if(e.pattern&&"string"==typeof t&&!t.match(e.pattern)&&l("does not match the regex pattern "+e.pattern),e.maxLength&&"string"==typeof t&&t.length>e.maxLength&&l("may only be "+e.maxLength+" characters long"),e.minLength&&"string"==typeof t&&t.length<e.minLength&&l("must be at least "+e.minLength+" characters long"),void 0!==typeof e.minimum&&typeof t==typeof e.minimum&&e.minimum>t&&l("must have a minimum value of "+e.minimum),void 0!==typeof e.maximum&&typeof t==typeof e.maximum&&e.maximum<t&&l("must have a maximum value of "+e.maximum),e.enum){var h,m=e.enum;u=m.length;for(var g=0;g<u;g++)if(m[g]===t){h=1;break}h||l("does not have a value in the enumeration "+m.join(", "))}"number"==typeof e.maxDecimal&&t.toString().match(new RegExp("\\.[0-9]{"+(e.maxDecimal+1)+",}"))&&l("may only have "+e.maxDecimal+" digits of decimal places")}return null}return n&&s(t,n,"",r||""),!r&&t&&t.$schema&&s(t,t.$schema,"",""),{valid:!o.length,errors:o}};return t.mustBeValid=function(t){if(!t.valid)throw new TypeError(t.errors.map((function(t){return"for property "+t.property+": "+t.message})).join(", \n"))},t}()}.apply(e,[]))||(t.exports=i)},function(t,e,n){const i=n(173)(),r=n(12),a=n(29);t.exports=t=>class extends(t||i){constructor(){super(...arguments),this.colors={info:"white",warn:"yellow",error:"red"}}async log(t,...e){this.isLevelActive(t)&&console[t].apply(console[t],a.isBrowserEnv()?e:e.map(e=>(e&&"object"==typeof e&&(e=JSON.stringify(e)),r[this.colors[t]](e))))}}},function(t,e,n){const i=n(43)();t.exports=t=>class extends(t||i){constructor(t,e={}){super(...arguments),this.node=t,this.options=e,this.levels=["info","warn","error"],this.defaultLevel="info"}async init(){this.setLevel(void 0===this.options.level?this.defaultLevel:this.options.level),await super.init.apply(this,arguments)}async deinit(){this.setLevel(!1),await super.deinit.apply(this,arguments)}async log(){throw new Error('Method "log" is required for logger transport')}async info(...t){await this.log("info",...t)}async warn(...t){await this.log("warn",...t)}async error(...t){await this.log("error",...t)}isLevelActive(t){return!!this.level&&this.levels.indexOf(t)>=this.levels.indexOf(this.level)}setLevel(t){if(!1===t)return this.level=!1;if(-1==this.levels.indexOf(t))throw new Error(`Wrong logger level "${t}"`);this.level=t}}},function(t,e,n){const i=n(175)(),r=n(29);t.exports=t=>class extends(t||i){async add(t,e,n,i){return super.add(t,r.getMs(e),n,i)}async start(t){await super.start(t);const e=setInterval(()=>this.run(t),t.interval);t.intervalObject=e}async stop(t){clearInterval(t.intervalObject),await super.stop(t)}}},function(t,e,n){const i=n(18),r=n(43)();t.exports=t=>class extends(t||r){constructor(t,e={}){super(...arguments),this.node=t,this.options=i({showCompletionLogs:!0,showFailLogs:!0},e),this.tasks={}}async add(t,e,n,r){const a=i({interval:e,fn:n,name:t},r);return void 0===a.isStopped&&(a.isStopped=!0),this.tasks[t]=a,a.isStopped||(await this.stop(a),await this.start(a)),a}async get(t){return this.tasks[t]||null}async remove(t){const e=this.tasks[t];e&&(!e.isStopped&&await this.stop(e),delete this.tasks[t])}async init(){this.startAll(),await super.init.apply(this,arguments)}async deinit(){this.stopAll(),await super.deinit.apply(this,arguments)}async startAll(){for(let t in this.tasks)await this.start(this.tasks[t])}async stopAll(){for(let t in this.tasks)await this.stop(this.tasks[t])}async run(t){if(t.isStopped)this.options.showFailLogs&&this.node.logger.warn(`Task "${t.name}" should be started at first`);else if(t.isRun)this.options.showFailLogs&&this.node.logger.warn(`Task "${t.name}" has blocking operations`);else{t.isRun=!0;try{await t.fn(),this.options.showCompletionLogs&&this.node.logger.info(`Task "${t.name}" has been completed`)}catch(e){this.options.showFailLogs&&this.node.logger.error(`Task "${t.name}",`,e.stack)}t.isRun=!1}}async start(t){t.isStopped=!1}async stop(t){t.isStopped=!0}}},function(t,e,n){"use strict";var i=n(177);t.exports=new i(n(178),n(179))},function(t,e,n){"use strict";function i(){this._types=Object.create(null),this._extensions=Object.create(null);for(var t=0;t<arguments.length;t++)this.define(arguments[t]);this.define=this.define.bind(this),this.getType=this.getType.bind(this),this.getExtension=this.getExtension.bind(this)}i.prototype.define=function(t,e){for(var n in t){var i=t[n].map((function(t){return t.toLowerCase()}));n=n.toLowerCase();for(var r=0;r<i.length;r++){if("*"!=(a=i[r])[0]){if(!e&&a in this._types)throw new Error('Attempt to change mapping for "'+a+'" extension from "'+this._types[a]+'" to "'+n+'". Pass `force=true` to allow this, otherwise remove "'+a+'" from the list of extensions for "'+n+'".');this._types[a]=n}}if(e||!this._extensions[n]){var a=i[0];this._extensions[n]="*"!=a[0]?a:a.substr(1)}}},i.prototype.getType=function(t){var e=(t=String(t)).replace(/^.*[/\\]/,"").toLowerCase(),n=e.replace(/^.*\./,"").toLowerCase(),i=e.length<t.length;return(n.length<e.length-1||!i)&&this._types[n]||null},i.prototype.getExtension=function(t){return(t=/^\s*([^;\s]*)/.test(t)&&RegExp.$1)&&this._extensions[t.toLowerCase()]||null},t.exports=i},function(t,e){t.exports={"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomsvc+xml":["atomsvc"],"application/bdoc":["bdoc"],"application/ccxml+xml":["ccxml"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["ecma","es"],"application/emma+xml":["emma"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/font-tdpfr":["pfr"],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hjson":["hjson"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/n-quads":["nq"],"application/n-triples":["nt"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/pskc+xml":["pskcxml"],"application/raml+yaml":["raml"],"application/rdf+xml":["rdf","owl"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/sieve":["siv","sieve"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/voicexml+xml":["vxml"],"application/wasm":["wasm"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/xaml+xml":["xaml"],"application/xcap-diff+xml":["xdf"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":["*3gpp"],"audio/adpcm":["adp"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mp3":["*mp3"],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/wav":["wav"],"audio/wave":["*wav"],"audio/webm":["weba"],"audio/xm":["xm"],"font/collection":["ttc"],"font/otf":["otf"],"font/ttf":["ttf"],"font/woff":["woff"],"font/woff2":["woff2"],"image/aces":["exr"],"image/apng":["apng"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/dicom-rle":["drle"],"image/emf":["emf"],"image/fits":["fits"],"image/g3fax":["g3"],"image/gif":["gif"],"image/heic":["heic"],"image/heic-sequence":["heics"],"image/heif":["heif"],"image/heif-sequence":["heifs"],"image/ief":["ief"],"image/jls":["jls"],"image/jp2":["jp2","jpg2"],"image/jpeg":["jpeg","jpg","jpe"],"image/jpm":["jpm"],"image/jpx":["jpx","jpf"],"image/jxr":["jxr"],"image/ktx":["ktx"],"image/png":["png"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/t38":["t38"],"image/tiff":["tif","tiff"],"image/tiff-fx":["tfx"],"image/webp":["webp"],"image/wmf":["wmf"],"message/disposition-notification":["disposition-notification"],"message/global":["u8msg"],"message/global-delivery-status":["u8dsn"],"message/global-disposition-notification":["u8mdn"],"message/global-headers":["u8hdr"],"message/rfc822":["eml","mime"],"model/3mf":["3mf"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/stl":["stl"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["*x3db","x3dbz"],"model/x3d+fastinfoset":["x3db"],"model/x3d+vrml":["*x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"model/x3d-vrml":["x3dv"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/mdx":["mdx"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/richtext":["rtx"],"text/rtf":["*rtf"],"text/sgml":["sgml","sgm"],"text/shex":["shex"],"text/slim":["slim","slm"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vtt":["vtt"],"text/xml":["*xml"],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/jpeg":["jpgv"],"video/jpm":["*jpm","jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/webm":["webm"]}},function(t,e){t.exports={"application/prs.cww":["cww"],"application/vnd.3gpp.pic-bw-large":["plb"],"application/vnd.3gpp.pic-bw-small":["psb"],"application/vnd.3gpp.pic-bw-var":["pvb"],"application/vnd.3gpp2.tcap":["tcap"],"application/vnd.3m.post-it-notes":["pwn"],"application/vnd.accpac.simply.aso":["aso"],"application/vnd.accpac.simply.imp":["imp"],"application/vnd.acucobol":["acu"],"application/vnd.acucorp":["atc","acutc"],"application/vnd.adobe.air-application-installer-package+zip":["air"],"application/vnd.adobe.formscentral.fcdt":["fcdt"],"application/vnd.adobe.fxp":["fxp","fxpl"],"application/vnd.adobe.xdp+xml":["xdp"],"application/vnd.adobe.xfdf":["xfdf"],"application/vnd.ahead.space":["ahead"],"application/vnd.airzip.filesecure.azf":["azf"],"application/vnd.airzip.filesecure.azs":["azs"],"application/vnd.amazon.ebook":["azw"],"application/vnd.americandynamics.acc":["acc"],"application/vnd.amiga.ami":["ami"],"application/vnd.android.package-archive":["apk"],"application/vnd.anser-web-certificate-issue-initiation":["cii"],"application/vnd.anser-web-funds-transfer-initiation":["fti"],"application/vnd.antix.game-component":["atx"],"application/vnd.apple.installer+xml":["mpkg"],"application/vnd.apple.keynote":["keynote"],"application/vnd.apple.mpegurl":["m3u8"],"application/vnd.apple.numbers":["numbers"],"application/vnd.apple.pages":["pages"],"application/vnd.apple.pkpass":["pkpass"],"application/vnd.aristanetworks.swi":["swi"],"application/vnd.astraea-software.iota":["iota"],"application/vnd.audiograph":["aep"],"application/vnd.blueice.multipass":["mpm"],"application/vnd.bmi":["bmi"],"application/vnd.businessobjects":["rep"],"application/vnd.chemdraw+xml":["cdxml"],"application/vnd.chipnuts.karaoke-mmd":["mmd"],"application/vnd.cinderella":["cdy"],"application/vnd.citationstyles.style+xml":["csl"],"application/vnd.claymore":["cla"],"application/vnd.cloanto.rp9":["rp9"],"application/vnd.clonk.c4group":["c4g","c4d","c4f","c4p","c4u"],"application/vnd.cluetrust.cartomobile-config":["c11amc"],"application/vnd.cluetrust.cartomobile-config-pkg":["c11amz"],"application/vnd.commonspace":["csp"],"application/vnd.contact.cmsg":["cdbcmsg"],"application/vnd.cosmocaller":["cmc"],"application/vnd.crick.clicker":["clkx"],"application/vnd.crick.clicker.keyboard":["clkk"],"application/vnd.crick.clicker.palette":["clkp"],"application/vnd.crick.clicker.template":["clkt"],"application/vnd.crick.clicker.wordbank":["clkw"],"application/vnd.criticaltools.wbs+xml":["wbs"],"application/vnd.ctc-posml":["pml"],"application/vnd.cups-ppd":["ppd"],"application/vnd.curl.car":["car"],"application/vnd.curl.pcurl":["pcurl"],"application/vnd.dart":["dart"],"application/vnd.data-vision.rdz":["rdz"],"application/vnd.dece.data":["uvf","uvvf","uvd","uvvd"],"application/vnd.dece.ttml+xml":["uvt","uvvt"],"application/vnd.dece.unspecified":["uvx","uvvx"],"application/vnd.dece.zip":["uvz","uvvz"],"application/vnd.denovo.fcselayout-link":["fe_launch"],"application/vnd.dna":["dna"],"application/vnd.dolby.mlp":["mlp"],"application/vnd.dpgraph":["dpg"],"application/vnd.dreamfactory":["dfac"],"application/vnd.ds-keypoint":["kpxx"],"application/vnd.dvb.ait":["ait"],"application/vnd.dvb.service":["svc"],"application/vnd.dynageo":["geo"],"application/vnd.ecowin.chart":["mag"],"application/vnd.enliven":["nml"],"application/vnd.epson.esf":["esf"],"application/vnd.epson.msf":["msf"],"application/vnd.epson.quickanime":["qam"],"application/vnd.epson.salt":["slt"],"application/vnd.epson.ssf":["ssf"],"application/vnd.eszigno3+xml":["es3","et3"],"application/vnd.ezpix-album":["ez2"],"application/vnd.ezpix-package":["ez3"],"application/vnd.fdf":["fdf"],"application/vnd.fdsn.mseed":["mseed"],"application/vnd.fdsn.seed":["seed","dataless"],"application/vnd.flographit":["gph"],"application/vnd.fluxtime.clip":["ftc"],"application/vnd.framemaker":["fm","frame","maker","book"],"application/vnd.frogans.fnc":["fnc"],"application/vnd.frogans.ltf":["ltf"],"application/vnd.fsc.weblaunch":["fsc"],"application/vnd.fujitsu.oasys":["oas"],"application/vnd.fujitsu.oasys2":["oa2"],"application/vnd.fujitsu.oasys3":["oa3"],"application/vnd.fujitsu.oasysgp":["fg5"],"application/vnd.fujitsu.oasysprs":["bh2"],"application/vnd.fujixerox.ddd":["ddd"],"application/vnd.fujixerox.docuworks":["xdw"],"application/vnd.fujixerox.docuworks.binder":["xbd"],"application/vnd.fuzzysheet":["fzs"],"application/vnd.genomatix.tuxedo":["txd"],"application/vnd.geogebra.file":["ggb"],"application/vnd.geogebra.tool":["ggt"],"application/vnd.geometry-explorer":["gex","gre"],"application/vnd.geonext":["gxt"],"application/vnd.geoplan":["g2w"],"application/vnd.geospace":["g3w"],"application/vnd.gmx":["gmx"],"application/vnd.google-apps.document":["gdoc"],"application/vnd.google-apps.presentation":["gslides"],"application/vnd.google-apps.spreadsheet":["gsheet"],"application/vnd.google-earth.kml+xml":["kml"],"application/vnd.google-earth.kmz":["kmz"],"application/vnd.grafeq":["gqf","gqs"],"application/vnd.groove-account":["gac"],"application/vnd.groove-help":["ghf"],"application/vnd.groove-identity-message":["gim"],"application/vnd.groove-injector":["grv"],"application/vnd.groove-tool-message":["gtm"],"application/vnd.groove-tool-template":["tpl"],"application/vnd.groove-vcard":["vcg"],"application/vnd.hal+xml":["hal"],"application/vnd.handheld-entertainment+xml":["zmm"],"application/vnd.hbci":["hbci"],"application/vnd.hhe.lesson-player":["les"],"application/vnd.hp-hpgl":["hpgl"],"application/vnd.hp-hpid":["hpid"],"application/vnd.hp-hps":["hps"],"application/vnd.hp-jlyt":["jlt"],"application/vnd.hp-pcl":["pcl"],"application/vnd.hp-pclxl":["pclxl"],"application/vnd.hydrostatix.sof-data":["sfd-hdstx"],"application/vnd.ibm.minipay":["mpy"],"application/vnd.ibm.modcap":["afp","listafp","list3820"],"application/vnd.ibm.rights-management":["irm"],"application/vnd.ibm.secure-container":["sc"],"application/vnd.iccprofile":["icc","icm"],"application/vnd.igloader":["igl"],"application/vnd.immervision-ivp":["ivp"],"application/vnd.immervision-ivu":["ivu"],"application/vnd.insors.igm":["igm"],"application/vnd.intercon.formnet":["xpw","xpx"],"application/vnd.intergeo":["i2g"],"application/vnd.intu.qbo":["qbo"],"application/vnd.intu.qfx":["qfx"],"application/vnd.ipunplugged.rcprofile":["rcprofile"],"application/vnd.irepository.package+xml":["irp"],"application/vnd.is-xpr":["xpr"],"application/vnd.isac.fcs":["fcs"],"application/vnd.jam":["jam"],"application/vnd.jcp.javame.midlet-rms":["rms"],"application/vnd.jisp":["jisp"],"application/vnd.joost.joda-archive":["joda"],"application/vnd.kahootz":["ktz","ktr"],"application/vnd.kde.karbon":["karbon"],"application/vnd.kde.kchart":["chrt"],"application/vnd.kde.kformula":["kfo"],"application/vnd.kde.kivio":["flw"],"application/vnd.kde.kontour":["kon"],"application/vnd.kde.kpresenter":["kpr","kpt"],"application/vnd.kde.kspread":["ksp"],"application/vnd.kde.kword":["kwd","kwt"],"application/vnd.kenameaapp":["htke"],"application/vnd.kidspiration":["kia"],"application/vnd.kinar":["kne","knp"],"application/vnd.koan":["skp","skd","skt","skm"],"application/vnd.kodak-descriptor":["sse"],"application/vnd.las.las+xml":["lasxml"],"application/vnd.llamagraphics.life-balance.desktop":["lbd"],"application/vnd.llamagraphics.life-balance.exchange+xml":["lbe"],"application/vnd.lotus-1-2-3":["123"],"application/vnd.lotus-approach":["apr"],"application/vnd.lotus-freelance":["pre"],"application/vnd.lotus-notes":["nsf"],"application/vnd.lotus-organizer":["org"],"application/vnd.lotus-screencam":["scm"],"application/vnd.lotus-wordpro":["lwp"],"application/vnd.macports.portpkg":["portpkg"],"application/vnd.mcd":["mcd"],"application/vnd.medcalcdata":["mc1"],"application/vnd.mediastation.cdkey":["cdkey"],"application/vnd.mfer":["mwf"],"application/vnd.mfmp":["mfm"],"application/vnd.micrografx.flo":["flo"],"application/vnd.micrografx.igx":["igx"],"application/vnd.mif":["mif"],"application/vnd.mobius.daf":["daf"],"application/vnd.mobius.dis":["dis"],"application/vnd.mobius.mbk":["mbk"],"application/vnd.mobius.mqy":["mqy"],"application/vnd.mobius.msl":["msl"],"application/vnd.mobius.plc":["plc"],"application/vnd.mobius.txf":["txf"],"application/vnd.mophun.application":["mpn"],"application/vnd.mophun.certificate":["mpc"],"application/vnd.mozilla.xul+xml":["xul"],"application/vnd.ms-artgalry":["cil"],"application/vnd.ms-cab-compressed":["cab"],"application/vnd.ms-excel":["xls","xlm","xla","xlc","xlt","xlw"],"application/vnd.ms-excel.addin.macroenabled.12":["xlam"],"application/vnd.ms-excel.sheet.binary.macroenabled.12":["xlsb"],"application/vnd.ms-excel.sheet.macroenabled.12":["xlsm"],"application/vnd.ms-excel.template.macroenabled.12":["xltm"],"application/vnd.ms-fontobject":["eot"],"application/vnd.ms-htmlhelp":["chm"],"application/vnd.ms-ims":["ims"],"application/vnd.ms-lrm":["lrm"],"application/vnd.ms-officetheme":["thmx"],"application/vnd.ms-outlook":["msg"],"application/vnd.ms-pki.seccat":["cat"],"application/vnd.ms-pki.stl":["*stl"],"application/vnd.ms-powerpoint":["ppt","pps","pot"],"application/vnd.ms-powerpoint.addin.macroenabled.12":["ppam"],"application/vnd.ms-powerpoint.presentation.macroenabled.12":["pptm"],"application/vnd.ms-powerpoint.slide.macroenabled.12":["sldm"],"application/vnd.ms-powerpoint.slideshow.macroenabled.12":["ppsm"],"application/vnd.ms-powerpoint.template.macroenabled.12":["potm"],"application/vnd.ms-project":["mpp","mpt"],"application/vnd.ms-word.document.macroenabled.12":["docm"],"application/vnd.ms-word.template.macroenabled.12":["dotm"],"application/vnd.ms-works":["wps","wks","wcm","wdb"],"application/vnd.ms-wpl":["wpl"],"application/vnd.ms-xpsdocument":["xps"],"application/vnd.mseq":["mseq"],"application/vnd.musician":["mus"],"application/vnd.muvee.style":["msty"],"application/vnd.mynfc":["taglet"],"application/vnd.neurolanguage.nlu":["nlu"],"application/vnd.nitf":["ntf","nitf"],"application/vnd.noblenet-directory":["nnd"],"application/vnd.noblenet-sealer":["nns"],"application/vnd.noblenet-web":["nnw"],"application/vnd.nokia.n-gage.data":["ngdat"],"application/vnd.nokia.n-gage.symbian.install":["n-gage"],"application/vnd.nokia.radio-preset":["rpst"],"application/vnd.nokia.radio-presets":["rpss"],"application/vnd.novadigm.edm":["edm"],"application/vnd.novadigm.edx":["edx"],"application/vnd.novadigm.ext":["ext"],"application/vnd.oasis.opendocument.chart":["odc"],"application/vnd.oasis.opendocument.chart-template":["otc"],"application/vnd.oasis.opendocument.database":["odb"],"application/vnd.oasis.opendocument.formula":["odf"],"application/vnd.oasis.opendocument.formula-template":["odft"],"application/vnd.oasis.opendocument.graphics":["odg"],"application/vnd.oasis.opendocument.graphics-template":["otg"],"application/vnd.oasis.opendocument.image":["odi"],"application/vnd.oasis.opendocument.image-template":["oti"],"application/vnd.oasis.opendocument.presentation":["odp"],"application/vnd.oasis.opendocument.presentation-template":["otp"],"application/vnd.oasis.opendocument.spreadsheet":["ods"],"application/vnd.oasis.opendocument.spreadsheet-template":["ots"],"application/vnd.oasis.opendocument.text":["odt"],"application/vnd.oasis.opendocument.text-master":["odm"],"application/vnd.oasis.opendocument.text-template":["ott"],"application/vnd.oasis.opendocument.text-web":["oth"],"application/vnd.olpc-sugar":["xo"],"application/vnd.oma.dd2+xml":["dd2"],"application/vnd.openofficeorg.extension":["oxt"],"application/vnd.openxmlformats-officedocument.presentationml.presentation":["pptx"],"application/vnd.openxmlformats-officedocument.presentationml.slide":["sldx"],"application/vnd.openxmlformats-officedocument.presentationml.slideshow":["ppsx"],"application/vnd.openxmlformats-officedocument.presentationml.template":["potx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":["xlsx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.template":["xltx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.document":["docx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.template":["dotx"],"application/vnd.osgeo.mapguide.package":["mgp"],"application/vnd.osgi.dp":["dp"],"application/vnd.osgi.subsystem":["esa"],"application/vnd.palm":["pdb","pqa","oprc"],"application/vnd.pawaafile":["paw"],"application/vnd.pg.format":["str"],"application/vnd.pg.osasli":["ei6"],"application/vnd.picsel":["efif"],"application/vnd.pmi.widget":["wg"],"application/vnd.pocketlearn":["plf"],"application/vnd.powerbuilder6":["pbd"],"application/vnd.previewsystems.box":["box"],"application/vnd.proteus.magazine":["mgz"],"application/vnd.publishare-delta-tree":["qps"],"application/vnd.pvi.ptid1":["ptid"],"application/vnd.quark.quarkxpress":["qxd","qxt","qwd","qwt","qxl","qxb"],"application/vnd.realvnc.bed":["bed"],"application/vnd.recordare.musicxml":["mxl"],"application/vnd.recordare.musicxml+xml":["musicxml"],"application/vnd.rig.cryptonote":["cryptonote"],"application/vnd.rim.cod":["cod"],"application/vnd.rn-realmedia":["rm"],"application/vnd.rn-realmedia-vbr":["rmvb"],"application/vnd.route66.link66+xml":["link66"],"application/vnd.sailingtracker.track":["st"],"application/vnd.seemail":["see"],"application/vnd.sema":["sema"],"application/vnd.semd":["semd"],"application/vnd.semf":["semf"],"application/vnd.shana.informed.formdata":["ifm"],"application/vnd.shana.informed.formtemplate":["itp"],"application/vnd.shana.informed.interchange":["iif"],"application/vnd.shana.informed.package":["ipk"],"application/vnd.simtech-mindmapper":["twd","twds"],"application/vnd.smaf":["mmf"],"application/vnd.smart.teacher":["teacher"],"application/vnd.solent.sdkm+xml":["sdkm","sdkd"],"application/vnd.spotfire.dxp":["dxp"],"application/vnd.spotfire.sfs":["sfs"],"application/vnd.stardivision.calc":["sdc"],"application/vnd.stardivision.draw":["sda"],"application/vnd.stardivision.impress":["sdd"],"application/vnd.stardivision.math":["smf"],"application/vnd.stardivision.writer":["sdw","vor"],"application/vnd.stardivision.writer-global":["sgl"],"application/vnd.stepmania.package":["smzip"],"application/vnd.stepmania.stepchart":["sm"],"application/vnd.sun.wadl+xml":["wadl"],"application/vnd.sun.xml.calc":["sxc"],"application/vnd.sun.xml.calc.template":["stc"],"application/vnd.sun.xml.draw":["sxd"],"application/vnd.sun.xml.draw.template":["std"],"application/vnd.sun.xml.impress":["sxi"],"application/vnd.sun.xml.impress.template":["sti"],"application/vnd.sun.xml.math":["sxm"],"application/vnd.sun.xml.writer":["sxw"],"application/vnd.sun.xml.writer.global":["sxg"],"application/vnd.sun.xml.writer.template":["stw"],"application/vnd.sus-calendar":["sus","susp"],"application/vnd.svd":["svd"],"application/vnd.symbian.install":["sis","sisx"],"application/vnd.syncml+xml":["xsm"],"application/vnd.syncml.dm+wbxml":["bdm"],"application/vnd.syncml.dm+xml":["xdm"],"application/vnd.tao.intent-module-archive":["tao"],"application/vnd.tcpdump.pcap":["pcap","cap","dmp"],"application/vnd.tmobile-livetv":["tmo"],"application/vnd.trid.tpt":["tpt"],"application/vnd.triscape.mxs":["mxs"],"application/vnd.trueapp":["tra"],"application/vnd.ufdl":["ufd","ufdl"],"application/vnd.uiq.theme":["utz"],"application/vnd.umajin":["umj"],"application/vnd.unity":["unityweb"],"application/vnd.uoml+xml":["uoml"],"application/vnd.vcx":["vcx"],"application/vnd.visio":["vsd","vst","vss","vsw"],"application/vnd.visionary":["vis"],"application/vnd.vsf":["vsf"],"application/vnd.wap.wbxml":["wbxml"],"application/vnd.wap.wmlc":["wmlc"],"application/vnd.wap.wmlscriptc":["wmlsc"],"application/vnd.webturbo":["wtb"],"application/vnd.wolfram.player":["nbp"],"application/vnd.wordperfect":["wpd"],"application/vnd.wqd":["wqd"],"application/vnd.wt.stf":["stf"],"application/vnd.xara":["xar"],"application/vnd.xfdl":["xfdl"],"application/vnd.yamaha.hv-dic":["hvd"],"application/vnd.yamaha.hv-script":["hvs"],"application/vnd.yamaha.hv-voice":["hvp"],"application/vnd.yamaha.openscoreformat":["osf"],"application/vnd.yamaha.openscoreformat.osfpvg+xml":["osfpvg"],"application/vnd.yamaha.smaf-audio":["saf"],"application/vnd.yamaha.smaf-phrase":["spf"],"application/vnd.yellowriver-custom-menu":["cmp"],"application/vnd.zul":["zir","zirz"],"application/vnd.zzazz.deck+xml":["zaz"],"application/x-7z-compressed":["7z"],"application/x-abiword":["abw"],"application/x-ace-compressed":["ace"],"application/x-apple-diskimage":["*dmg"],"application/x-arj":["arj"],"application/x-authorware-bin":["aab","x32","u32","vox"],"application/x-authorware-map":["aam"],"application/x-authorware-seg":["aas"],"application/x-bcpio":["bcpio"],"application/x-bdoc":["*bdoc"],"application/x-bittorrent":["torrent"],"application/x-blorb":["blb","blorb"],"application/x-bzip":["bz"],"application/x-bzip2":["bz2","boz"],"application/x-cbr":["cbr","cba","cbt","cbz","cb7"],"application/x-cdlink":["vcd"],"application/x-cfs-compressed":["cfs"],"application/x-chat":["chat"],"application/x-chess-pgn":["pgn"],"application/x-chrome-extension":["crx"],"application/x-cocoa":["cco"],"application/x-conference":["nsc"],"application/x-cpio":["cpio"],"application/x-csh":["csh"],"application/x-debian-package":["*deb","udeb"],"application/x-dgc-compressed":["dgc"],"application/x-director":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"],"application/x-doom":["wad"],"application/x-dtbncx+xml":["ncx"],"application/x-dtbook+xml":["dtb"],"application/x-dtbresource+xml":["res"],"application/x-dvi":["dvi"],"application/x-envoy":["evy"],"application/x-eva":["eva"],"application/x-font-bdf":["bdf"],"application/x-font-ghostscript":["gsf"],"application/x-font-linux-psf":["psf"],"application/x-font-pcf":["pcf"],"application/x-font-snf":["snf"],"application/x-font-type1":["pfa","pfb","pfm","afm"],"application/x-freearc":["arc"],"application/x-futuresplash":["spl"],"application/x-gca-compressed":["gca"],"application/x-glulx":["ulx"],"application/x-gnumeric":["gnumeric"],"application/x-gramps-xml":["gramps"],"application/x-gtar":["gtar"],"application/x-hdf":["hdf"],"application/x-httpd-php":["php"],"application/x-install-instructions":["install"],"application/x-iso9660-image":["*iso"],"application/x-java-archive-diff":["jardiff"],"application/x-java-jnlp-file":["jnlp"],"application/x-latex":["latex"],"application/x-lua-bytecode":["luac"],"application/x-lzh-compressed":["lzh","lha"],"application/x-makeself":["run"],"application/x-mie":["mie"],"application/x-mobipocket-ebook":["prc","mobi"],"application/x-ms-application":["application"],"application/x-ms-shortcut":["lnk"],"application/x-ms-wmd":["wmd"],"application/x-ms-wmz":["wmz"],"application/x-ms-xbap":["xbap"],"application/x-msaccess":["mdb"],"application/x-msbinder":["obd"],"application/x-mscardfile":["crd"],"application/x-msclip":["clp"],"application/x-msdos-program":["*exe"],"application/x-msdownload":["*exe","*dll","com","bat","*msi"],"application/x-msmediaview":["mvb","m13","m14"],"application/x-msmetafile":["*wmf","*wmz","*emf","emz"],"application/x-msmoney":["mny"],"application/x-mspublisher":["pub"],"application/x-msschedule":["scd"],"application/x-msterminal":["trm"],"application/x-mswrite":["wri"],"application/x-netcdf":["nc","cdf"],"application/x-ns-proxy-autoconfig":["pac"],"application/x-nzb":["nzb"],"application/x-perl":["pl","pm"],"application/x-pilot":["*prc","*pdb"],"application/x-pkcs12":["p12","pfx"],"application/x-pkcs7-certificates":["p7b","spc"],"application/x-pkcs7-certreqresp":["p7r"],"application/x-rar-compressed":["rar"],"application/x-redhat-package-manager":["rpm"],"application/x-research-info-systems":["ris"],"application/x-sea":["sea"],"application/x-sh":["sh"],"application/x-shar":["shar"],"application/x-shockwave-flash":["swf"],"application/x-silverlight-app":["xap"],"application/x-sql":["sql"],"application/x-stuffit":["sit"],"application/x-stuffitx":["sitx"],"application/x-subrip":["srt"],"application/x-sv4cpio":["sv4cpio"],"application/x-sv4crc":["sv4crc"],"application/x-t3vm-image":["t3"],"application/x-tads":["gam"],"application/x-tar":["tar"],"application/x-tcl":["tcl","tk"],"application/x-tex":["tex"],"application/x-tex-tfm":["tfm"],"application/x-texinfo":["texinfo","texi"],"application/x-tgif":["obj"],"application/x-ustar":["ustar"],"application/x-virtualbox-hdd":["hdd"],"application/x-virtualbox-ova":["ova"],"application/x-virtualbox-ovf":["ovf"],"application/x-virtualbox-vbox":["vbox"],"application/x-virtualbox-vbox-extpack":["vbox-extpack"],"application/x-virtualbox-vdi":["vdi"],"application/x-virtualbox-vhd":["vhd"],"application/x-virtualbox-vmdk":["vmdk"],"application/x-wais-source":["src"],"application/x-web-app-manifest+json":["webapp"],"application/x-x509-ca-cert":["der","crt","pem"],"application/x-xfig":["fig"],"application/x-xliff+xml":["xlf"],"application/x-xpinstall":["xpi"],"application/x-xz":["xz"],"application/x-zmachine":["z1","z2","z3","z4","z5","z6","z7","z8"],"audio/vnd.dece.audio":["uva","uvva"],"audio/vnd.digital-winds":["eol"],"audio/vnd.dra":["dra"],"audio/vnd.dts":["dts"],"audio/vnd.dts.hd":["dtshd"],"audio/vnd.lucent.voice":["lvp"],"audio/vnd.ms-playready.media.pya":["pya"],"audio/vnd.nuera.ecelp4800":["ecelp4800"],"audio/vnd.nuera.ecelp7470":["ecelp7470"],"audio/vnd.nuera.ecelp9600":["ecelp9600"],"audio/vnd.rip":["rip"],"audio/x-aac":["aac"],"audio/x-aiff":["aif","aiff","aifc"],"audio/x-caf":["caf"],"audio/x-flac":["flac"],"audio/x-m4a":["*m4a"],"audio/x-matroska":["mka"],"audio/x-mpegurl":["m3u"],"audio/x-ms-wax":["wax"],"audio/x-ms-wma":["wma"],"audio/x-pn-realaudio":["ram","ra"],"audio/x-pn-realaudio-plugin":["rmp"],"audio/x-realaudio":["*ra"],"audio/x-wav":["*wav"],"chemical/x-cdx":["cdx"],"chemical/x-cif":["cif"],"chemical/x-cmdf":["cmdf"],"chemical/x-cml":["cml"],"chemical/x-csml":["csml"],"chemical/x-xyz":["xyz"],"image/prs.btif":["btif"],"image/prs.pti":["pti"],"image/vnd.adobe.photoshop":["psd"],"image/vnd.airzip.accelerator.azv":["azv"],"image/vnd.dece.graphic":["uvi","uvvi","uvg","uvvg"],"image/vnd.djvu":["djvu","djv"],"image/vnd.dvb.subtitle":["*sub"],"image/vnd.dwg":["dwg"],"image/vnd.dxf":["dxf"],"image/vnd.fastbidsheet":["fbs"],"image/vnd.fpx":["fpx"],"image/vnd.fst":["fst"],"image/vnd.fujixerox.edmics-mmr":["mmr"],"image/vnd.fujixerox.edmics-rlc":["rlc"],"image/vnd.microsoft.icon":["ico"],"image/vnd.ms-modi":["mdi"],"image/vnd.ms-photo":["wdp"],"image/vnd.net-fpx":["npx"],"image/vnd.tencent.tap":["tap"],"image/vnd.valve.source.texture":["vtf"],"image/vnd.wap.wbmp":["wbmp"],"image/vnd.xiff":["xif"],"image/vnd.zbrush.pcx":["pcx"],"image/x-3ds":["3ds"],"image/x-cmu-raster":["ras"],"image/x-cmx":["cmx"],"image/x-freehand":["fh","fhc","fh4","fh5","fh7"],"image/x-icon":["*ico"],"image/x-jng":["jng"],"image/x-mrsid-image":["sid"],"image/x-ms-bmp":["*bmp"],"image/x-pcx":["*pcx"],"image/x-pict":["pic","pct"],"image/x-portable-anymap":["pnm"],"image/x-portable-bitmap":["pbm"],"image/x-portable-graymap":["pgm"],"image/x-portable-pixmap":["ppm"],"image/x-rgb":["rgb"],"image/x-tga":["tga"],"image/x-xbitmap":["xbm"],"image/x-xpixmap":["xpm"],"image/x-xwindowdump":["xwd"],"message/vnd.wfa.wsc":["wsc"],"model/vnd.collada+xml":["dae"],"model/vnd.dwf":["dwf"],"model/vnd.gdl":["gdl"],"model/vnd.gtw":["gtw"],"model/vnd.mts":["mts"],"model/vnd.opengex":["ogex"],"model/vnd.parasolid.transmit.binary":["x_b"],"model/vnd.parasolid.transmit.text":["x_t"],"model/vnd.usdz+zip":["usdz"],"model/vnd.valve.source.compiled-map":["bsp"],"model/vnd.vtu":["vtu"],"text/prs.lines.tag":["dsc"],"text/vnd.curl":["curl"],"text/vnd.curl.dcurl":["dcurl"],"text/vnd.curl.mcurl":["mcurl"],"text/vnd.curl.scurl":["scurl"],"text/vnd.dvb.subtitle":["sub"],"text/vnd.fly":["fly"],"text/vnd.fmi.flexstor":["flx"],"text/vnd.graphviz":["gv"],"text/vnd.in3d.3dml":["3dml"],"text/vnd.in3d.spot":["spot"],"text/vnd.sun.j2me.app-descriptor":["jad"],"text/vnd.wap.wml":["wml"],"text/vnd.wap.wmlscript":["wmls"],"text/x-asm":["s","asm"],"text/x-c":["c","cc","cxx","cpp","h","hh","dic"],"text/x-component":["htc"],"text/x-fortran":["f","for","f77","f90"],"text/x-handlebars-template":["hbs"],"text/x-java-source":["java"],"text/x-lua":["lua"],"text/x-markdown":["mkd"],"text/x-nfo":["nfo"],"text/x-opml":["opml"],"text/x-org":["*org"],"text/x-pascal":["p","pas"],"text/x-processing":["pde"],"text/x-sass":["sass"],"text/x-scss":["scss"],"text/x-setext":["etx"],"text/x-sfv":["sfv"],"text/x-suse-ymp":["ymp"],"text/x-uuencode":["uu"],"text/x-vcalendar":["vcs"],"text/x-vcard":["vcf"],"video/vnd.dece.hd":["uvh","uvvh"],"video/vnd.dece.mobile":["uvm","uvvm"],"video/vnd.dece.pd":["uvp","uvvp"],"video/vnd.dece.sd":["uvs","uvvs"],"video/vnd.dece.video":["uvv","uvvv"],"video/vnd.dvb.file":["dvb"],"video/vnd.fvt":["fvt"],"video/vnd.mpegurl":["mxu","m4u"],"video/vnd.ms-playready.media.pyv":["pyv"],"video/vnd.uvvu.mp4":["uvu","uvvu"],"video/vnd.vivo":["viv"],"video/x-f4v":["f4v"],"video/x-fli":["fli"],"video/x-flv":["flv"],"video/x-m4v":["m4v"],"video/x-matroska":["mkv","mk3d","mks"],"video/x-mng":["mng"],"video/x-ms-asf":["asf","asx"],"video/x-ms-vob":["vob"],"video/x-ms-wm":["wm"],"video/x-ms-wmv":["wmv"],"video/x-ms-wmx":["wmx"],"video/x-ms-wvx":["wvx"],"video/x-msvideo":["avi"],"video/x-sgi-movie":["movie"],"video/x-smv":["smv"],"x-conference/x-cooltalk":["ice"]}},function(t,e,n){"use strict";const i=n(5),r=n(181),a=n(191),o=(t,e={})=>{let n=e.encoding||"hex";"buffer"===n&&(n=void 0);const i=r.createHash(e.algorithm||"sha512"),a=t=>{const e="string"==typeof t?"utf8":void 0;i.update(t,e)};return Array.isArray(t)?t.forEach(a):a(t),i.digest(n)};o.stream=(t={})=>{let e=t.encoding||"hex";"buffer"===e&&(e=void 0);const n=r.createHash(t.algorithm||"sha512");return n.setEncoding(e),n},o.fromStream=async(t,e={})=>{if(!a(t))throw new TypeError("Expected a stream");return new Promise((n,i)=>{t.on("error",i).pipe(o.stream(e)).on("error",i).on("finish",(function(){n(this.read())}))})},o.fromFile=async(t,e)=>o.fromStream(i.createReadStream(t),e),o.fromFileSync=(t,e)=>o(i.readFileSync(t),e),t.exports=o},function(t,e,n){"use strict";var i={createHash:n(182)};t.exports=i},function(t,e,n){"use strict";var i=n(0),r=n(183),a=n(184),o=n(185),s=n(190);function c(t){s.call(this,"digest"),this._hash=t}i(c,s),c.prototype._update=function(t){this._hash.update(t)},c.prototype._final=function(){return this._hash.digest()},t.exports=function(t){return"md5"===(t=t.toLowerCase())?new r:"rmd160"===t||"ripemd160"===t?new a:new c(o(t))}},function(t,e,n){"use strict";var i=n(0),r=n(73),a=n(2).Buffer,o=new Array(16);function s(){r.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878}function c(t,e){return t<<e|t>>>32-e}function u(t,e,n,i,r,a,o){return c(t+(e&n|~e&i)+r+a|0,o)+e|0}function l(t,e,n,i,r,a,o){return c(t+(e&i|n&~i)+r+a|0,o)+e|0}function p(t,e,n,i,r,a,o){return c(t+(e^n^i)+r+a|0,o)+e|0}function f(t,e,n,i,r,a,o){return c(t+(n^(e|~i))+r+a|0,o)+e|0}i(s,r),s.prototype._update=function(){for(var t=o,e=0;e<16;++e)t[e]=this._block.readInt32LE(4*e);var n=this._a,i=this._b,r=this._c,a=this._d;n=u(n,i,r,a,t[0],3614090360,7),a=u(a,n,i,r,t[1],3905402710,12),r=u(r,a,n,i,t[2],606105819,17),i=u(i,r,a,n,t[3],3250441966,22),n=u(n,i,r,a,t[4],4118548399,7),a=u(a,n,i,r,t[5],1200080426,12),r=u(r,a,n,i,t[6],2821735955,17),i=u(i,r,a,n,t[7],4249261313,22),n=u(n,i,r,a,t[8],1770035416,7),a=u(a,n,i,r,t[9],2336552879,12),r=u(r,a,n,i,t[10],4294925233,17),i=u(i,r,a,n,t[11],2304563134,22),n=u(n,i,r,a,t[12],1804603682,7),a=u(a,n,i,r,t[13],4254626195,12),r=u(r,a,n,i,t[14],2792965006,17),n=l(n,i=u(i,r,a,n,t[15],1236535329,22),r,a,t[1],4129170786,5),a=l(a,n,i,r,t[6],3225465664,9),r=l(r,a,n,i,t[11],643717713,14),i=l(i,r,a,n,t[0],3921069994,20),n=l(n,i,r,a,t[5],3593408605,5),a=l(a,n,i,r,t[10],38016083,9),r=l(r,a,n,i,t[15],3634488961,14),i=l(i,r,a,n,t[4],3889429448,20),n=l(n,i,r,a,t[9],568446438,5),a=l(a,n,i,r,t[14],3275163606,9),r=l(r,a,n,i,t[3],4107603335,14),i=l(i,r,a,n,t[8],1163531501,20),n=l(n,i,r,a,t[13],2850285829,5),a=l(a,n,i,r,t[2],4243563512,9),r=l(r,a,n,i,t[7],1735328473,14),n=p(n,i=l(i,r,a,n,t[12],2368359562,20),r,a,t[5],4294588738,4),a=p(a,n,i,r,t[8],2272392833,11),r=p(r,a,n,i,t[11],1839030562,16),i=p(i,r,a,n,t[14],4259657740,23),n=p(n,i,r,a,t[1],2763975236,4),a=p(a,n,i,r,t[4],1272893353,11),r=p(r,a,n,i,t[7],4139469664,16),i=p(i,r,a,n,t[10],3200236656,23),n=p(n,i,r,a,t[13],681279174,4),a=p(a,n,i,r,t[0],3936430074,11),r=p(r,a,n,i,t[3],3572445317,16),i=p(i,r,a,n,t[6],76029189,23),n=p(n,i,r,a,t[9],3654602809,4),a=p(a,n,i,r,t[12],3873151461,11),r=p(r,a,n,i,t[15],530742520,16),n=f(n,i=p(i,r,a,n,t[2],3299628645,23),r,a,t[0],4096336452,6),a=f(a,n,i,r,t[7],1126891415,10),r=f(r,a,n,i,t[14],2878612391,15),i=f(i,r,a,n,t[5],4237533241,21),n=f(n,i,r,a,t[12],1700485571,6),a=f(a,n,i,r,t[3],2399980690,10),r=f(r,a,n,i,t[10],4293915773,15),i=f(i,r,a,n,t[1],2240044497,21),n=f(n,i,r,a,t[8],1873313359,6),a=f(a,n,i,r,t[15],4264355552,10),r=f(r,a,n,i,t[6],2734768916,15),i=f(i,r,a,n,t[13],1309151649,21),n=f(n,i,r,a,t[4],4149444226,6),a=f(a,n,i,r,t[11],3174756917,10),r=f(r,a,n,i,t[2],718787259,15),i=f(i,r,a,n,t[9],3951481745,21),this._a=this._a+n|0,this._b=this._b+i|0,this._c=this._c+r|0,this._d=this._d+a|0},s.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var t=a.allocUnsafe(16);return t.writeInt32LE(this._a,0),t.writeInt32LE(this._b,4),t.writeInt32LE(this._c,8),t.writeInt32LE(this._d,12),t},t.exports=s},function(t,e,n){"use strict";var i=n(1).Buffer,r=n(0),a=n(73),o=new Array(16),s=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],c=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],u=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],l=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],p=[0,1518500249,1859775393,2400959708,2840853838],f=[1352829926,1548603684,1836072691,2053994217,0];function d(){a.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520}function h(t,e){return t<<e|t>>>32-e}function m(t,e,n,i,r,a,o,s){return h(t+(e^n^i)+a+o|0,s)+r|0}function g(t,e,n,i,r,a,o,s){return h(t+(e&n|~e&i)+a+o|0,s)+r|0}function y(t,e,n,i,r,a,o,s){return h(t+((e|~n)^i)+a+o|0,s)+r|0}function b(t,e,n,i,r,a,o,s){return h(t+(e&i|n&~i)+a+o|0,s)+r|0}function v(t,e,n,i,r,a,o,s){return h(t+(e^(n|~i))+a+o|0,s)+r|0}r(d,a),d.prototype._update=function(){for(var t=o,e=0;e<16;++e)t[e]=this._block.readInt32LE(4*e);for(var n=0|this._a,i=0|this._b,r=0|this._c,a=0|this._d,d=0|this._e,w=0|this._a,x=0|this._b,D=0|this._c,_=0|this._d,E=0|this._e,k=0;k<80;k+=1){var T,C;k<16?(T=m(n,i,r,a,d,t[s[k]],p[0],u[k]),C=v(w,x,D,_,E,t[c[k]],f[0],l[k])):k<32?(T=g(n,i,r,a,d,t[s[k]],p[1],u[k]),C=b(w,x,D,_,E,t[c[k]],f[1],l[k])):k<48?(T=y(n,i,r,a,d,t[s[k]],p[2],u[k]),C=y(w,x,D,_,E,t[c[k]],f[2],l[k])):k<64?(T=b(n,i,r,a,d,t[s[k]],p[3],u[k]),C=g(w,x,D,_,E,t[c[k]],f[3],l[k])):(T=v(n,i,r,a,d,t[s[k]],p[4],u[k]),C=m(w,x,D,_,E,t[c[k]],f[4],l[k])),n=d,d=a,a=h(r,10),r=i,i=T,w=E,E=_,_=h(D,10),D=x,x=C}var S=this._b+r+_|0;this._b=this._c+a+E|0,this._c=this._d+d+w|0,this._d=this._e+n+x|0,this._e=this._a+i+D|0,this._a=S},d.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var t=i.alloc?i.alloc(20):new i(20);return t.writeInt32LE(this._a,0),t.writeInt32LE(this._b,4),t.writeInt32LE(this._c,8),t.writeInt32LE(this._d,12),t.writeInt32LE(this._e,16),t},t.exports=d},function(t,e,n){(e=t.exports=function(t){t=t.toLowerCase();var n=e[t];if(!n)throw new Error(t+" is not supported (we accept pull requests)");return new n}).sha=n(186),e.sha1=n(187),e.sha224=n(188),e.sha256=n(74),e.sha384=n(189),e.sha512=n(75)},function(t,e,n){var i=n(0),r=n(14),a=n(2).Buffer,o=[1518500249,1859775393,-1894007588,-899497514],s=new Array(80);function c(){this.init(),this._w=s,r.call(this,64,56)}function u(t){return t<<30|t>>>2}function l(t,e,n,i){return 0===t?e&n|~e&i:2===t?e&n|e&i|n&i:e^n^i}i(c,r),c.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},c.prototype._update=function(t){for(var e,n=this._w,i=0|this._a,r=0|this._b,a=0|this._c,s=0|this._d,c=0|this._e,p=0;p<16;++p)n[p]=t.readInt32BE(4*p);for(;p<80;++p)n[p]=n[p-3]^n[p-8]^n[p-14]^n[p-16];for(var f=0;f<80;++f){var d=~~(f/20),h=0|((e=i)<<5|e>>>27)+l(d,r,a,s)+c+n[f]+o[d];c=s,s=a,a=u(r),r=i,i=h}this._a=i+this._a|0,this._b=r+this._b|0,this._c=a+this._c|0,this._d=s+this._d|0,this._e=c+this._e|0},c.prototype._hash=function(){var t=a.allocUnsafe(20);return t.writeInt32BE(0|this._a,0),t.writeInt32BE(0|this._b,4),t.writeInt32BE(0|this._c,8),t.writeInt32BE(0|this._d,12),t.writeInt32BE(0|this._e,16),t},t.exports=c},function(t,e,n){var i=n(0),r=n(14),a=n(2).Buffer,o=[1518500249,1859775393,-1894007588,-899497514],s=new Array(80);function c(){this.init(),this._w=s,r.call(this,64,56)}function u(t){return t<<5|t>>>27}function l(t){return t<<30|t>>>2}function p(t,e,n,i){return 0===t?e&n|~e&i:2===t?e&n|e&i|n&i:e^n^i}i(c,r),c.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},c.prototype._update=function(t){for(var e,n=this._w,i=0|this._a,r=0|this._b,a=0|this._c,s=0|this._d,c=0|this._e,f=0;f<16;++f)n[f]=t.readInt32BE(4*f);for(;f<80;++f)n[f]=(e=n[f-3]^n[f-8]^n[f-14]^n[f-16])<<1|e>>>31;for(var d=0;d<80;++d){var h=~~(d/20),m=u(i)+p(h,r,a,s)+c+n[d]+o[h]|0;c=s,s=a,a=l(r),r=i,i=m}this._a=i+this._a|0,this._b=r+this._b|0,this._c=a+this._c|0,this._d=s+this._d|0,this._e=c+this._e|0},c.prototype._hash=function(){var t=a.allocUnsafe(20);return t.writeInt32BE(0|this._a,0),t.writeInt32BE(0|this._b,4),t.writeInt32BE(0|this._c,8),t.writeInt32BE(0|this._d,12),t.writeInt32BE(0|this._e,16),t},t.exports=c},function(t,e,n){var i=n(0),r=n(74),a=n(14),o=n(2).Buffer,s=new Array(64);function c(){this.init(),this._w=s,a.call(this,64,56)}i(c,r),c.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},c.prototype._hash=function(){var t=o.allocUnsafe(28);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t},t.exports=c},function(t,e,n){var i=n(0),r=n(75),a=n(14),o=n(2).Buffer,s=new Array(160);function c(){this.init(),this._w=s,a.call(this,128,112)}i(c,r),c.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},c.prototype._hash=function(){var t=o.allocUnsafe(48);function e(e,n,i){t.writeInt32BE(e,i),t.writeInt32BE(n,i+4)}return e(this._ah,this._al,0),e(this._bh,this._bl,8),e(this._ch,this._cl,16),e(this._dh,this._dl,24),e(this._eh,this._el,32),e(this._fh,this._fl,40),t},t.exports=c},function(t,e,n){var i=n(2).Buffer,r=n(30).Transform,a=n(28).StringDecoder;function o(t){r.call(this),this.hashMode="string"==typeof t,this.hashMode?this[t]=this._finalOrDigest:this.final=this._finalOrDigest,this._final&&(this.__final=this._final,this._final=null),this._decoder=null,this._encoding=null}n(0)(o,r),o.prototype.update=function(t,e,n){"string"==typeof t&&(t=i.from(t,e));var r=this._update(t);return this.hashMode?this:(n&&(r=this._toString(r,n)),r)},o.prototype.setAutoPadding=function(){},o.prototype.getAuthTag=function(){throw new Error("trying to get auth tag in unsupported state")},o.prototype.setAuthTag=function(){throw new Error("trying to set auth tag in unsupported state")},o.prototype.setAAD=function(){throw new Error("trying to set aad in unsupported state")},o.prototype._transform=function(t,e,n){var i;try{this.hashMode?this._update(t):this.push(this._update(t))}catch(t){i=t}finally{n(i)}},o.prototype._flush=function(t){var e;try{this.push(this.__final())}catch(t){e=t}t(e)},o.prototype._finalOrDigest=function(t){var e=this.__final()||i.alloc(0);return t&&(e=this._toString(e,t,!0)),e},o.prototype._toString=function(t,e,n){if(this._decoder||(this._decoder=new a(e),this._encoding=e),this._encoding!==e)throw new Error("can't switch encodings");var i=this._decoder.write(t);return n&&(i+=this._decoder.end()),i},t.exports=o},function(t,e,n){"use strict";var i=t.exports=function(t){return null!==t&&"object"==typeof t&&"function"==typeof t.pipe};i.writable=function(t){return i(t)&&!1!==t.writable&&"function"==typeof t._write&&"object"==typeof t._writableState},i.readable=function(t){return i(t)&&!1!==t.readable&&"function"==typeof t._read&&"object"==typeof t._readableState},i.duplex=function(t){return i.writable(t)&&i.readable(t)},i.transform=function(t){return i.duplex(t)&&"function"==typeof t._transform&&"object"==typeof t._transformState}},function(t,e,n){"use strict";(function(e){var i=a(n(5)),r=a(n(193));function a(t){return t&&t.__esModule?t:{default:t}}const o=[],s=()=>{};let c=!1;class u{static fromFile(t,e,n){"function"==typeof e&&(n=e,e=void 0),u._getFileSize(t,(r,a)=>{if(r)return n(r);i.default.open(t,"r",(t,i)=>{if(t)return n(t);u.fromFd(i,Math.min(e||500,a),n)})})}static fromFd(t,n,r){"function"==typeof n&&(r=n,n=void 0);let a=n;a||(a=500);const o=new e(a);i.default.read(t,o,0,a,0,(e,n)=>{if(i.default.close(t,s),e)return r(e);u.fromBuffer(o,r)})}static fromBuffer(t,n){let i=null;if(c||(c=u._validateSigantures()),Array.isArray(c))return n(c);t instanceof e||(t=e.from(t)),r.default.every(e=>{let n=u._detect(t,e.rules);return!n||(i=u._getRuleDetection({},e,n),!1)}),null===i&&o.every(e=>{const n=e(t);return!n||(i=n,!1)}),n(null,i)}static addSignature(t){c=!1,r.default.push(t)}static addCustomFunction(t){o.push(t)}static _detect(t,n,i,r){i||(i="and");let a=!0;return n.every(n=>{let o=!0;if("object"==typeof n.search){let o=n.search;o.bytes instanceof e||(o.bytes=e.from(o.bytes,"string"==typeof o.bytes?"hex":null));let s=o.start||0,c=o.end;if(o.hasOwnProperty("search_ref")){const t=r?r.get(o.search_ref):-1;-1===t?s=-1:(s+=t,c+=t)}c=Math.min("number"==typeof c?c:t.length,t.length);let u=-1===s?-1:t.indexOf(o.bytes,void 0,void 0,s,c);if(u<0)return a=this._getRuleDetection(a,!1),this._isReturnFalse(a,i);(r=r||new Map).set(o.id,u)}if("or"===n.type)o=this._detect(t,n.rules,"or",r);else if("and"===n.type)o=this._detect(t,n.rules,"and",r);else if("default"===n.type)o=n;else{n.bytes instanceof e||(n.bytes=e.from(n.bytes,"string"==typeof n.bytes?"hex":null));let i=n.start||0,a=n.end;if(n.hasOwnProperty("search_ref")){const t=r?r.get(n.search_ref):-1;-1===t?i=-1:(i+=t,a+=t)}a=Math.min("number"==typeof a?a:t.length,t.length),i<0?o=!1:"equal"===n.type?o=0===t.compare(n.bytes,void 0,void 0,i,a):"notEqual"===n.type?o=0!==t.compare(n.bytes,void 0,void 0,n.start||0,a):"contains"===n.type?o=t.slice(n.start||0,n.end||t.length).includes(n.bytes):"notContains"===n.type&&(o=!t.slice(n.start||0,n.end||t.length).includes(n.bytes))}return!0===o&&(o=n),a=this._getRuleDetection(a,o),this._isReturnFalse(a,i)}),a}static _isReturnFalse(t,e){return!(!t&&"and"===e)&&(!t||"or"!==e)}static _validateRuleType(t){return-1!==["or","and","contains","notContains","equal","notEqual","default"].indexOf(t.type)}static _validateSigantures(){let t=r.default.map(t=>this._validateSignature(t)).filter(Boolean);return!t.length||t}static _validateSignature(t){if(!("type"in t))return{message:'signature does not contain "type" field',signature:t};if(!("rules"in t))return{message:'signature does not contain "rules" field',signature:t};const e=this._validateRules(t.rules);return"ext"in t||e.hasExt?"mime"in t||e.hasMime?Array.isArray(e)?{message:"signature has invalid rule",signature:t,rules:e}:void 0:{message:'signature does not contain "mime" field',signature:t}:{message:'signature does not contain "ext" field',signature:t}}static _validateRules(t){let e=t.map(t=>this._validateRuleType(t)?"or"!==t.type&&"and"!==t.type||"rules"in t?"or"===t.type||"and"===t.type?this._validateRules(t.rules):{hasExt:"ext"in t,hasMime:"mime"in t}:{message:'rule should contains "rules" field',rule:t}:{message:"rule type not supported",rule:t}),n=e.filter(t=>t.message),i=e.filter(t=>!t.message);return n?{hasExt:i.some(t=>t.hasExt),hasMime:i.some(t=>t.hasMime)}:n}static _getFileSize(t,e){i.default.stat(t,(t,n)=>t?e(t):e(null,n.size))}static _getRuleDetection(){let t=!1;for(let e=0,n=arguments.length;e<n;e++){let n=arguments[e];"boolean"==typeof n?t=!!n&&(t||n):(t="boolean"==typeof t?{}:t,"ext"in n&&(t.ext=n.ext),"mime"in n&&(t.mime=n.mime),"iana"in n&&(t.iana=n.iana))}return t}}t.exports=u}).call(this,n(1).Buffer)},function(t){t.exports=JSON.parse('[{"type":"jpg","ext":"jpg","mime":"image/jpeg","rules":[{"type":"equal","start":0,"end":3,"bytes":"ffd8ff"}]},{"type":"png","ext":"png","mime":"image/png","rules":[{"type":"equal","start":0,"end":4,"bytes":"89504e47"}]},{"type":"gif","ext":"gif","mime":"image/gif","rules":[{"type":"equal","start":0,"end":3,"bytes":"474946"}]},{"type":"webp","ext":"webp","mime":"image/webp","rules":[{"type":"equal","start":8,"end":12,"bytes":"57454250"}]},{"type":"flif","ext":"flif","mime":"image/flif","rules":[{"type":"equal","start":0,"end":4,"bytes":"464c4946"}]},{"type":"cr2","ext":"cr2","mime":"image/x-canon-cr2","rules":[{"type":"and","rules":[{"type":"or","rules":[{"type":"equal","start":0,"end":4,"bytes":"49492a00"},{"type":"equal","start":0,"end":4,"bytes":"4d4d002a"}]},{"type":"equal","start":8,"end":10,"bytes":"4352"}]}]},{"type":"tif","ext":"tif","mime":"image/tiff","rules":[{"type":"and","rules":[{"type":"or","rules":[{"type":"equal","start":0,"end":4,"bytes":"49492a00"},{"type":"equal","start":0,"end":4,"bytes":"4d4d002a"}]},{"type":"notEqual","start":8,"end":10,"bytes":"4352"}]}]},{"type":"bmp","ext":"bmp","mime":"image/bmp","rules":[{"type":"equal","start":0,"end":2,"bytes":"424d"}]},{"type":"jxr","ext":"jxr","mime":"image/vnd.ms-photo","rules":[{"type":"equal","start":0,"end":3,"bytes":"4949bc"}]},{"type":"psd","ext":"psd","mime":"image/vnd.adobe.photoshop","rules":[{"type":"equal","start":0,"end":4,"bytes":"38425053"}]},{"type":"zip","ext":"zip","mime":"application/zip","rules":[{"type":"equal","start":0,"end":2,"bytes":"504b"},{"type":"or","rules":[{"type":"equal","start":2,"end":3,"bytes":"03"},{"type":"equal","start":2,"end":3,"bytes":"05"},{"type":"equal","start":2,"end":3,"bytes":"07"}]},{"type":"or","rules":[{"type":"equal","start":3,"end":4,"bytes":"04"},{"type":"equal","start":3,"end":4,"bytes":"06"},{"type":"equal","start":3,"end":4,"bytes":"08"}]},{"type":"notEqual","start":36,"end":58,"bytes":"70656170706c69636174696f6e2f657075622b7a6970"},{"type":"notEqual","start":30,"end":50,"bytes":"4d4554412d494e462f6d6f7a696c6c612e727361"}]},{"type":"epub","ext":"epub","mime":"application/epub+zip","rules":[{"type":"equal","start":0,"end":4,"bytes":"504b0304"},{"type":"equal","start":36,"end":58,"bytes":"70656170706c69636174696f6e2f657075622b7a6970"}]},{"type":"xpi","ext":"xpi","mime":"application/x-xpinstall","rules":[{"type":"equal","start":0,"end":4,"bytes":"504b0304"},{"type":"equal","start":30,"end":50,"bytes":"4d4554412d494e462f6d6f7a696c6c612e727361"}]},{"type":"tar","ext":"tar","mime":"application/x-tar","rules":[{"type":"equal","start":257,"end":262,"bytes":"7573746172"}]},{"type":"rar","ext":"rar","mime":"application/x-rar-compressed","rules":[{"type":"equal","start":0,"end":6,"bytes":"526172211a07"},{"type":"or","rules":[{"type":"equal","start":6,"end":7,"bytes":"00"},{"type":"equal","start":6,"end":7,"bytes":"01"}]}]},{"type":"gz","ext":"gz","mime":"application/gzip","rules":[{"type":"equal","start":0,"end":3,"bytes":"1f8b08"}]},{"type":"bz2","ext":"bz2","mime":"application/x-bzip2","rules":[{"type":"equal","start":0,"end":3,"bytes":"425a68"}]},{"type":"7z","ext":"7z","mime":"application/x-7z-compressed","rules":[{"type":"equal","start":0,"end":6,"bytes":"377abcaf271c"}]},{"type":"dmg","ext":"dmg","mime":"application/x-apple-diskimage","rules":[{"type":"equal","start":0,"end":2,"bytes":"7801"}]},{"type":"mov","ext":"mov","mime":"video/quicktime","rules":[{"type":"or","rules":[{"type":"equal","start":4,"end":12,"bytes":"6674797071742020","desc":"ftypqt  "},{"type":"equal","start":4,"end":8,"bytes":"6d6f6f76","desc":"moov"},{"type":"equal","start":4,"end":8,"bytes":"66726565","desc":"free"},{"type":"equal","start":4,"end":8,"bytes":"6d646174","desc":"mdat"},{"type":"equal","start":4,"end":8,"bytes":"77696465","desc":"wide"},{"type":"equal","start":4,"end":8,"bytes":"706e6f74","desc":"pnot"},{"type":"equal","start":4,"end":8,"bytes":"736b6970","desc":"skip"}]}],"desc":"must come before mp4"},{"type":"mp4","ext":"mp4","mime":"video/mp4","rules":[{"type":"or","rules":[{"type":"equal","start":0,"end":4,"bytes":"33677035","desc":"3gp5"},{"type":"and","rules":[{"type":"equal","start":0,"end":3,"bytes":"000000"},{"type":"equal","start":4,"end":8,"bytes":"66747970","desc":"ftyp"},{"type":"or","rules":[{"type":"equal","start":8,"end":12,"bytes":"6d703431","desc":"mp41"},{"type":"equal","start":8,"end":12,"bytes":"6d703432","desc":"mp42"},{"type":"equal","start":8,"end":12,"bytes":"69736f6d","desc":"isom"},{"type":"equal","start":8,"end":12,"bytes":"69736f32","desc":"iso2"},{"type":"equal","start":8,"end":12,"bytes":"6d6d7034","desc":"mmp4"},{"type":"and","rules":[{"type":"equal","start":8,"end":11,"bytes":"4d3456","desc":"M4V"},{"type":"equal","start":16,"end":24,"bytes":"4d3456204d344120","desc":"M4V M4A "}],"desc":"m4v+m4a, extension is default mp4"},{"type":"equal","start":8,"end":11,"bytes":"4d3456","desc":"M4V","ext":"m4v","mime":"video/mp4"},{"type":"equal","start":8,"end":11,"bytes":"4d3441","desc":"M4A","ext":"m4a","mime":"audio/mp4"},{"type":"equal","start":8,"end":11,"bytes":"4d3450","desc":"M4P","ext":"mp4","mime":"audio/mp4a-latm"},{"type":"equal","start":8,"end":11,"bytes":"4d3442","desc":"M4B","ext":"mp4","mime":"audio/mp4a-latm"},{"type":"equal","start":8,"end":11,"bytes":"336732","desc":"3g2","ext":"3g2","mime":"video/3gpp2"},{"type":"equal","start":8,"end":10,"bytes":"3367","desc":"3g","ext":"3gp","mime":"video/3gpp"},{"type":"equal","start":8,"end":12,"bytes":"64617368","desc":"dash"},{"type":"default","mime":"video/mpeg4-generic"}]}]}]}]},{"type":"riff","rules":[{"type":"equal","start":0,"end":4,"bytes":"52494646","desc":"RIFF"},{"type":"or","rules":[{"type":"equal","start":8,"end":11,"bytes":"415649","desc":"AVI","ext":"avi","mime":"video/x-msvideo"},{"type":"equal","start":8,"end":12,"bytes":"57415645","desc":"WAVE","ext":"wav","mime":"audio/x-wav"},{"type":"equal","start":8,"end":12,"bytes":"514c434d","desc":"QLCM","ext":"qcp","mime":"audio/qcelp"}]}]},{"type":"mid","ext":"mid","mime":"audio/midi","rules":[{"type":"equal","start":0,"end":4,"bytes":"4d546864"}]},{"type":"mkv","ext":"mkv","mime":"video/x-matroska","rules":[{"type":"equal","start":0,"end":4,"bytes":"1a45dfa3"},{"type":"or","search":{"id":1,"start":4,"end":4096,"bytes":"4282"},"rules":[{"type":"equal","search_ref":1,"start":3,"end":11,"bytes":"6d6174726f736b61","desc":"matroska"},{"type":"equal","search_ref":1,"start":3,"end":7,"bytes":"7765626d","desc":"Webm","ext":"webm","mime":"video/webm"}]}]},{"type":"wasm","ext":"wasm","mime":"application/wasm","rules":[{"type":"equal","start":0,"end":4,"bytes":"0061736d"}]},{"type":"asf","ext":"asf","mime":"application/vnd.ms-asf","rules":[{"type":"equal","start":0,"end":10,"bytes":"3026b2758e66cf11a6d9"},{"type":"or","rules":[{"type":"and","rules":[{"type":"contains","start":10,"end":1024,"bytes":"409e69f84d5bcf11a8fd00805f5c442b"},{"type":"contains","start":10,"end":1024,"bytes":"c0ef19bc4d5bcf11a8fd00805f5c442b"}],"ext":"wmv","mime":"video/x-ms-asf"},{"type":"contains","start":10,"end":1024,"bytes":"409e69f84d5bcf11a8fd00805f5c442b","ext":"wma","mime":"audio/x-ms-wma"},{"type":"contains","start":10,"end":1024,"bytes":"c0ef19bc4d5bcf11a8fd00805f5c442b","ext":"wmv","mime":"video/x-ms-wmv"},{"type":"default","desc":"fallback to generic asf"}]}]},{"type":"mpg","ext":"mpg","mime":"video/mpeg","rules":[{"type":"equal","start":0,"end":3,"bytes":"000001"},{"type":"or","rules":[{"type":"equal","start":3,"end":4,"bytes":"b0"},{"type":"equal","start":3,"end":4,"bytes":"b1"},{"type":"equal","start":3,"end":4,"bytes":"b2"},{"type":"equal","start":3,"end":4,"bytes":"b3"},{"type":"equal","start":3,"end":4,"bytes":"b4"},{"type":"equal","start":3,"end":4,"bytes":"b5"},{"type":"equal","start":3,"end":4,"bytes":"b6"},{"type":"equal","start":3,"end":4,"bytes":"b7"},{"type":"equal","start":3,"end":4,"bytes":"b8"},{"type":"equal","start":3,"end":4,"bytes":"b9"},{"type":"equal","start":3,"end":4,"bytes":"ba"},{"type":"equal","start":3,"end":4,"bytes":"bb"},{"type":"equal","start":3,"end":4,"bytes":"bc"},{"type":"equal","start":3,"end":4,"bytes":"bd"},{"type":"equal","start":3,"end":4,"bytes":"be"},{"type":"equal","start":3,"end":4,"bytes":"bf"}]}]},{"type":"mp3","ext":"mp3","mime":"audio/mpeg","rules":[{"type":"or","rules":[{"type":"equal","start":0,"end":3,"bytes":"494433"},{"type":"equal","start":0,"end":2,"bytes":"fffb"}]}]},{"type":"opus","ext":"opus","mime":"audio/opus","rules":[{"type":"equal","start":28,"end":36,"bytes":"4f70757348656164"}]},{"type":"ogg","ext":"ogg","mime":"audio/ogg","rules":[{"type":"equal","start":0,"end":4,"bytes":"4f676753","desc":"OggS"},{"type":"or","rules":[{"type":"equal","start":28,"end":35,"bytes":"807468656f7261","desc":"theora","ext":"ogv","mime":"video/ogg"},{"type":"equal","start":28,"end":35,"bytes":"01766964656f00","desc":"\\u0001video\\u0000","ext":"ogm","mime":"video/ogg"},{"type":"equal","start":28,"end":33,"bytes":"7f464c4143","desc":"FLAC","ext":"oga","mime":"audio/ogg"},{"type":"equal","start":28,"end":35,"bytes":"53706565782020","desc":"Speex  ","ext":"spx","mime":"audio/ogg"},{"type":"equal","start":28,"end":35,"bytes":"01766f72626973","desc":"\\u0001vorbis","ext":"ogg","mime":"audio/ogg"},{"type":"default","ext":"ogx","mime":"application/ogg"}]},{"type":"notEqual","start":28,"end":36,"bytes":"4f70757348656164"}]},{"type":"flac","ext":"flac","mime":"audio/x-flac","rules":[{"type":"equal","start":0,"end":4,"bytes":"664c6143"}]},{"type":"ape","ext":"ape","mime":"audio/ape","rules":[{"type":"equal","start":0,"end":4,"bytes":"4d414320"}]},{"type":"wv","ext":"wv","mime":"audio/wavpack","rules":[{"type":"equal","start":0,"end":4,"bytes":"7776706b"}]},{"type":"amr","ext":"amr","mime":"audio/amr","rules":[{"type":"equal","start":0,"end":6,"bytes":"2321414d520a"}]},{"type":"pdf","ext":"pdf","mime":"application/pdf","rules":[{"type":"equal","start":0,"end":4,"bytes":"25504446"}]},{"type":"exe","ext":"exe","mime":"application/x-msdownload","iana":"application/vnd.microsoft.portable-executable","rules":[{"type":"or","rules":[{"type":"equal","start":0,"end":2,"bytes":"4d5a"},{"type":"equal","start":0,"end":2,"bytes":"4d7a"},{"type":"equal","start":0,"end":2,"bytes":"6d7a"},{"type":"equal","start":0,"end":2,"bytes":"6d5a"}]}]},{"type":"swf","ext":"swf","mime":"application/x-shockwave-flash","iana":"application/vnd.adobe.flash.movie","rules":[{"type":"or","rules":[{"type":"equal","start":0,"end":1,"bytes":"43"},{"type":"equal","start":0,"end":1,"bytes":"46"}]},{"type":"equal","start":1,"end":3,"bytes":"5753"}]},{"type":"rtf","ext":"rtf","mime":"application/rtf","rules":[{"type":"equal","start":0,"end":5,"bytes":"7b5c727466"}]},{"type":"woff","ext":"woff","mime":"application/font-woff","iana":"font/woff","rules":[{"type":"equal","start":0,"end":4,"bytes":"774f4646"},{"type":"or","rules":[{"type":"equal","start":4,"end":8,"bytes":"00010000"},{"type":"equal","start":4,"end":8,"bytes":"4f54544f"}]}]},{"type":"woff2","ext":"woff2","mime":"application/font-woff","iana":"font/woff2","rules":[{"type":"equal","start":0,"end":4,"bytes":"774f4632"},{"type":"or","rules":[{"type":"equal","start":4,"end":8,"bytes":"00010000"},{"type":"equal","start":4,"end":8,"bytes":"4f54544f"}]}]},{"type":"eot","ext":"eot","mime":"application/vnd.ms-fontobject","rules":[{"type":"equal","start":34,"end":36,"bytes":"4c50"},{"type":"or","rules":[{"type":"equal","start":8,"end":11,"bytes":"000001"},{"type":"equal","start":8,"end":11,"bytes":"010002"},{"type":"equal","start":8,"end":11,"bytes":"020002"}]}]},{"type":"ttf","ext":"ttf","mime":"application/font-sfnt","iana":"font/ttf","rules":[{"type":"equal","start":0,"end":5,"bytes":"0001000000"}]},{"type":"otf","ext":"otf","mime":"application/font-sfnt","iana":"font/otf","rules":[{"type":"equal","start":0,"end":5,"bytes":"4f54544f00"}]},{"type":"ico","ext":"ico","mime":"image/x-icon","iana":"image/vnd.microsoft.icon","rules":[{"type":"equal","start":0,"end":4,"bytes":"00000100"}]},{"type":"cur","ext":"cur","mime":"image/x-icon","iana":"image/vnd.microsoft.icon","rules":[{"type":"equal","start":0,"end":4,"bytes":"00000200"}]},{"type":"flv","ext":"flv","mime":"video/x-flv","rules":[{"type":"equal","start":0,"end":4,"bytes":"464c5601"}]},{"type":"ps","ext":"ps","mime":"application/postscript","rules":[{"type":"equal","start":0,"end":2,"bytes":"2521"}]},{"type":"xz","ext":"xz","mime":"application/x-xz","rules":[{"type":"equal","start":0,"end":6,"bytes":"fd377a585a00"}]},{"type":"sqlite","ext":"sqlite","mime":"application/x-sqlite3","iana":"application/vnd.sqlite3","rules":[{"type":"equal","start":0,"end":4,"bytes":"53514c69"}]},{"type":"nes","ext":"nes","mime":"application/x-nintendo-nes-rom","rules":[{"type":"equal","start":0,"end":4,"bytes":"4e45531a"}]},{"type":"dex","ext":"dex","mime":"application/x-dex","rules":[{"type":"equal","start":0,"end":4,"bytes":"6465780a"}]},{"type":"crx","ext":"crx","mime":"application/x-google-chrome-extension","rules":[{"type":"equal","start":0,"end":4,"bytes":"43723234"}]},{"type":"elf","ext":"elf","mime":"application/x-executable","rules":[{"type":"equal","start":0,"end":4,"bytes":"7f454c46"}]},{"type":"cab","ext":"cab","mime":"application/vnd.ms-cab-compressed","rules":[{"type":"or","rules":[{"type":"equal","start":0,"end":4,"bytes":"4d534346"},{"type":"equal","start":0,"end":4,"bytes":"49536328"}]}]},{"type":"deb","ext":"deb","mime":"application/x-deb","rules":[{"type":"equal","start":0,"end":21,"bytes":"213c617263683e0a64656269616e2d62696e617279"}]},{"type":"ar","ext":"ar","mime":"application/x-unix-archive","rules":[{"type":"equal","start":0,"end":7,"bytes":"213c617263683e"},{"type":"notEqual","start":0,"end":21,"bytes":"213c617263683e0a64656269616e2d62696e617279"}]},{"type":"rpm","ext":"rpm","mime":"application/x-rpm","rules":[{"type":"equal","start":0,"end":4,"bytes":"edabeedb"}]},{"type":"Z","ext":"Z","mime":"application/x-compress","rules":[{"type":"or","rules":[{"type":"equal","start":0,"end":2,"bytes":"1fa0"},{"type":"equal","start":0,"end":2,"bytes":"1f9d"}]}]},{"type":"lz","ext":"lz","mime":"application/x-lzip","rules":[{"type":"equal","start":0,"end":4,"bytes":"4c5a4950"}]},{"type":"msi","ext":"msi","mime":"application/x-msi","rules":[{"type":"equal","start":0,"end":8,"bytes":"d0cf11e0a1b11ae1"}]},{"type":"mxf","ext":"mxf","mime":"application/mxf","rules":[{"type":"equal","start":0,"end":14,"bytes":"060e2b34020501010d0102010102"}]},{"type":"mts","ext":"mts","mime":"video/mp2t","rules":[{"type":"and","rules":[{"type":"equal","start":4,"end":5,"bytes":"47"},{"type":"or","rules":[{"type":"equal","start":192,"end":193,"bytes":"47"},{"type":"equal","start":196,"end":197,"bytes":"47"}]}]}]},{"type":"blend","ext":"blend","mime":"application/x-blender","rules":[{"type":"equal","start":0,"end":7,"bytes":"424c454e444552","desc":"BLENDER"}]},{"type":"bpg","ext":"bpg","mime":"image/bpg","rules":[{"type":"equal","start":0,"end":4,"bytes":"425047fb"}]},{"type":"jpeg-2000","rules":[{"type":"and","rules":[{"type":"equal","start":0,"end":12,"bytes":"0000000c6a5020200d0a870a"},{"type":"or","rules":[{"type":"equal","start":20,"end":24,"bytes":"6a703220","ext":"jp2","mime":"image/jp2"},{"type":"equal","start":20,"end":24,"bytes":"6a707820","ext":"jpx","mime":"image/jpx"},{"type":"equal","start":20,"end":24,"bytes":"6a706d20","ext":"jpm","mime":"image/jpm"},{"type":"equal","start":20,"end":24,"bytes":"6d6a7032","ext":"mj2","mime":"image/mj2"}]}]}]},{"type":"aif","ext":"aif","mime":"audio/aiff","rules":[{"type":"equal","start":0,"end":4,"bytes":"464f524d"}]},{"type":"xml","ext":"xml","mime":"application/xml","rules":[{"type":"equal","start":0,"end":6,"bytes":"3c3f786d6c20","desc":"<?xml "}]},{"type":"svg","ext":"svg","mime":"image/svg+xml","rules":[{"type":"contains","bytes":"3c737667"}]},{"type":"mobi","ext":"mobi","mime":"application/x-mobipocket-ebook","rules":[{"type":"equal","start":60,"end":68,"bytes":"424f4f4b4d4f4249"}]},{"type":"heic","rules":[{"type":"and","rules":[{"type":"equal","start":4,"end":8,"bytes":"66747970"},{"type":"or","rules":[{"type":"equal","start":8,"end":12,"bytes":"6d696631","ext":"heic","mime":"image/heif"},{"type":"equal","start":8,"end":12,"bytes":"6d736631","ext":"heic","mime":"image/heif-sequence"},{"type":"or","rules":[{"type":"equal","start":8,"end":12,"bytes":"68656963"},{"type":"equal","start":8,"end":12,"bytes":"68656978"}],"ext":"heic","mime":"image/heic"},{"type":"or","rules":[{"type":"equal","start":8,"end":12,"bytes":"68657663"},{"type":"equal","start":8,"end":12,"bytes":"68657678"}],"ext":"heic","mime":"image/heic-sequence"}]}]}]},{"type":"ktx","ext":"ktx","mime":"image/ktx","rules":[{"type":"equal","start":0,"end":12,"bytes":"ab4b5458203131bb0d0a1a0a"}]},{"type":"dcm","ext":"dcm","mime":"application/dicom","rules":[{"type":"equal","start":128,"end":132,"bytes":"4449434d"}]},{"type":"mpc","ext":"mpc","mime":"audio/x-musepack","rules":[{"type":"or","rules":[{"type":"equal","start":0,"end":3,"bytes":"4d502b"},{"type":"equal","start":0,"end":4,"bytes":"4d50434b"}]}]},{"type":"ics","ext":"ics","mime":"text/calendar","rules":[{"type":"equal","start":0,"end":6,"bytes":"424547494e3a"}]},{"type":"glb","ext":"glb","mime":"model/gltf-binary","rules":[{"type":"equal","start":0,"end":8,"bytes":"676c544602000000"}]},{"type":"pcap","ext":"pcap","mime":"application/vnd.tcpdump.pcap","rules":[{"type":"or","rules":[{"type":"equal","start":0,"end":4,"bytes":"d4c3b2a1"},{"type":"equal","start":0,"end":4,"bytes":"a1b2c3d4"}]}]},{"type":"html","ext":"html","mime":"text/html","rules":[{"type":"or","rules":[{"type":"contains","bytes":"3c68746d6c"},{"type":"contains","bytes":"3c00680074006d006c00"}]}]}]')},function(t,e,n){(function(e){const i=n(195),r=n(5),a=n(214),o=n(234),s=n(72),c=Object.assign({},s),u=n(235),l=n(237);c.regexSongLinks=l({strict:!1}),c.regexSongFeats=/[([]*((ft\.?|feat\.?|featuring)[\s]+((?!(\s+[-([)\]]+))[^)\]])+)\s*[)\]]*([\s]+[-([]+|$)/i,c.heritableSongTags=["TALB","TCOM","TCON","TCOP","TDAT","TEXT","TIT1","TIT3","TLAN","TOAL","TOLY","TOPE","TORY","TPE2","TPE3","TPE4","APIC"],c.getFileInfo=async function(){const t=await s.getFileInfo.apply(this,arguments);return"mpga"==t.ext&&(t.ext="mp3"),t},c.isValidSongAudioLink=function(t){return!("string"!=typeof t||!t.match(/\.(mp3|mpeg|mpga)$/i))&&this.isValidFileLink(t,{action:"audio"})},c.isValidSongCoverLink=function(t){return!("string"!=typeof t||!t.match(/\.(jpe?g|png)$/i))&&this.isValidFileLink(t,{action:"cover"})},c.beautifySongTitle=function(t){if("string"!=typeof t)return"";if(!(t=u(t).replace(/[–—]+/g,"-").replace(this.regexSongLinks,"").replace(/[\sᅠ]+/g," ").replace(/([([])\s+/g,"$1").replace(/\s+([)\]])/g,"$1").toLowerCase()).match(" - "))return"";const e=t.split(" - ");let n=e[0].split(/,[\s]*/);const i=n[0];if(n.shift(),!i)return"";const r=t.match(this.regexSongFeats);let a=(r?r[1]:"").replace(/,([^\s])/,", $1").trim();return t=(t=`${i} - ${e[1]}`).replace(this.regexSongFeats,"$5"),n=n.map(t=>t.trim()),n.length&&(a=a?[a].concat(n).join(", "):`ft. ${n.join(", ")}`),a&&(t+=` (${a})`),t=t.replace(/(feat|ft|featuring)(\.?\s+)/i,"feat$2").replace(/(feat)(\s+)/,"$1.$2").replace(/\s+/g," ").split(" ").map(t=>t?t[0].toUpperCase()+t.slice(1):t).join(" ").trim()},c.isSongTitle=function(t,e={}){return(e.beautify||void 0===e.beautify)&&(t=this.beautifySongTitle(t)),!("string"!=typeof t||t.length>500)&&/.\s+-\s+./.test(t)},c.getSongName=function(t,e={}){return(e.beautify||void 0===e.beautify)&&(t=this.beautifySongTitle(t)),this.isSongTitle(t,{beautify:!1})?t.replace(this.regexSongFeats,"$5").split(" - ")[1].split(/[[(]/)[0].trim():""},c.getSongSimilarity=function(t,e){if(t=this.beautifySongTitle(t).toLowerCase(),e=this.beautifySongTitle(e).toLowerCase(),!t||!e)return 0;const n=o.compareTwoStrings(t,e);return t=this.getSongName(t,{beautify:!1}),e=this.getSongName(e,{beautify:!1}),(n+o.compareTwoStrings(t,e))/2},c.createSongTags=function(t={}){const e={};Object.defineProperty(e,"fullTitle",{enumerable:!1,get:function(){return`${this.TPE1||""} - ${this.TIT2||""}`},set:function(t){const e=c.beautifySongTitle(t);if(!e)return delete this.TPE1,void delete this.TIT2;const n=e.split(" - ");this.TPE1=n[0],this.TIT2=n[1]}});for(let n in t)e[n]=t[n];return e},c.mergeSongTags=function(t,e){t=this.createSongTags(t),e=this.createSongTags(e);const n=t.fullTitle,i=e.fullTitle,r=Object.assign({},t,{fullTitle:n}),o=Object.assign({},e,{fullTitle:i}),s=Object.assign({},a(r,this.heritableSongTags),o);return this.createSongTags(s)},c.prepareSongTagsToGet=async function(t){return!(t=this.createSongTags(t)).APIC||"object"!=typeof t.APIC||t.APIC instanceof e||(t.APIC=t.APIC.imageBuffer),t},c.prepareSongTagsToSet=async function(t){return(t=this.createSongTags(t)).image&&(t.APIC=t.image,delete t.image),this.isFileReadStream(t.APIC)&&(t.APIC.destroy(),t.APIC=t.APIC.path),"function"==typeof Blob&&t.APIC instanceof Blob&&(t.APIC=await this.blobToBuffer(t.APIC)),t},c.prepareSongBlobFile=async function(t,e){const n={type:e.type};return e instanceof File?new File([t],e.name,n):new Blob([t],n)},c.getSongTags=async function(t){if("function"==typeof Blob&&t instanceof Blob&&(t=await this.blobToBuffer(t)),t instanceof e){const e=i.read(t);return await this.prepareSongTagsToGet(e?e.raw:{})}return new Promise((e,n)=>{i.read(t.path||t,async(t,i)=>{if(t)return n(t);e(await this.prepareSongTagsToGet(i.raw||{}))})})},c.setSongTags=async function(t,n){if(n=await this.prepareSongTagsToSet(n),"function"==typeof Blob&&t instanceof Blob){const e=i.write(n,await this.blobToBuffer(t));return this.prepareSongBlobFile(e,t)}return t instanceof e?i.write(n,t):new Promise((e,a)=>{i.write(n,t.path||t,n=>{if(n)return a(n);t.path&&(t.destroy(),t=r.createReadStream(t.path)),e(t)})})},c.addSongTags=async function(t,n){if(n=await this.prepareSongTagsToSet(n),"function"==typeof Blob&&t instanceof Blob){const e=i.update(n,await this.blobToBuffer(t));return this.prepareSongBlobFile(e,t)}return t instanceof e?i.update(n,t):new Promise((e,a)=>{i.update(n,t.path||t,n=>{if(n)return a(n);t.path&&(t.destroy(),t=r.createReadStream(t.path)),e(t)})})},c.removeSongTags=async function(t){if("function"==typeof Blob&&t instanceof Blob){const e=i.removeTagsFromBuffer(await this.blobToBuffer(t));return this.prepareSongBlobFile(e,t)}return t instanceof e?i.removeTagsFromBuffer(t):new Promise((e,n)=>{i.removeTags(t.path||t,i=>{if(i)return n(i);t.path&&(t.destroy(),t=r.createReadStream(t.path)),e(t)})})},t.exports=c}).call(this,n(1).Buffer)},function(t,e,n){(function(e){const i=n(5),r=n(196);t.exports=new l;const a={album:"TALB",bpm:"TBPM",composer:"TCOM",genre:"TCON",copyright:"TCOP",date:"TDAT",playlistDelay:"TDLY",encodedBy:"TENC",textWriter:"TEXT",fileType:"TFLT",time:"TIME",contentGroup:"TIT1",title:"TIT2",subtitle:"TIT3",initialKey:"TKEY",language:"TLAN",length:"TLEN",mediaType:"TMED",originalTitle:"TOAL",originalFilename:"TOFN",originalTextwriter:"TOLY",originalArtist:"TOPE",originalYear:"TORY",fileOwner:"TOWN",artist:"TPE1",performerInfo:"TPE2",conductor:"TPE3",remixArtist:"TPE4",partOfSet:"TPOS",publisher:"TPUB",trackNumber:"TRCK",recordingDates:"TRDA",internetRadioName:"TRSN",internetRadioOwner:"TRSO",size:"TSIZ",ISRC:"TSRC",encodingTechnology:"TSSE",year:"TYER"},o={album:"TAL",bpm:"TBP",composer:"TCM",genre:"TCO",copyright:"TCR",date:"TDA",playlistDelay:"TDY",encodedBy:"TEN",textWriter:"TEXT",fileType:"TFT",time:"TIM",contentGroup:"TT1",title:"TT2",subtitle:"TT3",initialKey:"TKE",language:"TLA",length:"TLE",mediaType:"TMT",originalTitle:"TOT",originalFilename:"TOF",originalTextwriter:"TOL",originalArtist:"TOA",originalYear:"TOR",artist:"TP1",performerInfo:"TP2",conductor:"TP3",remixArtist:"TP4",partOfSet:"TPA",publisher:"TPB",trackNumber:"TRK",recordingDates:"TRD",size:"TSI",ISRC:"TRC",encodingTechnology:"TSS",year:"TYE"},s={comment:{create:"createCommentFrame",read:"readCommentFrame",name:"COMM"},image:{create:"createPictureFrame",read:"readPictureFrame",name:"APIC"},unsynchronisedLyrics:{create:"createUnsynchronisedLyricsFrame",read:"readUnsynchronisedLyricsFrame",name:"USLT"},userDefinedText:{create:"createUserDefinedText",read:"readUserDefinedText",name:"TXXX",multiple:!0,updateCompareKey:"description"},popularimeter:{create:"createPopularimeterFrame",read:"readPopularimeterFrame",name:"POPM"}},c={image:{create:"createPictureFrame",read:"readPictureFrame",name:"PIC"}},u=["other","file icon","other file icon","front cover","back cover","leaflet page","media","lead artist","artist","conductor","band","composer","lyricist","recording location","during recording","during performance","video screen capture","a bright coloured fish","illustration","band logotype","publisher logotype"];function l(){}l.prototype.write=function(t,n,r){let a=this.create(t);if(n instanceof e){n=this.removeTagsFromBuffer(n)||n;let t=e.concat([a,n]);return r&&"function"==typeof r?void r(null,t):t}if(r&&"function"==typeof r)try{i.readFile(n,function(t,o){if(t)return void r(t);o=this.removeTagsFromBuffer(o)||o;let s=e.concat([a,o]);i.writeFile(n,s,"binary",t=>{r(t)})}.bind(this))}catch(t){r(t)}else try{let t=i.readFileSync(n);t=this.removeTagsFromBuffer(t)||t;let r=e.concat([a,t]);return i.writeFileSync(n,r,"binary"),!0}catch(t){return t}},l.prototype.create=function(t,n){let i=[];i.push(this.createTagHeader()),Object.keys(t).forEach(function(n,r){let o;if(a[n]||-1!=Object.keys(a).map(t=>a[t]).indexOf(n)){let e=a[n]||n;o=this.createTextFrame(e,t[n])}else if(s[n]){o=this[s[n].create](t[n])}else if(-1!=Object.keys(s).map(t=>s[t]).map(t=>t.name).indexOf(n)){o=this[s[Object.keys(s)[Object.keys(s).map(t=>s[t]).map(t=>t.name).indexOf(n)]].create](t[n])}o instanceof e&&i.push(o)}.bind(this));let r=0;i.forEach(t=>{r+=t.length}),r-=10;let o=this.encodeSize(r);if(i[0].writeUInt8(o[0],6),i[0].writeUInt8(o[1],7),i[0].writeUInt8(o[2],8),i[0].writeUInt8(o[3],9),!n||"function"!=typeof n)return e.concat(i);n(e.concat(i))},l.prototype.read=function(t,e,n){if(e&&"function"!=typeof e||(n=n||e,e={}),!n||"function"!=typeof n){return("string"==typeof t||t instanceof String)&&(t=i.readFileSync(t)),this.getTagsFromBuffer(t,e)}("string"==typeof t||t instanceof String)&&i.readFile(t,function(t,i){if(t)n(t,null);else{let t=this.getTagsFromBuffer(i,e);n(null,t)}}.bind(this))},l.prototype.update=function(t,e,n){let i={},r={};if(Object.keys(s).map((t,e)=>{r[s[t].name]=t}),Object.keys(t).map((function(e){a[e]?i[a[e]]=t[e]:s[e]?i[s[e].name]=t[e]:-1!==Object.keys(a).map(t=>a[t]).indexOf(e)?i[e]=t[e]:-1!==Object.keys(s).map(t=>s[t]).map(t=>t.name).indexOf(e)&&(i[e]=t[e])})),!n||"function"!=typeof n){let t=this.read(e);return t=t.raw||{},Object.keys(i).map((function(e){s[r[e]]&&s[r[e]].multiple&&t[e]&&i[e]?(cCompare={},t[e].forEach((t,n)=>{cCompare[t[s[r[e]].updateCompareKey]]=n}),i[e]instanceof Array||(i[e]=[i[e]]),i[e].forEach((n,i)=>{let a=cCompare[n[s[r[e]].updateCompareKey]];void 0!==a?t[e][a]=n:t[e].push(n)})):t[e]=i[e]})),this.write(t,e)}this.read(e,function(t,a){t?n(t):(a=a.raw||{},Object.keys(i).map((function(t){s[r[t]]&&s[r[t]].multiple&&a[t]&&i[t]?(cCompare={},a[t].forEach((e,n)=>{cCompare[e[s[r[t]].updateCompareKey]]=n}),i[t]instanceof Array||(i[t]=[i[t]]),i[t].forEach((e,n)=>{let i=cCompare[e[s[r[t]].updateCompareKey]];void 0!==i?a[t][i]=e:a[t].push(e)})):a[t]=i[t]})),this.write(a,e,n))}.bind(this))},l.prototype.getTagsFromBuffer=function(t,n){let i=this.getFramePosition(t);if(-1===i)return!1;let u=this.getTagSize(e.from(t.toString("hex",i,i+10),"hex"))+10,l=e.alloc(u+1),p=e.alloc(u-10+1);t.copy(l,0,i),t.copy(p,0,i+10);let f=l[3],d=4,h=10;2==f&&(d=3,h=6);let m=[],g={raw:{}},y=0;for(;y<u-10&&0!==p[y];){let t=e.alloc(h);p.copy(t,0,y);let n=!1;4==f&&(n=!0);let i=this.getFrameSize(t,n,f);if(i>u-y)break;let r=e.alloc(i);p.copy(r,0,y+h),y+=i+h,m.push({name:t.toString("utf8",0,d),body:r})}return m.forEach(function(t,e){if("T"===t.name[0]&&"TXXX"!==t.name){let e;e=1===t.body[0]?r.decode(t.body.slice(1),"utf16").replace(/\0/g,""):r.decode(t.body.slice(1),"ISO-8859-1").replace(/\0/g,""),g.raw[t.name]=e;let n=a;2==f&&(n=o),Object.keys(n).map((function(i){n[i]===t.name&&(g[i]=e)}))}else{let e=s;2==f&&(e=c),Object.keys(e).map(function(n){if(e[n].name===t.name){let i=this[e[n].read](t.body,f);e[n].multiple?(g[n]||(g[n]=[]),g.raw[t.name]||(g.raw[t.name]=[]),g.raw[t.name].push(i),g[n].push(i)):(g.raw[t.name]=i,g[n]=i)}}.bind(this))}}.bind(this)),g},l.prototype.getFramePosition=function(t){let e=t.indexOf("ID3");return-1==e||e>20?-1:e},l.prototype.getTagSize=function(t){return this.decodeSize(e.from([t[6],t[7],t[8],t[9]]))},l.prototype.getFrameSize=function(t,n,i){let r;return r=i>2?[t[4],t[5],t[6],t[7]]:[t[3],t[4],t[5]],n?this.decodeSize(e.from(r)):e.from(r).readUIntBE(0,r.length)},l.prototype.removeTagsFromBuffer=function(t){let n=this.getFramePosition(t);if(-1==n)return t;let i=e.from([t[n+6],t[n+7],t[n+8],t[n+9]]);if(128&(i[0]|i[1]|i[2]|i[3]))return!1;let r=this.decodeSize(i);return t.slice(n+r+10)},l.prototype.removeTags=function(t,e){if(!e||"function"!=typeof e){let e;try{e=i.readFileSync(t)}catch(t){return t}let n=this.removeTagsFromBuffer(e);if(!n)return!1;try{i.writeFileSync(t,n,"binary")}catch(t){return t}return!0}i.readFile(t,function(n,r){n&&e(n);let a=this.removeTagsFromBuffer(r);a?i.writeFile(t,a,"binary",(function(t){e(t||!1)})):e(n)}.bind(this))},l.prototype.encodeSize=function(t){return[t>>21&127,t>>14&127,t>>7&127,127&t]},l.prototype.decodeSize=function(t){return(t[0]<<21)+(t[1]<<14)+(t[2]<<7)+t[3]},l.prototype.createTagHeader=function(){let t=e.alloc(10);return t.fill(0),t.write("ID3",0),t.writeUInt16BE(768,3),t.writeUInt16BE(0,5),t},l.prototype.createTextFrame=function(t,n){if(!t||!n)return null;let i=r.encode(n,"utf16"),a=e.alloc(10);a.fill(0),a.write(t,0),a.writeUInt32BE(i.length+1,4);let o=e.alloc(1);o.fill(1);var s=e.from(i,"binary");return e.concat([a,o,s])},l.prototype.createPictureFrame=function(t){try{t&&t.imageBuffer&&t.imageBuffer instanceof e==!0&&(t=t.imageBuffer);let n=t instanceof e==1?e.from(t):e.from(i.readFileSync(t,"binary"),"binary"),r=e.alloc(10);r.fill(0),r.write("APIC",0);let a="image/png";255==n[0]&&216==n[1]&&255==n[2]&&(a="image/jpeg");let o=e.alloc(a.length+4);return o.fill(0),o[a.length+2]=3,o.write(a,1),r.writeUInt32BE(n.length+o.length,4),e.concat([r,o,n])}catch(t){return t}},l.prototype.readPictureFrame=function(t,e){let n,i,a={};if(n=2==e?t.toString("ascii").substring(1,4):t.toString("ascii").substring(1,t.indexOf(0,1)),a.mime="image/jpeg"==n?"jpeg":"image/png"==n?"png":n,a.type={},2==e&&u.length<t[4]?a.type={id:t[4],name:u[t[4]]}:a.type={id:t[t.indexOf(0,1)+1],name:u[t[t.indexOf(0,1)+1]]},0==t[0])2==e?(a.description=r.decode(t.slice(5,t.indexOf(0,5)),"ISO-8859-1")||void 0,i=t.indexOf(0,5)):(a.description=r.decode(t.slice(t.indexOf(0,1)+2,t.indexOf(0,t.indexOf(0,1)+2)),"ISO-8859-1")||void 0,i=t.indexOf(0,t.indexOf(0,1)+2));else if(1==t[0])if(2==e){let e=5,n=t.slice(e),o=n.indexOf("0000",0,"hex");i=e+o+2,-1!=o&&(a.description=r.decode(n.slice(0,o+2),"utf16")||void 0)}else{let e=t.indexOf(0,1)+2,n=t.slice(e),o=n.indexOf("0000",0,"hex");i=e+o+2,-1!=o&&(a.description=r.decode(n.slice(0,o+2),"utf16")||void 0)}return a.imageBuffer=i?t.slice(i+1):t.slice(5),a},l.prototype.getEncodingByte=function(t){return t&&0!==t&&"ISO-8859-1"!==t?1:0},l.prototype.getEncodingName=function(t){return 0===this.getEncodingByte(t)?"ISO-8859-1":"utf16"},l.prototype.getTerminationCount=function(t){return 0===t?1:2},l.prototype.createTextEncoding=function(t){let n=e.alloc(1);return n[0]=this.getEncodingByte(t),n},l.prototype.createLanguage=function(t){return t?t.length>3&&(t=t.substring(0,3)):t="eng",e.from(t)},l.prototype.createContentDescriptor=function(t,n,i){return t?(t=r.encode(t,this.getEncodingName(n)),i?e.concat([t,e.alloc(this.getTerminationCount(n)).fill(0)]):t):t=i?r.encode("\0",this.getEncodingName(n)):e.alloc(0)},l.prototype.createText=function(t,n,i){return t||(t=""),t=r.encode(t,this.getEncodingName(n)),i?e.concat([t,e.from(this.getTerminationCount(n)).fill(0)]):t},l.prototype.createCommentFrame=function(t){if(!(t=t||{}).text)return null;let n=e.alloc(10);n.fill(0),n.write("COMM",0);let i=this.createTextEncoding(1),r=this.createLanguage(t.language),a=this.createContentDescriptor(t.shortText,1,!0),o=this.createText(t.text,1,!1);return n.writeUInt32BE(i.length+r.length+a.length+o.length,4),e.concat([n,i,r,a,o])},l.prototype.readCommentFrame=function(t){let e={};if(!t)return e;if(0==t[0])e={language:r.decode(t,"ISO-8859-1").substring(1,4).replace(/\0/g,""),shortText:r.decode(t,"ISO-8859-1").substring(4,t.indexOf(0,1)).replace(/\0/g,""),text:r.decode(t,"ISO-8859-1").substring(t.indexOf(0,1)+1).replace(/\0/g,"")};else if(1==t[0]){let n=0;for(;void 0!==t[n]&&0!==t[n]||0!==t[n+1]||0===t[n+2];)n++;if(void 0===t[n])return e;let i=t.slice(4,n),a=t.slice(n+2);e={language:t.toString().substring(1,4).replace(/\0/g,""),shortText:r.decode(i,"utf16").replace(/\0/g,""),text:r.decode(a,"utf16").replace(/\0/g,"")}}return e},l.prototype.createUnsynchronisedLyricsFrame=function(t){if(("string"==typeof(t=t||{})||t instanceof String)&&(t={text:t}),!t.text)return null;let n=e.alloc(10);n.fill(0),n.write("USLT",0);let i=this.createTextEncoding(1),r=this.createLanguage(t.language),a=this.createContentDescriptor(t.shortText,1,!0),o=this.createText(t.text,1,!1);return n.writeUInt32BE(i.length+r.length+a.length+o.length,4),e.concat([n,i,r,a,o])},l.prototype.readUnsynchronisedLyricsFrame=function(t){let e={};if(!t)return e;if(0==t[0])e={language:r.decode(t,"ISO-8859-1").substring(1,4).replace(/\0/g,""),shortText:r.decode(t,"ISO-8859-1").substring(4,t.indexOf(0,1)).replace(/\0/g,""),text:r.decode(t,"ISO-8859-1").substring(t.indexOf(0,1)+1).replace(/\0/g,"")};else if(1==t[0]){let n=0;for(;void 0!==t[n]&&0!==t[n]||0!==t[n+1]||0===t[n+2];)n++;if(void 0===t[n])return e;let i=t.slice(4,n),a=t.slice(n+2);e={language:t.toString().substring(1,4).replace(/\0/g,""),shortText:r.decode(i,"utf16").replace(/\0/g,""),text:r.decode(a,"utf16").replace(/\0/g,"")}}return e},l.prototype.createUserDefinedText=function(t,n){if(udt=t||{},udt instanceof Array&&udt.length>0&&(n||(t=t.slice(0)),udt=t.pop()),udt&&udt.description){let t=e.alloc(10);t.fill(0),t.write("TXXX",0);let i=this.createTextEncoding(1),r=this.createContentDescriptor(udt.description,1,!0),a=this.createText(udt.value,1,!1);t.writeUInt32BE(i.length+r.length+a.length,4),n=n?e.concat([n,t,i,r,a]):e.concat([t,i,r,a])}return t instanceof Array&&t.length>0?this.createUserDefinedText(t,n):n},l.prototype.readUserDefinedText=function(t){let e={};if(!t)return e;if(0==t[0])e={description:r.decode(t,"ISO-8859-1").substring(1,t.indexOf(0,1)).replace(/\0/g,""),value:r.decode(t,"ISO-8859-1").substring(t.indexOf(0,1)+1).replace(/\0/g,"")};else if(1==t[0]){let n=0;for(;void 0!==t[n]&&0!==t[n]||0!==t[n+1]||0===t[n+2];)n++;if(void 0===t[n])return e;let i=t.slice(1,n),a=t.slice(n+2);e={description:r.decode(i,"utf16").replace(/\0/g,""),value:r.decode(a,"utf16").replace(/\0/g,"")}}return e},l.prototype.createPopularimeterFrame=function(t){let n=(t=t||{}).email,i=Math.trunc(t.rating),r=Math.trunc(t.counter);if(!n)return null;(isNaN(i)||i<0||i>255)&&(i=0),(isNaN(r)||r<0)&&(r=0);let a=e.alloc(10,0);a.write("POPM",0);let o=this.createText(n,1,!1);o=e.from(n+"\0","utf8");let s=e.alloc(1,i),c=e.alloc(4,0);return c.writeUInt32BE(r,0),a.writeUInt32BE(o.length+s.length+c.length,4),e.concat([a,o,s,c])},l.prototype.readPopularimeterFrame=function(t){let e={};if(!t)return e;let n=t.indexOf(0,1);if(n>-1){e.email=r.decode(t.slice(0,n),"ISO-8859-1");let i=n+1;if(i<t.length){e.rating=t[i];let n=i+1;if(n<t.length){let i=t.slice(n,t.length);e.counter=i.readUInt32BE()}}}return e}}).call(this,n(1).Buffer)},function(t,e,n){"use strict";(function(e){var i=n(15).Buffer,r=n(197),a=t.exports;a.encodings=null,a.defaultCharUnicode="�",a.defaultCharSingleByte="?",a.encode=function(t,e,n){t=""+(t||"");var r=a.getEncoder(e,n),o=r.write(t),s=r.end();return s&&s.length>0?i.concat([o,s]):o},a.decode=function(t,e,n){"string"==typeof t&&(a.skipDecodeWarning||(console.error("Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding"),a.skipDecodeWarning=!0),t=i.from(""+(t||""),"binary"));var r=a.getDecoder(e,n),o=r.write(t),s=r.end();return s?o+s:o},a.encodingExists=function(t){try{return a.getCodec(t),!0}catch(t){return!1}},a.toEncoding=a.encode,a.fromEncoding=a.decode,a._codecDataCache={},a.getCodec=function(t){a.encodings||(a.encodings=n(198));for(var e=a._canonicalizeEncoding(t),i={};;){var r=a._codecDataCache[e];if(r)return r;var o=a.encodings[e];switch(typeof o){case"string":e=o;break;case"object":for(var s in o)i[s]=o[s];i.encodingName||(i.encodingName=e),e=o.type;break;case"function":return i.encodingName||(i.encodingName=e),r=new o(i,a),a._codecDataCache[i.encodingName]=r,r;default:throw new Error("Encoding not recognized: '"+t+"' (searched as: '"+e+"')")}}},a._canonicalizeEncoding=function(t){return(""+t).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g,"")},a.getEncoder=function(t,e){var n=a.getCodec(t),i=new n.encoder(e,n);return n.bomAware&&e&&e.addBOM&&(i=new r.PrependBOM(i,e)),i},a.getDecoder=function(t,e){var n=a.getCodec(t),i=new n.decoder(e,n);return!n.bomAware||e&&!1===e.stripBOM||(i=new r.StripBOM(i,e)),i};var o=void 0!==e&&e.versions&&e.versions.node;if(o){var s=o.split(".").map(Number);(s[0]>0||s[1]>=10)&&n(212)(a),n(213)(a)}}).call(this,n(3))},function(t,e,n){"use strict";function i(t,e){this.encoder=t,this.addBOM=!0}function r(t,e){this.decoder=t,this.pass=!1,this.options=e||{}}e.PrependBOM=i,i.prototype.write=function(t){return this.addBOM&&(t="\ufeff"+t,this.addBOM=!1),this.encoder.write(t)},i.prototype.end=function(){return this.encoder.end()},e.StripBOM=r,r.prototype.write=function(t){var e=this.decoder.write(t);return this.pass||!e?e:("\ufeff"===e[0]&&(e=e.slice(1),"function"==typeof this.options.stripBOM&&this.options.stripBOM()),this.pass=!0,e)},r.prototype.end=function(){return this.decoder.end()}},function(t,e,n){"use strict";for(var i=[n(199),n(200),n(201),n(202),n(203),n(204),n(205),n(206)],r=0;r<i.length;r++){t=i[r];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}},function(t,e,n){"use strict";var i=n(15).Buffer;function r(t,e){this.enc=t.encodingName,this.bomAware=t.bomAware,"base64"===this.enc?this.encoder=c:"cesu8"===this.enc&&(this.enc="utf8",this.encoder=u,"💩"!==i.from("eda0bdedb2a9","hex").toString()&&(this.decoder=l,this.defaultCharUnicode=e.defaultCharUnicode))}t.exports={utf8:{type:"_internal",bomAware:!0},cesu8:{type:"_internal",bomAware:!0},unicode11utf8:"utf8",ucs2:{type:"_internal",bomAware:!0},utf16le:"ucs2",binary:{type:"_internal"},base64:{type:"_internal"},hex:{type:"_internal"},_internal:r},r.prototype.encoder=s,r.prototype.decoder=o;var a=n(28).StringDecoder;function o(t,e){a.call(this,e.enc)}function s(t,e){this.enc=e.enc}function c(t,e){this.prevStr=""}function u(t,e){}function l(t,e){this.acc=0,this.contBytes=0,this.accBytes=0,this.defaultCharUnicode=e.defaultCharUnicode}a.prototype.end||(a.prototype.end=function(){}),o.prototype=a.prototype,s.prototype.write=function(t){return i.from(t,this.enc)},s.prototype.end=function(){},c.prototype.write=function(t){var e=(t=this.prevStr+t).length-t.length%4;return this.prevStr=t.slice(e),t=t.slice(0,e),i.from(t,"base64")},c.prototype.end=function(){return i.from(this.prevStr,"base64")},u.prototype.write=function(t){for(var e=i.alloc(3*t.length),n=0,r=0;r<t.length;r++){var a=t.charCodeAt(r);a<128?e[n++]=a:a<2048?(e[n++]=192+(a>>>6),e[n++]=128+(63&a)):(e[n++]=224+(a>>>12),e[n++]=128+(a>>>6&63),e[n++]=128+(63&a))}return e.slice(0,n)},u.prototype.end=function(){},l.prototype.write=function(t){for(var e=this.acc,n=this.contBytes,i=this.accBytes,r="",a=0;a<t.length;a++){var o=t[a];128!=(192&o)?(n>0&&(r+=this.defaultCharUnicode,n=0),o<128?r+=String.fromCharCode(o):o<224?(e=31&o,n=1,i=1):o<240?(e=15&o,n=2,i=1):r+=this.defaultCharUnicode):n>0?(e=e<<6|63&o,i++,0===--n&&(r+=2===i&&e<128&&e>0?this.defaultCharUnicode:3===i&&e<2048?this.defaultCharUnicode:String.fromCharCode(e))):r+=this.defaultCharUnicode}return this.acc=e,this.contBytes=n,this.accBytes=i,r},l.prototype.end=function(){var t=0;return this.contBytes>0&&(t+=this.defaultCharUnicode),t}},function(t,e,n){"use strict";var i=n(15).Buffer;function r(){}function a(){}function o(){this.overflowByte=-1}function s(t,e){this.iconv=e}function c(t,e){void 0===(t=t||{}).addBOM&&(t.addBOM=!0),this.encoder=e.iconv.getEncoder("utf-16le",t)}function u(t,e){this.decoder=null,this.initialBytes=[],this.initialBytesLen=0,this.options=t||{},this.iconv=e.iconv}function l(t,e){var n=e||"utf-16le";if(t.length>=2)if(254==t[0]&&255==t[1])n="utf-16be";else if(255==t[0]&&254==t[1])n="utf-16le";else{for(var i=0,r=0,a=Math.min(t.length-t.length%2,64),o=0;o<a;o+=2)0===t[o]&&0!==t[o+1]&&r++,0!==t[o]&&0===t[o+1]&&i++;r>i?n="utf-16be":r<i&&(n="utf-16le")}return n}e.utf16be=r,r.prototype.encoder=a,r.prototype.decoder=o,r.prototype.bomAware=!0,a.prototype.write=function(t){for(var e=i.from(t,"ucs2"),n=0;n<e.length;n+=2){var r=e[n];e[n]=e[n+1],e[n+1]=r}return e},a.prototype.end=function(){},o.prototype.write=function(t){if(0==t.length)return"";var e=i.alloc(t.length+1),n=0,r=0;for(-1!==this.overflowByte&&(e[0]=t[0],e[1]=this.overflowByte,n=1,r=2);n<t.length-1;n+=2,r+=2)e[r]=t[n+1],e[r+1]=t[n];return this.overflowByte=n==t.length-1?t[t.length-1]:-1,e.slice(0,r).toString("ucs2")},o.prototype.end=function(){},e.utf16=s,s.prototype.encoder=c,s.prototype.decoder=u,c.prototype.write=function(t){return this.encoder.write(t)},c.prototype.end=function(){return this.encoder.end()},u.prototype.write=function(t){if(!this.decoder){if(this.initialBytes.push(t),this.initialBytesLen+=t.length,this.initialBytesLen<16)return"";var e=l(t=i.concat(this.initialBytes),this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(e,this.options),this.initialBytes.length=this.initialBytesLen=0}return this.decoder.write(t)},u.prototype.end=function(){if(!this.decoder){var t=i.concat(this.initialBytes),e=l(t,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(e,this.options);var n=this.decoder.write(t),r=this.decoder.end();return r?n+r:n}return this.decoder.end()}},function(t,e,n){"use strict";var i=n(15).Buffer;function r(t,e){this.iconv=e}e.utf7=r,e.unicode11utf7="utf7",r.prototype.encoder=o,r.prototype.decoder=s,r.prototype.bomAware=!0;var a=/[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;function o(t,e){this.iconv=e.iconv}function s(t,e){this.iconv=e.iconv,this.inBase64=!1,this.base64Accum=""}o.prototype.write=function(t){return i.from(t.replace(a,function(t){return"+"+("+"===t?"":this.iconv.encode(t,"utf16-be").toString("base64").replace(/=+$/,""))+"-"}.bind(this)))},o.prototype.end=function(){};for(var c=/[A-Za-z0-9\/+]/,u=[],l=0;l<256;l++)u[l]=c.test(String.fromCharCode(l));var p="+".charCodeAt(0),f="-".charCodeAt(0),d="&".charCodeAt(0);function h(t,e){this.iconv=e}function m(t,e){this.iconv=e.iconv,this.inBase64=!1,this.base64Accum=i.alloc(6),this.base64AccumIdx=0}function g(t,e){this.iconv=e.iconv,this.inBase64=!1,this.base64Accum=""}s.prototype.write=function(t){for(var e="",n=0,r=this.inBase64,a=this.base64Accum,o=0;o<t.length;o++)if(r){if(!u[t[o]]){if(o==n&&t[o]==f)e+="+";else{var s=a+t.slice(n,o).toString();e+=this.iconv.decode(i.from(s,"base64"),"utf16-be")}t[o]!=f&&o--,n=o+1,r=!1,a=""}}else t[o]==p&&(e+=this.iconv.decode(t.slice(n,o),"ascii"),n=o+1,r=!0);if(r){var c=(s=a+t.slice(n).toString()).length-s.length%8;a=s.slice(c),s=s.slice(0,c),e+=this.iconv.decode(i.from(s,"base64"),"utf16-be")}else e+=this.iconv.decode(t.slice(n),"ascii");return this.inBase64=r,this.base64Accum=a,e},s.prototype.end=function(){var t="";return this.inBase64&&this.base64Accum.length>0&&(t=this.iconv.decode(i.from(this.base64Accum,"base64"),"utf16-be")),this.inBase64=!1,this.base64Accum="",t},e.utf7imap=h,h.prototype.encoder=m,h.prototype.decoder=g,h.prototype.bomAware=!0,m.prototype.write=function(t){for(var e=this.inBase64,n=this.base64Accum,r=this.base64AccumIdx,a=i.alloc(5*t.length+10),o=0,s=0;s<t.length;s++){var c=t.charCodeAt(s);32<=c&&c<=126?(e&&(r>0&&(o+=a.write(n.slice(0,r).toString("base64").replace(/\//g,",").replace(/=+$/,""),o),r=0),a[o++]=f,e=!1),e||(a[o++]=c,c===d&&(a[o++]=f))):(e||(a[o++]=d,e=!0),e&&(n[r++]=c>>8,n[r++]=255&c,r==n.length&&(o+=a.write(n.toString("base64").replace(/\//g,","),o),r=0)))}return this.inBase64=e,this.base64AccumIdx=r,a.slice(0,o)},m.prototype.end=function(){var t=i.alloc(10),e=0;return this.inBase64&&(this.base64AccumIdx>0&&(e+=t.write(this.base64Accum.slice(0,this.base64AccumIdx).toString("base64").replace(/\//g,",").replace(/=+$/,""),e),this.base64AccumIdx=0),t[e++]=f,this.inBase64=!1),t.slice(0,e)};var y=u.slice();y[",".charCodeAt(0)]=!0,g.prototype.write=function(t){for(var e="",n=0,r=this.inBase64,a=this.base64Accum,o=0;o<t.length;o++)if(r){if(!y[t[o]]){if(o==n&&t[o]==f)e+="&";else{var s=a+t.slice(n,o).toString().replace(/,/g,"/");e+=this.iconv.decode(i.from(s,"base64"),"utf16-be")}t[o]!=f&&o--,n=o+1,r=!1,a=""}}else t[o]==d&&(e+=this.iconv.decode(t.slice(n,o),"ascii"),n=o+1,r=!0);if(r){var c=(s=a+t.slice(n).toString().replace(/,/g,"/")).length-s.length%8;a=s.slice(c),s=s.slice(0,c),e+=this.iconv.decode(i.from(s,"base64"),"utf16-be")}else e+=this.iconv.decode(t.slice(n),"ascii");return this.inBase64=r,this.base64Accum=a,e},g.prototype.end=function(){var t="";return this.inBase64&&this.base64Accum.length>0&&(t=this.iconv.decode(i.from(this.base64Accum,"base64"),"utf16-be")),this.inBase64=!1,this.base64Accum="",t}},function(t,e,n){"use strict";var i=n(15).Buffer;function r(t,e){if(!t)throw new Error("SBCS codec is called without the data.");if(!t.chars||128!==t.chars.length&&256!==t.chars.length)throw new Error("Encoding '"+t.type+"' has incorrect 'chars' (must be of len 128 or 256)");if(128===t.chars.length){for(var n="",r=0;r<128;r++)n+=String.fromCharCode(r);t.chars=n+t.chars}this.decodeBuf=i.from(t.chars,"ucs2");var a=i.alloc(65536,e.defaultCharSingleByte.charCodeAt(0));for(r=0;r<t.chars.length;r++)a[t.chars.charCodeAt(r)]=r;this.encodeBuf=a}function a(t,e){this.encodeBuf=e.encodeBuf}function o(t,e){this.decodeBuf=e.decodeBuf}e._sbcs=r,r.prototype.encoder=a,r.prototype.decoder=o,a.prototype.write=function(t){for(var e=i.alloc(t.length),n=0;n<t.length;n++)e[n]=this.encodeBuf[t.charCodeAt(n)];return e},a.prototype.end=function(){},o.prototype.write=function(t){for(var e=this.decodeBuf,n=i.alloc(2*t.length),r=0,a=0,o=0;o<t.length;o++)r=2*t[o],n[a=2*o]=e[r],n[a+1]=e[r+1];return n.toString("ucs2")},o.prototype.end=function(){}},function(t,e,n){"use strict";t.exports={10029:"maccenteuro",maccenteuro:{type:"_sbcs",chars:"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ"},808:"cp808",ibm808:"cp808",cp808:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ "},mik:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ascii8bit:"ascii",usascii:"ascii",ansix34:"ascii",ansix341968:"ascii",ansix341986:"ascii",csascii:"ascii",cp367:"ascii",ibm367:"ascii",isoir6:"ascii",iso646us:"ascii",iso646irv:"ascii",us:"ascii",latin1:"iso88591",latin2:"iso88592",latin3:"iso88593",latin4:"iso88594",latin5:"iso88599",latin6:"iso885910",latin7:"iso885913",latin8:"iso885914",latin9:"iso885915",latin10:"iso885916",csisolatin1:"iso88591",csisolatin2:"iso88592",csisolatin3:"iso88593",csisolatin4:"iso88594",csisolatincyrillic:"iso88595",csisolatinarabic:"iso88596",csisolatingreek:"iso88597",csisolatinhebrew:"iso88598",csisolatin5:"iso88599",csisolatin6:"iso885910",l1:"iso88591",l2:"iso88592",l3:"iso88593",l4:"iso88594",l5:"iso88599",l6:"iso885910",l7:"iso885913",l8:"iso885914",l9:"iso885915",l10:"iso885916",isoir14:"iso646jp",isoir57:"iso646cn",isoir100:"iso88591",isoir101:"iso88592",isoir109:"iso88593",isoir110:"iso88594",isoir144:"iso88595",isoir127:"iso88596",isoir126:"iso88597",isoir138:"iso88598",isoir148:"iso88599",isoir157:"iso885910",isoir166:"tis620",isoir179:"iso885913",isoir199:"iso885914",isoir203:"iso885915",isoir226:"iso885916",cp819:"iso88591",ibm819:"iso88591",cyrillic:"iso88595",arabic:"iso88596",arabic8:"iso88596",ecma114:"iso88596",asmo708:"iso88596",greek:"iso88597",greek8:"iso88597",ecma118:"iso88597",elot928:"iso88597",hebrew:"iso88598",hebrew8:"iso88598",turkish:"iso88599",turkish8:"iso88599",thai:"iso885911",thai8:"iso885911",celtic:"iso885914",celtic8:"iso885914",isoceltic:"iso885914",tis6200:"tis620",tis62025291:"tis620",tis62025330:"tis620",1e4:"macroman",10006:"macgreek",10007:"maccyrillic",10079:"maciceland",10081:"macturkish",cspc8codepage437:"cp437",cspc775baltic:"cp775",cspc850multilingual:"cp850",cspcp852:"cp852",cspc862latinhebrew:"cp862",cpgr:"cp869",msee:"cp1250",mscyrl:"cp1251",msansi:"cp1252",msgreek:"cp1253",msturk:"cp1254",mshebr:"cp1255",msarab:"cp1256",winbaltrim:"cp1257",cp20866:"koi8r",20866:"koi8r",ibm878:"koi8r",cskoi8r:"koi8r",cp21866:"koi8u",21866:"koi8u",ibm1168:"koi8u",strk10482002:"rk1048",tcvn5712:"tcvn",tcvn57121:"tcvn",gb198880:"iso646cn",cn:"iso646cn",csiso14jisc6220ro:"iso646jp",jisc62201969ro:"iso646jp",jp:"iso646jp",cshproman8:"hproman8",r8:"hproman8",roman8:"hproman8",xroman8:"hproman8",ibm1051:"hproman8",mac:"macintosh",csmacintosh:"macintosh"}},function(t,e,n){"use strict";t.exports={437:"cp437",737:"cp737",775:"cp775",850:"cp850",852:"cp852",855:"cp855",856:"cp856",857:"cp857",858:"cp858",860:"cp860",861:"cp861",862:"cp862",863:"cp863",864:"cp864",865:"cp865",866:"cp866",869:"cp869",874:"windows874",922:"cp922",1046:"cp1046",1124:"cp1124",1125:"cp1125",1129:"cp1129",1133:"cp1133",1161:"cp1161",1162:"cp1162",1163:"cp1163",1250:"windows1250",1251:"windows1251",1252:"windows1252",1253:"windows1253",1254:"windows1254",1255:"windows1255",1256:"windows1256",1257:"windows1257",1258:"windows1258",28591:"iso88591",28592:"iso88592",28593:"iso88593",28594:"iso88594",28595:"iso88595",28596:"iso88596",28597:"iso88597",28598:"iso88598",28599:"iso88599",28600:"iso885910",28601:"iso885911",28603:"iso885913",28604:"iso885914",28605:"iso885915",28606:"iso885916",windows874:{type:"_sbcs",chars:"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"},win874:"windows874",cp874:"windows874",windows1250:{type:"_sbcs",chars:"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"},win1250:"windows1250",cp1250:"windows1250",windows1251:{type:"_sbcs",chars:"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"},win1251:"windows1251",cp1251:"windows1251",windows1252:{type:"_sbcs",chars:"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},win1252:"windows1252",cp1252:"windows1252",windows1253:{type:"_sbcs",chars:"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"},win1253:"windows1253",cp1253:"windows1253",windows1254:{type:"_sbcs",chars:"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"},win1254:"windows1254",cp1254:"windows1254",windows1255:{type:"_sbcs",chars:"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"},win1255:"windows1255",cp1255:"windows1255",windows1256:{type:"_sbcs",chars:"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے"},win1256:"windows1256",cp1256:"windows1256",windows1257:{type:"_sbcs",chars:"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙"},win1257:"windows1257",cp1257:"windows1257",windows1258:{type:"_sbcs",chars:"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"},win1258:"windows1258",cp1258:"windows1258",iso88591:{type:"_sbcs",chars:" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},cp28591:"iso88591",iso88592:{type:"_sbcs",chars:" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"},cp28592:"iso88592",iso88593:{type:"_sbcs",chars:" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙"},cp28593:"iso88593",iso88594:{type:"_sbcs",chars:" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙"},cp28594:"iso88594",iso88595:{type:"_sbcs",chars:" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ"},cp28595:"iso88595",iso88596:{type:"_sbcs",chars:" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������"},cp28596:"iso88596",iso88597:{type:"_sbcs",chars:" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"},cp28597:"iso88597",iso88598:{type:"_sbcs",chars:" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"},cp28598:"iso88598",iso88599:{type:"_sbcs",chars:" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"},cp28599:"iso88599",iso885910:{type:"_sbcs",chars:" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ"},cp28600:"iso885910",iso885911:{type:"_sbcs",chars:" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"},cp28601:"iso885911",iso885913:{type:"_sbcs",chars:" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’"},cp28603:"iso885913",iso885914:{type:"_sbcs",chars:" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ"},cp28604:"iso885914",iso885915:{type:"_sbcs",chars:" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},cp28605:"iso885915",iso885916:{type:"_sbcs",chars:" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ"},cp28606:"iso885916",cp437:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm437:"cp437",csibm437:"cp437",cp737:{type:"_sbcs",chars:"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ "},ibm737:"cp737",csibm737:"cp737",cp775:{type:"_sbcs",chars:"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ "},ibm775:"cp775",csibm775:"cp775",cp850:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "},ibm850:"cp850",csibm850:"cp850",cp852:{type:"_sbcs",chars:"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ "},ibm852:"cp852",csibm852:"cp852",cp855:{type:"_sbcs",chars:"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ "},ibm855:"cp855",csibm855:"cp855",cp856:{type:"_sbcs",chars:"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ "},ibm856:"cp856",csibm856:"cp856",cp857:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ "},ibm857:"cp857",csibm857:"cp857",cp858:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "},ibm858:"cp858",csibm858:"cp858",cp860:{type:"_sbcs",chars:"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm860:"cp860",csibm860:"cp860",cp861:{type:"_sbcs",chars:"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm861:"cp861",csibm861:"cp861",cp862:{type:"_sbcs",chars:"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm862:"cp862",csibm862:"cp862",cp863:{type:"_sbcs",chars:"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm863:"cp863",csibm863:"cp863",cp864:{type:"_sbcs",chars:"\0\b\t\n\v\f\r !\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�"},ibm864:"cp864",csibm864:"cp864",cp865:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm865:"cp865",csibm865:"cp865",cp866:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ "},ibm866:"cp866",csibm866:"cp866",cp869:{type:"_sbcs",chars:"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ "},ibm869:"cp869",csibm869:"cp869",cp922:{type:"_sbcs",chars:" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ"},ibm922:"cp922",csibm922:"cp922",cp1046:{type:"_sbcs",chars:"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�"},ibm1046:"cp1046",csibm1046:"cp1046",cp1124:{type:"_sbcs",chars:" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ"},ibm1124:"cp1124",csibm1124:"cp1124",cp1125:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ "},ibm1125:"cp1125",csibm1125:"cp1125",cp1129:{type:"_sbcs",chars:" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"},ibm1129:"cp1129",csibm1129:"cp1129",cp1133:{type:"_sbcs",chars:" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�"},ibm1133:"cp1133",csibm1133:"cp1133",cp1161:{type:"_sbcs",chars:"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ "},ibm1161:"cp1161",csibm1161:"cp1161",cp1162:{type:"_sbcs",chars:"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"},ibm1162:"cp1162",csibm1162:"cp1162",cp1163:{type:"_sbcs",chars:" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"},ibm1163:"cp1163",csibm1163:"cp1163",maccroatian:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ"},maccyrillic:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"},macgreek:{type:"_sbcs",chars:"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�"},maciceland:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},macroman:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},macromania:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},macthai:{type:"_sbcs",chars:"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู\ufeff​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����"},macturkish:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ"},macukraine:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"},koi8r:{type:"_sbcs",chars:"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},koi8u:{type:"_sbcs",chars:"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},koi8ru:{type:"_sbcs",chars:"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},koi8t:{type:"_sbcs",chars:"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},armscii8:{type:"_sbcs",chars:" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�"},rk1048:{type:"_sbcs",chars:"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"},tcvn:{type:"_sbcs",chars:"\0ÚỤỪỬỮ\b\t\n\v\f\rỨỰỲỶỸÝỴ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ"},georgianacademy:{type:"_sbcs",chars:"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},georgianps:{type:"_sbcs",chars:"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},pt154:{type:"_sbcs",chars:"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"},viscii:{type:"_sbcs",chars:"\0ẲẴẪ\b\t\n\v\f\rỶỸỴ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ"},iso646cn:{type:"_sbcs",chars:"\0\b\t\n\v\f\r !\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"},iso646jp:{type:"_sbcs",chars:"\0\b\t\n\v\f\r !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"},hproman8:{type:"_sbcs",chars:" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�"},macintosh:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},ascii:{type:"_sbcs",chars:"��������������������������������������������������������������������������������������������������������������������������������"},tis620:{type:"_sbcs",chars:"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"}}},function(t,e,n){"use strict";var i=n(15).Buffer;e._dbcs=o;for(var r=new Array(256),a=0;a<256;a++)r[a]=-1;function o(t,e){if(this.encodingName=t.encodingName,!t)throw new Error("DBCS codec is called without the data.");if(!t.table)throw new Error("Encoding '"+this.encodingName+"' has no data.");var n=t.table();this.decodeTables=[],this.decodeTables[0]=r.slice(0),this.decodeTableSeq=[];for(var i=0;i<n.length;i++)this._addDecodeChunk(n[i]);this.defaultCharUnicode=e.defaultCharUnicode,this.encodeTable=[],this.encodeTableSeq=[];var a={};if(t.encodeSkipVals)for(i=0;i<t.encodeSkipVals.length;i++){var o=t.encodeSkipVals[i];if("number"==typeof o)a[o]=!0;else for(var s=o.from;s<=o.to;s++)a[s]=!0}if(this._fillEncodeTable(0,0,a),t.encodeAdd)for(var c in t.encodeAdd)Object.prototype.hasOwnProperty.call(t.encodeAdd,c)&&this._setEncodeChar(c.charCodeAt(0),t.encodeAdd[c]);if(this.defCharSB=this.encodeTable[0][e.defaultCharSingleByte.charCodeAt(0)],-1===this.defCharSB&&(this.defCharSB=this.encodeTable[0]["?"]),-1===this.defCharSB&&(this.defCharSB="?".charCodeAt(0)),"function"==typeof t.gb18030){this.gb18030=t.gb18030();var u=this.decodeTables.length,l=this.decodeTables[u]=r.slice(0),p=this.decodeTables.length,f=this.decodeTables[p]=r.slice(0);for(i=129;i<=254;i++){var d=-1e3-this.decodeTables[0][i],h=this.decodeTables[d];for(s=48;s<=57;s++)h[s]=-1e3-u}for(i=129;i<=254;i++)l[i]=-1e3-p;for(i=48;i<=57;i++)f[i]=-2}}function s(t,e){this.leadSurrogate=-1,this.seqObj=void 0,this.encodeTable=e.encodeTable,this.encodeTableSeq=e.encodeTableSeq,this.defaultCharSingleByte=e.defCharSB,this.gb18030=e.gb18030}function c(t,e){this.nodeIdx=0,this.prevBuf=i.alloc(0),this.decodeTables=e.decodeTables,this.decodeTableSeq=e.decodeTableSeq,this.defaultCharUnicode=e.defaultCharUnicode,this.gb18030=e.gb18030}function u(t,e){if(t[0]>e)return-1;for(var n=0,i=t.length;n<i-1;){var r=n+Math.floor((i-n+1)/2);t[r]<=e?n=r:i=r}return n}o.prototype.encoder=s,o.prototype.decoder=c,o.prototype._getDecodeTrieNode=function(t){for(var e=[];t>0;t>>=8)e.push(255&t);0==e.length&&e.push(0);for(var n=this.decodeTables[0],i=e.length-1;i>0;i--){var a=n[e[i]];if(-1==a)n[e[i]]=-1e3-this.decodeTables.length,this.decodeTables.push(n=r.slice(0));else{if(!(a<=-1e3))throw new Error("Overwrite byte in "+this.encodingName+", addr: "+t.toString(16));n=this.decodeTables[-1e3-a]}}return n},o.prototype._addDecodeChunk=function(t){var e=parseInt(t[0],16),n=this._getDecodeTrieNode(e);e&=255;for(var i=1;i<t.length;i++){var r=t[i];if("string"==typeof r)for(var a=0;a<r.length;){var o=r.charCodeAt(a++);if(55296<=o&&o<56320){var s=r.charCodeAt(a++);if(!(56320<=s&&s<57344))throw new Error("Incorrect surrogate pair in "+this.encodingName+" at chunk "+t[0]);n[e++]=65536+1024*(o-55296)+(s-56320)}else if(4080<o&&o<=4095){for(var c=4095-o+2,u=[],l=0;l<c;l++)u.push(r.charCodeAt(a++));n[e++]=-10-this.decodeTableSeq.length,this.decodeTableSeq.push(u)}else n[e++]=o}else{if("number"!=typeof r)throw new Error("Incorrect type '"+typeof r+"' given in "+this.encodingName+" at chunk "+t[0]);var p=n[e-1]+1;for(a=0;a<r;a++)n[e++]=p++}}if(e>255)throw new Error("Incorrect chunk in "+this.encodingName+" at addr "+t[0]+": too long"+e)},o.prototype._getEncodeBucket=function(t){var e=t>>8;return void 0===this.encodeTable[e]&&(this.encodeTable[e]=r.slice(0)),this.encodeTable[e]},o.prototype._setEncodeChar=function(t,e){var n=this._getEncodeBucket(t),i=255&t;n[i]<=-10?this.encodeTableSeq[-10-n[i]][-1]=e:-1==n[i]&&(n[i]=e)},o.prototype._setEncodeSequence=function(t,e){var n,i=t[0],r=this._getEncodeBucket(i),a=255&i;r[a]<=-10?n=this.encodeTableSeq[-10-r[a]]:(n={},-1!==r[a]&&(n[-1]=r[a]),r[a]=-10-this.encodeTableSeq.length,this.encodeTableSeq.push(n));for(var o=1;o<t.length-1;o++){var s=n[i];"object"==typeof s?n=s:(n=n[i]={},void 0!==s&&(n[-1]=s))}n[i=t[t.length-1]]=e},o.prototype._fillEncodeTable=function(t,e,n){for(var i=this.decodeTables[t],r=0;r<256;r++){var a=i[r],o=e+r;n[o]||(a>=0?this._setEncodeChar(a,o):a<=-1e3?this._fillEncodeTable(-1e3-a,o<<8,n):a<=-10&&this._setEncodeSequence(this.decodeTableSeq[-10-a],o))}},s.prototype.write=function(t){for(var e=i.alloc(t.length*(this.gb18030?4:3)),n=this.leadSurrogate,r=this.seqObj,a=-1,o=0,s=0;;){if(-1===a){if(o==t.length)break;var c=t.charCodeAt(o++)}else{c=a;a=-1}if(55296<=c&&c<57344)if(c<56320){if(-1===n){n=c;continue}n=c,c=-1}else-1!==n?(c=65536+1024*(n-55296)+(c-56320),n=-1):c=-1;else-1!==n&&(a=c,c=-1,n=-1);var l=-1;if(void 0!==r&&-1!=c){var p=r[c];if("object"==typeof p){r=p;continue}"number"==typeof p?l=p:null==p&&void 0!==(p=r[-1])&&(l=p,a=c),r=void 0}else if(c>=0){var f=this.encodeTable[c>>8];if(void 0!==f&&(l=f[255&c]),l<=-10){r=this.encodeTableSeq[-10-l];continue}if(-1==l&&this.gb18030){var d=u(this.gb18030.uChars,c);if(-1!=d){l=this.gb18030.gbChars[d]+(c-this.gb18030.uChars[d]);e[s++]=129+Math.floor(l/12600),l%=12600,e[s++]=48+Math.floor(l/1260),l%=1260,e[s++]=129+Math.floor(l/10),l%=10,e[s++]=48+l;continue}}}-1===l&&(l=this.defaultCharSingleByte),l<256?e[s++]=l:l<65536?(e[s++]=l>>8,e[s++]=255&l):(e[s++]=l>>16,e[s++]=l>>8&255,e[s++]=255&l)}return this.seqObj=r,this.leadSurrogate=n,e.slice(0,s)},s.prototype.end=function(){if(-1!==this.leadSurrogate||void 0!==this.seqObj){var t=i.alloc(10),e=0;if(this.seqObj){var n=this.seqObj[-1];void 0!==n&&(n<256?t[e++]=n:(t[e++]=n>>8,t[e++]=255&n)),this.seqObj=void 0}return-1!==this.leadSurrogate&&(t[e++]=this.defaultCharSingleByte,this.leadSurrogate=-1),t.slice(0,e)}},s.prototype.findIdx=u,c.prototype.write=function(t){var e=i.alloc(2*t.length),n=this.nodeIdx,r=this.prevBuf,a=this.prevBuf.length,o=-this.prevBuf.length;a>0&&(r=i.concat([r,t.slice(0,10)]));for(var s=0,c=0;s<t.length;s++){var l,p=s>=0?t[s]:r[s+a];if((l=this.decodeTables[n][p])>=0);else if(-1===l)s=o,l=this.defaultCharUnicode.charCodeAt(0);else if(-2===l){var f=o>=0?t.slice(o,s+1):r.slice(o+a,s+1+a),d=12600*(f[0]-129)+1260*(f[1]-48)+10*(f[2]-129)+(f[3]-48),h=u(this.gb18030.gbChars,d);l=this.gb18030.uChars[h]+d-this.gb18030.gbChars[h]}else{if(l<=-1e3){n=-1e3-l;continue}if(!(l<=-10))throw new Error("iconv-lite internal error: invalid decoding table value "+l+" at "+n+"/"+p);for(var m=this.decodeTableSeq[-10-l],g=0;g<m.length-1;g++)l=m[g],e[c++]=255&l,e[c++]=l>>8;l=m[m.length-1]}if(l>65535){l-=65536;var y=55296+Math.floor(l/1024);e[c++]=255&y,e[c++]=y>>8,l=56320+l%1024}e[c++]=255&l,e[c++]=l>>8,n=0,o=s+1}return this.nodeIdx=n,this.prevBuf=o>=0?t.slice(o):r.slice(o+a),e.slice(0,c).toString("ucs2")},c.prototype.end=function(){for(var t="";this.prevBuf.length>0;){t+=this.defaultCharUnicode;var e=this.prevBuf.slice(1);this.prevBuf=i.alloc(0),this.nodeIdx=0,e.length>0&&(t+=this.write(e))}return this.nodeIdx=0,t}},function(t,e,n){"use strict";t.exports={shiftjis:{type:"_dbcs",table:function(){return n(207)},encodeAdd:{"¥":92,"‾":126},encodeSkipVals:[{from:60736,to:63808}]},csshiftjis:"shiftjis",mskanji:"shiftjis",sjis:"shiftjis",windows31j:"shiftjis",ms31j:"shiftjis",xsjis:"shiftjis",windows932:"shiftjis",ms932:"shiftjis",932:"shiftjis",cp932:"shiftjis",eucjp:{type:"_dbcs",table:function(){return n(208)},encodeAdd:{"¥":92,"‾":126}},gb2312:"cp936",gb231280:"cp936",gb23121980:"cp936",csgb2312:"cp936",csiso58gb231280:"cp936",euccn:"cp936",windows936:"cp936",ms936:"cp936",936:"cp936",cp936:{type:"_dbcs",table:function(){return n(44)}},gbk:{type:"_dbcs",table:function(){return n(44).concat(n(77))}},xgbk:"gbk",isoir58:"gbk",gb18030:{type:"_dbcs",table:function(){return n(44).concat(n(77))},gb18030:function(){return n(209)},encodeSkipVals:[128],encodeAdd:{"€":41699}},chinese:"gb18030",windows949:"cp949",ms949:"cp949",949:"cp949",cp949:{type:"_dbcs",table:function(){return n(210)}},cseuckr:"cp949",csksc56011987:"cp949",euckr:"cp949",isoir149:"cp949",korean:"cp949",ksc56011987:"cp949",ksc56011989:"cp949",ksc5601:"cp949",windows950:"cp950",ms950:"cp950",950:"cp950",cp950:{type:"_dbcs",table:function(){return n(78)}},big5:"big5hkscs",big5hkscs:{type:"_dbcs",table:function(){return n(78).concat(n(211))},encodeSkipVals:[41676]},cnbig5:"big5hkscs",csbig5:"big5hkscs",xxbig5:"big5hkscs"}},function(t){t.exports=JSON.parse('[["0","\\u0000",128],["a1","｡",62],["8140","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×"],["8180","÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓"],["81b8","∈∋⊆⊇⊂⊃∪∩"],["81c8","∧∨￢⇒⇔∀∃"],["81da","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],["81f0","Å‰♯♭♪†‡¶"],["81fc","◯"],["824f","０",9],["8260","Ａ",25],["8281","ａ",25],["829f","ぁ",82],["8340","ァ",62],["8380","ム",22],["839f","Α",16,"Σ",6],["83bf","α",16,"σ",6],["8440","А",5,"ЁЖ",25],["8470","а",5,"ёж",7],["8480","о",17],["849f","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],["8740","①",19,"Ⅰ",9],["875f","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],["877e","㍻"],["8780","〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],["889f","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],["8940","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円"],["8980","園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],["8a40","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫"],["8a80","橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],["8b40","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救"],["8b80","朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],["8c40","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨"],["8c80","劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],["8d40","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降"],["8d80","項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],["8e40","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止"],["8e80","死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],["8f40","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳"],["8f80","準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],["9040","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨"],["9080","逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],["9140","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻"],["9180","操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],["9240","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄"],["9280","逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],["9340","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬"],["9380","凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],["9440","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅"],["9480","楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],["9540","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷"],["9580","斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],["9640","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆"],["9680","摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],["9740","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲"],["9780","沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],["9840","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],["989f","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],["9940","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭"],["9980","凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],["9a40","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸"],["9a80","噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],["9b40","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀"],["9b80","它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],["9c40","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠"],["9c80","怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],["9d40","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫"],["9d80","捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],["9e40","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎"],["9e80","梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],["9f40","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯"],["9f80","麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],["e040","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝"],["e080","烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],["e140","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿"],["e180","痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],["e240","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰"],["e280","窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],["e340","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷"],["e380","縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],["e440","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤"],["e480","艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],["e540","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬"],["e580","蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],["e640","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧"],["e680","諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],["e740","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜"],["e780","轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],["e840","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙"],["e880","閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],["e940","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃"],["e980","騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],["ea40","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯"],["ea80","黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙"],["ed40","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏"],["ed80","塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],["ee40","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙"],["ee80","蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],["eeef","ⅰ",9,"￢￤＇＂"],["f040","",62],["f080","",124],["f140","",62],["f180","",124],["f240","",62],["f280","",124],["f340","",62],["f380","",124],["f440","",62],["f480","",124],["f540","",62],["f580","",124],["f640","",62],["f680","",124],["f740","",62],["f780","",124],["f840","",62],["f880","",124],["f940",""],["fa40","ⅰ",9,"Ⅰ",9,"￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊"],["fa80","兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯"],["fb40","涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神"],["fb80","祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙"],["fc40","髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"]]')},function(t){t.exports=JSON.parse('[["0","\\u0000",127],["8ea1","｡",62],["a1a1","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇"],["a2a1","◆□■△▲▽▼※〒→←↑↓〓"],["a2ba","∈∋⊆⊇⊂⊃∪∩"],["a2ca","∧∨￢⇒⇔∀∃"],["a2dc","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],["a2f2","Å‰♯♭♪†‡¶"],["a2fe","◯"],["a3b0","０",9],["a3c1","Ａ",25],["a3e1","ａ",25],["a4a1","ぁ",82],["a5a1","ァ",85],["a6a1","Α",16,"Σ",6],["a6c1","α",16,"σ",6],["a7a1","А",5,"ЁЖ",25],["a7d1","а",5,"ёж",25],["a8a1","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],["ada1","①",19,"Ⅰ",9],["adc0","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],["addf","㍻〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],["b0a1","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],["b1a1","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応"],["b2a1","押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],["b3a1","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱"],["b4a1","粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],["b5a1","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京"],["b6a1","供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],["b7a1","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲"],["b8a1","検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],["b9a1","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込"],["baa1","此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],["bba1","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時"],["bca1","次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],["bda1","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償"],["bea1","勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],["bfa1","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾"],["c0a1","澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],["c1a1","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎"],["c2a1","臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],["c3a1","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵"],["c4a1","帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],["c5a1","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到"],["c6a1","董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],["c7a1","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦"],["c8a1","函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],["c9a1","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服"],["caa1","福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],["cba1","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満"],["cca1","漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],["cda1","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃"],["cea1","痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],["cfa1","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],["d0a1","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],["d1a1","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨"],["d2a1","辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],["d3a1","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉"],["d4a1","圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],["d5a1","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓"],["d6a1","屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],["d7a1","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚"],["d8a1","悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],["d9a1","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼"],["daa1","據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],["dba1","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍"],["dca1","棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],["dda1","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾"],["dea1","沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],["dfa1","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼"],["e0a1","燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],["e1a1","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰"],["e2a1","癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],["e3a1","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐"],["e4a1","筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],["e5a1","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺"],["e6a1","罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],["e7a1","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙"],["e8a1","茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],["e9a1","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙"],["eaa1","蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],["eba1","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫"],["eca1","譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],["eda1","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸"],["eea1","遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],["efa1","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞"],["f0a1","陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],["f1a1","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷"],["f2a1","髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],["f3a1","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠"],["f4a1","堯槇遙瑤凜熙"],["f9a1","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德"],["faa1","忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],["fba1","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚"],["fca1","釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],["fcf1","ⅰ",9,"￢￤＇＂"],["8fa2af","˘ˇ¸˙˝¯˛˚～΄΅"],["8fa2c2","¡¦¿"],["8fa2eb","ºª©®™¤№"],["8fa6e1","ΆΈΉΊΪ"],["8fa6e7","Ό"],["8fa6e9","ΎΫ"],["8fa6ec","Ώ"],["8fa6f1","άέήίϊΐόςύϋΰώ"],["8fa7c2","Ђ",10,"ЎЏ"],["8fa7f2","ђ",10,"ўџ"],["8fa9a1","ÆĐ"],["8fa9a4","Ħ"],["8fa9a6","Ĳ"],["8fa9a8","ŁĿ"],["8fa9ab","ŊØŒ"],["8fa9af","ŦÞ"],["8fa9c1","æđðħıĳĸłŀŉŋøœßŧþ"],["8faaa1","ÁÀÄÂĂǍĀĄÅÃĆĈČÇĊĎÉÈËÊĚĖĒĘ"],["8faaba","ĜĞĢĠĤÍÌÏÎǏİĪĮĨĴĶĹĽĻŃŇŅÑÓÒÖÔǑŐŌÕŔŘŖŚŜŠŞŤŢÚÙÜÛŬǓŰŪŲŮŨǗǛǙǕŴÝŸŶŹŽŻ"],["8faba1","áàäâăǎāąåãćĉčçċďéèëêěėēęǵĝğ"],["8fabbd","ġĥíìïîǐ"],["8fabc5","īįĩĵķĺľļńňņñóòöôǒőōõŕřŗśŝšşťţúùüûŭǔűūųůũǘǜǚǖŵýÿŷźžż"],["8fb0a1","丂丄丅丌丒丟丣两丨丫丮丯丰丵乀乁乄乇乑乚乜乣乨乩乴乵乹乿亍亖亗亝亯亹仃仐仚仛仠仡仢仨仯仱仳仵份仾仿伀伂伃伈伋伌伒伕伖众伙伮伱你伳伵伷伹伻伾佀佂佈佉佋佌佒佔佖佘佟佣佪佬佮佱佷佸佹佺佽佾侁侂侄"],["8fb1a1","侅侉侊侌侎侐侒侓侔侗侙侚侞侟侲侷侹侻侼侽侾俀俁俅俆俈俉俋俌俍俏俒俜俠俢俰俲俼俽俿倀倁倄倇倊倌倎倐倓倗倘倛倜倝倞倢倧倮倰倲倳倵偀偁偂偅偆偊偌偎偑偒偓偗偙偟偠偢偣偦偧偪偭偰偱倻傁傃傄傆傊傎傏傐"],["8fb2a1","傒傓傔傖傛傜傞",4,"傪傯傰傹傺傽僀僃僄僇僌僎僐僓僔僘僜僝僟僢僤僦僨僩僯僱僶僺僾儃儆儇儈儋儌儍儎僲儐儗儙儛儜儝儞儣儧儨儬儭儯儱儳儴儵儸儹兂兊兏兓兕兗兘兟兤兦兾冃冄冋冎冘冝冡冣冭冸冺冼冾冿凂"],["8fb3a1","凈减凑凒凓凕凘凞凢凥凮凲凳凴凷刁刂刅划刓刕刖刘刢刨刱刲刵刼剅剉剕剗剘剚剜剟剠剡剦剮剷剸剹劀劂劅劊劌劓劕劖劗劘劚劜劤劥劦劧劯劰劶劷劸劺劻劽勀勄勆勈勌勏勑勔勖勛勜勡勥勨勩勪勬勰勱勴勶勷匀匃匊匋"],["8fb4a1","匌匑匓匘匛匜匞匟匥匧匨匩匫匬匭匰匲匵匼匽匾卂卌卋卙卛卡卣卥卬卭卲卹卾厃厇厈厎厓厔厙厝厡厤厪厫厯厲厴厵厷厸厺厽叀叅叏叒叓叕叚叝叞叠另叧叵吂吓吚吡吧吨吪启吱吴吵呃呄呇呍呏呞呢呤呦呧呩呫呭呮呴呿"],["8fb5a1","咁咃咅咈咉咍咑咕咖咜咟咡咦咧咩咪咭咮咱咷咹咺咻咿哆哊响哎哠哪哬哯哶哼哾哿唀唁唅唈唉唌唍唎唕唪唫唲唵唶唻唼唽啁啇啉啊啍啐啑啘啚啛啞啠啡啤啦啿喁喂喆喈喎喏喑喒喓喔喗喣喤喭喲喿嗁嗃嗆嗉嗋嗌嗎嗑嗒"],["8fb6a1","嗓嗗嗘嗛嗞嗢嗩嗶嗿嘅嘈嘊嘍",5,"嘙嘬嘰嘳嘵嘷嘹嘻嘼嘽嘿噀噁噃噄噆噉噋噍噏噔噞噠噡噢噣噦噩噭噯噱噲噵嚄嚅嚈嚋嚌嚕嚙嚚嚝嚞嚟嚦嚧嚨嚩嚫嚬嚭嚱嚳嚷嚾囅囉囊囋囏囐囌囍囙囜囝囟囡囤",4,"囱囫园"],["8fb7a1","囶囷圁圂圇圊圌圑圕圚圛圝圠圢圣圤圥圩圪圬圮圯圳圴圽圾圿坅坆坌坍坒坢坥坧坨坫坭",4,"坳坴坵坷坹坺坻坼坾垁垃垌垔垗垙垚垜垝垞垟垡垕垧垨垩垬垸垽埇埈埌埏埕埝埞埤埦埧埩埭埰埵埶埸埽埾埿堃堄堈堉埡"],["8fb8a1","堌堍堛堞堟堠堦堧堭堲堹堿塉塌塍塏塐塕塟塡塤塧塨塸塼塿墀墁墇墈墉墊墌墍墏墐墔墖墝墠墡墢墦墩墱墲壄墼壂壈壍壎壐壒壔壖壚壝壡壢壩壳夅夆夋夌夒夓夔虁夝夡夣夤夨夯夰夳夵夶夿奃奆奒奓奙奛奝奞奟奡奣奫奭"],["8fb9a1","奯奲奵奶她奻奼妋妌妎妒妕妗妟妤妧妭妮妯妰妳妷妺妼姁姃姄姈姊姍姒姝姞姟姣姤姧姮姯姱姲姴姷娀娄娌娍娎娒娓娞娣娤娧娨娪娭娰婄婅婇婈婌婐婕婞婣婥婧婭婷婺婻婾媋媐媓媖媙媜媞媟媠媢媧媬媱媲媳媵媸媺媻媿"],["8fbaa1","嫄嫆嫈嫏嫚嫜嫠嫥嫪嫮嫵嫶嫽嬀嬁嬈嬗嬴嬙嬛嬝嬡嬥嬭嬸孁孋孌孒孖孞孨孮孯孼孽孾孿宁宄宆宊宎宐宑宓宔宖宨宩宬宭宯宱宲宷宺宼寀寁寍寏寖",4,"寠寯寱寴寽尌尗尞尟尣尦尩尫尬尮尰尲尵尶屙屚屜屢屣屧屨屩"],["8fbba1","屭屰屴屵屺屻屼屽岇岈岊岏岒岝岟岠岢岣岦岪岲岴岵岺峉峋峒峝峗峮峱峲峴崁崆崍崒崫崣崤崦崧崱崴崹崽崿嵂嵃嵆嵈嵕嵑嵙嵊嵟嵠嵡嵢嵤嵪嵭嵰嵹嵺嵾嵿嶁嶃嶈嶊嶒嶓嶔嶕嶙嶛嶟嶠嶧嶫嶰嶴嶸嶹巃巇巋巐巎巘巙巠巤"],["8fbca1","巩巸巹帀帇帍帒帔帕帘帟帠帮帨帲帵帾幋幐幉幑幖幘幛幜幞幨幪",4,"幰庀庋庎庢庤庥庨庪庬庱庳庽庾庿廆廌廋廎廑廒廔廕廜廞廥廫异弆弇弈弎弙弜弝弡弢弣弤弨弫弬弮弰弴弶弻弽弿彀彄彅彇彍彐彔彘彛彠彣彤彧"],["8fbda1","彯彲彴彵彸彺彽彾徉徍徏徖徜徝徢徧徫徤徬徯徰徱徸忄忇忈忉忋忐",4,"忞忡忢忨忩忪忬忭忮忯忲忳忶忺忼怇怊怍怓怔怗怘怚怟怤怭怳怵恀恇恈恉恌恑恔恖恗恝恡恧恱恾恿悂悆悈悊悎悑悓悕悘悝悞悢悤悥您悰悱悷"],["8fbea1","悻悾惂惄惈惉惊惋惎惏惔惕惙惛惝惞惢惥惲惵惸惼惽愂愇愊愌愐",4,"愖愗愙愜愞愢愪愫愰愱愵愶愷愹慁慅慆慉慞慠慬慲慸慻慼慿憀憁憃憄憋憍憒憓憗憘憜憝憟憠憥憨憪憭憸憹憼懀懁懂懎懏懕懜懝懞懟懡懢懧懩懥"],["8fbfa1","懬懭懯戁戃戄戇戓戕戜戠戢戣戧戩戫戹戽扂扃扄扆扌扐扑扒扔扖扚扜扤扭扯扳扺扽抍抎抏抐抦抨抳抶抷抺抾抿拄拎拕拖拚拪拲拴拼拽挃挄挊挋挍挐挓挖挘挩挪挭挵挶挹挼捁捂捃捄捆捊捋捎捒捓捔捘捛捥捦捬捭捱捴捵"],["8fc0a1","捸捼捽捿掂掄掇掊掐掔掕掙掚掞掤掦掭掮掯掽揁揅揈揎揑揓揔揕揜揠揥揪揬揲揳揵揸揹搉搊搐搒搔搘搞搠搢搤搥搩搪搯搰搵搽搿摋摏摑摒摓摔摚摛摜摝摟摠摡摣摭摳摴摻摽撅撇撏撐撑撘撙撛撝撟撡撣撦撨撬撳撽撾撿"],["8fc1a1","擄擉擊擋擌擎擐擑擕擗擤擥擩擪擭擰擵擷擻擿攁攄攈攉攊攏攓攔攖攙攛攞攟攢攦攩攮攱攺攼攽敃敇敉敐敒敔敟敠敧敫敺敽斁斅斊斒斕斘斝斠斣斦斮斲斳斴斿旂旈旉旎旐旔旖旘旟旰旲旴旵旹旾旿昀昄昈昉昍昑昒昕昖昝"],["8fc2a1","昞昡昢昣昤昦昩昪昫昬昮昰昱昳昹昷晀晅晆晊晌晑晎晗晘晙晛晜晠晡曻晪晫晬晾晳晵晿晷晸晹晻暀晼暋暌暍暐暒暙暚暛暜暟暠暤暭暱暲暵暻暿曀曂曃曈曌曎曏曔曛曟曨曫曬曮曺朅朇朎朓朙朜朠朢朳朾杅杇杈杌杔杕杝"],["8fc3a1","杦杬杮杴杶杻极构枎枏枑枓枖枘枙枛枰枱枲枵枻枼枽柹柀柂柃柅柈柉柒柗柙柜柡柦柰柲柶柷桒栔栙栝栟栨栧栬栭栯栰栱栳栻栿桄桅桊桌桕桗桘桛桫桮",4,"桵桹桺桻桼梂梄梆梈梖梘梚梜梡梣梥梩梪梮梲梻棅棈棌棏"],["8fc4a1","棐棑棓棖棙棜棝棥棨棪棫棬棭棰棱棵棶棻棼棽椆椉椊椐椑椓椖椗椱椳椵椸椻楂楅楉楎楗楛楣楤楥楦楨楩楬楰楱楲楺楻楿榀榍榒榖榘榡榥榦榨榫榭榯榷榸榺榼槅槈槑槖槗槢槥槮槯槱槳槵槾樀樁樃樏樑樕樚樝樠樤樨樰樲"],["8fc5a1","樴樷樻樾樿橅橆橉橊橎橐橑橒橕橖橛橤橧橪橱橳橾檁檃檆檇檉檋檑檛檝檞檟檥檫檯檰檱檴檽檾檿櫆櫉櫈櫌櫐櫔櫕櫖櫜櫝櫤櫧櫬櫰櫱櫲櫼櫽欂欃欆欇欉欏欐欑欗欛欞欤欨欫欬欯欵欶欻欿歆歊歍歒歖歘歝歠歧歫歮歰歵歽"],["8fc6a1","歾殂殅殗殛殟殠殢殣殨殩殬殭殮殰殸殹殽殾毃毄毉毌毖毚毡毣毦毧毮毱毷毹毿氂氄氅氉氍氎氐氒氙氟氦氧氨氬氮氳氵氶氺氻氿汊汋汍汏汒汔汙汛汜汫汭汯汴汶汸汹汻沅沆沇沉沔沕沗沘沜沟沰沲沴泂泆泍泏泐泑泒泔泖"],["8fc7a1","泚泜泠泧泩泫泬泮泲泴洄洇洊洎洏洑洓洚洦洧洨汧洮洯洱洹洼洿浗浞浟浡浥浧浯浰浼涂涇涑涒涔涖涗涘涪涬涴涷涹涽涿淄淈淊淎淏淖淛淝淟淠淢淥淩淯淰淴淶淼渀渄渞渢渧渲渶渹渻渼湄湅湈湉湋湏湑湒湓湔湗湜湝湞"],["8fc8a1","湢湣湨湳湻湽溍溓溙溠溧溭溮溱溳溻溿滀滁滃滇滈滊滍滎滏滫滭滮滹滻滽漄漈漊漌漍漖漘漚漛漦漩漪漯漰漳漶漻漼漭潏潑潒潓潗潙潚潝潞潡潢潨潬潽潾澃澇澈澋澌澍澐澒澓澔澖澚澟澠澥澦澧澨澮澯澰澵澶澼濅濇濈濊"],["8fc9a1","濚濞濨濩濰濵濹濼濽瀀瀅瀆瀇瀍瀗瀠瀣瀯瀴瀷瀹瀼灃灄灈灉灊灋灔灕灝灞灎灤灥灬灮灵灶灾炁炅炆炔",4,"炛炤炫炰炱炴炷烊烑烓烔烕烖烘烜烤烺焃",4,"焋焌焏焞焠焫焭焯焰焱焸煁煅煆煇煊煋煐煒煗煚煜煞煠"],["8fcaa1","煨煹熀熅熇熌熒熚熛熠熢熯熰熲熳熺熿燀燁燄燋燌燓燖燙燚燜燸燾爀爇爈爉爓爗爚爝爟爤爫爯爴爸爹牁牂牃牅牎牏牐牓牕牖牚牜牞牠牣牨牫牮牯牱牷牸牻牼牿犄犉犍犎犓犛犨犭犮犱犴犾狁狇狉狌狕狖狘狟狥狳狴狺狻"],["8fcba1","狾猂猄猅猇猋猍猒猓猘猙猞猢猤猧猨猬猱猲猵猺猻猽獃獍獐獒獖獘獝獞獟獠獦獧獩獫獬獮獯獱獷獹獼玀玁玃玅玆玎玐玓玕玗玘玜玞玟玠玢玥玦玪玫玭玵玷玹玼玽玿珅珆珉珋珌珏珒珓珖珙珝珡珣珦珧珩珴珵珷珹珺珻珽"],["8fcca1","珿琀琁琄琇琊琑琚琛琤琦琨",9,"琹瑀瑃瑄瑆瑇瑋瑍瑑瑒瑗瑝瑢瑦瑧瑨瑫瑭瑮瑱瑲璀璁璅璆璇璉璏璐璑璒璘璙璚璜璟璠璡璣璦璨璩璪璫璮璯璱璲璵璹璻璿瓈瓉瓌瓐瓓瓘瓚瓛瓞瓟瓤瓨瓪瓫瓯瓴瓺瓻瓼瓿甆"],["8fcda1","甒甖甗甠甡甤甧甩甪甯甶甹甽甾甿畀畃畇畈畎畐畒畗畞畟畡畯畱畹",5,"疁疅疐疒疓疕疙疜疢疤疴疺疿痀痁痄痆痌痎痏痗痜痟痠痡痤痧痬痮痯痱痹瘀瘂瘃瘄瘇瘈瘊瘌瘏瘒瘓瘕瘖瘙瘛瘜瘝瘞瘣瘥瘦瘩瘭瘲瘳瘵瘸瘹"],["8fcea1","瘺瘼癊癀癁癃癄癅癉癋癕癙癟癤癥癭癮癯癱癴皁皅皌皍皕皛皜皝皟皠皢",6,"皪皭皽盁盅盉盋盌盎盔盙盠盦盨盬盰盱盶盹盼眀眆眊眎眒眔眕眗眙眚眜眢眨眭眮眯眴眵眶眹眽眾睂睅睆睊睍睎睏睒睖睗睜睞睟睠睢"],["8fcfa1","睤睧睪睬睰睲睳睴睺睽瞀瞄瞌瞍瞔瞕瞖瞚瞟瞢瞧瞪瞮瞯瞱瞵瞾矃矉矑矒矕矙矞矟矠矤矦矪矬矰矱矴矸矻砅砆砉砍砎砑砝砡砢砣砭砮砰砵砷硃硄硇硈硌硎硒硜硞硠硡硣硤硨硪确硺硾碊碏碔碘碡碝碞碟碤碨碬碭碰碱碲碳"],["8fd0a1","碻碽碿磇磈磉磌磎磒磓磕磖磤磛磟磠磡磦磪磲磳礀磶磷磺磻磿礆礌礐礚礜礞礟礠礥礧礩礭礱礴礵礻礽礿祄祅祆祊祋祏祑祔祘祛祜祧祩祫祲祹祻祼祾禋禌禑禓禔禕禖禘禛禜禡禨禩禫禯禱禴禸离秂秄秇秈秊秏秔秖秚秝秞"],["8fd1a1","秠秢秥秪秫秭秱秸秼稂稃稇稉稊稌稑稕稛稞稡稧稫稭稯稰稴稵稸稹稺穄穅穇穈穌穕穖穙穜穝穟穠穥穧穪穭穵穸穾窀窂窅窆窊窋窐窑窔窞窠窣窬窳窵窹窻窼竆竉竌竎竑竛竨竩竫竬竱竴竻竽竾笇笔笟笣笧笩笪笫笭笮笯笰"],["8fd2a1","笱笴笽笿筀筁筇筎筕筠筤筦筩筪筭筯筲筳筷箄箉箎箐箑箖箛箞箠箥箬箯箰箲箵箶箺箻箼箽篂篅篈篊篔篖篗篙篚篛篨篪篲篴篵篸篹篺篼篾簁簂簃簄簆簉簋簌簎簏簙簛簠簥簦簨簬簱簳簴簶簹簺籆籊籕籑籒籓籙",5],["8fd3a1","籡籣籧籩籭籮籰籲籹籼籽粆粇粏粔粞粠粦粰粶粷粺粻粼粿糄糇糈糉糍糏糓糔糕糗糙糚糝糦糩糫糵紃紇紈紉紏紑紒紓紖紝紞紣紦紪紭紱紼紽紾絀絁絇絈絍絑絓絗絙絚絜絝絥絧絪絰絸絺絻絿綁綂綃綅綆綈綋綌綍綑綖綗綝"],["8fd4a1","綞綦綧綪綳綶綷綹緂",4,"緌緍緎緗緙縀緢緥緦緪緫緭緱緵緶緹緺縈縐縑縕縗縜縝縠縧縨縬縭縯縳縶縿繄繅繇繎繐繒繘繟繡繢繥繫繮繯繳繸繾纁纆纇纊纍纑纕纘纚纝纞缼缻缽缾缿罃罄罇罏罒罓罛罜罝罡罣罤罥罦罭"],["8fd5a1","罱罽罾罿羀羋羍羏羐羑羖羗羜羡羢羦羪羭羴羼羿翀翃翈翎翏翛翟翣翥翨翬翮翯翲翺翽翾翿耇耈耊耍耎耏耑耓耔耖耝耞耟耠耤耦耬耮耰耴耵耷耹耺耼耾聀聄聠聤聦聭聱聵肁肈肎肜肞肦肧肫肸肹胈胍胏胒胔胕胗胘胠胭胮"],["8fd6a1","胰胲胳胶胹胺胾脃脋脖脗脘脜脞脠脤脧脬脰脵脺脼腅腇腊腌腒腗腠腡腧腨腩腭腯腷膁膐膄膅膆膋膎膖膘膛膞膢膮膲膴膻臋臃臅臊臎臏臕臗臛臝臞臡臤臫臬臰臱臲臵臶臸臹臽臿舀舃舏舓舔舙舚舝舡舢舨舲舴舺艃艄艅艆"],["8fd7a1","艋艎艏艑艖艜艠艣艧艭艴艻艽艿芀芁芃芄芇芉芊芎芑芔芖芘芚芛芠芡芣芤芧芨芩芪芮芰芲芴芷芺芼芾芿苆苐苕苚苠苢苤苨苪苭苯苶苷苽苾茀茁茇茈茊茋荔茛茝茞茟茡茢茬茭茮茰茳茷茺茼茽荂荃荄荇荍荎荑荕荖荗荰荸"],["8fd8a1","荽荿莀莂莄莆莍莒莔莕莘莙莛莜莝莦莧莩莬莾莿菀菇菉菏菐菑菔菝荓菨菪菶菸菹菼萁萆萊萏萑萕萙莭萯萹葅葇葈葊葍葏葑葒葖葘葙葚葜葠葤葥葧葪葰葳葴葶葸葼葽蒁蒅蒒蒓蒕蒞蒦蒨蒩蒪蒯蒱蒴蒺蒽蒾蓀蓂蓇蓈蓌蓏蓓"],["8fd9a1","蓜蓧蓪蓯蓰蓱蓲蓷蔲蓺蓻蓽蔂蔃蔇蔌蔎蔐蔜蔞蔢蔣蔤蔥蔧蔪蔫蔯蔳蔴蔶蔿蕆蕏",4,"蕖蕙蕜",6,"蕤蕫蕯蕹蕺蕻蕽蕿薁薅薆薉薋薌薏薓薘薝薟薠薢薥薧薴薶薷薸薼薽薾薿藂藇藊藋藎薭藘藚藟藠藦藨藭藳藶藼"],["8fdaa1","藿蘀蘄蘅蘍蘎蘐蘑蘒蘘蘙蘛蘞蘡蘧蘩蘶蘸蘺蘼蘽虀虂虆虒虓虖虗虘虙虝虠",4,"虩虬虯虵虶虷虺蚍蚑蚖蚘蚚蚜蚡蚦蚧蚨蚭蚱蚳蚴蚵蚷蚸蚹蚿蛀蛁蛃蛅蛑蛒蛕蛗蛚蛜蛠蛣蛥蛧蚈蛺蛼蛽蜄蜅蜇蜋蜎蜏蜐蜓蜔蜙蜞蜟蜡蜣"],["8fdba1","蜨蜮蜯蜱蜲蜹蜺蜼蜽蜾蝀蝃蝅蝍蝘蝝蝡蝤蝥蝯蝱蝲蝻螃",6,"螋螌螐螓螕螗螘螙螞螠螣螧螬螭螮螱螵螾螿蟁蟈蟉蟊蟎蟕蟖蟙蟚蟜蟟蟢蟣蟤蟪蟫蟭蟱蟳蟸蟺蟿蠁蠃蠆蠉蠊蠋蠐蠙蠒蠓蠔蠘蠚蠛蠜蠞蠟蠨蠭蠮蠰蠲蠵"],["8fdca1","蠺蠼衁衃衅衈衉衊衋衎衑衕衖衘衚衜衟衠衤衩衱衹衻袀袘袚袛袜袟袠袨袪袺袽袾裀裊",4,"裑裒裓裛裞裧裯裰裱裵裷褁褆褍褎褏褕褖褘褙褚褜褠褦褧褨褰褱褲褵褹褺褾襀襂襅襆襉襏襒襗襚襛襜襡襢襣襫襮襰襳襵襺"],["8fdda1","襻襼襽覉覍覐覔覕覛覜覟覠覥覰覴覵覶覷覼觔",4,"觥觩觫觭觱觳觶觹觽觿訄訅訇訏訑訒訔訕訞訠訢訤訦訫訬訯訵訷訽訾詀詃詅詇詉詍詎詓詖詗詘詜詝詡詥詧詵詶詷詹詺詻詾詿誀誃誆誋誏誐誒誖誗誙誟誧誩誮誯誳"],["8fdea1","誶誷誻誾諃諆諈諉諊諑諓諔諕諗諝諟諬諰諴諵諶諼諿謅謆謋謑謜謞謟謊謭謰謷謼譂",4,"譈譒譓譔譙譍譞譣譭譶譸譹譼譾讁讄讅讋讍讏讔讕讜讞讟谸谹谽谾豅豇豉豋豏豑豓豔豗豘豛豝豙豣豤豦豨豩豭豳豵豶豻豾貆"],["8fdfa1","貇貋貐貒貓貙貛貜貤貹貺賅賆賉賋賏賖賕賙賝賡賨賬賯賰賲賵賷賸賾賿贁贃贉贒贗贛赥赩赬赮赿趂趄趈趍趐趑趕趞趟趠趦趫趬趯趲趵趷趹趻跀跅跆跇跈跊跎跑跔跕跗跙跤跥跧跬跰趼跱跲跴跽踁踄踅踆踋踑踔踖踠踡踢"],["8fe0a1","踣踦踧踱踳踶踷踸踹踽蹀蹁蹋蹍蹎蹏蹔蹛蹜蹝蹞蹡蹢蹩蹬蹭蹯蹰蹱蹹蹺蹻躂躃躉躐躒躕躚躛躝躞躢躧躩躭躮躳躵躺躻軀軁軃軄軇軏軑軔軜軨軮軰軱軷軹軺軭輀輂輇輈輏輐輖輗輘輞輠輡輣輥輧輨輬輭輮輴輵輶輷輺轀轁"],["8fe1a1","轃轇轏轑",4,"轘轝轞轥辝辠辡辤辥辦辵辶辸达迀迁迆迊迋迍运迒迓迕迠迣迤迨迮迱迵迶迻迾适逄逈逌逘逛逨逩逯逪逬逭逳逴逷逿遃遄遌遛遝遢遦遧遬遰遴遹邅邈邋邌邎邐邕邗邘邙邛邠邡邢邥邰邲邳邴邶邽郌邾郃"],["8fe2a1","郄郅郇郈郕郗郘郙郜郝郟郥郒郶郫郯郰郴郾郿鄀鄄鄅鄆鄈鄍鄐鄔鄖鄗鄘鄚鄜鄞鄠鄥鄢鄣鄧鄩鄮鄯鄱鄴鄶鄷鄹鄺鄼鄽酃酇酈酏酓酗酙酚酛酡酤酧酭酴酹酺酻醁醃醅醆醊醎醑醓醔醕醘醞醡醦醨醬醭醮醰醱醲醳醶醻醼醽醿"],["8fe3a1","釂釃釅釓釔釗釙釚釞釤釥釩釪釬",5,"釷釹釻釽鈀鈁鈄鈅鈆鈇鈉鈊鈌鈐鈒鈓鈖鈘鈜鈝鈣鈤鈥鈦鈨鈮鈯鈰鈳鈵鈶鈸鈹鈺鈼鈾鉀鉂鉃鉆鉇鉊鉍鉎鉏鉑鉘鉙鉜鉝鉠鉡鉥鉧鉨鉩鉮鉯鉰鉵",4,"鉻鉼鉽鉿銈銉銊銍銎銒銗"],["8fe4a1","銙銟銠銤銥銧銨銫銯銲銶銸銺銻銼銽銿",4,"鋅鋆鋇鋈鋋鋌鋍鋎鋐鋓鋕鋗鋘鋙鋜鋝鋟鋠鋡鋣鋥鋧鋨鋬鋮鋰鋹鋻鋿錀錂錈錍錑錔錕錜錝錞錟錡錤錥錧錩錪錳錴錶錷鍇鍈鍉鍐鍑鍒鍕鍗鍘鍚鍞鍤鍥鍧鍩鍪鍭鍯鍰鍱鍳鍴鍶"],["8fe5a1","鍺鍽鍿鎀鎁鎂鎈鎊鎋鎍鎏鎒鎕鎘鎛鎞鎡鎣鎤鎦鎨鎫鎴鎵鎶鎺鎩鏁鏄鏅鏆鏇鏉",4,"鏓鏙鏜鏞鏟鏢鏦鏧鏹鏷鏸鏺鏻鏽鐁鐂鐄鐈鐉鐍鐎鐏鐕鐖鐗鐟鐮鐯鐱鐲鐳鐴鐻鐿鐽鑃鑅鑈鑊鑌鑕鑙鑜鑟鑡鑣鑨鑫鑭鑮鑯鑱鑲钄钃镸镹"],["8fe6a1","镾閄閈閌閍閎閝閞閟閡閦閩閫閬閴閶閺閽閿闆闈闉闋闐闑闒闓闙闚闝闞闟闠闤闦阝阞阢阤阥阦阬阱阳阷阸阹阺阼阽陁陒陔陖陗陘陡陮陴陻陼陾陿隁隂隃隄隉隑隖隚隝隟隤隥隦隩隮隯隳隺雊雒嶲雘雚雝雞雟雩雯雱雺霂"],["8fe7a1","霃霅霉霚霛霝霡霢霣霨霱霳靁靃靊靎靏靕靗靘靚靛靣靧靪靮靳靶靷靸靻靽靿鞀鞉鞕鞖鞗鞙鞚鞞鞟鞢鞬鞮鞱鞲鞵鞶鞸鞹鞺鞼鞾鞿韁韄韅韇韉韊韌韍韎韐韑韔韗韘韙韝韞韠韛韡韤韯韱韴韷韸韺頇頊頙頍頎頔頖頜頞頠頣頦"],["8fe8a1","頫頮頯頰頲頳頵頥頾顄顇顊顑顒顓顖顗顙顚顢顣顥顦顪顬颫颭颮颰颴颷颸颺颻颿飂飅飈飌飡飣飥飦飧飪飳飶餂餇餈餑餕餖餗餚餛餜餟餢餦餧餫餱",4,"餹餺餻餼饀饁饆饇饈饍饎饔饘饙饛饜饞饟饠馛馝馟馦馰馱馲馵"],["8fe9a1","馹馺馽馿駃駉駓駔駙駚駜駞駧駪駫駬駰駴駵駹駽駾騂騃騄騋騌騐騑騖騞騠騢騣騤騧騭騮騳騵騶騸驇驁驄驊驋驌驎驑驔驖驝骪骬骮骯骲骴骵骶骹骻骾骿髁髃髆髈髎髐髒髕髖髗髛髜髠髤髥髧髩髬髲髳髵髹髺髽髿",4],["8feaa1","鬄鬅鬈鬉鬋鬌鬍鬎鬐鬒鬖鬙鬛鬜鬠鬦鬫鬭鬳鬴鬵鬷鬹鬺鬽魈魋魌魕魖魗魛魞魡魣魥魦魨魪",4,"魳魵魷魸魹魿鮀鮄鮅鮆鮇鮉鮊鮋鮍鮏鮐鮔鮚鮝鮞鮦鮧鮩鮬鮰鮱鮲鮷鮸鮻鮼鮾鮿鯁鯇鯈鯎鯐鯗鯘鯝鯟鯥鯧鯪鯫鯯鯳鯷鯸"],["8feba1","鯹鯺鯽鯿鰀鰂鰋鰏鰑鰖鰘鰙鰚鰜鰞鰢鰣鰦",4,"鰱鰵鰶鰷鰽鱁鱃鱄鱅鱉鱊鱎鱏鱐鱓鱔鱖鱘鱛鱝鱞鱟鱣鱩鱪鱜鱫鱨鱮鱰鱲鱵鱷鱻鳦鳲鳷鳹鴋鴂鴑鴗鴘鴜鴝鴞鴯鴰鴲鴳鴴鴺鴼鵅鴽鵂鵃鵇鵊鵓鵔鵟鵣鵢鵥鵩鵪鵫鵰鵶鵷鵻"],["8feca1","鵼鵾鶃鶄鶆鶊鶍鶎鶒鶓鶕鶖鶗鶘鶡鶪鶬鶮鶱鶵鶹鶼鶿鷃鷇鷉鷊鷔鷕鷖鷗鷚鷞鷟鷠鷥鷧鷩鷫鷮鷰鷳鷴鷾鸊鸂鸇鸎鸐鸑鸒鸕鸖鸙鸜鸝鹺鹻鹼麀麂麃麄麅麇麎麏麖麘麛麞麤麨麬麮麯麰麳麴麵黆黈黋黕黟黤黧黬黭黮黰黱黲黵"],["8feda1","黸黿鼂鼃鼉鼏鼐鼑鼒鼔鼖鼗鼙鼚鼛鼟鼢鼦鼪鼫鼯鼱鼲鼴鼷鼹鼺鼼鼽鼿齁齃",4,"齓齕齖齗齘齚齝齞齨齩齭",4,"齳齵齺齽龏龐龑龒龔龖龗龞龡龢龣龥"]]')},function(t){t.exports=JSON.parse('{"uChars":[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],"gbChars":[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189000]}')},function(t){t.exports=JSON.parse('[["0","\\u0000",127],["8141","갂갃갅갆갋",4,"갘갞갟갡갢갣갥",6,"갮갲갳갴"],["8161","갵갶갷갺갻갽갾갿걁",9,"걌걎",5,"걕"],["8181","걖걗걙걚걛걝",18,"걲걳걵걶걹걻",4,"겂겇겈겍겎겏겑겒겓겕",6,"겞겢",5,"겫겭겮겱",6,"겺겾겿곀곂곃곅곆곇곉곊곋곍",7,"곖곘",7,"곢곣곥곦곩곫곭곮곲곴곷",4,"곾곿괁괂괃괅괇",4,"괎괐괒괓"],["8241","괔괕괖괗괙괚괛괝괞괟괡",7,"괪괫괮",5],["8261","괶괷괹괺괻괽",6,"굆굈굊",5,"굑굒굓굕굖굗"],["8281","굙",7,"굢굤",7,"굮굯굱굲굷굸굹굺굾궀궃",4,"궊궋궍궎궏궑",10,"궞",5,"궥",17,"궸",7,"귂귃귅귆귇귉",6,"귒귔",7,"귝귞귟귡귢귣귥",18],["8341","귺귻귽귾긂",5,"긊긌긎",5,"긕",7],["8361","긝",18,"긲긳긵긶긹긻긼"],["8381","긽긾긿깂깄깇깈깉깋깏깑깒깓깕깗",4,"깞깢깣깤깦깧깪깫깭깮깯깱",6,"깺깾",5,"꺆",5,"꺍",46,"꺿껁껂껃껅",6,"껎껒",5,"껚껛껝",8],["8441","껦껧껩껪껬껮",5,"껵껶껷껹껺껻껽",8],["8461","꼆꼉꼊꼋꼌꼎꼏꼑",18],["8481","꼤",7,"꼮꼯꼱꼳꼵",6,"꼾꽀꽄꽅꽆꽇꽊",5,"꽑",10,"꽞",5,"꽦",18,"꽺",5,"꾁꾂꾃꾅꾆꾇꾉",6,"꾒꾓꾔꾖",5,"꾝",26,"꾺꾻꾽꾾"],["8541","꾿꿁",5,"꿊꿌꿏",4,"꿕",6,"꿝",4],["8561","꿢",5,"꿪",5,"꿲꿳꿵꿶꿷꿹",6,"뀂뀃"],["8581","뀅",6,"뀍뀎뀏뀑뀒뀓뀕",6,"뀞",9,"뀩",26,"끆끇끉끋끍끏끐끑끒끖끘끚끛끜끞",29,"끾끿낁낂낃낅",6,"낎낐낒",5,"낛낝낞낣낤"],["8641","낥낦낧낪낰낲낶낷낹낺낻낽",6,"냆냊",5,"냒"],["8661","냓냕냖냗냙",6,"냡냢냣냤냦",10],["8681","냱",22,"넊넍넎넏넑넔넕넖넗넚넞",4,"넦넧넩넪넫넭",6,"넶넺",5,"녂녃녅녆녇녉",6,"녒녓녖녗녙녚녛녝녞녟녡",22,"녺녻녽녾녿놁놃",4,"놊놌놎놏놐놑놕놖놗놙놚놛놝"],["8741","놞",9,"놩",15],["8761","놹",18,"뇍뇎뇏뇑뇒뇓뇕"],["8781","뇖",5,"뇞뇠",7,"뇪뇫뇭뇮뇯뇱",7,"뇺뇼뇾",5,"눆눇눉눊눍",6,"눖눘눚",5,"눡",18,"눵",6,"눽",26,"뉙뉚뉛뉝뉞뉟뉡",6,"뉪",4],["8841","뉯",4,"뉶",5,"뉽",6,"늆늇늈늊",4],["8861","늏늒늓늕늖늗늛",4,"늢늤늧늨늩늫늭늮늯늱늲늳늵늶늷"],["8881","늸",15,"닊닋닍닎닏닑닓",4,"닚닜닞닟닠닡닣닧닩닪닰닱닲닶닼닽닾댂댃댅댆댇댉",6,"댒댖",5,"댝",54,"덗덙덚덝덠덡덢덣"],["8941","덦덨덪덬덭덯덲덳덵덶덷덹",6,"뎂뎆",5,"뎍"],["8961","뎎뎏뎑뎒뎓뎕",10,"뎢",5,"뎩뎪뎫뎭"],["8981","뎮",21,"돆돇돉돊돍돏돑돒돓돖돘돚돜돞돟돡돢돣돥돦돧돩",18,"돽",18,"됑",6,"됙됚됛됝됞됟됡",6,"됪됬",7,"됵",15],["8a41","둅",10,"둒둓둕둖둗둙",6,"둢둤둦"],["8a61","둧",4,"둭",18,"뒁뒂"],["8a81","뒃",4,"뒉",19,"뒞",5,"뒥뒦뒧뒩뒪뒫뒭",7,"뒶뒸뒺",5,"듁듂듃듅듆듇듉",6,"듑듒듓듔듖",5,"듞듟듡듢듥듧",4,"듮듰듲",5,"듹",26,"딖딗딙딚딝"],["8b41","딞",5,"딦딫",4,"딲딳딵딶딷딹",6,"땂땆"],["8b61","땇땈땉땊땎땏땑땒땓땕",6,"땞땢",8],["8b81","땫",52,"떢떣떥떦떧떩떬떭떮떯떲떶",4,"떾떿뗁뗂뗃뗅",6,"뗎뗒",5,"뗙",18,"뗭",18],["8c41","똀",15,"똒똓똕똖똗똙",4],["8c61","똞",6,"똦",5,"똭",6,"똵",5],["8c81","똻",12,"뙉",26,"뙥뙦뙧뙩",50,"뚞뚟뚡뚢뚣뚥",5,"뚭뚮뚯뚰뚲",16],["8d41","뛃",16,"뛕",8],["8d61","뛞",17,"뛱뛲뛳뛵뛶뛷뛹뛺"],["8d81","뛻",4,"뜂뜃뜄뜆",33,"뜪뜫뜭뜮뜱",6,"뜺뜼",7,"띅띆띇띉띊띋띍",6,"띖",9,"띡띢띣띥띦띧띩",6,"띲띴띶",5,"띾띿랁랂랃랅",6,"랎랓랔랕랚랛랝랞"],["8e41","랟랡",6,"랪랮",5,"랶랷랹",8],["8e61","럂",4,"럈럊",19],["8e81","럞",13,"럮럯럱럲럳럵",6,"럾렂",4,"렊렋렍렎렏렑",6,"렚렜렞",5,"렦렧렩렪렫렭",6,"렶렺",5,"롁롂롃롅",11,"롒롔",7,"롞롟롡롢롣롥",6,"롮롰롲",5,"롹롺롻롽",7],["8f41","뢅",7,"뢎",17],["8f61","뢠",7,"뢩",6,"뢱뢲뢳뢵뢶뢷뢹",4],["8f81","뢾뢿룂룄룆",5,"룍룎룏룑룒룓룕",7,"룞룠룢",5,"룪룫룭룮룯룱",6,"룺룼룾",5,"뤅",18,"뤙",6,"뤡",26,"뤾뤿륁륂륃륅",6,"륍륎륐륒",5],["9041","륚륛륝륞륟륡",6,"륪륬륮",5,"륶륷륹륺륻륽"],["9061","륾",5,"릆릈릋릌릏",15],["9081","릟",12,"릮릯릱릲릳릵",6,"릾맀맂",5,"맊맋맍맓",4,"맚맜맟맠맢맦맧맩맪맫맭",6,"맶맻",4,"먂",5,"먉",11,"먖",33,"먺먻먽먾먿멁멃멄멅멆"],["9141","멇멊멌멏멐멑멒멖멗멙멚멛멝",6,"멦멪",5],["9161","멲멳멵멶멷멹",9,"몆몈몉몊몋몍",5],["9181","몓",20,"몪몭몮몯몱몳",4,"몺몼몾",5,"뫅뫆뫇뫉",14,"뫚",33,"뫽뫾뫿묁묂묃묅",7,"묎묐묒",5,"묙묚묛묝묞묟묡",6],["9241","묨묪묬",7,"묷묹묺묿",4,"뭆뭈뭊뭋뭌뭎뭑뭒"],["9261","뭓뭕뭖뭗뭙",7,"뭢뭤",7,"뭭",4],["9281","뭲",21,"뮉뮊뮋뮍뮎뮏뮑",18,"뮥뮦뮧뮩뮪뮫뮭",6,"뮵뮶뮸",7,"믁믂믃믅믆믇믉",6,"믑믒믔",35,"믺믻믽믾밁"],["9341","밃",4,"밊밎밐밒밓밙밚밠밡밢밣밦밨밪밫밬밮밯밲밳밵"],["9361","밶밷밹",6,"뱂뱆뱇뱈뱊뱋뱎뱏뱑",8],["9381","뱚뱛뱜뱞",37,"벆벇벉벊벍벏",4,"벖벘벛",4,"벢벣벥벦벩",6,"벲벶",5,"벾벿볁볂볃볅",7,"볎볒볓볔볖볗볙볚볛볝",22,"볷볹볺볻볽"],["9441","볾",5,"봆봈봊",5,"봑봒봓봕",8],["9461","봞",5,"봥",6,"봭",12],["9481","봺",5,"뵁",6,"뵊뵋뵍뵎뵏뵑",6,"뵚",9,"뵥뵦뵧뵩",22,"붂붃붅붆붋",4,"붒붔붖붗붘붛붝",6,"붥",10,"붱",6,"붹",24],["9541","뷒뷓뷖뷗뷙뷚뷛뷝",11,"뷪",5,"뷱"],["9561","뷲뷳뷵뷶뷷뷹",6,"븁븂븄븆",5,"븎븏븑븒븓"],["9581","븕",6,"븞븠",35,"빆빇빉빊빋빍빏",4,"빖빘빜빝빞빟빢빣빥빦빧빩빫",4,"빲빶",4,"빾빿뺁뺂뺃뺅",6,"뺎뺒",5,"뺚",13,"뺩",14],["9641","뺸",23,"뻒뻓"],["9661","뻕뻖뻙",6,"뻡뻢뻦",5,"뻭",8],["9681","뻶",10,"뼂",5,"뼊",13,"뼚뼞",33,"뽂뽃뽅뽆뽇뽉",6,"뽒뽓뽔뽖",44],["9741","뾃",16,"뾕",8],["9761","뾞",17,"뾱",7],["9781","뾹",11,"뿆",5,"뿎뿏뿑뿒뿓뿕",6,"뿝뿞뿠뿢",89,"쀽쀾쀿"],["9841","쁀",16,"쁒",5,"쁙쁚쁛"],["9861","쁝쁞쁟쁡",6,"쁪",15],["9881","쁺",21,"삒삓삕삖삗삙",6,"삢삤삦",5,"삮삱삲삷",4,"삾샂샃샄샆샇샊샋샍샎샏샑",6,"샚샞",5,"샦샧샩샪샫샭",6,"샶샸샺",5,"섁섂섃섅섆섇섉",6,"섑섒섓섔섖",5,"섡섢섥섨섩섪섫섮"],["9941","섲섳섴섵섷섺섻섽섾섿셁",6,"셊셎",5,"셖셗"],["9961","셙셚셛셝",6,"셦셪",5,"셱셲셳셵셶셷셹셺셻"],["9981","셼",8,"솆",5,"솏솑솒솓솕솗",4,"솞솠솢솣솤솦솧솪솫솭솮솯솱",11,"솾",5,"쇅쇆쇇쇉쇊쇋쇍",6,"쇕쇖쇙",6,"쇡쇢쇣쇥쇦쇧쇩",6,"쇲쇴",7,"쇾쇿숁숂숃숅",6,"숎숐숒",5,"숚숛숝숞숡숢숣"],["9a41","숤숥숦숧숪숬숮숰숳숵",16],["9a61","쉆쉇쉉",6,"쉒쉓쉕쉖쉗쉙",6,"쉡쉢쉣쉤쉦"],["9a81","쉧",4,"쉮쉯쉱쉲쉳쉵",6,"쉾슀슂",5,"슊",5,"슑",6,"슙슚슜슞",5,"슦슧슩슪슫슮",5,"슶슸슺",33,"싞싟싡싢싥",5,"싮싰싲싳싴싵싷싺싽싾싿쌁",6,"쌊쌋쌎쌏"],["9b41","쌐쌑쌒쌖쌗쌙쌚쌛쌝",6,"쌦쌧쌪",8],["9b61","쌳",17,"썆",7],["9b81","썎",25,"썪썫썭썮썯썱썳",4,"썺썻썾",5,"쎅쎆쎇쎉쎊쎋쎍",50,"쏁",22,"쏚"],["9c41","쏛쏝쏞쏡쏣",4,"쏪쏫쏬쏮",5,"쏶쏷쏹",5],["9c61","쏿",8,"쐉",6,"쐑",9],["9c81","쐛",8,"쐥",6,"쐭쐮쐯쐱쐲쐳쐵",6,"쐾",9,"쑉",26,"쑦쑧쑩쑪쑫쑭",6,"쑶쑷쑸쑺",5,"쒁",18,"쒕",6,"쒝",12],["9d41","쒪",13,"쒹쒺쒻쒽",8],["9d61","쓆",25],["9d81","쓠",8,"쓪",5,"쓲쓳쓵쓶쓷쓹쓻쓼쓽쓾씂",9,"씍씎씏씑씒씓씕",6,"씝",10,"씪씫씭씮씯씱",6,"씺씼씾",5,"앆앇앋앏앐앑앒앖앚앛앜앟앢앣앥앦앧앩",6,"앲앶",5,"앾앿얁얂얃얅얆얈얉얊얋얎얐얒얓얔"],["9e41","얖얙얚얛얝얞얟얡",7,"얪",9,"얶"],["9e61","얷얺얿",4,"엋엍엏엒엓엕엖엗엙",6,"엢엤엦엧"],["9e81","엨엩엪엫엯엱엲엳엵엸엹엺엻옂옃옄옉옊옋옍옎옏옑",6,"옚옝",6,"옦옧옩옪옫옯옱옲옶옸옺옼옽옾옿왂왃왅왆왇왉",6,"왒왖",5,"왞왟왡",10,"왭왮왰왲",5,"왺왻왽왾왿욁",6,"욊욌욎",5,"욖욗욙욚욛욝",6,"욦"],["9f41","욨욪",5,"욲욳욵욶욷욻",4,"웂웄웆",5,"웎"],["9f61","웏웑웒웓웕",6,"웞웟웢",5,"웪웫웭웮웯웱웲"],["9f81","웳",4,"웺웻웼웾",5,"윆윇윉윊윋윍",6,"윖윘윚",5,"윢윣윥윦윧윩",6,"윲윴윶윸윹윺윻윾윿읁읂읃읅",4,"읋읎읐읙읚읛읝읞읟읡",6,"읩읪읬",7,"읶읷읹읺읻읿잀잁잂잆잋잌잍잏잒잓잕잙잛",4,"잢잧",4,"잮잯잱잲잳잵잶잷"],["a041","잸잹잺잻잾쟂",5,"쟊쟋쟍쟏쟑",6,"쟙쟚쟛쟜"],["a061","쟞",5,"쟥쟦쟧쟩쟪쟫쟭",13],["a081","쟻",4,"젂젃젅젆젇젉젋",4,"젒젔젗",4,"젞젟젡젢젣젥",6,"젮젰젲",5,"젹젺젻젽젾젿졁",6,"졊졋졎",5,"졕",26,"졲졳졵졶졷졹졻",4,"좂좄좈좉좊좎",5,"좕",7,"좞좠좢좣좤"],["a141","좥좦좧좩",18,"좾좿죀죁"],["a161","죂죃죅죆죇죉죊죋죍",6,"죖죘죚",5,"죢죣죥"],["a181","죦",14,"죶",5,"죾죿줁줂줃줇",4,"줎　、。·‥…¨〃­―∥＼∼‘’“”〔〕〈",9,"±×÷≠≤≥∞∴°′″℃Å￠￡￥♂♀∠⊥⌒∂∇≡≒§※☆★○●◎◇◆□■△▲▽▼→←↑↓↔〓≪≫√∽∝∵∫∬∈∋⊆⊇⊂⊃∪∩∧∨￢"],["a241","줐줒",5,"줙",18],["a261","줭",6,"줵",18],["a281","쥈",7,"쥒쥓쥕쥖쥗쥙",6,"쥢쥤",7,"쥭쥮쥯⇒⇔∀∃´～ˇ˘˝˚˙¸˛¡¿ː∮∑∏¤℉‰◁◀▷▶♤♠♡♥♧♣⊙◈▣◐◑▒▤▥▨▧▦▩♨☏☎☜☞¶†‡↕↗↙↖↘♭♩♪♬㉿㈜№㏇™㏂㏘℡€®"],["a341","쥱쥲쥳쥵",6,"쥽",10,"즊즋즍즎즏"],["a361","즑",6,"즚즜즞",16],["a381","즯",16,"짂짃짅짆짉짋",4,"짒짔짗짘짛！",58,"￦］",32,"￣"],["a441","짞짟짡짣짥짦짨짩짪짫짮짲",5,"짺짻짽짾짿쨁쨂쨃쨄"],["a461","쨅쨆쨇쨊쨎",5,"쨕쨖쨗쨙",12],["a481","쨦쨧쨨쨪",28,"ㄱ",93],["a541","쩇",4,"쩎쩏쩑쩒쩓쩕",6,"쩞쩢",5,"쩩쩪"],["a561","쩫",17,"쩾",5,"쪅쪆"],["a581","쪇",16,"쪙",14,"ⅰ",9],["a5b0","Ⅰ",9],["a5c1","Α",16,"Σ",6],["a5e1","α",16,"σ",6],["a641","쪨",19,"쪾쪿쫁쫂쫃쫅"],["a661","쫆",5,"쫎쫐쫒쫔쫕쫖쫗쫚",5,"쫡",6],["a681","쫨쫩쫪쫫쫭",6,"쫵",18,"쬉쬊─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂┒┑┚┙┖┕┎┍┞┟┡┢┦┧┩┪┭┮┱┲┵┶┹┺┽┾╀╁╃",7],["a741","쬋",4,"쬑쬒쬓쬕쬖쬗쬙",6,"쬢",7],["a761","쬪",22,"쭂쭃쭄"],["a781","쭅쭆쭇쭊쭋쭍쭎쭏쭑",6,"쭚쭛쭜쭞",5,"쭥",7,"㎕㎖㎗ℓ㎘㏄㎣㎤㎥㎦㎙",9,"㏊㎍㎎㎏㏏㎈㎉㏈㎧㎨㎰",9,"㎀",4,"㎺",5,"㎐",4,"Ω㏀㏁㎊㎋㎌㏖㏅㎭㎮㎯㏛㎩㎪㎫㎬㏝㏐㏓㏃㏉㏜㏆"],["a841","쭭",10,"쭺",14],["a861","쮉",18,"쮝",6],["a881","쮤",19,"쮹",11,"ÆÐªĦ"],["a8a6","Ĳ"],["a8a8","ĿŁØŒºÞŦŊ"],["a8b1","㉠",27,"ⓐ",25,"①",14,"½⅓⅔¼¾⅛⅜⅝⅞"],["a941","쯅",14,"쯕",10],["a961","쯠쯡쯢쯣쯥쯦쯨쯪",18],["a981","쯽",14,"찎찏찑찒찓찕",6,"찞찟찠찣찤æđðħıĳĸŀłøœßþŧŋŉ㈀",27,"⒜",25,"⑴",14,"¹²³⁴ⁿ₁₂₃₄"],["aa41","찥찦찪찫찭찯찱",6,"찺찿",4,"챆챇챉챊챋챍챎"],["aa61","챏",4,"챖챚",5,"챡챢챣챥챧챩",6,"챱챲"],["aa81","챳챴챶",29,"ぁ",82],["ab41","첔첕첖첗첚첛첝첞첟첡",6,"첪첮",5,"첶첷첹"],["ab61","첺첻첽",6,"쳆쳈쳊",5,"쳑쳒쳓쳕",5],["ab81","쳛",8,"쳥",6,"쳭쳮쳯쳱",12,"ァ",85],["ac41","쳾쳿촀촂",5,"촊촋촍촎촏촑",6,"촚촜촞촟촠"],["ac61","촡촢촣촥촦촧촩촪촫촭",11,"촺",4],["ac81","촿",28,"쵝쵞쵟А",5,"ЁЖ",25],["acd1","а",5,"ёж",25],["ad41","쵡쵢쵣쵥",6,"쵮쵰쵲",5,"쵹",7],["ad61","춁",6,"춉",10,"춖춗춙춚춛춝춞춟"],["ad81","춠춡춢춣춦춨춪",5,"춱",18,"췅"],["ae41","췆",5,"췍췎췏췑",16],["ae61","췢",5,"췩췪췫췭췮췯췱",6,"췺췼췾",4],["ae81","츃츅츆츇츉츊츋츍",6,"츕츖츗츘츚",5,"츢츣츥츦츧츩츪츫"],["af41","츬츭츮츯츲츴츶",19],["af61","칊",13,"칚칛칝칞칢",5,"칪칬"],["af81","칮",5,"칶칷칹칺칻칽",6,"캆캈캊",5,"캒캓캕캖캗캙"],["b041","캚",5,"캢캦",5,"캮",12],["b061","캻",5,"컂",19],["b081","컖",13,"컦컧컩컪컭",6,"컶컺",5,"가각간갇갈갉갊감",7,"같",4,"갠갤갬갭갯갰갱갸갹갼걀걋걍걔걘걜거걱건걷걸걺검겁것겄겅겆겉겊겋게겐겔겜겝겟겠겡겨격겪견겯결겸겹겻겼경곁계곈곌곕곗고곡곤곧골곪곬곯곰곱곳공곶과곽관괄괆"],["b141","켂켃켅켆켇켉",6,"켒켔켖",5,"켝켞켟켡켢켣"],["b161","켥",6,"켮켲",5,"켹",11],["b181","콅",14,"콖콗콙콚콛콝",6,"콦콨콪콫콬괌괍괏광괘괜괠괩괬괭괴괵괸괼굄굅굇굉교굔굘굡굣구국군굳굴굵굶굻굼굽굿궁궂궈궉권궐궜궝궤궷귀귁귄귈귐귑귓규균귤그극근귿글긁금급긋긍긔기긱긴긷길긺김깁깃깅깆깊까깍깎깐깔깖깜깝깟깠깡깥깨깩깬깰깸"],["b241","콭콮콯콲콳콵콶콷콹",6,"쾁쾂쾃쾄쾆",5,"쾍"],["b261","쾎",18,"쾢",5,"쾩"],["b281","쾪",5,"쾱",18,"쿅",6,"깹깻깼깽꺄꺅꺌꺼꺽꺾껀껄껌껍껏껐껑께껙껜껨껫껭껴껸껼꼇꼈꼍꼐꼬꼭꼰꼲꼴꼼꼽꼿꽁꽂꽃꽈꽉꽐꽜꽝꽤꽥꽹꾀꾄꾈꾐꾑꾕꾜꾸꾹꾼꿀꿇꿈꿉꿋꿍꿎꿔꿜꿨꿩꿰꿱꿴꿸뀀뀁뀄뀌뀐뀔뀜뀝뀨끄끅끈끊끌끎끓끔끕끗끙"],["b341","쿌",19,"쿢쿣쿥쿦쿧쿩"],["b361","쿪",5,"쿲쿴쿶",5,"쿽쿾쿿퀁퀂퀃퀅",5],["b381","퀋",5,"퀒",5,"퀙",19,"끝끼끽낀낄낌낍낏낑나낙낚난낟날낡낢남납낫",4,"낱낳내낵낸낼냄냅냇냈냉냐냑냔냘냠냥너넉넋넌널넒넓넘넙넛넜넝넣네넥넨넬넴넵넷넸넹녀녁년녈념녑녔녕녘녜녠노녹논놀놂놈놉놋농높놓놔놘놜놨뇌뇐뇔뇜뇝"],["b441","퀮",5,"퀶퀷퀹퀺퀻퀽",6,"큆큈큊",5],["b461","큑큒큓큕큖큗큙",6,"큡",10,"큮큯"],["b481","큱큲큳큵",6,"큾큿킀킂",18,"뇟뇨뇩뇬뇰뇹뇻뇽누눅눈눋눌눔눕눗눙눠눴눼뉘뉜뉠뉨뉩뉴뉵뉼늄늅늉느늑는늘늙늚늠늡늣능늦늪늬늰늴니닉닌닐닒님닙닛닝닢다닥닦단닫",4,"닳담답닷",4,"닿대댁댄댈댐댑댓댔댕댜더덕덖던덛덜덞덟덤덥"],["b541","킕",14,"킦킧킩킪킫킭",5],["b561","킳킶킸킺",5,"탂탃탅탆탇탊",5,"탒탖",4],["b581","탛탞탟탡탢탣탥",6,"탮탲",5,"탹",11,"덧덩덫덮데덱덴델뎀뎁뎃뎄뎅뎌뎐뎔뎠뎡뎨뎬도독돈돋돌돎돐돔돕돗동돛돝돠돤돨돼됐되된될됨됩됫됴두둑둔둘둠둡둣둥둬뒀뒈뒝뒤뒨뒬뒵뒷뒹듀듄듈듐듕드득든듣들듦듬듭듯등듸디딕딘딛딜딤딥딧딨딩딪따딱딴딸"],["b641","턅",7,"턎",17],["b661","턠",15,"턲턳턵턶턷턹턻턼턽턾"],["b681","턿텂텆",5,"텎텏텑텒텓텕",6,"텞텠텢",5,"텩텪텫텭땀땁땃땄땅땋때땍땐땔땜땝땟땠땡떠떡떤떨떪떫떰떱떳떴떵떻떼떽뗀뗄뗌뗍뗏뗐뗑뗘뗬또똑똔똘똥똬똴뙈뙤뙨뚜뚝뚠뚤뚫뚬뚱뛔뛰뛴뛸뜀뜁뜅뜨뜩뜬뜯뜰뜸뜹뜻띄띈띌띔띕띠띤띨띰띱띳띵라락란랄람랍랏랐랑랒랖랗"],["b741","텮",13,"텽",6,"톅톆톇톉톊"],["b761","톋",20,"톢톣톥톦톧"],["b781","톩",6,"톲톴톶톷톸톹톻톽톾톿퇁",14,"래랙랜랠램랩랫랬랭랴략랸럇량러럭런럴럼럽럿렀렁렇레렉렌렐렘렙렛렝려력련렬렴렵렷렸령례롄롑롓로록론롤롬롭롯롱롸롼뢍뢨뢰뢴뢸룀룁룃룅료룐룔룝룟룡루룩룬룰룸룹룻룽뤄뤘뤠뤼뤽륀륄륌륏륑류륙륜률륨륩"],["b841","퇐",7,"퇙",17],["b861","퇫",8,"퇵퇶퇷퇹",13],["b881","툈툊",5,"툑",24,"륫륭르륵른를름릅릇릉릊릍릎리릭린릴림립릿링마막만많",4,"맘맙맛망맞맡맣매맥맨맬맴맵맷맸맹맺먀먁먈먕머먹먼멀멂멈멉멋멍멎멓메멕멘멜멤멥멧멨멩며멱면멸몃몄명몇몌모목몫몬몰몲몸몹못몽뫄뫈뫘뫙뫼"],["b941","툪툫툮툯툱툲툳툵",6,"툾퉀퉂",5,"퉉퉊퉋퉌"],["b961","퉍",14,"퉝",6,"퉥퉦퉧퉨"],["b981","퉩",22,"튂튃튅튆튇튉튊튋튌묀묄묍묏묑묘묜묠묩묫무묵묶문묻물묽묾뭄뭅뭇뭉뭍뭏뭐뭔뭘뭡뭣뭬뮈뮌뮐뮤뮨뮬뮴뮷므믄믈믐믓미믹민믿밀밂밈밉밋밌밍및밑바",4,"받",4,"밤밥밧방밭배백밴밸뱀뱁뱃뱄뱅뱉뱌뱍뱐뱝버벅번벋벌벎범법벗"],["ba41","튍튎튏튒튓튔튖",5,"튝튞튟튡튢튣튥",6,"튭"],["ba61","튮튯튰튲",5,"튺튻튽튾틁틃",4,"틊틌",5],["ba81","틒틓틕틖틗틙틚틛틝",6,"틦",9,"틲틳틵틶틷틹틺벙벚베벡벤벧벨벰벱벳벴벵벼벽변별볍볏볐병볕볘볜보복볶본볼봄봅봇봉봐봔봤봬뵀뵈뵉뵌뵐뵘뵙뵤뵨부북분붇불붉붊붐붑붓붕붙붚붜붤붰붸뷔뷕뷘뷜뷩뷰뷴뷸븀븃븅브븍븐블븜븝븟비빅빈빌빎빔빕빗빙빚빛빠빡빤"],["bb41","틻",4,"팂팄팆",5,"팏팑팒팓팕팗",4,"팞팢팣"],["bb61","팤팦팧팪팫팭팮팯팱",6,"팺팾",5,"퍆퍇퍈퍉"],["bb81","퍊",31,"빨빪빰빱빳빴빵빻빼빽뺀뺄뺌뺍뺏뺐뺑뺘뺙뺨뻐뻑뻔뻗뻘뻠뻣뻤뻥뻬뼁뼈뼉뼘뼙뼛뼜뼝뽀뽁뽄뽈뽐뽑뽕뾔뾰뿅뿌뿍뿐뿔뿜뿟뿡쀼쁑쁘쁜쁠쁨쁩삐삑삔삘삠삡삣삥사삭삯산삳살삵삶삼삽삿샀상샅새색샌샐샘샙샛샜생샤"],["bc41","퍪",17,"퍾퍿펁펂펃펅펆펇"],["bc61","펈펉펊펋펎펒",5,"펚펛펝펞펟펡",6,"펪펬펮"],["bc81","펯",4,"펵펶펷펹펺펻펽",6,"폆폇폊",5,"폑",5,"샥샨샬샴샵샷샹섀섄섈섐섕서",4,"섣설섦섧섬섭섯섰성섶세섹센셀셈셉셋셌셍셔셕션셜셤셥셧셨셩셰셴셸솅소속솎손솔솖솜솝솟송솥솨솩솬솰솽쇄쇈쇌쇔쇗쇘쇠쇤쇨쇰쇱쇳쇼쇽숀숄숌숍숏숑수숙순숟술숨숩숫숭"],["bd41","폗폙",7,"폢폤",7,"폮폯폱폲폳폵폶폷"],["bd61","폸폹폺폻폾퐀퐂",5,"퐉",13],["bd81","퐗",5,"퐞",25,"숯숱숲숴쉈쉐쉑쉔쉘쉠쉥쉬쉭쉰쉴쉼쉽쉿슁슈슉슐슘슛슝스슥슨슬슭슴습슷승시식신싣실싫심십싯싱싶싸싹싻싼쌀쌈쌉쌌쌍쌓쌔쌕쌘쌜쌤쌥쌨쌩썅써썩썬썰썲썸썹썼썽쎄쎈쎌쏀쏘쏙쏜쏟쏠쏢쏨쏩쏭쏴쏵쏸쐈쐐쐤쐬쐰"],["be41","퐸",7,"푁푂푃푅",14],["be61","푔",7,"푝푞푟푡푢푣푥",7,"푮푰푱푲"],["be81","푳",4,"푺푻푽푾풁풃",4,"풊풌풎",5,"풕",8,"쐴쐼쐽쑈쑤쑥쑨쑬쑴쑵쑹쒀쒔쒜쒸쒼쓩쓰쓱쓴쓸쓺쓿씀씁씌씐씔씜씨씩씬씰씸씹씻씽아악안앉않알앍앎앓암압앗았앙앝앞애액앤앨앰앱앳앴앵야약얀얄얇얌얍얏양얕얗얘얜얠얩어억언얹얻얼얽얾엄",6,"엌엎"],["bf41","풞",10,"풪",14],["bf61","풹",18,"퓍퓎퓏퓑퓒퓓퓕"],["bf81","퓖",5,"퓝퓞퓠",7,"퓩퓪퓫퓭퓮퓯퓱",6,"퓹퓺퓼에엑엔엘엠엡엣엥여역엮연열엶엷염",5,"옅옆옇예옌옐옘옙옛옜오옥온올옭옮옰옳옴옵옷옹옻와왁완왈왐왑왓왔왕왜왝왠왬왯왱외왹왼욀욈욉욋욍요욕욘욜욤욥욧용우욱운울욹욺움웁웃웅워웍원월웜웝웠웡웨"],["c041","퓾",5,"픅픆픇픉픊픋픍",6,"픖픘",5],["c061","픞",25],["c081","픸픹픺픻픾픿핁핂핃핅",6,"핎핐핒",5,"핚핛핝핞핟핡핢핣웩웬웰웸웹웽위윅윈윌윔윕윗윙유육윤율윰윱윳융윷으윽은을읊음읍읏응",7,"읜읠읨읫이익인일읽읾잃임입잇있잉잊잎자작잔잖잗잘잚잠잡잣잤장잦재잭잰잴잼잽잿쟀쟁쟈쟉쟌쟎쟐쟘쟝쟤쟨쟬저적전절젊"],["c141","핤핦핧핪핬핮",5,"핶핷핹핺핻핽",6,"햆햊햋"],["c161","햌햍햎햏햑",19,"햦햧"],["c181","햨",31,"점접젓정젖제젝젠젤젬젭젯젱져젼졀졈졉졌졍졔조족존졸졺좀좁좃종좆좇좋좌좍좔좝좟좡좨좼좽죄죈죌죔죕죗죙죠죡죤죵주죽준줄줅줆줌줍줏중줘줬줴쥐쥑쥔쥘쥠쥡쥣쥬쥰쥴쥼즈즉즌즐즘즙즛증지직진짇질짊짐집짓"],["c241","헊헋헍헎헏헑헓",4,"헚헜헞",5,"헦헧헩헪헫헭헮"],["c261","헯",4,"헶헸헺",5,"혂혃혅혆혇혉",6,"혒"],["c281","혖",5,"혝혞혟혡혢혣혥",7,"혮",9,"혺혻징짖짙짚짜짝짠짢짤짧짬짭짯짰짱째짹짼쨀쨈쨉쨋쨌쨍쨔쨘쨩쩌쩍쩐쩔쩜쩝쩟쩠쩡쩨쩽쪄쪘쪼쪽쫀쫄쫌쫍쫏쫑쫓쫘쫙쫠쫬쫴쬈쬐쬔쬘쬠쬡쭁쭈쭉쭌쭐쭘쭙쭝쭤쭸쭹쮜쮸쯔쯤쯧쯩찌찍찐찔찜찝찡찢찧차착찬찮찰참찹찻"],["c341","혽혾혿홁홂홃홄홆홇홊홌홎홏홐홒홓홖홗홙홚홛홝",4],["c361","홢",4,"홨홪",5,"홲홳홵",11],["c381","횁횂횄횆",5,"횎횏횑횒횓횕",7,"횞횠횢",5,"횩횪찼창찾채책챈챌챔챕챗챘챙챠챤챦챨챰챵처척천철첨첩첫첬청체첵첸첼쳄쳅쳇쳉쳐쳔쳤쳬쳰촁초촉촌촐촘촙촛총촤촨촬촹최쵠쵤쵬쵭쵯쵱쵸춈추축춘출춤춥춧충춰췄췌췐취췬췰췸췹췻췽츄츈츌츔츙츠측츤츨츰츱츳층"],["c441","횫횭횮횯횱",7,"횺횼",7,"훆훇훉훊훋"],["c461","훍훎훏훐훒훓훕훖훘훚",5,"훡훢훣훥훦훧훩",4],["c481","훮훯훱훲훳훴훶",5,"훾훿휁휂휃휅",11,"휒휓휔치칙친칟칠칡침칩칫칭카칵칸칼캄캅캇캉캐캑캔캘캠캡캣캤캥캬캭컁커컥컨컫컬컴컵컷컸컹케켁켄켈켐켑켓켕켜켠켤켬켭켯켰켱켸코콕콘콜콤콥콧콩콰콱콴콸쾀쾅쾌쾡쾨쾰쿄쿠쿡쿤쿨쿰쿱쿳쿵쿼퀀퀄퀑퀘퀭퀴퀵퀸퀼"],["c541","휕휖휗휚휛휝휞휟휡",6,"휪휬휮",5,"휶휷휹"],["c561","휺휻휽",6,"흅흆흈흊",5,"흒흓흕흚",4],["c581","흟흢흤흦흧흨흪흫흭흮흯흱흲흳흵",6,"흾흿힀힂",5,"힊힋큄큅큇큉큐큔큘큠크큭큰클큼큽킁키킥킨킬킴킵킷킹타탁탄탈탉탐탑탓탔탕태택탠탤탬탭탯탰탱탸턍터턱턴털턺텀텁텃텄텅테텍텐텔템텝텟텡텨텬텼톄톈토톡톤톨톰톱톳통톺톼퇀퇘퇴퇸툇툉툐투툭툰툴툼툽툿퉁퉈퉜"],["c641","힍힎힏힑",6,"힚힜힞",5],["c6a1","퉤튀튁튄튈튐튑튕튜튠튤튬튱트특튼튿틀틂틈틉틋틔틘틜틤틥티틱틴틸팀팁팃팅파팍팎판팔팖팜팝팟팠팡팥패팩팬팰팸팹팻팼팽퍄퍅퍼퍽펀펄펌펍펏펐펑페펙펜펠펨펩펫펭펴편펼폄폅폈평폐폘폡폣포폭폰폴폼폽폿퐁"],["c7a1","퐈퐝푀푄표푠푤푭푯푸푹푼푿풀풂품풉풋풍풔풩퓌퓐퓔퓜퓟퓨퓬퓰퓸퓻퓽프픈플픔픕픗피픽핀필핌핍핏핑하학한할핥함합핫항해핵핸핼햄햅햇했행햐향허헉헌헐헒험헙헛헝헤헥헨헬헴헵헷헹혀혁현혈혐협혓혔형혜혠"],["c8a1","혤혭호혹혼홀홅홈홉홋홍홑화확환활홧황홰홱홴횃횅회획횐횔횝횟횡효횬횰횹횻후훅훈훌훑훔훗훙훠훤훨훰훵훼훽휀휄휑휘휙휜휠휨휩휫휭휴휵휸휼흄흇흉흐흑흔흖흗흘흙흠흡흣흥흩희흰흴흼흽힁히힉힌힐힘힙힛힝"],["caa1","伽佳假價加可呵哥嘉嫁家暇架枷柯歌珂痂稼苛茄街袈訶賈跏軻迦駕刻却各恪慤殼珏脚覺角閣侃刊墾奸姦干幹懇揀杆柬桿澗癎看磵稈竿簡肝艮艱諫間乫喝曷渴碣竭葛褐蝎鞨勘坎堪嵌感憾戡敢柑橄減甘疳監瞰紺邯鑑鑒龕"],["cba1","匣岬甲胛鉀閘剛堈姜岡崗康强彊慷江畺疆糠絳綱羌腔舡薑襁講鋼降鱇介价個凱塏愷愾慨改槪漑疥皆盖箇芥蓋豈鎧開喀客坑更粳羹醵倨去居巨拒据據擧渠炬祛距踞車遽鉅鋸乾件健巾建愆楗腱虔蹇鍵騫乞傑杰桀儉劍劒檢"],["cca1","瞼鈐黔劫怯迲偈憩揭擊格檄激膈覡隔堅牽犬甄絹繭肩見譴遣鵑抉決潔結缺訣兼慊箝謙鉗鎌京俓倞傾儆勁勍卿坰境庚徑慶憬擎敬景暻更梗涇炅烱璟璥瓊痙硬磬竟競絅經耕耿脛莖警輕逕鏡頃頸驚鯨係啓堺契季屆悸戒桂械"],["cda1","棨溪界癸磎稽系繫繼計誡谿階鷄古叩告呱固姑孤尻庫拷攷故敲暠枯槁沽痼皐睾稿羔考股膏苦苽菰藁蠱袴誥賈辜錮雇顧高鼓哭斛曲梏穀谷鵠困坤崑昆梱棍滾琨袞鯤汨滑骨供公共功孔工恐恭拱控攻珙空蚣貢鞏串寡戈果瓜"],["cea1","科菓誇課跨過鍋顆廓槨藿郭串冠官寬慣棺款灌琯瓘管罐菅觀貫關館刮恝括适侊光匡壙廣曠洸炚狂珖筐胱鑛卦掛罫乖傀塊壞怪愧拐槐魁宏紘肱轟交僑咬喬嬌嶠巧攪敎校橋狡皎矯絞翹膠蕎蛟較轎郊餃驕鮫丘久九仇俱具勾"],["cfa1","區口句咎嘔坵垢寇嶇廐懼拘救枸柩構歐毆毬求溝灸狗玖球瞿矩究絿耉臼舅舊苟衢謳購軀逑邱鉤銶駒驅鳩鷗龜國局菊鞠鞫麴君窘群裙軍郡堀屈掘窟宮弓穹窮芎躬倦券勸卷圈拳捲權淃眷厥獗蕨蹶闕机櫃潰詭軌饋句晷歸貴"],["d0a1","鬼龜叫圭奎揆槻珪硅窺竅糾葵規赳逵閨勻均畇筠菌鈞龜橘克剋劇戟棘極隙僅劤勤懃斤根槿瑾筋芹菫覲謹近饉契今妗擒昑檎琴禁禽芩衾衿襟金錦伋及急扱汲級給亘兢矜肯企伎其冀嗜器圻基埼夔奇妓寄岐崎己幾忌技旗旣"],["d1a1","朞期杞棋棄機欺氣汽沂淇玘琦琪璂璣畸畿碁磯祁祇祈祺箕紀綺羈耆耭肌記譏豈起錡錤飢饑騎騏驥麒緊佶吉拮桔金喫儺喇奈娜懦懶拏拿癩",5,"那樂",4,"諾酪駱亂卵暖欄煖爛蘭難鸞捏捺南嵐枏楠湳濫男藍襤拉"],["d2a1","納臘蠟衲囊娘廊",4,"乃來內奈柰耐冷女年撚秊念恬拈捻寧寗努勞奴弩怒擄櫓爐瑙盧",5,"駑魯",10,"濃籠聾膿農惱牢磊腦賂雷尿壘",7,"嫩訥杻紐勒",5,"能菱陵尼泥匿溺多茶"],["d3a1","丹亶但單團壇彖斷旦檀段湍短端簞緞蛋袒鄲鍛撻澾獺疸達啖坍憺擔曇淡湛潭澹痰聃膽蕁覃談譚錟沓畓答踏遝唐堂塘幢戇撞棠當糖螳黨代垈坮大對岱帶待戴擡玳臺袋貸隊黛宅德悳倒刀到圖堵塗導屠島嶋度徒悼挑掉搗桃"],["d4a1","棹櫂淘渡滔濤燾盜睹禱稻萄覩賭跳蹈逃途道都鍍陶韜毒瀆牘犢獨督禿篤纛讀墩惇敦旽暾沌焞燉豚頓乭突仝冬凍動同憧東桐棟洞潼疼瞳童胴董銅兜斗杜枓痘竇荳讀豆逗頭屯臀芚遁遯鈍得嶝橙燈登等藤謄鄧騰喇懶拏癩羅"],["d5a1","蘿螺裸邏樂洛烙珞絡落諾酪駱丹亂卵欄欒瀾爛蘭鸞剌辣嵐擥攬欖濫籃纜藍襤覽拉臘蠟廊朗浪狼琅瑯螂郞來崍徠萊冷掠略亮倆兩凉梁樑粮粱糧良諒輛量侶儷勵呂廬慮戾旅櫚濾礪藜蠣閭驢驪麗黎力曆歷瀝礫轢靂憐戀攣漣"],["d6a1","煉璉練聯蓮輦連鍊冽列劣洌烈裂廉斂殮濂簾獵令伶囹寧岺嶺怜玲笭羚翎聆逞鈴零靈領齡例澧禮醴隷勞怒撈擄櫓潞瀘爐盧老蘆虜路輅露魯鷺鹵碌祿綠菉錄鹿麓論壟弄朧瀧瓏籠聾儡瀨牢磊賂賚賴雷了僚寮廖料燎療瞭聊蓼"],["d7a1","遼鬧龍壘婁屢樓淚漏瘻累縷蔞褸鏤陋劉旒柳榴流溜瀏琉瑠留瘤硫謬類六戮陸侖倫崙淪綸輪律慄栗率隆勒肋凜凌楞稜綾菱陵俚利厘吏唎履悧李梨浬犁狸理璃異痢籬罹羸莉裏裡里釐離鯉吝潾燐璘藺躪隣鱗麟林淋琳臨霖砬"],["d8a1","立笠粒摩瑪痲碼磨馬魔麻寞幕漠膜莫邈万卍娩巒彎慢挽晩曼滿漫灣瞞萬蔓蠻輓饅鰻唜抹末沫茉襪靺亡妄忘忙望網罔芒茫莽輞邙埋妹媒寐昧枚梅每煤罵買賣邁魅脈貊陌驀麥孟氓猛盲盟萌冪覓免冕勉棉沔眄眠綿緬面麵滅"],["d9a1","蔑冥名命明暝椧溟皿瞑茗蓂螟酩銘鳴袂侮冒募姆帽慕摸摹暮某模母毛牟牡瑁眸矛耗芼茅謀謨貌木沐牧目睦穆鶩歿沒夢朦蒙卯墓妙廟描昴杳渺猫竗苗錨務巫憮懋戊拇撫无楙武毋無珷畝繆舞茂蕪誣貿霧鵡墨默們刎吻問文"],["daa1","汶紊紋聞蚊門雯勿沕物味媚尾嵋彌微未梶楣渼湄眉米美薇謎迷靡黴岷悶愍憫敏旻旼民泯玟珉緡閔密蜜謐剝博拍搏撲朴樸泊珀璞箔粕縛膊舶薄迫雹駁伴半反叛拌搬攀斑槃泮潘班畔瘢盤盼磐磻礬絆般蟠返頒飯勃拔撥渤潑"],["dba1","發跋醱鉢髮魃倣傍坊妨尨幇彷房放方旁昉枋榜滂磅紡肪膀舫芳蒡蚌訪謗邦防龐倍俳北培徘拜排杯湃焙盃背胚裴裵褙賠輩配陪伯佰帛柏栢白百魄幡樊煩燔番磻繁蕃藩飜伐筏罰閥凡帆梵氾汎泛犯範范法琺僻劈壁擘檗璧癖"],["dca1","碧蘗闢霹便卞弁變辨辯邊別瞥鱉鼈丙倂兵屛幷昞昺柄棅炳甁病秉竝輧餠騈保堡報寶普步洑湺潽珤甫菩補褓譜輔伏僕匐卜宓復服福腹茯蔔複覆輹輻馥鰒本乶俸奉封峯峰捧棒烽熢琫縫蓬蜂逢鋒鳳不付俯傅剖副否咐埠夫婦"],["dda1","孚孵富府復扶敷斧浮溥父符簿缶腐腑膚艀芙莩訃負賦賻赴趺部釜阜附駙鳧北分吩噴墳奔奮忿憤扮昐汾焚盆粉糞紛芬賁雰不佛弗彿拂崩朋棚硼繃鵬丕備匕匪卑妃婢庇悲憊扉批斐枇榧比毖毗毘沸泌琵痺砒碑秕秘粃緋翡肥"],["dea1","脾臂菲蜚裨誹譬費鄙非飛鼻嚬嬪彬斌檳殯浜濱瀕牝玭貧賓頻憑氷聘騁乍事些仕伺似使俟僿史司唆嗣四士奢娑寫寺射巳師徙思捨斜斯柶査梭死沙泗渣瀉獅砂社祀祠私篩紗絲肆舍莎蓑蛇裟詐詞謝賜赦辭邪飼駟麝削數朔索"],["dfa1","傘刪山散汕珊産疝算蒜酸霰乷撒殺煞薩三參杉森渗芟蔘衫揷澁鈒颯上傷像償商喪嘗孀尙峠常床庠廂想桑橡湘爽牀狀相祥箱翔裳觴詳象賞霜塞璽賽嗇塞穡索色牲生甥省笙墅壻嶼序庶徐恕抒捿敍暑曙書栖棲犀瑞筮絮緖署"],["e0a1","胥舒薯西誓逝鋤黍鼠夕奭席惜昔晳析汐淅潟石碩蓆釋錫仙僊先善嬋宣扇敾旋渲煽琁瑄璇璿癬禪線繕羨腺膳船蘚蟬詵跣選銑鐥饍鮮卨屑楔泄洩渫舌薛褻設說雪齧剡暹殲纖蟾贍閃陝攝涉燮葉城姓宬性惺成星晟猩珹盛省筬"],["e1a1","聖聲腥誠醒世勢歲洗稅笹細說貰召嘯塑宵小少巢所掃搔昭梳沼消溯瀟炤燒甦疏疎瘙笑篠簫素紹蔬蕭蘇訴逍遡邵銷韶騷俗屬束涑粟續謖贖速孫巽損蓀遜飡率宋悚松淞訟誦送頌刷殺灑碎鎖衰釗修受嗽囚垂壽嫂守岫峀帥愁"],["e2a1","戍手授搜收數樹殊水洙漱燧狩獸琇璲瘦睡秀穗竪粹綏綬繡羞脩茱蒐蓚藪袖誰讐輸遂邃酬銖銹隋隧隨雖需須首髓鬚叔塾夙孰宿淑潚熟琡璹肅菽巡徇循恂旬栒楯橓殉洵淳珣盾瞬筍純脣舜荀蓴蕣詢諄醇錞順馴戌術述鉥崇崧"],["e3a1","嵩瑟膝蝨濕拾習褶襲丞乘僧勝升承昇繩蠅陞侍匙嘶始媤尸屎屍市弑恃施是時枾柴猜矢示翅蒔蓍視試詩諡豕豺埴寔式息拭植殖湜熄篒蝕識軾食飾伸侁信呻娠宸愼新晨燼申神紳腎臣莘薪藎蜃訊身辛辰迅失室實悉審尋心沁"],["e4a1","沈深瀋甚芯諶什十拾雙氏亞俄兒啞娥峨我牙芽莪蛾衙訝阿雅餓鴉鵝堊岳嶽幄惡愕握樂渥鄂鍔顎鰐齷安岸按晏案眼雁鞍顔鮟斡謁軋閼唵岩巖庵暗癌菴闇壓押狎鴨仰央怏昻殃秧鴦厓哀埃崖愛曖涯碍艾隘靄厄扼掖液縊腋額"],["e5a1","櫻罌鶯鸚也倻冶夜惹揶椰爺耶若野弱掠略約若葯蒻藥躍亮佯兩凉壤孃恙揚攘敭暘梁楊樣洋瀁煬痒瘍禳穰糧羊良襄諒讓釀陽量養圄御於漁瘀禦語馭魚齬億憶抑檍臆偃堰彦焉言諺孼蘖俺儼嚴奄掩淹嶪業円予余勵呂女如廬"],["e6a1","旅歟汝濾璵礖礪與艅茹輿轝閭餘驪麗黎亦力域役易曆歷疫繹譯轢逆驛嚥堧姸娟宴年延憐戀捐挻撚椽沇沿涎涓淵演漣烟然煙煉燃燕璉硏硯秊筵緣練縯聯衍軟輦蓮連鉛鍊鳶列劣咽悅涅烈熱裂說閱厭廉念捻染殮炎焰琰艶苒"],["e7a1","簾閻髥鹽曄獵燁葉令囹塋寧嶺嶸影怜映暎楹榮永泳渶潁濚瀛瀯煐營獰玲瑛瑩瓔盈穎纓羚聆英詠迎鈴鍈零霙靈領乂倪例刈叡曳汭濊猊睿穢芮藝蘂禮裔詣譽豫醴銳隸霓預五伍俉傲午吾吳嗚塢墺奧娛寤悟惡懊敖旿晤梧汚澳"],["e8a1","烏熬獒筽蜈誤鰲鼇屋沃獄玉鈺溫瑥瘟穩縕蘊兀壅擁瓮甕癰翁邕雍饔渦瓦窩窪臥蛙蝸訛婉完宛梡椀浣玩琓琬碗緩翫脘腕莞豌阮頑曰往旺枉汪王倭娃歪矮外嵬巍猥畏了僚僥凹堯夭妖姚寥寮尿嶢拗搖撓擾料曜樂橈燎燿瑤療"],["e9a1","窈窯繇繞耀腰蓼蟯要謠遙遼邀饒慾欲浴縟褥辱俑傭冗勇埇墉容庸慂榕涌湧溶熔瑢用甬聳茸蓉踊鎔鏞龍于佑偶優又友右宇寓尤愚憂旴牛玗瑀盂祐禑禹紆羽芋藕虞迂遇郵釪隅雨雩勖彧旭昱栯煜稶郁頊云暈橒殞澐熉耘芸蕓"],["eaa1","運隕雲韻蔚鬱亐熊雄元原員圓園垣媛嫄寃怨愿援沅洹湲源爰猿瑗苑袁轅遠阮院願鴛月越鉞位偉僞危圍委威尉慰暐渭爲瑋緯胃萎葦蔿蝟衛褘謂違韋魏乳侑儒兪劉唯喩孺宥幼幽庾悠惟愈愉揄攸有杻柔柚柳楡楢油洧流游溜"],["eba1","濡猶猷琉瑜由留癒硫紐維臾萸裕誘諛諭踰蹂遊逾遺酉釉鍮類六堉戮毓肉育陸倫允奫尹崙淪潤玧胤贇輪鈗閏律慄栗率聿戎瀜絨融隆垠恩慇殷誾銀隱乙吟淫蔭陰音飮揖泣邑凝應膺鷹依倚儀宜意懿擬椅毅疑矣義艤薏蟻衣誼"],["eca1","議醫二以伊利吏夷姨履已弛彛怡易李梨泥爾珥理異痍痢移罹而耳肄苡荑裏裡貽貳邇里離飴餌匿溺瀷益翊翌翼謚人仁刃印吝咽因姻寅引忍湮燐璘絪茵藺蚓認隣靭靷鱗麟一佚佾壹日溢逸鎰馹任壬妊姙恁林淋稔臨荏賃入卄"],["eda1","立笠粒仍剩孕芿仔刺咨姉姿子字孜恣慈滋炙煮玆瓷疵磁紫者自茨蔗藉諮資雌作勺嚼斫昨灼炸爵綽芍酌雀鵲孱棧殘潺盞岑暫潛箴簪蠶雜丈仗匠場墻壯奬將帳庄張掌暲杖樟檣欌漿牆狀獐璋章粧腸臟臧莊葬蔣薔藏裝贓醬長"],["eea1","障再哉在宰才材栽梓渽滓災縡裁財載齋齎爭箏諍錚佇低儲咀姐底抵杵楮樗沮渚狙猪疽箸紵苧菹著藷詛貯躇這邸雎齟勣吊嫡寂摘敵滴狄炙的積笛籍績翟荻謫賊赤跡蹟迪迹適鏑佃佺傳全典前剪塡塼奠專展廛悛戰栓殿氈澱"],["efa1","煎琠田甸畑癲筌箋箭篆纏詮輾轉鈿銓錢鐫電顚顫餞切截折浙癤竊節絶占岾店漸点粘霑鮎點接摺蝶丁井亭停偵呈姃定幀庭廷征情挺政整旌晶晸柾楨檉正汀淀淨渟湞瀞炡玎珽町睛碇禎程穽精綎艇訂諪貞鄭酊釘鉦鋌錠霆靖"],["f0a1","靜頂鼎制劑啼堤帝弟悌提梯濟祭第臍薺製諸蹄醍除際霽題齊俎兆凋助嘲弔彫措操早晁曺曹朝條棗槽漕潮照燥爪璪眺祖祚租稠窕粗糟組繰肇藻蚤詔調趙躁造遭釣阻雕鳥族簇足鏃存尊卒拙猝倧宗從悰慫棕淙琮種終綜縱腫"],["f1a1","踪踵鍾鐘佐坐左座挫罪主住侏做姝胄呪周嗾奏宙州廚晝朱柱株注洲湊澍炷珠疇籌紂紬綢舟蛛註誅走躊輳週酎酒鑄駐竹粥俊儁准埈寯峻晙樽浚準濬焌畯竣蠢逡遵雋駿茁中仲衆重卽櫛楫汁葺增憎曾拯烝甑症繒蒸證贈之只"],["f2a1","咫地址志持指摯支旨智枝枳止池沚漬知砥祉祗紙肢脂至芝芷蜘誌識贄趾遲直稙稷織職唇嗔塵振搢晉晋桭榛殄津溱珍瑨璡畛疹盡眞瞋秦縉縝臻蔯袗診賑軫辰進鎭陣陳震侄叱姪嫉帙桎瓆疾秩窒膣蛭質跌迭斟朕什執潗緝輯"],["f3a1","鏶集徵懲澄且侘借叉嗟嵯差次此磋箚茶蹉車遮捉搾着窄錯鑿齪撰澯燦璨瓚竄簒纂粲纘讚贊鑽餐饌刹察擦札紮僭參塹慘慙懺斬站讒讖倉倡創唱娼廠彰愴敞昌昶暢槍滄漲猖瘡窓脹艙菖蒼債埰寀寨彩採砦綵菜蔡采釵冊柵策"],["f4a1","責凄妻悽處倜刺剔尺慽戚拓擲斥滌瘠脊蹠陟隻仟千喘天川擅泉淺玔穿舛薦賤踐遷釧闡阡韆凸哲喆徹撤澈綴輟轍鐵僉尖沾添甛瞻簽籤詹諂堞妾帖捷牒疊睫諜貼輒廳晴淸聽菁請靑鯖切剃替涕滯締諦逮遞體初剿哨憔抄招梢"],["f5a1","椒楚樵炒焦硝礁礎秒稍肖艸苕草蕉貂超酢醋醮促囑燭矗蜀觸寸忖村邨叢塚寵悤憁摠總聰蔥銃撮催崔最墜抽推椎楸樞湫皺秋芻萩諏趨追鄒酋醜錐錘鎚雛騶鰍丑畜祝竺筑築縮蓄蹙蹴軸逐春椿瑃出朮黜充忠沖蟲衝衷悴膵萃"],["f6a1","贅取吹嘴娶就炊翠聚脆臭趣醉驟鷲側仄厠惻測層侈値嗤峙幟恥梔治淄熾痔痴癡稚穉緇緻置致蚩輜雉馳齒則勅飭親七柒漆侵寢枕沈浸琛砧針鍼蟄秤稱快他咤唾墮妥惰打拖朶楕舵陀馱駝倬卓啄坼度托拓擢晫柝濁濯琢琸託"],["f7a1","鐸呑嘆坦彈憚歎灘炭綻誕奪脫探眈耽貪塔搭榻宕帑湯糖蕩兌台太怠態殆汰泰笞胎苔跆邰颱宅擇澤撑攄兎吐土討慟桶洞痛筒統通堆槌腿褪退頹偸套妬投透鬪慝特闖坡婆巴把播擺杷波派爬琶破罷芭跛頗判坂板版瓣販辦鈑"],["f8a1","阪八叭捌佩唄悖敗沛浿牌狽稗覇貝彭澎烹膨愎便偏扁片篇編翩遍鞭騙貶坪平枰萍評吠嬖幣廢弊斃肺蔽閉陛佈包匍匏咆哺圃布怖抛抱捕暴泡浦疱砲胞脯苞葡蒲袍褒逋鋪飽鮑幅暴曝瀑爆輻俵剽彪慓杓標漂瓢票表豹飇飄驃"],["f9a1","品稟楓諷豊風馮彼披疲皮被避陂匹弼必泌珌畢疋筆苾馝乏逼下何厦夏廈昰河瑕荷蝦賀遐霞鰕壑學虐謔鶴寒恨悍旱汗漢澣瀚罕翰閑閒限韓割轄函含咸啣喊檻涵緘艦銜陷鹹合哈盒蛤閤闔陜亢伉姮嫦巷恒抗杭桁沆港缸肛航"],["faa1","行降項亥偕咳垓奚孩害懈楷海瀣蟹解該諧邂駭骸劾核倖幸杏荇行享向嚮珦鄕響餉饗香噓墟虛許憲櫶獻軒歇險驗奕爀赫革俔峴弦懸晛泫炫玄玹現眩睍絃絢縣舷衒見賢鉉顯孑穴血頁嫌俠協夾峽挾浹狹脅脇莢鋏頰亨兄刑型"],["fba1","形泂滎瀅灐炯熒珩瑩荊螢衡逈邢鎣馨兮彗惠慧暳蕙蹊醯鞋乎互呼壕壺好岵弧戶扈昊晧毫浩淏湖滸澔濠濩灝狐琥瑚瓠皓祜糊縞胡芦葫蒿虎號蝴護豪鎬頀顥惑或酷婚昏混渾琿魂忽惚笏哄弘汞泓洪烘紅虹訌鴻化和嬅樺火畵"],["fca1","禍禾花華話譁貨靴廓擴攫確碻穫丸喚奐宦幻患換歡晥桓渙煥環紈還驩鰥活滑猾豁闊凰幌徨恍惶愰慌晃晄榥況湟滉潢煌璜皇篁簧荒蝗遑隍黃匯回廻徊恢悔懷晦會檜淮澮灰獪繪膾茴蛔誨賄劃獲宖橫鐄哮嚆孝效斅曉梟涍淆"],["fda1","爻肴酵驍侯候厚后吼喉嗅帿後朽煦珝逅勛勳塤壎焄熏燻薰訓暈薨喧暄煊萱卉喙毁彙徽揮暉煇諱輝麾休携烋畦虧恤譎鷸兇凶匈洶胸黑昕欣炘痕吃屹紇訖欠欽歆吸恰洽翕興僖凞喜噫囍姬嬉希憙憘戱晞曦熙熹熺犧禧稀羲詰"]]')},function(t){t.exports=JSON.parse('[["8740","䏰䰲䘃䖦䕸𧉧䵷䖳𧲱䳢𧳅㮕䜶䝄䱇䱀𤊿𣘗𧍒𦺋𧃒䱗𪍑䝏䗚䲅𧱬䴇䪤䚡𦬣爥𥩔𡩣𣸆𣽡晍囻"],["8767","綕夝𨮹㷴霴𧯯寛𡵞媤㘥𩺰嫑宷峼杮薓𩥅瑡璝㡵𡵓𣚞𦀡㻬"],["87a1","𥣞㫵竼龗𤅡𨤍𣇪𠪊𣉞䌊蒄龖鐯䤰蘓墖靊鈘秐稲晠権袝瑌篅枂稬剏遆㓦珄𥶹瓆鿇垳䤯呌䄱𣚎堘穲𧭥讏䚮𦺈䆁𥶙箮𢒼鿈𢓁𢓉𢓌鿉蔄𣖻䂴鿊䓡𪷿拁灮鿋"],["8840","㇀",4,"𠄌㇅𠃑𠃍㇆㇇𠃋𡿨㇈𠃊㇉㇊㇋㇌𠄎㇍㇎ĀÁǍÀĒÉĚÈŌÓǑÒ࿿Ê̄Ế࿿Ê̌ỀÊāáǎàɑēéěèīíǐìōóǒòūúǔùǖǘǚ"],["88a1","ǜü࿿ê̄ế࿿ê̌ềêɡ⏚⏛"],["8940","𪎩𡅅"],["8943","攊"],["8946","丽滝鵎釟"],["894c","𧜵撑会伨侨兖兴农凤务动医华发变团声处备夲头学实実岚庆总斉柾栄桥济炼电纤纬纺织经统缆缷艺苏药视设询车轧轮"],["89a1","琑糼緍楆竉刧"],["89ab","醌碸酞肼"],["89b0","贋胶𠧧"],["89b5","肟黇䳍鷉鸌䰾𩷶𧀎鸊𪄳㗁"],["89c1","溚舾甙"],["89c5","䤑马骏龙禇𨑬𡷊𠗐𢫦两亁亀亇亿仫伷㑌侽㹈倃傈㑽㒓㒥円夅凛凼刅争剹劐匧㗇厩㕑厰㕓参吣㕭㕲㚁咓咣咴咹哐哯唘唣唨㖘唿㖥㖿嗗㗅"],["8a40","𧶄唥"],["8a43","𠱂𠴕𥄫喐𢳆㧬𠍁蹆𤶸𩓥䁓𨂾睺𢰸㨴䟕𨅝𦧲𤷪擝𠵼𠾴𠳕𡃴撍蹾𠺖𠰋𠽤𢲩𨉖𤓓"],["8a64","𠵆𩩍𨃩䟴𤺧𢳂骲㩧𩗴㿭㔆𥋇𩟔𧣈𢵄鵮頕"],["8a76","䏙𦂥撴哣𢵌𢯊𡁷㧻𡁯"],["8aa1","𦛚𦜖𧦠擪𥁒𠱃蹨𢆡𨭌𠜱"],["8aac","䠋𠆩㿺塳𢶍"],["8ab2","𤗈𠓼𦂗𠽌𠶖啹䂻䎺"],["8abb","䪴𢩦𡂝膪飵𠶜捹㧾𢝵跀嚡摼㹃"],["8ac9","𪘁𠸉𢫏𢳉"],["8ace","𡃈𣧂㦒㨆𨊛㕸𥹉𢃇噒𠼱𢲲𩜠㒼氽𤸻"],["8adf","𧕴𢺋𢈈𪙛𨳍𠹺𠰴𦠜羓𡃏𢠃𢤹㗻𥇣𠺌𠾍𠺪㾓𠼰𠵇𡅏𠹌"],["8af6","𠺫𠮩𠵈𡃀𡄽㿹𢚖搲𠾭"],["8b40","𣏴𧘹𢯎𠵾𠵿𢱑𢱕㨘𠺘𡃇𠼮𪘲𦭐𨳒𨶙𨳊閪哌苄喹"],["8b55","𩻃鰦骶𧝞𢷮煀腭胬尜𦕲脴㞗卟𨂽醶𠻺𠸏𠹷𠻻㗝𤷫㘉𠳖嚯𢞵𡃉𠸐𠹸𡁸𡅈𨈇𡑕𠹹𤹐𢶤婔𡀝𡀞𡃵𡃶垜𠸑"],["8ba1","𧚔𨋍𠾵𠹻𥅾㜃𠾶𡆀𥋘𪊽𤧚𡠺𤅷𨉼墙剨㘚𥜽箲孨䠀䬬鼧䧧鰟鮍𥭴𣄽嗻㗲嚉丨夂𡯁屮靑𠂆乛亻㔾尣彑忄㣺扌攵歺氵氺灬爫丬犭𤣩罒礻糹罓𦉪㓁"],["8bde","𦍋耂肀𦘒𦥑卝衤见𧢲讠贝钅镸长门𨸏韦页风飞饣𩠐鱼鸟黄歯龜丷𠂇阝户钢"],["8c40","倻淾𩱳龦㷉袏𤅎灷峵䬠𥇍㕙𥴰愢𨨲辧釶熑朙玺𣊁𪄇㲋𡦀䬐磤琂冮𨜏䀉橣𪊺䈣蘏𠩯稪𩥇𨫪靕灍匤𢁾鏴盙𨧣龧矝亣俰傼丯众龨吴綋墒壐𡶶庒庙忂𢜒斋"],["8ca1","𣏹椙橃𣱣泿"],["8ca7","爀𤔅玌㻛𤨓嬕璹讃𥲤𥚕窓篬糃繬苸薗龩袐龪躹龫迏蕟駠鈡龬𨶹𡐿䁱䊢娚"],["8cc9","顨杫䉶圽"],["8cce","藖𤥻芿𧄍䲁𦵴嵻𦬕𦾾龭龮宖龯曧繛湗秊㶈䓃𣉖𢞖䎚䔶"],["8ce6","峕𣬚諹屸㴒𣕑嵸龲煗䕘𤃬𡸣䱷㥸㑊𠆤𦱁諌侴𠈹妿腬顖𩣺弻"],["8d40","𠮟"],["8d42","𢇁𨥭䄂䚻𩁹㼇龳𪆵䃸㟖䛷𦱆䅼𨚲𧏿䕭㣔𥒚䕡䔛䶉䱻䵶䗪㿈𤬏㙡䓞䒽䇭崾嵈嵖㷼㠏嶤嶹㠠㠸幂庽弥徃㤈㤔㤿㥍惗愽峥㦉憷憹懏㦸戬抐拥挘㧸嚱"],["8da1","㨃揢揻搇摚㩋擀崕嘡龟㪗斆㪽旿晓㫲暒㬢朖㭂枤栀㭘桊梄㭲㭱㭻椉楃牜楤榟榅㮼槖㯝橥橴橱檂㯬檙㯲檫檵櫔櫶殁毁毪汵沪㳋洂洆洦涁㳯涤涱渕渘温溆𨧀溻滢滚齿滨滩漤漴㵆𣽁澁澾㵪㵵熷岙㶊瀬㶑灐灔灯灿炉𠌥䏁㗱𠻘"],["8e40","𣻗垾𦻓焾𥟠㙎榢𨯩孴穉𥣡𩓙穥穽𥦬窻窰竂竃燑𦒍䇊竚竝竪䇯咲𥰁笋筕笩𥌎𥳾箢筯莜𥮴𦱿篐萡箒箸𥴠㶭𥱥蒒篺簆簵𥳁籄粃𤢂粦晽𤕸糉糇糦籴糳糵糎"],["8ea1","繧䔝𦹄絝𦻖璍綉綫焵綳緒𤁗𦀩緤㴓緵𡟹緥𨍭縝𦄡𦅚繮纒䌫鑬縧罀罁罇礶𦋐駡羗𦍑羣𡙡𠁨䕜𣝦䔃𨌺翺𦒉者耈耝耨耯𪂇𦳃耻耼聡𢜔䦉𦘦𣷣𦛨朥肧𨩈脇脚墰𢛶汿𦒘𤾸擧𡒊舘𡡞橓𤩥𤪕䑺舩𠬍𦩒𣵾俹𡓽蓢荢𦬊𤦧𣔰𡝳𣷸芪椛芳䇛"],["8f40","蕋苐茚𠸖𡞴㛁𣅽𣕚艻苢茘𣺋𦶣𦬅𦮗𣗎㶿茝嗬莅䔋𦶥莬菁菓㑾𦻔橗蕚㒖𦹂𢻯葘𥯤葱㷓䓤檧葊𣲵祘蒨𦮖𦹷𦹃蓞萏莑䒠蒓蓤𥲑䉀𥳀䕃蔴嫲𦺙䔧蕳䔖枿蘖"],["8fa1","𨘥𨘻藁𧂈蘂𡖂𧃍䕫䕪蘨㙈𡢢号𧎚虾蝱𪃸蟮𢰧螱蟚蠏噡虬桖䘏衅衆𧗠𣶹𧗤衞袜䙛袴袵揁装睷𧜏覇覊覦覩覧覼𨨥觧𧤤𧪽誜瞓釾誐𧩙竩𧬺𣾏䜓𧬸煼謌謟𥐰𥕥謿譌譍誩𤩺讐讛誯𡛟䘕衏貛𧵔𧶏貫㜥𧵓賖𧶘𧶽贒贃𡤐賛灜贑𤳉㻐起"],["9040","趩𨀂𡀔𤦊㭼𨆼𧄌竧躭躶軃鋔輙輭𨍥𨐒辥錃𪊟𠩐辳䤪𨧞𨔽𣶻廸𣉢迹𪀔𨚼𨔁𢌥㦀𦻗逷𨔼𧪾遡𨕬𨘋邨𨜓郄𨛦邮都酧㫰醩釄粬𨤳𡺉鈎沟鉁鉢𥖹銹𨫆𣲛𨬌𥗛"],["90a1","𠴱錬鍫𨫡𨯫炏嫃𨫢𨫥䥥鉄𨯬𨰹𨯿鍳鑛躼閅閦鐦閠濶䊹𢙺𨛘𡉼𣸮䧟氜陻隖䅬隣𦻕懚隶磵𨫠隽双䦡𦲸𠉴𦐐𩂯𩃥𤫑𡤕𣌊霱虂霶䨏䔽䖅𤫩灵孁霛靜𩇕靗孊𩇫靟鐥僐𣂷𣂼鞉鞟鞱鞾韀韒韠𥑬韮琜𩐳響韵𩐝𧥺䫑頴頳顋顦㬎𧅵㵑𠘰𤅜"],["9140","𥜆飊颷飈飇䫿𦴧𡛓喰飡飦飬鍸餹𤨩䭲𩡗𩤅駵騌騻騐驘𥜥㛄𩂱𩯕髠髢𩬅髴䰎鬔鬭𨘀倴鬴𦦨㣃𣁽魐魀𩴾婅𡡣鮎𤉋鰂鯿鰌𩹨鷔𩾷𪆒𪆫𪃡𪄣𪇟鵾鶃𪄴鸎梈"],["91a1","鷄𢅛𪆓𪈠𡤻𪈳鴹𪂹𪊴麐麕麞麢䴴麪麯𤍤黁㭠㧥㴝伲㞾𨰫鼂鼈䮖鐤𦶢鼗鼖鼹嚟嚊齅馸𩂋韲葿齢齩竜龎爖䮾𤥵𤦻煷𤧸𤍈𤩑玞𨯚𡣺禟𨥾𨸶鍩鏳𨩄鋬鎁鏋𨥬𤒹爗㻫睲穃烐𤑳𤏸煾𡟯炣𡢾𣖙㻇𡢅𥐯𡟸㜢𡛻𡠹㛡𡝴𡣑𥽋㜣𡛀坛𤨥𡏾𡊨"],["9240","𡏆𡒶蔃𣚦蔃葕𤦔𧅥𣸱𥕜𣻻𧁒䓴𣛮𩦝𦼦柹㜳㰕㷧塬𡤢栐䁗𣜿𤃡𤂋𤄏𦰡哋嚞𦚱嚒𠿟𠮨𠸍鏆𨬓鎜仸儫㠙𤐶亼𠑥𠍿佋侊𥙑婨𠆫𠏋㦙𠌊𠐔㐵伩𠋀𨺳𠉵諚𠈌亘"],["92a1","働儍侢伃𤨎𣺊佂倮偬傁俌俥偘僼兙兛兝兞湶𣖕𣸹𣺿浲𡢄𣺉冨凃𠗠䓝𠒣𠒒𠒑赺𨪜𠜎剙劤𠡳勡鍮䙺熌𤎌𠰠𤦬𡃤槑𠸝瑹㻞璙琔瑖玘䮎𤪼𤂍叐㖄爏𤃉喴𠍅响𠯆圝鉝雴鍦埝垍坿㘾壋媙𨩆𡛺𡝯𡜐娬妸銏婾嫏娒𥥆𡧳𡡡𤊕㛵洅瑃娡𥺃"],["9340","媁𨯗𠐓鏠璌𡌃焅䥲鐈𨧻鎽㞠尞岞幞幈𡦖𡥼𣫮廍孏𡤃𡤄㜁𡢠㛝𡛾㛓脪𨩇𡶺𣑲𨦨弌弎𡤧𡞫婫𡜻孄蘔𧗽衠恾𢡠𢘫忛㺸𢖯𢖾𩂈𦽳懀𠀾𠁆𢘛憙憘恵𢲛𢴇𤛔𩅍"],["93a1","摱𤙥𢭪㨩𢬢𣑐𩣪𢹸挷𪑛撶挱揑𤧣𢵧护𢲡搻敫楲㯴𣂎𣊭𤦉𣊫唍𣋠𡣙𩐿曎𣊉𣆳㫠䆐𥖄𨬢𥖏𡛼𥕛𥐥磮𣄃𡠪𣈴㑤𣈏𣆂𤋉暎𦴤晫䮓昰𧡰𡷫晣𣋒𣋡昞𥡲㣑𣠺𣞼㮙𣞢𣏾瓐㮖枏𤘪梶栞㯄檾㡣𣟕𤒇樳橒櫉欅𡤒攑梘橌㯗橺歗𣿀𣲚鎠鋲𨯪𨫋"],["9440","銉𨀞𨧜鑧涥漋𤧬浧𣽿㶏渄𤀼娽渊塇洤硂焻𤌚𤉶烱牐犇犔𤞏𤜥兹𤪤𠗫瑺𣻸𣙟𤩊𤤗𥿡㼆㺱𤫟𨰣𣼵悧㻳瓌琼鎇琷䒟𦷪䕑疃㽣𤳙𤴆㽘畕癳𪗆㬙瑨𨫌𤦫𤦎㫻"],["94a1","㷍𤩎㻿𤧅𤣳釺圲鍂𨫣𡡤僟𥈡𥇧睸𣈲眎眏睻𤚗𣞁㩞𤣰琸璛㺿𤪺𤫇䃈𤪖𦆮錇𥖁砞碍碈磒珐祙𧝁𥛣䄎禛蒖禥樭𣻺稺秴䅮𡛦䄲鈵秱𠵌𤦌𠊙𣶺𡝮㖗啫㕰㚪𠇔𠰍竢婙𢛵𥪯𥪜娍𠉛磰娪𥯆竾䇹籝籭䈑𥮳𥺼𥺦糍𤧹𡞰粎籼粮檲緜縇緓罎𦉡"],["9540","𦅜𧭈綗𥺂䉪𦭵𠤖柖𠁎𣗏埄𦐒𦏸𤥢翝笧𠠬𥫩𥵃笌𥸎駦虅驣樜𣐿㧢𤧷𦖭騟𦖠蒀𧄧𦳑䓪脷䐂胆脉腂𦞴飃𦩂艢艥𦩑葓𦶧蘐𧈛媆䅿𡡀嬫𡢡嫤𡣘蚠蜨𣶏蠭𧐢娂"],["95a1","衮佅袇袿裦襥襍𥚃襔𧞅𧞄𨯵𨯙𨮜𨧹㺭蒣䛵䛏㟲訽訜𩑈彍鈫𤊄旔焩烄𡡅鵭貟賩𧷜妚矃姰䍮㛔踪躧𤰉輰轊䋴汘澻𢌡䢛潹溋𡟚鯩㚵𤤯邻邗啱䤆醻鐄𨩋䁢𨫼鐧𨰝𨰻蓥訫閙閧閗閖𨴴瑅㻂𤣿𤩂𤏪㻧𣈥随𨻧𨹦𨹥㻌𤧭𤩸𣿮琒瑫㻼靁𩂰"],["9640","桇䨝𩂓𥟟靝鍨𨦉𨰦𨬯𦎾銺嬑譩䤼珹𤈛鞛靱餸𠼦巁𨯅𤪲頟𩓚鋶𩗗釥䓀𨭐𤩧𨭤飜𨩅㼀鈪䤥萔餻饍𧬆㷽馛䭯馪驜𨭥𥣈檏騡嫾騯𩣱䮐𩥈馼䮽䮗鍽塲𡌂堢𤦸"],["96a1","𡓨硄𢜟𣶸棅㵽鑘㤧慐𢞁𢥫愇鱏鱓鱻鰵鰐魿鯏𩸭鮟𪇵𪃾鴡䲮𤄄鸘䲰鴌𪆴𪃭𪃳𩤯鶥蒽𦸒𦿟𦮂藼䔳𦶤𦺄𦷰萠藮𦸀𣟗𦁤秢𣖜𣙀䤭𤧞㵢鏛銾鍈𠊿碹鉷鑍俤㑀遤𥕝砽硔碶硋𡝗𣇉𤥁㚚佲濚濙瀞瀞吔𤆵垻壳垊鴖埗焴㒯𤆬燫𦱀𤾗嬨𡞵𨩉"],["9740","愌嫎娋䊼𤒈㜬䭻𨧼鎻鎸𡣖𠼝葲𦳀𡐓𤋺𢰦𤏁妔𣶷𦝁綨𦅛𦂤𤦹𤦋𨧺鋥珢㻩璴𨭣𡢟㻡𤪳櫘珳珻㻖𤨾𤪔𡟙𤩦𠎧𡐤𤧥瑈𤤖炥𤥶銄珦鍟𠓾錱𨫎𨨖鎆𨯧𥗕䤵𨪂煫"],["97a1","𤥃𠳿嚤𠘚𠯫𠲸唂秄𡟺緾𡛂𤩐𡡒䔮鐁㜊𨫀𤦭妰𡢿𡢃𧒄媡㛢𣵛㚰鉟婹𨪁𡡢鍴㳍𠪴䪖㦊僴㵩㵌𡎜煵䋻𨈘渏𩃤䓫浗𧹏灧沯㳖𣿭𣸭渂漌㵯𠏵畑㚼㓈䚀㻚䡱姄鉮䤾轁𨰜𦯀堒埈㛖𡑒烾𤍢𤩱𢿣𡊰𢎽梹楧𡎘𣓥𧯴𣛟𨪃𣟖𣏺𤲟樚𣚭𦲷萾䓟䓎"],["9840","𦴦𦵑𦲂𦿞漗𧄉茽𡜺菭𦲀𧁓𡟛妉媂𡞳婡婱𡤅𤇼㜭姯𡜼㛇熎鎐暚𤊥婮娫𤊓樫𣻹𧜶𤑛𤋊焝𤉙𨧡侰𦴨峂𤓎𧹍𤎽樌𤉖𡌄炦焳𤏩㶥泟勇𤩏繥姫崯㷳彜𤩝𡟟綤萦"],["98a1","咅𣫺𣌀𠈔坾𠣕𠘙㿥𡾞𪊶瀃𩅛嵰玏糓𨩙𩐠俈翧狍猐𧫴猸猹𥛶獁獈㺩𧬘遬燵𤣲珡臶㻊県㻑沢国琙琞琟㻢㻰㻴㻺瓓㼎㽓畂畭畲疍㽼痈痜㿀癍㿗癴㿜発𤽜熈嘣覀塩䀝睃䀹条䁅㗛瞘䁪䁯属瞾矋売砘点砜䂨砹硇硑硦葈𥔵礳栃礲䄃"],["9940","䄉禑禙辻稆込䅧窑䆲窼艹䇄竏竛䇏両筢筬筻簒簛䉠䉺类粜䊌粸䊔糭输烀𠳏総緔緐緽羮羴犟䎗耠耥笹耮耱联㷌垴炠肷胩䏭脌猪脎脒畠脔䐁㬹腖腙腚"],["99a1","䐓堺腼膄䐥膓䐭膥埯臁臤艔䒏芦艶苊苘苿䒰荗险榊萅烵葤惣蒈䔄蒾蓡蓸蔐蔸蕒䔻蕯蕰藠䕷虲蚒蚲蛯际螋䘆䘗袮裿褤襇覑𧥧訩訸誔誴豑賔賲贜䞘塟跃䟭仮踺嗘坔蹱嗵躰䠷軎転軤軭軲辷迁迊迌逳駄䢭飠鈓䤞鈨鉘鉫銱銮銿"],["9a40","鋣鋫鋳鋴鋽鍃鎄鎭䥅䥑麿鐗匁鐝鐭鐾䥪鑔鑹锭関䦧间阳䧥枠䨤靀䨵鞲韂噔䫤惨颹䬙飱塄餎餙冴餜餷饂饝饢䭰駅䮝騼鬏窃魩鮁鯝鯱鯴䱭鰠㝯𡯂鵉鰺"],["9aa1","黾噐鶓鶽鷀鷼银辶鹻麬麱麽黆铜黢黱黸竈齄𠂔𠊷𠎠椚铃妬𠓗塀铁㞹𠗕𠘕𠙶𡚺块煳𠫂𠫍𠮿呪吆𠯋咞𠯻𠰻𠱓𠱥𠱼惧𠲍噺𠲵𠳝𠳭𠵯𠶲𠷈楕鰯螥𠸄𠸎𠻗𠾐𠼭𠹳尠𠾼帋𡁜𡁏𡁶朞𡁻𡂈𡂖㙇𡂿𡃓𡄯𡄻卤蒭𡋣𡍵𡌶讁𡕷𡘙𡟃𡟇乸炻𡠭𡥪"],["9b40","𡨭𡩅𡰪𡱰𡲬𡻈拃𡻕𡼕熘桕𢁅槩㛈𢉼𢏗𢏺𢜪𢡱𢥏苽𢥧𢦓𢫕覥𢫨辠𢬎鞸𢬿顇骽𢱌"],["9b62","𢲈𢲷𥯨𢴈𢴒𢶷𢶕𢹂𢽴𢿌𣀳𣁦𣌟𣏞徱晈暿𧩹𣕧𣗳爁𤦺矗𣘚𣜖纇𠍆墵朎"],["9ba1","椘𣪧𧙗𥿢𣸑𣺹𧗾𢂚䣐䪸𤄙𨪚𤋮𤌍𤀻𤌴𤎖𤩅𠗊凒𠘑妟𡺨㮾𣳿𤐄𤓖垈𤙴㦛𤜯𨗨𩧉㝢𢇃譞𨭎駖𤠒𤣻𤨕爉𤫀𠱸奥𤺥𤾆𠝹軚𥀬劏圿煱𥊙𥐙𣽊𤪧喼𥑆𥑮𦭒釔㑳𥔿𧘲𥕞䜘𥕢𥕦𥟇𤤿𥡝偦㓻𣏌惞𥤃䝼𨥈𥪮𥮉𥰆𡶐垡煑澶𦄂𧰒遖𦆲𤾚譢𦐂𦑊"],["9c40","嵛𦯷輶𦒄𡤜諪𤧶𦒈𣿯𦔒䯀𦖿𦚵𢜛鑥𥟡憕娧晉侻嚹𤔡𦛼乪𤤴陖涏𦲽㘘襷𦞙𦡮𦐑𦡞營𦣇筂𩃀𠨑𦤦鄄𦤹穅鷰𦧺騦𦨭㙟𦑩𠀡禃𦨴𦭛崬𣔙菏𦮝䛐𦲤画补𦶮墶"],["9ca1","㜜𢖍𧁋𧇍㱔𧊀𧊅銁𢅺𧊋錰𧋦𤧐氹钟𧑐𠻸蠧裵𢤦𨑳𡞱溸𤨪𡠠㦤㚹尐秣䔿暶𩲭𩢤襃𧟌𧡘囖䃟𡘊㦡𣜯𨃨𡏅熭荦𧧝𩆨婧䲷𧂯𨦫𧧽𧨊𧬋𧵦𤅺筃祾𨀉澵𪋟樃𨌘厢𦸇鎿栶靝𨅯𨀣𦦵𡏭𣈯𨁈嶅𨰰𨂃圕頣𨥉嶫𤦈斾槕叒𤪥𣾁㰑朶𨂐𨃴𨄮𡾡𨅏"],["9d40","𨆉𨆯𨈚𨌆𨌯𨎊㗊𨑨𨚪䣺揦𨥖砈鉕𨦸䏲𨧧䏟𨧨𨭆𨯔姸𨰉輋𨿅𩃬筑𩄐𩄼㷷𩅞𤫊运犏嚋𩓧𩗩𩖰𩖸𩜲𩣑𩥉𩥪𩧃𩨨𩬎𩵚𩶛纟𩻸𩼣䲤镇𪊓熢𪋿䶑递𪗋䶜𠲜达嗁"],["9da1","辺𢒰边𤪓䔉繿潖檱仪㓤𨬬𧢝㜺躀𡟵𨀤𨭬𨮙𧨾𦚯㷫𧙕𣲷𥘵𥥖亚𥺁𦉘嚿𠹭踎孭𣺈𤲞揞拐𡟶𡡻攰嘭𥱊吚𥌑㷆𩶘䱽嘢嘞罉𥻘奵𣵀蝰东𠿪𠵉𣚺脗鵞贘瘻鱅癎瞹鍅吲腈苷嘥脲萘肽嗪祢噃吖𠺝㗎嘅嗱曱𨋢㘭甴嗰喺咗啲𠱁𠲖廐𥅈𠹶𢱢"],["9e40","𠺢麫絚嗞𡁵抝靭咔賍燶酶揼掹揾啩𢭃鱲𢺳冚㓟𠶧冧呍唞唓癦踭𦢊疱肶蠄螆裇膶萜𡃁䓬猄𤜆宐茋𦢓噻𢛴𧴯𤆣𧵳𦻐𧊶酰𡇙鈈𣳼𪚩𠺬𠻹牦𡲢䝎𤿂𧿹𠿫䃺"],["9ea1","鱝攟𢶠䣳𤟠𩵼𠿬𠸊恢𧖣𠿭"],["9ead","𦁈𡆇熣纎鵐业丄㕷嬍沲卧㚬㧜卽㚥𤘘墚𤭮舭呋垪𥪕𠥹"],["9ec5","㩒𢑥獴𩺬䴉鯭𣳾𩼰䱛𤾩𩖞𩿞葜𣶶𧊲𦞳𣜠挮紥𣻷𣸬㨪逈勌㹴㙺䗩𠒎癀嫰𠺶硺𧼮墧䂿噼鮋嵴癔𪐴麅䳡痹㟻愙𣃚𤏲"],["9ef5","噝𡊩垧𤥣𩸆刴𧂮㖭汊鵼"],["9f40","籖鬹埞𡝬屓擓𩓐𦌵𧅤蚭𠴨𦴢𤫢𠵱"],["9f4f","凾𡼏嶎霃𡷑麁遌笟鬂峑箣扨挵髿篏鬪籾鬮籂粆鰕篼鬉鼗鰛𤤾齚啳寃俽麘俲剠㸆勑坧偖妷帒韈鶫轜呩鞴饀鞺匬愰"],["9fa1","椬叚鰊鴂䰻陁榀傦畆𡝭駚剳"],["9fae","酙隁酜"],["9fb2","酑𨺗捿𦴣櫊嘑醎畺抅𠏼獏籰𥰡𣳽"],["9fc1","𤤙盖鮝个𠳔莾衂"],["9fc9","届槀僭坺刟巵从氱𠇲伹咜哚劚趂㗾弌㗳"],["9fdb","歒酼龥鮗頮颴骺麨麄煺笔"],["9fe7","毺蠘罸"],["9feb","嘠𪙊蹷齓"],["9ff0","跔蹏鸜踁抂𨍽踨蹵竓𤩷稾磘泪詧瘇"],["a040","𨩚鼦泎蟖痃𪊲硓咢贌狢獱謭猂瓱賫𤪻蘯徺袠䒷"],["a055","𡠻𦸅"],["a058","詾𢔛"],["a05b","惽癧髗鵄鍮鮏蟵"],["a063","蠏賷猬霡鮰㗖犲䰇籑饊𦅙慙䰄麖慽"],["a073","坟慯抦戹拎㩜懢厪𣏵捤栂㗒"],["a0a1","嵗𨯂迚𨸹"],["a0a6","僙𡵆礆匲阸𠼻䁥"],["a0ae","矾"],["a0b0","糂𥼚糚稭聦聣絍甅瓲覔舚朌聢𧒆聛瓰脃眤覉𦟌畓𦻑螩蟎臈螌詉貭譃眫瓸蓚㘵榲趦"],["a0d4","覩瑨涹蟁𤀑瓧㷛煶悤憜㳑煢恷"],["a0e2","罱𨬭牐惩䭾删㰘𣳇𥻗𧙖𥔱𡥄𡋾𩤃𦷜𧂭峁𦆭𨨏𣙷𠃮𦡆𤼎䕢嬟𦍌齐麦𦉫"],["a3c0","␀",31,"␡"],["c6a1","①",9,"⑴",9,"ⅰ",9,"丶丿亅亠冂冖冫勹匸卩厶夊宀巛⼳广廴彐彡攴无疒癶辵隶¨ˆヽヾゝゞ〃仝々〆〇ー［］✽ぁ",23],["c740","す",58,"ァアィイ"],["c7a1","ゥ",81,"А",5,"ЁЖ",4],["c840","Л",26,"ёж",25,"⇧↸↹㇏𠃌乚𠂊刂䒑"],["c8a1","龰冈龱𧘇"],["c8cd","￢￤＇＂㈱№℡゛゜⺀⺄⺆⺇⺈⺊⺌⺍⺕⺜⺝⺥⺧⺪⺬⺮⺶⺼⺾⻆⻊⻌⻍⻏⻖⻗⻞⻣"],["c8f5","ʃɐɛɔɵœøŋʊɪ"],["f9fe","￭"],["fa40","𠕇鋛𠗟𣿅蕌䊵珯况㙉𤥂𨧤鍄𡧛苮𣳈砼杄拟𤤳𨦪𠊠𦮳𡌅侫𢓭倈𦴩𧪄𣘀𤪱𢔓倩𠍾徤𠎀𠍇滛𠐟偽儁㑺儎顬㝃萖𤦤𠒇兠𣎴兪𠯿𢃼𠋥𢔰𠖎𣈳𡦃宂蝽𠖳𣲙冲冸"],["faa1","鴴凉减凑㳜凓𤪦决凢卂凭菍椾𣜭彻刋刦刼劵剗劔効勅簕蕂勠蘍𦬓包𨫞啉滙𣾀𠥔𣿬匳卄𠯢泋𡜦栛珕恊㺪㣌𡛨燝䒢卭却𨚫卾卿𡖖𡘓矦厓𨪛厠厫厮玧𥝲㽙玜叁叅汉义埾叙㪫𠮏叠𣿫𢶣叶𠱷吓灹唫晗浛呭𦭓𠵴啝咏咤䞦𡜍𠻝㶴𠵍"],["fb40","𨦼𢚘啇䳭启琗喆喩嘅𡣗𤀺䕒𤐵暳𡂴嘷曍𣊊暤暭噍噏磱囱鞇叾圀囯园𨭦㘣𡉏坆𤆥汮炋坂㚱𦱾埦𡐖堃𡑔𤍣堦𤯵塜墪㕡壠壜𡈼壻寿坃𪅐𤉸鏓㖡够梦㛃湙"],["fba1","𡘾娤啓𡚒蔅姉𠵎𦲁𦴪𡟜姙𡟻𡞲𦶦浱𡠨𡛕姹𦹅媫婣㛦𤦩婷㜈媖瑥嫓𦾡𢕔㶅𡤑㜲𡚸広勐孶斈孼𧨎䀄䡝𠈄寕慠𡨴𥧌𠖥寳宝䴐尅𡭄尓珎尔𡲥𦬨屉䣝岅峩峯嶋𡷹𡸷崐崘嵆𡺤岺巗苼㠭𤤁𢁉𢅳芇㠶㯂帮檊幵幺𤒼𠳓厦亷廐厨𡝱帉廴𨒂"],["fc40","廹廻㢠廼栾鐛弍𠇁弢㫞䢮𡌺强𦢈𢏐彘𢑱彣鞽𦹮彲鍀𨨶徧嶶㵟𥉐𡽪𧃸𢙨釖𠊞𨨩怱暅𡡷㥣㷇㘹垐𢞴祱㹀悞悤悳𤦂𤦏𧩓璤僡媠慤萤慂慈𦻒憁凴𠙖憇宪𣾷"],["fca1","𢡟懓𨮝𩥝懐㤲𢦀𢣁怣慜攞掋𠄘担𡝰拕𢸍捬𤧟㨗搸揸𡎎𡟼撐澊𢸶頔𤂌𥜝擡擥鑻㩦携㩗敍漖𤨨𤨣斅敭敟𣁾斵𤥀䬷旑䃘𡠩无旣忟𣐀昘𣇷𣇸晄𣆤𣆥晋𠹵晧𥇦晳晴𡸽𣈱𨗴𣇈𥌓矅𢣷馤朂𤎜𤨡㬫槺𣟂杞杧杢𤇍𩃭柗䓩栢湐鈼栁𣏦𦶠桝"],["fd40","𣑯槡樋𨫟楳棃𣗍椁椀㴲㨁𣘼㮀枬楡𨩊䋼椶榘㮡𠏉荣傐槹𣙙𢄪橅𣜃檝㯳枱櫈𩆜㰍欝𠤣惞欵歴𢟍溵𣫛𠎵𡥘㝀吡𣭚毡𣻼毜氷𢒋𤣱𦭑汚舦汹𣶼䓅𣶽𤆤𤤌𤤀"],["fda1","𣳉㛥㳫𠴲鮃𣇹𢒑羏样𦴥𦶡𦷫涖浜湼漄𤥿𤂅𦹲蔳𦽴凇沜渝萮𨬡港𣸯瑓𣾂秌湏媑𣁋濸㜍澝𣸰滺𡒗𤀽䕕鏰潄潜㵎潴𩅰㴻澟𤅄濓𤂑𤅕𤀹𣿰𣾴𤄿凟𤅖𤅗𤅀𦇝灋灾炧炁烌烕烖烟䄄㷨熴熖𤉷焫煅媈煊煮岜𤍥煏鍢𤋁焬𤑚𤨧𤨢熺𨯨炽爎"],["fe40","鑂爕夑鑃爤鍁𥘅爮牀𤥴梽牕牗㹕𣁄栍漽犂猪猫𤠣𨠫䣭𨠄猨献珏玪𠰺𦨮珉瑉𤇢𡛧𤨤昣㛅𤦷𤦍𤧻珷琕椃𤨦琹𠗃㻗瑜𢢭瑠𨺲瑇珤瑶莹瑬㜰瑴鏱樬璂䥓𤪌"],["fea1","𤅟𤩹𨮏孆𨰃𡢞瓈𡦈甎瓩甞𨻙𡩋寗𨺬鎅畍畊畧畮𤾂㼄𤴓疎瑝疞疴瘂瘬癑癏癯癶𦏵皐臯㟸𦤑𦤎皡皥皷盌𦾟葢𥂝𥅽𡸜眞眦着撯𥈠睘𣊬瞯𨥤𨥨𡛁矴砉𡍶𤨒棊碯磇磓隥礮𥗠磗礴碱𧘌辸袄𨬫𦂃𢘜禆褀椂禀𥡗禝𧬹礼禩渪𧄦㺨秆𩄍秔"]]')},function(t,e){},function(t,e){},function(t,e,n){var i=n(215),r=n(229)((function(t,e){return null==t?{}:i(t,e)}));t.exports=r},function(t,e,n){var i=n(216),r=n(226);t.exports=function(t,e){return i(t,e,(function(e,n){return r(t,n)}))}},function(t,e,n){var i=n(217),r=n(225),a=n(32);t.exports=function(t,e,n){for(var o=-1,s=e.length,c={};++o<s;){var u=e[o],l=i(t,u);n(l,u)&&r(c,a(u,t),l)}return c}},function(t,e,n){var i=n(32),r=n(46);t.exports=function(t,e){for(var n=0,a=(e=i(e,t)).length;null!=t&&n<a;)t=t[r(e[n++])];return n&&n==a?t:void 0}},function(t,e,n){var i=n(7),r=n(45),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;t.exports=function(t,e){if(i(t))return!1;var n=typeof t;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=t&&!r(t))||(o.test(t)||!a.test(t)||null!=e&&t in Object(e))}},function(t,e,n){var i=n(220),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,o=i((function(t){var e=[];return 46===t.charCodeAt(0)&&e.push(""),t.replace(r,(function(t,n,i,r){e.push(i?r.replace(a,"$1"):n||t)})),e}));t.exports=o},function(t,e,n){var i=n(221);t.exports=function(t){var e=i(t,(function(t){return 500===n.size&&n.clear(),t})),n=e.cache;return e}},function(t,e,n){var i=n(50);function r(t,e){if("function"!=typeof t||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var n=function(){var i=arguments,r=e?e.apply(this,i):i[0],a=n.cache;if(a.has(r))return a.get(r);var o=t.apply(this,i);return n.cache=a.set(r,o)||a,o};return n.cache=new(r.Cache||i),n}r.Cache=i,t.exports=r},function(t,e,n){var i=n(223);t.exports=function(t){return null==t?"":i(t)}},function(t,e,n){var i=n(22),r=n(224),a=n(7),o=n(45),s=i?i.prototype:void 0,c=s?s.toString:void 0;t.exports=function t(e){if("string"==typeof e)return e;if(a(e))return r(e,t)+"";if(o(e))return c?c.call(e):"";var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},function(t,e){t.exports=function(t,e){for(var n=-1,i=null==t?0:t.length,r=Array(i);++n<i;)r[n]=e(t[n],n,t);return r}},function(t,e,n){var i=n(58),r=n(32),a=n(26),o=n(6),s=n(46);t.exports=function(t,e,n,c){if(!o(t))return t;for(var u=-1,l=(e=r(e,t)).length,p=l-1,f=t;null!=f&&++u<l;){var d=s(e[u]),h=n;if(u!=p){var m=f[d];void 0===(h=c?c(m,d,f):void 0)&&(h=o(m)?m:a(e[u+1])?[]:{})}i(f,d,h),f=f[d]}return t}},function(t,e,n){var i=n(227),r=n(228);t.exports=function(t,e){return null!=t&&r(t,e,i)}},function(t,e){t.exports=function(t,e){return null!=t&&e in Object(t)}},function(t,e,n){var i=n(32),r=n(25),a=n(7),o=n(26),s=n(38),c=n(46);t.exports=function(t,e,n){for(var u=-1,l=(e=i(e,t)).length,p=!1;++u<l;){var f=c(e[u]);if(!(p=null!=t&&n(t,f)))break;t=t[f]}return p||++u!=l?p:!!(l=null==t?0:t.length)&&s(l)&&o(f,l)&&(a(t)||r(t))}},function(t,e,n){var i=n(230),r=n(61),a=n(62);t.exports=function(t){return a(r(t,void 0,i),t+"")}},function(t,e,n){var i=n(231);t.exports=function(t){return(null==t?0:t.length)?i(t,1):[]}},function(t,e,n){var i=n(232),r=n(233);t.exports=function t(e,n,a,o,s){var c=-1,u=e.length;for(a||(a=r),s||(s=[]);++c<u;){var l=e[c];n>0&&a(l)?n>1?t(l,n-1,a,o,s):i(s,l):o||(s[s.length]=l)}return s}},function(t,e){t.exports=function(t,e){for(var n=-1,i=e.length,r=t.length;++n<i;)t[r+n]=e[n];return t}},function(t,e,n){var i=n(22),r=n(25),a=n(7),o=i?i.isConcatSpreadable:void 0;t.exports=function(t){return a(t)||r(t)||!!(o&&t&&t[o])}},function(t,e){function n(t,e){if(t=t.replace(/\s+/g,""),e=e.replace(/\s+/g,""),!t.length&&!e.length)return 1;if(!t.length||!e.length)return 0;if(t===e)return 1;if(1===t.length&&1===e.length)return 0;if(t.length<2||e.length<2)return 0;let n=new Map;for(let e=0;e<t.length-1;e++){const i=t.substr(e,2),r=n.has(i)?n.get(i)+1:1;n.set(i,r)}let i=0;for(let t=0;t<e.length-1;t++){const r=e.substr(t,2),a=n.has(r)?n.get(r):0;a>0&&(n.set(r,a-1),i++)}return 2*i/(t.length+e.length-2)}t.exports={compareTwoStrings:n,findBestMatch:function(t,e){if(!function(t,e){return"string"==typeof t&&(!!Array.isArray(e)&&(!!e.length&&!e.find(t=>"string"!=typeof t)))}(t,e))throw new Error("Bad arguments: First argument should be a string, second should be an array of strings");const i=[];let r=0;for(let a=0;a<e.length;a++){const o=e[a],s=n(t,o);i.push({target:o,rating:s}),s>i[r].rating&&(r=a)}const a=i[r];return{ratings:i,bestMatch:a,bestMatchIndex:r}}}},function(t,e,n){var i=n(236)();t.exports=function(t){return t.replace(i,"")}},function(t,e,n){"use strict";t.exports=function(){return/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74)\uDB40\uDC7F|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC68(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]\uFE0F|(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]))|\uD83D\uDC69\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83D\uDC69\u200D[\u2695\u2696\u2708])\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC68(?:\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDD1-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC69\uDC6E\uDC70-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD26\uDD30-\uDD39\uDD3D\uDD3E\uDDD1-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])?|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDEEB\uDEEC\uDEF4-\uDEF8]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4C\uDD50-\uDD6B\uDD80-\uDD97\uDDC0\uDDD0-\uDDE6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267B\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEF8]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4C\uDD50-\uDD6B\uDD80-\uDD97\uDDC0\uDDD0-\uDDE6])\uFE0F/g}},function(t,e,n){"use strict";const i=n(238),r=n(239);t.exports=t=>{const e=`(?:${`(?:(?:[a-z]+:)?//)${(t={strict:!0,...t}).strict?"":"?"}`}|www\\.)(?:\\S+(?::\\S*)?@)?(?:localhost|${i.v4().source}|(?:(?:[a-z\\u00a1-\\uffff0-9][-_]*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*${`(?:\\.${t.strict?"(?:[a-z\\u00a1-\\uffff]{2,})":`(?:${r.sort((t,e)=>e.length-t.length).join("|")})`})\\.?`})(?::\\d{2,5})?(?:[/?#][^\\s"]*)?`;return t.exact?new RegExp(`(?:^${e}$)`,"i"):new RegExp(e,"ig")}},function(t,e,n){"use strict";const i=t=>t&&t.includeBoundaries?"(?:(?<=\\s|^)(?=[a-fA-F\\d:])|(?<=[a-fA-F\\d:])(?=\\s|$))":"",r="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",a="[a-fA-F\\d]{1,4}",o=`\n(\n(?:${a}:){7}(?:${a}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${a}:){6}(?:${r}|:${a}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${a}:){5}(?::${r}|(:${a}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${a}:){4}(?:(:${a}){0,1}:${r}|(:${a}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${a}:){3}(?:(:${a}){0,2}:${r}|(:${a}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${a}:){2}(?:(:${a}){0,3}:${r}|(:${a}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${a}:){1}(?:(:${a}){0,4}:${r}|(:${a}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::((?::${a}){0,5}:${r}|(?::${a}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\n`.replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),s=t=>t&&t.exact?new RegExp(`(?:^${r}$)|(?:^${o}$)`):new RegExp(`(?:${i(t)}${r}${i(t)})|(?:${i(t)}${o}${i(t)})`,"g");s.v4=t=>t&&t.exact?new RegExp(`^${r}$`):new RegExp(`${i(t)}${r}${i(t)}`,"g"),s.v6=t=>t&&t.exact?new RegExp(`^${o}$`):new RegExp(`${i(t)}${o}${i(t)}`,"g"),t.exports=s},function(t,e){t.exports=["aaa","aarp","abarth","abb","abbott","abbvie","abc","able","abogado","abudhabi","ac","academy","accenture","accountant","accountants","aco","actor","ad","adac","ads","adult","ae","aeg","aero","aetna","af","afamilycompany","afl","africa","ag","agakhan","agency","ai","aig","aigo","airbus","airforce","airtel","akdn","al","alfaromeo","alibaba","alipay","allfinanz","allstate","ally","alsace","alstom","am","americanexpress","americanfamily","amex","amfam","amica","amsterdam","analytics","android","anquan","anz","ao","aol","apartments","app","apple","aq","aquarelle","ar","arab","aramco","archi","army","arpa","art","arte","as","asda","asia","associates","at","athleta","attorney","au","auction","audi","audible","audio","auspost","author","auto","autos","avianca","aw","aws","ax","axa","az","azure","ba","baby","baidu","banamex","bananarepublic","band","bank","bar","barcelona","barclaycard","barclays","barefoot","bargains","baseball","basketball","bauhaus","bayern","bb","bbc","bbt","bbva","bcg","bcn","bd","be","beats","beauty","beer","bentley","berlin","best","bestbuy","bet","bf","bg","bh","bharti","bi","bible","bid","bike","bing","bingo","bio","biz","bj","black","blackfriday","blockbuster","blog","bloomberg","blue","bm","bms","bmw","bn","bnpparibas","bo","boats","boehringer","bofa","bom","bond","boo","book","booking","bosch","bostik","boston","bot","boutique","box","br","bradesco","bridgestone","broadway","broker","brother","brussels","bs","bt","budapest","bugatti","build","builders","business","buy","buzz","bv","bw","by","bz","bzh","ca","cab","cafe","cal","call","calvinklein","cam","camera","camp","cancerresearch","canon","capetown","capital","capitalone","car","caravan","cards","care","career","careers","cars","casa","case","caseih","cash","casino","cat","catering","catholic","cba","cbn","cbre","cbs","cc","cd","ceb","center","ceo","cern","cf","cfa","cfd","cg","ch","chanel","channel","charity","chase","chat","cheap","chintai","christmas","chrome","church","ci","cipriani","circle","cisco","citadel","citi","citic","city","cityeats","ck","cl","claims","cleaning","click","clinic","clinique","clothing","cloud","club","clubmed","cm","cn","co","coach","codes","coffee","college","cologne","com","comcast","commbank","community","company","compare","computer","comsec","condos","construction","consulting","contact","contractors","cooking","cookingchannel","cool","coop","corsica","country","coupon","coupons","courses","cpa","cr","credit","creditcard","creditunion","cricket","crown","crs","cruise","cruises","csc","cu","cuisinella","cv","cw","cx","cy","cymru","cyou","cz","dabur","dad","dance","data","date","dating","datsun","day","dclk","dds","de","deal","dealer","deals","degree","delivery","dell","deloitte","delta","democrat","dental","dentist","desi","design","dev","dhl","diamonds","diet","digital","direct","directory","discount","discover","dish","diy","dj","dk","dm","dnp","do","docs","doctor","dog","domains","dot","download","drive","dtv","dubai","duck","dunlop","dupont","durban","dvag","dvr","dz","earth","eat","ec","eco","edeka","edu","education","ee","eg","email","emerck","energy","engineer","engineering","enterprises","epson","equipment","er","ericsson","erni","es","esq","estate","esurance","et","etisalat","eu","eurovision","eus","events","exchange","expert","exposed","express","extraspace","fage","fail","fairwinds","faith","family","fan","fans","farm","farmers","fashion","fast","fedex","feedback","ferrari","ferrero","fi","fiat","fidelity","fido","film","final","finance","financial","fire","firestone","firmdale","fish","fishing","fit","fitness","fj","fk","flickr","flights","flir","florist","flowers","fly","fm","fo","foo","food","foodnetwork","football","ford","forex","forsale","forum","foundation","fox","fr","free","fresenius","frl","frogans","frontdoor","frontier","ftr","fujitsu","fujixerox","fun","fund","furniture","futbol","fyi","ga","gal","gallery","gallo","gallup","game","games","gap","garden","gay","gb","gbiz","gd","gdn","ge","gea","gent","genting","george","gf","gg","ggee","gh","gi","gift","gifts","gives","giving","gl","glade","glass","gle","global","globo","gm","gmail","gmbh","gmo","gmx","gn","godaddy","gold","goldpoint","golf","goo","goodyear","goog","google","gop","got","gov","gp","gq","gr","grainger","graphics","gratis","green","gripe","grocery","group","gs","gt","gu","guardian","gucci","guge","guide","guitars","guru","gw","gy","hair","hamburg","hangout","haus","hbo","hdfc","hdfcbank","health","healthcare","help","helsinki","here","hermes","hgtv","hiphop","hisamitsu","hitachi","hiv","hk","hkt","hm","hn","hockey","holdings","holiday","homedepot","homegoods","homes","homesense","honda","horse","hospital","host","hosting","hot","hoteles","hotels","hotmail","house","how","hr","hsbc","ht","hu","hughes","hyatt","hyundai","ibm","icbc","ice","icu","id","ie","ieee","ifm","ikano","il","im","imamat","imdb","immo","immobilien","in","inc","industries","infiniti","info","ing","ink","institute","insurance","insure","int","intel","international","intuit","investments","io","ipiranga","iq","ir","irish","is","ismaili","ist","istanbul","it","itau","itv","iveco","jaguar","java","jcb","jcp","je","jeep","jetzt","jewelry","jio","jll","jm","jmp","jnj","jo","jobs","joburg","jot","joy","jp","jpmorgan","jprs","juegos","juniper","kaufen","kddi","ke","kerryhotels","kerrylogistics","kerryproperties","kfh","kg","kh","ki","kia","kim","kinder","kindle","kitchen","kiwi","km","kn","koeln","komatsu","kosher","kp","kpmg","kpn","kr","krd","kred","kuokgroup","kw","ky","kyoto","kz","la","lacaixa","lamborghini","lamer","lancaster","lancia","land","landrover","lanxess","lasalle","lat","latino","latrobe","law","lawyer","lb","lc","lds","lease","leclerc","lefrak","legal","lego","lexus","lgbt","li","liaison","lidl","life","lifeinsurance","lifestyle","lighting","like","lilly","limited","limo","lincoln","linde","link","lipsy","live","living","lixil","lk","llc","loan","loans","locker","locus","loft","lol","london","lotte","lotto","love","lpl","lplfinancial","lr","ls","lt","ltd","ltda","lu","lundbeck","lupin","luxe","luxury","lv","ly","ma","macys","madrid","maif","maison","makeup","man","management","mango","map","market","marketing","markets","marriott","marshalls","maserati","mattel","mba","mc","mckinsey","md","me","med","media","meet","melbourne","meme","memorial","men","menu","merckmsd","metlife","mg","mh","miami","microsoft","mil","mini","mint","mit","mitsubishi","mk","ml","mlb","mls","mm","mma","mn","mo","mobi","mobile","moda","moe","moi","mom","monash","money","monster","mormon","mortgage","moscow","moto","motorcycles","mov","movie","movistar","mp","mq","mr","ms","msd","mt","mtn","mtr","mu","museum","mutual","mv","mw","mx","my","mz","na","nab","nadex","nagoya","name","nationwide","natura","navy","nba","nc","ne","nec","net","netbank","netflix","network","neustar","new","newholland","news","next","nextdirect","nexus","nf","nfl","ng","ngo","nhk","ni","nico","nike","nikon","ninja","nissan","nissay","nl","no","nokia","northwesternmutual","norton","now","nowruz","nowtv","np","nr","nra","nrw","ntt","nu","nyc","nz","obi","observer","off","office","okinawa","olayan","olayangroup","oldnavy","ollo","om","omega","one","ong","onl","online","onyourside","ooo","open","oracle","orange","org","organic","origins","osaka","otsuka","ott","ovh","pa","page","panasonic","paris","pars","partners","parts","party","passagens","pay","pccw","pe","pet","pf","pfizer","pg","ph","pharmacy","phd","philips","phone","photo","photography","photos","physio","pics","pictet","pictures","pid","pin","ping","pink","pioneer","pizza","pk","pl","place","play","playstation","plumbing","plus","pm","pn","pnc","pohl","poker","politie","porn","post","pr","pramerica","praxi","press","prime","pro","prod","productions","prof","progressive","promo","properties","property","protection","pru","prudential","ps","pt","pub","pw","pwc","py","qa","qpon","quebec","quest","qvc","racing","radio","raid","re","read","realestate","realtor","realty","recipes","red","redstone","redumbrella","rehab","reise","reisen","reit","reliance","ren","rent","rentals","repair","report","republican","rest","restaurant","review","reviews","rexroth","rich","richardli","ricoh","rightathome","ril","rio","rip","rmit","ro","rocher","rocks","rodeo","rogers","room","rs","rsvp","ru","rugby","ruhr","run","rw","rwe","ryukyu","sa","saarland","safe","safety","sakura","sale","salon","samsclub","samsung","sandvik","sandvikcoromant","sanofi","sap","sarl","sas","save","saxo","sb","sbi","sbs","sc","sca","scb","schaeffler","schmidt","scholarships","school","schule","schwarz","science","scjohnson","scor","scot","sd","se","search","seat","secure","security","seek","select","sener","services","ses","seven","sew","sex","sexy","sfr","sg","sh","shangrila","sharp","shaw","shell","shia","shiksha","shoes","shop","shopping","shouji","show","showtime","shriram","si","silk","sina","singles","site","sj","sk","ski","skin","sky","skype","sl","sling","sm","smart","smile","sn","sncf","so","soccer","social","softbank","software","sohu","solar","solutions","song","sony","soy","space","sport","spot","spreadbetting","sr","srl","ss","st","stada","staples","star","statebank","statefarm","stc","stcgroup","stockholm","storage","store","stream","studio","study","style","su","sucks","supplies","supply","support","surf","surgery","suzuki","sv","swatch","swiftcover","swiss","sx","sy","sydney","symantec","systems","sz","tab","taipei","talk","taobao","target","tatamotors","tatar","tattoo","tax","taxi","tc","tci","td","tdk","team","tech","technology","tel","telefonica","temasek","tennis","teva","tf","tg","th","thd","theater","theatre","tiaa","tickets","tienda","tiffany","tips","tires","tirol","tj","tjmaxx","tjx","tk","tkmaxx","tl","tm","tmall","tn","to","today","tokyo","tools","top","toray","toshiba","total","tours","town","toyota","toys","tr","trade","trading","training","travel","travelchannel","travelers","travelersinsurance","trust","trv","tt","tube","tui","tunes","tushu","tv","tvs","tw","tz","ua","ubank","ubs","ug","uk","unicom","university","uno","uol","ups","us","uy","uz","va","vacations","vana","vanguard","vc","ve","vegas","ventures","verisign","versicherung","vet","vg","vi","viajes","video","vig","viking","villas","vin","vip","virgin","visa","vision","vistaprint","viva","vivo","vlaanderen","vn","vodka","volkswagen","volvo","vote","voting","voto","voyage","vu","vuelos","wales","walmart","walter","wang","wanggou","watch","watches","weather","weatherchannel","webcam","weber","website","wed","wedding","weibo","weir","wf","whoswho","wien","wiki","williamhill","win","windows","wine","winners","wme","wolterskluwer","woodside","work","works","world","wow","ws","wtc","wtf","xbox","xerox","xfinity","xihuan","xin","कॉम","セール","佛山","ಭಾರತ","慈善","集团","在线","한국","ଭାରତ","大众汽车","点看","คอม","ভাৰত","ভারত","八卦","موقع","বাংলা","公益","公司","香格里拉","网站","移动","我爱你","москва","қаз","католик","онлайн","сайт","联通","срб","бг","бел","קום","时尚","微博","淡马锡","ファッション","орг","नेट","ストア","삼성","சிங்கப்பூர்","商标","商店","商城","дети","мкд","ею","ポイント","新闻","工行","家電","كوم","中文网","中信","中国","中國","娱乐","谷歌","భారత్","ලංකා","電訊盈科","购物","クラウド","ભારત","通販","भारतम्","भारत","भारोत","网店","संगठन","餐厅","网络","ком","укр","香港","诺基亚","食品","飞利浦","台湾","台灣","手表","手机","мон","الجزائر","عمان","ارامكو","ایران","العليان","اتصالات","امارات","بازار","موريتانيا","پاکستان","الاردن","بارت","بھارت","المغرب","ابوظبي","السعودية","ڀارت","كاثوليك","سودان","همراه","عراق","مليسيا","澳門","닷컴","政府","شبكة","بيتك","عرب","გე","机构","组织机构","健康","ไทย","سورية","招聘","рус","рф","珠宝","تونس","大拿","みんな","グーグル","ευ","ελ","世界","書籍","ഭാരതം","ਭਾਰਤ","网址","닷넷","コム","天主教","游戏","vermögensberater","vermögensberatung","企业","信息","嘉里大酒店","嘉里","مصر","قطر","广东","இலங்கை","இந்தியா","հայ","新加坡","فلسطين","政务","xxx","xyz","yachts","yahoo","yamaxun","yandex","ye","yodobashi","yoga","yokohama","you","youtube","yt","yun","za","zappos","zara","zero","zip","zm","zone","zuerich","zw"]},function(t,e,n){t.exports=Object.assign({},n(31))}])}));

/***/ }),

/***/ "./node_modules/akili/src/akili.js":
/*!*****************************************!*\
  !*** ./node_modules/akili/src/akili.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(/*! babel-runtime/helpers/extends */ "./node_modules/babel-runtime/helpers/extends.js");

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty = __webpack_require__(/*! babel-runtime/core-js/object/define-property */ "./node_modules/babel-runtime/core-js/object/define-property.js");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

var _getOwnPropertyDescriptor = __webpack_require__(/*! babel-runtime/core-js/object/get-own-property-descriptor */ "./node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js");

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

var _getOwnPropertyNames = __webpack_require__(/*! babel-runtime/core-js/object/get-own-property-names */ "./node_modules/babel-runtime/core-js/object/get-own-property-names.js");

var _getOwnPropertyNames2 = _interopRequireDefault(_getOwnPropertyNames);

var _promise = __webpack_require__(/*! babel-runtime/core-js/promise */ "./node_modules/babel-runtime/core-js/promise.js");

var _promise2 = _interopRequireDefault(_promise);

var _keys = __webpack_require__(/*! babel-runtime/core-js/object/keys */ "./node_modules/babel-runtime/core-js/object/keys.js");

var _keys2 = _interopRequireDefault(_keys);

var _component2 = __webpack_require__(/*! ./component.js */ "./node_modules/akili/src/component.js");

var _component3 = _interopRequireDefault(_component2);

var _if = __webpack_require__(/*! ./components/if.js */ "./node_modules/akili/src/components/if.js");

var _if2 = _interopRequireDefault(_if);

var _for = __webpack_require__(/*! ./components/for.js */ "./node_modules/akili/src/components/for.js");

var _for2 = _interopRequireDefault(_for);

var _select = __webpack_require__(/*! ./components/select.js */ "./node_modules/akili/src/components/select.js");

var _select2 = _interopRequireDefault(_select);

var _input = __webpack_require__(/*! ./components/input.js */ "./node_modules/akili/src/components/input.js");

var _input2 = _interopRequireDefault(_input);

var _radio = __webpack_require__(/*! ./components/radio.js */ "./node_modules/akili/src/components/radio.js");

var _radio2 = _interopRequireDefault(_radio);

var _text = __webpack_require__(/*! ./components/text.js */ "./node_modules/akili/src/components/text.js");

var _text2 = _interopRequireDefault(_text);

var _textarea = __webpack_require__(/*! ./components/textarea.js */ "./node_modules/akili/src/components/textarea.js");

var _textarea2 = _interopRequireDefault(_textarea);

var _content = __webpack_require__(/*! ./components/content.js */ "./node_modules/akili/src/components/content.js");

var _content2 = _interopRequireDefault(_content);

var _include = __webpack_require__(/*! ./components/include.js */ "./node_modules/akili/src/components/include.js");

var _include2 = _interopRequireDefault(_include);

var _iframe = __webpack_require__(/*! ./components/iframe.js */ "./node_modules/akili/src/components/iframe.js");

var _iframe2 = _interopRequireDefault(_iframe);

var _image = __webpack_require__(/*! ./components/image.js */ "./node_modules/akili/src/components/image.js");

var _image2 = _interopRequireDefault(_image);

var _embed = __webpack_require__(/*! ./components/embed.js */ "./node_modules/akili/src/components/embed.js");

var _embed2 = _interopRequireDefault(_embed);

var _audio = __webpack_require__(/*! ./components/audio.js */ "./node_modules/akili/src/components/audio.js");

var _audio2 = _interopRequireDefault(_audio);

var _video = __webpack_require__(/*! ./components/video.js */ "./node_modules/akili/src/components/video.js");

var _video2 = _interopRequireDefault(_video);

var _track = __webpack_require__(/*! ./components/track.js */ "./node_modules/akili/src/components/track.js");

var _track2 = _interopRequireDefault(_track);

var _source = __webpack_require__(/*! ./components/source.js */ "./node_modules/akili/src/components/source.js");

var _source2 = _interopRequireDefault(_source);

var _object = __webpack_require__(/*! ./components/object.js */ "./node_modules/akili/src/components/object.js");

var _object2 = _interopRequireDefault(_object);

var _route = __webpack_require__(/*! ./components/route.js */ "./node_modules/akili/src/components/route.js");

var _route2 = _interopRequireDefault(_route);

var _url = __webpack_require__(/*! ./components/url.js */ "./node_modules/akili/src/components/url.js");

var _url2 = _interopRequireDefault(_url);

var _a = __webpack_require__(/*! ./components/a.js */ "./node_modules/akili/src/components/a.js");

var _a2 = _interopRequireDefault(_a);

var _scope = __webpack_require__(/*! ./scope.js */ "./node_modules/akili/src/scope.js");

var _scope2 = _interopRequireDefault(_scope);

var _eventEmitter = __webpack_require__(/*! ./event-emitter.js */ "./node_modules/akili/src/event-emitter.js");

var _eventEmitter2 = _interopRequireDefault(_eventEmitter);

var _request = __webpack_require__(/*! ./services/request.js */ "./node_modules/akili/src/services/request.js");

var _request2 = _interopRequireDefault(_request);

var _router = __webpack_require__(/*! ./services/router.js */ "./node_modules/akili/src/services/router.js");

var _router2 = _interopRequireDefault(_router);

var _store = __webpack_require__(/*! ./services/store.js */ "./node_modules/akili/src/services/store.js");

var _store2 = _interopRequireDefault(_store);

var _utils = __webpack_require__(/*! ./utils.js */ "./node_modules/akili/src/utils.js");

var _utils2 = _interopRequireDefault(_utils);

var _globals = __webpack_require__(/*! ./globals.js */ "./node_modules/akili/src/globals.js");

var _globals2 = _interopRequireDefault(_globals);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The framework main object
 * 
 * {@link https://akilijs.com/docs/getting-started}
 */
/**
 * Javascript framework
 *
 * const Akili = makeItEasy(js + html);
 *
 * @author Alexandr Balasyan <mywebstreet@gmail.com>
 * @link http://akilijs.com
 */

var Akili = {};

Akili.options = {
  debug: true
};

Akili.__init = null;
Akili.__root = null;
Akili.__components = {};
Akili.__aliases = {};
Akili.__scopes = {};
Akili.__storeLinks = {};
Akili.__window = {};
Akili.__tags = {};
Akili.__isolation = null;
Akili.__evaluation = null;
Akili.__wrapping = false;
Akili.__rootOuterHTML = '';
Akili.__onError = function () {
  return Akili.triggerInit(false);
};

Akili.htmlBooleanAttributes = ['disabled', 'contenteditable', 'hidden'];

Akili.components = {};
Akili.services = {};
Akili.Component = _component3.default;
Akili.EventEmitter = _eventEmitter2.default;
Akili.Scope = _scope2.default;
Akili.utils = _utils2.default;
Akili.globals = _globals2.default;
Akili.components.A = _a2.default;
Akili.components.Audio = _audio2.default;
Akili.components.Content = _content2.default;
Akili.components.For = _for2.default;
Akili.components.Embed = _embed2.default;
Akili.components.If = _if2.default;
Akili.components.Include = _include2.default;
Akili.components.Input = _input2.default;
Akili.components.Iframe = _iframe2.default;
Akili.components.Image = _image2.default;
Akili.components.Object = _object2.default;
Akili.components.Radio = _radio2.default;
Akili.components.Route = _route2.default;
Akili.components.Select = _select2.default;
Akili.components.Source = _source2.default;
Akili.components.Text = _text2.default;
Akili.components.Textarea = _textarea2.default;
Akili.components.Track = _track2.default;
Akili.components.Url = _url2.default;
Akili.components.Video = _video2.default;
Akili.services.request = _request2.default;
Akili.services.router = _router2.default;
Akili.services.store = _store2.default;

/**
 * Define the default components
 */
Akili.define = function () {
  _a2.default.define();
  _audio2.default.define();
  _content2.default.define();
  _component3.default.define();
  _embed2.default.define();
  _for2.default.define();
  _include2.default.define();
  _iframe2.default.define();
  _image2.default.define();
  _input2.default.define();
  _if2.default.define();
  _object2.default.define();
  _radio2.default.define();
  _route2.default.define();
  _select2.default.define();
  _source2.default.define();
  _textarea2.default.define();
  _track2.default.define();
  _video2.default.define();
};

/**
 * Clear the global context
 */
Akili.clearGlobals = function () {
  for (var key in _globals2.default) {
    delete _globals2.default[key];
  }

  for (var _key in this.__window.Element.prototype) {
    Element.prototype[_key] = this.__window.Element.prototype[_key];
  }

  for (var _key2 in this.__window.Array.prototype) {
    Array.prototype[_key2] = this.__window.Array.prototype[_key2];
  }

  for (var _key3 in this.options.globals) {
    this.options.globals[_key3] = this.unwrap(this.options.globals[_key3]);
  }

  window.setTimeout = this.__window.setTimeout;
  window.setInterval = this.__window.setInterval;
  window.Promise = this.__window.Promise;
  window.removeEventListener('error', this.__onError);
};

/**
 * Join the binding keys
 *
 * @param {string[]} keys binding keys
 */
Akili.joinBindingKeys = function (keys) {
  return keys.map(function (el) {
    return el.toString();
  }).join('.');
};

/**
 * Add the scope
 *
 * @param scope
 */
Akili.addScope = function (scope) {
  if (this.__scopes[scope.__name]) {
    throw new Error('Scope name ' + scope.__name + ' already exists');
  }

  this.__scopes[scope.__name] = scope;
};

/**
 * Get the scope
 *
 * @param {string} name - scope name
 * @returns {Scope}
 */
Akili.getScope = function (name) {
  return this.__scopes[name];
};

/**
 * Remove the scope
 *
 * @param {string} name - scope name
 */
Akili.removeScope = function (name) {
  delete this.__scopes[name];
};

/**
 * Get all elements that is wrapped in the Akili component
 *
 * @param {Element} el
 * @param {boolean} [tree=true] - return array of the parents if true, closest parent if false
 * @returns {Array|Element|null}
 */
Akili.getAkiliParents = function (el) {
  var tree = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var arr = [];

  function check(node) {
    if (!node.parentNode) {
      return;
    }

    if (node.parentNode.__akili) {
      arr.push(node.parentNode);

      if (!tree) {
        return;
      }
    }

    check(node.parentNode);
  }

  check(el);
  return tree ? arr : arr[0];
};

/**
 * Create the template
 *
 * @example
 * // returns "<i>Hello</i><b>World</b>"
 * el.innerHTML = "<b>World</b>";
 * Akili.setTemplate(el, "<i>Hello</i>${this.__children}");
 *
 * @param {Element} el
 * @param {string} template
 * @returns {string}
 */
Akili.setTemplate = function (el, template) {
  template = template.replace(/\${(((?!\${)\s*this\.__content\s*)*)}/, el.innerHTML);
  el.innerHTML = template;
  return el.innerHTML;
};

/**
 * Generate the unique scope name
 *
 * @returns {string}
 */
Akili.createScopeName = function () {
  var _this = this;

  return _utils2.default.createRandomString(16, function (str) {
    return !!_this.__scopes[str];
  });
};

/**
 * Isolate the scope changes
 *
 * @param {function} fn
 * @returns {*}
 */
Akili.isolate = function (fn) {
  var isolation = this.__isolation;
  !isolation && (this.__isolation = {});
  var res = void 0;

  try {
    res = fn();

    if (isolation) {
      return res;
    }
  } catch (err) {
    this.__isolation = null;
    throw err;
  }

  var props = [];

  for (var k in this.__isolation) {
    props.push(this.__isolation[k]);
  }

  this.__isolation = null;

  for (var i = 0, l = props.length; i < l; i++) {
    var prop = props[i];

    if (prop.component.__isRemoved) {
      continue;
    }

    prop.component.__isResolved && prop.component.__triggerStoreAndAttr(prop.keys);
    prop.component.__evaluateByKeys(prop.keys);
  }

  return res;
};

/**
 * Stop the evaluation inside the function
 *
 * @param {function} fn
 * @returns {*}
 */
Akili.unevaluate = function (fn) {
  var evaluation = this.__evaluation;
  this.__evaluation = null;
  var res = void 0;

  try {
    res = fn();
  } catch (err) {
    this.__evaluation = evaluation;
    throw err;
  }

  this.__evaluation = evaluation;
  return res;
};

/**
 * Evaluate only the root properties
 *
 * @param {function} fn
 * @returns {*}
 */
Akili.wrapping = function (fn) {
  var wrapping = this.__wrapping;
  !wrapping && (this.__wrapping = true);
  var res = void 0;

  try {
    res = fn();

    if (wrapping) {
      return res;
    }
  } catch (err) {
    this.__wrapping = false;
    throw err;
  }

  this.__wrapping = false;
  return res;
};

/**
 * Stop the isolation inside the function
 *
 * @param {function} fn
 * @returns {*}
 */
Akili.unisolate = function (fn) {
  var isolation = this.__isolation;
  this.__isolation = null;
  var res = void 0;

  try {
    res = fn();
  } catch (err) {
    this.__isolation = isolation;
    throw err;
  }

  this.__isolation = isolation;
  return res;
};

/**
 * Initialize the element
 *
 * @param {Element} el
 * @param {object} [options={}]
 * @returns {*}
 */
Akili.initialize = function (el) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var recompile = options.recompile;
  var component = el.__akili;

  if (component) {
    if (recompile) {
      component.__recompile(recompile === true ? {} : recompile);
      return component;
    }

    return;
  }

  var isRoot = el === this.__root;
  var componentName = _utils2.default.toDashCase(el.getAttribute('component') || el.tagName.toLowerCase());
  var _Component = this.__components[componentName];

  CHECK_ALIASES: if (!_Component) {
    var selectors = (0, _keys2.default)(this.__aliases);

    if (!selectors.length) {
      break CHECK_ALIASES;
    }

    var selectorAll = selectors.join(',');

    if (!el.matches(selectorAll)) {
      break CHECK_ALIASES;
    }

    for (var i = 0, l = selectors.length; i < l; i++) {
      var selector = selectors[i];

      if (el.matches(selector)) {
        _Component = this.__components[this.__aliases[selector]];
        break;
      }
    }
  }

  if (!_Component && !isRoot) {
    return;
  }

  if (!_Component) {
    _Component = this.Component;
  }

  if (_Component.matches && !el.matches(_Component.matches)) {
    return;
  }

  component = new _Component(el, {});

  if (component.__cancelled) {
    return;
  }

  if (Akili.getAkiliParents(el).find(function (p) {
    return p.__akili.__prevent;
  })) {
    return;
  }

  component.__create();
  return component;
};

/**
 * Compile the element
 *
 * @param {Element} root
 * @param {object} [options]
 * @returns {Promise}
 */
Akili.compile = function (root) {
  var _this2 = this;

  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { recompile: false };

  var elements = [];

  if (window.AKILI_SSR) {
    var arr = root.querySelectorAll('[no-ssr]');

    for (var i = 0, l = arr.length; i < l; i++) {
      arr[i].remove();
    }
  }

  var nestedInitializing = function nestedInitializing(el) {
    var component = _this2.initialize(el, options);
    var children = el.children;
    component && elements.push(component);

    for (var _i = 0, _l = children.length; _i < _l; _i++) {
      var child = children[_i];
      nestedInitializing(child);
    }
  };

  nestedInitializing(root);
  var p = [];

  for (var _i2 = 0, _l2 = elements.length; _i2 < _l2; _i2++) {
    var component = elements[_i2];
    p.push(component.__compile());
  }

  return _promise2.default.all(p).then(function () {
    var r = [];

    for (var _i3 = elements.length - 1; _i3 >= 0; _i3--) {
      var _component = elements[_i3];
      r.push(_component.__resolve());
    }

    return _promise2.default.all(r);
  });
};

/**
 * Register the component.
 * Or get it if the function is not passed
 *
 * @param {string} name
 * @param {Component} [fn]
 */
Akili.component = function (name, fn) {
  name = name.toLowerCase();

  if (!fn) {
    return this.__components[name] || null;
  }

  if (this.__components[name] && Akili.options.debug) {
    // eslint-disable-next-line no-console
    console.warn('Component ' + name + ' already was added');
  }

  this.__components[name] = fn;
};

/**
 * Remove the component
 *
 * @param {string} name
 */
Akili.removeComponent = function (name) {
  delete this.__components[name];
};

/**
 * Register the selector alias.
 * Or get it if the component name is not passed
 *
 * @param {string} selector - DOM selector
 * @param {string} [componentName]
 */
Akili.alias = function (selector) {
  var componentName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  componentName = componentName.toLowerCase();

  if (!componentName) {
    return this.__aliases[selector] || null;
  }

  if (this.__aliases[selector] && Akili.options.debug) {
    // eslint-disable-next-line no-console
    console.warn('Alias with selector ' + selector + ' already was added');
  }

  this.__aliases[selector] = componentName;
};

/**
 * Remove the selector alias
 *
 * @param {string} selector
 */
Akili.removeAlias = function (selector) {
  delete this.__aliases[selector];
};

/**
 * Isolate the array prototype functions
 */
Akili.isolateArrayPrototype = function () {
  var _this3 = this;

  this.__window.Array = { prototype: {} };
  var keys = (0, _getOwnPropertyNames2.default)(Array.prototype);

  var _loop = function _loop(i, l) {
    var key = keys[i];
    var old = Array.prototype[key];

    if (typeof old != 'function' || key == 'constructor') {
      return 'continue';
    }

    _this3.__window.Array.prototype[key] = old;

    Array.prototype[key] = function () {
      var _this4 = this,
          _arguments = arguments;

      return Akili.unevaluate(function () {
        if (!_this4.__isProxy) {
          return old.apply(_this4, _arguments);
        }

        return Akili.isolate(function () {
          return old.apply(_this4, _arguments);
        });
      });
    };
  };

  for (var i = 0, l = keys.length; i < l; i++) {
    var _ret = _loop(i, l);

    if (_ret === 'continue') continue;
  }
};

/**
 * Isolate the window functions
 */
Akili.isolateWindowFunctions = function () {
  this.__window.setTimeout = setTimeout;
  this.__window.setInterval = setInterval;
  this.__window.Promise = window.Promise;
  window.setTimeout = this.createCallbackIsolation(window.setTimeout, 0);
  window.setInterval = this.createCallbackIsolation(window.setInterval, 0);

  if (!window.AKILI_SSR) {
    window.Promise.constructor = this.createCallbackIsolation(window.Promise.constructor);
    window.Promise.prototype.then = this.createCallbackIsolation(window.Promise.prototype.then, [0, 'last']);
    window.Promise.prototype.catch = this.createCallbackIsolation(window.Promise.prototype.catch);
  }
};

/**
 * Isolate the globals
 */
Akili.isolateGlobals = function () {
  _globals2.default.__target.utils = this.wrap(_utils2.default);
  this.isolateEvents();
  this.isolateArrayPrototype();
  this.isolateWindowFunctions();
};

/**
 * Isolate the event listeners
 */
Akili.isolateEvents = function () {
  this.__window.Element = { prototype: {} };

  if (window.AKILI_SSR) {
    return;
  }

  this.__window.Element.prototype.addEventListener = Element.prototype.addEventListener;
  this.__window.Element.prototype.removeEventListener = Element.prototype.removeEventListener;
  this.__window.Element.prototype.remove = Element.prototype.remove;

  Element.prototype.remove = function () {
    delete this.__akiliListeners;
    return Akili.__window.Element.prototype.remove.apply(this, arguments);
  };

  Element.prototype.addEventListener = function (name, fn) {
    var args = [].slice.call(arguments);

    if (!this.__akiliListeners) {
      this.__akiliListeners = {};
    }

    if (!this.__akiliListeners[name]) {
      this.__akiliListeners[name] = [];
    }

    if (typeof fn === 'function') {
      args[1] = function () {
        var _this5 = this,
            _arguments2 = arguments;

        return Akili.isolate(function () {
          return fn.apply(_this5, _arguments2);
        });
      };
    }

    this.__akiliListeners[name].push({
      link: fn,
      fn: args[1]
    });

    return Akili.__window.Element.prototype.addEventListener.apply(this, args);
  };

  Element.prototype.removeEventListener = function (name, fn) {
    var args = [].slice.call(arguments);

    if (!this.__akiliListeners) {
      this.__akiliListeners = {};
    }

    if (!this.__akiliListeners[name]) {
      this.__akiliListeners[name] = [];
    }

    for (var i = 0, l = this.__akiliListeners[name].length; i < l; i++) {
      var listener = this.__akiliListeners[name][i];

      if (listener.link === fn) {
        this.__akiliListeners[name].splice(i, 1);
        args[1] = listener.fn;
        i--;
        l--;
        break;
      }
    }

    if (!this.__akiliListeners[name].length) {
      delete this.__akiliListeners[name];
    }

    return Akili.__window.Element.prototype.removeEventListener.apply(this, args);
  };
};

/**
 * Wrap the function callback with the isolation context
 *
 * @param {function} fn
 * @param {number|string|number[]|string[]} [pos="last"]
 * @returns {function}
 */
Akili.createCallbackIsolation = function (fn) {
  var pos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'last';

  return function () {
    var args = [].slice.call(arguments);
    !Array.isArray(pos) && (pos = [pos]);

    var _loop2 = function _loop2(i, l) {
      var num = pos[i];
      var index = num;
      var callback = args[num];

      if (num == 'last') {
        index = args.length - 1;
        callback = args[index];
      }

      if (typeof callback != 'function') {
        return 'continue';
      }

      if (!callback.__isolated) {
        args[index] = function () {
          var _arguments3 = arguments;

          return Akili.isolate(function () {
            return callback.apply(callback, _arguments3);
          });
        };

        Object.defineProperty(args[index], '__isolated', {
          enumerable: false,
          value: callback
        });
      }
    };

    for (var i = 0, l = pos.length; i < l; i++) {
      var _ret2 = _loop2(i, l);

      if (_ret2 === 'continue') continue;
    }

    return fn.apply(this, args);
  };
};

/**
 * Wrap the object/function to isolate and unevaluate data
 *
 * @param {object|function} obj
 * @param {object} [options] 
 */
Akili.wrap = function (obj) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var current = obj;

  if (typeof obj == 'function') {
    obj = this.wrapFunction(obj, options);

    if (obj === current) {
      return obj;
    }
  } else if (!obj || (typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) != 'object' || Array.isArray(obj)) {
    return obj;
  }

  var keys = (0, _getOwnPropertyNames2.default)(obj);

  for (var k = 0, c = keys.length; k < c; k++) {
    var key = keys[k];
    var descriptor = (0, _getOwnPropertyDescriptor2.default)(obj, key);

    if (!descriptor.configurable || !descriptor.writable) {
      continue;
    }

    if (options.reverse) {
      (0, _defineProperty2.default)(obj, key, (0, _extends3.default)({}, descriptor, { value: obj[key].__akili || obj[key] }));
      continue;
    }

    (0, _defineProperty2.default)(obj, key, (0, _extends3.default)({}, descriptor, { value: this.wrap(obj[key], options) }));
  }

  return obj;
};

/**
 * Unwrap the object/function
 *
 * @param {object|function} obj
 */
Akili.unwrap = function (obj) {
  return this.wrap(obj, { reverse: true });
};

/**
 * Isolate the function
 *
 * @param {function} fn
 * @param {object} [options] 
 * @returns {function}
 */
Akili.wrapFunction = function (fn) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (fn.__akili) {
    return fn;
  }

  var akiliWrappedFunction = function akiliWrappedFunction() {
    var _this6 = this,
        _arguments4 = arguments;

    if (options.tag && Akili.__evaluation) {
      Akili.addTag(options.tag, Akili.__evaluation.node);
    }

    return Akili.wrapping(function () {
      return fn.apply(_this6, _arguments4);
    });
  };

  var keys = (0, _keys2.default)(fn);
  akiliWrappedFunction.prototype = fn.prototype;

  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    akiliWrappedFunction[key] = fn[key];
  }

  Object.defineProperty(akiliWrappedFunction, '__akili', {
    enumerable: false,
    value: fn
  });

  return akiliWrappedFunction;
};

/**
 * Add the tag
 * 
 * @param {string} tag
 * @param {Node} node
 */
Akili.addTag = function (tag, node) {
  if (this.hasTag(tag, node)) {
    return;
  }

  if (!this.__tags[node.__name]) {
    this.__tags[node.__name] = {};
  }

  if (!this.__tags[node.__name][tag]) {
    this.__tags[node.__name][tag] = [];
  }

  this.__tags[node.__name][tag].push({ node: node });
};

/**
 * Check the tag exists
 * 
 * @param {string} tag
 * @param {Node} [node]
 * @returns {boolean}
 */
Akili.hasTag = function (tag, node) {
  if (!node) {
    for (var key in this.__tags) {
      for (var k in this.__tags[key]) {
        if (k == tag) {
          return true;
        }
      }
    }

    return false;
  }

  if (!this.__tags[node.__name]) {
    return false;
  }

  if (!this.__tags[node.__name][tag]) {
    return false;
  }

  return true;
};

/**
 * Remove the tag
 * 
 * @param {string} [tag]
 * @param {Node} [node]
 */
Akili.removeTag = function (tag, node) {
  if ((typeof tag === 'undefined' ? 'undefined' : (0, _typeof3.default)(tag)) == 'object') {
    node = tag;
    tag = undefined;
  }

  if (!tag) {
    delete this.__tags[node.__name];
    return;
  }

  if (!node) {
    for (var key in this.__tags) {
      for (var k in this.__tags[key]) {
        if (k == tag) {
          delete this.__tags[key][k];
        }
      }

      if (!(0, _keys2.default)(this.__tags[key]).length) {
        delete this.__tags[key];
      }
    }

    return;
  }

  for (var _key4 in this.__tags[node.__name]) {
    if (_key4 == tag) {
      delete this.__tags[node.__name][_key4];
    }
  }

  if (!(0, _keys2.default)(this.__tags[node.__name]).length) {
    delete this.__tags[node.__name];
  }
};

/**
 * Evaluate the tag expressions
 * 
 * @param {string} tag
 */
Akili.triggerTag = function (tag) {
  for (var key in this.__tags) {
    for (var k in this.__tags[key]) {
      if (k == tag) {
        var arr = this.__tags[key][k];

        for (var i = 0, l = arr.length; i < l; i++) {
          var obj = arr[i];
          obj.node.__component.__evaluateNode(obj.node, false);
        }
      }
    }
  }
};

/**
 * Handle the errors
 */
Akili.handleErrors = function () {
  window.addEventListener('error', this.__onError);
};

/**
 * Trigger the initialization status
 *
 * @param {boolean} status
 */
Akili.triggerInit = function (status) {
  Akili.__init = status;
  window.dispatchEvent(new CustomEvent('akili-init', { detail: status }));
};

/**
 * Initialize the application
 *
 * @param {Element} [root]
 * @returns {Promise}
 */
Akili.init = function (root) {
  var _this7 = this;

  root = root || document.body;
  this.__rootOuterHTML = root.outerHTML;

  if (!(root instanceof Element)) {
    throw new Error('Root element must be an html element');
  }

  if (root === document.documentElement) {
    throw new Error('"html" can\'t be the root element');
  }

  this.__root = root;

  if (window.AKILI_SERVER) {
    Akili.initServerSideHtml(window.AKILI_SERVER.html);
    Akili.initServerSideRequestCache(window.AKILI_SERVER.requestCache);
  } else {
    window.AKILI_CLIENT = {
      html: this.prepareServerSideHtml()
    };
  }

  return this.compile(this.__root).then(function () {
    if (_router2.default.__init) {
      return _router2.default.changeState({ init: true });
    }
  }).then(function () {
    window.AKILI_CLIENT && (window.AKILI_CLIENT.requestCache = _this7.prepareServerSideRequestCache());
    _this7.triggerInit(true);
  }).catch(function (err) {
    _this7.triggerInit(false);
    throw err;
  });
};

/**
 * Deinitialize the application
 */
Akili.deinit = function () {
  this.__root && (this.__root.outerHTML = this.__rootOuterHTML);

  for (var key in this.__scopes) {
    var component = this.__scopes[key].__component;
    component && component.remove();
  }

  this.__rootOuterHTML = '';
  this.__init = null;
  this.__root = null;
  this.__scopes = {};
  this.__storeLinks = {};
  this.__tags = {};
};

/**
 * Destroy the framework
 */
Akili.destroy = function () {
  this.deinit();
  this.clearGlobals();

  var storeKeys = (0, _keys2.default)(_store2.default.__target);

  for (var i = 0, l = storeKeys.length; i < l; i++) {
    delete _store2.default.__target[storeKeys[i]];
  }

  _router2.default.__init && _router2.default.deinit();
  delete window.AKILI_SERVER;
  delete window.AKILI_CLIENT;
  delete window.AKILI_SSR;

  for (var key in Akili) {
    delete Akili[key];
  }

  delete window.Akili;
};

/**
 * Initialize the SSR html
 * 
 * @param {string} html
 */
Akili.initServerSideHtml = function (html) {
  for (var i = this.__root.attributes.length - 1; i >= 0; i--) {
    this.__root.removeAttribute(this.__root.attributes[i].name);
  }

  var parser = new DOMParser();
  var doc = parser.parseFromString(html, "text/html");
  var el = doc.querySelector(this.__root === document.body ? 'body' : 'body > *');
  this.__root.innerHTML = el.innerHTML;

  for (var _i4 = el.attributes.length - 1; _i4 >= 0; _i4--) {
    var attr = el.attributes[_i4];
    this.__root.setAttribute(attr.name, attr.value);
  }
};

/**
 * Initialize the SSR cache
 * 
 * @param {object} obj
 */
Akili.initServerSideRequestCache = function (obj) {
  var init = function init(instance, obj) {
    for (var key in obj) {
      instance.__cache[key] = obj[key];
    }
  };

  for (var key in obj) {
    var instance = key === '__main' ? _request2.default : _request2.default.__instances[key];
    init(instance, obj[key]);
  }
};

/**
 * Prepare the SSR html
 */
Akili.prepareServerSideHtml = function () {
  return this.__root.outerHTML;
};

/**
 * Prepare the SSR cache
 */
Akili.prepareServerSideRequestCache = function () {
  var cache = { __main: _request2.default.__cache };

  for (var key in _request2.default.__instances) {
    cache[key] = _request2.default.__instances[key].__cache;
  }

  return cache;
};

exports.default = Akili;

window.Akili = Akili;
Akili.define();
Akili.handleErrors();
Akili.isolateGlobals();

/***/ }),

/***/ "./node_modules/akili/src/component.js":
/*!*********************************************!*\
  !*** ./node_modules/akili/src/component.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.systemAttributes = exports.evaluationRegexGlobal = exports.evaluationRegex = undefined;

var _toConsumableArray2 = __webpack_require__(/*! babel-runtime/helpers/toConsumableArray */ "./node_modules/babel-runtime/helpers/toConsumableArray.js");

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _stringify = __webpack_require__(/*! babel-runtime/core-js/json/stringify */ "./node_modules/babel-runtime/core-js/json/stringify.js");

var _stringify2 = _interopRequireDefault(_stringify);

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

var _keys = __webpack_require__(/*! babel-runtime/core-js/object/keys */ "./node_modules/babel-runtime/core-js/object/keys.js");

var _keys2 = _interopRequireDefault(_keys);

var _setPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/set-prototype-of */ "./node_modules/babel-runtime/core-js/object/set-prototype-of.js");

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _assign = __webpack_require__(/*! babel-runtime/core-js/object/assign */ "./node_modules/babel-runtime/core-js/object/assign.js");

var _assign2 = _interopRequireDefault(_assign);

var _promise = __webpack_require__(/*! babel-runtime/core-js/promise */ "./node_modules/babel-runtime/core-js/promise.js");

var _promise2 = _interopRequireDefault(_promise);

var _extends2 = __webpack_require__(/*! babel-runtime/helpers/extends */ "./node_modules/babel-runtime/helpers/extends.js");

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _akili = __webpack_require__(/*! ./akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

var _scope2 = __webpack_require__(/*! ./scope.js */ "./node_modules/akili/src/scope.js");

var _scope3 = _interopRequireDefault(_scope2);

var _request = __webpack_require__(/*! ./services/request.js */ "./node_modules/akili/src/services/request.js");

var _request2 = _interopRequireDefault(_request);

var _store = __webpack_require__(/*! ./services/store.js */ "./node_modules/akili/src/services/store.js");

var _store2 = _interopRequireDefault(_store);

var _globals = __webpack_require__(/*! ./globals.js */ "./node_modules/akili/src/globals.js");

var _globals2 = _interopRequireDefault(_globals);

var _utils = __webpack_require__(/*! ./utils.js */ "./node_modules/akili/src/utils.js");

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var evaluationRegex = exports.evaluationRegex = /\${(((?!\${).)*)}/;
var evaluationRegexGlobal = exports.evaluationRegexGlobal = new RegExp(evaluationRegex.source, "g");
var systemAttributes = exports.systemAttributes = ['component', 'scope', 'no-ssr'];

/**
 * Base class from which all components are inherited
 */

var Component = function () {
  (0, _createClass3.default)(Component, null, [{
    key: 'define',


    /**
     * Define the component
     */
    value: function define() {
      _akili2.default.component('component', Component);
    }

    /**
     * Parse the expression
     *
     * @param {object} context
     * @param {string} expression
     * @param {object} [vars]
     */

  }, {
    key: 'parse',
    value: function parse(context, expression) {
      var variables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var keys = [];
      var vars = [];
      var exps = _utils2.default.split(expression, ';', ['"', "'", '`']);
      exps[exps.length - 1] = 'return ' + exps[exps.length - 1];

      for (var key in variables) {
        keys.push(key);
        vars.push(variables[key]);
      }

      return new (Function.prototype.bind.apply(Function, [null].concat(keys, ['' + exps.join('; ')])))().apply(context, vars);
    }

    /** 
     * @param {Element} el 
     * @param {object} [scope] 
     */

  }]);

  function Component(el) {
    var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _classCallCheck3.default)(this, Component);

    if (!(el instanceof Element)) {
      throw new Error('You must pass an html element to the component constructor');
    }

    this.__isMounted = false;
    this.__isCompiled = false;
    this.__isResolved = false;
    this.__isRemoved = false;
    this.__cancelled = false;
    this.__prevent = false;
    this.__bindings = {};
    this.__evaluatingEvent = null;
    this.__recompiling = null;
    this.__compiling = null;
    this.__disableProxy = {};
    this.__disableStoreKeys = {};
    this.__disableAttrKeys = {};
    this.__children = [];
    this.__parent = null;
    this.__parents = [];
    this.__content = '';
    this.__attrs = {};
    this.__attrLinks = {};
    this.__storeLinks = {};
    this.__attributeOf = null;
    this.__evaluationComponent = this;
    this.scope = scope;
    this.el = el;
  }

  /**
   * Create the compilation options 
   * 
   * @param {object} [options]
   * @protected
   */


  (0, _createClass3.default)(Component, [{
    key: '__createCompilationOptions',
    value: function __createCompilationOptions() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      return (0, _extends3.default)({
        checkChanges: false,
        setEvents: true,
        setParents: true,
        setBooleanAttributes: true,
        defineAttributes: true
      }, options);
    }

    /**
     * Create the recompilation options 
     * 
     * @param {object} [options]
     * @protected
     */

  }, {
    key: '__createRecompilationOptions',
    value: function __createRecompilationOptions() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      return (0, _extends3.default)({}, this.__createCompilationOptions(), {
        setEvents: false,
        setParents: false,
        defineAttributes: false
      }, options);
    }

    /**
     * Recompile the component
     * 
     * @param {object} [options]
     * @protected
     */

  }, {
    key: '__recompile',
    value: function __recompile() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      this.__isMounted = false;
      this.__recompiling = true;
      this.__evaluationComponent.__disableProxy = {};
      this.__compiling = this.__createRecompilationOptions(options);
      this.__compiling.setEvents && this.__setEvents();
      this.__compiling.setParents && this.__setParents();
      this.__compiling.setBooleanAttributes && this.__setBooleanAttributes();
      this.__compiling.defineAttributes && this.__defineAttributes();
    }

    /**
     * Create the component
     *
     * @protected
     */

  }, {
    key: '__create',
    value: function __create() {
      var _this = this;

      this.__compiling = this.__createCompilationOptions();
      this.__initialize();
      this.__setEvents();
      this.__setParents();
      this.__setBooleanAttributes();
      this.__defineAttributes();
      _akili2.default.isolate(function () {
        return _this.created(_this.attrs);
      });
    }

    /**
     * Compile the node
     *
     * @protected
     * @returns {Promise}
     */

  }, {
    key: '__compile',
    value: function __compile() {
      var _this2 = this;

      var control = this.__controlAttributes || !this.__evaluationParent;
      var p = _promise2.default.resolve();
      this.__attributeOf = control ? this : this.__evaluationParent.__akili;

      if (!this.__recompiling || this.__compiling.newParent || this.__controlAttributes) {
        this.__interpolateAttributes(this.el, this.__attributeOf);
      }

      var interpolate = function interpolate(children, parent) {
        for (var i = 0, l = children.length; i < l; i++) {
          var child = children[i];

          if (child.nodeType == 3 && _this2.__initializeNode(child, parent)) {
            _this2.__evaluateNode(child, _this2.__compiling ? _this2.__compiling.checkChanges : false);
          } else if (child.nodeType == 1 && !child.__akili) {
            _this2.__interpolateAttributes(child);
            interpolate(child.childNodes, child);
          }
        }
      };

      interpolate(this.el.childNodes, this.el);
      this.__isMounted = true;
      var res = void 0;

      if (!this.__recompiling) {
        res = _akili2.default.isolate(function () {
          _this2.attrs.onCompiled && _this2.attrs.onCompiled.trigger(undefined, { bubbles: false });
          return _this2.compiled();
        });

        if (this.constructor.templateUrl) {
          p = _request2.default.get(this.constructor.templateUrl, { cache: this.constructor.templateCache }).then(function (res) {
            _this2.el.innerHTML = _this2.__content;
            _akili2.default.setTemplate(_this2.el, res.data);
            delete _this2.__content;
            return _akili2.default.compile(_this2.el, { recompile: true });
          });
        }
      } else {
        res = _akili2.default.isolate(function () {
          _this2.attrs.onRecompiled && _this2.attrs.onRecompiled.trigger(undefined, { bubbles: false });
          _this2.recompiled();
        });
      }

      this.__recompiling = null;
      this.__compiling = null;

      return p.then(function () {
        _this2.__isCompiled = true;
        return res;
      });
    }

    /**
     * Resolve the component
     *
     * @protected
     * @returns {Promise}
     */

  }, {
    key: '__resolve',
    value: function __resolve() {
      var _this3 = this;

      if (this.__isResolved) {
        return _promise2.default.resolve();
      }

      this.attrs.onResolved && this.attrs.onResolved.trigger(undefined, { bubbles: false });

      return _promise2.default.resolve(_akili2.default.isolate(function () {
        return _this3.resolved();
      })).then(function (res) {
        _this3.__isResolved = true;
        return res;
      });
    }

    /**
     * Initialize the component
     *
     * @protected
     */

  }, {
    key: '__initialize',
    value: function __initialize() {
      var parent = _akili2.default.getAkiliParents(this.el, false);
      var Scope = this.constructor.scope || _akili2.default.Scope;
      var scope = void 0;
      var isRoot = _akili2.default.__root === this.el;
      this.el.__akili = this;

      if (parent) {
        scope = new Scope(this.el.getAttribute('scope') || _akili2.default.createScopeName(), this.el, this);
      } else {
        scope = new Scope(isRoot ? 'root' : _akili2.default.createScopeName(), this.el, this);
        isRoot && (_akili2.default.root = this);
      }

      var __scope = scope;
      var _scope = (0, _assign2.default)(scope, this.scope);
      var controlAttributes = this.constructor.controlAttributes;
      var events = this.constructor.events;

      if (this.constructor.template) {
        _akili2.default.setTemplate(this.el, this.constructor.template);
      }

      if (this.constructor.templateUrl) {
        this.__content = this.el.innerHTML;
        this.el.innerHTML = '';
      }

      this.__scope = __scope;
      this.__events = events;
      this.__controlAttributes = controlAttributes;
      _akili2.default.addScope(scope);
      this.scope = this.__nestedObserve(_scope, []);
      return true;
    }

    /**
     * Set the boolean attributes
     *
     * @protected
     */

  }, {
    key: '__setBooleanAttributes',
    value: function __setBooleanAttributes() {
      var _this4 = this;

      this.booleanAttributes = [].concat(_akili2.default.htmlBooleanAttributes, this.constructor.booleanAttributes);

      var setAttr = function setAttr(el) {
        for (var i = 0, attrs = el.attributes, l = attrs.length; i < l; i++) {
          var node = attrs[i];

          if (_this4.booleanAttributes.indexOf(node.nodeName) != -1) {
            if (el.hasAttribute('boolean-' + node.nodeName)) {
              continue;
            }

            el.setAttribute('boolean-' + node.nodeName, el.getAttribute(node.nodeName) || node.nodeName);
            el.removeAttribute(node.nodeName);
          }
        }

        for (var _i = 0, _l = el.children.length; _i < _l; _i++) {
          var child = el.children[_i];

          if (!child.__akili) {
            setAttr(child);
          }
        }
      };

      setAttr(this.el);
    }

    /**
     * Set the events
     *
     * @protected
     */

  }, {
    key: '__setEvents',
    value: function __setEvents() {
      for (var i = 0, l = this.__events.length; i < l; i++) {
        var ev = this.__events[i];
        !/^on-/i.test(ev) && (ev = 'on-' + ev);

        if (!this.el.hasAttribute(ev)) {
          this.el.setAttribute(ev, '');
        }
      }
    }

    /**
     * Set the component parents
     *
     * @protected
     */

  }, {
    key: '__setParents',
    value: function __setParents() {
      var parents = _akili2.default.getAkiliParents(this.el);

      if (!parents.length) {
        return;
      }

      var newParent = this.__parent !== parents[0];
      var evaluationParent = null;

      for (var i = 0, l = parents.length; i < l; i++) {
        var parent = parents[i];

        if (!parent.__akili.constructor.transparent) {
          evaluationParent = parent;
          break;
        }
      }

      this.__compiling.newParent = newParent;
      newParent && this.__detach();

      if (this.constructor.transparent) {
        this.__evaluationComponent = evaluationParent.__akili;
      }

      this.__evaluationParent = evaluationParent;
      this.__parent = parents[0];
      this.__parents = parents;
      this.scope.__parent = this.__evaluationParent.__akili.scope;
      !this.__recompiling && this.__parent.__akili.__addChild(this.el);
      (0, _setPrototypeOf2.default)(this.scope, this.__parent.__akili.__scope);
    }

    /**
     * Add the child element to the list
     *
     * @param {Element} el
     * @protected
     */

  }, {
    key: '__addChild',
    value: function __addChild(el) {
      this.__children.push(el);
    }

    /**
     * Splice the child from the list
     *
     * @param {Element} el
     * @protected
     */

  }, {
    key: '__spliceChild',
    value: function __spliceChild(el) {
      for (var i = 0, l = this.__children.length; i < l; i++) {
        var child = this.__children[i];

        if (child === el) {
          this.__children.splice(i, 1);
          i--;
          l--;
        }
      }
    }

    /**
     * Get the parsed expression
     *
     * @param {string} expression
     * @returns {*}
     * @protected
     */

  }, {
    key: '__getParsedExpression',
    value: function __getParsedExpression(expression) {
      return expression;
    }

    /**
     * Check the need of the avaluation
     *
     * @param {Node} node
     * @returns {boolean}
     * @protected
     */

  }, {
    key: '__checkEvaluation',
    value: function __checkEvaluation(node) {
      if (!(0, _keys2.default)(node.__properties).length) {
        return true;
      }

      for (var k in node.__properties) {
        if (!node.__properties.hasOwnProperty(k)) {
          continue;
        }

        var prop = node.__properties[k];
        var value = _utils2.default.getPropertyByKeys(prop.keys, prop.component.__scope);

        if (!node.__component.__compareNodePropertyValue(prop, value)) {
          return true;
        }
      }

      return false;
    }

    /**
     * Check the node properties change
     *
     * @param {Node} node
     * @param {string[]} keys
     * @param {*} value
     * @returns {boolean}
     * @protected
     */

  }, {
    key: '__checkNodePropertyChange',
    value: function __checkNodePropertyChange(node, keys, value) {
      var prop = this.__getNodeProperty(node, keys);

      if (!prop) {
        return true;
      }

      return !node.__component.__compareNodePropertyValue(prop, value);
    }

    /**
     * Compare the node property value
     * 
     * @param {object} prop 
     * @param {*} value 
     * @param {object} [options] 
     * @protected
     */

  }, {
    key: '__compareNodePropertyValue',
    value: function __compareNodePropertyValue(prop, value) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      return _utils2.default.compare(_utils2.default.createHash(value), prop.hash, options);
    }

    /**
     * Create an exception message
     * 
     * @param {Node} node 
     * @param {Error} err 
     * @protected
     */

  }, {
    key: '__createExceptionMessage',
    value: function __createExceptionMessage(node, err) {
      var tagName = node.__component.el.tagName;
      var attrName = node.__component.el.getAttribute('component');
      var componentName = (attrName || tagName).toLowerCase();
      var elementName = node.__element.tagName.toLowerCase();
      var attributeName = node instanceof window.Attr ? node.name.toLowerCase() : '';
      var messages = [err.message, node.__expression.trim()];
      attributeName && messages.push('[attribute ' + attributeName + ']');
      messages = messages.concat(['[element ' + elementName + ']', '[component ' + componentName + ']']);
      return 'Expression error: ' + messages.join('\n\tat ');
    }

    /**
     * Evaluate the node expression
     *
     * @param {Node} node
     * @returns {*}
     * @protected
     */

  }, {
    key: '__evaluate',
    value: function __evaluate(node) {
      var _this5 = this;

      var counter = 0;
      var attributeValue = void 0;
      var expression = void 0;
      var evalComponent = node.__attributeOf || node.__component;

      if (node.__component.parents(function (com) {
        return com.__prevent;
      }).length) {
        return { res: node.__expression };
      }

      if (!(node instanceof window.Attr) && node.__component.__prevent) {
        return { res: node.__expression };
      }

      var res = node.__expression.replace(evaluationRegexGlobal, function (m, d) {
        counter++;
        var evaluate = void 0;
        var evaluation = [];
        var existingBindings = {};
        var parentBindings = {};
        var parseValue = node.__component.__getParsedExpression(d);
        _akili2.default.__evaluation = { node: node, list: [], component: node.__component };

        try {
          evaluate = _this5.constructor.parse(evalComponent.__evaluationComponent.scope, parseValue, (0, _extends3.default)({}, _globals2.default));
        } catch (err) {
          throw _this5.__createExceptionMessage(node, err);
        }

        if (_akili2.default.__evaluation) {
          evaluation = _akili2.default.__evaluation.list;
          _akili2.default.__evaluation.list = null;
          _akili2.default.__evaluation = null;
        }

        for (var i = evaluation.length - 1; i >= 0; i--) {
          var data = evaluation[i];
          var hash = data.component.__createKeysHash(data.keys);
          var parentsHash = data.component.__createKeysHash(data.parents);

          if (data.notBinding) {
            continue;
          }

          if (existingBindings[hash]) {
            continue;
          }

          var parentValue = _utils2.default.getPropertyByKeys(data.parents, data.component.__scope);

          if (parentValue && (typeof parentValue === 'undefined' ? 'undefined' : (0, _typeof3.default)(parentValue)) == 'object') {
            if (_akili2.default.options.debug && parentBindings[parentsHash] == 50) {
              // eslint-disable-next-line no-console
              console.warn(['For higher performance, don\'t loop Proxy arrays/objects inside expression functions, or use Akili.unevaluate() to wrap you code.', '' + node.__expression.trim(), 'scope property "' + data.parents.join('.') + '"'].join('\n\tat '));
            }

            !parentBindings[parentsHash] ? parentBindings[parentsHash] = 1 : parentBindings[parentsHash]++;
          }

          if (_utils2.default.isScopeProxy(parentValue) && data.component !== evalComponent.__evaluationComponent && data.component === data.realComponent) {
            continue;
          }

          data.component.__bindAndSetProperty(node, data.keys, data.evaluated);
          existingBindings[hash] = true;
        }

        if (node instanceof window.Attr) {
          expression = m;
          attributeValue = evaluate;
          return _utils2.default.makeAttributeValue(evaluate);
        }

        if ((typeof evaluate === 'undefined' ? 'undefined' : (0, _typeof3.default)(evaluate)) == 'object') {
          try {
            return (0, _stringify2.default)(evaluate);
          } catch (e) {
            return evaluate;
          }
        }

        return evaluate;
      });

      return { res: res, counter: counter, expression: expression, attributeValue: attributeValue };
    }

    /**
     * Bind the node and set the property
     *
     * @param {Node} node
     * @param {string[]} keys
     * @param {boolean} [evaluated]
     * @protected
     */

  }, {
    key: '__bindAndSetProperty',
    value: function __bindAndSetProperty(node, keys, evaluated) {
      var bind = this.__getBoundNode(keys, node);
      var value = _utils2.default.getPropertyByKeys(keys, this.__scope);

      if (!bind) {
        this.__bind(keys, { node: node });
      }

      this.__setNodeProperty(node, keys, value, evaluated);
    }

    /**
     * Nested evaluation by the keys
     *
     * @param {string[]} keys
     * @param {boolean} [withoutParents=false] - if true evaluation will be only for the current keys
     * @protected
     */

  }, {
    key: '__evaluateNested',
    value: function __evaluateNested(keys) {
      var _this6 = this;

      var withoutParents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      var scope = this.__scope;
      var props = [];

      if (!withoutParents) {
        var lastProps = [];

        for (var i = 0, l = keys.length; i < l; i++) {
          var key = keys[i];
          var value = void 0;

          lastProps = [].concat((0, _toConsumableArray3.default)(lastProps), [key]);
          value = _utils2.default.getPropertyByKeys(lastProps, scope);
          props.push({ keys: lastProps, value: value });
        }
      } else {
        props.push({ keys: keys, value: _utils2.default.getPropertyByKeys(keys, scope) });
      }

      var propsLength = props.length;

      var elEvaluate = function elEvaluate(element) {
        var component = element.__akili;

        for (var m = 0; m < propsLength; m++) {
          var prop = props[m];
          var data = void 0;

          if (component === _this6) {
            var bind = component.__getBind(prop.keys);
            data = bind ? bind.__data || [] : [];
          } else {
            data = component.__getAllBinds(prop.keys);
          }

          if (!data || !data.length) {
            continue;
          }

          for (var k = 0, c = data.length; k < c; k++) {
            var _bind = data[k];

            if (!_bind || !_bind.node || !_bind.node.__initialized) {
              continue;
            }

            if (component.__checkNodePropertyChange(_bind.node, prop.keys, prop.value)) {
              component.__disableKeys(prop.keys);
              var checkProp = component.__getNodeProperty(_bind.node, prop.keys);
              checkProp && checkProp.evaluated && component.scope.__set(prop.keys, prop.value, { silent: true });
              component.__evaluateNode(_bind.node, false);

              for (var _k in _bind.node.__properties) {
                if (!_bind.node.__properties.hasOwnProperty(_k)) {
                  continue;
                }

                var _prop = _bind.node.__properties[_k];
                var _value = _utils2.default.getPropertyByKeys(_prop.keys, _prop.component.__scope);
                _prop.component.__setNodeProperty(_bind.node, _prop.keys, _value);
              }

              component.__enableKeys(prop.keys);
            }
          }
        }

        return component;
      };

      var evaluate = function evaluate(elements) {
        for (var _i2 = 0, _l2 = elements.length; _i2 < _l2; _i2++) {
          var component = elEvaluate(elements[_i2]);
          evaluate(component.__children);
        }
      };

      elEvaluate(this.el);
      evaluate(this.__children);
    }

    /**
    * Evaluate the value by the keys
    *
    * @param {string[]} keys
    * @protected
    */

  }, {
    key: '__evaluateByKeys',
    value: function __evaluateByKeys(keys) {
      var _this7 = this;

      var data = this.__getBind(keys);

      var evaluate = function evaluate(val, keys) {
        _this7.__evaluateNested(keys, true);

        if (!val) {
          return;
        }

        for (var k in val) {
          if (!val.hasOwnProperty(k) || _this7.__isSystemBindingKey(k)) {
            continue;
          }

          evaluate(val[k], keys.concat([k]));
        }
      };

      evaluate(data, keys);
    }

    /**
     * Evaluate the event expression
     *
     * @param {Node} node
     * @param {Element} el
     * @param {Event} e
     * @protected
     */

  }, {
    key: '__evaluateEvent',
    value: function __evaluateEvent(node, el, e) {
      var expression = evaluationRegex.exec(node.__expression);
      var evaluate = void 0;

      if (!expression) {
        return;
      }

      this.__evaluatingEvent = {
        el: el,
        component: this,
        event: e,
        node: node
      };

      this.__disableProxy = {};

      try {
        evaluate = this.constructor.parse(this.__evaluationComponent.scope, expression[1], (0, _extends3.default)({}, _globals2.default, { event: e }));
      } catch (err) {
        throw this.__createExceptionMessage(node, err);
      }

      this.__evaluatingEvent = null;
      return evaluate;
    }

    /**
     * Evaluate the node expression with check
     *
     * @param {Node} node
     * @param {boolean} [check]
     * @protected
     */

  }, {
    key: '__evaluateNode',
    value: function __evaluateNode(node) {
      var check = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      var key = node instanceof window.Attr ? 'value' : 'nodeValue';

      if (check ? this.__checkEvaluation(node) : true) {
        var _evaluate = this.__evaluate(node),
            res = _evaluate.res,
            attributeValue = _evaluate.attributeValue,
            expression = _evaluate.expression,
            counter = _evaluate.counter;

        node[key] != res && (node[key] = res);

        if (node instanceof window.Attr) {
          var value = res;
          var isBooleanAttribute = false;

          if (counter == 1 && expression && node.__expression == expression) {
            value = attributeValue;
          }

          var clearAttribute = node.nodeName.replace(/^boolean-(.+)/i, '$1');
          var camelAttribute = _utils2.default.toCamelCase(clearAttribute);

          if (clearAttribute != node.nodeName) {
            isBooleanAttribute = true;
            value = !!value;
          }

          if (node.__attributeOn) {
            var component = node.__attributeOn;
            value = component.__prepareAttributeIn(node, value);
            component.__disableAttributeSetter = true;
            component.attrs[camelAttribute] = value;
            component.__disableAttributeSetter = false;

            if (component.__isMounted) {
              component.__attrTriggerByName(camelAttribute, value);
            }
          } else if (isBooleanAttribute) {
            var element = node.__element;
            value ? element.setAttribute(camelAttribute, 'true') : element.removeAttribute(camelAttribute);
          }
        }
      }

      return node[key];
    }

    /**
     * Prepare the attribute value for receiving
     * 
     * @param {Node} node
     * @param {*} value
     * @protected
     */

  }, {
    key: '__prepareAttributeIn',
    value: function __prepareAttributeIn(node, value) {
      return _utils2.default.copy(value, { plain: true });
    }

    /**
     * Prepare the attribute value for sending
     * 
     * @param {Node} node
     * @param {*} value
     * @protected
     */

  }, {
    key: '__prepareAttributeOut',
    value: function __prepareAttributeOut(node, value) {
      return _utils2.default.copy(value, { plain: true });
    }

    /**
     * Initialize the attributes
     *
     * @param {Node} node
     * @param {Element} el
     * @param {Component} attributeOf - if node is linked with parent scope
     * @protected
     */

  }, {
    key: '__initializeAttribute',
    value: function __initializeAttribute(node, el, attributeOf) {
      if (!node || systemAttributes.indexOf(node.nodeName) != -1) {
        return;
      }

      if (!this.__initializeNode(node, el)) {
        return;
      }

      var eventName = node.nodeName.replace(/^on-(.+)/i, '$1');
      var component = attributeOf ? attributeOf : this;

      if (node.__isEvent) {
        if (node.__event) {
          return;
        }

        var emitter = new _akili2.default.EventEmitter(eventName, node, el, component);

        if (node.__hasBindings) {
          emitter.bind(function (e) {
            return component.__evaluateEvent(node, el, e);
          });
        }

        node.__event = emitter;
        el.setAttribute(node.nodeName, _utils2.default.makeAttributeValue(emitter));

        if (attributeOf) {
          this.__disableAttributeSetter = true;
          this.attrs[_utils2.default.toCamelCase(node.nodeName)] = emitter;
          this.__disableAttributeSetter = false;
        }

        return;
      }

      if (attributeOf) {
        node.__attributeOn = this;
        node.__attributeOf = component;
      }

      var check = this.__compiling ? this.__compiling.checkChanges : false;
      component.__evaluateNode(node, check);
    }

    /**
     * Initialize the node
     *
     * @param {Node} node
     * @param {Element} el
     * @returns {boolean}
     * @protected
     */

  }, {
    key: '__initializeNode',
    value: function __initializeNode(node, el) {
      if (node.__initialized) {
        return true;
      }

      var isAttr = node instanceof window.Attr;
      var val = node[isAttr ? 'value' : 'nodeValue'];
      var hasBindings = evaluationRegex.test(val.trim());
      var isBoolean = isAttr ? /^boolean-/i.test(node.nodeName) : false;
      var isEvent = isAttr ? /^on-(.+)/i.test(node.nodeName) : false;

      if (!el.__akili && !hasBindings && !isBoolean && !isEvent) {
        return false;
      }

      node.__name = this.__scope.__name + _utils2.default.createRandomString(16);
      node.__isEvent = isEvent;
      node.__hasBindings = hasBindings;
      node.__isBoolean = isBoolean;
      node.__expression = val;
      node.__properties = {};
      node.__attributeOf = null;
      node.__attributeOn = null;
      node.__event = null;
      node.__initialized = true;
      node.__component = this;
      node.__element = el;
      return true;
    }

    /**
     * Deinitialize the node
     *
     * @param {Node} node
     * @param {object} [options]
     * @protected
     */

  }, {
    key: '__deinitializeNode',
    value: function __deinitializeNode(node) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!node.__initialized) {
        return;
      }

      if (node.__event) {
        node.__event.remove();
      }

      if (node.__hasBindings && !options.saveBindings) {
        this.__unbindByNodes(node);
        this.__unbindParentsByNodes(node);
      }

      _akili2.default.removeTag(node);
      delete node.__name;
      delete node.__hasBindings;
      delete node.__isBoolean;
      delete node.__isEvent;
      delete node.__expression;
      delete node.__properties;
      delete node.__attributeOf;
      delete node.__attributeOn;
      delete node.__event;
      delete node.__initialized;
      delete node.__component;
      delete node.__element;
    }

    /**
     * Interpolate the element attributes
     *
     * @param {Element} el
     * @param {Component} [attributeOf=null] - if the node has link with the parent scope
     * @protected
     */

  }, {
    key: '__interpolateAttributes',
    value: function __interpolateAttributes(el) {
      var attributeOf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      for (var i = 0, attrs = el.attributes, l = attrs.length; i < l; i++) {
        this.__initializeAttribute(attrs[i], el, attributeOf);
      }
    }

    /**
     * Define the attributes as a proxy
     *
     * @protected
     */

  }, {
    key: '__defineAttributes',
    value: function __defineAttributes() {
      var _this8 = this;

      var changeAttribute = function changeAttribute(key, value) {
        var isDeleted = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        if (_this8.__disableAttributeSetter) {
          return;
        }

        var node = _this8.el.getAttributeNode(key);

        if (isDeleted) {
          node && _this8.__deinitializeNode(node);
          _this8.el.removeAttribute(key);
          return;
        } else if (!node) {
          _this8.el.setAttribute(key, value);
          node = _this8.el.getAttributeNode(key);
        } else {
          node.value = value;
          _this8.__deinitializeNode(node);
        }

        _this8.__initializeAttribute(node, _this8.el, _this8.__attributeOf);
      };

      this.attrs = new Proxy(this.__attrs, {
        get: function get(target, key) {
          if (key == '__isProxy') {
            return true;
          }

          return target[key];
        },
        set: function set(target, key, value) {
          var attrKey = _utils2.default.toDashCase(key);

          if (_this8.booleanAttributes.indexOf(attrKey) != -1) {
            attrKey = 'boolean-' + attrKey;
            value ? _this8.el.setAttribute(key, value) : _this8.el.removeAttribute(key);
          }

          target[key] = value;
          changeAttribute(attrKey, _utils2.default.makeAttributeValue(value));
          return true;
        },
        deleteProperty: function deleteProperty(target, key, value) {
          var attrKey = _utils2.default.toDashCase(key);
          changeAttribute(attrKey, _utils2.default.makeAttributeValue(value), true);
          delete target[key];
          return true;
        }
      });
    }

    /**
     * Convert the object to a proxy
     *
     * @param {object} obj
     * @param {string[]} parents
     * @returns {Proxy}
     * @protected
     */

  }, {
    key: '__observe',
    value: function __observe(obj, parents) {
      var _this9 = this;

      return new Proxy(obj, {
        get: function get(target, key) {
          if (key == "__isProxy") {
            return true;
          }

          if (key == "__target") {
            return obj;
          }

          if (key == "__component") {
            return _this9;
          }

          if (key == "__keys") {
            return parents;
          }

          if (_this9.__isSystemKey(key)) {
            return target[key];
          }

          if (_akili2.default.__evaluation) {
            var keys = [].concat(parents, [key]);
            var notBinding = false;
            var evaluated = !_utils2.default.hasPropertyByKeys(keys, _this9.__scope);
            var component = _this9;
            var excArr = keys.slice();

            if (target instanceof _scope3.default) {
              var realTarget = _utils2.default.getOwnPropertyTarget(target, key);
              realTarget && realTarget instanceof _scope3.default && (component = realTarget.__component);
            }

            if (_akili2.default.__wrapping && keys.length > 1) {
              return target[key];
            }

            var forParents = _akili2.default.__evaluation.component.parents(function (c) {
              return c instanceof _akili2.default.components.For;
            });

            for (var i = 0, l = forParents.length; i < l; i++) {
              for (var k = 0, c = keys.length; k < c; k++) {
                var forData = forParents[i].data;
                var data = _utils2.default.getPropertyByKeys(excArr, component.__scope);

                if (data && (typeof data === 'undefined' ? 'undefined' : (0, _typeof3.default)(data)) == 'object' && forData === data) {
                  return target[key];
                }

                excArr.pop();
              }
            }

            if (!(key in target)) {
              target[key] = undefined;
            } else if (!_utils2.default.getEnumerablePropertyTarget(target, key)) {
              notBinding = true;
            }

            _this9.__bindNode(_akili2.default.__evaluation.list, component, keys, parents, target[key], notBinding, evaluated);
            return target[key];
          }

          return target[key];
        },
        set: function set(target, key, value) {
          if (_this9.__isSystemKey(key)) {
            target[key] = value;
            return true;
          }

          if (typeof target[key] === 'function') {
            value = _akili2.default.wrapFunction(value);
          }

          var keys = [].concat(parents, [key]);

          if (_this9.__checkDisablement(keys)) {
            target[key] = value;
            return true;
          }

          CHECK_EXISTENCE: if (parents.length > 0) {
            var targetParentValue = parents.length > 1 ? _utils2.default.getPropertyByKeys(parents.slice(0, -1), _this9.__scope) : _this9.__scope;

            for (var k in targetParentValue) {
              if (!targetParentValue.hasOwnProperty(k)) {
                continue;
              }

              if (targetParentValue[k] && targetParentValue[k].__target === target) {
                break CHECK_EXISTENCE;
              }
            }

            target[key] = value;
            return true;
          }

          target[key] = _this9.__nestedObserve(value, keys);

          if (!_this9.__isResolved) {
            _this9.__triggerStoreAndAttr(keys);
          }

          if (_akili2.default.__isolation) {
            _this9.__createIsolationObject(parents, key);
            return true;
          }

          if (_this9.__isResolved) {
            _this9.__triggerStoreAndAttr(keys);
          }

          if (_this9.__isMounted) {
            _this9.__evaluateByKeys(keys);
          }

          return true;
        },
        deleteProperty: function deleteProperty(target, key) {
          var keys = [].concat(parents, [key]);

          if (_this9.__checkDisablement(keys)) {
            delete target[key];
            return true;
          }

          if (_this9.__isSystemKey(key)) {
            delete target[key];
            return true;
          }

          delete target[key];

          if (!_this9.__isResolved) {
            _this9.__triggerStoreAndAttr(keys);
          }

          if (_akili2.default.__isolation) {
            _this9.__createIsolationObject(parents, key);
            return true;
          }

          if (_this9.__isResolved) {
            _this9.__triggerStoreAndAttr(keys);
          }

          _this9.__evaluateByKeys(keys);
          return true;
        }
      });
    }

    /**
     * Trigger the store and the attributes change
     * 
     * @param {string[]} keys 
     * @protected
     */

  }, {
    key: '__triggerStoreAndAttr',
    value: function __triggerStoreAndAttr(keys) {
      for (var i = 0, l = keys.length; i < l; i++) {
        var currentKeys = keys.slice(0, l - i);
        var currentKeyString = _akili2.default.joinBindingKeys(currentKeys);
        var val = _utils2.default.getPropertyByKeys(currentKeys, this.__scope);

        if (this.__storeLinks[currentKeyString]) {
          this.__storeTriggerByKeys(currentKeys, val);
        }

        if (this.__attrLinks[currentKeyString]) {
          this.__attrTriggerByKeys(currentKeys, val);
        }
      }
    }

    /**
     * Create the hash for the keys
     * 
     * @param {string[]} keys 
     * @returns {string}    
     * @protected
     */

  }, {
    key: '__createKeysHash',
    value: function __createKeysHash(keys) {
      return this.__scope.__name + '.' + _akili2.default.joinBindingKeys(keys);
    }

    /**
     * Get the store of the disablement type
     * 
     * @param {string} type 
     * @returns {object}
     * @protected
     */

  }, {
    key: '__getDisablementTypeStore',
    value: function __getDisablementTypeStore(type) {
      return {
        proxy: '__disableProxy',
        store: '__disableStoreKeys',
        attr: '__disableAttrKeys'
      }[type];
    }

    /**
     * Disable the keys setter
     * 
     * @param {string[]} keys  
     * @param {string} [type]  
     * @protected
     */

  }, {
    key: '__disableKeys',
    value: function __disableKeys(keys) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'proxy';

      this[this.__getDisablementTypeStore(type)][keys ? this.__createKeysHash(keys) : '__all'] = true;
    }

    /**
     * Enable the keys setter
     * 
     * @param {string[]} keys 
     * @param {string} [type]   
     * @protected
     */

  }, {
    key: '__enableKeys',
    value: function __enableKeys(keys) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'proxy';

      delete this[this.__getDisablementTypeStore(type)][keys ? this.__createKeysHash(keys) : '__all'];
    }

    /**
     * Check the keys setter disablemant
     * 
     * @param {string[]} keys 
     * @param {string} [type]   
     * @protected
     */

  }, {
    key: '__checkDisablement',
    value: function __checkDisablement(keys) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'proxy';

      var store = this.__getDisablementTypeStore(type);
      return this[store].__all ? true : this[store][this.__createKeysHash(keys)];
    }

    /**
     * Save the value to the store by the keys
     * 
     * @param {string[]} keys 
     * @param {*} value    
     * @protected
     */

  }, {
    key: '__storeTriggerByKeys',
    value: function __storeTriggerByKeys(keys, value) {
      if (this.__checkDisablement(keys, 'store')) {
        return;
      }

      var links = this.__storeLinks[_akili2.default.joinBindingKeys(keys)];

      if (!links || !links.length) {
        return;
      }

      value = _utils2.default.copy(value, { plain: true });
      var p = [];

      for (var i = 0, l = links.length; i < l; i++) {
        var link = links[i];

        if (!link.set) {
          continue;
        }

        p.push(this.__storeTriggerByName(link.name, value));
      }

      return _promise2.default.all(p);
    }

    /**
     * Save the value to the store by the name
     * 
     * @param {string} name 
     * @param {*} value 
     * @protected
     */

  }, {
    key: '__storeTriggerByName',
    value: function __storeTriggerByName(name, value) {
      var _this10 = this;

      _store2.default.__target[name] = value;
      var links = (_akili2.default.__storeLinks[name] || []).concat(_akili2.default.__storeLinks['*'] || []);

      if (!links || !links.length) {
        return;
      }

      links = _utils2.default.sort(links, ['date'], true);

      return _akili2.default.isolate(function () {
        var _loop = function _loop(i, l) {
          var link = links[i];
          var component = link.component;

          if (component === _this10) {
            return 'continue';
          }

          if (link.fn) {
            _akili2.default.unisolate(function () {
              return link.fn.call(component, value, name);
            });
            return 'continue';
          }
          if (!link.get) {
            return 'continue';
          }

          component.__disableKeys(link.keys, 'store');
          var current = _utils2.default.getPropertyByKeys(link.keys, component.__scope);
          !_utils2.default.compare(current, value) && component.scope.__set(link.keys, value);
          component.__enableKeys(link.keys, 'store');
        };

        for (var i = 0, l = links.length; i < l; i++) {
          var _ret = _loop(i, l);

          if (_ret === 'continue') continue;
        }
      });
    }

    /**
     * Create the store link with the scope property
     * 
     * @param {string} name 
     * @param {string|string[]} keys
     * @param {obhect} [options]
     * @protected
     */

  }, {
    key: '__storeByKeys',
    value: function __storeByKeys(name, keys) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      options = (0, _extends3.default)({ get: true, set: true }, options);

      if (!keys) {
        throw new Error('Store link "' + name + '" must have the scope property name');
      }

      if (!options.get && !options.set) {
        throw new Error('Store link "' + name + '" must have at least "get" or "set" option as true');
      }

      if (!Array.isArray(keys)) {
        keys = [keys];
      }

      this.__disableKeys(keys, 'store');
      (_store2.default.hasOwnProperty(name) || !_utils2.default.hasPropertyByKeys(keys, this.__scope)) && this.scope.__set(keys, _store2.default[name]);
      this.__enableKeys(keys, 'store');
      var keyString = _akili2.default.joinBindingKeys(keys);
      var info = void 0;

      if (!this.__storeLinks[keyString]) {
        this.__storeLinks[keyString] = [];
      }

      var arr = this.__storeLinks[keyString];

      for (var i = arr.length - 1; i >= 0; i--) {
        var res = arr[i];

        if (res.component === this && res.name == name && res.keyString == keyString) {
          res.set = options.set;
          res.get = options.get;
          res.date = Date.now();
          return;
        }
      }

      if (!_akili2.default.__storeLinks[name]) {
        _akili2.default.__storeLinks[name] = [];
      }

      info = { component: this, name: name, keys: keys, keyString: keyString, date: Date.now(), set: options.set, get: options.get };
      this.__storeLinks[keyString].push(info);
      _akili2.default.__storeLinks[name].push(info);
    }

    /**
     * Create the store link with the function
     * 
     * @param {string} name 
     * @param {function} fn   
     * @param {object} [options]
     * @protected
     * @returns {*}
     */

  }, {
    key: '__storeByFunction',
    value: function __storeByFunction(name, fn) {
      var _this11 = this;

      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var call = options.callOnStart === undefined ? _store2.default.__target.hasOwnProperty(name) : options.callOnStart;

      if (!_akili2.default.__storeLinks[name]) {
        _akili2.default.__storeLinks[name] = [];
      }

      var links = _akili2.default.__storeLinks[name];

      for (var i = links.length - 1; i >= 0; i--) {
        var res = links[i];

        if (res.component === this && res.name == name && res.fn === fn) {
          res.date = Date.now();
          return;
        }
      }

      _akili2.default.__storeLinks[name].push({ component: this, name: name, fn: fn, date: Date.now() });

      if (name == '*' && options.callOnStart !== false) {
        var storeKeys = (0, _keys2.default)(_store2.default.__target);
        var p = [];

        var _loop2 = function _loop2(l, _i3) {
          var key = storeKeys[_i3];
          var val = _store2.default.__target[key];
          p.push(_akili2.default.unisolate(function () {
            return fn.call(_this11, val, key);
          }));
        };

        for (var _i3 = 0, l = storeKeys.length; _i3 < l; _i3++) {
          _loop2(l, _i3);
        }

        return _promise2.default.all(p);
      }

      if (call) {
        return _akili2.default.unisolate(function () {
          return fn.call(_this11, _store2.default[name]);
        });
      }
    }

    /**
     * Remove the store link with the scope property
     * 
     * @param {string} name
     * @param {string|string[]} keys
     * @protected
     */

  }, {
    key: '__unstoreByKeys',
    value: function __unstoreByKeys(name, keys) {
      if (!keys) {
        throw new Error('You have to pass the scope property name for store link "' + name + '"');
      }

      if (!Array.isArray(keys)) {
        keys = [keys];
      }

      var keyString = _akili2.default.joinBindingKeys(keys);
      var arr = this.__storeLinks[keyString];

      if (!arr.length) {
        return;
      }

      for (var i = arr.length - 1; i >= 0; i--) {
        var res = arr[i];
        var links = _akili2.default.__storeLinks[res.name];

        if (res.component !== this || res.name != name || res.keyString != keyString) {
          continue;
        }

        arr.splice(i, 1);

        if (!links || !links.length) {
          continue;
        }

        for (var k = links.length - 1; k >= 0; k--) {
          var _link = links[k];

          if (_link.component === this && _link.keyString == keyString) {
            links.splice(k, 1);
          }
        }

        if (!links.length) {
          delete _akili2.default.__storeLinks[name];
        }
      }

      if (!arr.length) {
        delete this.__storeLinks[keyString];
      }
    }

    /**
     * Remove the store link with the function
     * 
     * @param {string} name 
     * @param {function} fn 
     * @protected
     */

  }, {
    key: '__unstoreByFunction',
    value: function __unstoreByFunction(name, fn) {
      if (!_akili2.default.__storeLinks[name]) {
        return;
      }

      var links = _akili2.default.__storeLinks[name];

      for (var i = links.length - 1; i >= 0; i--) {
        var res = links[i];

        if (res.component === this && res.name == name && res.fn === fn) {
          links.splice(i, 1);
          break;
        }
      }

      if (!links.length) {
        delete _akili2.default.__storeLinks[name];
      }
    }

    /**
     * Trigger the attribute event by the keys
     * 
     * @param {string[]} keys 
     * @param {*} value    
     * @protected
     */

  }, {
    key: '__attrTriggerByKeys',
    value: function __attrTriggerByKeys(keys, value) {
      var _this12 = this;

      if (this.__checkDisablement(keys, 'attr')) {
        return;
      }

      var links = this.__attrLinks[_akili2.default.joinBindingKeys(keys)];

      if (!links || !links.length) {
        return;
      }

      return _akili2.default.isolate(function () {
        for (var i = 0, l = links.length; i < l; i++) {
          var _link2 = links[i];

          if (_link2.fn) {
            continue;
          }

          if (!_link2.set) {
            continue;
          }

          var ev = 'on' + _utils2.default.capitalize(_link2.name);
          _this12.attrs[ev] && _this12.attrs[ev].trigger(value, { bubbles: true });
        }
      });
    }

    /**
     * Trigger the attribute event by the name
     * 
     * @param {string} name 
     * @param {*} value 
     * @protected
     */

  }, {
    key: '__attrTriggerByName',
    value: function __attrTriggerByName(name, value) {
      var _this13 = this;

      var links = (this.__attrLinks[name] || []).concat(this.__attrLinks['*'] || []);

      if (!links || !links.length) {
        return;
      }

      links = _utils2.default.sort(links, ['date'], true);

      var _loop3 = function _loop3(i, l) {
        var link = links[i];

        if (link.fn) {
          _akili2.default.unisolate(function () {
            return link.fn.call(_this13, value, _utils2.default.toDashCase(name));
          });
          return 'continue';
        }

        if (!link.get) {
          return 'continue';
        }

        _this13.__disableKeys(link.keys, 'attr');
        var current = _utils2.default.getPropertyByKeys(link.keys, _this13.__scope);
        !_utils2.default.compare(current, value) && _this13.scope.__set(link.keys, value);
        _this13.__enableKeys(link.keys, 'attr');
      };

      for (var i = 0, l = links.length; i < l; i++) {
        var _ret3 = _loop3(i, l);

        if (_ret3 === 'continue') continue;
      }
    }

    /**
     * Create the  attribute link with the scope property
     * 
     * @param {string} name 
     * @param {string|string[]} keys
     * @param {object} [options]
     * @protected
     */

  }, {
    key: '__attrByKeys',
    value: function __attrByKeys(name, keys) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      options = (0, _extends3.default)({ get: true, set: true }, options);
      name = _utils2.default.toCamelCase(name);

      if (!keys) {
        throw new Error('Attribute link "' + name + '" must have the scope property name');
      }

      if (!Array.isArray(keys)) {
        keys = [keys];
      }

      this.__disableKeys(keys, 'attr');
      (this.attrs.hasOwnProperty(name) || !_utils2.default.hasPropertyByKeys(keys, this.__scope)) && this.scope.__set(keys, this.attrs[name]);
      this.__enableKeys(keys, 'attr');
      var keyString = _akili2.default.joinBindingKeys(keys);

      if (!this.__attrLinks[keyString]) {
        this.__attrLinks[keyString] = [];
      }

      var arr = this.__attrLinks[keyString];

      for (var i = arr.length - 1; i >= 0; i--) {
        var res = arr[i];

        if (res.name == name && res.keyString == keyString) {
          res.get = options.get;
          res.set = options.set;
          res.date = Date.now();
          return;
        }
      }

      this.__attrLinks[keyString].push({ name: name, keys: keys, keyString: keyString, date: Date.now(), set: options.set, get: options.get });
    }

    /**
     * Create the attribute link with the function
     * 
     * @param {string} name 
     * @param {function} fn
     * @param {object} [options]
     * @protected 
     * @returns {*}
     */

  }, {
    key: '__attrByFunction',
    value: function __attrByFunction(name, fn) {
      var _this14 = this;

      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      name = _utils2.default.toCamelCase(name);
      var call = options.callOnStart === undefined ? this.attrs.hasOwnProperty(name) : options.callOnStart;

      if (!this.__attrLinks[name]) {
        this.__attrLinks[name] = [];
      }

      var links = this.__attrLinks[name];

      for (var i = links.length - 1; i >= 0; i--) {
        var res = links[i];

        if (res.name == name && res.fn === fn) {
          res.date = Date.now();
          return;
        }
      }

      this.__attrLinks[name].push({ name: name, fn: fn, date: Date.now() });

      if (name == '*' && options.callOnStart !== false) {
        var attrsKeys = (0, _keys2.default)(this.__attrs).filter(function (k) {
          return !(_this14.__attrs[k] instanceof _akili2.default.EventEmitter);
        });
        var p = [];

        var _loop4 = function _loop4(l, _i4) {
          var key = attrsKeys[_i4];
          var val = _this14.__attrs[key];
          p.push(_akili2.default.unisolate(function () {
            return fn.call(_this14, val, _utils2.default.toDashCase(key));
          }));
        };

        for (var _i4 = 0, l = attrsKeys.length; _i4 < l; _i4++) {
          _loop4(l, _i4);
        }

        return _promise2.default.all(p);
      }

      if (call) {
        return _akili2.default.unisolate(function () {
          return fn.call(_this14, _this14.attrs[name]);
        });
      }
    }

    /**
     * Remove the attribute link with the scope property
     * 
     * @param {string} name
     * @param {string|string[]} keys
     * @protected
     */

  }, {
    key: '__unattrByKeys',
    value: function __unattrByKeys(name, keys) {
      if (!keys) {
        throw new Error('You have to pass the scope property name for attribute link "' + name + '"');
      }

      if (!Array.isArray(keys)) {
        keys = [keys];
      }

      var keyString = _akili2.default.joinBindingKeys(keys);
      var arr = this.__attrLinks[keyString];

      if (!arr.length) {
        return;
      }

      for (var i = arr.length - 1; i >= 0; i--) {
        var res = arr[i];

        if (res.name != name || res.keyString != keyString) {
          continue;
        }

        arr.splice(i, 1);
      }

      if (!arr.length) {
        delete this.__attrLinks[keyString];
      }
    }

    /**
     * Remove the attribute link with the function
     * 
     * @param {string} name 
     * @param {function} fn
     * @protected
     */

  }, {
    key: '__unattrByFunction',
    value: function __unattrByFunction(name, fn) {
      if (!this.__attrLinks[name]) {
        return;
      }

      var links = this.__attrLinks[name];

      for (var i = links.length - 1; i >= 0; i--) {
        var res = links[i];

        if (res.name == name && res.fn === fn) {
          links.splice(i, 1);
          break;
        }
      }

      if (!links.length) {
        delete this.__attrLinks[name];
      }
    }

    /**
     * Check the key is system
     *
     * @param {string} key
     * @returns {boolean}
     * @protected
     */

  }, {
    key: '__isSystemKey',
    value: function __isSystemKey(key) {
      return key.match && key.match('^_|#') || key == 'constructor';
    }

    /**
     * Nested observing of the value
     *
     * @param {*} value
     * @param {string[]} [startKeys]
     * @protected
     */

  }, {
    key: '__nestedObserve',
    value: function __nestedObserve(value, startKeys) {
      var _this15 = this;

      var observe = function observe(value, parents) {
        if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) != 'object' || value === null) {
          return value;
        }

        if (!_utils2.default.isPlainObject(value) && !_utils2.default.isScopeProxy(value) && !(value instanceof _scope3.default)) {
          return value;
        }

        var target = value;

        CHECK_PROXY: if (value.__isProxy) {
          target = value.__target;

          if (_this15.__disableProxyRedefining) {
            break CHECK_PROXY;
          }

          if (value.__component !== _this15 || _akili2.default.joinBindingKeys(parents) != _akili2.default.joinBindingKeys(value.__keys)) {
            target = _utils2.default.copy(target, { nested: false });
            value = target;
          }
        } else if (!_this15.__disableProxyRedefining && !(value instanceof _scope3.default)) {
          target = _utils2.default.copy(target, { nested: false });
          value = target;
        }

        var targetKeys = (0, _keys2.default)(target);

        for (var i = 0, l = targetKeys.length; i < l; i++) {
          var k = targetKeys[i];
          var _val = target[k];
          var keys = [].concat(parents, [k]);
          target[k] = observe(_val, keys);
        }

        if (!value.__isProxy) {
          return _this15.__observe(value, parents);
        }

        return value;
      };

      return observe(value, startKeys || []);
    }

    /**
    * Create an isolation object
    *
    * @param {string[]} parents
    * @param {string} key
    * @returns {*}
    * @protected
    */

  }, {
    key: '__createIsolationObject',
    value: function __createIsolationObject(parents, key) {
      var keys = parents.length ? [parents[0]] : [key];
      var isolationHash = this.__createKeysHash(keys);

      if (!_akili2.default.__isolation[isolationHash]) {
        _akili2.default.__isolation[isolationHash] = {
          updatedAt: new Date().getTime(),
          component: this,
          keys: keys
        };
      }

      return _akili2.default.__isolation[isolationHash];
    }

    /**
     * Prepare the node to the binding
     *
     * @param {object} bind - by default is component.__evaluation.list
     * @param {string[]} keys
     * @param {string[]} parents
     * @param {*} value
     * @param {boolean} [notBinding=false]
     * @param {boolean} [evaluated=false]
     * @protected
     */

  }, {
    key: '__bindNode',
    value: function __bindNode(bind, realComponent, keys, parents, value) {
      var notBinding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
      var evaluated = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;

      var parentKeysString = _akili2.default.joinBindingKeys(parents);
      var component = this;

      if (bind.length && !notBinding) {
        var l = bind.length - 1;
        var data = bind[l];

        if (data.realComponent === this && data.keysString == parentKeysString) {
          component = data.component;
        }

        if (data.keysString == parentKeysString && data.component === component) {
          bind.splice(l, 1);
        }
      }

      bind.push({
        component: component,
        realComponent: realComponent,
        keysString: _akili2.default.joinBindingKeys(keys),
        parents: parents,
        keys: keys,
        value: value,
        evaluated: evaluated,
        notBinding: notBinding
      });
    }

    /**
     * Check the key is the system
     *
     * @param {string} key
     * @returns {boolean}
     * @protected
     */

  }, {
    key: '__isSystemBindingKey',
    value: function __isSystemBindingKey(key) {
      return key == '__data';
    }

    /**
     * Get a binding by the keys
     *
     * @param {string[]} keys
     * @returns {object|null}
     * @protected
     */

  }, {
    key: '__getBind',
    value: function __getBind(keys) {
      return _utils2.default.getPropertyByKeys(keys, this.__bindings) || null;
    }

    /**
     * Get all nested bindings by the keys
     * 
     * @param {string[]} keys 
     */

  }, {
    key: '__getAllBinds',
    value: function __getAllBinds(keys) {
      var root = this.__getBind(keys);

      if (!root) {
        return [];
      }

      var data = [];

      var collect = function collect(obj) {
        data = data.concat(obj.__data || []);

        for (var _key in obj) {
          if (!obj.hasOwnProperty(_key) || _key == '__data') {
            continue;
          }

          collect(obj[_key]);
        }
      };

      collect(root);
      return data;
    }

    /**
     * Get a binding by the keys
     *
     * @param {string[]} keys
     * @param {Node} node
     * @returns {object|null}
     * @protected
     */

  }, {
    key: '__getBoundNode',
    value: function __getBoundNode(keys, node) {
      var bind = _utils2.default.getPropertyByKeys(keys, this.__bindings);

      if (!bind || !bind.__data || !bind.__data.length) {
        return null;
      }

      for (var i = 0, l = bind.__data.length; i < l; i++) {
        var data = bind.__data[i];

        if (data.node === node) {
          return data;
        }
      }

      return null;
    }

    /**
     * Set the node property
     *
     * @param {Node} node
     * @param {string[]} keys
     * @param {*} value
     * @param {boolean} [evaluated=false]
     * @returns {boolean}
     * @protected
     */

  }, {
    key: '__setNodeProperty',
    value: function __setNodeProperty(node, keys, value) {
      var evaluated = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

      var prop = this.__getNodeProperty(node, keys);
      var hash = _utils2.default.createHash(value);

      if (prop) {
        var res = node.__component.__compareNodePropertyValue(prop, value);
        prop.value = value;
        prop.hash = hash;
        return !res;
      }

      node.__properties[this.__createKeysHash(keys)] = {
        component: this,
        value: value,
        hash: hash,
        node: node,
        keys: keys,
        evaluated: evaluated
      };

      return true;
    }

    /**
     * Get the node property
     *
     * @param {Node} node
     * @param {string[]} keys
     * @returns {object|null}
     * @protected
     */

  }, {
    key: '__getNodeProperty',
    value: function __getNodeProperty(node, keys) {
      return node.__properties[this.__createKeysHash(keys)] || null;
    }

    /**
     * Delete the node property
     *
     * @param {Node} node
     * @param {string[]} keys
     * @protected
     */

  }, {
    key: '__deleteNodeProperty',
    value: function __deleteNodeProperty(node, keys) {
      var hash = this.__scope.__name + '.' + _akili2.default.joinBindingKeys(keys);
      delete node.__properties[hash];
    }

    /**
     * Map the nodes
     * 
     * @param {function} fn
     * @param {object} [options]
     * @protected
     */

  }, {
    key: '__mapNodes',
    value: function __mapNodes(fn) {
      var _this16 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options = (0, _extends3.default)({ rootAttrs: true, attrs: true, node: true, el: true }, options);

      var find = function find(el) {
        if (!el) {
          return;
        }

        if (options.attrs && (el !== _this16.el || options.rootAttrs)) {
          for (var k = 0, attrs = el.attributes, c = attrs.length; k < c; k++) {
            fn(attrs[k]);
          }
        }

        for (var i = el.childNodes.length - 1; i >= 0; i--) {
          var node = el.childNodes[i];

          if (node.nodeType == 3) {
            options.node && fn(node);
          } else if (node.nodeType == 1 && !node.__akili) {
            find(node);
            options.el && fn(node);
          }
        }
      };

      find(this.el);
    }

    /**
     * Get all nodes
     * 
     * @returns {Node[]}
     * @protected 
     */

  }, {
    key: '__getAllNodes',
    value: function __getAllNodes() {
      var nodes = [];
      this.__mapNodes(function (node) {
        return nodes.push(node);
      });
      return nodes;
    }

    /**
     * Bind the data with the keys
     *
     * @param {string[]} keys
     * @param {object} data
     * @protected
     */

  }, {
    key: '__bind',
    value: function __bind(keys, data) {
      _utils2.default.setPropertyByKeys(keys, this.__bindings, function (last, value) {
        var obj = { __data: [] };

        if (!last) {
          return value ? value : obj;
        }

        if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) == 'object') {
          obj = value;
        }

        if (!obj.__data) {
          obj.__data = [];
        }

        obj.__data.push(data);
        return obj;
      });
    }

    /**
     * Unbind the data by nodes
     *
     * @param {Node|Node[]} nodes
     * @protected
     */

  }, {
    key: '__unbindByNodes',
    value: function __unbindByNodes(nodes) {
      var _this17 = this;

      nodes instanceof Node && (nodes = [nodes]);

      var unbind = function unbind(obj, parent, key) {
        var keys = (0, _keys2.default)(obj);

        for (var j = 0, c = keys.length; j < c; j++) {
          var k = keys[j];

          if (k == '__data') {
            var data = obj[k] || [];
            var l = data.length;

            for (var i = 0; i < l; i++) {
              var bind = data[i];

              if (nodes.indexOf(bind.node) != -1) {
                delete bind.node;
                data.splice(i, 1);
                i--;
                l--;
              }
            }

            if (!l) {
              delete obj[k];
            }
          } else if (!_this17.__isSystemBindingKey(k)) {
            unbind(obj[k], obj, k);
          }

          if (parent && !(0, _keys2.default)(obj).length) {
            delete parent[key];
          }
        }
      };

      unbind(this.__bindings);
    }

    /**
     * Remove all parent bindings with the nodes
     * 
     * @param {Node|Node[]} nodes
     * @protected
     */

  }, {
    key: '__unbindParentsByNodes',
    value: function __unbindParentsByNodes(nodes) {
      for (var i = 0, l = this.__parents.length; i < l; i++) {
        var parent = this.__parents[i];
        parent && parent.__akili && parent.__akili.__unbindByNodes(nodes);
      }
    }

    /**
     * Clear the links
     * 
     * @protected
     */

  }, {
    key: '__clearStoreLinks',
    value: function __clearStoreLinks() {
      var links = _akili2.default.__storeLinks;

      for (var _key2 in links) {
        var arr = links[_key2];

        for (var i = arr.length - 1; i >= 0; i--) {
          var _link3 = arr[i];

          if (_link3.component === this) {
            arr.splice(i, 1);
          }
        }

        if (!arr.length) {
          delete links[_key2];
        }
      }
    }

    /**
     * Remove the component without the children removing
     *
     * @param {object} [options]
     * @returns {Node[]}
     * @protected
     */

  }, {
    key: '__remove',
    value: function __remove() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      this.attrs.onRemoved && this.attrs.onRemoved.trigger(undefined, { bubbles: false });
      this.removed();
      var detachNodes = this.__detach({ saveBindings: true, deinitializeNodes: true });
      var nodes = [].concat(detachNodes, this.__empty({ saveBindings: true }));
      this.__unbindByNodes(detachNodes);
      !options.saveBindings && this.__unbindParentsByNodes(nodes);
      this.__clearStoreLinks();
      this.__scope.__remove();
      delete this.__scope;
      delete this.scope;
      this.el.remove();
      delete this.el.__akili;
      delete this.el;
      delete this.__parent;
      delete this.__attributeOf;
      delete this.__evaluationComponent;
      delete this.__evaluationParent;
      delete this.__parents;
      delete this.__bindings;
      delete this.__attrLinks;
      delete this.__storeLinks;
      delete this.__attrs;
      delete this.attrs;
      this.__isRemoved = true;
      return nodes;
    }

    /**
     * Remove all children
     *
     * @param {object} [options]
     * @returns {Node[]}
     * @protected
     */

  }, {
    key: '__removeChildren',
    value: function __removeChildren() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var nodes = [];

      for (var i = 0; i < this.__children.length; i++) {
        var child = this.__children[i];
        nodes = nodes.concat(child.__akili.__remove(options));
        i--;
      }

      return nodes;
    }

    /**
     * Detach the component
     *
     * @param {object} [options]
     * @returns {object}
     * @protected
     */

  }, {
    key: '__detach',
    value: function __detach() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      this.__parent && this.__parent.__akili.__spliceChild(this.el);
      var nodes = [];

      for (var i = 0, l = this.el.attributes.length; i < l; i++) {
        var node = this.el.attributes[i];

        if (node.__initialized) {
          nodes.push(node);
          options.deinitializeNodes && this.__deinitializeNode(node, { saveBindings: true });
        }
      }

      !options.saveBindings && this.__unbindParentsByNodes(nodes);
      return nodes;
    }

    /**
     * Clear the component html
     *
     * @param {object} [options]
     * @returns {Node[]}
     * @protected
     */

  }, {
    key: '__empty',
    value: function __empty() {
      var _this18 = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var nodes = this.__removeChildren({ saveBindings: true });

      this.__mapNodes(function (node) {
        if (node.nodeType == 1) {
          node.remove();
          return;
        }

        if (!node.__initialized) {
          return;
        }

        _this18.__deinitializeNode(node, { saveBindings: true });
        nodes.push(node);
      }, { rootAttrs: false });

      this.__unbindByNodes(nodes);

      !options.saveBindings && this.__unbindParentsByNodes(nodes);
      this.el.innerHTML = '';
      return nodes;
    }

    /**
     * Get the parent components
     *
     * @param {string} [selector='']
     * @param {boolean} [findAll=true] - get array if true
     * @param {number|number[]} [levels=null]
     * @returns {Component|Component[]}
     * @protected
     */

  }, {
    key: '__getParent',
    value: function __getParent() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var findAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var levels = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

      var arr = [];
      var level = 0;

      if ((typeof levels === 'undefined' ? 'undefined' : (0, _typeof3.default)(levels)) != 'object') {
        levels = [levels];
      }

      var find = function find(parent) {
        if (!parent) {
          return;
        }

        if (!levels || levels.indexOf(level) != -1) {
          if (!selector || parent.__akili.matches(selector)) {
            if (!findAll) {
              arr.push(parent.__akili);
              return;
            }

            arr.push(parent.__akili);
          }
        }

        level++;
        find(parent.__akili.__parent);
      };

      find(this.__parent);
      return findAll ? arr : arr[0] || null;
    }

    /**
     * Get the child components
     *
     * @param {string} [selector='']
     * @param {boolean} [findAll=true] - get array if true
     * @param {number|number[]} [levels=null]
     * @returns {Component|Component[]}
     * @protected
     */

  }, {
    key: '__getChildren',
    value: function __getChildren() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var findAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var levels = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

      var arr = [];
      var level = 0;

      if ((typeof levels === 'undefined' ? 'undefined' : (0, _typeof3.default)(levels)) != 'object') {
        levels = [levels];
      }

      var find = function find(children) {
        for (var i = 0, l = children.length; i < l; i++) {
          var child = children[i];

          if (!levels || levels.indexOf(level) != -1) {
            if (!selector || child.__akili.matches(selector)) {
              if (!findAll) {
                arr.push(child.__akili);
                return;
              }

              arr.push(child.__akili);
            }
          }
        }

        level++;

        for (var _i5 = 0, _l3 = children.length; _i5 < _l3; _i5++) {
          find(children[_i5].__akili.__children);
        }
      };

      find(this.__children);
      return findAll ? arr : arr[0] || null;
    }

    /**
     * Get the nearest components
     *
     * @param {string} [selector='']
     * @param {boolean} [findAll=true] - get array if true
     * @param {boolean} [right=false] - from the right side if true
     * @returns {Component|Component[]}
     * @protected
     */

  }, {
    key: '__getNear',
    value: function __getNear() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var findAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var right = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      if (!this.__parent) {
        return null;
      }

      var levelElements = this.__parent.__akili.__children.slice();
      var arr = [];
      right && levelElements.reverse();

      for (var i = 0, l = levelElements.length; i < l; i++) {
        var el = levelElements[i];

        if (el === this.el) {
          break;
        }

        if (!selector || el.__akili.matches(selector)) {
          arr.push(el.__akili);
        }
      }

      arr.reverse();

      if (!findAll) {
        return arr.length ? arr[0] : null;
      }

      return arr;
    }

    /**
     * Create the link with the store
     * 
     * @param {string} name 
     * @param {string|string[]|function} handler
     */

  }, {
    key: 'store',
    value: function store(name, handler) {
      if (!this.__isMounted) {
        throw new Error('Method "store" must be called after the compilation. For example, in "compiled" method.');
      }

      var args = [].slice.call(arguments);

      if (typeof name == 'function') {
        args.unshift('*');
        handler = name;
      }

      return typeof handler === 'function' ? this.__storeByFunction.apply(this, (0, _toConsumableArray3.default)(args)) : this.__storeByKeys.apply(this, (0, _toConsumableArray3.default)(args));
    }

    /**
     * Create the link with the attribute
     * 
     * @param {string} name 
     * @param {string|string[]|function} handler
     */

  }, {
    key: 'attr',
    value: function attr(name, handler) {
      if (!this.__isMounted) {
        throw new Error('Method "attr" must be called after the compilation. For example, in "compiled" method.');
      }

      var args = [].slice.call(arguments);

      if (typeof name == 'function') {
        args.unshift('*');
        handler = name;
      }

      return typeof handler === 'function' ? this.__attrByFunction.apply(this, (0, _toConsumableArray3.default)(args)) : this.__attrByKeys.apply(this, (0, _toConsumableArray3.default)(args));
    }

    /**
     * Remove the store link
     * 
     * @param {string} name 
     * @param {string|string[]|function} handler
     */

  }, {
    key: 'unstore',
    value: function unstore(name, handler) {
      if (!this.__isMounted) {
        throw new Error('Method "unstore" must be called after the compilation. For example, in "compiled" method.');
      }

      var args = [].slice.call(arguments);

      if (typeof name == 'function') {
        args.unshift('*');
        handler = name;
      }

      return typeof handler === 'function' ? this.__unstoreByFunction.apply(this, arguments) : this.__unstoreByKeys.apply(this, arguments);
    }

    /**
     * Remove the attribute link
     * 
     * @param {string} name 
     * @param {string|string[]|function} handler
     */

  }, {
    key: 'unattr',
    value: function unattr(name, handler) {
      if (!this.__isMounted) {
        throw new Error('Method "unattr" must be called after the compilation. For example, in "compiled" method.');
      }

      var args = [].slice.call(arguments);

      if (typeof name == 'function') {
        args.unshift('*');
        handler = name;
      }

      return typeof handler === 'function' ? this.__unattrByFunction.apply(this, arguments) : this.__unattrByKeys.apply(this, arguments);
    }

    /**
     * Check the component using the selector
     *
     * @param {string|function} selector
     * @returns {boolean}
     */

  }, {
    key: 'matches',
    value: function matches(selector) {
      if (typeof selector == 'function') {
        return selector(this);
      }

      return this.el.matches(selector);
    }

    /**
     * Get the closest parent component by the selector
     *
     * @param {string|function} [selector='']
     * @param {number|number[]} [levels=null]
     * @returns {Component}
     */

  }, {
    key: 'parent',
    value: function parent() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var levels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      return this.__getParent(selector, false, levels);
    }

    /**
     * Get an array of parent components by the selector
     *
     * @param {string|function} [selector='']
     * @param {number|number[]} [levels=null]
     * @returns {Component[]}
     */

  }, {
    key: 'parents',
    value: function parents() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var levels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      return this.__getParent(selector, true, levels);
    }

    /**
     * Get the closest child component by the selector
     *
     * @param {string|function} [selector='']
     * @param {number|number[]} [levels=null]
     * @returns {Component}
     */

  }, {
    key: 'child',
    value: function child() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var levels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      return this.__getChildren(selector, false, levels);
    }

    /**
     * Get an array of child components by the selector
     *
     * @param {string|function} [selector='']
     * @param {number|number[]} [levels=null]
     * @returns {Component[]}
     */

  }, {
    key: 'children',
    value: function children() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var levels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      return this.__getChildren(selector, true, levels);
    }

    /**
     * Get an array of components left from the current by the selector
     *
     * @param {string|function} [selector='']
     * @returns {Component[]}
     */

  }, {
    key: 'before',
    value: function before() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      return this.__getNear(selector, true, false);
    }

    /**
     * Get an array of components right from the current by the selector
     *
     * @param {string|function} [selector='']
     * @returns {Component[]}
     */

  }, {
    key: 'after',
    value: function after() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      return this.__getNear(selector, true, true);
    }

    /**
     * Get the closest leftcomponent by the selector
     *
     * @param {string|function} [selector='']
     * @returns {Component}
     */

  }, {
    key: 'prev',
    value: function prev() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      return this.__getNear(selector, false, false);
    }

    /**
     * Get the closest right component by the selector
     *
     * @param {string|function} [selector='']
     * @returns {Component}
     */

  }, {
    key: 'next',
    value: function next() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      return this.__getNear(selector, false, true);
    }

    /**
     * Change the element parent
     *
     * @param {Element} parent
     */

  }, {
    key: 'appendTo',
    value: function appendTo(parent) {
      parent.appendChild(this.el);
      return _akili2.default.compile(this.el, { recompile: { setParents: true, checkChanges: false } });
    }

    /**
     * Cancel the component compilation
     */

  }, {
    key: 'cancel',
    value: function cancel() {
      this.__cancelled = true;
    }

    /**
     * Compile the component but prevent the compilation inside
     */

  }, {
    key: 'prevent',
    value: function prevent() {
      this.__prevent = true;
    }

    /**
     * Clear the element content
     *
     * @returns {*}
     */

  }, {
    key: 'empty',
    value: function empty() {
      return this.__empty.apply(this, arguments);
    }

    /**
     * Remove the element
     *
     * @returns {*}
     */

  }, {
    key: 'remove',
    value: function remove() {
      return this.__remove.apply(this, arguments);
    }
  }, {
    key: 'created',
    value: function created() {}
  }, {
    key: 'compiled',
    value: function compiled() {}
  }, {
    key: 'recompiled',
    value: function recompiled() {}
  }, {
    key: 'resolved',
    value: function resolved() {}
  }, {
    key: 'removed',
    value: function removed() {}
  }, {
    key: 'transition',
    get: function get() {
      return this.__scope && this.__scope.__transition || null;
    }
  }]);
  return Component;
}();

Component.matches = '';
Component.booleanAttributes = [];
Component.events = [];
Component.controlAttributes = false;
Component.transparent = false;
Component.template = '';
Component.templateUrl = '';
Component.scope = null;
exports.default = Component;

/***/ }),

/***/ "./node_modules/akili/src/components/a.js":
/*!************************************************!*\
  !*** ./node_modules/akili/src/components/a.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _component = __webpack_require__(/*! ../component.js */ "./node_modules/akili/src/component.js");

var _component2 = _interopRequireDefault(_component);

var _router = __webpack_require__(/*! ../services/router.js */ "./node_modules/akili/src/services/router.js");

var _router2 = _interopRequireDefault(_router);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for links.
 * It works with router as well. 
 * 
 * {@link https://akilijs.com/docs/components#docs_links}
 * 
 * @tag a
 * @selector a[state]:not([url]),a[url]:not([state])
 * @attr {string} [url] - url to go
 * @attr {string} [state] - state to go {@link https://akilijs.com/docs/routing}
 * @attr {object} [params] - params for the state {@link https://akilijs.com/docs/routing#docs_state_params}
 * @attr {object} [query] - query for the state {@link https://akilijs.com/docs/routing#docs_state_query}
 * @attr {string} [hash] - hash for the state {@link https://akilijs.com/docs/routing#docs_state_hash}
 * @attr {object} [options] - options for the state {@link https://akilijs.com/docs/routing#docs_router.location}
 * @scope {boolean} isActiveState - the state is active or not 
 * @scope {boolean} inActiveState - the state is part of the active state or not
 */
var A = function (_Component) {
  (0, _inherits3.default)(A, _Component);
  (0, _createClass3.default)(A, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('a', this);
    }
  }]);

  function A() {
    var _ref;

    (0, _classCallCheck3.default)(this, A);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = A.__proto__ || (0, _getPrototypeOf2.default)(A)).call.apply(_ref, [this].concat(args)));

    _this.state = null;
    _this.params = {};
    _this.query = {};
    _this.options = {};
    _this.isUrl = _this.el.hasAttribute('url');
    return _this;
  }

  (0, _createClass3.default)(A, [{
    key: 'compiled',
    value: function compiled() {
      var _this2 = this;

      this.el.addEventListener('click', function (e) {
        e.preventDefault();

        if (_this2.isUrl) {
          _router2.default.location(_this2.attrs.url, _this2.options);
          return;
        }

        _router2.default.state(_this2.state.name, _this2.params, _this2.query, _this2.hash, _this2.options);
      });

      this.onStateChanged = function () {
        return _this2.state && _this2.setActivity();
      };
      window.addEventListener('state-changed', this.onStateChanged);

      this.attr('state', this.setState);
      this.attr('params', this.setParams);
      this.attr('query', this.setQuery);
      this.attr('hash', this.setHash);
      this.attr('options', this.setOptions);
      this.attr('url', this.setUrl);
      this.attr('state', this.resetHref, { callOnStart: false });
      this.attr('params', this.resetHref, { callOnStart: false });
      this.attr('query', this.resetHref, { callOnStart: false });
      this.attr('hash', this.resetHref, { callOnStart: false });
      this.attr('url', this.resetHref, { callOnStart: false });
      this.resetHref();
    }
  }, {
    key: 'removed',
    value: function removed() {
      window.removeEventListener('state-changed', this.onStateChanged);
    }
  }, {
    key: 'setUrl',
    value: function setUrl(url) {
      this.url = url;
    }
  }, {
    key: 'setState',
    value: function setState(name) {
      this.state = this.getState(name);
      this.setActivity();
    }
  }, {
    key: 'setActivity',
    value: function setActivity() {
      this.scope.isActiveState = _router2.default.isActiveState(this.state);
      this.scope.inActiveState = _router2.default.inActiveState(this.state);
    }
  }, {
    key: 'setParams',
    value: function setParams(params) {
      if ((typeof params === 'undefined' ? 'undefined' : (0, _typeof3.default)(params)) != 'object' || !params) {
        throw new Error('Router state params must be an object');
      }

      this.params = params;
    }
  }, {
    key: 'setQuery',
    value: function setQuery(query) {
      if ((typeof query === 'undefined' ? 'undefined' : (0, _typeof3.default)(query)) != 'object' || !query) {
        throw new Error('Router state query must be an object');
      }

      this.query = query;
    }
  }, {
    key: 'setHash',
    value: function setHash(hash) {
      if (typeof hash != 'string' && hash !== undefined && hash !== null) {
        throw new Error('Router state hash must be a string|null');
      }

      this.hash = hash;
    }
  }, {
    key: 'setOptions',
    value: function setOptions(options) {
      if ((typeof options === 'undefined' ? 'undefined' : (0, _typeof3.default)(options)) != 'object' || !options) {
        throw new Error('Router state options must be an object');
      }

      this.options = options;
    }
  }, {
    key: 'getState',
    value: function getState(name) {
      var state = _router2.default.getState(name);

      if (!state) {
        throw new Error('Not found router state with name "' + name + '"');
      }

      return state;
    }
  }, {
    key: 'resetHref',
    value: function resetHref() {
      if (this.url) {
        this.attrs.href = this.url;
      } else {
        this.attrs.href = _router2.default.createStateUrl(this.state, this.params, this.query, this.hash, this.options);
      }
    }
  }]);
  return A;
}(_component2.default);

A.matches = '[state]:not([url]),[url]:not([state])';
A.controlAttributes = true;
exports.default = A;

/***/ }),

/***/ "./node_modules/akili/src/components/audio.js":
/*!****************************************************!*\
  !*** ./node_modules/akili/src/components/audio.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _url = __webpack_require__(/*! ./url.js */ "./node_modules/akili/src/components/url.js");

var _url2 = _interopRequireDefault(_url);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for audio elements.
 * 
 * {@link https://akilijs.com/docs/components#docs_image,_iframe,_embed,_audio,_video,_track,_source,_object}
 * 
 * @tag audio
 * @attr {string} [url]
 */
var Audio = function (_Url) {
  (0, _inherits3.default)(Audio, _Url);

  function Audio() {
    (0, _classCallCheck3.default)(this, Audio);
    return (0, _possibleConstructorReturn3.default)(this, (Audio.__proto__ || (0, _getPrototypeOf2.default)(Audio)).apply(this, arguments));
  }

  (0, _createClass3.default)(Audio, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('audio', this);
    }
  }]);
  return Audio;
}(_url2.default);

exports.default = Audio;

/***/ }),

/***/ "./node_modules/akili/src/components/content.js":
/*!******************************************************!*\
  !*** ./node_modules/akili/src/components/content.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _text = __webpack_require__(/*! ./text.js */ "./node_modules/akili/src/components/text.js");

var _text2 = _interopRequireDefault(_text);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for elements with the contenteditable attribute.
 * 
 * {@link https://akilijs.com/docs/components#docs_contenteditable}
 * 
 * @tag content
 * @selector content,[contenteditable]
 * @attr @see Text
 * @attr {boolean} [editable] - editable or not
 */
var Content = function (_Text) {
  (0, _inherits3.default)(Content, _Text);
  (0, _createClass3.default)(Content, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('content', this);
      _akili2.default.alias('[contenteditable]', 'content');
    }
  }]);

  function Content() {
    var _ref;

    (0, _classCallCheck3.default)(this, Content);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Content.__proto__ || (0, _getPrototypeOf2.default)(Content)).call.apply(_ref, [this].concat(args)));

    if (_this.el.hasAttribute('editable')) {
      _this.el.setAttribute('contenteditable', _this.el.getAttribute('editable'));
      _this.el.removeAttribute('editable');
    }

    if (getComputedStyle(_this.el).display == 'inline') {
      _this.el.style.display = 'block';
    }

    _this.valueKey = 'innerHTML';
    return _this;
  }

  (0, _createClass3.default)(Content, [{
    key: 'setElementFocus',
    value: function setElementFocus() {
      var range = document.createRange();
      var selection = window.getSelection();

      range.selectNodeContents(this.el);
      range.collapse(false);
      selection.removeAllRanges();
      selection.addRange(range);
      this.el.focus();
    }
  }]);
  return Content;
}(_text2.default);

exports.default = Content;

/***/ }),

/***/ "./node_modules/akili/src/components/embed.js":
/*!****************************************************!*\
  !*** ./node_modules/akili/src/components/embed.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _url = __webpack_require__(/*! ./url.js */ "./node_modules/akili/src/components/url.js");

var _url2 = _interopRequireDefault(_url);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for embed elements.
 * 
 * {@link https://akilijs.com/docs/components#docs_image,_iframe,_embed,_audio,_video,_track,_source,_object}
 * 
 * @tag embed
 * @attr {string} [url]
 */
var Embed = function (_Url) {
  (0, _inherits3.default)(Embed, _Url);

  function Embed() {
    (0, _classCallCheck3.default)(this, Embed);
    return (0, _possibleConstructorReturn3.default)(this, (Embed.__proto__ || (0, _getPrototypeOf2.default)(Embed)).apply(this, arguments));
  }

  (0, _createClass3.default)(Embed, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('embed', this);
    }
  }]);
  return Embed;
}(_url2.default);

exports.default = Embed;

/***/ }),

/***/ "./node_modules/akili/src/components/for.js":
/*!**************************************************!*\
  !*** ./node_modules/akili/src/components/for.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Loop = undefined;

var _promise = __webpack_require__(/*! babel-runtime/core-js/promise */ "./node_modules/babel-runtime/core-js/promise.js");

var _promise2 = _interopRequireDefault(_promise);

var _keys = __webpack_require__(/*! babel-runtime/core-js/object/keys */ "./node_modules/babel-runtime/core-js/object/keys.js");

var _keys2 = _interopRequireDefault(_keys);

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _get2 = __webpack_require__(/*! babel-runtime/helpers/get */ "./node_modules/babel-runtime/helpers/get.js");

var _get3 = _interopRequireDefault(_get2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _component = __webpack_require__(/*! ../component.js */ "./node_modules/akili/src/component.js");

var _component2 = _interopRequireDefault(_component);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/akili/src/utils.js");

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for loops.
 * 
 * {@link https://akilijs.com/docs/components#docs_loops}
 * 
 * @tag for
 * @selector for[in],ol[in],ul[in],thead[in],tbody[in],tfoot[in]
 * @attr {object|array} in - data to create the loop
 * @message {object|array} out - sent on the data change
 */
var For = function (_Component) {
  (0, _inherits3.default)(For, _Component);
  (0, _createClass3.default)(For, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('for', this);
      _akili2.default.component('ol', this);
      _akili2.default.component('ul', this);
      _akili2.default.component('thead', this);
      _akili2.default.component('tbody', this);
      _akili2.default.component('tfoot', this);
      _akili2.default.component('tr', this.Loop);
      _akili2.default.component('loop', this.Loop);
    }
  }]);

  function For() {
    var _ref;

    (0, _classCallCheck3.default)(this, For);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = For.__proto__ || (0, _getPrototypeOf2.default)(For)).call.apply(_ref, [this].concat(args)));

    _this.iterators = [];
    _this.iteratorEl = null;
    _this.reset();
    return _this;
  }

  (0, _createClass3.default)(For, [{
    key: '__prepareAttributeIn',
    value: function __prepareAttributeIn(node, value) {
      if (node instanceof window.Attr && node.name == 'in') {
        return value;
      }

      return (0, _get3.default)(For.prototype.__proto__ || (0, _getPrototypeOf2.default)(For.prototype), '__prepareAttributeIn', this).apply(this, arguments);
    }
  }, {
    key: '__compareNodePropertyValue',
    value: function __compareNodePropertyValue(prop, value) {
      var node = prop.node;

      if (node instanceof window.Attr && node.name == 'in' && prop.value !== value) {
        return false;
      }

      return (0, _get3.default)(For.prototype.__proto__ || (0, _getPrototypeOf2.default)(For.prototype), '__compareNodePropertyValue', this).apply(this, arguments);
    }
  }, {
    key: 'created',
    value: function created() {
      this.createIterator();
    }
  }, {
    key: 'compiled',
    value: function compiled() {
      this.attr('in', this.draw);
    }
  }, {
    key: 'removed',
    value: function removed() {
      (0, _get3.default)(For.prototype.__proto__ || (0, _getPrototypeOf2.default)(For.prototype), 'removed', this).apply(this, arguments);
      this.iteratorEl && this.iteratorEl.remove();
      delete this.html;
      delete this.iterators;
      delete this.iteratorEl;
      delete this.__iterator;
      delete this.__value;
    }
  }, {
    key: 'createIterator',
    value: function createIterator() {
      var el = void 0;

      for (var i = 0, l = this.el.children.length; i < l; i++) {
        var child = this.el.children[i];

        if (child.getAttribute('component') == 'loop') {
          el = child;
          break;
        }

        el = child;
      }

      if (!el) {
        el = document.createElement('loop');
        el.innerHTML = this.el.innerHTML;
        this.el.innerHTML = '';
        this.el.appendChild(el);
      }

      var componentName = el.getAttribute('component');

      if (componentName != 'loop') {
        var component = _akili2.default.component(componentName || el.tagName);

        if (!component) {
          el.setAttribute('component', 'loop');
        } else if (!(component.prototype instanceof For)) {
          var mask = document.createElement('loop');
          mask.appendChild(el);
          el = mask;
        }
      }

      this.html = el.innerHTML;
      this.iteratorEl = this.createIteratorElement(el.outerHTML);
      el.remove();
    }
  }, {
    key: 'createIteratorElement',
    value: function createIteratorElement(html) {
      var el = document.createElement('template');
      el.innerHTML = html;
      return el.content.firstChild;
    }
  }, {
    key: 'loop',
    value: function loop(key, value, index) {
      this.__index = index;
      this.__key = key;
      this.__value = value;
      this.__hash = _utils2.default.createHash(value);

      if (this.iterators.length > index) {
        var iterator = this.iterators[index];
        iterator.setIndex(this.__index === iterator.index);
        iterator.setKey(this.__key === iterator.key);
        iterator.setValue(_utils2.default.compare(this.__hash, iterator.hash));
        this.__promises.push(_akili2.default.compile(iterator.el, {
          recompile: {
            checkChanges: true
          }
        }));
        return iterator;
      }

      var el = this.iteratorEl.cloneNode();
      el.innerHTML = this.html;
      this.el.appendChild(el);
      this.__promises.push(_akili2.default.compile(el));
      this.iterators.push(el.__akili);
      return el.__akili;
    }
  }, {
    key: 'draw',
    value: function draw(data) {
      var _this2 = this;

      if ((typeof data === 'undefined' ? 'undefined' : (0, _typeof3.default)(data)) != 'object' || data === null) {
        if (_akili2.default.options.debug) {
          // eslint-disable-next-line no-console
          console.warn('"For" component "in" attribute value type must be an object/array');
        }

        data = [];
      }

      this.data = data;
      var index = 0;
      var children = [].slice.call(this.el.children);
      this.iterators.sort(function (a, b) {
        return children.indexOf(a.el) - children.indexOf(b.el);
      });
      this.__children.sort(function (a, b) {
        return children.indexOf(a) - children.indexOf(b);
      });
      var loop = function loop(key, value, index) {
        return _this2.loop(key, value, index).iterate(index);
      };

      if (Array.isArray(data)) {
        for (var l = data.length; index < l; index++) {
          loop(index, data[index], index);
        }
      } else {
        var keys = (0, _keys2.default)(data);

        for (var _l = keys.length; index < _l; index++) {
          var key = keys[index];
          loop(key, data[key], index);
        }
      }

      for (var i = index, _l2 = this.iterators.length; i < _l2; i++) {
        var iterator = this.iterators[i];
        iterator.__remove();
        this.iterators.splice(i, 1);
        _l2--;
        i--;
      }

      return _promise2.default.all(this.__promises).then(function () {
        _this2.reset();
        _this2.attrs.onOut.trigger(data, { bubbles: true });
      });
    }

    /**
     * Reset the initial state
     */

  }, {
    key: 'reset',
    value: function reset() {
      this.__iterator = null;
      this.__index = 0;
      this.__key = '';
      this.__value = null;
      this.__hash = '';
      this.__promises = [];
    }
  }]);
  return For;
}(_component2.default);

/**
 * Component for loops.
 * 
 * {@link https://akilijs.com/docs/components#docs_loops}
 * 
 * @tag loop
 * @selector loop,tr
 * @attr @see For
 * @scope {*} loopValue - data item's value of the current iteration 
 * @scope {string|number} loopKey - key of the iteration
 * @scope {number} loopIndex - index of the iteration
 */


For.matches = '[in]';
For.events = ['out'];
exports.default = For;

var Loop = exports.Loop = function (_For) {
  (0, _inherits3.default)(Loop, _For);

  function Loop() {
    var _ref2;

    (0, _classCallCheck3.default)(this, Loop);

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    var _this3 = (0, _possibleConstructorReturn3.default)(this, (_ref2 = Loop.__proto__ || (0, _getPrototypeOf2.default)(Loop)).call.apply(_ref2, [this].concat(args)));

    _this3.for = null;
    _this3.html = _this3.el.innerHTML;
    _this3.isFor = _this3.el.hasAttribute('in');

    if (!_this3.isFor && !(_this3.el.parentNode.__akili instanceof For)) {
      _this3.cancel();
    }
    return _this3;
  }

  (0, _createClass3.default)(Loop, [{
    key: 'created',
    value: function created() {
      this.__parent.__akili.__iterator = this;
      this.for = this.__parent.__akili;
      this.setIndex(true);
      this.setKey(true);
      this.setValue(true);

      if (this.isFor) {
        return (0, _get3.default)(Loop.prototype.__proto__ || (0, _getPrototypeOf2.default)(Loop.prototype), 'created', this).apply(this, arguments);
      }
    }
  }, {
    key: 'compiled',
    value: function compiled() {
      if (this.isFor) {
        return (0, _get3.default)(Loop.prototype.__proto__ || (0, _getPrototypeOf2.default)(Loop.prototype), 'compiled', this).apply(this, arguments);
      }
    }
  }, {
    key: 'removed',
    value: function removed() {
      (0, _get3.default)(Loop.prototype.__proto__ || (0, _getPrototypeOf2.default)(Loop.prototype), 'removed', this).apply(this, arguments);
      delete this.for;
      delete this.value;
    }
  }, {
    key: 'setIndex',
    value: function setIndex(target) {
      this.index = this.for.__index;
      this.scope.__set('loopIndex', this.index, { target: target });
    }
  }, {
    key: 'setKey',
    value: function setKey(target) {
      this.key = this.for.__key;
      this.scope.__set('loopKey', this.key, { target: target });
    }
  }, {
    key: 'setValue',
    value: function setValue(target) {
      this.value = this.for.__value;
      this.scope.__set('loopValue', this.value, { target: target, saveProxy: true });
      this.hash = this.for.__hash;
    }
  }, {
    key: 'iterate',
    value: function iterate() {}
  }]);
  return Loop;
}(For);

Loop.matches = '';
Loop.controlAttributes = true;


For.Loop = Loop;

/***/ }),

/***/ "./node_modules/akili/src/components/if.js":
/*!*************************************************!*\
  !*** ./node_modules/akili/src/components/if.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Else = exports.ElseIf = undefined;

var _promise = __webpack_require__(/*! babel-runtime/core-js/promise */ "./node_modules/babel-runtime/core-js/promise.js");

var _promise2 = _interopRequireDefault(_promise);

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _component = __webpack_require__(/*! ../component.js */ "./node_modules/akili/src/component.js");

var _component2 = _interopRequireDefault(_component);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for conditional statements.
 * 
 * {@link https://akilijs.com/docs/components#docs_conditional_statements}
 * 
 * @tag if
 * @selector if[is]
 * @attr {boolean} is - show the element content or not
 * @attr {boolean} recreate - delete the content and recreate or just show/hide 
 */
var If = function (_Component) {
  (0, _inherits3.default)(If, _Component);
  (0, _createClass3.default)(If, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('if', this);
      _akili2.default.component('else-if', this.ElseIf);
      _akili2.default.component('else', this.Else);
    }
  }]);

  function If() {
    var _ref;

    (0, _classCallCheck3.default)(this, If);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = If.__proto__ || (0, _getPrototypeOf2.default)(If)).call.apply(_ref, [this].concat(args)));

    _this.html = _this.el.innerHTML;
    _this.el.innerHTML = '';
    _this.state = false;
    _this.active = false;
    _this.recreate = false;
    _this.isCompiled = false;
    _this.display = getComputedStyle(_this.el).display;
    return _this;
  }

  (0, _createClass3.default)(If, [{
    key: 'compiled',
    value: function compiled() {
      this.attr('recreate', this.setRecreation);
      return this.attr('is', this.setIs);
    }
  }, {
    key: 'setIs',
    value: function setIs(val) {
      this.state = !!val;
      return this.setState();
    }
  }, {
    key: 'setActivity',
    value: function setActivity(active) {
      this.active = active;
    }
  }, {
    key: 'setRecreation',
    value: function setRecreation(recreate) {
      this.recreate = recreate;
    }
  }, {
    key: 'setState',
    value: function setState() {
      var res = this.compilation();
      var next = this.el.nextElementSibling;
      var result = void 0;

      if (!next || !next.matches('else-if,else')) {
        return;
      }

      next.__akili.setActivity(this.active || this.state);
      next.__akili.setRecreation(this.recreate);
      result = next.__akili.setState();
      return _promise2.default.resolve(res).then(function () {
        return result;
      });
    }
  }, {
    key: 'compilation',
    value: function compilation() {
      var res = _promise2.default.resolve();

      if (this.state && !this.active) {
        if (this.recreate || !this.isCompiled) {
          res = this.compile();
        }

        this.el.style.setProperty('display', this.display, 'important');
      } else {
        if (this.recreate) {
          this.empty();
        } else if (!this.isCompiled) {
          res = this.compile();
        }

        this.el.style.setProperty('display', 'none', 'important');
      }

      return res;
    }
  }, {
    key: 'compile',
    value: function compile() {
      var res = void 0;
      this.empty();
      this.el.innerHTML = this.html;
      res = _akili2.default.compile(this.el, { recompile: true });
      this.isCompiled = true;
      return res;
    }
  }]);
  return If;
}(_component2.default);

/**
 * Component for conditional statements.
 * 
 * {@link https://akilijs.com/docs/components#docs_conditional_statements}
 * 
 * @tag else-if
 * @selector else-if[is]
 * @attr {boolean} is @see If
 */


If.transparent = true;
If.matches = '[is]';
If.booleanAttributes = ['recreate'];
exports.default = If;

var ElseIf = exports.ElseIf = function (_If) {
  (0, _inherits3.default)(ElseIf, _If);

  function ElseIf() {
    var _ref2;

    (0, _classCallCheck3.default)(this, ElseIf);

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    var _this2 = (0, _possibleConstructorReturn3.default)(this, (_ref2 = ElseIf.__proto__ || (0, _getPrototypeOf2.default)(ElseIf)).call.apply(_ref2, [this].concat(args)));

    _this2.active = true;
    return _this2;
  }

  return ElseIf;
}(If);

/**
 * Component for conditional statements.
 * 
 * {@link https://akilijs.com/docs/components#docs_conditional_statements}
 * 
 * @tag else
 */


var Else = exports.Else = function (_ElseIf) {
  (0, _inherits3.default)(Else, _ElseIf);

  function Else() {
    var _ref3;

    (0, _classCallCheck3.default)(this, Else);

    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    var _this3 = (0, _possibleConstructorReturn3.default)(this, (_ref3 = Else.__proto__ || (0, _getPrototypeOf2.default)(Else)).call.apply(_ref3, [this].concat(args)));

    _this3.el.setAttribute('is', 'true');
    return _this3;
  }

  return Else;
}(ElseIf);

Else.matches = '';


If.ElseIf = ElseIf;
If.Else = Else;

/***/ }),

/***/ "./node_modules/akili/src/components/iframe.js":
/*!*****************************************************!*\
  !*** ./node_modules/akili/src/components/iframe.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _url = __webpack_require__(/*! ./url.js */ "./node_modules/akili/src/components/url.js");

var _url2 = _interopRequireDefault(_url);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for iframes.
 * 
 * {@link https://akilijs.com/docs/components#docs_image,_iframe,_embed,_audio,_video,_track,_source,_object}
 * 
 * @tag iframe
 * @attr {string} [url]
 */
var Iframe = function (_Url) {
  (0, _inherits3.default)(Iframe, _Url);

  function Iframe() {
    (0, _classCallCheck3.default)(this, Iframe);
    return (0, _possibleConstructorReturn3.default)(this, (Iframe.__proto__ || (0, _getPrototypeOf2.default)(Iframe)).apply(this, arguments));
  }

  (0, _createClass3.default)(Iframe, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('iframe', this);
    }
  }]);
  return Iframe;
}(_url2.default);

exports.default = Iframe;

/***/ }),

/***/ "./node_modules/akili/src/components/image.js":
/*!****************************************************!*\
  !*** ./node_modules/akili/src/components/image.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _url = __webpack_require__(/*! ./url.js */ "./node_modules/akili/src/components/url.js");

var _url2 = _interopRequireDefault(_url);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for images.
 * 
 * {@link https://akilijs.com/docs/components#docs_image,_iframe,_embed,_audio,_video,_track,_source,_object}
 * 
 * @tag img
 * @attr {string} [url]
 */
var Image = function (_Url) {
  (0, _inherits3.default)(Image, _Url);

  function Image() {
    (0, _classCallCheck3.default)(this, Image);
    return (0, _possibleConstructorReturn3.default)(this, (Image.__proto__ || (0, _getPrototypeOf2.default)(Image)).apply(this, arguments));
  }

  (0, _createClass3.default)(Image, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('img', this);
    }
  }]);
  return Image;
}(_url2.default);

exports.default = Image;

/***/ }),

/***/ "./node_modules/akili/src/components/include.js":
/*!******************************************************!*\
  !*** ./node_modules/akili/src/components/include.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _component = __webpack_require__(/*! ../component.js */ "./node_modules/akili/src/component.js");

var _component2 = _interopRequireDefault(_component);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

var _request = __webpack_require__(/*! ../services/request.js */ "./node_modules/akili/src/services/request.js");

var _request2 = _interopRequireDefault(_request);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component to include templates by url.
 * 
 * {@link https://akilijs.com/docs/components#docs_html_templates}
 * 
 * @tag include
 * @selector include[url]
 * @attr {string} url - template path
 * @attr {number|function|boolean} [cache] - request cache {@link https://akilijs.com/docs/requests#docs_cache}
 * @message {void} load - sent on the template load
 * @message {Error} error - sent on error
 */
var Include = function (_Component) {
  (0, _inherits3.default)(Include, _Component);
  (0, _createClass3.default)(Include, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('include', this);
    }
  }]);

  function Include() {
    var _ref;

    (0, _classCallCheck3.default)(this, Include);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Include.__proto__ || (0, _getPrototypeOf2.default)(Include)).call.apply(_ref, [this].concat(args)));

    _this.html = _this.el.innerHTML;
    _this.el.innerHTML = '';
    _this.connection = null;
    return _this;
  }

  (0, _createClass3.default)(Include, [{
    key: 'compiled',
    value: function compiled() {
      this.attr('cache', this.setCache);
      return this.attr('url', this.setTemplate);
    }
  }, {
    key: 'setCache',
    value: function setCache(cache) {
      this.cache = cache;
    }
  }, {
    key: 'setTemplate',
    value: function setTemplate(url) {
      var _this2 = this;

      this.connection && this.connection.abort();

      return _request2.default.get(url, {
        cache: this.cache,
        onStart: function onStart(xhr) {
          _this2.connection = xhr;
        }
      }).then(function (res) {
        _this2.connection = null;
        _this2.empty();
        _this2.el.innerHTML = _this2.html;
        _akili2.default.setTemplate(_this2.el, res.data);

        return _akili2.default.compile(_this2.el, { recompile: true }).then(function () {
          _this2.attrs.onLoad.trigger(undefined, { bubbles: false });
        });
      }).catch(function (err) {
        _this2.attrs.onError.trigger(err, { bubbles: false });
        throw err;
      });
    }
  }]);
  return Include;
}(_component2.default);

Include.transparent = true;
Include.matches = '[url]';
Include.events = ['load', 'error'];
exports.default = Include;

/***/ }),

/***/ "./node_modules/akili/src/components/input.js":
/*!****************************************************!*\
  !*** ./node_modules/akili/src/components/input.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _get2 = __webpack_require__(/*! babel-runtime/helpers/get */ "./node_modules/babel-runtime/helpers/get.js");

var _get3 = _interopRequireDefault(_get2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _text = __webpack_require__(/*! ./text.js */ "./node_modules/akili/src/components/text.js");

var _text2 = _interopRequireDefault(_text);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component to work with input elements.
 * 
 * {@link https://akilijs.com/docs/components#docs_input}
 * {@link https://akilijs.com/docs/components#docs_checkbox_and_radio}
 * 
 * @tag input
 * @attr @see Text
 * @message @see Text
 */
var Input = function (_Text) {
  (0, _inherits3.default)(Input, _Text);
  (0, _createClass3.default)(Input, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('input', this);
    }
  }]);

  function Input() {
    var _ref;

    (0, _classCallCheck3.default)(this, Input);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Input.__proto__ || (0, _getPrototypeOf2.default)(Input)).call.apply(_ref, [this].concat(args)));

    _this.isCheckbox = _this.el.type == 'checkbox';
    _this.isRadio = _this.el.type == 'radio';
    return _this;
  }

  (0, _createClass3.default)(Input, [{
    key: 'compiled',
    value: function compiled() {
      (this.isCheckbox || this.isRadio) && this.attr('checked', this.setChecked);
      return (0, _get3.default)(Input.prototype.__proto__ || (0, _getPrototypeOf2.default)(Input.prototype), 'compiled', this).apply(this, arguments);
    }
  }, {
    key: 'setChecked',
    value: function setChecked(value) {
      value = !!value;

      if (this.el.checked === value) {
        return;
      }

      this.el.checked = value;
      this.__isCompiled && this.attrs.onChange.dispatch(Event, { bubbles: true });
      this.isRadio && this.changeRadio();
    }
  }, {
    key: 'setValue',
    value: function setValue() {
      (0, _get3.default)(Input.prototype.__proto__ || (0, _getPrototypeOf2.default)(Input.prototype), 'setValue', this).apply(this, arguments);
      this.isRadio && this.attrs.onChange.dispatch(Event, { bubbles: true });
    }
  }, {
    key: 'changeRadio',
    value: function changeRadio() {
      var name = this.el.getAttribute('name');
      var selector = 'input[type=radio][name=\'' + name + '\']:not([scope=\'' + this.scope.__name + '\'])';
      var children = _akili2.default.root.children(selector);

      for (var i = 0, l = children.length; i < l; i++) {
        var radio = children[i];
        radio.setChecked(radio.el.checked);
      }
    }
  }]);
  return Input;
}(_text2.default);

Input.booleanAttributes = ['checked', 'multiple'].concat(_text2.default.booleanAttributes);
Input.events = ['change'].concat(_text2.default.events);
exports.default = Input;

/***/ }),

/***/ "./node_modules/akili/src/components/object.js":
/*!*****************************************************!*\
  !*** ./node_modules/akili/src/components/object.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _url = __webpack_require__(/*! ./url.js */ "./node_modules/akili/src/components/url.js");

var _url2 = _interopRequireDefault(_url);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for object elements.
 * 
 * {@link https://akilijs.com/docs/components#docs_image,_iframe,_embed,_audio,_video,_track,_source,_object}
 * 
 * @tag object
 * @attr {string} [url]
 */
var Objects = function (_Url) {
  (0, _inherits3.default)(Objects, _Url);

  function Objects() {
    var _ref;

    (0, _classCallCheck3.default)(this, Objects);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Objects.__proto__ || (0, _getPrototypeOf2.default)(Objects)).call.apply(_ref, [this].concat(args)));

    _this.urlAttribute = 'data';
    return _this;
  }

  (0, _createClass3.default)(Objects, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('object', this);
    }
  }]);
  return Objects;
}(_url2.default);

exports.default = Objects;

/***/ }),

/***/ "./node_modules/akili/src/components/radio.js":
/*!****************************************************!*\
  !*** ./node_modules/akili/src/components/radio.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RadioButton = undefined;

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _get2 = __webpack_require__(/*! babel-runtime/helpers/get */ "./node_modules/babel-runtime/helpers/get.js");

var _get3 = _interopRequireDefault(_get2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _for = __webpack_require__(/*! ./for.js */ "./node_modules/akili/src/components/for.js");

var _for2 = _interopRequireDefault(_for);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component to work with radio group.
 * 
 * {@link https://akilijs.com/docs/components#docs_radio_group}
 * 
 * @tag radio
 * @selector radio[name]
 * @attr {string} name - name of the group
 * @attr {string|null} value - selected value
 * @attr [in] @see For
 * @message {string} radio - sent on value change
 */
var Radio = function (_For) {
  (0, _inherits3.default)(Radio, _For);
  (0, _createClass3.default)(Radio, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('radio', this);
      _akili2.default.component('radio-button', this.RadioButton);
    }
  }]);

  function Radio() {
    var _ref;

    (0, _classCallCheck3.default)(this, Radio);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Radio.__proto__ || (0, _getPrototypeOf2.default)(Radio)).call.apply(_ref, [this].concat(args)));

    _this.iterable = _this.el.hasAttribute('in');
    return _this;
  }

  (0, _createClass3.default)(Radio, [{
    key: 'created',
    value: function created() {
      if (this.iterable) {
        return (0, _get3.default)(Radio.prototype.__proto__ || (0, _getPrototypeOf2.default)(Radio.prototype), 'created', this).apply(this, arguments);
      }
    }
  }, {
    key: 'compiled',
    value: function compiled() {
      var _this2 = this;

      this.el.addEventListener('change', function () {
        var value = _this2.getRadioValue();

        if (value === _this2.prevValue) {
          return;
        }

        _this2.prevValue = value;
        _this2.attrs.onRadio.trigger(value, { bubbles: true });
      });

      if (this.iterable) {
        return (0, _get3.default)(Radio.prototype.__proto__ || (0, _getPrototypeOf2.default)(Radio.prototype), 'compiled', this).apply(this, arguments);
      }
    }
  }, {
    key: 'resolved',
    value: function resolved() {
      var _this3 = this;

      this.attr('in', function () {
        return _this3.setNames();
      }, { callOnStart: false });
      this.attr('value', this.setValue);
      this.attr('name', this.setNames);

      if (this.iterable) {
        return (0, _get3.default)(Radio.prototype.__proto__ || (0, _getPrototypeOf2.default)(Radio.prototype), 'resolved', this).apply(this, arguments);
      }
    }
  }, {
    key: 'setNames',
    value: function setNames(name) {
      var children = this.children('input[type=radio]');

      for (var i = 0, l = children.length; i < l; i++) {
        children[i].el.setAttribute('name', name || this.attrs.name);
      }
    }
  }, {
    key: 'setValue',
    value: function setValue(value) {
      if (value === this.prevValue) {
        return;
      }

      var prev = this.prevValue;
      var children = this.children('input[type=radio]');
      var isTrue = false;
      this.prevValue = value;

      for (var i = 0, l = children.length; i < l; i++) {
        var radio = children[i];
        var isSelected = radio.el.value === value;

        isSelected && (isTrue = true);
        radio.setChecked(isSelected);
      }

      if (!isTrue) {
        if (value === null) {
          if (prev === undefined) {
            return;
          }
        } else {
          this.prevValue = undefined;
          value = null;
        }
      }

      this.attrs.onRadio.trigger(value, { bubbles: true });
    }
  }, {
    key: 'getRadioValue',
    value: function getRadioValue() {
      var children = this.children('input[type=radio]');

      for (var i = 0, l = children.length; i < l; i++) {
        var radio = children[i];

        if (radio.el.checked) {
          return radio.el.value;
        }
      }

      return null;
    }
  }]);
  return Radio;
}(_for2.default);

/**
 * Component to work with radio group item.
 * 
 * {@link https://akilijs.com/docs/components#docs_radio_group}
 * 
 * @tag radio-button
 * @attr {string} value - value
 */


Radio.matches = '[name]';
Radio.events = ['radio'].concat(_for2.default.events);
exports.default = Radio;

var RadioButton = exports.RadioButton = function (_Loop) {
  (0, _inherits3.default)(RadioButton, _Loop);

  function RadioButton() {
    var _ref2;

    (0, _classCallCheck3.default)(this, RadioButton);

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return (0, _possibleConstructorReturn3.default)(this, (_ref2 = RadioButton.__proto__ || (0, _getPrototypeOf2.default)(RadioButton)).call.apply(_ref2, [this].concat(args)));
  }

  (0, _createClass3.default)(RadioButton, [{
    key: 'compiled',
    value: function compiled() {
      this.attr('value', 'value');
      return (0, _get3.default)(RadioButton.prototype.__proto__ || (0, _getPrototypeOf2.default)(RadioButton.prototype), 'compiled', this).apply(this, arguments);
    }
  }]);
  return RadioButton;
}(_for.Loop);

RadioButton.template = '<label><input type="radio" value="${this.value}"/>${this.__content}</label>';


Radio.RadioButton = RadioButton;

/***/ }),

/***/ "./node_modules/akili/src/components/route.js":
/*!****************************************************!*\
  !*** ./node_modules/akili/src/components/route.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = __webpack_require__(/*! babel-runtime/core-js/promise */ "./node_modules/babel-runtime/core-js/promise.js");

var _promise2 = _interopRequireDefault(_promise);

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _component = __webpack_require__(/*! ../component.js */ "./node_modules/akili/src/component.js");

var _component2 = _interopRequireDefault(_component);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

var _request = __webpack_require__(/*! ../services/request.js */ "./node_modules/akili/src/services/request.js");

var _request2 = _interopRequireDefault(_request);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component to work with router templates.
 * 
 * {@link https://akilijs.com/docs/routing#docs_templates}
 * 
 * @tag route
 */
var Route = function (_Component) {
  (0, _inherits3.default)(Route, _Component);
  (0, _createClass3.default)(Route, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('route', this);
    }
  }]);

  function Route() {
    var _ref;

    (0, _classCallCheck3.default)(this, Route);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Route.__proto__ || (0, _getPrototypeOf2.default)(Route)).call.apply(_ref, [this].concat(args)));

    _this.el.innerHTML = '';
    return _this;
  }

  /**
   * @param {Transition} transition
   * @param {boolean} load
   * @returns {Promise}
   */


  (0, _createClass3.default)(Route, [{
    key: 'setTransition',
    value: function setTransition(transition) {
      var _this2 = this;

      var load = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      var state = transition.path.state;

      var getParentScopeTransition = function getParentScopeTransition(path) {
        if (path.parent) {
          if (path.parent.component) {
            return path.parent.component.__scope.__transition.path;
          }

          return getParentScopeTransition(path.parent);
        }

        return null;
      };

      var compile = function compile(html) {
        _this2.empty();
        var name = 'component';

        if (state.component) {
          var exists = false;

          for (var key in _akili2.default.__components) {
            var component = _akili2.default.__components[key];

            if (component === state.component) {
              name = key;
              exists = true;
              break;
            }
          }

          if (!exists) {
            throw new Error('Router state "' + state.name + '" has no defined component');
          }
        }

        _this2.el.innerHTML = '<' + name + '>' + html + '</' + name + '>';
        return _akili2.default.compile(_this2.el, { recompile: true });
      };

      this.__scope.__transition = {
        parent: getParentScopeTransition(transition.path),
        state: transition.path.state,
        data: transition.path.data,
        url: transition.path.url,
        params: transition.path.params,
        query: transition.path.query,
        hash: transition.path.hash
      };

      if (!load) {
        return _akili2.default.compile(this.el, { recompile: { checkChanges: true } });
      }

      return _promise2.default.resolve().then(function () {
        if (state.template) {
          return state.template;
        }

        if (state.templateUrl) {
          return _request2.default.get(state.templateUrl).then(function (res) {
            return res.data;
          });
        }
      }).then(function (html) {
        return compile(html);
      });
    }
  }]);
  return Route;
}(_component2.default);

exports.default = Route;

/***/ }),

/***/ "./node_modules/akili/src/components/select.js":
/*!*****************************************************!*\
  !*** ./node_modules/akili/src/components/select.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Option = undefined;

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _get2 = __webpack_require__(/*! babel-runtime/helpers/get */ "./node_modules/babel-runtime/helpers/get.js");

var _get3 = _interopRequireDefault(_get2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _for = __webpack_require__(/*! ./for.js */ "./node_modules/akili/src/components/for.js");

var _for2 = _interopRequireDefault(_for);

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/akili/src/utils.js");

var _utils2 = _interopRequireDefault(_utils);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component to work with select.
 * 
 * {@link https://akilijs.com/docs/components#docs_select}
 * 
 * @tag select  
 * @attr {string} value - actual value
 * @attr [in] @see For
 */
var Select = function (_For) {
  (0, _inherits3.default)(Select, _For);
  (0, _createClass3.default)(Select, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('select', this);
      _akili2.default.component('option', this.Option);
    }
  }]);

  function Select() {
    var _ref;

    (0, _classCallCheck3.default)(this, Select);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Select.__proto__ || (0, _getPrototypeOf2.default)(Select)).call.apply(_ref, [this].concat(args)));

    _this.iteratorTagName = 'option';
    _this.isMultiple = false;
    return _this;
  }

  (0, _createClass3.default)(Select, [{
    key: 'compiled',
    value: function compiled() {
      var _this2 = this;

      this.el.addEventListener('change', function () {
        return _this2.el.content = _this2.getContent();
      });
      var res = (0, _get3.default)(Select.prototype.__proto__ || (0, _getPrototypeOf2.default)(Select.prototype), 'compiled', this).apply(this, arguments);
      this.attr('multiple', this.setMultiple);
      this.attr('content', this.setContent);
      this.attr('in', this.drawSelect);
      return res;
    }
  }, {
    key: 'setMultiple',
    value: function setMultiple(value) {
      this.isMultiple = value;
      this.changeValue(this.formatValue(_utils2.default.copy(this.el.content)));
    }
  }, {
    key: 'setContent',
    value: function setContent(value) {
      this.changeValue(this.formatValue(value));
    }
  }, {
    key: 'drawSelect',
    value: function drawSelect() {
      var selected = [];

      for (var i = 0, l = this.el.options.length; i < l; i++) {
        var option = this.el.options[i].__akili;
        var selection = option.attrs.selected;

        if (selection) {
          selected.push(option.el.value);
        }

        option.el.selected = selection;
      }

      if (!selected.length) {
        this.redefine();
      } else {
        this.changeValue(this.formatValue(selected));
      }
    }
  }, {
    key: 'createIteratorElement',
    value: function createIteratorElement() {
      var el = (0, _get3.default)(Select.prototype.__proto__ || (0, _getPrototypeOf2.default)(Select.prototype), 'createIteratorElement', this).apply(this, arguments);

      if (!el.hasAttribute('value')) {
        el.setAttribute('value', this.html.trim());
      }

      return el;
    }
  }, {
    key: 'getContent',
    value: function getContent() {
      if (!this.isMultiple) {
        return this.el.value;
      }

      var content = [];

      for (var i = 0, l = this.el.options.length; i < l; i++) {
        var option = this.el.options[i];

        if (option.selected) {
          content.push(option.value);
        }
      }

      return content;
    }
  }, {
    key: 'formatValue',
    value: function formatValue(value) {
      if (this.isMultiple) {
        if (!Array.isArray(value)) {
          value = value !== undefined && value !== null ? [value] : [];
        }
      } else {
        if (Array.isArray(value)) {
          value = value.length ? value[0] : '';
        } else if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) == 'object' || typeof value == 'function') {
          value = '';
        }
      }

      return value;
    }
  }, {
    key: 'redefine',
    value: function redefine() {
      this.changeValue(this.getContent());
    }
  }, {
    key: 'changeValue',
    value: function changeValue(value) {
      if (_utils2.default.compare(this.el.content, value)) {
        return;
      }

      if (Array.isArray(value)) {
        this.el.value = value[value.length - 1];

        for (var i = 0, l = this.el.options.length; i < l; i++) {
          var option = this.el.options[i];

          option.selected = value.indexOf(option.value) != -1;
        }
      } else {
        this.el.value = value;

        for (var _i = 0, _l = this.el.options.length; _i < _l; _i++) {
          var _option = this.el.options[_i];

          _option.selected = _option.value == value;
        }
      }

      this.el.content = value;
      this.attrs.onChange.dispatch(Event, { bubbles: true });
    }
  }]);
  return Select;
}(_for2.default);

Select.booleanAttributes = ['multiple'].concat(_for2.default.booleanAttributes);
Select.events = ['change'].concat(_for2.default.events);
exports.default = Select;

var Option = exports.Option = function (_Loop) {
  (0, _inherits3.default)(Option, _Loop);

  function Option() {
    (0, _classCallCheck3.default)(this, Option);
    return (0, _possibleConstructorReturn3.default)(this, (Option.__proto__ || (0, _getPrototypeOf2.default)(Option)).apply(this, arguments));
  }

  (0, _createClass3.default)(Option, [{
    key: '__getParsedExpression',
    value: function __getParsedExpression(expression) {
      return _utils2.default.decodeHtmlEntities(expression);
    }
  }, {
    key: 'changedSelected',
    value: function changedSelected(value) {
      this.setSelected(value);
    }
  }, {
    key: 'setSelected',
    value: function setSelected(value) {
      this.el.selected = value;
      this.for.redefine();
    }
  }]);
  return Option;
}(_for.Loop);

Option.booleanAttributes = ['selected'];


Select.Option = Option;

/***/ }),

/***/ "./node_modules/akili/src/components/source.js":
/*!*****************************************************!*\
  !*** ./node_modules/akili/src/components/source.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _url = __webpack_require__(/*! ./url.js */ "./node_modules/akili/src/components/url.js");

var _url2 = _interopRequireDefault(_url);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for source elements.
 * 
 * {@link https://akilijs.com/docs/components#docs_image,_iframe,_embed,_audio,_video,_track,_source,_object}
 * 
 * @tag source
 * @attr {string} [url]
 */
var Source = function (_Url) {
  (0, _inherits3.default)(Source, _Url);

  function Source() {
    (0, _classCallCheck3.default)(this, Source);
    return (0, _possibleConstructorReturn3.default)(this, (Source.__proto__ || (0, _getPrototypeOf2.default)(Source)).apply(this, arguments));
  }

  (0, _createClass3.default)(Source, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('source', this);
    }
  }]);
  return Source;
}(_url2.default);

exports.default = Source;

/***/ }),

/***/ "./node_modules/akili/src/components/text.js":
/*!***************************************************!*\
  !*** ./node_modules/akili/src/components/text.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _component = __webpack_require__(/*! ../component.js */ "./node_modules/akili/src/component.js");

var _component2 = _interopRequireDefault(_component);

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/akili/src/utils.js");

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Base component to work with text elements.
 * 
 * {@link https://akilijs.com/docs/components#docs_input}
 * {@link https://akilijs.com/docs/components#docs_textarea}
 * {@link https://akilijs.com/docs/components#docs_contenteditable}
 * 
 * @attr {string} value - actual value
 * @attr {boolean} focus - set the focus or not
 * @attr {number} debounce - debounce delay
 * @message {void} debounce - sent on the debounce {@link https://akilijs.com/docs/components#docs_input}
 */
var Text = function (_Component) {
  (0, _inherits3.default)(Text, _Component);

  function Text() {
    var _ref;

    (0, _classCallCheck3.default)(this, Text);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Text.__proto__ || (0, _getPrototypeOf2.default)(Text)).call.apply(_ref, [this].concat(args)));

    _this.valueKey = 'value';
    _this.debounceInterval = 500;
    return _this;
  }

  (0, _createClass3.default)(Text, [{
    key: 'compiled',
    value: function compiled() {
      var _this2 = this;

      if (this.el.hasAttribute('on-debounce')) {
        this.el.addEventListener('input', _utils2.default.debounce(function () {
          return _this2.attrs.onDebounce.trigger(undefined, { bubbles: true });
        }, this.debounceInterval));
      }

      this.attr('focus', this.setFocus);
      this.attr('value', this.setValue);
      this.attr('debounce', this.setDebounce);
    }
  }, {
    key: 'setDebounce',
    value: function setDebounce(interval) {
      this.debounceInterval = +interval;
    }
  }, {
    key: 'setFocus',
    value: function setFocus(value) {
      value ? this.setElementFocus() : this.setElementBlur();
    }
  }, {
    key: 'setValue',
    value: function setValue(value) {
      this.el[this.valueKey] !== value && (this.el[this.valueKey] = value === 0 ? '0' : value || '');
    }
  }, {
    key: 'setElementFocus',
    value: function setElementFocus() {
      this.el.focus();
    }
  }, {
    key: 'setElementBlur',
    value: function setElementBlur() {
      this.el.blur();
    }
  }]);
  return Text;
}(_component2.default);

exports.default = Text;

/***/ }),

/***/ "./node_modules/akili/src/components/textarea.js":
/*!*******************************************************!*\
  !*** ./node_modules/akili/src/components/textarea.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _text = __webpack_require__(/*! ./text.js */ "./node_modules/akili/src/components/text.js");

var _text2 = _interopRequireDefault(_text);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component to work with textarea.
 * 
 * {@link https://akilijs.com/docs/components#docs_textarea}
 * 
 * @tag textarea
 * @attr @see Text
 * @message @see Text
 */
var Textarea = function (_Text) {
  (0, _inherits3.default)(Textarea, _Text);

  function Textarea() {
    (0, _classCallCheck3.default)(this, Textarea);
    return (0, _possibleConstructorReturn3.default)(this, (Textarea.__proto__ || (0, _getPrototypeOf2.default)(Textarea)).apply(this, arguments));
  }

  (0, _createClass3.default)(Textarea, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('textarea', this);
    }
  }]);
  return Textarea;
}(_text2.default);

exports.default = Textarea;

/***/ }),

/***/ "./node_modules/akili/src/components/track.js":
/*!****************************************************!*\
  !*** ./node_modules/akili/src/components/track.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _url = __webpack_require__(/*! ./url.js */ "./node_modules/akili/src/components/url.js");

var _url2 = _interopRequireDefault(_url);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for track elements.
 * 
 * {@link https://akilijs.com/docs/components#docs_image,_iframe,_embed,_audio,_video,_track,_source,_object}
 * 
 * @tag track
 * @attr {string} [url]
 */
var Track = function (_Url) {
  (0, _inherits3.default)(Track, _Url);

  function Track() {
    (0, _classCallCheck3.default)(this, Track);
    return (0, _possibleConstructorReturn3.default)(this, (Track.__proto__ || (0, _getPrototypeOf2.default)(Track)).apply(this, arguments));
  }

  (0, _createClass3.default)(Track, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('track', this);
    }
  }]);
  return Track;
}(_url2.default);

exports.default = Track;

/***/ }),

/***/ "./node_modules/akili/src/components/url.js":
/*!**************************************************!*\
  !*** ./node_modules/akili/src/components/url.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _component = __webpack_require__(/*! ../component.js */ "./node_modules/akili/src/component.js");

var _component2 = _interopRequireDefault(_component);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for elements which have async attribute content.
 * 
 * {@link https://akilijs.com/docs/components#docs_image,_iframe,_embed,_audio,_video,_track,_source,_object}
 * 
 * @tag url
 * @attr {string} [url]
 */
var Url = function (_Component) {
  (0, _inherits3.default)(Url, _Component);

  function Url() {
    var _ref;

    (0, _classCallCheck3.default)(this, Url);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Url.__proto__ || (0, _getPrototypeOf2.default)(Url)).call.apply(_ref, [this].concat(args)));

    _this.urlAttribute = 'src';
    return _this;
  }

  (0, _createClass3.default)(Url, [{
    key: 'compiled',
    value: function compiled() {
      this.attr('url', this.setUrl);
    }
  }, {
    key: 'setUrl',
    value: function setUrl(url) {
      this.attrs[this.urlAttribute] = url;
    }
  }]);
  return Url;
}(_component2.default);

Url.matches = '[url]';
exports.default = Url;

/***/ }),

/***/ "./node_modules/akili/src/components/video.js":
/*!****************************************************!*\
  !*** ./node_modules/akili/src/components/video.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _url = __webpack_require__(/*! ./url.js */ "./node_modules/akili/src/components/url.js");

var _url2 = _interopRequireDefault(_url);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for video elements.
 * 
 * {@link https://akilijs.com/docs/components#docs_image,_iframe,_embed,_audio,_video,_track,_source,_object}
 * 
 * @tag video
 * @attr {string} [url]
 */
var Video = function (_Url) {
  (0, _inherits3.default)(Video, _Url);

  function Video() {
    (0, _classCallCheck3.default)(this, Video);
    return (0, _possibleConstructorReturn3.default)(this, (Video.__proto__ || (0, _getPrototypeOf2.default)(Video)).apply(this, arguments));
  }

  (0, _createClass3.default)(Video, null, [{
    key: 'define',
    value: function define() {
      _akili2.default.component('video', this);
    }
  }]);
  return Video;
}(_url2.default);

exports.default = Video;

/***/ }),

/***/ "./node_modules/akili/src/event-emitter.js":
/*!*************************************************!*\
  !*** ./node_modules/akili/src/event-emitter.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(/*! babel-runtime/helpers/extends */ "./node_modules/babel-runtime/helpers/extends.js");

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Class to work with events.
 * 
 * {@link https://akilijs.com/docs/events}
 */
var EventEmitter = function () {
  function EventEmitter(name, node, el, component) {
    (0, _classCallCheck3.default)(this, EventEmitter);

    this.name = name;
    this.node = node;
    this.el = el;
    this.component = component;
  }

  /**
   * Trigger the event
   *
   * @param {*} data
   * @param {object} [options]
   * @param {boolean} [force]
   * @returns {Promise}
   */


  (0, _createClass3.default)(EventEmitter, [{
    key: "trigger",
    value: function trigger(data) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      if (this.__removed) {
        return;
      }

      if (force || !this.inEvaluating()) {
        this.el.dispatchEvent(new CustomEvent(this.name, this.prepareOptions((0, _extends3.default)({ detail: data }, options))));
      }
    }

    /**
     * Dispatch the event
     *
     * @param {Event} _Event - class of the event
     * @param {object} [options]
     * @param {boolean} [force]
     * @returns {Promise}
     */

  }, {
    key: "dispatch",
    value: function dispatch(_Event) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      if (this.__removed) {
        return;
      }

      if (force || !this.inEvaluating()) {
        this.el.dispatchEvent(new _Event(this.name, this.prepareOptions(options)));
      }
    }

    /**
     * Prepere the event options
     * 
     * @param {object} [options] 
     */

  }, {
    key: "prepareOptions",
    value: function prepareOptions() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      options = (0, _extends3.default)({ bubbles: true }, options);
      this.node.__component.__prepareAttributeOut(this.node, options.detail);
      return options;
    }

    /**
     * Check the event callback doesn't run recursively
     *
     * @returns {boolean}
     */

  }, {
    key: "inEvaluating",
    value: function inEvaluating() {
      var data = this.component.__evaluatingEvent;

      if (!data) {
        return false;
      }

      return data.el === this.el && data.event.type === this.name && data.component === this.component;
    }

    /**
     * Bind the function
     *
     * @param {function} fn
     */

  }, {
    key: "bind",
    value: function bind(fn) {
      this.el.addEventListener(this.name, this.fn = fn);
    }

    /**
     * Unbind the function
     */

  }, {
    key: "unbind",
    value: function unbind() {
      this.fn && this.el.removeEventListener(this.name, this.fn);
    }

    /**
     * Remove the emitter
     */

  }, {
    key: "remove",
    value: function remove() {
      this.unbind();
      delete this.name;
      delete this.node;
      delete this.component;
      delete this.el;
      this.__removed = true;
    }
  }]);
  return EventEmitter;
}();

exports.default = EventEmitter;

/***/ }),

/***/ "./node_modules/akili/src/globals.js":
/*!*******************************************!*\
  !*** ./node_modules/akili/src/globals.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _akili = __webpack_require__(/*! ./akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var obj = {};

/**
 * Globals is for using the custom variables in html
 * 
 * {@link https://akilijs.com/docs/scope#docs_globals}
 */
var globals = new Proxy(obj, {
  get: function get(target, key) {
    if (key == '__target') {
      return obj;
    }

    return target[key];
  },
  set: function set(target, key, value) {
    target[key] = _akili2.default.wrap(value, { tag: key });
    return true;
  },
  deleteProperty: function deleteProperty(target, key) {
    _akili2.default.removeTag(key);
    delete target[key];
    return true;
  }
});

exports.default = globals;

/***/ }),

/***/ "./node_modules/akili/src/scope.js":
/*!*****************************************!*\
  !*** ./node_modules/akili/src/scope.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _akili = __webpack_require__(/*! ./akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

var _utils = __webpack_require__(/*! ./utils.js */ "./node_modules/akili/src/utils.js");

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Scope class
 * 
 * {@link https://akilijs.com/docs/scope}
 *
 * All properties starting with __ are not monitored.
 * You can use them for internal manipulations.
 */
var Scope = function () {
  function Scope(name, el, component) {
    (0, _classCallCheck3.default)(this, Scope);

    this.__name = name;
    this.__el = el;
    this.__component = component;
    el.setAttribute('scope', name);
  }

  /**
   * Set the scope value
   * 
   * @param {string|string[]} keys
   * @param {*} value
   * @param {object} [options] 
   * @param {boolean} [options.saveProxy] 
   * @param {boolean} [options.silent]
   * @param {boolean} [options.target]
   * @protected
   */


  (0, _createClass3.default)(Scope, [{
    key: '__set',
    value: function __set(keys, value) {
      var _this = this;

      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      if (!Array.isArray(keys)) {
        keys = [keys];
      }

      _akili2.default.unisolate(function () {
        options.saveProxy && (_this.__component.__disableProxyRedefining = true);
        options.silent && _this.__component.__disableKeys();
        _utils2.default.setPropertyByKeys(keys, options.target ? _this.__target : _this, function (last, val) {
          if (!last) {
            return val || {};
          }

          return value;
        });
        options.silent && _this.__component.__enableKeys();
        options.saveProxy && (_this.__component.__disableProxyRedefining = false);
      });
    }

    /**
     * Remove the scope
     * 
     * @protected
     */

  }, {
    key: '__remove',
    value: function __remove() {
      _akili2.default.removeScope(this.__name);

      for (var key in this) {
        if (!this.hasOwnProperty(key)) {
          continue;
        }

        delete this[key];
      }
    }
  }]);
  return Scope;
}();

exports.default = Scope;

/***/ }),

/***/ "./node_modules/akili/src/services/request.js":
/*!****************************************************!*\
  !*** ./node_modules/akili/src/services/request.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Request = undefined;

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

var _keys = __webpack_require__(/*! babel-runtime/core-js/object/keys */ "./node_modules/babel-runtime/core-js/object/keys.js");

var _keys2 = _interopRequireDefault(_keys);

var _stringify = __webpack_require__(/*! babel-runtime/core-js/json/stringify */ "./node_modules/babel-runtime/core-js/json/stringify.js");

var _stringify2 = _interopRequireDefault(_stringify);

var _promise = __webpack_require__(/*! babel-runtime/core-js/promise */ "./node_modules/babel-runtime/core-js/promise.js");

var _promise2 = _interopRequireDefault(_promise);

var _extends2 = __webpack_require__(/*! babel-runtime/helpers/extends */ "./node_modules/babel-runtime/helpers/extends.js");

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/akili/src/utils.js");

var _utils2 = _interopRequireDefault(_utils);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Request class.
 * The instance of this class allows you to make requests.
 * 
 * {@link https://akilijs.com/docs/requests}
 */
var Request = exports.Request = function () {

  /**
   * @param {string} baseUrl
   * @param {object} [defaults] 
   */
  function Request(baseUrl, defaults) {
    (0, _classCallCheck3.default)(this, Request);
    this.__cache = {};

    this.getHeaders = function (xhr) {
      var headers = {};
      var str = xhr.getAllResponseHeaders();
      var arr = str.split('\r\n');

      for (var i = 0, l = arr.length; i < l; i++) {
        var line = arr[i];
        var index = line.indexOf(': ');

        if (index > 0) {
          var key = line.substring(0, index);
          var val = line.substring(index + 2);
          headers[key] = val;
        }
      }

      return headers;
    };

    this.baseUrl = baseUrl ? baseUrl.replace(/\/$/, '') + '/' : '';

    this.defaults = (0, _extends3.default)({
      statusErrorPattern: /^[^23]/,
      cache: false
    }, defaults || {});
  }

  /**
   * Send the request
   *
   * @param {object} options
   * @returns {Promise}
   */


  (0, _createClass3.default)(Request, [{
    key: 'query',
    value: function query(options) {
      var _this = this;

      return new _promise2.default(function (resolve, reject) {
        options = (0, _extends3.default)({}, _this.defaults, options || {});
        options.url = _this.baseUrl ? '' + _this.baseUrl + options.url.replace(/^\//, '') : options.url;
        options.method = options.method || 'GET';

        var xhr = new XMLHttpRequest();
        var before = _this.transformBefore(xhr, options);
        xhr = before.xhr;
        options = before.options;
        typeof options.onStart == 'function' && options.onStart(xhr);
        options.headers = options.headers || {};

        if (options.json) {
          options.json !== true && (options.body = (0, _stringify2.default)(options.json));
          options.headers['content-type'] = 'application/json';
          options.responseType = options.responseType || 'json';
        } else if (options.form) {
          options.body = _this.createFormData(options.form);
          options.headers['content-type'] = 'multipart/form-data';
        }

        if (options.params) {
          var str = _this.paramsToQuery(options.params);
          str && (options.url += "?" + str);
        }

        var hash = null;
        var cache = typeof options.cache == 'function' ? options.cache(options) : options.cache;
        !window.AKILI_SSR && !_akili2.default.__init && (cache = true);

        if (options.method.toUpperCase() == 'GET' && (!options.body || typeof options.body == 'string')) {
          hash = _this.createCacheHash({
            url: options.url,
            method: options.method,
            user: options.user,
            password: options.password,
            body: options.body
          });
        }

        if (cache && hash) {
          var _cache = _this.getCache(hash);
          var now = new Date().getTime();

          if (_cache && (cache === true || now - _cache.createdAt <= cache)) {
            return resolve(_this.transformAfter(_cache.result));
          }
        }

        xhr.open(options.method, options.url, true, options.user, options.password);

        if (options.hasOwnProperty('timeout')) {
          xhr.timeout = options.timeout;
        }

        if (options.responseType) {
          xhr.responseType = options.responseType;
        }

        if (options.withCredentials) {
          xhr.withCredentials = options.withCredentials;
        }

        var headerKeys = (0, _keys2.default)(options.headers);

        for (var i = 0, l = headerKeys.length; i < l; i++) {
          var k = headerKeys[i];
          xhr.setRequestHeader(k, options.headers[k]);
        }

        if (typeof options.onProgress == 'function') {
          xhr.onprogress = function () {
            return options.onProgress(xhr);
          };
        }

        xhr.onload = function () {
          var result = {
            response: xhr.response,
            status: xhr.status,
            readyState: xhr.readyState,
            statusText: xhr.statusText,
            withCredentials: xhr.withCredentials,
            responseType: xhr.responseType,
            responseText: xhr.responseType == 'text' ? xhr.responseText : '',
            responseXML: xhr.responseType == 'document' ? xhr.responseXML : '',
            responseURL: xhr.responseURL,
            timeout: xhr.timeout,
            headers: _this.getHeaders(xhr)
          };

          var response = _this.transformAfter(result);

          if (options.statusErrorPattern && (xhr.status + '').match(options.statusErrorPattern)) {
            var err = new Error('Request to "' + options.url + '" returns failure status code ' + xhr.status);
            err.response = response;
            return reject(err);
          }

          (cache || window.AKILI_SSR) && hash && _this.createCache(hash, result);
          resolve(response);
        };

        xhr.ontimeout = function () {
          reject(new Error('Request to "' + options.url + '" timed out'));
        };

        xhr.onerror = reject;
        xhr.send(options.body);
      });
    }

    /**
     * Get the headers of an XMLHttpRequest instance
     * 
     * @param {XMLHttpRequest}
     */

  }, {
    key: 'getCache',


    /**
     * Get the cache
     * 
     * @param {string} hash
     * @returns {object}
     */
    value: function getCache(hash) {
      return this.__cache[hash] || null;
    }

    /**
     * Create the cache
     * 
     * @param {string} hash
     * @param {object} result
     */

  }, {
    key: 'createCache',
    value: function createCache(hash, result) {
      this.__cache[hash] = { result: result, createdAt: new Date().getTime() };
    }

    /**
     * Remove the cache
     * 
     * @param {string} hash
     */

  }, {
    key: 'removeCache',
    value: function removeCache(hash) {
      delete this.__cache[hash];
    }

    /**
     * Create a hash for saving in the cache
     * 
     * @param {object} data
     * @returns {string}
     */

  }, {
    key: 'createCacheHash',
    value: function createCacheHash(data) {
      return _utils2.default.createHash(data);
    }

    /**
     * Convert the object to a query string
     *
     * @param {object} obj
     * @returns {string}
     */

  }, {
    key: 'paramsToQuery',
    value: function paramsToQuery(obj) {
      var sep = '&';
      var eq = '=';

      if (!obj || (typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) !== 'object') {
        return '';
      }

      return (0, _keys2.default)(obj).map(function (k) {
        var ks = encodeURIComponent(k);

        if (Array.isArray(obj[k])) {
          ks = encodeURIComponent(k);
          return obj[k].map(function (v, i) {
            return ks + ('[' + i + ']') + eq + encodeURIComponent(v);
          }).join(sep);
        } else if (obj[k] && (0, _typeof3.default)(obj[k]) === 'object') {
          var opt = [];
          (0, _keys2.default)(obj[k]).map(function (key) {
            return opt.push(ks + ('[' + key + ']') + eq + encodeURIComponent(obj[k][key]));
          });
          return opt.join(sep);
        } else {
          return ks + eq + encodeURIComponent(obj[k]);
        }
      }).join(sep);
    }

    /**
     * Convert the query string to an object
     *
     * @param {string} str
     * @returns {object}
     */

  }, {
    key: 'paramsFromQuery',
    value: function paramsFromQuery(str) {
      var query = {};
      var amps = str.split('&');

      for (var i = 0, l = amps.length; i < l; i++) {
        var eqs = amps[i].split('=');
        var key = decodeURIComponent(eqs[0]);
        var val = decodeURIComponent(eqs[1]);

        if (!key) {
          continue;
        }

        if (Array.isArray(query[key])) {
          query[key].push(val);
        } else if (query[key]) {
          query[key] = [query[key], val];
        } else {
          query[key] = val;
        }
      }

      return query;
    }

    /**
     * Create multipart form data from the object
     *
     * @param {object} obj
     * @param {FormData} [data]
     * @param {string} [namespace]
     * @returns {FormData}
     */

  }, {
    key: 'createFormData',
    value: function createFormData(obj) {
      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      var namespace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

      var fd = data || new FormData();

      for (var k in obj) {
        if (obj.hasOwnProperty(k) && obj[k]) {
          var key = namespace ? namespace + '[' + k + ']' : k;

          if (obj[k] instanceof Date) {
            fd.append(key, obj[k].toISOString());
          } else if (_utils2.default.isPlainObject(obj[k])) {
            this.createFormData(obj[k], fd, key);
          } else {
            fd.append(key, obj[k]);
          }
        }
      }

      return fd;
    }

    /**
     * Transform the data before the request
     *
     * @param {XMLHttpRequest} xhr
     * @param {object} options
     * @returns {object}
     */

  }, {
    key: 'transformBefore',
    value: function transformBefore(xhr, options) {
      return { xhr: xhr, options: options };
    }

    /**
     * Transform the data after the request
     *
     * @param {object} result
     * @returns {object}
     */

  }, {
    key: 'transformAfter',
    value: function transformAfter(result) {
      return (0, _extends3.default)({}, result, {
        data: result.response
      });
    }

    /**
     *  Make a GET request
     *
     * @param {string} url
     * @param {object} options
     * @returns {Promise}
     */

  }, {
    key: 'get',
    value: function get(url) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options.url = url;
      options.method = 'GET';
      return this.query(options);
    }

    /**
     * Makea a DELETE request
     *
     * @param {string} url
     * @param {object} options
     * @returns {Promise}
     */

  }, {
    key: 'delete',
    value: function _delete(url) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options.url = url;
      options.method = 'DELETE';
      return this.query(options);
    }

    /**
     * Make a POST request
     *
     * @param {string} url
     * @param {object} options
     * @returns {Promise}
     */

  }, {
    key: 'post',
    value: function post(url) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options.url = url;
      options.method = 'POST';
      return this.query(options);
    }

    /**
     * Make a PUT request
     *
     * @param {string} url
     * @param {object} options
     * @returns {Promise}
     */

  }, {
    key: 'put',
    value: function put(url) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options.url = url;
      options.method = 'PUT';
      return this.query(options);
    }

    /**
     *  Make a PATCH request
     *
     * @param {string} url
     * @param {object} options
     * @returns {Promise}
     */

  }, {
    key: 'patch',
    value: function patch(url) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options.url = url;
      options.method = 'PATCH';
      return this.query(options);
    }

    /**
     * Make a HEAD request
     *
     * @param {string} url
     * @param {object} options
     * @returns {Promise}
     */

  }, {
    key: 'head',
    value: function head(url) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options.url = url;
      options.method = 'HEAD';
      return this.query(options);
    }
  }]);
  return Request;
}();

var request = new Request();

request.__instances = {};
request.__cache = {};

/**
 * Add a new instance
 *
 * @param {string} name
 * @param {Request} instance
 */
request.addInstance = function (name, instance) {
  this.__instances[name] = instance;
};

/**
 * Remove the instance
 *
 * @param {string} name
 */
request.removeInstance = function (name) {
  delete this.__instances[name];
};

Object.defineProperty(request, 'use', {
  get: function get() {
    return request.__instances;
  }
});

request.Request = Request;
exports.default = request;

/***/ }),

/***/ "./node_modules/akili/src/services/router.js":
/*!***************************************************!*\
  !*** ./node_modules/akili/src/services/router.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transition = undefined;

var _promise = __webpack_require__(/*! babel-runtime/core-js/promise */ "./node_modules/babel-runtime/core-js/promise.js");

var _promise2 = _interopRequireDefault(_promise);

var _assign = __webpack_require__(/*! babel-runtime/core-js/object/assign */ "./node_modules/babel-runtime/core-js/object/assign.js");

var _assign2 = _interopRequireDefault(_assign);

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

var _keys = __webpack_require__(/*! babel-runtime/core-js/object/keys */ "./node_modules/babel-runtime/core-js/object/keys.js");

var _keys2 = _interopRequireDefault(_keys);

var _extends2 = __webpack_require__(/*! babel-runtime/helpers/extends */ "./node_modules/babel-runtime/helpers/extends.js");

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/akili/src/utils.js");

var _utils2 = _interopRequireDefault(_utils);

var _request = __webpack_require__(/*! ./request.js */ "./node_modules/akili/src/services/request.js");

var _request2 = _interopRequireDefault(_request);

var _route = __webpack_require__(/*! ../components/route.js */ "./node_modules/akili/src/components/route.js");

var _route2 = _interopRequireDefault(_route);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Transition class.
 * The instance of this class includes the last actual router transition information.
 * 
 * {@link https://akilijs.com/docs/routing#docs_transition}
 */
var Transition = exports.Transition = function () {
  function Transition(url) {
    var previous = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    (0, _classCallCheck3.default)(this, Transition);

    this.url = url;
    this.previous = previous;
    this.path = null;
    this.routes = [];
    this.states = {};
    this.__cancelled = false;
    this.__finished = false;
  }

  /**
   * Redirect to another state
   * 
   * @see router.state
   */


  (0, _createClass3.default)(Transition, [{
    key: 'redirect',
    value: function redirect(state) {
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var hash = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;
      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

      options = (0, _extends3.default)({}, this.path.options, options);
      this.cancel();
      return router.state.call(router, state, params, query, hash, options);
    }

    /**
     * Reload the current state
     * 
     * @see router.state
     */

  }, {
    key: 'reload',
    value: function reload() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var hash = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      options = (0, _extends3.default)({}, this.path.options, options);
      params = (0, _extends3.default)({}, this.path.params, params);
      query = (0, _extends3.default)({}, this.path.query, query);
      hash = hash === undefined ? this.path.hash : hash;
      return router.state.call(router, this.path.state.name, params, query, hash, options);
    }

    /**
     * Set the current path
     * 
     * @param {object} path 
     */

  }, {
    key: 'setPath',
    value: function setPath(path) {
      path.parent = this.path || null;
      this.path = (0, _extends3.default)({ params: {}, query: {} }, path);
      this.routes.push(this.path);
      this.states[this.path.state.name] = this.path;
    }

    /**
     * Get a route by the state
     *  
     * @param {*} state 
     */

  }, {
    key: 'getRoute',
    value: function getRoute(state) {
      for (var i = 0, l = this.routes.length; i < l; i++) {
        var route = this.routes[i];

        if (route.state === state) {
          return route;
        }
      }

      return null;
    }

    /**
     * Check if it has the state
     * 
     * @param {object} state 
     */

  }, {
    key: 'hasState',
    value: function hasState(state) {
      return !!this.states[state.name];
    }

    /**
     * Check the route is changed
     * 
     * @param {object} route
     */

  }, {
    key: 'isRouteChanged',
    value: function isRouteChanged(route) {
      if (!this.previous) {
        return true;
      }

      var state = route.state;

      if (!this.previous.hasState(state)) {
        return true;
      }

      var paramKeys = [];
      state.fullPattern.replace(router.__paramRegex, function (m, f, v) {
        return paramKeys.push(v);
      });

      for (var key in state.params) {
        if (paramKeys.indexOf(key) == -1) {
          paramKeys.push(key);
        }
      }

      var queryKeys = (0, _keys2.default)(state.query);
      var watchHash = state.hash !== undefined;
      var prevRoute = this.previous.getRoute(state);

      var prev = {
        params: _utils2.default.includeKeys(prevRoute.params, paramKeys),
        query: _utils2.default.includeKeys(prevRoute.query, queryKeys)
      };

      var current = {
        params: _utils2.default.includeKeys(route.params, paramKeys),
        query: _utils2.default.includeKeys(route.query, queryKeys)
      };

      if (watchHash) {
        prev.hash = prevRoute.hash;
        current.hash = route.hash;
      }

      return !_utils2.default.compare(prev, current);
    }

    /**
     * Cancel the current transition
     */

  }, {
    key: 'cancel',
    value: function cancel() {
      this.__cancelled = true;
      this.finish();
    }

    /**
     * Finish the transition
     */

  }, {
    key: 'finish',
    value: function finish() {
      this.__finished = true;
      delete this.previous;
      var index = router.__queue.indexOf(this);
      index >= 0 && router.__queue.splice(index, 1);
    }
  }]);
  return Transition;
}();

/**
 * Akili router
 * 
 * {@link https://akilijs.com/docs/routing}
 */


var router = {};

router.baseUrl = "/";
router.states = [];
router.hashMode = true;
router.transition = null;
router.__queue = [];
router.__redirects = 0;
router.__init = false;
router.__paramRegex = /(\/?:([\w\d-]+))/g;
router.__routeSelector = function (c) {
  return c instanceof _route2.default;
};

/**
 * Add a new state
 *
 * @param {string} name - state name. To set parents you can use dot, e.g. 'app.article.edit'
 * @param {string} pattern - url pattern like 'app/article/:id'
 * @param {object} [options]
 * @returns {router}
 */
router.add = function (name, pattern) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if ((typeof name === 'undefined' ? 'undefined' : (0, _typeof3.default)(name)) == 'object') {
    options = name;
    pattern = options.pattern;
    name = options.state;
    delete options.pattern;
    delete options.state;
  }

  if (!name) {
    throw new Error('Router state must have a name');
  }

  var defaultOptions = {
    template: '',
    templateUrl: '',
    abstract: false,
    component: null,
    params: {},
    query: {},
    handler: function handler() {}
  };

  if (_akili2.default.options.debug && options.component && (options.template || options.templateUrl)) {
    // eslint-disable-next-line no-console
    console.warn('Router state "' + name + '" must only have a component or template option');
  }

  if (!options.template && !options.templateUrl && !options.component) {
    options.abstract = true;
  }

  if (this.has(name)) {
    throw new Error('Router state "' + name + '" is already exists');
  }

  this.setState(name, pattern, (0, _extends3.default)({}, defaultOptions, options));
  return this;
};

/**
 * Remove the state
 *
 * @param {string} name
 */
router.remove = function (name) {
  for (var i = 0, l = this.states.length; i < l; i++) {
    if (this.states[i].name == name) {
      this.states.splice(i, 1);

      return;
    }
  }
};

/**
 * Check the state exists
 *
 * @param {string} name
 * @returns {boolean}
 */
router.has = function (name) {
  for (var i = 0, l = this.states.length; i < l; i++) {
    if (this.states[i].name == name) {
      return true;
    }
  }

  return false;
};

/**
 * Change the state
 *
 * @param {string} state
 * @param {object} [params] - params for state {id: 1} => '/app/:id' => '/app/1'
 * @param {object} [query] - query {x: 1} => '/app/?x=1'
 * @param {string} [hash]
 * @param {object} [options]
 */
router.state = function (state) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var _this = this;

  var hash = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;
  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

  (typeof state === 'undefined' ? 'undefined' : (0, _typeof3.default)(state)) !== 'object' && (state = this.getState(state));

  if (!state) {
    throw new Error('Not found route state with name ' + state);
  }

  options = (0, _extends3.default)({}, options);
  options.manual = true;

  var _prepareStateArgs = this.prepareStateArgs(state, params, query, hash, options, false);

  params = _prepareStateArgs.params;
  query = _prepareStateArgs.query;
  hash = _prepareStateArgs.hash;
  options = _prepareStateArgs.options;

  var url = this.createStateUrl(state, params, query, hash, options);
  this.isolate(function () {
    return _this.setUrl(url);
  });
  return this.changeState(options);
};

/**
 * Go back
 */
router.back = function () {
  return window.history.back.apply(window.history, arguments);
};

/**
 * Go to some position
 */
router.go = function () {
  return window.history.go.apply(window.history, arguments);
};

/**
 * Go forward
 */
router.forward = function () {
  return window.history.forward.apply(window.history, arguments);
};

/**
 * Change the state by the url
 *
 * @param {string} url
 * @param {object} [options]
 */
router.location = function (url) {
  var _this2 = this;

  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  options = (0, _extends3.default)({}, options);
  options.manual = true;
  this.isolate(function () {
    return _this2.setUrl(url);
  });
  return this.changeState(options);
};

/**
 * Initialize the router. 
 * Must be called before Akili.init()
 *
 * @param {string} [defaultUrl]
 * @param {boolean} [hashMode=true]
 */
router.init = function () {
  var _this3 = this;

  var defaultUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var hashMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var oldPushState = window.history.pushState;

  window.history.pushState = function () {
    var res = oldPushState.apply(this, arguments);
    // eslint-disable-next-line no-console
    router.changeState().catch(function (err) {
      return console.error(err);
    });
    return res;
  };

  this.__onStateChangeHandler = function () {
    // eslint-disable-next-line no-console
    _this3.changeState().catch(function (err) {
      return console.error(err);
    });
  };

  this.defaultUrl = defaultUrl;
  this.hashMode = hashMode;

  this.states.sort(function (a, b) {
    a = a.name.split('.').length;
    b = b.name.split('.').length;
    return a - b;
  });

  for (var i = 0, l = this.states.length; i < l; i++) {
    this.initState(this.states[i]);
  }

  if (!this.states.length && _akili2.default.options.debug) {
    // eslint-disable-next-line no-console
    console.warn('You didn\'t add any routes to the router');
  }

  window.addEventListener('popstate', this.__onStateChangeHandler);
  this.__init = true;
};

/**
 * Initialize the state 
 * 
 * @param {object} state 
 */
router.initState = function (state) {
  var parents = [];
  state.children = [];
  parents = state.name.split('.');
  parents.pop();
  state.level = state.abstract ? null : parents.length;

  if (parents.length) {
    var parentName = parents.join('.');
    var parent = this.getState(parentName);

    if (!parent) {
      throw new Error('Not found parent route state "' + parentName + '" for "' + state.name + '"');
    }

    if (state.level !== null && parent.abstract) {
      state.level--;
    }

    state.fullPattern = this.splitSlashes(parent.fullPattern + '/' + state.pattern);
    parent.children.push(state);
  } else {
    state.fullPattern = state.pattern;
  }
};

/**
 * Get the state by the name
 *
 * @param {string} name
 * @returns {object|null}
 */
router.getState = function (name) {
  for (var i = 0, l = this.states.length; i < l; i++) {
    var state = this.states[i];

    if (state.name == name) {
      return state;
    }
  }

  return null;
};

/**
 * Set the state
 *
 * @param {string} name
 * @param {string} pattern
 * @param {object} options
 */
router.setState = function (name, pattern) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var state = (0, _extends3.default)({}, options, { name: name, pattern: pattern });
  this.states.push(state);
  this.__init && this.initState(state);
  return state;
};

/**
 * Remove the state by the name
 *
 * @param {string} name
 */
router.removeState = function (name) {
  for (var i = 0, l = this.states.length; i < l; i++) {
    var state = this.states[i];

    if (state.name == name) {
      this.states.splice(i, 1);

      return;
    }
  }
};

/**
 * Set the url
 *
 * @param {string} url
 */
router.setUrl = function (url) {
  this.hashMode ? this.setHashUrl(url) : this.setHistoryUrl(url);
};

/**
 * Set the url using the history
 *
 * @param url
 */
router.setHistoryUrl = function (url) {
  window.history.pushState(undefined, undefined, url);
};

/**
 * Set the url using the hash
 *
 * @param url
 */
router.setHashUrl = function (url) {
  window.location.hash = '#' + (url || '/');
};

/**
 * Replace the url
 *
 * @param {string} url
 */
router.replaceUrl = function (url) {
  this.hashMode ? this.replaceHashUrl(url) : this.replaceHistoryUrl(url);
};

/**
 * Replace the url using the history
 *
 * @param url
 */
router.replaceHistoryUrl = function (url) {
  window.history.replaceState(undefined, undefined, url);
};

/**
 * Replace the url using the hash
 *
 * @param url
 */
router.replaceHashUrl = function (url) {
  window.history.replaceState(undefined, undefined, '#' + (url || '/'));
};

/**
 * Get the url
 *
 * @returns {string}
 */
router.getUrl = function () {
  return this.hashMode ? this.getHashUrl() : this.getHistoryUrl();
};

/**
 * Get the url using the history
 *
 * @returns {string}
 */
router.getHistoryUrl = function () {
  return window.location.pathname + window.location.search + window.location.hash;
};

/**
 * Get the url using the hash
 *
 * @returns {string}
 */
router.getHashUrl = function () {
  return window.location.hash.replace(/^#/, '');
};

/**
 * Get the query params
 *
 * @returns {object}
 */
router.getUrlQuery = function () {
  return this.hashMode ? this.getHashUrlQuery() : this.getHistoryUrlQuery();
};

/**
 * Get the query params using the history
 *
 * @returns {object}
 */
router.getHistoryUrlQuery = function () {
  return _request2.default.paramsFromQuery(window.location.search.replace(/^\?/, ''));
};

/**
 * Get the query params using the hash
 *
 * @returns {object}
 */
router.getHashUrlQuery = function () {
  return _request2.default.paramsFromQuery(window.location.hash.split('?')[1] || '');
};

/**
 * Create the url
 *
 * @param {string|Object} state
 * @param {object} [params]
 * @param {object} [query]
 * @param {string} [hash]
 * @param {object} [options]
 * @param {boolean} [prepare]
 */
router.createStateUrl = function (state) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var hash = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;
  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
  var prepare = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;

  (typeof state === 'undefined' ? 'undefined' : (0, _typeof3.default)(state)) !== 'object' && (state = this.getState(state));
  options = (0, _extends3.default)({}, options);

  if (prepare) {
    var _prepareStateArgs2 = this.prepareStateArgs(state, params, query, hash, options);

    params = _prepareStateArgs2.params;
    query = _prepareStateArgs2.query;
    hash = _prepareStateArgs2.hash;
    options = _prepareStateArgs2.options;
  }

  var url = state.fullPattern.replace(this.__paramRegex, function (m, f, v) {
    return '/' + (params[v] || '');
  });
  url = url.replace(/^\^/, '');
  url = this.splitSlashes(url);

  if ((0, _keys2.default)(query).length) {
    url += '?' + _request2.default.paramsToQuery(query);
  }

  if (!this.hashMode && hash) {
    url += '#' + hash.replace('#', '');
  }

  return url;
};

/**
 * Prepare the state arguments
 * 
 * @param {string|Object} state
 * @param {object} [params]
 * @param {object} [query]
 * @param {string} [hash]
 * @param {object} [options]
 */
router.prepareStateArgs = function (state) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var hash = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;
  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

  var args = { params: params, query: query, hash: hash, options: options };

  for (var i = 0; i < 27; i++) {
    var paramsTemp = this.prepareStateParams(state, params, args);
    var queryTemp = this.prepareStateQuery(state, query, args);
    var hashTemp = this.prepareStateHash(state, hash, args);

    if (hashTemp === null) {
      options.emptyHash = null;
    } else if (hashTemp === '') {
      options.emptyHash = '';
    }

    var newArgs = { params: paramsTemp, query: queryTemp, hash: hashTemp, options: options };

    if (_utils2.default.compare(newArgs, args)) {
      break;
    }

    args = newArgs;
  }

  return args;
};

/**
 * Prepare the state params
 * 
 * @param {string|Object} state
 * @param {object} params
 * @param {object} [args]
 */
router.prepareStateParams = function (state, params, args) {
  (typeof state === 'undefined' ? 'undefined' : (0, _typeof3.default)(state)) !== 'object' && (state = this.getState(state));
  var states = state.name.split('.');
  params = (0, _assign2.default)({}, params);

  for (var i = states.length - 1; i >= 0; i--) {
    var current = states.slice(0, states.length - i).join('.');
    params = this.createStateObjectArgs(params, this.getState(current).params, args);
  }

  return params;
};

/**
 * Prepare the state query
 * 
 * @param {string|Object} state
 * @param {object} query
 * @param {object} [args]
 */
router.prepareStateQuery = function (state, query, args) {
  (typeof state === 'undefined' ? 'undefined' : (0, _typeof3.default)(state)) !== 'object' && (state = this.getState(state));
  var states = state.name.split('.');
  query = (0, _assign2.default)({}, query);

  for (var i = states.length - 1; i >= 0; i--) {
    var current = states.slice(0, states.length - i).join('.');
    query = this.createStateObjectArgs(query, this.getState(current).query, args);
  }

  return query;
};

/**
 * Create the state arguments
 * 
 * @param {object} current
 * @param {object} defaults
 * @param {object} [args]
 */
router.createStateObjectArgs = function (current, defaults) {
  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { params: {}, query: {} };

  var all = (0, _assign2.default)({}, current);

  for (var key in defaults) {
    var val = defaults[key];

    if (all[key] === null) {
      continue;
    }

    if (typeof val == 'function') {
      all[key] = val(args);
    }

    if (all[key] === undefined) {
      all[key] = val;
    }
  }

  for (var _key in all) {
    if (all[_key] === null) {
      delete all[_key];
    }
  }

  return all;
};

/**
 * Prepare the state hash
 * 
 * @param {string|Object} state
 * @param {string} hash
 * @param {object} [args]
 */
router.prepareStateHash = function (state, hash, args) {
  if (hash === null) {
    return hash;
  }

  (typeof state === 'undefined' ? 'undefined' : (0, _typeof3.default)(state)) !== 'object' && (state = this.getState(state));
  var states = state.name.split('.');

  for (var i = states.length - 1; i >= 0; i--) {
    var current = states.slice(0, states.length - i).join('.');
    hash = this.createStateHashArgs(hash, this.getState(current).hash, args);
  }

  return hash;
};

/**
 * Create the state hash arguments
 * 
 * @param {string|null} current
 * @param {string|null} defaults
 * @param {object} [args]
 */
router.createStateHashArgs = function (current, defaults) {
  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { params: {}, query: {} };

  if (current === null) {
    return current;
  }

  if (typeof defaults == 'function') {
    return defaults(args);
  }

  if (current === undefined) {
    return defaults;
  }

  return current;
};

/**
 * Remove all unnecessary slashes from the url
 *
 * @param {string} url
 * @returns {string}
 */
router.splitSlashes = function (url) {
  return url.replace(/[/]+/g, '/');
};

/**
 * Get the pattern info
 *
 * @param {string|Object} state
 * @param {string} url
 * @returns {object}
 */
router.getPatternContent = function (state, url) {
  (typeof state === 'undefined' ? 'undefined' : (0, _typeof3.default)(state)) !== 'object' && (state = this.getState(state));
  var keys = [];
  var params = {};

  url = url.split('?')[0];
  url = url.split('#')[0];

  var urlPattern = state.fullPattern.replace(this.__paramRegex, function (m, f, v) {
    keys.push(v);
    return '/?([^/]*)';
  });

  urlPattern = urlPattern.replace(/([^^/]+)[/]+$/, '$1');
  var regex = new RegExp(urlPattern, 'g');
  var isIncluded = url.match(regex);

  if (!isIncluded) {
    return null;
  }

  url.replace(regex, function (m) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    args = args.slice(0, args.length - 2);

    for (var i = 0, l = args.length; i < l; i++) {
      var v = args[i];
      v && (params[keys[i]] = v);
    }
  });

  return { params: params };
};

/**
 * Check the state is active
 *
 * @param {string|Object} state
 * @param {boolean} includes
 * @returns {boolean}
 */
router.isActiveState = function (state) {
  var includes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  (typeof state === 'undefined' ? 'undefined' : (0, _typeof3.default)(state)) !== 'object' && (state = this.getState(state));
  var url = router.transition && !router.transition.__finished ? router.transition.url : this.getUrl();
  url = this.splitSlashes('/' + url.split('?')[0] + '/');
  var urlPattern = state.fullPattern.replace(this.__paramRegex, '/?([^/]*)');
  urlPattern = urlPattern.replace(/^\^/, '').replace(/\$$/, '');
  var str = includes ? urlPattern : this.splitSlashes('^/' + urlPattern + '/$');
  var regex = new RegExp(str);
  return regex.test(url);
};

/**
 * Check the current url includes the state
 *
 * @param {string|Object} state
 * @returns {boolean}
 */
router.inActiveState = function (state) {
  return router.isActiveState(state, true);
};

/**
 * Get the route component by the level
 *
 * @param {number} level
 */
router.getRoute = function (level) {
  var _this4 = this;

  var i = 0;

  var find = function find(el) {
    var route = el.child(_this4.__routeSelector);

    if (!route) {
      return null;
    }

    if (i == level) {
      return route;
    }

    i++;
    return find(route);
  };

  return find(_akili2.default.root);
};

/**
 * Get the patterns array info
 *
 * @param {array} arr
 * @param {string} url
 * @returns {object|null}
 */
router.getArrayPatternContent = function (arr, url) {
  for (var i = 0, l = arr.length; i < l; i++) {
    var state = arr[i];
    var content = this.getPatternContent(state, url);

    if (!content) {
      continue;
    }

    return (0, _extends3.default)({ state: state }, content);
  }

  return null;
};

/**
 * Get the states by the level
 *
 * @param {number} level
 * @returns {Array}
 */
router.getStatesByLevel = function (level) {
  var states = [];

  for (var i = 0, l = this.states.length; i < l; i++) {
    var state = this.states[i];

    if (state.level < level) {
      continue;
    } else if (state.level > level) {
      break;
    }

    states.push(state);
  }

  return states;
};

/**
 * Reload the state
 * 
 * @see Transition.reload
 */
router.reload = function () {
  var _transition;

  if (!this.transition) {
    throw new Error('Not found an active transition to reload the state');
  }

  return (_transition = this.transition).reload.apply(_transition, arguments);
};

/**
 * Isolate the function
 *
 * @param {function} fn
 * @returns {*}
 */
router.isolate = function (fn) {
  this.__isolated = true;
  var res = fn();
  this.__isolated = false;
  return res;
};

/**
 * Change the state
 * 
 * @param {object} [options]
 */
router.changeState = function () {
  var _this5 = this;

  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if (this.__isolated) {
    return _promise2.default.resolve();
  }

  var url = this.getUrl();
  var transition = new Transition(url);
  this.__queue.push(transition);

  return new _promise2.default(function (resolve) {
    var interval = setInterval(function () {
      if (_this5.__queue[0] === transition) {
        clearInterval(interval);
        resolve();
      }
    });
  }).then(function () {
    transition.previous = router.transition || null;
    router.transition = transition;
    window.dispatchEvent(new CustomEvent('state-change', { detail: transition }));
    var params = {};
    var query = _this5.getUrlQuery();
    var hash = _this5.hashMode ? '' : window.location.hash.replace('#', '');
    var level = 0;

    var next = function next(states) {
      if (!states.length) {
        return _promise2.default.resolve();
      }

      var content = _this5.getArrayPatternContent(states, url);

      if (!content) {
        return _promise2.default.resolve();
      }

      var state = content.state;
      transition.setPath({ state: state, component: route });
      params = (0, _extends3.default)({}, params, content.params);
      hash = hash || options.emptyHash;

      var _prepareStateArgs3 = _this5.prepareStateArgs(state, params, query, hash, options);

      params = _prepareStateArgs3.params;
      query = _prepareStateArgs3.query;
      hash = _prepareStateArgs3.hash;
      options = _prepareStateArgs3.options;

      hash = hash || '';
      var realUrl = _this5.createStateUrl(state, params, query, hash, options, false);
      _this5.isolate(function () {
        return _this5.replaceUrl(realUrl);
      });
      var route = state.abstract ? null : _this5.getRoute(level);

      if (!route && !state.abstract) {
        throw new Error('Not found route component for state "' + state.name + '"');
      }

      transition.path.params = params;
      transition.path.query = query;
      transition.path.hash = hash;
      transition.path.url = realUrl;
      transition.path.options = options;
      !state.abstract && level++;
      var isDifferent = true;

      if (realUrl != url) {
        isDifferent = transition.isRouteChanged(transition.path);
      }

      var load = isDifferent && options.reload !== false;

      return _promise2.default.resolve(load ? state.handler(transition) : transition.path.data).then(function (data) {
        transition.path.data = data;
        state.title && (document.title = typeof state.title == 'function' ? state.title(transition) : state.title);

        if (transition.__cancelled) {
          return;
        }

        if (state.abstract) {
          return;
        }

        var prevRoute = transition.previous && transition.previous.getRoute(state);
        prevRoute && !prevRoute.loaded && (load = true);
        return route.setTransition(transition, load).then(function () {
          return transition.path.loaded = true;
        });
      }).then(function () {
        return next(state.children);
      });
    };

    return next(_this5.getStatesByLevel(0)).then(function () {
      if (!transition.routes.length) {
        if (_this5.__redirects) {
          throw new Error('Wrong router default url "' + _this5.defaultUrl + '"');
        }

        if (_this5.defaultUrl) {
          if (_this5.defaultUrl == _this5.getUrl()) {
            throw new Error('Not found any routes');
          }

          _this5.isolate(function () {
            return _this5.replaceUrl(_this5.defaultUrl);
          });
          _this5.__redirects++;
          transition.finish();
          return _this5.changeState(options);
        }

        if (_akili2.default.options.debug) {
          // eslint-disable-next-line no-console
          console.warn('Not found a default route. You can pass it in "router.init(defaultUrl)" function');
        }
      }

      if (!options.saveScrollPosition && (!transition.path || !transition.path.hash)) {
        window.scrollTo(0, 0);
      }

      _this5.__redirects = 0;
      window.dispatchEvent(new CustomEvent('state-changed', { detail: transition }));
      transition.finish();
      return transition;
    });
  }).catch(function (err) {
    transition && transition.finish();
    throw err;
  });
};

/**
 * Deinitialize the router
 */
router.deinit = function () {
  window.removeEventListener('popstate', this.__onStateChangeHandler);
  this.__init = false;
};

router.Transition = Transition;
exports.default = router;

/***/ }),

/***/ "./node_modules/akili/src/services/store.js":
/*!**************************************************!*\
  !*** ./node_modules/akili/src/services/store.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _akili = __webpack_require__(/*! ../akili.js */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/akili/src/utils.js");

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Store allows you to save and share data.
 * 
 * {@link https://akilijs.com/docs/store}
 */
var store = new Proxy({}, {
  get: function get(target, key) {
    if (key == "__target") {
      return target;
    }

    return target[key];
  },
  set: function set(target, key, value) {
    if (_utils2.default.compare(target[key], value)) {
      return true;
    }

    value = _utils2.default.copy(value, { plain: true });
    target[key] = value;
    _akili2.default.root && _akili2.default.root.__storeTriggerByName(key, value);
    return true;
  },
  deleteProperty: function deleteProperty(target, key) {
    _akili2.default.root && _akili2.default.root.__storeTriggerByName(key, undefined);
    delete target[key];
    return true;
  }
});

exports.default = store;

/***/ }),

/***/ "./node_modules/akili/src/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/akili/src/utils.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _stringify = __webpack_require__(/*! babel-runtime/core-js/json/stringify */ "./node_modules/babel-runtime/core-js/json/stringify.js");

var _stringify2 = _interopRequireDefault(_stringify);

var _getOwnPropertyDescriptor = __webpack_require__(/*! babel-runtime/core-js/object/get-own-property-descriptor */ "./node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js");

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _defineProperty = __webpack_require__(/*! babel-runtime/core-js/object/define-property */ "./node_modules/babel-runtime/core-js/object/define-property.js");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

var _getOwnPropertyNames = __webpack_require__(/*! babel-runtime/core-js/object/get-own-property-names */ "./node_modules/babel-runtime/core-js/object/get-own-property-names.js");

var _getOwnPropertyNames2 = _interopRequireDefault(_getOwnPropertyNames);

var _extends2 = __webpack_require__(/*! babel-runtime/helpers/extends */ "./node_modules/babel-runtime/helpers/extends.js");

var _extends3 = _interopRequireDefault(_extends2);

var _keys = __webpack_require__(/*! babel-runtime/core-js/object/keys */ "./node_modules/babel-runtime/core-js/object/keys.js");

var _keys2 = _interopRequireDefault(_keys);

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

var _eventEmitter = __webpack_require__(/*! ./event-emitter.js */ "./node_modules/akili/src/event-emitter.js");

var _eventEmitter2 = _interopRequireDefault(_eventEmitter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The object with a lot of useful functions
 * 
 * {@link https://akilijs.com/docs/utils}
 */
var utils = {};

/**
 * Create the class attribute from the object
 *
 * @example
 * // returns "red active"
 * utils.class({red: true, active: true, green: false});
 *
 * @param {object} obj
 * @returns {string}
 */
utils.class = function (obj) {
  if (!obj || (typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) !== 'object') {
    return '';
  }

  var classes = [];
  var keys = (0, _keys2.default)(obj);

  for (var i = 0, l = keys.length; i < l; i++) {
    var k = keys[i];
    var val = obj[k];
    val && classes.push(k);
  }

  return classes.join(' ');
};

/**
 * Create the style attribute from the object
 *
 * @example
 * // returns "color:red;width:10px"
 * utils.style({color: "red", background: false, width: "10px"});
 *
 * @param {object} obj
 * @returns {string}
 */
utils.style = function (obj) {
  if (!obj || (typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) !== 'object') {
    return '';
  }

  var styles = [];
  var keys = (0, _keys2.default)(obj);

  for (var i = 0, l = keys.length; i < l; i++) {
    var k = keys[i];
    var val = obj[k];
    val && styles.push(this.toDashCase(k) + ':' + val);
  }

  return styles.join(';');
};

/**
 * Split the string extended
 * 
 * @example
 * // returns ["Hello", "World"]
 * utils.split("Hello World", " ");
 * 
 * @example
 * // returns ['x = 5', ' y = "1;2;3"']
 * utils.split('x = 5; y = "1;2;3"', ";", ['"']);
 * 
 * @param {string|RegExp} str 
 * @param {string} [del]
 * @param {string[]} [exclude] 
 */
utils.split = function (str) {
  var del = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  var exps = [];
  var last = '';

  if (!del) {
    return str.split('');
  } else if (del instanceof RegExp) {
    return str.split(del);
  } else if (str.indexOf(del) == -1) {
    last = str;
  } else {
    var arr = str.split('');
    var open = '';

    for (var i = 0, l = arr.length; i < l; i++) {
      var val = arr[i];
      var index = exclude.indexOf(val);

      if (index > -1 && (!open || open == val)) {
        !open ? open = exclude[index] : open = '';
      }

      if (val == del && !open) {
        exps.push(last);
        last = '';
        continue;
      }

      last += val;
    }
  }

  last && exps.push(last);
  return exps;
};

/**
 * Filter the array
 *
 * @example
 * // returns [1, 11]
 * utils.filter([1, 2, 3, 11], '1');
 *
 * @example
 * // returns [{x: 1}, {x: 11}]
 * utils.filter([{x: 1}, {x: 2}, {x: 3}, {x: 11}], '1', 'x');
 * 
 * @example
 * // returns [{x: 1}, {x: 11}]
 * utils.filter([{x: 1}, {x: 2}, {x: 3}, {x: 11}], '1', ['x']);
 * 
 * @example
 * // returns [{x: 1}, {x: 11}]
 * utils.filter([{x: 1}, {x: 2}, {x: 3}, {x: 11}], '1', [['x']]);
 * 
 * @example
 * // returns [{x: {y: 1}}]
 * utils.filter([{x: {y: 1}}, {x: {y: 2}}], '1', [['x', 'y']]);
 * 
 * @example
 * // returns [{x:1, y: 2}, {x: 2, y:1}] 
 * utils.filter([{x: 1, y: 2}, {x: 3, y: 3}, {x: 2, y: 1}], '1', ['x', 'y']);
 * 
 * @example
 * // returns [{x:1, y: 2}, {x: 2, y:1}]
 * utils.filter([{x: 1, y: 2}, {x: 3, y: 3}, {x: 2, y: 1}], '1', [['x'], ['y']]);
 *
 * @param {Array} arr
 * @param {string|RegExp|function} handler - type of the filtering
 * @param {string[]|string} [keys] - filter by the keys
 * @returns {Array} 
 */
utils.filter = function (arr, handler) {
  var keys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  var res = [];

  if (keys && !Array.isArray(keys)) {
    keys = [keys];
  }

  if (typeof handler != 'function') {
    var str = handler ? (handler + '').toLowerCase() : '';
    handler = function handler(val) {
      return (val ? (val + '').toLowerCase() : '').match(str);
    };
  }

  for (var i = 0, l = arr.length; i < l; i++) {
    var item = arr[i];
    var filtered = false;

    if (!keys && handler(item)) {
      filtered = true;
    } else if (keys) {
      for (var k = 0, c = keys.length; k < c; k++) {
        var key = keys[k];
        key = Array.isArray(key) ? key : [key];
        var val = key ? this.getPropertyByKeys(key, item) : item;

        if (handler(val)) {
          filtered = true;
          continue;
        }
      }
    }

    filtered && res.push(item);
  }

  return res;
};

/**
 * Sort the array
 *
 * @example
 * // returns [1, 2, 3]
 * utils.sort([3, 2, 1], true);
 *
 * @example
 * // returns [3, 2, 1]
 * utils.sort([1, 2, 3], false);
 *
 * @example
 * // returns [{x: 1}, {x: 2}, {x: 3}]
 * utils.sort([{x: 3}, {x: 2}, {x: 1}], [['x']], [true]);
 * utils.sort([{x: 3}, {x: 2}, {x: 1}], ['x'], true);
 * utils.sort([{x: 3}, {x: 2}, {x: 1}], 'x');
 *
 * @example
 * // returns [{x: 3}, {x: 2}, {x: 1}]
 * utils.sort([{x: 1}, {x: 2}, {x: 3}], [['x']], [false]);
 * utils.sort([{x: 1}, {x: 2}, {x: 3}], ['x'], false);
 * utils.sort([{x: 1}, {x: 2}, {x: 3}], 'x', false);
 *
 * @example
 * // returns [{x: 1, y: 3}, {x: 2, y: 1}, {x:2, y: 2}]
 * utils.sort([{x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 3}], [['x'], ['y']], [true, true]);
 * 
 * @example
 * // returns [{x: {y: 1}}, {x: {y: 2}}]
 * utils.sort([{x: {y: 2}}, {x: {y: 1}}], [['x', 'y']], [true]);
 *
 * @param {Array} arr
 * @param {boolean|Array[]|string[]|string} [keys]
 * @param {boolean|boolean[]} [order] - reverse or not
 * @returns {Array}
 */
utils.sort = function (arr) {
  var _this = this;

  var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var order = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  arr = arr.slice();

  if (keys === true) {
    keys = [];
    order = [true];
  } else if (keys === false) {
    keys = [];
    order = [false];
  }

  if (!Array.isArray(keys)) {
    keys = [keys];
  }

  if (!Array.isArray(order)) {
    order = [order];
  }

  var l = keys.length;

  arr.sort(function (a, b) {
    var i = 0;

    var check = function check(a, b) {
      var reverse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      if (a instanceof Date) {
        a = a.getTime();
      }

      if (b instanceof Date) {
        b = b.getTime();
      }

      if (a > b) {
        return reverse ? -1 : 1;
      } else if (a < b) {
        return reverse ? 1 : -1;
      }

      return 0;
    };

    var next = function next() {
      if (i >= l) {
        return 0;
      }

      var key = keys[i];

      if (!Array.isArray(key)) {
        key = [key];
      }

      var aV = _this.getPropertyByKeys(key, a);
      var bV = _this.getPropertyByKeys(key, b);
      var res = check(aV, bV, order[i] === false);

      if (res !== 0) {
        return res;
      }

      i++;
      return next();
    };

    if (!l) {
      return check(a, b, order[i] === false);
    }

    return next();
  });

  return arr;
};

/**
 * Return a new object with the specified keys
 * 
 * @example
 * // returns {x: 1, z: 1}
 * utils.includeKeys({x: 1, y: 1, z: 1}, ['x', 'z']);
 * 
 * @param {object} obj
 * @param {string[]} keys
 */
utils.includeKeys = function (obj, keys) {
  var newObj = {};
  var objKeys = (0, _keys2.default)(obj);

  for (var i = 0, l = objKeys.length; i < l; i++) {
    var key = objKeys[i];

    if (keys.indexOf(key) != -1) {
      newObj[key] = obj[key];
    }
  }

  return newObj;
};

/**
 * Return a new object without the specified keys
 * 
 * @example
 * // returns {x: 1, z: 1}
 * utils.includeKeys({x: 1, y: 1, z: 1}, ['y']);
 * 
 * @param {object} obj
 * @param {string[]} keys
 */
utils.excludeKeys = function (obj, keys) {
  var newObj = {};
  var objKeys = (0, _keys2.default)(obj);

  for (var i = 0, l = objKeys.length; i < l; i++) {
    var key = objKeys[i];

    if (keys.indexOf(key) == -1) {
      newObj[key] = obj[key];
    }
  }

  return newObj;
};

/**
 * Check the value is the scope proxy object
 *
 * @param {*} val
 * @returns {boolean}
 */
utils.isScopeProxy = function (val) {
  return !!(val && (typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) == 'object' && val.__isProxy);
};

/**
 * Check the value is a plain object
 *
 * @param {*} obj
 * @returns {boolean}
 */
utils.isPlainObject = function (obj) {
  return !!(obj && (typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) == 'object' && (obj.constructor == Object || obj.constructor == Array));
};

/**
 * Copy the value
 *
 * @param {*} value
 * @param {boolean} [options] 
 * @returns {*}
 */
utils.copy = function (value) {
  var _this2 = this;

  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) != 'object' || !value) {
    return value;
  }

  options = (0, _extends3.default)({ nested: true, enumerable: true, plain: false }, options);

  var next = function next(obj) {
    if (options.plain && !_this2.isPlainObject(obj)) {
      return obj;
    }

    obj = _this2.isScopeProxy(obj) ? obj.__target : obj;
    var keys = !options.enumerable ? (0, _getOwnPropertyNames2.default)(obj) : (0, _keys2.default)(obj);
    var newObj = Array.isArray(obj) ? [] : {};

    for (var i = 0, l = keys.length; i < l; i++) {
      var key = keys[i];
      var val = obj[key];
      val = val && (typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) == 'object' && options.nested ? next(val) : val;

      if (!obj.propertyIsEnumerable(key)) {
        (0, _defineProperty2.default)(newObj, key, (0, _extends3.default)({}, (0, _getOwnPropertyDescriptor2.default)(obj, key), {
          value: val
        }));

        continue;
      }

      newObj[key] = val;
    }

    return newObj;
  };

  return next(value);
};

/**
 * Change the attribute value to the appropriate format
 *
 * @param {*} value
 * @returns {*}
 */
utils.makeAttributeValue = function (value) {
  if (value === false || value === null || value === undefined) {
    return '';
  }

  if (value instanceof _eventEmitter2.default) {
    return '[object Event]';
  }

  if (typeof value == 'function') {
    return '[object Function]';
  }

  if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) == 'object') {
    return Object.prototype.toString.call(value);
  }

  return value + '';
};

/**
 * Compare two values
 *
 * @param {*} a
 * @param {*} b
 * @param {object} [options]
 * @returns {boolean}
 */
utils.compare = function (a, b) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (a instanceof Date && b instanceof Date) {
    return a.getTime() === b.getTime();
  } else if (typeof a == 'function' && typeof b == 'function') {
    return a.toString() === b.toString();
  } else if ((typeof a === 'undefined' ? 'undefined' : (0, _typeof3.default)(a)) == 'object' && (typeof b === 'undefined' ? 'undefined' : (0, _typeof3.default)(b)) == 'object') {
    if (a === null || b === null) {
      return a === b;
    }

    options = (0, _extends3.default)({ enumerable: true, ignoreUndefined: true }, options);

    var clearUndefined = function clearUndefined(val) {
      var obj = Array.isArray(val) ? [] : {};
      var keys = !options.enumerable ? (0, _getOwnPropertyNames2.default)() : (0, _keys2.default)(val);

      for (var i = 0, l = keys.length; i < l; i++) {
        var key = keys[i];
        val[key] !== undefined && (obj[key] = val[key]);
      }

      return obj;
    };

    if (options.ignoreUndefined) {
      a = clearUndefined(a);
      b = clearUndefined(b);
    }

    var aKeys = !options.enumerable ? (0, _getOwnPropertyNames2.default)() : (0, _keys2.default)(a);
    var bKeys = !options.enumerable ? (0, _getOwnPropertyNames2.default)() : (0, _keys2.default)(b);

    if (aKeys.length != bKeys.length) {
      return false;
    }

    a = this.isScopeProxy(a) ? a.__target : a;
    b = this.isScopeProxy(b) ? b.__target : b;

    for (var i = 0, l = aKeys.length; i < l; i++) {
      var key = aKeys[i];

      if (!this.compare(a[key], b[key])) {
        return false;
      }
    }

    return true;
  }

  return a === b;
};

/**
 * Create a hash from the string
 * 
 * @param {*} source
 * @returns {string}
 */
utils.createHash = function (source) {
  (typeof source === 'undefined' ? 'undefined' : (0, _typeof3.default)(source)) == 'object' && (source = (0, _stringify2.default)(source));
  typeof source != 'string' && (source = '⠀' + String(source));
  var hash = 0;

  for (var i = 0; i < source.length; i++) {
    var char = source.charCodeAt(i);
    hash = (hash << 5) - hash + char;
    hash = hash & hash;
  }

  return hash + '';
};

/**
 * Encode the html entities
 *
 * @example
 * // returns "you &amp me"
 * utils.encodeHtmlEntities('you & me');
 *
 * @param {string} html
 * @returns {string}
 */
utils.encodeHtmlEntities = function (html) {
  var el = document.createElement("div");
  var value = void 0;
  el.textContent = html;
  value = el.innerHTML;
  el.remove();
  el = null;
  return value;
};

/**
 * Decode the html entities
 *
 * @example
 * // returns "you & me"
 * utils.decodeHtmlEntities('you &amp me');
 *
 * @param {string} html
 * @returns {string}
 */
utils.decodeHtmlEntities = function (html) {
  var el = document.createElement("textarea");
  var value = void 0;
  el.innerHTML = html;
  value = el.value;
  el.remove();
  el = null;
  return value;
};

/**
 * Convert the string from a dash to a camel case
 *
 * @param {string} str
 * @returns {string}
 */
utils.toCamelCase = function (str) {
  return str.replace(/\W+(.)/g, function (m, c) {
    return c.toUpperCase();
  });
};

/**
 * Capitalize the string
 *
 * @param {string} str
 * @returns {string}
 */
utils.capitalize = function (str) {
  return str[0].toUpperCase() + str.slice(1);
};

/**
 * Convert the string from a camel to a dash case
 *
 * @param {string} str
 * @returns {string}
 */
utils.toDashCase = function (str) {
  return str.replace(/([A-Z])/g, function (m, c) {
    return '-' + c.toLowerCase();
  });
};

/**
 * Get the nested object property by array keys
 *
 * @example
 * // returns 5
 * utils.getPropertyByKeys(['x', 'y'], {x: {y: 5}});
 *
 * @param {string[]} keys
 * @param {object} object
 * @returns {*}
 */
utils.getPropertyByKeys = function (keys, object) {
  var current = void 0;
  var length = keys.length;
  var i = 0;

  keys.reduce(function (o, k) {
    i++;

    if (!o || (typeof o === 'undefined' ? 'undefined' : (0, _typeof3.default)(o)) != 'object') {
      return o;
    }

    if (o[k] === undefined) {
      return {};
    }

    i == length && (current = o[k]);
    return o[k];
  }, object);

  return current;
};

/**
 * Check the object nested property existence
 *
 * @example
 * // returns true
 * utils.hasPropertyByKeys(['x', 'y'], {x: {y: 5}});
 *
 * @param {string[]} keys
 * @param {object} object
 * @returns {boolean}
 */
utils.hasPropertyByKeys = function (keys, object) {
  var has = false;
  var length = keys.length;
  var i = 0;

  keys.reduce(function (o, k) {
    i++;

    if (!o || (typeof o === 'undefined' ? 'undefined' : (0, _typeof3.default)(o)) != 'object') {
      return !!o;
    }

    if (!o.hasOwnProperty(k)) {
      return {};
    }

    i == length && (has = o.hasOwnProperty(k));
    return o[k];
  }, object);

  return has;
};

/**
 * Set the object nested property value
 *
 * @example
 * // returns {y: 6}
 * utils.setPropertyByKeys(['x', 'y'], {x: {y: 5}}, (last, val) => last? 6: (val || {}));
 *
 * @param {string[]} keys
 * @param {object} object
 * @param {function} fn
 * @returns {*}
 */
utils.setPropertyByKeys = function (keys, object, fn) {
  var current = undefined;
  var length = keys.length;
  var i = 0;

  keys.reduce(function (o, k) {
    i++;

    if (!o || (typeof o === 'undefined' ? 'undefined' : (0, _typeof3.default)(o)) != 'object') {
      return;
    }

    if (!o.hasOwnProperty(k)) {
      o[k] = undefined;
    }

    o[k] = fn(i == length, o[k]);
    current = o;
    return o[k];
  }, object);

  return current;
};

/**
 * Delete the property from the object
 * You can cancel the deletion returning false in the callback function
 *
 * @example
 * // returns 5
 * utils.deletePropertyByKeys(['x', 'y'], {x: {y: 5}});
 * @example
 * // returns 5
 * utils.deletePropertyByKeys(['x', 'y'], {x: {y: 5}}, val => val != 5);
 *
 * @param {string[]} keys
 * @param {object} object
 * @param {function} [fn]
 * @returns {*}
 */
utils.deletePropertyByKeys = function (keys, object, fn) {
  var length = keys.length;
  var value = void 0;
  var i = 0;

  keys.reduce(function (o, k) {
    i++;

    if (!o || (typeof o === 'undefined' ? 'undefined' : (0, _typeof3.default)(o)) != 'object') {
      return;
    }

    if (!o.hasOwnProperty(k)) {
      return {};
    }

    if (i == length) {
      value = o[k];
      (!fn || fn(value)) && delete o[k];
      return value;
    }

    return o[k];
  }, object);

  return value;
};

/**
 * Get the enumerable property target object
 *
 * @param {object} target
 * @param {string} key
 * @returns {object}
 */

utils.getEnumerablePropertyTarget = function (target, key) {
  var check = function check(obj) {
    if (obj.propertyIsEnumerable(key)) {
      return obj;
    }

    var proto = (0, _getPrototypeOf2.default)(obj);

    if (!proto) {
      return null;
    }

    return check(proto);
  };

  return check(target);
};

/**
 * Get the own property target object
 *
 * @param {object} target
 * @param {string} key
 * @returns {object}
 */
utils.getOwnPropertyTarget = function (target, key) {
  var check = function check(obj) {
    if (obj.hasOwnProperty(key)) {
      return obj;
    }

    var proto = (0, _getPrototypeOf2.default)(obj);

    if (!proto) {
      return null;
    }

    return check(proto);
  };

  return check(target);
};

/**
 * Generate a random string
 *
 * @param {number} length
 * @param {function} fn
 * @returns {*}
 */
utils.createRandomString = function () {
  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 16;
  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  var str = Math.random().toString(36).substring(2, length + 2);
  var now = Date.now();
  var val = '';

  for (var i = 0, l = str.length; i < l; i++) {
    if (!(now % i)) {
      val += str[i].toUpperCase();
    } else {
      val += str[i];
    }
  }

  if (fn && fn(val)) {
    return this.createRandomString(length, fn);
  }

  return val;
};

/**
 * Create a function with the debounce
 *
 * @param {function} fn
 * @param {number} delay
 * @returns {fn}
 */
utils.debounce = function (fn) {
  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  return function () {
    clearTimeout(fn.__debounceTimeout);
    fn.__debounceTimeout = setTimeout(function () {
      fn();
      clearTimeout(fn.__debounceTimeout);
      delete fn.__debounceTimeout;
    }, delay);
  };
};

exports.default = utils;

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/array/from.js":
/*!**********************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/array/from.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/array/from */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/array/from.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/json/stringify.js":
/*!**************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/json/stringify.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/json/stringify */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/json/stringify.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/assign.js":
/*!*************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/assign.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/assign */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/assign.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/create.js":
/*!*************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/create.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/create */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/create.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/define-property.js":
/*!**********************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/define-property.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/define-property */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/define-property.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/get-own-property-descriptor */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/get-own-property-descriptor.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/get-own-property-names.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/get-own-property-names.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/get-own-property-names */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/get-own-property-names.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js":
/*!***********************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/get-prototype-of.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/get-prototype-of */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/get-prototype-of.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/keys.js":
/*!***********************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/keys.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/keys */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/keys.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/set-prototype-of.js":
/*!***********************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/set-prototype-of.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/set-prototype-of */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/set-prototype-of.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/promise.js":
/*!*******************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/promise.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/promise */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/promise.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/symbol.js":
/*!******************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/symbol.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/symbol */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/index.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/symbol/iterator.js":
/*!***************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/symbol/iterator.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/symbol/iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/iterator.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/asyncToGenerator.js":
/*!****************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/asyncToGenerator.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _promise = __webpack_require__(/*! ../core-js/promise */ "./node_modules/babel-runtime/core-js/promise.js");

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (fn) {
  return function () {
    var gen = fn.apply(this, arguments);
    return new _promise2.default(function (resolve, reject) {
      function step(key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }

        if (info.done) {
          resolve(value);
        } else {
          return _promise2.default.resolve(value).then(function (value) {
            step("next", value);
          }, function (err) {
            step("throw", err);
          });
        }
      }

      return step("next");
    });
  };
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/classCallCheck.js":
/*!**************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/classCallCheck.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/createClass.js":
/*!***********************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/createClass.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(/*! ../core-js/object/define-property */ "./node_modules/babel-runtime/core-js/object/define-property.js");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/extends.js":
/*!*******************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/extends.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__(/*! ../core-js/object/assign */ "./node_modules/babel-runtime/core-js/object/assign.js");

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/get.js":
/*!***************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/get.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _getPrototypeOf = __webpack_require__(/*! ../core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _getOwnPropertyDescriptor = __webpack_require__(/*! ../core-js/object/get-own-property-descriptor */ "./node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js");

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);

  if (desc === undefined) {
    var parent = (0, _getPrototypeOf2.default)(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/inherits.js":
/*!********************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/inherits.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _setPrototypeOf = __webpack_require__(/*! ../core-js/object/set-prototype-of */ "./node_modules/babel-runtime/core-js/object/set-prototype-of.js");

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = __webpack_require__(/*! ../core-js/object/create */ "./node_modules/babel-runtime/core-js/object/create.js");

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js":
/*!*************************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/possibleConstructorReturn.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/toConsumableArray.js":
/*!*****************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/toConsumableArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _from = __webpack_require__(/*! ../core-js/array/from */ "./node_modules/babel-runtime/core-js/array/from.js");

var _from2 = _interopRequireDefault(_from);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return (0, _from2.default)(arr);
  }
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/typeof.js":
/*!******************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/typeof.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(/*! ../core-js/symbol/iterator */ "./node_modules/babel-runtime/core-js/symbol/iterator.js");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(/*! ../core-js/symbol */ "./node_modules/babel-runtime/core-js/symbol.js");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/array/from.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/array/from.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.string.iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../../modules/es6.array.from */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.from.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Array.from;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/json/stringify.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/json/stringify.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js");
var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/assign.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/object/assign.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.assign */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.assign.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Object.assign;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/create.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/object/create.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.create.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/define-property.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/object/define-property.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.define-property */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-property.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/get-own-property-descriptor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/object/get-own-property-descriptor.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.get-own-property-descriptor */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Object;
module.exports = function getOwnPropertyDescriptor(it, key) {
  return $Object.getOwnPropertyDescriptor(it, key);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/get-own-property-names.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/object/get-own-property-names.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.get-own-property-names */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-own-property-names.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Object;
module.exports = function getOwnPropertyNames(it) {
  return $Object.getOwnPropertyNames(it);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/get-prototype-of.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/object/get-prototype-of.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.get-prototype-of */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-prototype-of.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Object.getPrototypeOf;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/keys.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/object/keys.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.keys.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Object.keys;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/set-prototype-of.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/object/set-prototype-of.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.set-prototype-of */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.set-prototype-of.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Object.setPrototypeOf;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/promise.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/promise.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/es6.object.to-string */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.to-string.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../modules/web.dom.iterable */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.promise */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js");
__webpack_require__(/*! ../modules/es7.promise.finally */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.promise.finally.js");
__webpack_require__(/*! ../modules/es7.promise.try */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.promise.try.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Promise;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/index.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.symbol */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.symbol.js");
__webpack_require__(/*! ../../modules/es6.object.to-string */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.to-string.js");
__webpack_require__(/*! ../../modules/es7.symbol.async-iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.async-iterator.js");
__webpack_require__(/*! ../../modules/es7.symbol.observable */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.observable.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Symbol;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/iterator.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/iterator.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.string.iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../../modules/web.dom.iterable */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js");
module.exports = __webpack_require__(/*! ../../modules/_wks-ext */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js").f('iterator');


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_add-to-unscopables.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_add-to-unscopables.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-instance.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-instance.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_array-includes.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_array-includes.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_classof.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_classof.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.11' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_create-property.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_create-property.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js");

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-keys.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-keys.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js":
/*!************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_for-of.js":
/*!************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_for-of.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js");
var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array-iter.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator-method.js");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js":
/*!************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_html.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_html.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_invoke.js":
/*!************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_invoke.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array-iter.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array-iter.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-call.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-call.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-create.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-create.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-detect.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-detect.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-step.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-step.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_meta.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_meta.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(/*! ./_uid */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js")('meta');
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var setDesc = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(/*! ./_fails */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_microtask.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_microtask.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var macrotask = __webpack_require__(/*! ./_task */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_task.js").set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(/*! ./_cof */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js")(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_new-promise-capability.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_new-promise-capability.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js");

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-assign.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-assign.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(/*! ./_fails */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dps.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dps.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn-ext.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn-ext.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn.js").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js");
var hiddenKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gpo.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gpo.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-sap.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-sap.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_perform.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_perform.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_promise-resolve.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_promise-resolve.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine-all.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine-all.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js");
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js");


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-proto.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-proto.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(/*! ./_ctx */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js")(Function.call, __webpack_require__(/*! ./_object-gopd */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-species.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-species.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js");
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ./_shared */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js":
/*!************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_species-constructor.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_species-constructor.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_string-at.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_string-at.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_task.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_task.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js");
var invoke = __webpack_require__(/*! ./_invoke */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_invoke.js");
var html = __webpack_require__(/*! ./_html */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_html.js");
var cel = __webpack_require__(/*! ./_dom-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(/*! ./_cof */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js")(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-absolute-index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-absolute-index.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_user-agent.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_user-agent.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js");
var defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js");


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator-method.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator-method.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.from.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.from.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js");
var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array-iter.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js");
var createProperty = __webpack_require__(/*! ./_create-property */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_create-property.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator-method.js");

$export($export.S + $export.F * !__webpack_require__(/*! ./_iter-detect */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-detect.js")(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.iterator.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.iterator.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.assign.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.assign.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(/*! ./_object-assign */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-assign.js") });


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.create.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.create.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(/*! ./_object-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js") });


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-property.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-property.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js"), 'Object', { defineProperty: __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js").f });


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");
var $getOwnPropertyDescriptor = __webpack_require__(/*! ./_object-gopd */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js").f;

__webpack_require__(/*! ./_object-sap */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-sap.js")('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-own-property-names.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-own-property-names.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 Object.getOwnPropertyNames(O)
__webpack_require__(/*! ./_object-sap */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-sap.js")('getOwnPropertyNames', function () {
  return __webpack_require__(/*! ./_object-gopn-ext */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn-ext.js").f;
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-prototype-of.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-prototype-of.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js");
var $getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gpo.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-sap.js")('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.keys.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.keys.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-sap.js")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.set-prototype-of.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.set-prototype-of.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(/*! ./_set-proto */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-proto.js").set });


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.to-string.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.to-string.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js");
var classof = __webpack_require__(/*! ./_classof */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_classof.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_for-of.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_species-constructor.js");
var task = __webpack_require__(/*! ./_task */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_task.js").set;
var microtask = __webpack_require__(/*! ./_microtask */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_microtask.js")();
var newPromiseCapabilityModule = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_new-promise-capability.js");
var perform = __webpack_require__(/*! ./_perform */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_perform.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_user-agent.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_promise-resolve.js");
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(/*! ./_redefine-all */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine-all.js")($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js")($Promise, PROMISE);
__webpack_require__(/*! ./_set-species */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-species.js")(PROMISE);
Wrapper = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js")[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(/*! ./_iter-detect */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-detect.js")(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(/*! ./_string-at */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.symbol.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.symbol.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine.js");
var META = __webpack_require__(/*! ./_meta */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_meta.js").KEY;
var $fails = __webpack_require__(/*! ./_fails */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js");
var shared = __webpack_require__(/*! ./_shared */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js");
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js");
var wksDefine = __webpack_require__(/*! ./_wks-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js");
var enumKeys = __webpack_require__(/*! ./_enum-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-keys.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js");
var _create = __webpack_require__(/*! ./_object-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js");
var gOPNExt = __webpack_require__(/*! ./_object-gopn-ext */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn-ext.js");
var $GOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js");
var $GOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js");
var $DP = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(/*! ./_object-gopn */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn.js").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(/*! ./_object-pie */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js").f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(/*! ./_library */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.promise.finally.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.promise.finally.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_species-constructor.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_promise-resolve.js");

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.promise.try.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.promise.try.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_new-promise-capability.js");
var perform = __webpack_require__(/*! ./_perform */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_perform.js");

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.async-iterator.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.async-iterator.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js")('asyncIterator');


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.observable.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.observable.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js")('observable');


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./es6.array.iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.iterator.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js");
var TO_STRING_TAG = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() { return this })() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(/*! ./runtime */ "./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js");

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js":
/*!********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() { return this })() || Function("return this")()
);


/***/ }),

/***/ "./node_modules/babel-runtime/regenerator/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/babel-runtime/regenerator/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js");


/***/ }),

/***/ "./src/browser/face/client.js":
/*!************************************!*\
  !*** ./src/browser/face/client.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _museriaClient = __webpack_require__(/*! ../../../dist/museria.client.js */ "./dist/museria.client.js");

var _museriaClient2 = _interopRequireDefault(_museriaClient);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var client = new _museriaClient2.default({ address: location.hostname + ':' + (location.port || (location.protocol == 'https:' ? 443 : 80)) });
exports.default = client;

/***/ }),

/***/ "./src/browser/face/controllers/app/app.html":
/*!***************************************************!*\
  !*** ./src/browser/face/controllers/app/app.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = "<div class=\"app container-fluid\">\n  <header class=\"header row\">\n    <a state=\"app\" class=\"logo mx-auto px-4\">\n      <div>\n        <img src=\"" + __webpack_require__(/*! ./img/logo.svg */ "./src/browser/face/controllers/app/img/logo.svg") + "\" class=\"logo-img\">\n        <span class=\"logo-title\">museria</span>\n        <div class=\"logo-description-start\">decentralized</div>\n        <div class=\"logo-description-end-lg d-lg-none\">storage</div>\n      </div>\n      <div class=\"logo-description-end d-none d-lg-block\">storage</div>        \n    </a>\n  </header>\n  <div class=\"content\">\n    <div class=\"row pt-5 pb-3\">\n      <div class=\"song-search col-lg-6 col-12 pl-5 pr-5 pr-lg-4 pt-4\">\n        <div class=\"song-search-input input-group input-group-lg\">\n          <i class=\"fas fa-search fa-lg\"></i>\n          <input \n            type=\"text\" \n            class=\"form-control\"\n            placeholder=\"find a song\"\n            debounce=\"2000\"\n            focus=\"${ this.searchInputFocus }\"\n            on-input=\"${ this.resetSearchEvent() }\"\n            on-debounce=\"${ this.findSong(event.target.value) }\"            \n            on-focus=\"${ this.searchInputFocus = true }\"\n            on-blur=\"${ this.searchInputFocus = false }\"\n          />\n        </div>\n        <if \n          is=\"${ this.searchEvent.status }\" \n          class=\"d-block alert alert-${this.searchEvent.status} my-4\"\n        >     \n          <if recreate is=\"${ !this.searchEvent.message }\">            \n            <a href=\"${ this.searchEvent.meta.link }\" target=\"_blank\">\n              ${ this.searchEvent.meta.title } <i class=\"fas fa-link ml-2\"></i>\n            </a>\n          </if>\n          <else>\n            ${ this.searchEvent.message }\n          </else>        \n        </if>\n      </div>\n      <div class=\"col-lg-6 col-12 pl-5 pr-5 pl-lg-4 pt-4\">\n        <div class=\"position-relative\">\n          <button class=\"btn form-control mb-2 btn-lg btn-primary\" on-click=\"${ this.chooseSong() }\">\n            Choose a song to upload\n          </button>\n          <input \n            type=\"file\" \n            id=\"audio-file\" \n            class=\"invisible position-absolute\" \n            on-change=\"${ this.prepareAudio(event.target.files[0]) }\"\n            accept=\".mp3, .mpga\"\n          >\n          <form \n            on-submit=\"${ event.preventDefault(); this.uploadSong() }\" \n            class=\"input-group my-4 d-block\"\n          >\n            <if is=\"${ this.songUploadInfo.file }\">\n              <div class=\"form-group w-100\">\n                <input \n                  type=\"text\" \n                  class=\"${ utils.class({ 'form-control': true, 'is-invalid': this.uploadFormFails.title }) }\"\n                  placeholder=\"Write a song title\"\n                  value=\"${ this.songUploadInfo.title }\"\n                  on-input=\"${ this.songUploadInfo.title = event.target.value }\"\n                  debounce=\"2000\"\n                  on-debounce=\"${ this.checkUploadSongTitle(event.target) }\"\n                />\n                <div class=\"invalid-feedback\">Title must be like \"Artist - Title\"</div>\n              </div>\n              <div class=\"form-group mt-3 w-100\">\n                <div class=\"custom-file position-relative\">\n                  <input \n                    type=\"file\" \n                    class=\"${ utils.class({ 'custom-file-input': true, 'is-invalid': this.uploadFormFails.cover }) }\"\n                    id=\"coverFile\" \n                    on-change=\"${ this.prepareCover(event.target.files[0]) }\"\n                    accept=\".jfif, .jpeg, .jpg\"\n                  >\n                  <div class=\"invalid-feedback\">Cover must be \"jpeg\" or \"png\"</div>\n                  <img  \n                    hidden=\"${ !this.songUploadInfo.cover }\"\n                    url=\"${ this.songUploadInfo.cover }\" \n                    class=\"cover-img\"\n                  >\n                  <label \n                    class=\"custom-file-label ${ utils.class({'cover-label': true, 'with-img': !!this.songUploadInfo.cover}) }\" \n                    for=\"coverFile\">\n                    ${ this.songUploadInfo.cover? 'Cover is chosen': 'Choose a cover file' }\n                  </label>\n                  <i \n                    hidden=\"${ !this.songUploadInfo.cover }\"\n                    on-click=\"${ this.removeCover() }\"\n                    class=\"close-fa cover-remove fas fa-times fa-lg\" \n                    title=\"remove the cover\"></i>\n                </div>\n              </div>            \n              <button \n                disabled=\"${ this.uploadFormFails.title || this.uploadFormFails.cover }\"\n                type=\"submit\" \n                class=\"btn form-control btn-secondary mt-3\"\n              >\n                Upload the song\n              </button> \n            </if>\n          </form>  \n          <if \n            is=\"${ this.uploadEvent.status }\" \n            class=\"d-block alert alert-${this.uploadEvent.status} my-4 pr-5\"\n          >\n            ${ this.uploadEvent.message }\n            <i class=\"close-fa fas fa-times fa-lg\" on-click=\"${ this.resetUploadEvent() }\"></i>\n          </if>      \n        </div>\n      </div>    \n    </div>  \n    <div class=\"container py-5\">\n      <div class=\"row px-2 pb-5\">\n        <div class=\"col-12 text-center\">\n          <ul class=\"questions\">\n            <li>\n              <div>What is this?</div>\n              <div>It is a decentralized music storage node.</div>\n            </li>\n            <li>\n              <div>What node?</div>\n              <div>This is one of the servers that is part of the network.</div>\n            </li>\n            <li>\n              <div>What network?</div>\n              <div>If you are here and don’t know it, then this is most likely\n                <a href=\"https://github.com/ortexx/museria-global/\" target=\"_blank\">a global storage network</a>.\n                But it could be another one.\n              </div>\n            </li>\n            <li>\n              <div>Global storage network?</div>\n              <div>\n                Yes, <a href=\"https://github.com/ortexx/museria-global/\" target=\"_blank\">a global decentralized network</a> \n                has been launched, that allows us all to store and receive music for free and in a single place.\n              </div>\n            </li>\n            <li>\n              <div>What can I do on this page?</div>\n              <div>\n                Once you are here, then the network is public or you have access. \n                You can try to find a song in the storage or add your own there.\n              </div>\n            </li>          \n            <li>\n              <div>How to learn more about all this?</div>\n              <div>\n                Look into <a href=\"https://github.com/ortexx/museria/\" target=\"_blank\">the documentation</a> of the library that is responsible for everything.\n                If you are not a programmer then find out the details from the person who gave you the link to the site.\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>    \n    </div>\n  </div>  \n  <footer class=\"footer row\">\n    <div class=\"container\">\n      <div class=\"row px-4\">\n        <div class=\"col-xl-4 col-lg-6 mt-4 px-0 footer-contacts\">\n          <h5>Contacts</h5>\n          <ul class=\"flex-column nav\">\n            <li>\n              <i class=\"fas fa-envelope\" aria-hidden=\"true\"></i>\n              <a href=\"mailto:storage@museria.com\" target=\"_blank\">\n                <span class=\"pl-1\">storage@museria.com</span>\n              </a>\n            </li>\n            <li>\n              <i class=\"fab fa-github\" aria-hidden=\"true\"></i>\n              <a href=\"https://github.com/ortexx/\" target=\"_blank\">\n                <span class=\"pl-1\">ortexx</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"col-xl-4 col-lg-6 mt-4 px-0\">\n          <h5>Information</h5>\n          <ul class=\"flex-column nav\">\n            <li>\n              <i class=\"fas fa-book-open\" aria-hidden=\"true\"></i>\n              <a href=\"https://github.com/ortexx/museria/\" target=\"_blank\">Documentation</a>\n            </li>\n            <li>\n              <i class=\"fas fa-globe\" aria-hidden=\"true\"></i>\n              <a href=\"https://github.com/ortexx/museria-global/\" target=\"_blank\">Global network</a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"col-xl-4 col-lg-6 mt-4 px-0\">\n          <h5>Donate</h5>\n          <ul class=\"flex-column nav\">\n            <li>\n              <i class=\"fab fa-btc\" aria-hidden=\"true\"></i>\n              <span>38dyvCmUadqS2HVFEuDBVC3k1a7h6J5gqU</span>\n            </li>\n            <li class=\"text-nowrap\">\n              <i class=\"fab fa-ethereum\" aria-hidden=\"true\"></i>\n              <span>0x4e5Ef1b362271523f5c6eDe7a54BDcA9750D81E8</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n</div>";

/***/ }),

/***/ "./src/browser/face/controllers/app/app.js":
/*!*************************************************!*\
  !*** ./src/browser/face/controllers/app/app.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = __webpack_require__(/*! babel-runtime/core-js/promise */ "./node_modules/babel-runtime/core-js/promise.js");

var _promise2 = _interopRequireDefault(_promise);

var _regenerator = __webpack_require__(/*! babel-runtime/regenerator */ "./node_modules/babel-runtime/regenerator/index.js");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(/*! babel-runtime/helpers/asyncToGenerator */ "./node_modules/babel-runtime/helpers/asyncToGenerator.js");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

__webpack_require__(/*! ./app.scss */ "./src/browser/face/controllers/app/app.scss");

var _akili = __webpack_require__(/*! akili */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

var _router = __webpack_require__(/*! akili/src/services/router */ "./node_modules/akili/src/services/router.js");

var _router2 = _interopRequireDefault(_router);

var _client = __webpack_require__(/*! ../../client */ "./src/browser/face/client.js");

var _client2 = _interopRequireDefault(_client);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var App = function (_Akili$Component) {
  (0, _inherits3.default)(App, _Akili$Component);

  function App() {
    (0, _classCallCheck3.default)(this, App);
    return (0, _possibleConstructorReturn3.default)(this, (App.__proto__ || (0, _getPrototypeOf2.default)(App)).apply(this, arguments));
  }

  (0, _createClass3.default)(App, [{
    key: 'created',
    value: function created() {
      this.scope.searchInputFocus = true;
      this.scope.uploadFormFails = { cover: false, title: false };
      this.scope.findSong = this.findSong.bind(this);
      this.scope.chooseSong = this.chooseSong.bind(this);
      this.scope.prepareAudio = this.prepareAudio.bind(this);
      this.scope.prepareCover = this.prepareCover.bind(this);
      this.scope.removeCover = this.removeCover.bind(this);
      this.scope.uploadSong = this.uploadSong.bind(this);
      this.scope.resetSearchEvent = this.resetSearchEvent.bind(this);
      this.scope.resetUploadEvent = this.resetUploadEvent.bind(this);
      this.scope.checkUploadSongTitle = this.checkUploadSongTitle.bind(this);
      this.resetSearchEvent();
      this.resetUploadEvent();
      this.resetSongUploadInfo();
    }
  }, {
    key: 'resetSearchEvent',
    value: function resetSearchEvent() {
      this.scope.searchEvent = { status: '', message: '', meta: {} };
    }
  }, {
    key: 'resetUploadEvent',
    value: function resetUploadEvent() {
      this.scope.uploadEvent = { status: '', message: '' };
    }
  }, {
    key: 'resetSongUploadInfo',
    value: function resetSongUploadInfo() {
      this.scope.songUploadInfo = { title: '', сover: '', file: null, coverFile: null };
    }
  }, {
    key: 'chooseSong',
    value: function chooseSong() {
      this.resetSongUploadInfo();
      this.el.querySelector('#audio-file').click();
    }
  }, {
    key: 'checkUploadSongTitle',
    value: function checkUploadSongTitle() {
      this.scope.uploadFormFails.title = false;

      if (!_client2.default.constructor.utils.isSongTitle(this.scope.songUploadInfo.title)) {
        this.scope.uploadFormFails.title = true;
      }
    }
  }, {
    key: 'findSong',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(title) {
        var info;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (title) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt('return');

              case 2:
                _context.prev = 2;
                _context.next = 5;
                return _client2.default.getSong(title);

              case 5:
                info = _context.sent;

                this.scope.searchEvent.status = 'info';
                this.scope.searchEvent.message = 'No related songs found';

                if (info) {
                  this.scope.searchEvent.status = 'success';
                  this.scope.searchEvent.message = '';
                  this.scope.searchEvent.meta = { title: info.title, link: info.audioLink };
                }
                _context.next = 18;
                break;

              case 11:
                _context.prev = 11;
                _context.t0 = _context['catch'](2);

                if (_context.t0.code) {
                  _context.next = 15;
                  break;
                }

                throw _context.t0;

              case 15:

                this.scope.searchEvent.status = 'danger';
                this.scope.searchEvent.message = _context.t0.message;

                if (_context.t0.code == 'ERR_MUSERIA_SONG_WRONG_TITLE') {
                  this.scope.searchEvent.message = 'Wrong song title. It must be like "Artist - Title"';
                }

              case 18:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this, [[2, 11]]);
      }));

      function findSong(_x) {
        return _ref.apply(this, arguments);
      }

      return findSong;
    }()
  }, {
    key: 'prepareAudio',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(file) {
        var tags, coverFile;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (file) {
                  _context2.next = 2;
                  break;
                }

                return _context2.abrupt('return');

              case 2:
                _context2.next = 4;
                return _client2.default.constructor.utils.getSongTags(file);

              case 4:
                tags = _context2.sent;

                if (!(file.type != "audio/mpeg" && file.type != "audio/mp3")) {
                  _context2.next = 8;
                  break;
                }

                this.scope.uploadEvent = { status: 'danger', message: 'File must be "mp3"' };
                return _context2.abrupt('return');

              case 8:

                this.resetUploadEvent();
                this.scope.songUploadInfo = { file: file, title: tags.fullTitle };

                if (!tags.APIC) {
                  _context2.next = 16;
                  break;
                }

                coverFile = new Blob([tags.APIC]);
                _context2.next = 14;
                return this.getCoverLink(coverFile);

              case 14:
                this.scope.songUploadInfo.cover = _context2.sent;

                this.scope.songUploadInfo.coverFile = coverFile;

              case 16:

                this.checkUploadSongTitle();

              case 17:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function prepareAudio(_x2) {
        return _ref2.apply(this, arguments);
      }

      return prepareAudio;
    }()
  }, {
    key: 'prepareCover',
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(file) {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (file) {
                  _context3.next = 2;
                  break;
                }

                return _context3.abrupt('return');

              case 2:
                if (!(file.type != "image/jpeg" && file.type != "image/png")) {
                  _context3.next = 7;
                  break;
                }

                this.scope.uploadFormFails.cover = '';
                this.scope.songUploadInfo.cover = '';
                this.scope.songUploadInfo.coverFile = null;
                return _context3.abrupt('return');

              case 7:

                this.scope.songUploadInfo.coverFile = file;
                _context3.next = 10;
                return this.getCoverLink(file);

              case 10:
                this.scope.songUploadInfo.cover = _context3.sent;

              case 11:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function prepareCover(_x3) {
        return _ref3.apply(this, arguments);
      }

      return prepareCover;
    }()
  }, {
    key: 'removeCover',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4() {
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                this.scope.uploadFormFails.cover = '';
                this.scope.songUploadInfo.cover = '';
                this.scope.songUploadInfo.coverFile = null;

              case 3:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function removeCover() {
        return _ref4.apply(this, arguments);
      }

      return removeCover;
    }()
  }, {
    key: 'getCoverLink',
    value: function () {
      var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5(file) {
        return _regenerator2.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                return _context5.abrupt('return', new _promise2.default(function (resolve, reject) {
                  var fn = function fn(e) {
                    reader.removeEventListener('loadend', fn);
                    e.error ? reject(e.error) : resolve(e.target.result);
                  };

                  var reader = new FileReader();
                  reader.addEventListener('loadend', fn);
                  reader.readAsDataURL(file);
                }));

              case 1:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function getCoverLink(_x4) {
        return _ref5.apply(this, arguments);
      }

      return getCoverLink;
    }()
  }, {
    key: 'uploadSong',
    value: function () {
      var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6() {
        var tags, file;
        return _regenerator2.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return _client2.default.constructor.utils.getSongTags(this.scope.songUploadInfo.file);

              case 2:
                tags = _context6.sent;

                tags.fullTitle = this.scope.songUploadInfo.title;

                if (this.scope.songUploadInfo.coverFile) {
                  tags.APIC = this.scope.songUploadInfo.coverFile;
                } else {
                  delete tags.APIC;
                }

                _context6.next = 7;
                return _client2.default.constructor.utils.setSongTags(this.scope.songUploadInfo.file, tags);

              case 7:
                file = _context6.sent;
                _context6.prev = 8;
                _context6.next = 11;
                return _client2.default.addSong(file);

              case 11:
                this.scope.uploadEvent.status = 'success';
                this.scope.uploadEvent.message = 'Song has been uploaded';
                _context6.next = 21;
                break;

              case 15:
                _context6.prev = 15;
                _context6.t0 = _context6['catch'](8);

                if (_context6.t0.code) {
                  _context6.next = 19;
                  break;
                }

                throw _context6.t0;

              case 19:

                this.scope.uploadEvent.status = 'danger';
                this.scope.uploadEvent.message = _context6.t0.message;

              case 21:

                this.resetSongUploadInfo();
                this.el.querySelector('#audio-file').value = '';

              case 23:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this, [[8, 15]]);
      }));

      function uploadSong() {
        return _ref6.apply(this, arguments);
      }

      return uploadSong;
    }()
  }], [{
    key: 'define',
    value: function define() {
      _akili2.default.component('app', this);

      _router2.default.add('app', '^/app', {
        component: this,
        title: 'Museria - decentralized storage'
      });
    }
  }]);
  return App;
}(_akili2.default.Component);

App.template = __webpack_require__(/*! ./app.html */ "./src/browser/face/controllers/app/app.html");
exports.default = App;

/***/ }),

/***/ "./src/browser/face/controllers/app/app.scss":
/*!***************************************************!*\
  !*** ./src/browser/face/controllers/app/app.scss ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./src/browser/face/controllers/app/img/logo.svg":
/*!*******************************************************!*\
  !*** ./src/browser/face/controllers/app/img/logo.svg ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "logo.svg";

/***/ }),

/***/ "./src/browser/face/index.js":
/*!***********************************!*\
  !*** ./src/browser/face/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _regenerator = __webpack_require__(/*! babel-runtime/regenerator */ "./node_modules/babel-runtime/regenerator/index.js");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(/*! babel-runtime/helpers/asyncToGenerator */ "./node_modules/babel-runtime/helpers/asyncToGenerator.js");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

__webpack_require__(/*! ./styles/main.scss */ "./src/browser/face/styles/main.scss");

var _akili = __webpack_require__(/*! akili */ "./node_modules/akili/src/akili.js");

var _akili2 = _interopRequireDefault(_akili);

var _router = __webpack_require__(/*! akili/src/services/router */ "./node_modules/akili/src/services/router.js");

var _router2 = _interopRequireDefault(_router);

var _app = __webpack_require__(/*! ./controllers/app/app */ "./src/browser/face/controllers/app/app.js");

var _app2 = _interopRequireDefault(_app);

var _client = __webpack_require__(/*! ./client */ "./src/browser/face/client.js");

var _client2 = _interopRequireDefault(_client);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_app2.default.define();

document.addEventListener('DOMContentLoaded', (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
  return _regenerator2.default.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;

          _router2.default.init('/app', false);
          _context.next = 4;
          return _client2.default.init();

        case 4:
          _context.next = 6;
          return _akili2.default.init();

        case 6:
          _context.next = 11;
          break;

        case 8:
          _context.prev = 8;
          _context.t0 = _context['catch'](0);

          // eslint-disable-next-line no-console
          console.error(_context.t0);

        case 11:
        case 'end':
          return _context.stop();
      }
    }
  }, _callee, undefined, [[0, 8]]);
})));

/***/ }),

/***/ "./src/browser/face/styles/main.scss":
/*!*******************************************!*\
  !*** ./src/browser/face/styles/main.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vZGlzdC9tdXNlcmlhLmNsaWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWtpbGkvc3JjL2FraWxpLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ha2lsaS9zcmMvY29tcG9uZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ha2lsaS9zcmMvY29tcG9uZW50cy9hLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ha2lsaS9zcmMvY29tcG9uZW50cy9hdWRpby5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWtpbGkvc3JjL2NvbXBvbmVudHMvY29udGVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWtpbGkvc3JjL2NvbXBvbmVudHMvZW1iZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FraWxpL3NyYy9jb21wb25lbnRzL2Zvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWtpbGkvc3JjL2NvbXBvbmVudHMvaWYuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FraWxpL3NyYy9jb21wb25lbnRzL2lmcmFtZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWtpbGkvc3JjL2NvbXBvbmVudHMvaW1hZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FraWxpL3NyYy9jb21wb25lbnRzL2luY2x1ZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FraWxpL3NyYy9jb21wb25lbnRzL2lucHV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ha2lsaS9zcmMvY29tcG9uZW50cy9vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FraWxpL3NyYy9jb21wb25lbnRzL3JhZGlvLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ha2lsaS9zcmMvY29tcG9uZW50cy9yb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWtpbGkvc3JjL2NvbXBvbmVudHMvc2VsZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ha2lsaS9zcmMvY29tcG9uZW50cy9zb3VyY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FraWxpL3NyYy9jb21wb25lbnRzL3RleHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FraWxpL3NyYy9jb21wb25lbnRzL3RleHRhcmVhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ha2lsaS9zcmMvY29tcG9uZW50cy90cmFjay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWtpbGkvc3JjL2NvbXBvbmVudHMvdXJsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ha2lsaS9zcmMvY29tcG9uZW50cy92aWRlby5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWtpbGkvc3JjL2V2ZW50LWVtaXR0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FraWxpL3NyYy9nbG9iYWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ha2lsaS9zcmMvc2NvcGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FraWxpL3NyYy9zZXJ2aWNlcy9yZXF1ZXN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ha2lsaS9zcmMvc2VydmljZXMvcm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ha2lsaS9zcmMvc2VydmljZXMvc3RvcmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FraWxpL3NyYy91dGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL2FycmF5L2Zyb20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9zeW1ib2wvaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy9nZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy90b0NvbnN1bWFibGVBcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL3R5cGVvZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL2FycmF5L2Zyb20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hLWZ1bmN0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYWRkLXRvLXVuc2NvcGFibGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYW4taW5zdGFuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hbi1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hcnJheS1pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NsYXNzb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb3JlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY3JlYXRlLXByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY3R4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZGVmaW5lZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Rlc2NyaXB0b3JzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZG9tLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2VudW0tYnVnLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19lbnVtLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19leHBvcnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19mYWlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Zvci1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hhcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hpZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19odG1sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faWU4LWRvbS1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pbnZva2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pb2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lzLWFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtb2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1jYWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItZGV0ZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1zdGVwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlcmF0b3JzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fbGlicmFyeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX21ldGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19taWNyb3Rhc2suanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWFzc2lnbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZHAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZHBzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdvcGQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wbi1leHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdwby5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1rZXlzLWludGVybmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtcGllLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LXNhcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3BlcmZvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19wcm9taXNlLXJlc29sdmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19wcm9wZXJ0eS1kZXNjLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcmVkZWZpbmUtYWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcmVkZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zZXQtcHJvdG8uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zZXQtc3BlY2llcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NldC10by1zdHJpbmctdGFnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2hhcmVkLWtleS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NoYXJlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NwZWNpZXMtY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zdHJpbmctYXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190YXNrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tYWJzb2x1dGUtaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1pbnRlZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8taW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWxlbmd0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLXByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3VpZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3VzZXItYWdlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL193a3MtZGVmaW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fd2tzLWV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3drcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuYXJyYXkuZnJvbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LmFycmF5Lml0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmFzc2lnbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LW5hbWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYucHJvbWlzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LnN5bWJvbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnByb21pc2UuZmluYWxseS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnByb21pc2UudHJ5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczcuc3ltYm9sLm9ic2VydmFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS1tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvbm9kZV9tb2R1bGVzL3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9mYWNlL2NsaWVudC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9mYWNlL2NvbnRyb2xsZXJzL2FwcC9hcHAuaHRtbCIsIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9mYWNlL2NvbnRyb2xsZXJzL2FwcC9hcHAuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Jyb3dzZXIvZmFjZS9jb250cm9sbGVycy9hcHAvYXBwLnNjc3M/ZDkxZSIsIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9mYWNlL2NvbnRyb2xsZXJzL2FwcC9pbWcvbG9nby5zdmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Jyb3dzZXIvZmFjZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYnJvd3Nlci9mYWNlL3N0eWxlcy9tYWluLnNjc3M/NjUyNCJdLCJuYW1lcyI6WyJBa2lsaSIsIm9wdGlvbnMiLCJkZWJ1ZyIsIl9faW5pdCIsIl9fcm9vdCIsIl9fY29tcG9uZW50cyIsIl9fYWxpYXNlcyIsIl9fc2NvcGVzIiwiX19zdG9yZUxpbmtzIiwiX193aW5kb3ciLCJfX3RhZ3MiLCJfX2lzb2xhdGlvbiIsIl9fZXZhbHVhdGlvbiIsIl9fd3JhcHBpbmciLCJfX3Jvb3RPdXRlckhUTUwiLCJfX29uRXJyb3IiLCJ0cmlnZ2VySW5pdCIsImh0bWxCb29sZWFuQXR0cmlidXRlcyIsImNvbXBvbmVudHMiLCJzZXJ2aWNlcyIsIkNvbXBvbmVudCIsIkV2ZW50RW1pdHRlciIsIlNjb3BlIiwidXRpbHMiLCJnbG9iYWxzIiwiQSIsIkF1ZGlvIiwiQ29udGVudCIsIkZvciIsIkVtYmVkIiwiSWYiLCJJbmNsdWRlIiwiSW5wdXQiLCJJZnJhbWUiLCJJbWFnZSIsIk9iamVjdCIsIk9iamVjdHMiLCJSYWRpbyIsIlJvdXRlIiwiU2VsZWN0IiwiU291cmNlIiwiVGV4dCIsIlRleHRhcmVhIiwiVHJhY2siLCJVcmwiLCJWaWRlbyIsInJlcXVlc3QiLCJyb3V0ZXIiLCJzdG9yZSIsImRlZmluZSIsImNsZWFyR2xvYmFscyIsImtleSIsIkVsZW1lbnQiLCJwcm90b3R5cGUiLCJBcnJheSIsInVud3JhcCIsIndpbmRvdyIsInNldFRpbWVvdXQiLCJzZXRJbnRlcnZhbCIsIlByb21pc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiam9pbkJpbmRpbmdLZXlzIiwia2V5cyIsIm1hcCIsImVsIiwidG9TdHJpbmciLCJqb2luIiwiYWRkU2NvcGUiLCJzY29wZSIsIl9fbmFtZSIsIkVycm9yIiwiZ2V0U2NvcGUiLCJuYW1lIiwicmVtb3ZlU2NvcGUiLCJnZXRBa2lsaVBhcmVudHMiLCJ0cmVlIiwiYXJyIiwiY2hlY2siLCJub2RlIiwicGFyZW50Tm9kZSIsIl9fYWtpbGkiLCJwdXNoIiwic2V0VGVtcGxhdGUiLCJ0ZW1wbGF0ZSIsInJlcGxhY2UiLCJpbm5lckhUTUwiLCJjcmVhdGVTY29wZU5hbWUiLCJjcmVhdGVSYW5kb21TdHJpbmciLCJzdHIiLCJpc29sYXRlIiwiZm4iLCJpc29sYXRpb24iLCJyZXMiLCJlcnIiLCJwcm9wcyIsImsiLCJpIiwibCIsImxlbmd0aCIsInByb3AiLCJjb21wb25lbnQiLCJfX2lzUmVtb3ZlZCIsIl9faXNSZXNvbHZlZCIsIl9fdHJpZ2dlclN0b3JlQW5kQXR0ciIsIl9fZXZhbHVhdGVCeUtleXMiLCJ1bmV2YWx1YXRlIiwiZXZhbHVhdGlvbiIsIndyYXBwaW5nIiwidW5pc29sYXRlIiwiaW5pdGlhbGl6ZSIsInJlY29tcGlsZSIsIl9fcmVjb21waWxlIiwiaXNSb290IiwiY29tcG9uZW50TmFtZSIsInRvRGFzaENhc2UiLCJnZXRBdHRyaWJ1dGUiLCJ0YWdOYW1lIiwidG9Mb3dlckNhc2UiLCJfQ29tcG9uZW50IiwiQ0hFQ0tfQUxJQVNFUyIsInNlbGVjdG9ycyIsInNlbGVjdG9yQWxsIiwibWF0Y2hlcyIsInNlbGVjdG9yIiwiX19jYW5jZWxsZWQiLCJmaW5kIiwicCIsIl9fcHJldmVudCIsIl9fY3JlYXRlIiwiY29tcGlsZSIsInJvb3QiLCJlbGVtZW50cyIsIkFLSUxJX1NTUiIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJyZW1vdmUiLCJuZXN0ZWRJbml0aWFsaXppbmciLCJjaGlsZHJlbiIsImNoaWxkIiwiX19jb21waWxlIiwiYWxsIiwidGhlbiIsInIiLCJfX3Jlc29sdmUiLCJjb25zb2xlIiwid2FybiIsInJlbW92ZUNvbXBvbmVudCIsImFsaWFzIiwicmVtb3ZlQWxpYXMiLCJpc29sYXRlQXJyYXlQcm90b3R5cGUiLCJvbGQiLCJfX2lzUHJveHkiLCJhcHBseSIsImFyZ3VtZW50cyIsImlzb2xhdGVXaW5kb3dGdW5jdGlvbnMiLCJjcmVhdGVDYWxsYmFja0lzb2xhdGlvbiIsImNvbnN0cnVjdG9yIiwiY2F0Y2giLCJpc29sYXRlR2xvYmFscyIsIl9fdGFyZ2V0Iiwid3JhcCIsImlzb2xhdGVFdmVudHMiLCJhZGRFdmVudExpc3RlbmVyIiwiX19ha2lsaUxpc3RlbmVycyIsImFyZ3MiLCJzbGljZSIsImNhbGwiLCJsaW5rIiwibGlzdGVuZXIiLCJzcGxpY2UiLCJwb3MiLCJpc0FycmF5IiwibnVtIiwiaW5kZXgiLCJjYWxsYmFjayIsIl9faXNvbGF0ZWQiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJ2YWx1ZSIsIm9iaiIsImN1cnJlbnQiLCJ3cmFwRnVuY3Rpb24iLCJjIiwiZGVzY3JpcHRvciIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwicmV2ZXJzZSIsImFraWxpV3JhcHBlZEZ1bmN0aW9uIiwidGFnIiwiYWRkVGFnIiwiaGFzVGFnIiwicmVtb3ZlVGFnIiwidW5kZWZpbmVkIiwidHJpZ2dlclRhZyIsIl9fY29tcG9uZW50IiwiX19ldmFsdWF0ZU5vZGUiLCJoYW5kbGVFcnJvcnMiLCJzdGF0dXMiLCJkaXNwYXRjaEV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJkZXRhaWwiLCJpbml0IiwiZG9jdW1lbnQiLCJib2R5Iiwib3V0ZXJIVE1MIiwiZG9jdW1lbnRFbGVtZW50IiwiQUtJTElfU0VSVkVSIiwiaW5pdFNlcnZlclNpZGVIdG1sIiwiaHRtbCIsImluaXRTZXJ2ZXJTaWRlUmVxdWVzdENhY2hlIiwicmVxdWVzdENhY2hlIiwiQUtJTElfQ0xJRU5UIiwicHJlcGFyZVNlcnZlclNpZGVIdG1sIiwiY2hhbmdlU3RhdGUiLCJwcmVwYXJlU2VydmVyU2lkZVJlcXVlc3RDYWNoZSIsImRlaW5pdCIsImRlc3Ryb3kiLCJzdG9yZUtleXMiLCJhdHRyaWJ1dGVzIiwicmVtb3ZlQXR0cmlidXRlIiwicGFyc2VyIiwiRE9NUGFyc2VyIiwiZG9jIiwicGFyc2VGcm9tU3RyaW5nIiwicXVlcnlTZWxlY3RvciIsImF0dHIiLCJzZXRBdHRyaWJ1dGUiLCJpbnN0YW5jZSIsIl9fY2FjaGUiLCJfX2luc3RhbmNlcyIsImNhY2hlIiwiX19tYWluIiwiZXZhbHVhdGlvblJlZ2V4IiwiZXZhbHVhdGlvblJlZ2V4R2xvYmFsIiwiUmVnRXhwIiwic291cmNlIiwic3lzdGVtQXR0cmlidXRlcyIsImNvbnRleHQiLCJleHByZXNzaW9uIiwidmFyaWFibGVzIiwidmFycyIsImV4cHMiLCJzcGxpdCIsIkZ1bmN0aW9uIiwiX19pc01vdW50ZWQiLCJfX2lzQ29tcGlsZWQiLCJfX2JpbmRpbmdzIiwiX19ldmFsdWF0aW5nRXZlbnQiLCJfX3JlY29tcGlsaW5nIiwiX19jb21waWxpbmciLCJfX2Rpc2FibGVQcm94eSIsIl9fZGlzYWJsZVN0b3JlS2V5cyIsIl9fZGlzYWJsZUF0dHJLZXlzIiwiX19jaGlsZHJlbiIsIl9fcGFyZW50IiwiX19wYXJlbnRzIiwiX19jb250ZW50IiwiX19hdHRycyIsIl9fYXR0ckxpbmtzIiwiX19hdHRyaWJ1dGVPZiIsIl9fZXZhbHVhdGlvbkNvbXBvbmVudCIsImNoZWNrQ2hhbmdlcyIsInNldEV2ZW50cyIsInNldFBhcmVudHMiLCJzZXRCb29sZWFuQXR0cmlidXRlcyIsImRlZmluZUF0dHJpYnV0ZXMiLCJfX2NyZWF0ZUNvbXBpbGF0aW9uT3B0aW9ucyIsIl9fY3JlYXRlUmVjb21waWxhdGlvbk9wdGlvbnMiLCJfX3NldEV2ZW50cyIsIl9fc2V0UGFyZW50cyIsIl9fc2V0Qm9vbGVhbkF0dHJpYnV0ZXMiLCJfX2RlZmluZUF0dHJpYnV0ZXMiLCJfX2luaXRpYWxpemUiLCJjcmVhdGVkIiwiYXR0cnMiLCJjb250cm9sIiwiX19jb250cm9sQXR0cmlidXRlcyIsIl9fZXZhbHVhdGlvblBhcmVudCIsInJlc29sdmUiLCJuZXdQYXJlbnQiLCJfX2ludGVycG9sYXRlQXR0cmlidXRlcyIsImludGVycG9sYXRlIiwicGFyZW50Iiwibm9kZVR5cGUiLCJfX2luaXRpYWxpemVOb2RlIiwiY2hpbGROb2RlcyIsIm9uQ29tcGlsZWQiLCJ0cmlnZ2VyIiwiYnViYmxlcyIsImNvbXBpbGVkIiwidGVtcGxhdGVVcmwiLCJnZXQiLCJ0ZW1wbGF0ZUNhY2hlIiwiZGF0YSIsIm9uUmVjb21waWxlZCIsInJlY29tcGlsZWQiLCJvblJlc29sdmVkIiwicmVzb2x2ZWQiLCJfX3Njb3BlIiwiX3Njb3BlIiwiY29udHJvbEF0dHJpYnV0ZXMiLCJldmVudHMiLCJfX2V2ZW50cyIsIl9fbmVzdGVkT2JzZXJ2ZSIsImJvb2xlYW5BdHRyaWJ1dGVzIiwiY29uY2F0Iiwic2V0QXR0ciIsImluZGV4T2YiLCJub2RlTmFtZSIsImhhc0F0dHJpYnV0ZSIsImV2IiwidGVzdCIsInBhcmVudHMiLCJldmFsdWF0aW9uUGFyZW50IiwidHJhbnNwYXJlbnQiLCJfX2RldGFjaCIsIl9fYWRkQ2hpbGQiLCJfX3Byb3BlcnRpZXMiLCJoYXNPd25Qcm9wZXJ0eSIsImdldFByb3BlcnR5QnlLZXlzIiwiX19jb21wYXJlTm9kZVByb3BlcnR5VmFsdWUiLCJfX2dldE5vZGVQcm9wZXJ0eSIsImNvbXBhcmUiLCJjcmVhdGVIYXNoIiwiaGFzaCIsImF0dHJOYW1lIiwiZWxlbWVudE5hbWUiLCJfX2VsZW1lbnQiLCJhdHRyaWJ1dGVOYW1lIiwiQXR0ciIsIm1lc3NhZ2VzIiwibWVzc2FnZSIsIl9fZXhwcmVzc2lvbiIsInRyaW0iLCJjb3VudGVyIiwiYXR0cmlidXRlVmFsdWUiLCJldmFsQ29tcG9uZW50IiwiY29tIiwibSIsImQiLCJldmFsdWF0ZSIsImV4aXN0aW5nQmluZGluZ3MiLCJwYXJlbnRCaW5kaW5ncyIsInBhcnNlVmFsdWUiLCJfX2dldFBhcnNlZEV4cHJlc3Npb24iLCJsaXN0IiwicGFyc2UiLCJfX2NyZWF0ZUV4Y2VwdGlvbk1lc3NhZ2UiLCJfX2NyZWF0ZUtleXNIYXNoIiwicGFyZW50c0hhc2giLCJub3RCaW5kaW5nIiwicGFyZW50VmFsdWUiLCJpc1Njb3BlUHJveHkiLCJyZWFsQ29tcG9uZW50IiwiX19iaW5kQW5kU2V0UHJvcGVydHkiLCJldmFsdWF0ZWQiLCJtYWtlQXR0cmlidXRlVmFsdWUiLCJlIiwiYmluZCIsIl9fZ2V0Qm91bmROb2RlIiwiX19iaW5kIiwiX19zZXROb2RlUHJvcGVydHkiLCJ3aXRob3V0UGFyZW50cyIsImxhc3RQcm9wcyIsInByb3BzTGVuZ3RoIiwiZWxFdmFsdWF0ZSIsImVsZW1lbnQiLCJfX2dldEJpbmQiLCJfX2RhdGEiLCJfX2dldEFsbEJpbmRzIiwiX19pbml0aWFsaXplZCIsIl9fY2hlY2tOb2RlUHJvcGVydHlDaGFuZ2UiLCJfX2Rpc2FibGVLZXlzIiwiY2hlY2tQcm9wIiwiX19zZXQiLCJzaWxlbnQiLCJfayIsIl9wcm9wIiwiX19lbmFibGVLZXlzIiwidmFsIiwiX19ldmFsdWF0ZU5lc3RlZCIsIl9faXNTeXN0ZW1CaW5kaW5nS2V5IiwiZXhlYyIsImV2ZW50IiwiX19jaGVja0V2YWx1YXRpb24iLCJfX2V2YWx1YXRlIiwiaXNCb29sZWFuQXR0cmlidXRlIiwiY2xlYXJBdHRyaWJ1dGUiLCJjYW1lbEF0dHJpYnV0ZSIsInRvQ2FtZWxDYXNlIiwiX19hdHRyaWJ1dGVPbiIsIl9fcHJlcGFyZUF0dHJpYnV0ZUluIiwiX19kaXNhYmxlQXR0cmlidXRlU2V0dGVyIiwiX19hdHRyVHJpZ2dlckJ5TmFtZSIsImNvcHkiLCJwbGFpbiIsImF0dHJpYnV0ZU9mIiwiZXZlbnROYW1lIiwiX19pc0V2ZW50IiwiX19ldmVudCIsImVtaXR0ZXIiLCJfX2hhc0JpbmRpbmdzIiwiX19ldmFsdWF0ZUV2ZW50IiwiaXNBdHRyIiwiaGFzQmluZGluZ3MiLCJpc0Jvb2xlYW4iLCJpc0V2ZW50IiwiX19pc0Jvb2xlYW4iLCJzYXZlQmluZGluZ3MiLCJfX3VuYmluZEJ5Tm9kZXMiLCJfX3VuYmluZFBhcmVudHNCeU5vZGVzIiwiX19pbml0aWFsaXplQXR0cmlidXRlIiwiY2hhbmdlQXR0cmlidXRlIiwiaXNEZWxldGVkIiwiZ2V0QXR0cmlidXRlTm9kZSIsIl9fZGVpbml0aWFsaXplTm9kZSIsIlByb3h5IiwidGFyZ2V0Iiwic2V0IiwiYXR0cktleSIsImRlbGV0ZVByb3BlcnR5IiwiX19pc1N5c3RlbUtleSIsImhhc1Byb3BlcnR5QnlLZXlzIiwiZXhjQXJyIiwicmVhbFRhcmdldCIsImdldE93blByb3BlcnR5VGFyZ2V0IiwiZm9yUGFyZW50cyIsImZvckRhdGEiLCJwb3AiLCJnZXRFbnVtZXJhYmxlUHJvcGVydHlUYXJnZXQiLCJfX2JpbmROb2RlIiwiX19jaGVja0Rpc2FibGVtZW50IiwiQ0hFQ0tfRVhJU1RFTkNFIiwidGFyZ2V0UGFyZW50VmFsdWUiLCJfX2NyZWF0ZUlzb2xhdGlvbk9iamVjdCIsImN1cnJlbnRLZXlzIiwiY3VycmVudEtleVN0cmluZyIsIl9fc3RvcmVUcmlnZ2VyQnlLZXlzIiwiX19hdHRyVHJpZ2dlckJ5S2V5cyIsInR5cGUiLCJwcm94eSIsIl9fZ2V0RGlzYWJsZW1lbnRUeXBlU3RvcmUiLCJfX2FsbCIsImxpbmtzIiwiX19zdG9yZVRyaWdnZXJCeU5hbWUiLCJzb3J0Iiwia2V5U3RyaW5nIiwiaW5mbyIsImRhdGUiLCJEYXRlIiwibm93IiwiY2FsbE9uU3RhcnQiLCJjYXBpdGFsaXplIiwiYXR0cnNLZXlzIiwiZmlsdGVyIiwibWF0Y2giLCJzdGFydEtleXMiLCJvYnNlcnZlIiwiaXNQbGFpbk9iamVjdCIsIkNIRUNLX1BST1hZIiwiX19kaXNhYmxlUHJveHlSZWRlZmluaW5nIiwiX19rZXlzIiwibmVzdGVkIiwidGFyZ2V0S2V5cyIsIl9fb2JzZXJ2ZSIsImlzb2xhdGlvbkhhc2giLCJ1cGRhdGVkQXQiLCJnZXRUaW1lIiwicGFyZW50S2V5c1N0cmluZyIsImtleXNTdHJpbmciLCJjb2xsZWN0Iiwicm9vdEF0dHJzIiwibm9kZXMiLCJfX21hcE5vZGVzIiwic2V0UHJvcGVydHlCeUtleXMiLCJsYXN0IiwiTm9kZSIsInVuYmluZCIsImoiLCJvblJlbW92ZWQiLCJyZW1vdmVkIiwiZGV0YWNoTm9kZXMiLCJkZWluaXRpYWxpemVOb2RlcyIsIl9fZW1wdHkiLCJfX2NsZWFyU3RvcmVMaW5rcyIsIl9fcmVtb3ZlIiwiX19zcGxpY2VDaGlsZCIsIl9fcmVtb3ZlQ2hpbGRyZW4iLCJmaW5kQWxsIiwibGV2ZWxzIiwibGV2ZWwiLCJyaWdodCIsImxldmVsRWxlbWVudHMiLCJoYW5kbGVyIiwidW5zaGlmdCIsIl9fc3RvcmVCeUZ1bmN0aW9uIiwiX19zdG9yZUJ5S2V5cyIsIl9fYXR0ckJ5RnVuY3Rpb24iLCJfX2F0dHJCeUtleXMiLCJfX3Vuc3RvcmVCeUZ1bmN0aW9uIiwiX191bnN0b3JlQnlLZXlzIiwiX191bmF0dHJCeUZ1bmN0aW9uIiwiX191bmF0dHJCeUtleXMiLCJfX2dldFBhcmVudCIsIl9fZ2V0Q2hpbGRyZW4iLCJfX2dldE5lYXIiLCJhcHBlbmRDaGlsZCIsIl9fdHJhbnNpdGlvbiIsInN0YXRlIiwicGFyYW1zIiwicXVlcnkiLCJpc1VybCIsInByZXZlbnREZWZhdWx0IiwibG9jYXRpb24iLCJ1cmwiLCJvblN0YXRlQ2hhbmdlZCIsInNldEFjdGl2aXR5Iiwic2V0U3RhdGUiLCJzZXRQYXJhbXMiLCJzZXRRdWVyeSIsInNldEhhc2giLCJzZXRPcHRpb25zIiwic2V0VXJsIiwicmVzZXRIcmVmIiwiZ2V0U3RhdGUiLCJpc0FjdGl2ZVN0YXRlIiwiaW5BY3RpdmVTdGF0ZSIsImhyZWYiLCJjcmVhdGVTdGF0ZVVybCIsImdldENvbXB1dGVkU3R5bGUiLCJkaXNwbGF5Iiwic3R5bGUiLCJ2YWx1ZUtleSIsInJhbmdlIiwiY3JlYXRlUmFuZ2UiLCJzZWxlY3Rpb24iLCJnZXRTZWxlY3Rpb24iLCJzZWxlY3ROb2RlQ29udGVudHMiLCJjb2xsYXBzZSIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwiZm9jdXMiLCJMb29wIiwiaXRlcmF0b3JzIiwiaXRlcmF0b3JFbCIsInJlc2V0IiwiY3JlYXRlSXRlcmF0b3IiLCJkcmF3IiwiX19pdGVyYXRvciIsIl9fdmFsdWUiLCJjcmVhdGVFbGVtZW50IiwibWFzayIsImNyZWF0ZUl0ZXJhdG9yRWxlbWVudCIsImNvbnRlbnQiLCJmaXJzdENoaWxkIiwiX19pbmRleCIsIl9fa2V5IiwiX19oYXNoIiwiaXRlcmF0b3IiLCJzZXRJbmRleCIsInNldEtleSIsInNldFZhbHVlIiwiX19wcm9taXNlcyIsImNsb25lTm9kZSIsImEiLCJiIiwibG9vcCIsIml0ZXJhdGUiLCJvbk91dCIsImZvciIsImlzRm9yIiwiY2FuY2VsIiwic2F2ZVByb3h5IiwiRWxzZUlmIiwiRWxzZSIsImFjdGl2ZSIsInJlY3JlYXRlIiwiaXNDb21waWxlZCIsInNldFJlY3JlYXRpb24iLCJzZXRJcyIsImNvbXBpbGF0aW9uIiwibmV4dCIsIm5leHRFbGVtZW50U2libGluZyIsInJlc3VsdCIsInNldFByb3BlcnR5IiwiZW1wdHkiLCJjb25uZWN0aW9uIiwic2V0Q2FjaGUiLCJhYm9ydCIsIm9uU3RhcnQiLCJ4aHIiLCJvbkxvYWQiLCJvbkVycm9yIiwiaXNDaGVja2JveCIsImlzUmFkaW8iLCJzZXRDaGVja2VkIiwiY2hlY2tlZCIsIm9uQ2hhbmdlIiwiZGlzcGF0Y2giLCJFdmVudCIsImNoYW5nZVJhZGlvIiwicmFkaW8iLCJ1cmxBdHRyaWJ1dGUiLCJSYWRpb0J1dHRvbiIsIml0ZXJhYmxlIiwiZ2V0UmFkaW9WYWx1ZSIsInByZXZWYWx1ZSIsIm9uUmFkaW8iLCJzZXROYW1lcyIsInByZXYiLCJpc1RydWUiLCJpc1NlbGVjdGVkIiwidHJhbnNpdGlvbiIsImxvYWQiLCJwYXRoIiwiZ2V0UGFyZW50U2NvcGVUcmFuc2l0aW9uIiwiZXhpc3RzIiwiT3B0aW9uIiwiaXRlcmF0b3JUYWdOYW1lIiwiaXNNdWx0aXBsZSIsImdldENvbnRlbnQiLCJzZXRNdWx0aXBsZSIsInNldENvbnRlbnQiLCJkcmF3U2VsZWN0IiwiY2hhbmdlVmFsdWUiLCJmb3JtYXRWYWx1ZSIsInNlbGVjdGVkIiwib3B0aW9uIiwicmVkZWZpbmUiLCJkZWNvZGVIdG1sRW50aXRpZXMiLCJzZXRTZWxlY3RlZCIsImRlYm91bmNlSW50ZXJ2YWwiLCJkZWJvdW5jZSIsIm9uRGVib3VuY2UiLCJzZXRGb2N1cyIsInNldERlYm91bmNlIiwiaW50ZXJ2YWwiLCJzZXRFbGVtZW50Rm9jdXMiLCJzZXRFbGVtZW50Qmx1ciIsImJsdXIiLCJmb3JjZSIsIl9fcmVtb3ZlZCIsImluRXZhbHVhdGluZyIsInByZXBhcmVPcHRpb25zIiwiX0V2ZW50IiwiX19wcmVwYXJlQXR0cmlidXRlT3V0IiwiX19lbCIsIlJlcXVlc3QiLCJiYXNlVXJsIiwiZGVmYXVsdHMiLCJnZXRIZWFkZXJzIiwiaGVhZGVycyIsImdldEFsbFJlc3BvbnNlSGVhZGVycyIsImxpbmUiLCJzdWJzdHJpbmciLCJzdGF0dXNFcnJvclBhdHRlcm4iLCJyZWplY3QiLCJtZXRob2QiLCJYTUxIdHRwUmVxdWVzdCIsImJlZm9yZSIsInRyYW5zZm9ybUJlZm9yZSIsImpzb24iLCJyZXNwb25zZVR5cGUiLCJmb3JtIiwiY3JlYXRlRm9ybURhdGEiLCJwYXJhbXNUb1F1ZXJ5IiwidG9VcHBlckNhc2UiLCJjcmVhdGVDYWNoZUhhc2giLCJ1c2VyIiwicGFzc3dvcmQiLCJfY2FjaGUiLCJnZXRDYWNoZSIsImNyZWF0ZWRBdCIsInRyYW5zZm9ybUFmdGVyIiwib3BlbiIsInRpbWVvdXQiLCJ3aXRoQ3JlZGVudGlhbHMiLCJoZWFkZXJLZXlzIiwic2V0UmVxdWVzdEhlYWRlciIsIm9uUHJvZ3Jlc3MiLCJvbnByb2dyZXNzIiwib25sb2FkIiwicmVzcG9uc2UiLCJyZWFkeVN0YXRlIiwic3RhdHVzVGV4dCIsInJlc3BvbnNlVGV4dCIsInJlc3BvbnNlWE1MIiwicmVzcG9uc2VVUkwiLCJjcmVhdGVDYWNoZSIsIm9udGltZW91dCIsIm9uZXJyb3IiLCJzZW5kIiwic2VwIiwiZXEiLCJrcyIsImVuY29kZVVSSUNvbXBvbmVudCIsInYiLCJvcHQiLCJhbXBzIiwiZXFzIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwibmFtZXNwYWNlIiwiZmQiLCJGb3JtRGF0YSIsImFwcGVuZCIsInRvSVNPU3RyaW5nIiwiYWRkSW5zdGFuY2UiLCJyZW1vdmVJbnN0YW5jZSIsIlRyYW5zaXRpb24iLCJwcmV2aW91cyIsInJvdXRlcyIsInN0YXRlcyIsIl9fZmluaXNoZWQiLCJyb3V0ZSIsImhhc1N0YXRlIiwicGFyYW1LZXlzIiwiZnVsbFBhdHRlcm4iLCJfX3BhcmFtUmVnZXgiLCJmIiwicXVlcnlLZXlzIiwid2F0Y2hIYXNoIiwicHJldlJvdXRlIiwiZ2V0Um91dGUiLCJpbmNsdWRlS2V5cyIsImZpbmlzaCIsIl9fcXVldWUiLCJoYXNoTW9kZSIsIl9fcmVkaXJlY3RzIiwiX19yb3V0ZVNlbGVjdG9yIiwiYWRkIiwicGF0dGVybiIsImRlZmF1bHRPcHRpb25zIiwiYWJzdHJhY3QiLCJoYXMiLCJtYW51YWwiLCJwcmVwYXJlU3RhdGVBcmdzIiwiYmFjayIsImhpc3RvcnkiLCJnbyIsImZvcndhcmQiLCJkZWZhdWx0VXJsIiwib2xkUHVzaFN0YXRlIiwicHVzaFN0YXRlIiwiZXJyb3IiLCJfX29uU3RhdGVDaGFuZ2VIYW5kbGVyIiwiaW5pdFN0YXRlIiwicGFyZW50TmFtZSIsInNwbGl0U2xhc2hlcyIsInJlbW92ZVN0YXRlIiwic2V0SGFzaFVybCIsInNldEhpc3RvcnlVcmwiLCJyZXBsYWNlVXJsIiwicmVwbGFjZUhhc2hVcmwiLCJyZXBsYWNlSGlzdG9yeVVybCIsInJlcGxhY2VTdGF0ZSIsImdldFVybCIsImdldEhhc2hVcmwiLCJnZXRIaXN0b3J5VXJsIiwicGF0aG5hbWUiLCJzZWFyY2giLCJnZXRVcmxRdWVyeSIsImdldEhhc2hVcmxRdWVyeSIsImdldEhpc3RvcnlVcmxRdWVyeSIsInBhcmFtc0Zyb21RdWVyeSIsInByZXBhcmUiLCJwYXJhbXNUZW1wIiwicHJlcGFyZVN0YXRlUGFyYW1zIiwicXVlcnlUZW1wIiwicHJlcGFyZVN0YXRlUXVlcnkiLCJoYXNoVGVtcCIsInByZXBhcmVTdGF0ZUhhc2giLCJlbXB0eUhhc2giLCJuZXdBcmdzIiwiY3JlYXRlU3RhdGVPYmplY3RBcmdzIiwiY3JlYXRlU3RhdGVIYXNoQXJncyIsImdldFBhdHRlcm5Db250ZW50IiwidXJsUGF0dGVybiIsInJlZ2V4IiwiaXNJbmNsdWRlZCIsImluY2x1ZGVzIiwiZ2V0QXJyYXlQYXR0ZXJuQ29udGVudCIsImdldFN0YXRlc0J5TGV2ZWwiLCJyZWxvYWQiLCJjbGVhckludGVydmFsIiwic2V0UGF0aCIsInJlYWxVcmwiLCJpc0RpZmZlcmVudCIsImlzUm91dGVDaGFuZ2VkIiwidGl0bGUiLCJsb2FkZWQiLCJzZXRUcmFuc2l0aW9uIiwic2F2ZVNjcm9sbFBvc2l0aW9uIiwic2Nyb2xsVG8iLCJjbGFzcyIsImNsYXNzZXMiLCJzdHlsZXMiLCJkZWwiLCJleGNsdWRlIiwiaXRlbSIsImZpbHRlcmVkIiwib3JkZXIiLCJhViIsImJWIiwibmV3T2JqIiwib2JqS2V5cyIsImV4Y2x1ZGVLZXlzIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJpZ25vcmVVbmRlZmluZWQiLCJjbGVhclVuZGVmaW5lZCIsImFLZXlzIiwiYktleXMiLCJTdHJpbmciLCJjaGFyIiwiY2hhckNvZGVBdCIsImVuY29kZUh0bWxFbnRpdGllcyIsInRleHRDb250ZW50Iiwib2JqZWN0IiwicmVkdWNlIiwibyIsImRlbGV0ZVByb3BlcnR5QnlLZXlzIiwicHJvdG8iLCJNYXRoIiwicmFuZG9tIiwiZGVsYXkiLCJjbGVhclRpbWVvdXQiLCJfX2RlYm91bmNlVGltZW91dCIsImNsaWVudCIsIkNsaWVudE11c2VyaWEiLCJhZGRyZXNzIiwiaG9zdG5hbWUiLCJwb3J0IiwicHJvdG9jb2wiLCJBcHAiLCJzZWFyY2hJbnB1dEZvY3VzIiwidXBsb2FkRm9ybUZhaWxzIiwiY292ZXIiLCJmaW5kU29uZyIsImNob29zZVNvbmciLCJwcmVwYXJlQXVkaW8iLCJwcmVwYXJlQ292ZXIiLCJyZW1vdmVDb3ZlciIsInVwbG9hZFNvbmciLCJyZXNldFNlYXJjaEV2ZW50IiwicmVzZXRVcGxvYWRFdmVudCIsImNoZWNrVXBsb2FkU29uZ1RpdGxlIiwicmVzZXRTb25nVXBsb2FkSW5mbyIsInNlYXJjaEV2ZW50IiwibWV0YSIsInVwbG9hZEV2ZW50Iiwic29uZ1VwbG9hZEluZm8iLCLRgW92ZXIiLCJmaWxlIiwiY292ZXJGaWxlIiwiY2xpY2siLCJpc1NvbmdUaXRsZSIsImdldFNvbmciLCJhdWRpb0xpbmsiLCJjb2RlIiwiZ2V0U29uZ1RhZ3MiLCJ0YWdzIiwiZnVsbFRpdGxlIiwiQVBJQyIsIkJsb2IiLCJnZXRDb3ZlckxpbmsiLCJyZWFkZXIiLCJGaWxlUmVhZGVyIiwicmVhZEFzRGF0YVVSTCIsInNldFNvbmdUYWdzIiwiYWRkU29uZyIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiI7Ozs7OztRQUFBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBOzs7UUFHQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0EsMENBQTBDLGdDQUFnQztRQUMxRTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBLHdEQUF3RCxr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QUNBLHdDQUF3QyxXQUFXO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLFNBQVM7QUFDVDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0NBQW9DLGNBQWM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlDQUFpQyxrQkFBa0I7QUFDbkQ7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0EsWUFBWTtBQUNaOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7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QUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQUE5QyxJOzs7Ozs7Ozs7OztBQ1JBLHVDIiwiZmlsZSI6Im11c2VyaWEuZmFjZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL1wiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gXCIuL3NyYy9icm93c2VyL2ZhY2UvaW5kZXguanNcIik7XG4iLCIvKiFcbiAqIG11c2VyaWEgY2xpZW50XG4gKiBAdmVyc2lvbiAwLjAuN1xuICoge0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9vcnRleHgvbXVzZXJpYX1cbiAqL1xuIWZ1bmN0aW9uKHQsZSl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9ZSgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sZSk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5DbGllbnRNdXNlcmlhPWUoKTp0LkNsaWVudE11c2VyaWE9ZSgpfSh3aW5kb3csKGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXt9O2Z1bmN0aW9uIG4oaSl7aWYoZVtpXSlyZXR1cm4gZVtpXS5leHBvcnRzO3ZhciByPWVbaV09e2k6aSxsOiExLGV4cG9ydHM6e319O3JldHVybiB0W2ldLmNhbGwoci5leHBvcnRzLHIsci5leHBvcnRzLG4pLHIubD0hMCxyLmV4cG9ydHN9cmV0dXJuIG4ubT10LG4uYz1lLG4uZD1mdW5jdGlvbih0LGUsaSl7bi5vKHQsZSl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse2VudW1lcmFibGU6ITAsZ2V0Oml9KX0sbi5yPWZ1bmN0aW9uKHQpe1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9LG4udD1mdW5jdGlvbih0LGUpe2lmKDEmZSYmKHQ9bih0KSksOCZlKXJldHVybiB0O2lmKDQmZSYmXCJvYmplY3RcIj09dHlwZW9mIHQmJnQmJnQuX19lc01vZHVsZSlyZXR1cm4gdDt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO2lmKG4ucihpKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoaSxcImRlZmF1bHRcIix7ZW51bWVyYWJsZTohMCx2YWx1ZTp0fSksMiZlJiZcInN0cmluZ1wiIT10eXBlb2YgdClmb3IodmFyIHIgaW4gdCluLmQoaSxyLGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdfS5iaW5kKG51bGwscikpO3JldHVybiBpfSxuLm49ZnVuY3Rpb24odCl7dmFyIGU9dCYmdC5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIHQuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gdH07cmV0dXJuIG4uZChlLFwiYVwiLGUpLGV9LG4ubz1mdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKX0sbi5wPVwiXCIsbihuLnM9NzkpfShbZnVuY3Rpb24odCxlKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBPYmplY3QuY3JlYXRlP3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3Quc3VwZXJfPWUsdC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSl9OnQuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3Quc3VwZXJfPWU7dmFyIG49ZnVuY3Rpb24oKXt9O24ucHJvdG90eXBlPWUucHJvdG90eXBlLHQucHJvdG90eXBlPW5ldyBuLHQucHJvdG90eXBlLmNvbnN0cnVjdG9yPXR9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7KGZ1bmN0aW9uKHQpe1xuLyohXG4gKiBUaGUgYnVmZmVyIG1vZHVsZSBmcm9tIG5vZGUuanMsIGZvciB0aGUgYnJvd3Nlci5cbiAqXG4gKiBAYXV0aG9yICAgRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cDovL2Zlcm9zcy5vcmc+XG4gKiBAbGljZW5zZSAgTUlUXG4gKi9cbnZhciBpPW4oODEpLHI9big4MiksYT1uKDQ3KTtmdW5jdGlvbiBvKCl7cmV0dXJuIGMuVFlQRURfQVJSQVlfU1VQUE9SVD8yMTQ3NDgzNjQ3OjEwNzM3NDE4MjN9ZnVuY3Rpb24gcyh0LGUpe2lmKG8oKTxlKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW52YWxpZCB0eXBlZCBhcnJheSBsZW5ndGhcIik7cmV0dXJuIGMuVFlQRURfQVJSQVlfU1VQUE9SVD8odD1uZXcgVWludDhBcnJheShlKSkuX19wcm90b19fPWMucHJvdG90eXBlOihudWxsPT09dCYmKHQ9bmV3IGMoZSkpLHQubGVuZ3RoPWUpLHR9ZnVuY3Rpb24gYyh0LGUsbil7aWYoIShjLlRZUEVEX0FSUkFZX1NVUFBPUlR8fHRoaXMgaW5zdGFuY2VvZiBjKSlyZXR1cm4gbmV3IGModCxlLG4pO2lmKFwibnVtYmVyXCI9PXR5cGVvZiB0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSl0aHJvdyBuZXcgRXJyb3IoXCJJZiBlbmNvZGluZyBpcyBzcGVjaWZpZWQgdGhlbiB0aGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtyZXR1cm4gcCh0aGlzLHQpfXJldHVybiB1KHRoaXMsdCxlLG4pfWZ1bmN0aW9uIHUodCxlLG4saSl7aWYoXCJudW1iZXJcIj09dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJ2YWx1ZVwiIGFyZ3VtZW50IG11c3Qgbm90IGJlIGEgbnVtYmVyJyk7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIEFycmF5QnVmZmVyJiZlIGluc3RhbmNlb2YgQXJyYXlCdWZmZXI/ZnVuY3Rpb24odCxlLG4saSl7aWYoZS5ieXRlTGVuZ3RoLG48MHx8ZS5ieXRlTGVuZ3RoPG4pdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCInb2Zmc2V0JyBpcyBvdXQgb2YgYm91bmRzXCIpO2lmKGUuYnl0ZUxlbmd0aDxuKyhpfHwwKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIidsZW5ndGgnIGlzIG91dCBvZiBib3VuZHNcIik7ZT12b2lkIDA9PT1uJiZ2b2lkIDA9PT1pP25ldyBVaW50OEFycmF5KGUpOnZvaWQgMD09PWk/bmV3IFVpbnQ4QXJyYXkoZSxuKTpuZXcgVWludDhBcnJheShlLG4saSk7Yy5UWVBFRF9BUlJBWV9TVVBQT1JUPyh0PWUpLl9fcHJvdG9fXz1jLnByb3RvdHlwZTp0PWYodCxlKTtyZXR1cm4gdH0odCxlLG4saSk6XCJzdHJpbmdcIj09dHlwZW9mIGU/ZnVuY3Rpb24odCxlLG4pe1wic3RyaW5nXCI9PXR5cGVvZiBuJiZcIlwiIT09bnx8KG49XCJ1dGY4XCIpO2lmKCFjLmlzRW5jb2RpbmcobikpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJlbmNvZGluZ1wiIG11c3QgYmUgYSB2YWxpZCBzdHJpbmcgZW5jb2RpbmcnKTt2YXIgaT0wfGgoZSxuKSxyPSh0PXModCxpKSkud3JpdGUoZSxuKTtyIT09aSYmKHQ9dC5zbGljZSgwLHIpKTtyZXR1cm4gdH0odCxlLG4pOmZ1bmN0aW9uKHQsZSl7aWYoYy5pc0J1ZmZlcihlKSl7dmFyIG49MHxkKGUubGVuZ3RoKTtyZXR1cm4gMD09PSh0PXModCxuKSkubGVuZ3RoP3Q6KGUuY29weSh0LDAsMCxuKSx0KX1pZihlKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgQXJyYXlCdWZmZXImJmUuYnVmZmVyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXJ8fFwibGVuZ3RoXCJpbiBlKXJldHVyblwibnVtYmVyXCIhPXR5cGVvZiBlLmxlbmd0aHx8KGk9ZS5sZW5ndGgpIT1pP3ModCwwKTpmKHQsZSk7aWYoXCJCdWZmZXJcIj09PWUudHlwZSYmYShlLmRhdGEpKXJldHVybiBmKHQsZS5kYXRhKX12YXIgaTt0aHJvdyBuZXcgVHlwZUVycm9yKFwiRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZywgQnVmZmVyLCBBcnJheUJ1ZmZlciwgQXJyYXksIG9yIGFycmF5LWxpa2Ugb2JqZWN0LlwiKX0odCxlKX1mdW5jdGlvbiBsKHQpe2lmKFwibnVtYmVyXCIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoJ1wic2l6ZVwiIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKTtpZih0PDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1wic2l6ZVwiIGFyZ3VtZW50IG11c3Qgbm90IGJlIG5lZ2F0aXZlJyl9ZnVuY3Rpb24gcCh0LGUpe2lmKGwoZSksdD1zKHQsZTwwPzA6MHxkKGUpKSwhYy5UWVBFRF9BUlJBWV9TVVBQT1JUKWZvcih2YXIgbj0wO248ZTsrK24pdFtuXT0wO3JldHVybiB0fWZ1bmN0aW9uIGYodCxlKXt2YXIgbj1lLmxlbmd0aDwwPzA6MHxkKGUubGVuZ3RoKTt0PXModCxuKTtmb3IodmFyIGk9MDtpPG47aSs9MSl0W2ldPTI1NSZlW2ldO3JldHVybiB0fWZ1bmN0aW9uIGQodCl7aWYodD49bygpKXRocm93IG5ldyBSYW5nZUVycm9yKFwiQXR0ZW1wdCB0byBhbGxvY2F0ZSBCdWZmZXIgbGFyZ2VyIHRoYW4gbWF4aW11bSBzaXplOiAweFwiK28oKS50b1N0cmluZygxNikrXCIgYnl0ZXNcIik7cmV0dXJuIDB8dH1mdW5jdGlvbiBoKHQsZSl7aWYoYy5pc0J1ZmZlcih0KSlyZXR1cm4gdC5sZW5ndGg7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIEFycmF5QnVmZmVyJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBBcnJheUJ1ZmZlci5pc1ZpZXcmJihBcnJheUJ1ZmZlci5pc1ZpZXcodCl8fHQgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikpcmV0dXJuIHQuYnl0ZUxlbmd0aDtcInN0cmluZ1wiIT10eXBlb2YgdCYmKHQ9XCJcIit0KTt2YXIgbj10Lmxlbmd0aDtpZigwPT09bilyZXR1cm4gMDtmb3IodmFyIGk9ITE7Oylzd2l0Y2goZSl7Y2FzZVwiYXNjaWlcIjpjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gbjtjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpjYXNlIHZvaWQgMDpyZXR1cm4geih0KS5sZW5ndGg7Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIDIqbjtjYXNlXCJoZXhcIjpyZXR1cm4gbj4+PjE7Y2FzZVwiYmFzZTY0XCI6cmV0dXJuIFUodCkubGVuZ3RoO2RlZmF1bHQ6aWYoaSlyZXR1cm4geih0KS5sZW5ndGg7ZT0oXCJcIitlKS50b0xvd2VyQ2FzZSgpLGk9ITB9fWZ1bmN0aW9uIG0odCxlLG4pe3ZhciBpPSExO2lmKCh2b2lkIDA9PT1lfHxlPDApJiYoZT0wKSxlPnRoaXMubGVuZ3RoKXJldHVyblwiXCI7aWYoKHZvaWQgMD09PW58fG4+dGhpcy5sZW5ndGgpJiYobj10aGlzLmxlbmd0aCksbjw9MClyZXR1cm5cIlwiO2lmKChuPj4+PTApPD0oZT4+Pj0wKSlyZXR1cm5cIlwiO2Zvcih0fHwodD1cInV0ZjhcIik7Oylzd2l0Y2godCl7Y2FzZVwiaGV4XCI6cmV0dXJuIEEodGhpcyxlLG4pO2Nhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOnJldHVybiBUKHRoaXMsZSxuKTtjYXNlXCJhc2NpaVwiOnJldHVybiBDKHRoaXMsZSxuKTtjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gUyh0aGlzLGUsbik7Y2FzZVwiYmFzZTY0XCI6cmV0dXJuIGsodGhpcyxlLG4pO2Nhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiBGKHRoaXMsZSxuKTtkZWZhdWx0OmlmKGkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK3QpO3Q9KHQrXCJcIikudG9Mb3dlckNhc2UoKSxpPSEwfX1mdW5jdGlvbiBnKHQsZSxuKXt2YXIgaT10W2VdO3RbZV09dFtuXSx0W25dPWl9ZnVuY3Rpb24geSh0LGUsbixpLHIpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm4tMTtpZihcInN0cmluZ1wiPT10eXBlb2Ygbj8oaT1uLG49MCk6bj4yMTQ3NDgzNjQ3P249MjE0NzQ4MzY0NzpuPC0yMTQ3NDgzNjQ4JiYobj0tMjE0NzQ4MzY0OCksbj0rbixpc05hTihuKSYmKG49cj8wOnQubGVuZ3RoLTEpLG48MCYmKG49dC5sZW5ndGgrbiksbj49dC5sZW5ndGgpe2lmKHIpcmV0dXJuLTE7bj10Lmxlbmd0aC0xfWVsc2UgaWYobjwwKXtpZighcilyZXR1cm4tMTtuPTB9aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPWMuZnJvbShlLGkpKSxjLmlzQnVmZmVyKGUpKXJldHVybiAwPT09ZS5sZW5ndGg/LTE6Yih0LGUsbixpLHIpO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBlKXJldHVybiBlJj0yNTUsYy5UWVBFRF9BUlJBWV9TVVBQT1JUJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBVaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mP3I/VWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKHQsZSxuKTpVaW50OEFycmF5LnByb3RvdHlwZS5sYXN0SW5kZXhPZi5jYWxsKHQsZSxuKTpiKHQsW2VdLG4saSxyKTt0aHJvdyBuZXcgVHlwZUVycm9yKFwidmFsIG11c3QgYmUgc3RyaW5nLCBudW1iZXIgb3IgQnVmZmVyXCIpfWZ1bmN0aW9uIGIodCxlLG4saSxyKXt2YXIgYSxvPTEscz10Lmxlbmd0aCxjPWUubGVuZ3RoO2lmKHZvaWQgMCE9PWkmJihcInVjczJcIj09PShpPVN0cmluZyhpKS50b0xvd2VyQ2FzZSgpKXx8XCJ1Y3MtMlwiPT09aXx8XCJ1dGYxNmxlXCI9PT1pfHxcInV0Zi0xNmxlXCI9PT1pKSl7aWYodC5sZW5ndGg8Mnx8ZS5sZW5ndGg8MilyZXR1cm4tMTtvPTIscy89MixjLz0yLG4vPTJ9ZnVuY3Rpb24gdSh0LGUpe3JldHVybiAxPT09bz90W2VdOnQucmVhZFVJbnQxNkJFKGUqbyl9aWYocil7dmFyIGw9LTE7Zm9yKGE9bjthPHM7YSsrKWlmKHUodCxhKT09PXUoZSwtMT09PWw/MDphLWwpKXtpZigtMT09PWwmJihsPWEpLGEtbCsxPT09YylyZXR1cm4gbCpvfWVsc2UtMSE9PWwmJihhLT1hLWwpLGw9LTF9ZWxzZSBmb3IobitjPnMmJihuPXMtYyksYT1uO2E+PTA7YS0tKXtmb3IodmFyIHA9ITAsZj0wO2Y8YztmKyspaWYodSh0LGErZikhPT11KGUsZikpe3A9ITE7YnJlYWt9aWYocClyZXR1cm4gYX1yZXR1cm4tMX1mdW5jdGlvbiB2KHQsZSxuLGkpe249TnVtYmVyKG4pfHwwO3ZhciByPXQubGVuZ3RoLW47aT8oaT1OdW1iZXIoaSkpPnImJihpPXIpOmk9cjt2YXIgYT1lLmxlbmd0aDtpZihhJTIhPTApdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgaGV4IHN0cmluZ1wiKTtpPmEvMiYmKGk9YS8yKTtmb3IodmFyIG89MDtvPGk7KytvKXt2YXIgcz1wYXJzZUludChlLnN1YnN0cigyKm8sMiksMTYpO2lmKGlzTmFOKHMpKXJldHVybiBvO3RbbitvXT1zfXJldHVybiBvfWZ1bmN0aW9uIHcodCxlLG4saSl7cmV0dXJuIE4oeihlLHQubGVuZ3RoLW4pLHQsbixpKX1mdW5jdGlvbiB4KHQsZSxuLGkpe3JldHVybiBOKGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTA7bjx0Lmxlbmd0aDsrK24pZS5wdXNoKDI1NSZ0LmNoYXJDb2RlQXQobikpO3JldHVybiBlfShlKSx0LG4saSl9ZnVuY3Rpb24gRCh0LGUsbixpKXtyZXR1cm4geCh0LGUsbixpKX1mdW5jdGlvbiBfKHQsZSxuLGkpe3JldHVybiBOKFUoZSksdCxuLGkpfWZ1bmN0aW9uIEUodCxlLG4saSl7cmV0dXJuIE4oZnVuY3Rpb24odCxlKXtmb3IodmFyIG4saSxyLGE9W10sbz0wO288dC5sZW5ndGgmJiEoKGUtPTIpPDApOysrbyluPXQuY2hhckNvZGVBdChvKSxpPW4+Pjgscj1uJTI1NixhLnB1c2gociksYS5wdXNoKGkpO3JldHVybiBhfShlLHQubGVuZ3RoLW4pLHQsbixpKX1mdW5jdGlvbiBrKHQsZSxuKXtyZXR1cm4gMD09PWUmJm49PT10Lmxlbmd0aD9pLmZyb21CeXRlQXJyYXkodCk6aS5mcm9tQnl0ZUFycmF5KHQuc2xpY2UoZSxuKSl9ZnVuY3Rpb24gVCh0LGUsbil7bj1NYXRoLm1pbih0Lmxlbmd0aCxuKTtmb3IodmFyIGk9W10scj1lO3I8bjspe3ZhciBhLG8scyxjLHU9dFtyXSxsPW51bGwscD11PjIzOT80OnU+MjIzPzM6dT4xOTE/MjoxO2lmKHIrcDw9bilzd2l0Y2gocCl7Y2FzZSAxOnU8MTI4JiYobD11KTticmVhaztjYXNlIDI6MTI4PT0oMTkyJihhPXRbcisxXSkpJiYoYz0oMzEmdSk8PDZ8NjMmYSk+MTI3JiYobD1jKTticmVhaztjYXNlIDM6YT10W3IrMV0sbz10W3IrMl0sMTI4PT0oMTkyJmEpJiYxMjg9PSgxOTImbykmJihjPSgxNSZ1KTw8MTJ8KDYzJmEpPDw2fDYzJm8pPjIwNDcmJihjPDU1Mjk2fHxjPjU3MzQzKSYmKGw9Yyk7YnJlYWs7Y2FzZSA0OmE9dFtyKzFdLG89dFtyKzJdLHM9dFtyKzNdLDEyOD09KDE5MiZhKSYmMTI4PT0oMTkyJm8pJiYxMjg9PSgxOTImcykmJihjPSgxNSZ1KTw8MTh8KDYzJmEpPDwxMnwoNjMmbyk8PDZ8NjMmcyk+NjU1MzUmJmM8MTExNDExMiYmKGw9Yyl9bnVsbD09PWw/KGw9NjU1MzMscD0xKTpsPjY1NTM1JiYobC09NjU1MzYsaS5wdXNoKGw+Pj4xMCYxMDIzfDU1Mjk2KSxsPTU2MzIwfDEwMjMmbCksaS5wdXNoKGwpLHIrPXB9cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXQubGVuZ3RoO2lmKGU8PTQwOTYpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLHQpO3ZhciBuPVwiXCIsaT0wO2Zvcig7aTxlOyluKz1TdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyx0LnNsaWNlKGksaSs9NDA5NikpO3JldHVybiBufShpKX1lLkJ1ZmZlcj1jLGUuU2xvd0J1ZmZlcj1mdW5jdGlvbih0KXsrdCE9dCYmKHQ9MCk7cmV0dXJuIGMuYWxsb2MoK3QpfSxlLklOU1BFQ1RfTUFYX0JZVEVTPTUwLGMuVFlQRURfQVJSQVlfU1VQUE9SVD12b2lkIDAhPT10LlRZUEVEX0FSUkFZX1NVUFBPUlQ/dC5UWVBFRF9BUlJBWV9TVVBQT1JUOmZ1bmN0aW9uKCl7dHJ5e3ZhciB0PW5ldyBVaW50OEFycmF5KDEpO3JldHVybiB0Ll9fcHJvdG9fXz17X19wcm90b19fOlVpbnQ4QXJyYXkucHJvdG90eXBlLGZvbzpmdW5jdGlvbigpe3JldHVybiA0Mn19LDQyPT09dC5mb28oKSYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5zdWJhcnJheSYmMD09PXQuc3ViYXJyYXkoMSwxKS5ieXRlTGVuZ3RofWNhdGNoKHQpe3JldHVybiExfX0oKSxlLmtNYXhMZW5ndGg9bygpLGMucG9vbFNpemU9ODE5MixjLl9hdWdtZW50PWZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fXz1jLnByb3RvdHlwZSx0fSxjLmZyb209ZnVuY3Rpb24odCxlLG4pe3JldHVybiB1KG51bGwsdCxlLG4pfSxjLlRZUEVEX0FSUkFZX1NVUFBPUlQmJihjLnByb3RvdHlwZS5fX3Byb3RvX189VWludDhBcnJheS5wcm90b3R5cGUsYy5fX3Byb3RvX189VWludDhBcnJheSxcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuc3BlY2llcyYmY1tTeW1ib2wuc3BlY2llc109PT1jJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoYyxTeW1ib2wuc3BlY2llcyx7dmFsdWU6bnVsbCxjb25maWd1cmFibGU6ITB9KSksYy5hbGxvYz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuLGkpe3JldHVybiBsKGUpLGU8PTA/cyh0LGUpOnZvaWQgMCE9PW4/XCJzdHJpbmdcIj09dHlwZW9mIGk/cyh0LGUpLmZpbGwobixpKTpzKHQsZSkuZmlsbChuKTpzKHQsZSl9KG51bGwsdCxlLG4pfSxjLmFsbG9jVW5zYWZlPWZ1bmN0aW9uKHQpe3JldHVybiBwKG51bGwsdCl9LGMuYWxsb2NVbnNhZmVTbG93PWZ1bmN0aW9uKHQpe3JldHVybiBwKG51bGwsdCl9LGMuaXNCdWZmZXI9ZnVuY3Rpb24odCl7cmV0dXJuIShudWxsPT10fHwhdC5faXNCdWZmZXIpfSxjLmNvbXBhcmU9ZnVuY3Rpb24odCxlKXtpZighYy5pc0J1ZmZlcih0KXx8IWMuaXNCdWZmZXIoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFyZ3VtZW50cyBtdXN0IGJlIEJ1ZmZlcnNcIik7aWYodD09PWUpcmV0dXJuIDA7Zm9yKHZhciBuPXQubGVuZ3RoLGk9ZS5sZW5ndGgscj0wLGE9TWF0aC5taW4obixpKTtyPGE7KytyKWlmKHRbcl0hPT1lW3JdKXtuPXRbcl0saT1lW3JdO2JyZWFrfXJldHVybiBuPGk/LTE6aTxuPzE6MH0sYy5pc0VuY29kaW5nPWZ1bmN0aW9uKHQpe3N3aXRjaChTdHJpbmcodCkudG9Mb3dlckNhc2UoKSl7Y2FzZVwiaGV4XCI6Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6Y2FzZVwiYXNjaWlcIjpjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpjYXNlXCJiYXNlNjRcIjpjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX0sYy5jb25jYXQ9ZnVuY3Rpb24odCxlKXtpZighYSh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RcIiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZmZlcnMnKTtpZigwPT09dC5sZW5ndGgpcmV0dXJuIGMuYWxsb2MoMCk7dmFyIG47aWYodm9pZCAwPT09ZSlmb3IoZT0wLG49MDtuPHQubGVuZ3RoOysrbillKz10W25dLmxlbmd0aDt2YXIgaT1jLmFsbG9jVW5zYWZlKGUpLHI9MDtmb3Iobj0wO248dC5sZW5ndGg7KytuKXt2YXIgbz10W25dO2lmKCFjLmlzQnVmZmVyKG8pKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpO28uY29weShpLHIpLHIrPW8ubGVuZ3RofXJldHVybiBpfSxjLmJ5dGVMZW5ndGg9aCxjLnByb3RvdHlwZS5faXNCdWZmZXI9ITAsYy5wcm90b3R5cGUuc3dhcDE2PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5sZW5ndGg7aWYodCUyIT0wKXRocm93IG5ldyBSYW5nZUVycm9yKFwiQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDE2LWJpdHNcIik7Zm9yKHZhciBlPTA7ZTx0O2UrPTIpZyh0aGlzLGUsZSsxKTtyZXR1cm4gdGhpc30sYy5wcm90b3R5cGUuc3dhcDMyPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5sZW5ndGg7aWYodCU0IT0wKXRocm93IG5ldyBSYW5nZUVycm9yKFwiQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDMyLWJpdHNcIik7Zm9yKHZhciBlPTA7ZTx0O2UrPTQpZyh0aGlzLGUsZSszKSxnKHRoaXMsZSsxLGUrMik7cmV0dXJuIHRoaXN9LGMucHJvdG90eXBlLnN3YXA2ND1mdW5jdGlvbigpe3ZhciB0PXRoaXMubGVuZ3RoO2lmKHQlOCE9MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA2NC1iaXRzXCIpO2Zvcih2YXIgZT0wO2U8dDtlKz04KWcodGhpcyxlLGUrNyksZyh0aGlzLGUrMSxlKzYpLGcodGhpcyxlKzIsZSs1KSxnKHRoaXMsZSszLGUrNCk7cmV0dXJuIHRoaXN9LGMucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIHQ9MHx0aGlzLmxlbmd0aDtyZXR1cm4gMD09PXQ/XCJcIjowPT09YXJndW1lbnRzLmxlbmd0aD9UKHRoaXMsMCx0KTptLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sYy5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKHQpe2lmKCFjLmlzQnVmZmVyKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyXCIpO3JldHVybiB0aGlzPT09dHx8MD09PWMuY29tcGFyZSh0aGlzLHQpfSxjLnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uKCl7dmFyIHQ9XCJcIixuPWUuSU5TUEVDVF9NQVhfQllURVM7cmV0dXJuIHRoaXMubGVuZ3RoPjAmJih0PXRoaXMudG9TdHJpbmcoXCJoZXhcIiwwLG4pLm1hdGNoKC8uezJ9L2cpLmpvaW4oXCIgXCIpLHRoaXMubGVuZ3RoPm4mJih0Kz1cIiAuLi4gXCIpKSxcIjxCdWZmZXIgXCIrdCtcIj5cIn0sYy5wcm90b3R5cGUuY29tcGFyZT1mdW5jdGlvbih0LGUsbixpLHIpe2lmKCFjLmlzQnVmZmVyKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyXCIpO2lmKHZvaWQgMD09PWUmJihlPTApLHZvaWQgMD09PW4mJihuPXQ/dC5sZW5ndGg6MCksdm9pZCAwPT09aSYmKGk9MCksdm9pZCAwPT09ciYmKHI9dGhpcy5sZW5ndGgpLGU8MHx8bj50Lmxlbmd0aHx8aTwwfHxyPnRoaXMubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwib3V0IG9mIHJhbmdlIGluZGV4XCIpO2lmKGk+PXImJmU+PW4pcmV0dXJuIDA7aWYoaT49cilyZXR1cm4tMTtpZihlPj1uKXJldHVybiAxO2lmKHRoaXM9PT10KXJldHVybiAwO2Zvcih2YXIgYT0ocj4+Pj0wKS0oaT4+Pj0wKSxvPShuPj4+PTApLShlPj4+PTApLHM9TWF0aC5taW4oYSxvKSx1PXRoaXMuc2xpY2UoaSxyKSxsPXQuc2xpY2UoZSxuKSxwPTA7cDxzOysrcClpZih1W3BdIT09bFtwXSl7YT11W3BdLG89bFtwXTticmVha31yZXR1cm4gYTxvPy0xOm88YT8xOjB9LGMucHJvdG90eXBlLmluY2x1ZGVzPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4tMSE9PXRoaXMuaW5kZXhPZih0LGUsbil9LGMucHJvdG90eXBlLmluZGV4T2Y9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB5KHRoaXMsdCxlLG4sITApfSxjLnByb3RvdHlwZS5sYXN0SW5kZXhPZj1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHkodGhpcyx0LGUsbiwhMSl9LGMucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQsZSxuLGkpe2lmKHZvaWQgMD09PWUpaT1cInV0ZjhcIixuPXRoaXMubGVuZ3RoLGU9MDtlbHNlIGlmKHZvaWQgMD09PW4mJlwic3RyaW5nXCI9PXR5cGVvZiBlKWk9ZSxuPXRoaXMubGVuZ3RoLGU9MDtlbHNle2lmKCFpc0Zpbml0ZShlKSl0aHJvdyBuZXcgRXJyb3IoXCJCdWZmZXIud3JpdGUoc3RyaW5nLCBlbmNvZGluZywgb2Zmc2V0WywgbGVuZ3RoXSkgaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZFwiKTtlfD0wLGlzRmluaXRlKG4pPyhufD0wLHZvaWQgMD09PWkmJihpPVwidXRmOFwiKSk6KGk9bixuPXZvaWQgMCl9dmFyIHI9dGhpcy5sZW5ndGgtZTtpZigodm9pZCAwPT09bnx8bj5yKSYmKG49ciksdC5sZW5ndGg+MCYmKG48MHx8ZTwwKXx8ZT50aGlzLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkF0dGVtcHQgdG8gd3JpdGUgb3V0c2lkZSBidWZmZXIgYm91bmRzXCIpO2l8fChpPVwidXRmOFwiKTtmb3IodmFyIGE9ITE7Oylzd2l0Y2goaSl7Y2FzZVwiaGV4XCI6cmV0dXJuIHYodGhpcyx0LGUsbik7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuIHcodGhpcyx0LGUsbik7Y2FzZVwiYXNjaWlcIjpyZXR1cm4geCh0aGlzLHQsZSxuKTtjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gRCh0aGlzLHQsZSxuKTtjYXNlXCJiYXNlNjRcIjpyZXR1cm4gXyh0aGlzLHQsZSxuKTtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4gRSh0aGlzLHQsZSxuKTtkZWZhdWx0OmlmKGEpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2kpO2k9KFwiXCIraSkudG9Mb3dlckNhc2UoKSxhPSEwfX0sYy5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJue3R5cGU6XCJCdWZmZXJcIixkYXRhOkFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuX2Fycnx8dGhpcywwKX19O2Z1bmN0aW9uIEModCxlLG4pe3ZhciBpPVwiXCI7bj1NYXRoLm1pbih0Lmxlbmd0aCxuKTtmb3IodmFyIHI9ZTtyPG47KytyKWkrPVN0cmluZy5mcm9tQ2hhckNvZGUoMTI3JnRbcl0pO3JldHVybiBpfWZ1bmN0aW9uIFModCxlLG4pe3ZhciBpPVwiXCI7bj1NYXRoLm1pbih0Lmxlbmd0aCxuKTtmb3IodmFyIHI9ZTtyPG47KytyKWkrPVN0cmluZy5mcm9tQ2hhckNvZGUodFtyXSk7cmV0dXJuIGl9ZnVuY3Rpb24gQSh0LGUsbil7dmFyIGk9dC5sZW5ndGg7KCFlfHxlPDApJiYoZT0wKSwoIW58fG48MHx8bj5pKSYmKG49aSk7Zm9yKHZhciByPVwiXCIsYT1lO2E8bjsrK2Epcis9TSh0W2FdKTtyZXR1cm4gcn1mdW5jdGlvbiBGKHQsZSxuKXtmb3IodmFyIGk9dC5zbGljZShlLG4pLHI9XCJcIixhPTA7YTxpLmxlbmd0aDthKz0yKXIrPVN0cmluZy5mcm9tQ2hhckNvZGUoaVthXSsyNTYqaVthKzFdKTtyZXR1cm4gcn1mdW5jdGlvbiBqKHQsZSxuKXtpZih0JTEhPTB8fHQ8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIm9mZnNldCBpcyBub3QgdWludFwiKTtpZih0K2U+bil0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlRyeWluZyB0byBhY2Nlc3MgYmV5b25kIGJ1ZmZlciBsZW5ndGhcIil9ZnVuY3Rpb24gTyh0LGUsbixpLHIsYSl7aWYoIWMuaXNCdWZmZXIodCkpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJidWZmZXJcIiBhcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyIGluc3RhbmNlJyk7aWYoZT5yfHxlPGEpdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1widmFsdWVcIiBhcmd1bWVudCBpcyBvdXQgb2YgYm91bmRzJyk7aWYobitpPnQubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpfWZ1bmN0aW9uIEIodCxlLG4saSl7ZTwwJiYoZT02NTUzNStlKzEpO2Zvcih2YXIgcj0wLGE9TWF0aC5taW4odC5sZW5ndGgtbiwyKTtyPGE7KytyKXRbbityXT0oZSYyNTU8PDgqKGk/cjoxLXIpKT4+PjgqKGk/cjoxLXIpfWZ1bmN0aW9uIHEodCxlLG4saSl7ZTwwJiYoZT00Mjk0OTY3Mjk1K2UrMSk7Zm9yKHZhciByPTAsYT1NYXRoLm1pbih0Lmxlbmd0aC1uLDQpO3I8YTsrK3IpdFtuK3JdPWU+Pj44KihpP3I6My1yKSYyNTV9ZnVuY3Rpb24gUih0LGUsbixpLHIsYSl7aWYobitpPnQubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpO2lmKG48MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkluZGV4IG91dCBvZiByYW5nZVwiKX1mdW5jdGlvbiBJKHQsZSxuLGksYSl7cmV0dXJuIGF8fFIodCwwLG4sNCksci53cml0ZSh0LGUsbixpLDIzLDQpLG4rNH1mdW5jdGlvbiBMKHQsZSxuLGksYSl7cmV0dXJuIGF8fFIodCwwLG4sOCksci53cml0ZSh0LGUsbixpLDUyLDgpLG4rOH1jLnByb3RvdHlwZS5zbGljZT1mdW5jdGlvbih0LGUpe3ZhciBuLGk9dGhpcy5sZW5ndGg7aWYoKHQ9fn50KTwwPyh0Kz1pKTwwJiYodD0wKTp0PmkmJih0PWkpLChlPXZvaWQgMD09PWU/aTp+fmUpPDA/KGUrPWkpPDAmJihlPTApOmU+aSYmKGU9aSksZTx0JiYoZT10KSxjLlRZUEVEX0FSUkFZX1NVUFBPUlQpKG49dGhpcy5zdWJhcnJheSh0LGUpKS5fX3Byb3RvX189Yy5wcm90b3R5cGU7ZWxzZXt2YXIgcj1lLXQ7bj1uZXcgYyhyLHZvaWQgMCk7Zm9yKHZhciBhPTA7YTxyOysrYSluW2FdPXRoaXNbYSt0XX1yZXR1cm4gbn0sYy5wcm90b3R5cGUucmVhZFVJbnRMRT1mdW5jdGlvbih0LGUsbil7dHw9MCxlfD0wLG58fGoodCxlLHRoaXMubGVuZ3RoKTtmb3IodmFyIGk9dGhpc1t0XSxyPTEsYT0wOysrYTxlJiYocio9MjU2KTspaSs9dGhpc1t0K2FdKnI7cmV0dXJuIGl9LGMucHJvdG90eXBlLnJlYWRVSW50QkU9ZnVuY3Rpb24odCxlLG4pe3R8PTAsZXw9MCxufHxqKHQsZSx0aGlzLmxlbmd0aCk7Zm9yKHZhciBpPXRoaXNbdCstLWVdLHI9MTtlPjAmJihyKj0yNTYpOylpKz10aGlzW3QrLS1lXSpyO3JldHVybiBpfSxjLnByb3RvdHlwZS5yZWFkVUludDg9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8aih0LDEsdGhpcy5sZW5ndGgpLHRoaXNbdF19LGMucHJvdG90eXBlLnJlYWRVSW50MTZMRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxqKHQsMix0aGlzLmxlbmd0aCksdGhpc1t0XXx0aGlzW3QrMV08PDh9LGMucHJvdG90eXBlLnJlYWRVSW50MTZCRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxqKHQsMix0aGlzLmxlbmd0aCksdGhpc1t0XTw8OHx0aGlzW3QrMV19LGMucHJvdG90eXBlLnJlYWRVSW50MzJMRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxqKHQsNCx0aGlzLmxlbmd0aCksKHRoaXNbdF18dGhpc1t0KzFdPDw4fHRoaXNbdCsyXTw8MTYpKzE2Nzc3MjE2KnRoaXNbdCszXX0sYy5wcm90b3R5cGUucmVhZFVJbnQzMkJFPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGV8fGoodCw0LHRoaXMubGVuZ3RoKSwxNjc3NzIxNip0aGlzW3RdKyh0aGlzW3QrMV08PDE2fHRoaXNbdCsyXTw8OHx0aGlzW3QrM10pfSxjLnByb3RvdHlwZS5yZWFkSW50TEU9ZnVuY3Rpb24odCxlLG4pe3R8PTAsZXw9MCxufHxqKHQsZSx0aGlzLmxlbmd0aCk7Zm9yKHZhciBpPXRoaXNbdF0scj0xLGE9MDsrK2E8ZSYmKHIqPTI1Nik7KWkrPXRoaXNbdCthXSpyO3JldHVybiBpPj0ocio9MTI4KSYmKGktPU1hdGgucG93KDIsOCplKSksaX0sYy5wcm90b3R5cGUucmVhZEludEJFPWZ1bmN0aW9uKHQsZSxuKXt0fD0wLGV8PTAsbnx8aih0LGUsdGhpcy5sZW5ndGgpO2Zvcih2YXIgaT1lLHI9MSxhPXRoaXNbdCstLWldO2k+MCYmKHIqPTI1Nik7KWErPXRoaXNbdCstLWldKnI7cmV0dXJuIGE+PShyKj0xMjgpJiYoYS09TWF0aC5wb3coMiw4KmUpKSxhfSxjLnByb3RvdHlwZS5yZWFkSW50OD1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxqKHQsMSx0aGlzLmxlbmd0aCksMTI4JnRoaXNbdF0/LTEqKDI1NS10aGlzW3RdKzEpOnRoaXNbdF19LGMucHJvdG90eXBlLnJlYWRJbnQxNkxFPWZ1bmN0aW9uKHQsZSl7ZXx8aih0LDIsdGhpcy5sZW5ndGgpO3ZhciBuPXRoaXNbdF18dGhpc1t0KzFdPDw4O3JldHVybiAzMjc2OCZuPzQyOTQ5MDE3NjB8bjpufSxjLnByb3RvdHlwZS5yZWFkSW50MTZCRT1mdW5jdGlvbih0LGUpe2V8fGoodCwyLHRoaXMubGVuZ3RoKTt2YXIgbj10aGlzW3QrMV18dGhpc1t0XTw8ODtyZXR1cm4gMzI3Njgmbj80Mjk0OTAxNzYwfG46bn0sYy5wcm90b3R5cGUucmVhZEludDMyTEU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8aih0LDQsdGhpcy5sZW5ndGgpLHRoaXNbdF18dGhpc1t0KzFdPDw4fHRoaXNbdCsyXTw8MTZ8dGhpc1t0KzNdPDwyNH0sYy5wcm90b3R5cGUucmVhZEludDMyQkU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8aih0LDQsdGhpcy5sZW5ndGgpLHRoaXNbdF08PDI0fHRoaXNbdCsxXTw8MTZ8dGhpc1t0KzJdPDw4fHRoaXNbdCszXX0sYy5wcm90b3R5cGUucmVhZEZsb2F0TEU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8aih0LDQsdGhpcy5sZW5ndGgpLHIucmVhZCh0aGlzLHQsITAsMjMsNCl9LGMucHJvdG90eXBlLnJlYWRGbG9hdEJFPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGV8fGoodCw0LHRoaXMubGVuZ3RoKSxyLnJlYWQodGhpcyx0LCExLDIzLDQpfSxjLnByb3RvdHlwZS5yZWFkRG91YmxlTEU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8aih0LDgsdGhpcy5sZW5ndGgpLHIucmVhZCh0aGlzLHQsITAsNTIsOCl9LGMucHJvdG90eXBlLnJlYWREb3VibGVCRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxqKHQsOCx0aGlzLmxlbmd0aCksci5yZWFkKHRoaXMsdCwhMSw1Miw4KX0sYy5wcm90b3R5cGUud3JpdGVVSW50TEU9ZnVuY3Rpb24odCxlLG4saSl7KHQ9K3QsZXw9MCxufD0wLGkpfHxPKHRoaXMsdCxlLG4sTWF0aC5wb3coMiw4Km4pLTEsMCk7dmFyIHI9MSxhPTA7Zm9yKHRoaXNbZV09MjU1JnQ7KythPG4mJihyKj0yNTYpOyl0aGlzW2UrYV09dC9yJjI1NTtyZXR1cm4gZStufSxjLnByb3RvdHlwZS53cml0ZVVJbnRCRT1mdW5jdGlvbih0LGUsbixpKXsodD0rdCxlfD0wLG58PTAsaSl8fE8odGhpcyx0LGUsbixNYXRoLnBvdygyLDgqbiktMSwwKTt2YXIgcj1uLTEsYT0xO2Zvcih0aGlzW2Urcl09MjU1JnQ7LS1yPj0wJiYoYSo9MjU2KTspdGhpc1tlK3JdPXQvYSYyNTU7cmV0dXJuIGUrbn0sYy5wcm90b3R5cGUud3JpdGVVSW50OD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ9K3QsZXw9MCxufHxPKHRoaXMsdCxlLDEsMjU1LDApLGMuVFlQRURfQVJSQVlfU1VQUE9SVHx8KHQ9TWF0aC5mbG9vcih0KSksdGhpc1tlXT0yNTUmdCxlKzF9LGMucHJvdG90eXBlLndyaXRlVUludDE2TEU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0PSt0LGV8PTAsbnx8Tyh0aGlzLHQsZSwyLDY1NTM1LDApLGMuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlXT0yNTUmdCx0aGlzW2UrMV09dD4+PjgpOkIodGhpcyx0LGUsITApLGUrMn0sYy5wcm90b3R5cGUud3JpdGVVSW50MTZCRT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ9K3QsZXw9MCxufHxPKHRoaXMsdCxlLDIsNjU1MzUsMCksYy5UWVBFRF9BUlJBWV9TVVBQT1JUPyh0aGlzW2VdPXQ+Pj44LHRoaXNbZSsxXT0yNTUmdCk6Qih0aGlzLHQsZSwhMSksZSsyfSxjLnByb3RvdHlwZS53cml0ZVVJbnQzMkxFPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdD0rdCxlfD0wLG58fE8odGhpcyx0LGUsNCw0Mjk0OTY3Mjk1LDApLGMuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlKzNdPXQ+Pj4yNCx0aGlzW2UrMl09dD4+PjE2LHRoaXNbZSsxXT10Pj4+OCx0aGlzW2VdPTI1NSZ0KTpxKHRoaXMsdCxlLCEwKSxlKzR9LGMucHJvdG90eXBlLndyaXRlVUludDMyQkU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0PSt0LGV8PTAsbnx8Tyh0aGlzLHQsZSw0LDQyOTQ5NjcyOTUsMCksYy5UWVBFRF9BUlJBWV9TVVBQT1JUPyh0aGlzW2VdPXQ+Pj4yNCx0aGlzW2UrMV09dD4+PjE2LHRoaXNbZSsyXT10Pj4+OCx0aGlzW2UrM109MjU1JnQpOnEodGhpcyx0LGUsITEpLGUrNH0sYy5wcm90b3R5cGUud3JpdGVJbnRMRT1mdW5jdGlvbih0LGUsbixpKXtpZih0PSt0LGV8PTAsIWkpe3ZhciByPU1hdGgucG93KDIsOCpuLTEpO08odGhpcyx0LGUsbixyLTEsLXIpfXZhciBhPTAsbz0xLHM9MDtmb3IodGhpc1tlXT0yNTUmdDsrK2E8biYmKG8qPTI1Nik7KXQ8MCYmMD09PXMmJjAhPT10aGlzW2UrYS0xXSYmKHM9MSksdGhpc1tlK2FdPSh0L28+PjApLXMmMjU1O3JldHVybiBlK259LGMucHJvdG90eXBlLndyaXRlSW50QkU9ZnVuY3Rpb24odCxlLG4saSl7aWYodD0rdCxlfD0wLCFpKXt2YXIgcj1NYXRoLnBvdygyLDgqbi0xKTtPKHRoaXMsdCxlLG4sci0xLC1yKX12YXIgYT1uLTEsbz0xLHM9MDtmb3IodGhpc1tlK2FdPTI1NSZ0Oy0tYT49MCYmKG8qPTI1Nik7KXQ8MCYmMD09PXMmJjAhPT10aGlzW2UrYSsxXSYmKHM9MSksdGhpc1tlK2FdPSh0L28+PjApLXMmMjU1O3JldHVybiBlK259LGMucHJvdG90eXBlLndyaXRlSW50OD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ9K3QsZXw9MCxufHxPKHRoaXMsdCxlLDEsMTI3LC0xMjgpLGMuVFlQRURfQVJSQVlfU1VQUE9SVHx8KHQ9TWF0aC5mbG9vcih0KSksdDwwJiYodD0yNTUrdCsxKSx0aGlzW2VdPTI1NSZ0LGUrMX0sYy5wcm90b3R5cGUud3JpdGVJbnQxNkxFPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdD0rdCxlfD0wLG58fE8odGhpcyx0LGUsMiwzMjc2NywtMzI3NjgpLGMuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlXT0yNTUmdCx0aGlzW2UrMV09dD4+PjgpOkIodGhpcyx0LGUsITApLGUrMn0sYy5wcm90b3R5cGUud3JpdGVJbnQxNkJFPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdD0rdCxlfD0wLG58fE8odGhpcyx0LGUsMiwzMjc2NywtMzI3NjgpLGMuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlXT10Pj4+OCx0aGlzW2UrMV09MjU1JnQpOkIodGhpcyx0LGUsITEpLGUrMn0sYy5wcm90b3R5cGUud3JpdGVJbnQzMkxFPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdD0rdCxlfD0wLG58fE8odGhpcyx0LGUsNCwyMTQ3NDgzNjQ3LC0yMTQ3NDgzNjQ4KSxjLlRZUEVEX0FSUkFZX1NVUFBPUlQ/KHRoaXNbZV09MjU1JnQsdGhpc1tlKzFdPXQ+Pj44LHRoaXNbZSsyXT10Pj4+MTYsdGhpc1tlKzNdPXQ+Pj4yNCk6cSh0aGlzLHQsZSwhMCksZSs0fSxjLnByb3RvdHlwZS53cml0ZUludDMyQkU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0PSt0LGV8PTAsbnx8Tyh0aGlzLHQsZSw0LDIxNDc0ODM2NDcsLTIxNDc0ODM2NDgpLHQ8MCYmKHQ9NDI5NDk2NzI5NSt0KzEpLGMuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlXT10Pj4+MjQsdGhpc1tlKzFdPXQ+Pj4xNix0aGlzW2UrMl09dD4+PjgsdGhpc1tlKzNdPTI1NSZ0KTpxKHRoaXMsdCxlLCExKSxlKzR9LGMucHJvdG90eXBlLndyaXRlRmxvYXRMRT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIEkodGhpcyx0LGUsITAsbil9LGMucHJvdG90eXBlLndyaXRlRmxvYXRCRT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIEkodGhpcyx0LGUsITEsbil9LGMucHJvdG90eXBlLndyaXRlRG91YmxlTEU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBMKHRoaXMsdCxlLCEwLG4pfSxjLnByb3RvdHlwZS53cml0ZURvdWJsZUJFPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gTCh0aGlzLHQsZSwhMSxuKX0sYy5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0LGUsbixpKXtpZihufHwobj0wKSxpfHwwPT09aXx8KGk9dGhpcy5sZW5ndGgpLGU+PXQubGVuZ3RoJiYoZT10Lmxlbmd0aCksZXx8KGU9MCksaT4wJiZpPG4mJihpPW4pLGk9PT1uKXJldHVybiAwO2lmKDA9PT10Lmxlbmd0aHx8MD09PXRoaXMubGVuZ3RoKXJldHVybiAwO2lmKGU8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcInRhcmdldFN0YXJ0IG91dCBvZiBib3VuZHNcIik7aWYobjwwfHxuPj10aGlzLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcInNvdXJjZVN0YXJ0IG91dCBvZiBib3VuZHNcIik7aWYoaTwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwic291cmNlRW5kIG91dCBvZiBib3VuZHNcIik7aT50aGlzLmxlbmd0aCYmKGk9dGhpcy5sZW5ndGgpLHQubGVuZ3RoLWU8aS1uJiYoaT10Lmxlbmd0aC1lK24pO3ZhciByLGE9aS1uO2lmKHRoaXM9PT10JiZuPGUmJmU8aSlmb3Iocj1hLTE7cj49MDstLXIpdFtyK2VdPXRoaXNbcituXTtlbHNlIGlmKGE8MWUzfHwhYy5UWVBFRF9BUlJBWV9TVVBQT1JUKWZvcihyPTA7cjxhOysrcil0W3IrZV09dGhpc1tyK25dO2Vsc2UgVWludDhBcnJheS5wcm90b3R5cGUuc2V0LmNhbGwodCx0aGlzLnN1YmFycmF5KG4sbithKSxlKTtyZXR1cm4gYX0sYy5wcm90b3R5cGUuZmlsbD1mdW5jdGlvbih0LGUsbixpKXtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGU/KGk9ZSxlPTAsbj10aGlzLmxlbmd0aCk6XCJzdHJpbmdcIj09dHlwZW9mIG4mJihpPW4sbj10aGlzLmxlbmd0aCksMT09PXQubGVuZ3RoKXt2YXIgcj10LmNoYXJDb2RlQXQoMCk7cjwyNTYmJih0PXIpfWlmKHZvaWQgMCE9PWkmJlwic3RyaW5nXCIhPXR5cGVvZiBpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJlbmNvZGluZyBtdXN0IGJlIGEgc3RyaW5nXCIpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBpJiYhYy5pc0VuY29kaW5nKGkpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJVbmtub3duIGVuY29kaW5nOiBcIitpKX1lbHNlXCJudW1iZXJcIj09dHlwZW9mIHQmJih0Jj0yNTUpO2lmKGU8MHx8dGhpcy5sZW5ndGg8ZXx8dGhpcy5sZW5ndGg8bil0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIk91dCBvZiByYW5nZSBpbmRleFwiKTtpZihuPD1lKXJldHVybiB0aGlzO3ZhciBhO2lmKGU+Pj49MCxuPXZvaWQgMD09PW4/dGhpcy5sZW5ndGg6bj4+PjAsdHx8KHQ9MCksXCJudW1iZXJcIj09dHlwZW9mIHQpZm9yKGE9ZTthPG47KythKXRoaXNbYV09dDtlbHNle3ZhciBvPWMuaXNCdWZmZXIodCk/dDp6KG5ldyBjKHQsaSkudG9TdHJpbmcoKSkscz1vLmxlbmd0aDtmb3IoYT0wO2E8bi1lOysrYSl0aGlzW2ErZV09b1thJXNdfXJldHVybiB0aGlzfTt2YXIgUD0vW14rXFwvMC05QS1aYS16LV9dL2c7ZnVuY3Rpb24gTSh0KXtyZXR1cm4gdDwxNj9cIjBcIit0LnRvU3RyaW5nKDE2KTp0LnRvU3RyaW5nKDE2KX1mdW5jdGlvbiB6KHQsZSl7dmFyIG47ZT1lfHwxLzA7Zm9yKHZhciBpPXQubGVuZ3RoLHI9bnVsbCxhPVtdLG89MDtvPGk7KytvKXtpZigobj10LmNoYXJDb2RlQXQobykpPjU1Mjk1JiZuPDU3MzQ0KXtpZighcil7aWYobj41NjMxOSl7KGUtPTMpPi0xJiZhLnB1c2goMjM5LDE5MSwxODkpO2NvbnRpbnVlfWlmKG8rMT09PWkpeyhlLT0zKT4tMSYmYS5wdXNoKDIzOSwxOTEsMTg5KTtjb250aW51ZX1yPW47Y29udGludWV9aWYobjw1NjMyMCl7KGUtPTMpPi0xJiZhLnB1c2goMjM5LDE5MSwxODkpLHI9bjtjb250aW51ZX1uPTY1NTM2KyhyLTU1Mjk2PDwxMHxuLTU2MzIwKX1lbHNlIHImJihlLT0zKT4tMSYmYS5wdXNoKDIzOSwxOTEsMTg5KTtpZihyPW51bGwsbjwxMjgpe2lmKChlLT0xKTwwKWJyZWFrO2EucHVzaChuKX1lbHNlIGlmKG48MjA0OCl7aWYoKGUtPTIpPDApYnJlYWs7YS5wdXNoKG4+PjZ8MTkyLDYzJm58MTI4KX1lbHNlIGlmKG48NjU1MzYpe2lmKChlLT0zKTwwKWJyZWFrO2EucHVzaChuPj4xMnwyMjQsbj4+NiY2M3wxMjgsNjMmbnwxMjgpfWVsc2V7aWYoIShuPDExMTQxMTIpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgY29kZSBwb2ludFwiKTtpZigoZS09NCk8MClicmVhazthLnB1c2gobj4+MTh8MjQwLG4+PjEyJjYzfDEyOCxuPj42JjYzfDEyOCw2MyZufDEyOCl9fXJldHVybiBhfWZ1bmN0aW9uIFUodCl7cmV0dXJuIGkudG9CeXRlQXJyYXkoZnVuY3Rpb24odCl7aWYoKHQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQudHJpbT90LnRyaW0oKTp0LnJlcGxhY2UoL15cXHMrfFxccyskL2csXCJcIil9KHQpLnJlcGxhY2UoUCxcIlwiKSkubGVuZ3RoPDIpcmV0dXJuXCJcIjtmb3IoO3QubGVuZ3RoJTQhPTA7KXQrPVwiPVwiO3JldHVybiB0fSh0KSl9ZnVuY3Rpb24gTih0LGUsbixpKXtmb3IodmFyIHI9MDtyPGkmJiEocituPj1lLmxlbmd0aHx8cj49dC5sZW5ndGgpOysrcillW3Irbl09dFtyXTtyZXR1cm4gcn19KS5jYWxsKHRoaXMsbig0KSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEpLHI9aS5CdWZmZXI7ZnVuY3Rpb24gYSh0LGUpe2Zvcih2YXIgbiBpbiB0KWVbbl09dFtuXX1mdW5jdGlvbiBvKHQsZSxuKXtyZXR1cm4gcih0LGUsbil9ci5mcm9tJiZyLmFsbG9jJiZyLmFsbG9jVW5zYWZlJiZyLmFsbG9jVW5zYWZlU2xvdz90LmV4cG9ydHM9aTooYShpLGUpLGUuQnVmZmVyPW8pLGEocixvKSxvLmZyb209ZnVuY3Rpb24odCxlLG4pe2lmKFwibnVtYmVyXCI9PXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBtdXN0IG5vdCBiZSBhIG51bWJlclwiKTtyZXR1cm4gcih0LGUsbil9LG8uYWxsb2M9ZnVuY3Rpb24odCxlLG4pe2lmKFwibnVtYmVyXCIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyXCIpO3ZhciBpPXIodCk7cmV0dXJuIHZvaWQgMCE9PWU/XCJzdHJpbmdcIj09dHlwZW9mIG4/aS5maWxsKGUsbik6aS5maWxsKGUpOmkuZmlsbCgwKSxpfSxvLmFsbG9jVW5zYWZlPWZ1bmN0aW9uKHQpe2lmKFwibnVtYmVyXCIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyXCIpO3JldHVybiByKHQpfSxvLmFsbG9jVW5zYWZlU2xvdz1mdW5jdGlvbih0KXtpZihcIm51bWJlclwiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlclwiKTtyZXR1cm4gaS5TbG93QnVmZmVyKHQpfX0sZnVuY3Rpb24odCxlKXt2YXIgbixpLHI9dC5leHBvcnRzPXt9O2Z1bmN0aW9uIGEoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIG8oKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9ZnVuY3Rpb24gcyh0KXtpZihuPT09c2V0VGltZW91dClyZXR1cm4gc2V0VGltZW91dCh0LDApO2lmKChuPT09YXx8IW4pJiZzZXRUaW1lb3V0KXJldHVybiBuPXNldFRpbWVvdXQsc2V0VGltZW91dCh0LDApO3RyeXtyZXR1cm4gbih0LDApfWNhdGNoKGUpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsdCwwKX1jYXRjaChlKXtyZXR1cm4gbi5jYWxsKHRoaXMsdCwwKX19fSFmdW5jdGlvbigpe3RyeXtuPVwiZnVuY3Rpb25cIj09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDphfWNhdGNoKHQpe249YX10cnl7aT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0Om99Y2F0Y2godCl7aT1vfX0oKTt2YXIgYyx1PVtdLGw9ITEscD0tMTtmdW5jdGlvbiBmKCl7bCYmYyYmKGw9ITEsYy5sZW5ndGg/dT1jLmNvbmNhdCh1KTpwPS0xLHUubGVuZ3RoJiZkKCkpfWZ1bmN0aW9uIGQoKXtpZighbCl7dmFyIHQ9cyhmKTtsPSEwO2Zvcih2YXIgZT11Lmxlbmd0aDtlOyl7Zm9yKGM9dSx1PVtdOysrcDxlOyljJiZjW3BdLnJ1bigpO3A9LTEsZT11Lmxlbmd0aH1jPW51bGwsbD0hMSxmdW5jdGlvbih0KXtpZihpPT09Y2xlYXJUaW1lb3V0KXJldHVybiBjbGVhclRpbWVvdXQodCk7aWYoKGk9PT1vfHwhaSkmJmNsZWFyVGltZW91dClyZXR1cm4gaT1jbGVhclRpbWVvdXQsY2xlYXJUaW1lb3V0KHQpO3RyeXtpKHQpfWNhdGNoKGUpe3RyeXtyZXR1cm4gaS5jYWxsKG51bGwsdCl9Y2F0Y2goZSl7cmV0dXJuIGkuY2FsbCh0aGlzLHQpfX19KHQpfX1mdW5jdGlvbiBoKHQsZSl7dGhpcy5mdW49dCx0aGlzLmFycmF5PWV9ZnVuY3Rpb24gbSgpe31yLm5leHRUaWNrPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSlmb3IodmFyIG49MTtuPGFyZ3VtZW50cy5sZW5ndGg7bisrKWVbbi0xXT1hcmd1bWVudHNbbl07dS5wdXNoKG5ldyBoKHQsZSkpLDEhPT11Lmxlbmd0aHx8bHx8cyhkKX0saC5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX0sci50aXRsZT1cImJyb3dzZXJcIixyLmJyb3dzZXI9ITAsci5lbnY9e30sci5hcmd2PVtdLHIudmVyc2lvbj1cIlwiLHIudmVyc2lvbnM9e30sci5vbj1tLHIuYWRkTGlzdGVuZXI9bSxyLm9uY2U9bSxyLm9mZj1tLHIucmVtb3ZlTGlzdGVuZXI9bSxyLnJlbW92ZUFsbExpc3RlbmVycz1tLHIuZW1pdD1tLHIucHJlcGVuZExpc3RlbmVyPW0sci5wcmVwZW5kT25jZUxpc3RlbmVyPW0sci5saXN0ZW5lcnM9ZnVuY3Rpb24odCl7cmV0dXJuW119LHIuYmluZGluZz1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX0sci5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn0sci5jaGRpcj1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9LHIudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19LGZ1bmN0aW9uKHQsZSl7dmFyIG47bj1mdW5jdGlvbigpe3JldHVybiB0aGlzfSgpO3RyeXtuPW58fG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCl9Y2F0Y2godCl7XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyYmKG49d2luZG93KX10LmV4cG9ydHM9bn0sZnVuY3Rpb24odCxlKXt9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlPXR5cGVvZiB0O3JldHVybiBudWxsIT10JiYoXCJvYmplY3RcIj09ZXx8XCJmdW5jdGlvblwiPT1lKX19LGZ1bmN0aW9uKHQsZSl7dmFyIG49QXJyYXkuaXNBcnJheTt0LmV4cG9ydHM9bn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPW4oMjcpLHI9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKHQpe3ZhciBlPVtdO2Zvcih2YXIgbiBpbiB0KWUucHVzaChuKTtyZXR1cm4gZX07dC5leHBvcnRzPXA7dmFyIGE9bigxMSk7YS5pbmhlcml0cz1uKDApO3ZhciBvPW4oNjUpLHM9big0MSk7YS5pbmhlcml0cyhwLG8pO2Zvcih2YXIgYz1yKHMucHJvdG90eXBlKSx1PTA7dTxjLmxlbmd0aDt1Kyspe3ZhciBsPWNbdV07cC5wcm90b3R5cGVbbF18fChwLnByb3RvdHlwZVtsXT1zLnByb3RvdHlwZVtsXSl9ZnVuY3Rpb24gcCh0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBwKSlyZXR1cm4gbmV3IHAodCk7by5jYWxsKHRoaXMsdCkscy5jYWxsKHRoaXMsdCksdCYmITE9PT10LnJlYWRhYmxlJiYodGhpcy5yZWFkYWJsZT0hMSksdCYmITE9PT10LndyaXRhYmxlJiYodGhpcy53cml0YWJsZT0hMSksdGhpcy5hbGxvd0hhbGZPcGVuPSEwLHQmJiExPT09dC5hbGxvd0hhbGZPcGVuJiYodGhpcy5hbGxvd0hhbGZPcGVuPSExKSx0aGlzLm9uY2UoXCJlbmRcIixmKX1mdW5jdGlvbiBmKCl7dGhpcy5hbGxvd0hhbGZPcGVufHx0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkfHxpLm5leHRUaWNrKGQsdGhpcyl9ZnVuY3Rpb24gZCh0KXt0LmVuZCgpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShwLnByb3RvdHlwZSxcIndyaXRhYmxlSGlnaFdhdGVyTWFya1wiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmhpZ2hXYXRlck1hcmt9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHAucHJvdG90eXBlLFwiZGVzdHJveWVkXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzLl9yZWFkYWJsZVN0YXRlJiZ2b2lkIDAhPT10aGlzLl93cml0YWJsZVN0YXRlJiYodGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkKX0sc2V0OmZ1bmN0aW9uKHQpe3ZvaWQgMCE9PXRoaXMuX3JlYWRhYmxlU3RhdGUmJnZvaWQgMCE9PXRoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD10LHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkPXQpfX0pLHAucHJvdG90eXBlLl9kZXN0cm95PWZ1bmN0aW9uKHQsZSl7dGhpcy5wdXNoKG51bGwpLHRoaXMuZW5kKCksaS5uZXh0VGljayhlLHQpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNDkpLHI9XCJvYmplY3RcIj09dHlwZW9mIHNlbGYmJnNlbGYmJnNlbGYuT2JqZWN0PT09T2JqZWN0JiZzZWxmLGE9aXx8cnx8RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO3QuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9dCYmXCJvYmplY3RcIj09dHlwZW9mIHR9fSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4odCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX1lLmlzQXJyYXk9ZnVuY3Rpb24odCl7cmV0dXJuIEFycmF5LmlzQXJyYXk/QXJyYXkuaXNBcnJheSh0KTpcIltvYmplY3QgQXJyYXldXCI9PT1uKHQpfSxlLmlzQm9vbGVhbj1mdW5jdGlvbih0KXtyZXR1cm5cImJvb2xlYW5cIj09dHlwZW9mIHR9LGUuaXNOdWxsPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT09dH0sZS5pc051bGxPclVuZGVmaW5lZD1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dH0sZS5pc051bWJlcj1mdW5jdGlvbih0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdH0sZS5pc1N0cmluZz1mdW5jdGlvbih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdH0sZS5pc1N5bWJvbD1mdW5jdGlvbih0KXtyZXR1cm5cInN5bWJvbFwiPT10eXBlb2YgdH0sZS5pc1VuZGVmaW5lZD1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dH0sZS5pc1JlZ0V4cD1mdW5jdGlvbih0KXtyZXR1cm5cIltvYmplY3QgUmVnRXhwXVwiPT09bih0KX0sZS5pc09iamVjdD1mdW5jdGlvbih0KXtyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgdCYmbnVsbCE9PXR9LGUuaXNEYXRlPWZ1bmN0aW9uKHQpe3JldHVyblwiW29iamVjdCBEYXRlXVwiPT09bih0KX0sZS5pc0Vycm9yPWZ1bmN0aW9uKHQpe3JldHVyblwiW29iamVjdCBFcnJvcl1cIj09PW4odCl8fHQgaW5zdGFuY2VvZiBFcnJvcn0sZS5pc0Z1bmN0aW9uPWZ1bmN0aW9uKHQpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHR9LGUuaXNQcmltaXRpdmU9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PT10fHxcImJvb2xlYW5cIj09dHlwZW9mIHR8fFwibnVtYmVyXCI9PXR5cGVvZiB0fHxcInN0cmluZ1wiPT10eXBlb2YgdHx8XCJzeW1ib2xcIj09dHlwZW9mIHR8fHZvaWQgMD09PXR9LGUuaXNCdWZmZXI9dC5pc0J1ZmZlcn0pLmNhbGwodGhpcyxuKDEpLkJ1ZmZlcil9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt0LmV4cG9ydHM9e319LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24odCl7dmFyIGk9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnN8fGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1PYmplY3Qua2V5cyh0KSxuPXt9LGk9MDtpPGUubGVuZ3RoO2krKyluW2VbaV1dPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxlW2ldKTtyZXR1cm4gbn0scj0vJVtzZGolXS9nO2UuZm9ybWF0PWZ1bmN0aW9uKHQpe2lmKCF5KHQpKXtmb3IodmFyIGU9W10sbj0wO248YXJndW1lbnRzLmxlbmd0aDtuKyspZS5wdXNoKHMoYXJndW1lbnRzW25dKSk7cmV0dXJuIGUuam9pbihcIiBcIil9bj0xO2Zvcih2YXIgaT1hcmd1bWVudHMsYT1pLmxlbmd0aCxvPVN0cmluZyh0KS5yZXBsYWNlKHIsKGZ1bmN0aW9uKHQpe2lmKFwiJSVcIj09PXQpcmV0dXJuXCIlXCI7aWYobj49YSlyZXR1cm4gdDtzd2l0Y2godCl7Y2FzZVwiJXNcIjpyZXR1cm4gU3RyaW5nKGlbbisrXSk7Y2FzZVwiJWRcIjpyZXR1cm4gTnVtYmVyKGlbbisrXSk7Y2FzZVwiJWpcIjp0cnl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGlbbisrXSl9Y2F0Y2godCl7cmV0dXJuXCJbQ2lyY3VsYXJdXCJ9ZGVmYXVsdDpyZXR1cm4gdH19KSksYz1pW25dO248YTtjPWlbKytuXSltKGMpfHwhdyhjKT9vKz1cIiBcIitjOm8rPVwiIFwiK3MoYyk7cmV0dXJuIG99LGUuZGVwcmVjYXRlPWZ1bmN0aW9uKG4saSl7aWYodm9pZCAwIT09dCYmITA9PT10Lm5vRGVwcmVjYXRpb24pcmV0dXJuIG47aWYodm9pZCAwPT09dClyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5kZXByZWNhdGUobixpKS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O3ZhciByPSExO3JldHVybiBmdW5jdGlvbigpe2lmKCFyKXtpZih0LnRocm93RGVwcmVjYXRpb24pdGhyb3cgbmV3IEVycm9yKGkpO3QudHJhY2VEZXByZWNhdGlvbj9jb25zb2xlLnRyYWNlKGkpOmNvbnNvbGUuZXJyb3IoaSkscj0hMH1yZXR1cm4gbi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fTt2YXIgYSxvPXt9O2Z1bmN0aW9uIHModCxuKXt2YXIgaT17c2VlbjpbXSxzdHlsaXplOnV9O3JldHVybiBhcmd1bWVudHMubGVuZ3RoPj0zJiYoaS5kZXB0aD1hcmd1bWVudHNbMl0pLGFyZ3VtZW50cy5sZW5ndGg+PTQmJihpLmNvbG9ycz1hcmd1bWVudHNbM10pLGgobik/aS5zaG93SGlkZGVuPW46biYmZS5fZXh0ZW5kKGksbiksYihpLnNob3dIaWRkZW4pJiYoaS5zaG93SGlkZGVuPSExKSxiKGkuZGVwdGgpJiYoaS5kZXB0aD0yKSxiKGkuY29sb3JzKSYmKGkuY29sb3JzPSExKSxiKGkuY3VzdG9tSW5zcGVjdCkmJihpLmN1c3RvbUluc3BlY3Q9ITApLGkuY29sb3JzJiYoaS5zdHlsaXplPWMpLGwoaSx0LGkuZGVwdGgpfWZ1bmN0aW9uIGModCxlKXt2YXIgbj1zLnN0eWxlc1tlXTtyZXR1cm4gbj9cIlx1MDAxYltcIitzLmNvbG9yc1tuXVswXStcIm1cIit0K1wiXHUwMDFiW1wiK3MuY29sb3JzW25dWzFdK1wibVwiOnR9ZnVuY3Rpb24gdSh0LGUpe3JldHVybiB0fWZ1bmN0aW9uIGwodCxuLGkpe2lmKHQuY3VzdG9tSW5zcGVjdCYmbiYmXyhuLmluc3BlY3QpJiZuLmluc3BlY3QhPT1lLmluc3BlY3QmJighbi5jb25zdHJ1Y3Rvcnx8bi5jb25zdHJ1Y3Rvci5wcm90b3R5cGUhPT1uKSl7dmFyIHI9bi5pbnNwZWN0KGksdCk7cmV0dXJuIHkocil8fChyPWwodCxyLGkpKSxyfXZhciBhPWZ1bmN0aW9uKHQsZSl7aWYoYihlKSlyZXR1cm4gdC5zdHlsaXplKFwidW5kZWZpbmVkXCIsXCJ1bmRlZmluZWRcIik7aWYoeShlKSl7dmFyIG49XCInXCIrSlNPTi5zdHJpbmdpZnkoZSkucmVwbGFjZSgvXlwifFwiJC9nLFwiXCIpLnJlcGxhY2UoLycvZyxcIlxcXFwnXCIpLnJlcGxhY2UoL1xcXFxcIi9nLCdcIicpK1wiJ1wiO3JldHVybiB0LnN0eWxpemUobixcInN0cmluZ1wiKX1pZihnKGUpKXJldHVybiB0LnN0eWxpemUoXCJcIitlLFwibnVtYmVyXCIpO2lmKGgoZSkpcmV0dXJuIHQuc3R5bGl6ZShcIlwiK2UsXCJib29sZWFuXCIpO2lmKG0oZSkpcmV0dXJuIHQuc3R5bGl6ZShcIm51bGxcIixcIm51bGxcIil9KHQsbik7aWYoYSlyZXR1cm4gYTt2YXIgbz1PYmplY3Qua2V5cyhuKSxzPWZ1bmN0aW9uKHQpe3ZhciBlPXt9O3JldHVybiB0LmZvckVhY2goKGZ1bmN0aW9uKHQsbil7ZVt0XT0hMH0pKSxlfShvKTtpZih0LnNob3dIaWRkZW4mJihvPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG4pKSxEKG4pJiYoby5pbmRleE9mKFwibWVzc2FnZVwiKT49MHx8by5pbmRleE9mKFwiZGVzY3JpcHRpb25cIik+PTApKXJldHVybiBwKG4pO2lmKDA9PT1vLmxlbmd0aCl7aWYoXyhuKSl7dmFyIGM9bi5uYW1lP1wiOiBcIituLm5hbWU6XCJcIjtyZXR1cm4gdC5zdHlsaXplKFwiW0Z1bmN0aW9uXCIrYytcIl1cIixcInNwZWNpYWxcIil9aWYodihuKSlyZXR1cm4gdC5zdHlsaXplKFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuKSxcInJlZ2V4cFwiKTtpZih4KG4pKXJldHVybiB0LnN0eWxpemUoRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuKSxcImRhdGVcIik7aWYoRChuKSlyZXR1cm4gcChuKX12YXIgdSx3PVwiXCIsRT0hMSxrPVtcIntcIixcIn1cIl07KGQobikmJihFPSEwLGs9W1wiW1wiLFwiXVwiXSksXyhuKSkmJih3PVwiIFtGdW5jdGlvblwiKyhuLm5hbWU/XCI6IFwiK24ubmFtZTpcIlwiKStcIl1cIik7cmV0dXJuIHYobikmJih3PVwiIFwiK1JlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuKSkseChuKSYmKHc9XCIgXCIrRGF0ZS5wcm90b3R5cGUudG9VVENTdHJpbmcuY2FsbChuKSksRChuKSYmKHc9XCIgXCIrcChuKSksMCE9PW8ubGVuZ3RofHxFJiYwIT1uLmxlbmd0aD9pPDA/dihuKT90LnN0eWxpemUoUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG4pLFwicmVnZXhwXCIpOnQuc3R5bGl6ZShcIltPYmplY3RdXCIsXCJzcGVjaWFsXCIpOih0LnNlZW4ucHVzaChuKSx1PUU/ZnVuY3Rpb24odCxlLG4saSxyKXtmb3IodmFyIGE9W10sbz0wLHM9ZS5sZW5ndGg7bzxzOysrbylTKGUsU3RyaW5nKG8pKT9hLnB1c2goZih0LGUsbixpLFN0cmluZyhvKSwhMCkpOmEucHVzaChcIlwiKTtyZXR1cm4gci5mb3JFYWNoKChmdW5jdGlvbihyKXtyLm1hdGNoKC9eXFxkKyQvKXx8YS5wdXNoKGYodCxlLG4saSxyLCEwKSl9KSksYX0odCxuLGkscyxvKTpvLm1hcCgoZnVuY3Rpb24oZSl7cmV0dXJuIGYodCxuLGkscyxlLEUpfSkpLHQuc2Vlbi5wb3AoKSxmdW5jdGlvbih0LGUsbil7aWYodC5yZWR1Y2UoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUuaW5kZXhPZihcIlxcblwiKT49MCYmMCx0K2UucmVwbGFjZSgvXFx1MDAxYlxcW1xcZFxcZD9tL2csXCJcIikubGVuZ3RoKzF9KSwwKT42MClyZXR1cm4gblswXSsoXCJcIj09PWU/XCJcIjplK1wiXFxuIFwiKStcIiBcIit0LmpvaW4oXCIsXFxuICBcIikrXCIgXCIrblsxXTtyZXR1cm4gblswXStlK1wiIFwiK3Quam9pbihcIiwgXCIpK1wiIFwiK25bMV19KHUsdyxrKSk6a1swXSt3K2tbMV19ZnVuY3Rpb24gcCh0KXtyZXR1cm5cIltcIitFcnJvci5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KStcIl1cIn1mdW5jdGlvbiBmKHQsZSxuLGkscixhKXt2YXIgbyxzLGM7aWYoKGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHIpfHx7dmFsdWU6ZVtyXX0pLmdldD9zPWMuc2V0P3Quc3R5bGl6ZShcIltHZXR0ZXIvU2V0dGVyXVwiLFwic3BlY2lhbFwiKTp0LnN0eWxpemUoXCJbR2V0dGVyXVwiLFwic3BlY2lhbFwiKTpjLnNldCYmKHM9dC5zdHlsaXplKFwiW1NldHRlcl1cIixcInNwZWNpYWxcIikpLFMoaSxyKXx8KG89XCJbXCIrcitcIl1cIiksc3x8KHQuc2Vlbi5pbmRleE9mKGMudmFsdWUpPDA/KHM9bShuKT9sKHQsYy52YWx1ZSxudWxsKTpsKHQsYy52YWx1ZSxuLTEpKS5pbmRleE9mKFwiXFxuXCIpPi0xJiYocz1hP3Muc3BsaXQoXCJcXG5cIikubWFwKChmdW5jdGlvbih0KXtyZXR1cm5cIiAgXCIrdH0pKS5qb2luKFwiXFxuXCIpLnN1YnN0cigyKTpcIlxcblwiK3Muc3BsaXQoXCJcXG5cIikubWFwKChmdW5jdGlvbih0KXtyZXR1cm5cIiAgIFwiK3R9KSkuam9pbihcIlxcblwiKSk6cz10LnN0eWxpemUoXCJbQ2lyY3VsYXJdXCIsXCJzcGVjaWFsXCIpKSxiKG8pKXtpZihhJiZyLm1hdGNoKC9eXFxkKyQvKSlyZXR1cm4gczsobz1KU09OLnN0cmluZ2lmeShcIlwiK3IpKS5tYXRjaCgvXlwiKFthLXpBLVpfXVthLXpBLVpfMC05XSopXCIkLyk/KG89by5zdWJzdHIoMSxvLmxlbmd0aC0yKSxvPXQuc3R5bGl6ZShvLFwibmFtZVwiKSk6KG89by5yZXBsYWNlKC8nL2csXCJcXFxcJ1wiKS5yZXBsYWNlKC9cXFxcXCIvZywnXCInKS5yZXBsYWNlKC8oXlwifFwiJCkvZyxcIidcIiksbz10LnN0eWxpemUobyxcInN0cmluZ1wiKSl9cmV0dXJuIG8rXCI6IFwiK3N9ZnVuY3Rpb24gZCh0KXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KX1mdW5jdGlvbiBoKHQpe3JldHVyblwiYm9vbGVhblwiPT10eXBlb2YgdH1mdW5jdGlvbiBtKHQpe3JldHVybiBudWxsPT09dH1mdW5jdGlvbiBnKHQpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0fWZ1bmN0aW9uIHkodCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHR9ZnVuY3Rpb24gYih0KXtyZXR1cm4gdm9pZCAwPT09dH1mdW5jdGlvbiB2KHQpe3JldHVybiB3KHQpJiZcIltvYmplY3QgUmVnRXhwXVwiPT09RSh0KX1mdW5jdGlvbiB3KHQpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiB0JiZudWxsIT09dH1mdW5jdGlvbiB4KHQpe3JldHVybiB3KHQpJiZcIltvYmplY3QgRGF0ZV1cIj09PUUodCl9ZnVuY3Rpb24gRCh0KXtyZXR1cm4gdyh0KSYmKFwiW29iamVjdCBFcnJvcl1cIj09PUUodCl8fHQgaW5zdGFuY2VvZiBFcnJvcil9ZnVuY3Rpb24gXyh0KXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0fWZ1bmN0aW9uIEUodCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX1mdW5jdGlvbiBrKHQpe3JldHVybiB0PDEwP1wiMFwiK3QudG9TdHJpbmcoMTApOnQudG9TdHJpbmcoMTApfWUuZGVidWdsb2c9ZnVuY3Rpb24obil7aWYoYihhKSYmKGE9dC5lbnYuTk9ERV9ERUJVR3x8XCJcIiksbj1uLnRvVXBwZXJDYXNlKCksIW9bbl0paWYobmV3IFJlZ0V4cChcIlxcXFxiXCIrbitcIlxcXFxiXCIsXCJpXCIpLnRlc3QoYSkpe3ZhciBpPXQucGlkO29bbl09ZnVuY3Rpb24oKXt2YXIgdD1lLmZvcm1hdC5hcHBseShlLGFyZ3VtZW50cyk7Y29uc29sZS5lcnJvcihcIiVzICVkOiAlc1wiLG4saSx0KX19ZWxzZSBvW25dPWZ1bmN0aW9uKCl7fTtyZXR1cm4gb1tuXX0sZS5pbnNwZWN0PXMscy5jb2xvcnM9e2JvbGQ6WzEsMjJdLGl0YWxpYzpbMywyM10sdW5kZXJsaW5lOls0LDI0XSxpbnZlcnNlOls3LDI3XSx3aGl0ZTpbMzcsMzldLGdyZXk6WzkwLDM5XSxibGFjazpbMzAsMzldLGJsdWU6WzM0LDM5XSxjeWFuOlszNiwzOV0sZ3JlZW46WzMyLDM5XSxtYWdlbnRhOlszNSwzOV0scmVkOlszMSwzOV0seWVsbG93OlszMywzOV19LHMuc3R5bGVzPXtzcGVjaWFsOlwiY3lhblwiLG51bWJlcjpcInllbGxvd1wiLGJvb2xlYW46XCJ5ZWxsb3dcIix1bmRlZmluZWQ6XCJncmV5XCIsbnVsbDpcImJvbGRcIixzdHJpbmc6XCJncmVlblwiLGRhdGU6XCJtYWdlbnRhXCIscmVnZXhwOlwicmVkXCJ9LGUuaXNBcnJheT1kLGUuaXNCb29sZWFuPWgsZS5pc051bGw9bSxlLmlzTnVsbE9yVW5kZWZpbmVkPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10fSxlLmlzTnVtYmVyPWcsZS5pc1N0cmluZz15LGUuaXNTeW1ib2w9ZnVuY3Rpb24odCl7cmV0dXJuXCJzeW1ib2xcIj09dHlwZW9mIHR9LGUuaXNVbmRlZmluZWQ9YixlLmlzUmVnRXhwPXYsZS5pc09iamVjdD13LGUuaXNEYXRlPXgsZS5pc0Vycm9yPUQsZS5pc0Z1bmN0aW9uPV8sZS5pc1ByaW1pdGl2ZT1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09PXR8fFwiYm9vbGVhblwiPT10eXBlb2YgdHx8XCJudW1iZXJcIj09dHlwZW9mIHR8fFwic3RyaW5nXCI9PXR5cGVvZiB0fHxcInN5bWJvbFwiPT10eXBlb2YgdHx8dm9pZCAwPT09dH0sZS5pc0J1ZmZlcj1uKDE2NCk7dmFyIFQ9W1wiSmFuXCIsXCJGZWJcIixcIk1hclwiLFwiQXByXCIsXCJNYXlcIixcIkp1blwiLFwiSnVsXCIsXCJBdWdcIixcIlNlcFwiLFwiT2N0XCIsXCJOb3ZcIixcIkRlY1wiXTtmdW5jdGlvbiBDKCl7dmFyIHQ9bmV3IERhdGUsZT1bayh0LmdldEhvdXJzKCkpLGsodC5nZXRNaW51dGVzKCkpLGsodC5nZXRTZWNvbmRzKCkpXS5qb2luKFwiOlwiKTtyZXR1cm5bdC5nZXREYXRlKCksVFt0LmdldE1vbnRoKCldLGVdLmpvaW4oXCIgXCIpfWZ1bmN0aW9uIFModCxlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSl9ZS5sb2c9ZnVuY3Rpb24oKXtjb25zb2xlLmxvZyhcIiVzIC0gJXNcIixDKCksZS5mb3JtYXQuYXBwbHkoZSxhcmd1bWVudHMpKX0sZS5pbmhlcml0cz1uKDApLGUuX2V4dGVuZD1mdW5jdGlvbih0LGUpe2lmKCFlfHwhdyhlKSlyZXR1cm4gdDtmb3IodmFyIG49T2JqZWN0LmtleXMoZSksaT1uLmxlbmd0aDtpLS07KXRbbltpXV09ZVtuW2ldXTtyZXR1cm4gdH07dmFyIEE9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbD9TeW1ib2woXCJ1dGlsLnByb21pc2lmeS5jdXN0b21cIik6dm9pZCAwO2Z1bmN0aW9uIEYodCxlKXtpZighdCl7dmFyIG49bmV3IEVycm9yKFwiUHJvbWlzZSB3YXMgcmVqZWN0ZWQgd2l0aCBhIGZhbHN5IHZhbHVlXCIpO24ucmVhc29uPXQsdD1ufXJldHVybiBlKHQpfWUucHJvbWlzaWZ5PWZ1bmN0aW9uKHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwib3JpZ2luYWxcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgRnVuY3Rpb24nKTtpZihBJiZ0W0FdKXt2YXIgZTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZihlPXRbQV0pKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInV0aWwucHJvbWlzaWZ5LmN1c3RvbVwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBGdW5jdGlvbicpO3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxBLHt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksZX1mdW5jdGlvbiBlKCl7Zm9yKHZhciBlLG4saT1uZXcgUHJvbWlzZSgoZnVuY3Rpb24odCxpKXtlPXQsbj1pfSkpLHI9W10sYT0wO2E8YXJndW1lbnRzLmxlbmd0aDthKyspci5wdXNoKGFyZ3VtZW50c1thXSk7ci5wdXNoKChmdW5jdGlvbih0LGkpe3Q/bih0KTplKGkpfSkpO3RyeXt0LmFwcGx5KHRoaXMscil9Y2F0Y2godCl7bih0KX1yZXR1cm4gaX1yZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKGUsT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKSxBJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxBLHt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxpKHQpKX0sZS5wcm9taXNpZnkuY3VzdG9tPUEsZS5jYWxsYmFja2lmeT1mdW5jdGlvbihlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcIm9yaWdpbmFsXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIEZ1bmN0aW9uJyk7ZnVuY3Rpb24gbigpe2Zvcih2YXIgbj1bXSxpPTA7aTxhcmd1bWVudHMubGVuZ3RoO2krKyluLnB1c2goYXJndW1lbnRzW2ldKTt2YXIgcj1uLnBvcCgpO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHIpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZSBsYXN0IGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBGdW5jdGlvblwiKTt2YXIgYT10aGlzLG89ZnVuY3Rpb24oKXtyZXR1cm4gci5hcHBseShhLGFyZ3VtZW50cyl9O2UuYXBwbHkodGhpcyxuKS50aGVuKChmdW5jdGlvbihlKXt0Lm5leHRUaWNrKG8sbnVsbCxlKX0pLChmdW5jdGlvbihlKXt0Lm5leHRUaWNrKEYsZSxvKX0pKX1yZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKG4sT2JqZWN0LmdldFByb3RvdHlwZU9mKGUpKSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhuLGkoZSkpLG59fSkuY2FsbCh0aGlzLG4oMykpfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyKS5CdWZmZXI7ZnVuY3Rpb24gcih0LGUpe3RoaXMuX2Jsb2NrPWkuYWxsb2ModCksdGhpcy5fZmluYWxTaXplPWUsdGhpcy5fYmxvY2tTaXplPXQsdGhpcy5fbGVuPTB9ci5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKHQsZSl7XCJzdHJpbmdcIj09dHlwZW9mIHQmJihlPWV8fFwidXRmOFwiLHQ9aS5mcm9tKHQsZSkpO2Zvcih2YXIgbj10aGlzLl9ibG9jayxyPXRoaXMuX2Jsb2NrU2l6ZSxhPXQubGVuZ3RoLG89dGhpcy5fbGVuLHM9MDtzPGE7KXtmb3IodmFyIGM9byVyLHU9TWF0aC5taW4oYS1zLHItYyksbD0wO2w8dTtsKyspbltjK2xdPXRbcytsXTtzKz11LChvKz11KSVyPT0wJiZ0aGlzLl91cGRhdGUobil9cmV0dXJuIHRoaXMuX2xlbis9YSx0aGlzfSxyLnByb3RvdHlwZS5kaWdlc3Q9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fbGVuJXRoaXMuX2Jsb2NrU2l6ZTt0aGlzLl9ibG9ja1tlXT0xMjgsdGhpcy5fYmxvY2suZmlsbCgwLGUrMSksZT49dGhpcy5fZmluYWxTaXplJiYodGhpcy5fdXBkYXRlKHRoaXMuX2Jsb2NrKSx0aGlzLl9ibG9jay5maWxsKDApKTt2YXIgbj04KnRoaXMuX2xlbjtpZihuPD00Mjk0OTY3Mjk1KXRoaXMuX2Jsb2NrLndyaXRlVUludDMyQkUobix0aGlzLl9ibG9ja1NpemUtNCk7ZWxzZXt2YXIgaT0oNDI5NDk2NzI5NSZuKT4+PjAscj0obi1pKS80Mjk0OTY3Mjk2O3RoaXMuX2Jsb2NrLndyaXRlVUludDMyQkUocix0aGlzLl9ibG9ja1NpemUtOCksdGhpcy5fYmxvY2sud3JpdGVVSW50MzJCRShpLHRoaXMuX2Jsb2NrU2l6ZS00KX10aGlzLl91cGRhdGUodGhpcy5fYmxvY2spO3ZhciBhPXRoaXMuX2hhc2goKTtyZXR1cm4gdD9hLnRvU3RyaW5nKHQpOmF9LHIucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJfdXBkYXRlIG11c3QgYmUgaW1wbGVtZW50ZWQgYnkgc3ViY2xhc3NcIil9LHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7KGZ1bmN0aW9uKGUpe3ZhciBpLHI9bigxKSxhPXIuQnVmZmVyLG89e307Zm9yKGkgaW4gcilyLmhhc093blByb3BlcnR5KGkpJiZcIlNsb3dCdWZmZXJcIiE9PWkmJlwiQnVmZmVyXCIhPT1pJiYob1tpXT1yW2ldKTt2YXIgcz1vLkJ1ZmZlcj17fTtmb3IoaSBpbiBhKWEuaGFzT3duUHJvcGVydHkoaSkmJlwiYWxsb2NVbnNhZmVcIiE9PWkmJlwiYWxsb2NVbnNhZmVTbG93XCIhPT1pJiYoc1tpXT1hW2ldKTtpZihvLkJ1ZmZlci5wcm90b3R5cGU9YS5wcm90b3R5cGUscy5mcm9tJiZzLmZyb20hPT1VaW50OEFycmF5LmZyb218fChzLmZyb209ZnVuY3Rpb24odCxlLG4pe2lmKFwibnVtYmVyXCI9PXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInZhbHVlXCIgYXJndW1lbnQgbXVzdCBub3QgYmUgb2YgdHlwZSBudW1iZXIuIFJlY2VpdmVkIHR5cGUgJyt0eXBlb2YgdCk7aWYodCYmdm9pZCAwPT09dC5sZW5ndGgpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZSBmaXJzdCBhcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB0eXBlIHN0cmluZywgQnVmZmVyLCBBcnJheUJ1ZmZlciwgQXJyYXksIG9yIEFycmF5LWxpa2UgT2JqZWN0LiBSZWNlaXZlZCB0eXBlIFwiK3R5cGVvZiB0KTtyZXR1cm4gYSh0LGUsbil9KSxzLmFsbG9jfHwocy5hbGxvYz1mdW5jdGlvbih0LGUsbil7aWYoXCJudW1iZXJcIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwic2l6ZVwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBudW1iZXIuIFJlY2VpdmVkIHR5cGUgJyt0eXBlb2YgdCk7aWYodDwwfHx0Pj0yKigxPDwzMCkpdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RoZSB2YWx1ZSBcIicrdCsnXCIgaXMgaW52YWxpZCBmb3Igb3B0aW9uIFwic2l6ZVwiJyk7dmFyIGk9YSh0KTtyZXR1cm4gZSYmMCE9PWUubGVuZ3RoP1wic3RyaW5nXCI9PXR5cGVvZiBuP2kuZmlsbChlLG4pOmkuZmlsbChlKTppLmZpbGwoMCksaX0pLCFvLmtTdHJpbmdNYXhMZW5ndGgpdHJ5e28ua1N0cmluZ01heExlbmd0aD1lLmJpbmRpbmcoXCJidWZmZXJcIikua1N0cmluZ01heExlbmd0aH1jYXRjaCh0KXt9by5jb25zdGFudHN8fChvLmNvbnN0YW50cz17TUFYX0xFTkdUSDpvLmtNYXhMZW5ndGh9LG8ua1N0cmluZ01heExlbmd0aCYmKG8uY29uc3RhbnRzLk1BWF9TVFJJTkdfTEVOR1RIPW8ua1N0cmluZ01heExlbmd0aCkpLHQuZXhwb3J0cz1vfSkuY2FsbCh0aGlzLG4oMykpfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMikscj1uKDk2KSxhPW4oOTcpLG89aT9pLnRvU3RyaW5nVGFnOnZvaWQgMDt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXQ/dm9pZCAwPT09dD9cIltvYmplY3QgVW5kZWZpbmVkXVwiOlwiW29iamVjdCBOdWxsXVwiOm8mJm8gaW4gT2JqZWN0KHQpP3IodCk6YSh0KX19LGZ1bmN0aW9uKHQsZSxuKXsoZT10LmV4cG9ydHM9big2NSkpLlN0cmVhbT1lLGUuUmVhZGFibGU9ZSxlLldyaXRhYmxlPW4oNDEpLGUuRHVwbGV4PW4oOCksZS5UcmFuc2Zvcm09big2OCksZS5QYXNzVGhyb3VnaD1uKDE1NSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgzKSxyPW4oMTM4KSgoZnVuY3Rpb24odCxlLG4pe2kodCxlLG4pfSkpO3QuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4NSkscj1uKDg2KSxhPW4oODcpLG89big4OCkscz1uKDg5KTtmdW5jdGlvbiBjKHQpe3ZhciBlPS0xLG49bnVsbD09dD8wOnQubGVuZ3RoO2Zvcih0aGlzLmNsZWFyKCk7KytlPG47KXt2YXIgaT10W2VdO3RoaXMuc2V0KGlbMF0saVsxXSl9fWMucHJvdG90eXBlLmNsZWFyPWksYy5wcm90b3R5cGUuZGVsZXRlPXIsYy5wcm90b3R5cGUuZ2V0PWEsYy5wcm90b3R5cGUuaGFzPW8sYy5wcm90b3R5cGUuc2V0PXMsdC5leHBvcnRzPWN9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIxKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dC5sZW5ndGg7bi0tOylpZihpKHRbbl1bMF0sZSkpcmV0dXJuIG47cmV0dXJuLTF9fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3JldHVybiB0PT09ZXx8dCE9dCYmZSE9ZX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDkpLlN5bWJvbDt0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzMpKE9iamVjdCxcImNyZWF0ZVwiKTt0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTEwKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXt2YXIgbj10Ll9fZGF0YV9fO3JldHVybiBpKGUpP25bXCJzdHJpbmdcIj09dHlwZW9mIGU/XCJzdHJpbmdcIjpcImhhc2hcIl06bi5tYXB9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMjUpLHI9bigxMCksYT1PYmplY3QucHJvdG90eXBlLG89YS5oYXNPd25Qcm9wZXJ0eSxzPWEucHJvcGVydHlJc0VudW1lcmFibGUsYz1pKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSk/aTpmdW5jdGlvbih0KXtyZXR1cm4gcih0KSYmby5jYWxsKHQsXCJjYWxsZWVcIikmJiFzLmNhbGwodCxcImNhbGxlZVwiKX07dC5leHBvcnRzPWN9LGZ1bmN0aW9uKHQsZSl7dmFyIG49L14oPzowfFsxLTldXFxkKikkLzt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXt2YXIgaT10eXBlb2YgdDtyZXR1cm4hIShlPW51bGw9PWU/OTAwNzE5OTI1NDc0MDk5MTplKSYmKFwibnVtYmVyXCI9PWl8fFwic3ltYm9sXCIhPWkmJm4udGVzdCh0KSkmJnQ+LTEmJnQlMT09MCYmdDxlfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiOyhmdW5jdGlvbihlKXt2b2lkIDA9PT1lfHwhZS52ZXJzaW9ufHwwPT09ZS52ZXJzaW9uLmluZGV4T2YoXCJ2MC5cIil8fDA9PT1lLnZlcnNpb24uaW5kZXhPZihcInYxLlwiKSYmMCE9PWUudmVyc2lvbi5pbmRleE9mKFwidjEuOC5cIik/dC5leHBvcnRzPXtuZXh0VGljazpmdW5jdGlvbih0LG4saSxyKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoJ1wiY2FsbGJhY2tcIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTt2YXIgYSxvLHM9YXJndW1lbnRzLmxlbmd0aDtzd2l0Y2gocyl7Y2FzZSAwOmNhc2UgMTpyZXR1cm4gZS5uZXh0VGljayh0KTtjYXNlIDI6cmV0dXJuIGUubmV4dFRpY2soKGZ1bmN0aW9uKCl7dC5jYWxsKG51bGwsbil9KSk7Y2FzZSAzOnJldHVybiBlLm5leHRUaWNrKChmdW5jdGlvbigpe3QuY2FsbChudWxsLG4saSl9KSk7Y2FzZSA0OnJldHVybiBlLm5leHRUaWNrKChmdW5jdGlvbigpe3QuY2FsbChudWxsLG4saSxyKX0pKTtkZWZhdWx0OmZvcihhPW5ldyBBcnJheShzLTEpLG89MDtvPGEubGVuZ3RoOylhW28rK109YXJndW1lbnRzW29dO3JldHVybiBlLm5leHRUaWNrKChmdW5jdGlvbigpe3QuYXBwbHkobnVsbCxhKX0pKX19fTp0LmV4cG9ydHM9ZX0pLmNhbGwodGhpcyxuKDMpKX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPW4oMikuQnVmZmVyLHI9aS5pc0VuY29kaW5nfHxmdW5jdGlvbih0KXtzd2l0Y2goKHQ9XCJcIit0KSYmdC50b0xvd2VyQ2FzZSgpKXtjYXNlXCJoZXhcIjpjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpjYXNlXCJhc2NpaVwiOmNhc2VcImJpbmFyeVwiOmNhc2VcImJhc2U2NFwiOmNhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOmNhc2VcInJhd1wiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fTtmdW5jdGlvbiBhKHQpe3ZhciBlO3N3aXRjaCh0aGlzLmVuY29kaW5nPWZ1bmN0aW9uKHQpe3ZhciBlPWZ1bmN0aW9uKHQpe2lmKCF0KXJldHVyblwidXRmOFwiO2Zvcih2YXIgZTs7KXN3aXRjaCh0KXtjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpyZXR1cm5cInV0ZjhcIjtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm5cInV0ZjE2bGVcIjtjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm5cImxhdGluMVwiO2Nhc2VcImJhc2U2NFwiOmNhc2VcImFzY2lpXCI6Y2FzZVwiaGV4XCI6cmV0dXJuIHQ7ZGVmYXVsdDppZihlKXJldHVybjt0PShcIlwiK3QpLnRvTG93ZXJDYXNlKCksZT0hMH19KHQpO2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlJiYoaS5pc0VuY29kaW5nPT09cnx8IXIodCkpKXRocm93IG5ldyBFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK3QpO3JldHVybiBlfHx0fSh0KSx0aGlzLmVuY29kaW5nKXtjYXNlXCJ1dGYxNmxlXCI6dGhpcy50ZXh0PWMsdGhpcy5lbmQ9dSxlPTQ7YnJlYWs7Y2FzZVwidXRmOFwiOnRoaXMuZmlsbExhc3Q9cyxlPTQ7YnJlYWs7Y2FzZVwiYmFzZTY0XCI6dGhpcy50ZXh0PWwsdGhpcy5lbmQ9cCxlPTM7YnJlYWs7ZGVmYXVsdDpyZXR1cm4gdGhpcy53cml0ZT1mLHZvaWQodGhpcy5lbmQ9ZCl9dGhpcy5sYXN0TmVlZD0wLHRoaXMubGFzdFRvdGFsPTAsdGhpcy5sYXN0Q2hhcj1pLmFsbG9jVW5zYWZlKGUpfWZ1bmN0aW9uIG8odCl7cmV0dXJuIHQ8PTEyNz8wOnQ+PjU9PTY/Mjp0Pj40PT0xND8zOnQ+PjM9PTMwPzQ6dD4+Nj09Mj8tMTotMn1mdW5jdGlvbiBzKHQpe3ZhciBlPXRoaXMubGFzdFRvdGFsLXRoaXMubGFzdE5lZWQsbj1mdW5jdGlvbih0LGUsbil7aWYoMTI4IT0oMTkyJmVbMF0pKXJldHVybiB0Lmxhc3ROZWVkPTAsXCLvv71cIjtpZih0Lmxhc3ROZWVkPjEmJmUubGVuZ3RoPjEpe2lmKDEyOCE9KDE5MiZlWzFdKSlyZXR1cm4gdC5sYXN0TmVlZD0xLFwi77+9XCI7aWYodC5sYXN0TmVlZD4yJiZlLmxlbmd0aD4yJiYxMjghPSgxOTImZVsyXSkpcmV0dXJuIHQubGFzdE5lZWQ9MixcIu+/vVwifX0odGhpcyx0KTtyZXR1cm4gdm9pZCAwIT09bj9uOnRoaXMubGFzdE5lZWQ8PXQubGVuZ3RoPyh0LmNvcHkodGhpcy5sYXN0Q2hhcixlLDAsdGhpcy5sYXN0TmVlZCksdGhpcy5sYXN0Q2hhci50b1N0cmluZyh0aGlzLmVuY29kaW5nLDAsdGhpcy5sYXN0VG90YWwpKToodC5jb3B5KHRoaXMubGFzdENoYXIsZSwwLHQubGVuZ3RoKSx2b2lkKHRoaXMubGFzdE5lZWQtPXQubGVuZ3RoKSl9ZnVuY3Rpb24gYyh0LGUpe2lmKCh0Lmxlbmd0aC1lKSUyPT0wKXt2YXIgbj10LnRvU3RyaW5nKFwidXRmMTZsZVwiLGUpO2lmKG4pe3ZhciBpPW4uY2hhckNvZGVBdChuLmxlbmd0aC0xKTtpZihpPj01NTI5NiYmaTw9NTYzMTkpcmV0dXJuIHRoaXMubGFzdE5lZWQ9Mix0aGlzLmxhc3RUb3RhbD00LHRoaXMubGFzdENoYXJbMF09dFt0Lmxlbmd0aC0yXSx0aGlzLmxhc3RDaGFyWzFdPXRbdC5sZW5ndGgtMV0sbi5zbGljZSgwLC0xKX1yZXR1cm4gbn1yZXR1cm4gdGhpcy5sYXN0TmVlZD0xLHRoaXMubGFzdFRvdGFsPTIsdGhpcy5sYXN0Q2hhclswXT10W3QubGVuZ3RoLTFdLHQudG9TdHJpbmcoXCJ1dGYxNmxlXCIsZSx0Lmxlbmd0aC0xKX1mdW5jdGlvbiB1KHQpe3ZhciBlPXQmJnQubGVuZ3RoP3RoaXMud3JpdGUodCk6XCJcIjtpZih0aGlzLmxhc3ROZWVkKXt2YXIgbj10aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkO3JldHVybiBlK3RoaXMubGFzdENoYXIudG9TdHJpbmcoXCJ1dGYxNmxlXCIsMCxuKX1yZXR1cm4gZX1mdW5jdGlvbiBsKHQsZSl7dmFyIG49KHQubGVuZ3RoLWUpJTM7cmV0dXJuIDA9PT1uP3QudG9TdHJpbmcoXCJiYXNlNjRcIixlKToodGhpcy5sYXN0TmVlZD0zLW4sdGhpcy5sYXN0VG90YWw9MywxPT09bj90aGlzLmxhc3RDaGFyWzBdPXRbdC5sZW5ndGgtMV06KHRoaXMubGFzdENoYXJbMF09dFt0Lmxlbmd0aC0yXSx0aGlzLmxhc3RDaGFyWzFdPXRbdC5sZW5ndGgtMV0pLHQudG9TdHJpbmcoXCJiYXNlNjRcIixlLHQubGVuZ3RoLW4pKX1mdW5jdGlvbiBwKHQpe3ZhciBlPXQmJnQubGVuZ3RoP3RoaXMud3JpdGUodCk6XCJcIjtyZXR1cm4gdGhpcy5sYXN0TmVlZD9lK3RoaXMubGFzdENoYXIudG9TdHJpbmcoXCJiYXNlNjRcIiwwLDMtdGhpcy5sYXN0TmVlZCk6ZX1mdW5jdGlvbiBmKHQpe3JldHVybiB0LnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpfWZ1bmN0aW9uIGQodCl7cmV0dXJuIHQmJnQubGVuZ3RoP3RoaXMud3JpdGUodCk6XCJcIn1lLlN0cmluZ0RlY29kZXI9YSxhLnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0KXtpZigwPT09dC5sZW5ndGgpcmV0dXJuXCJcIjt2YXIgZSxuO2lmKHRoaXMubGFzdE5lZWQpe2lmKHZvaWQgMD09PShlPXRoaXMuZmlsbExhc3QodCkpKXJldHVyblwiXCI7bj10aGlzLmxhc3ROZWVkLHRoaXMubGFzdE5lZWQ9MH1lbHNlIG49MDtyZXR1cm4gbjx0Lmxlbmd0aD9lP2UrdGhpcy50ZXh0KHQsbik6dGhpcy50ZXh0KHQsbik6ZXx8XCJcIn0sYS5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKHQpe3ZhciBlPXQmJnQubGVuZ3RoP3RoaXMud3JpdGUodCk6XCJcIjtyZXR1cm4gdGhpcy5sYXN0TmVlZD9lK1wi77+9XCI6ZX0sYS5wcm90b3R5cGUudGV4dD1mdW5jdGlvbih0LGUpe3ZhciBuPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1lLmxlbmd0aC0xO2lmKGk8bilyZXR1cm4gMDt2YXIgcj1vKGVbaV0pO2lmKHI+PTApcmV0dXJuIHI+MCYmKHQubGFzdE5lZWQ9ci0xKSxyO2lmKC0taTxufHwtMj09PXIpcmV0dXJuIDA7aWYoKHI9byhlW2ldKSk+PTApcmV0dXJuIHI+MCYmKHQubGFzdE5lZWQ9ci0yKSxyO2lmKC0taTxufHwtMj09PXIpcmV0dXJuIDA7aWYoKHI9byhlW2ldKSk+PTApcmV0dXJuIHI+MCYmKDI9PT1yP3I9MDp0Lmxhc3ROZWVkPXItMykscjtyZXR1cm4gMH0odGhpcyx0LGUpO2lmKCF0aGlzLmxhc3ROZWVkKXJldHVybiB0LnRvU3RyaW5nKFwidXRmOFwiLGUpO3RoaXMubGFzdFRvdGFsPW47dmFyIGk9dC5sZW5ndGgtKG4tdGhpcy5sYXN0TmVlZCk7cmV0dXJuIHQuY29weSh0aGlzLmxhc3RDaGFyLDAsaSksdC50b1N0cmluZyhcInV0ZjhcIixlLGkpfSxhLnByb3RvdHlwZS5maWxsTGFzdD1mdW5jdGlvbih0KXtpZih0aGlzLmxhc3ROZWVkPD10Lmxlbmd0aClyZXR1cm4gdC5jb3B5KHRoaXMubGFzdENoYXIsdGhpcy5sYXN0VG90YWwtdGhpcy5sYXN0TmVlZCwwLHRoaXMubGFzdE5lZWQpLHRoaXMubGFzdENoYXIudG9TdHJpbmcodGhpcy5lbmNvZGluZywwLHRoaXMubGFzdFRvdGFsKTt0LmNvcHkodGhpcy5sYXN0Q2hhcix0aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkLDAsdC5sZW5ndGgpLHRoaXMubGFzdE5lZWQtPXQubGVuZ3RofX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXtjb25zdCBpPW4oMTIpLHI9bigxNjIpLGE9big2OSksbz1uKDEyKS5sb29rdXAscz1uKDEyKSxjPW4oMTYzKSx1PW4oMzEpLGw9e2hvc3RWYWxpZGF0aW9uUmVnZXg6L14oKFthLXpBLVowLTldfFthLXpBLVowLTldW2EtekEtWjAtOS1dKlthLXpBLVowLTldKVxcLikqKFtBLVphLXowLTldfFtBLVphLXowLTldW0EtWmEtejAtOS1dKltBLVphLXowLTldKSQvLHZhbGlkYXRlU2NoZW1hOmZ1bmN0aW9uKHQsZSl7KEFycmF5LmlzQXJyYXkodCl8fFwib2JqZWN0XCIhPXR5cGVvZiB0KSYmKHQ9e3R5cGU6dH0pO2NvbnN0IG49KCk9PkpTT04uc3RyaW5naWZ5KGUsbnVsbCwyKSxpPSgpPT5KU09OLnN0cmluZ2lmeSh0LG51bGwsMikscj1BcnJheS5pc0FycmF5KHQudHlwZSk/dC50eXBlOlt0LnR5cGVdLGE9QXJyYXkuaXNBcnJheShlKT9cImFycmF5XCI6dHlwZW9mIGU7aWYoLTE9PXIuaW5kZXhPZihhKSl7Y29uc3QgdD1gV3JvbmcgZGF0YSB0eXBlIFwiJHthfVwiIGluc3RlYWQgb2YgXCIke3J9XCIgJHtuKCl9IGZvciAke2koKX1gO3Rocm93IG5ldyB1LldvcmtFcnJvcih0LFwiRVJSX1NUT1JBQ0xFX1ZBTElEQVRFX1NDSEVNQV9XUk9OR19EQVRBX1RZUEVcIil9aWYoXCJhcnJheVwiPT1hKXtjb25zdCByPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQubWluTGVuZ3RoP3IoZSk6dC5taW5MZW5ndGgsYT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lm1heExlbmd0aD9hKGUpOnQubWF4TGVuZ3RoO2lmKHImJmUubGVuZ3RoPHIpe2NvbnN0IHQ9YFdyb25nIGFycmF5IG1pbiBsZW5ndGggJHtuKCl9IGZvciAke2koKX1gO3Rocm93IG5ldyB1LldvcmtFcnJvcih0LFwiRVJSX1NUT1JBQ0xFX1ZBTElEQVRFX1NDSEVNQV9XUk9OR19BUlJBWV9NSU5fTEVOR1RIXCIpfWlmKGEmJmUubGVuZ3RoPmEpe2NvbnN0IHQ9YFdyb25nIGFycmF5IG1heCBsZW5ndGggJHtuKCl9IGZvciAke2koKX1gO3Rocm93IG5ldyB1LldvcmtFcnJvcih0LFwiRVJSX1NUT1JBQ0xFX1ZBTElEQVRFX1NDSEVNQV9XUk9OR19BUlJBWV9NQVhfTEVOR1RIXCIpfXQuaXRlbXMmJmUuZm9yRWFjaChlPT50aGlzLnZhbGlkYXRlU2NoZW1hKHQuaXRlbXMsZSkpfWVsc2UgaWYoXCJvYmplY3RcIj09YSl7Y29uc3Qgcj10LnByb3BzfHx7fSxhPXQucmVxdWlyZWQ7aWYoYSYmIUFycmF5LmlzQXJyYXkoYSkpdGhyb3cgbmV3IEVycm9yKGBPcHRpb24gXCJyZXF1aXJlZFwiIGZvciAke2koKX0gbXVzdCBiZSBhbiBhcnJheWApO2lmKHQuY2FuQmVOdWxsJiZudWxsPT09ZSlyZXR1cm47aWYoITE9PT10LmNhbkJlTnVsbCYmbnVsbD09PWUpe2NvbnN0IHQ9YERhdGEgZm9yICR7aSgpfSBjYW4ndCBiZSBudWxsYDt0aHJvdyBuZXcgdS5Xb3JrRXJyb3IodCxcIkVSUl9TVE9SQUNMRV9WQUxJREFURV9TQ0hFTUFfTlVMTFwiKX1pZih0LnN0cmljdCl7Y29uc3QgdD1PYmplY3Qua2V5cyhyKS5zb3J0KCksYT1PYmplY3Qua2V5cyhlKS5zb3J0KCk7aWYodC50b1N0cmluZygpIT1hLnRvU3RyaW5nKCkpe2NvbnN0IHQ9YFdyb25nIHN0cmljdCBvYmplY3Qgc3RydWN0dXJlICR7bigpfSBmb3IgJHtpKCl9YDt0aHJvdyBuZXcgdS5Xb3JrRXJyb3IodCxcIkVSUl9TVE9SQUNMRV9WQUxJREFURV9TQ0hFTUFfU1RSSUNUXCIpfX1pZih0LmV4cGVjdGVkKWZvcihsZXQgdCBpbiBlKWlmKCFyLmhhc093blByb3BlcnR5KHQpKXtjb25zdCB0PWBXcm9uZyBleHBlY3RlZCBvYmplY3Qgc3RydWN0dXJlICR7bigpfSBmb3IgJHtpKCl9YDt0aHJvdyBuZXcgdS5Xb3JrRXJyb3IodCxcIkVSUl9TVE9SQUNMRV9WQUxJREFURV9TQ0hFTUFfRVhQRUNURURcIil9Y29uc3Qgbz17fTthJiZhLmZvckVhY2godD0+b1t0XT0hMCk7Zm9yKGxldCB0IGluIHIpaWYoZS5oYXNPd25Qcm9wZXJ0eSh0KSl0aGlzLnZhbGlkYXRlU2NoZW1hKHJbdF0sZVt0XSk7ZWxzZSBpZihhJiZvW3RdKXtjb25zdCBlPWBQcm9wZXJ0eSBcIiR7dH1cIiBpcyByZXF1aXJlZCBpbiAke24oKX0gZm9yICR7aSgpfWA7dGhyb3cgbmV3IHUuV29ya0Vycm9yKGUsXCJFUlJfU1RPUkFDTEVfVkFMSURBVEVfU0NIRU1BX1JFUVVJUkVEX1BST1BTXCIpfX1pZighdC5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpKXJldHVybjtsZXQgbztpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LnZhbHVlKW89dC52YWx1ZShlKTtlbHNlIGlmKHQudmFsdWUgaW5zdGFuY2VvZiBSZWdFeHApbz1TdHJpbmcoZSkubWF0Y2godC52YWx1ZSk7ZWxzZXtvPS0xIT0oQXJyYXkuaXNBcnJheSh0LnZhbHVlKT90LnZhbHVlOlt0LnZhbHVlXSkuaW5kZXhPZihlKX1pZighbyl7Y29uc3QgdD1gVmFsaWRhdGlvbiBpcyBmYWlsZWQgZm9yICR7bigpfWA7dGhyb3cgbmV3IHUuV29ya0Vycm9yKHQsXCJFUlJfU1RPUkFDTEVfVkFMSURBVEVfU0NIRU1BX1ZBTFVFXCIpfX0saXNCcm93c2VyRW52OmZ1bmN0aW9uKCl7cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIHdpbmRvd30sZ2V0UmFuZG9tRWxlbWVudDpmdW5jdGlvbih0KXtyZXR1cm4gdFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqdC5sZW5ndGgpXX0sZ2V0TXM6ZnVuY3Rpb24odCl7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIHR8fFwiYXV0b1wiPT10P3Q6YSh0KX0sZ2V0Qnl0ZXM6ZnVuY3Rpb24odCl7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIHR8fHQubWF0Y2goXCIlXCIpfHxcImF1dG9cIj09dD90OnIodCl9LGdldENwdVVzYWdlOmFzeW5jIGZ1bmN0aW9uKHQ9e30pe3JldHVybiBhd2FpdCBuZXcgUHJvbWlzZSgobixpKT0+e2NvbnN0IHI9ZS5jcHVVc2FnZSgpLGE9ZS5ocnRpbWUoKTtzZXRUaW1lb3V0KCgpPT57dHJ5e2NvbnN0IHQ9ZS5jcHVVc2FnZShyKSxpPWUuaHJ0aW1lKGEpLG89MWU2KmlbMF0raVsxXS8xZTMscz0xMDAqKHQudXNlcit0LnN5c3RlbSkvbztuKHMpfWNhdGNoKHQpe2kodCl9fSx0LnRpbWVvdXR8fDFlMyl9KX0saXNQb3J0VXNlZDphc3luYyBmdW5jdGlvbih0KXtyZXR1cm4gYXdhaXQgcy5jaGVjaygrdCxcImxvY2FsaG9zdFwiKX0sZ2V0SG9zdElwOmFzeW5jIGZ1bmN0aW9uKHQpe3JldHVyblwibG9jYWxob3N0XCI9PXQ/XCIxMjcuMC4wLjFcIjp0aGlzLmlzVmFsaWRJcCh0KT90OmF3YWl0IG5ldyBQcm9taXNlKChlLG4pPT57byh0LCh0LGkpPT50P1wiRU5PVEZPVU5EXCI9PXQuY29kZT9lKG51bGwpOm4odCk6ZShpKSl9KX0sZ2V0QWRkcmVzc0lwOmFzeW5jIGZ1bmN0aW9uKHQpe3JldHVybiBhd2FpdCB0aGlzLmdldEhvc3RJcCh0aGlzLnNwbGl0QWRkcmVzcyh0KVswXSl9LGdldFJlcXVlc3RUaW1lcjpmdW5jdGlvbih0LGU9e30pe2xldCBuPURhdGUubm93KCk7cmV0dXJuIGk9PntpZih2b2lkIDA9PT10KXJldHVybjtjb25zdCByPURhdGUubm93KCk7aWYodC09ci1uLG49cixpJiYhQXJyYXkuaXNBcnJheShpKSYmKGk9W2ldKSxpKXtsZXQgbj1pLnJlZHVjZSgodCxlKT0+dCtlKS90LHI9bj4xP2lbMF0vbjppWzBdLGE9ZS5taW4+dD90OmUubWluO3JldHVybiBhJiZyPGEmJihyPWEpLHI+MD9yOjB9cmV0dXJuIHR9fSxnZXRSZW1vdGVJcDpmdW5jdGlvbih0KXtsZXQgZT0odC5oZWFkZXJzW1wieC1mb3J3YXJkZWQtZm9yXCJdfHx0LmNvbm5lY3Rpb24ucmVtb3RlQWRkcmVzc3x8XCJcIikuc3BsaXQoXCIsXCIpWzBdLnRyaW0oKTtyZXR1cm4gZS5tYXRjaChcIjpcIikmJihlPWUucmVwbGFjZShcIjo6MVwiLFwiMTI3LjAuMC4xXCIpLGUubWF0Y2goXCIuXCIpJiYoZT1lLnJlcGxhY2UoL146OmZmZmY6LyxcIlwiKSksdGhpcy5pc0lwdjYoZSkmJihlPXRoaXMuZ2V0RnVsbElwdjYoZSkpKSxlfSxnZXRGdWxsSXB2NjpmdW5jdGlvbih0KXtyZXR1cm4gYy5wYXJzZSh0KS50b1N0cmluZyh7Zm9ybWF0OlwidjZcIix6ZXJvRWxpZGU6ITEsemVyb1BhZDohMH0pfSxpc0lwdjY6ZnVuY3Rpb24odCl7cmV0dXJuIShcInN0cmluZ1wiIT10eXBlb2YgdHx8IXQubWF0Y2goXCI6XCIpfHwhaSh0KSl9LGlwdjRUb3Y2OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmdldEZ1bGxJcHY2KFwiOjpmZmZmOlwiK3QpfSxpc0lwRXF1YWw6ZnVuY3Rpb24odCxlKXtyZXR1cm4gMD09Yy5jb21wYXJlKGMucGFyc2UodCksYy5wYXJzZShlKSl9LGNyZWF0ZUFkZHJlc3M6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5pc0lwdjYodCk/YFske3RoaXMuZ2V0RnVsbElwdjYodCl9XToke2V9YDpgJHt0fToke2V9YH0saXNWYWxpZFBvcnQ6ZnVuY3Rpb24odCl7cmV0dXJuK3Q+MCYmK3Q8PTY1NTM1fSxpc1ZhbGlkSXA6ZnVuY3Rpb24odCl7cmV0dXJuIGkodCl9LGlzVmFsaWRIb3N0bmFtZTpmdW5jdGlvbih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdCYmKHRoaXMuaG9zdFZhbGlkYXRpb25SZWdleC50ZXN0KHQpfHx0aGlzLmlzVmFsaWRJcCh0KSl9LGlzVmFsaWRBZGRyZXNzOmZ1bmN0aW9uKHQpe2lmKCF0fHxcInN0cmluZ1wiIT10eXBlb2YgdClyZXR1cm4hMTtjb25zdCBlPXRoaXMuc3BsaXRBZGRyZXNzKHQpLG49ZVswXSxpPWVbMV07cmV0dXJuIHRoaXMuaXNWYWxpZEhvc3RuYW1lKG4pJiZ0aGlzLmlzVmFsaWRQb3J0KGkpfSxzcGxpdEFkZHJlc3M6ZnVuY3Rpb24odCl7bGV0IGU7cmV0dXJuIHQmJlwic3RyaW5nXCI9PXR5cGVvZiB0P3QubWF0Y2goXCJdXCIpPyhlPXQuc3BsaXQoXCJdOlwiKSxbdGhpcy5nZXRGdWxsSXB2NihlWzBdLnNsaWNlKDEpKSwrZVsxXV0pOihlPXQuc3BsaXQoXCI6XCIpLFtlWzBdLCtlWzFdXSk6W119LGNyZWF0ZVJlcXVlc3RUaW1lb3V0RXJyb3I6ZnVuY3Rpb24oKXtjb25zdCB0PW5ldyBFcnJvcihcIlJlcXVlc3QgdGltZWQgb3V0XCIpO3JldHVybiB0LmNvZGU9XCJFUlJfU1BSRUFEQUJMRV9SRVFVRVNUX1RJTUVET1VUXCIsdH0saXNSZXF1ZXN0VGltZW91dEVycm9yOmZ1bmN0aW9uKHQpe3JldHVybi0xIT1bXCJFU09DS0VUVElNRURPVVRcIixcIkVUSU1FRE9VVFwiXS5pbmRleE9mKHQuY29kZSl8fFwicmVxdWVzdC10aW1lb3V0XCI9PXQudHlwZX19O3QuZXhwb3J0cz1sfSkuY2FsbCh0aGlzLG4oMykpfSxmdW5jdGlvbih0LGUsbil7dC5leHBvcnRzPXI7dmFyIGk9big0MCkuRXZlbnRFbWl0dGVyO2Z1bmN0aW9uIHIoKXtpLmNhbGwodGhpcyl9bigwKShyLGkpLHIuUmVhZGFibGU9bigxNyksci5Xcml0YWJsZT1uKDE2NSksci5EdXBsZXg9bigxNjYpLHIuVHJhbnNmb3JtPW4oMTY3KSxyLlBhc3NUaHJvdWdoPW4oMTY4KSxyLlN0cmVhbT1yLHIucHJvdG90eXBlLnBpcGU9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO2Z1bmN0aW9uIHIoZSl7dC53cml0YWJsZSYmITE9PT10LndyaXRlKGUpJiZuLnBhdXNlJiZuLnBhdXNlKCl9ZnVuY3Rpb24gYSgpe24ucmVhZGFibGUmJm4ucmVzdW1lJiZuLnJlc3VtZSgpfW4ub24oXCJkYXRhXCIsciksdC5vbihcImRyYWluXCIsYSksdC5faXNTdGRpb3x8ZSYmITE9PT1lLmVuZHx8KG4ub24oXCJlbmRcIixzKSxuLm9uKFwiY2xvc2VcIixjKSk7dmFyIG89ITE7ZnVuY3Rpb24gcygpe298fChvPSEwLHQuZW5kKCkpfWZ1bmN0aW9uIGMoKXtvfHwobz0hMCxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmRlc3Ryb3kmJnQuZGVzdHJveSgpKX1mdW5jdGlvbiB1KHQpe2lmKGwoKSwwPT09aS5saXN0ZW5lckNvdW50KHRoaXMsXCJlcnJvclwiKSl0aHJvdyB0fWZ1bmN0aW9uIGwoKXtuLnJlbW92ZUxpc3RlbmVyKFwiZGF0YVwiLHIpLHQucmVtb3ZlTGlzdGVuZXIoXCJkcmFpblwiLGEpLG4ucmVtb3ZlTGlzdGVuZXIoXCJlbmRcIixzKSxuLnJlbW92ZUxpc3RlbmVyKFwiY2xvc2VcIixjKSxuLnJlbW92ZUxpc3RlbmVyKFwiZXJyb3JcIix1KSx0LnJlbW92ZUxpc3RlbmVyKFwiZXJyb3JcIix1KSxuLnJlbW92ZUxpc3RlbmVyKFwiZW5kXCIsbCksbi5yZW1vdmVMaXN0ZW5lcihcImNsb3NlXCIsbCksdC5yZW1vdmVMaXN0ZW5lcihcImNsb3NlXCIsbCl9cmV0dXJuIG4ub24oXCJlcnJvclwiLHUpLHQub24oXCJlcnJvclwiLHUpLG4ub24oXCJlbmRcIixsKSxuLm9uKFwiY2xvc2VcIixsKSx0Lm9uKFwiY2xvc2VcIixsKSx0LmVtaXQoXCJwaXBlXCIsbiksdH19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzLldvcmtFcnJvcj1jbGFzcyBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIodCksdGhpcy5jb2RlPWV9fSx0LmV4cG9ydHMuQWNjZXNzRXJyb3I9Y2xhc3MgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3Rvcih0KXtzdXBlcih0KSx0aGlzLnN0YXR1c0NvZGU9NDAzfX0sdC5leHBvcnRzLk5vdEZvdW5kRXJyb3I9Y2xhc3MgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3Rvcih0KXtzdXBlcih0KSx0aGlzLnN0YXR1c0NvZGU9NDA0fX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDcpLHI9bigyMTgpLGE9bigyMTkpLG89bigyMjIpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3JldHVybiBpKHQpP3Q6cih0LGUpP1t0XTphKG8odCkpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOTUpLHI9bigxMDEpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3ZhciBuPXIodCxlKTtyZXR1cm4gaShuKT9uOnZvaWQgMH19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDE2KSxyPW4oNik7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKCFyKHQpKXJldHVybiExO3ZhciBlPWkodCk7cmV0dXJuXCJbb2JqZWN0IEZ1bmN0aW9uXVwiPT1lfHxcIltvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dXCI9PWV8fFwiW29iamVjdCBBc3luY0Z1bmN0aW9uXVwiPT1lfHxcIltvYmplY3QgUHJveHldXCI9PWV9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big1Mik7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuKXtcIl9fcHJvdG9fX1wiPT1lJiZpP2kodCxlLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMCx2YWx1ZTpuLHdyaXRhYmxlOiEwfSk6dFtlXT1ufX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIHQud2VicGFja1BvbHlmaWxsfHwodC5kZXByZWNhdGU9ZnVuY3Rpb24oKXt9LHQucGF0aHM9W10sdC5jaGlsZHJlbnx8KHQuY2hpbGRyZW49W10pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwibG9hZGVkXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHQubH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcImlkXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHQuaX19KSx0LndlYnBhY2tQb2x5ZmlsbD0xKSx0fX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzQpLHI9bigzOCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT10JiZyKHQubGVuZ3RoKSYmIWkodCl9fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdCYmdD4tMSYmdCUxPT0wJiZ0PD05MDA3MTk5MjU0NzQwOTkxfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPWZ1bmN0aW9uKCl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYpcmV0dXJuIHNlbGY7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdylyZXR1cm4gd2luZG93O2lmKHZvaWQgMCE9PWkpcmV0dXJuIGk7dGhyb3cgbmV3IEVycm9yKFwidW5hYmxlIHRvIGxvY2F0ZSBnbG9iYWwgb2JqZWN0XCIpfSgpO3QuZXhwb3J0cz1lPWkuZmV0Y2gsZS5kZWZhdWx0PWkuZmV0Y2guYmluZChpKSxlLkhlYWRlcnM9aS5IZWFkZXJzLGUuUmVxdWVzdD1pLlJlcXVlc3QsZS5SZXNwb25zZT1pLlJlc3BvbnNlfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGkscj1cIm9iamVjdFwiPT10eXBlb2YgUmVmbGVjdD9SZWZsZWN0Om51bGwsYT1yJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmFwcGx5P3IuYXBwbHk6ZnVuY3Rpb24odCxlLG4pe3JldHVybiBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuY2FsbCh0LGUsbil9O2k9ciYmXCJmdW5jdGlvblwiPT10eXBlb2Ygci5vd25LZXlzP3Iub3duS2V5czpPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzP2Z1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0KS5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyh0KSl9OmZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0KX07dmFyIG89TnVtYmVyLmlzTmFOfHxmdW5jdGlvbih0KXtyZXR1cm4gdCE9dH07ZnVuY3Rpb24gcygpe3MuaW5pdC5jYWxsKHRoaXMpfXQuZXhwb3J0cz1zLHMuRXZlbnRFbWl0dGVyPXMscy5wcm90b3R5cGUuX2V2ZW50cz12b2lkIDAscy5wcm90b3R5cGUuX2V2ZW50c0NvdW50PTAscy5wcm90b3R5cGUuX21heExpc3RlbmVycz12b2lkIDA7dmFyIGM9MTA7ZnVuY3Rpb24gdSh0KXtyZXR1cm4gdm9pZCAwPT09dC5fbWF4TGlzdGVuZXJzP3MuZGVmYXVsdE1heExpc3RlbmVyczp0Ll9tYXhMaXN0ZW5lcnN9ZnVuY3Rpb24gbCh0LGUsbixpKXt2YXIgcixhLG8scztpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcImxpc3RlbmVyXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIEZ1bmN0aW9uLiBSZWNlaXZlZCB0eXBlICcrdHlwZW9mIG4pO2lmKHZvaWQgMD09PShhPXQuX2V2ZW50cyk/KGE9dC5fZXZlbnRzPU9iamVjdC5jcmVhdGUobnVsbCksdC5fZXZlbnRzQ291bnQ9MCk6KHZvaWQgMCE9PWEubmV3TGlzdGVuZXImJih0LmVtaXQoXCJuZXdMaXN0ZW5lclwiLGUsbi5saXN0ZW5lcj9uLmxpc3RlbmVyOm4pLGE9dC5fZXZlbnRzKSxvPWFbZV0pLHZvaWQgMD09PW8pbz1hW2VdPW4sKyt0Ll9ldmVudHNDb3VudDtlbHNlIGlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG8/bz1hW2VdPWk/W24sb106W28sbl06aT9vLnVuc2hpZnQobik6by5wdXNoKG4pLChyPXUodCkpPjAmJm8ubGVuZ3RoPnImJiFvLndhcm5lZCl7by53YXJuZWQ9ITA7dmFyIGM9bmV3IEVycm9yKFwiUG9zc2libGUgRXZlbnRFbWl0dGVyIG1lbW9yeSBsZWFrIGRldGVjdGVkLiBcIitvLmxlbmd0aCtcIiBcIitTdHJpbmcoZSkrXCIgbGlzdGVuZXJzIGFkZGVkLiBVc2UgZW1pdHRlci5zZXRNYXhMaXN0ZW5lcnMoKSB0byBpbmNyZWFzZSBsaW1pdFwiKTtjLm5hbWU9XCJNYXhMaXN0ZW5lcnNFeGNlZWRlZFdhcm5pbmdcIixjLmVtaXR0ZXI9dCxjLnR5cGU9ZSxjLmNvdW50PW8ubGVuZ3RoLHM9Yyxjb25zb2xlJiZjb25zb2xlLndhcm4mJmNvbnNvbGUud2FybihzKX1yZXR1cm4gdH1mdW5jdGlvbiBwKCl7Zm9yKHZhciB0PVtdLGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXQucHVzaChhcmd1bWVudHNbZV0pO3RoaXMuZmlyZWR8fCh0aGlzLnRhcmdldC5yZW1vdmVMaXN0ZW5lcih0aGlzLnR5cGUsdGhpcy53cmFwRm4pLHRoaXMuZmlyZWQ9ITAsYSh0aGlzLmxpc3RlbmVyLHRoaXMudGFyZ2V0LHQpKX1mdW5jdGlvbiBmKHQsZSxuKXt2YXIgaT17ZmlyZWQ6ITEsd3JhcEZuOnZvaWQgMCx0YXJnZXQ6dCx0eXBlOmUsbGlzdGVuZXI6bn0scj1wLmJpbmQoaSk7cmV0dXJuIHIubGlzdGVuZXI9bixpLndyYXBGbj1yLHJ9ZnVuY3Rpb24gZCh0LGUsbil7dmFyIGk9dC5fZXZlbnRzO2lmKHZvaWQgMD09PWkpcmV0dXJuW107dmFyIHI9aVtlXTtyZXR1cm4gdm9pZCAwPT09cj9bXTpcImZ1bmN0aW9uXCI9PXR5cGVvZiByP24/W3IubGlzdGVuZXJ8fHJdOltyXTpuP2Z1bmN0aW9uKHQpe2Zvcih2YXIgZT1uZXcgQXJyYXkodC5sZW5ndGgpLG49MDtuPGUubGVuZ3RoOysrbillW25dPXRbbl0ubGlzdGVuZXJ8fHRbbl07cmV0dXJuIGV9KHIpOm0ocixyLmxlbmd0aCl9ZnVuY3Rpb24gaCh0KXt2YXIgZT10aGlzLl9ldmVudHM7aWYodm9pZCAwIT09ZSl7dmFyIG49ZVt0XTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuKXJldHVybiAxO2lmKHZvaWQgMCE9PW4pcmV0dXJuIG4ubGVuZ3RofXJldHVybiAwfWZ1bmN0aW9uIG0odCxlKXtmb3IodmFyIG49bmV3IEFycmF5KGUpLGk9MDtpPGU7KytpKW5baV09dFtpXTtyZXR1cm4gbn1PYmplY3QuZGVmaW5lUHJvcGVydHkocyxcImRlZmF1bHRNYXhMaXN0ZW5lcnNcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gY30sc2V0OmZ1bmN0aW9uKHQpe2lmKFwibnVtYmVyXCIhPXR5cGVvZiB0fHx0PDB8fG8odCkpdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RoZSB2YWx1ZSBvZiBcImRlZmF1bHRNYXhMaXN0ZW5lcnNcIiBpcyBvdXQgb2YgcmFuZ2UuIEl0IG11c3QgYmUgYSBub24tbmVnYXRpdmUgbnVtYmVyLiBSZWNlaXZlZCAnK3QrXCIuXCIpO2M9dH19KSxzLmluaXQ9ZnVuY3Rpb24oKXt2b2lkIDAhPT10aGlzLl9ldmVudHMmJnRoaXMuX2V2ZW50cyE9PU9iamVjdC5nZXRQcm90b3R5cGVPZih0aGlzKS5fZXZlbnRzfHwodGhpcy5fZXZlbnRzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fZXZlbnRzQ291bnQ9MCksdGhpcy5fbWF4TGlzdGVuZXJzPXRoaXMuX21heExpc3RlbmVyc3x8dm9pZCAwfSxzLnByb3RvdHlwZS5zZXRNYXhMaXN0ZW5lcnM9ZnVuY3Rpb24odCl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIHR8fHQ8MHx8byh0KSl0aHJvdyBuZXcgUmFuZ2VFcnJvcignVGhlIHZhbHVlIG9mIFwiblwiIGlzIG91dCBvZiByYW5nZS4gSXQgbXVzdCBiZSBhIG5vbi1uZWdhdGl2ZSBudW1iZXIuIFJlY2VpdmVkICcrdCtcIi5cIik7cmV0dXJuIHRoaXMuX21heExpc3RlbmVycz10LHRoaXN9LHMucHJvdG90eXBlLmdldE1heExpc3RlbmVycz1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMpfSxzLnByb3RvdHlwZS5lbWl0PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTE7bjxhcmd1bWVudHMubGVuZ3RoO24rKyllLnB1c2goYXJndW1lbnRzW25dKTt2YXIgaT1cImVycm9yXCI9PT10LHI9dGhpcy5fZXZlbnRzO2lmKHZvaWQgMCE9PXIpaT1pJiZ2b2lkIDA9PT1yLmVycm9yO2Vsc2UgaWYoIWkpcmV0dXJuITE7aWYoaSl7dmFyIG87aWYoZS5sZW5ndGg+MCYmKG89ZVswXSksbyBpbnN0YW5jZW9mIEVycm9yKXRocm93IG87dmFyIHM9bmV3IEVycm9yKFwiVW5oYW5kbGVkIGVycm9yLlwiKyhvP1wiIChcIitvLm1lc3NhZ2UrXCIpXCI6XCJcIikpO3Rocm93IHMuY29udGV4dD1vLHN9dmFyIGM9clt0XTtpZih2b2lkIDA9PT1jKXJldHVybiExO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGMpYShjLHRoaXMsZSk7ZWxzZXt2YXIgdT1jLmxlbmd0aCxsPW0oYyx1KTtmb3Iobj0wO248dTsrK24pYShsW25dLHRoaXMsZSl9cmV0dXJuITB9LHMucHJvdG90eXBlLmFkZExpc3RlbmVyPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGwodGhpcyx0LGUsITEpfSxzLnByb3RvdHlwZS5vbj1zLnByb3RvdHlwZS5hZGRMaXN0ZW5lcixzLnByb3RvdHlwZS5wcmVwZW5kTGlzdGVuZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbCh0aGlzLHQsZSwhMCl9LHMucHJvdG90eXBlLm9uY2U9ZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcImxpc3RlbmVyXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIEZ1bmN0aW9uLiBSZWNlaXZlZCB0eXBlICcrdHlwZW9mIGUpO3JldHVybiB0aGlzLm9uKHQsZih0aGlzLHQsZSkpLHRoaXN9LHMucHJvdG90eXBlLnByZXBlbmRPbmNlTGlzdGVuZXI9ZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcImxpc3RlbmVyXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIEZ1bmN0aW9uLiBSZWNlaXZlZCB0eXBlICcrdHlwZW9mIGUpO3JldHVybiB0aGlzLnByZXBlbmRMaXN0ZW5lcih0LGYodGhpcyx0LGUpKSx0aGlzfSxzLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lcj1mdW5jdGlvbih0LGUpe3ZhciBuLGkscixhLG87aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJsaXN0ZW5lclwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBGdW5jdGlvbi4gUmVjZWl2ZWQgdHlwZSAnK3R5cGVvZiBlKTtpZih2b2lkIDA9PT0oaT10aGlzLl9ldmVudHMpKXJldHVybiB0aGlzO2lmKHZvaWQgMD09PShuPWlbdF0pKXJldHVybiB0aGlzO2lmKG49PT1lfHxuLmxpc3RlbmVyPT09ZSkwPT0tLXRoaXMuX2V2ZW50c0NvdW50P3RoaXMuX2V2ZW50cz1PYmplY3QuY3JlYXRlKG51bGwpOihkZWxldGUgaVt0XSxpLnJlbW92ZUxpc3RlbmVyJiZ0aGlzLmVtaXQoXCJyZW1vdmVMaXN0ZW5lclwiLHQsbi5saXN0ZW5lcnx8ZSkpO2Vsc2UgaWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygbil7Zm9yKHI9LTEsYT1uLmxlbmd0aC0xO2E+PTA7YS0tKWlmKG5bYV09PT1lfHxuW2FdLmxpc3RlbmVyPT09ZSl7bz1uW2FdLmxpc3RlbmVyLHI9YTticmVha31pZihyPDApcmV0dXJuIHRoaXM7MD09PXI/bi5zaGlmdCgpOmZ1bmN0aW9uKHQsZSl7Zm9yKDtlKzE8dC5sZW5ndGg7ZSsrKXRbZV09dFtlKzFdO3QucG9wKCl9KG4sciksMT09PW4ubGVuZ3RoJiYoaVt0XT1uWzBdKSx2b2lkIDAhPT1pLnJlbW92ZUxpc3RlbmVyJiZ0aGlzLmVtaXQoXCJyZW1vdmVMaXN0ZW5lclwiLHQsb3x8ZSl9cmV0dXJuIHRoaXN9LHMucHJvdG90eXBlLm9mZj1zLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lcixzLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnM9ZnVuY3Rpb24odCl7dmFyIGUsbixpO2lmKHZvaWQgMD09PShuPXRoaXMuX2V2ZW50cykpcmV0dXJuIHRoaXM7aWYodm9pZCAwPT09bi5yZW1vdmVMaXN0ZW5lcilyZXR1cm4gMD09PWFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX2V2ZW50cz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX2V2ZW50c0NvdW50PTApOnZvaWQgMCE9PW5bdF0mJigwPT0tLXRoaXMuX2V2ZW50c0NvdW50P3RoaXMuX2V2ZW50cz1PYmplY3QuY3JlYXRlKG51bGwpOmRlbGV0ZSBuW3RdKSx0aGlzO2lmKDA9PT1hcmd1bWVudHMubGVuZ3RoKXt2YXIgcixhPU9iamVjdC5rZXlzKG4pO2ZvcihpPTA7aTxhLmxlbmd0aDsrK2kpXCJyZW1vdmVMaXN0ZW5lclwiIT09KHI9YVtpXSkmJnRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKHIpO3JldHVybiB0aGlzLnJlbW92ZUFsbExpc3RlbmVycyhcInJlbW92ZUxpc3RlbmVyXCIpLHRoaXMuX2V2ZW50cz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX2V2ZW50c0NvdW50PTAsdGhpc31pZihcImZ1bmN0aW9uXCI9PXR5cGVvZihlPW5bdF0pKXRoaXMucmVtb3ZlTGlzdGVuZXIodCxlKTtlbHNlIGlmKHZvaWQgMCE9PWUpZm9yKGk9ZS5sZW5ndGgtMTtpPj0wO2ktLSl0aGlzLnJlbW92ZUxpc3RlbmVyKHQsZVtpXSk7cmV0dXJuIHRoaXN9LHMucHJvdG90eXBlLmxpc3RlbmVycz1mdW5jdGlvbih0KXtyZXR1cm4gZCh0aGlzLHQsITApfSxzLnByb3RvdHlwZS5yYXdMaXN0ZW5lcnM9ZnVuY3Rpb24odCl7cmV0dXJuIGQodGhpcyx0LCExKX0scy5saXN0ZW5lckNvdW50PWZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdC5saXN0ZW5lckNvdW50P3QubGlzdGVuZXJDb3VudChlKTpoLmNhbGwodCxlKX0scy5wcm90b3R5cGUubGlzdGVuZXJDb3VudD1oLHMucHJvdG90eXBlLmV2ZW50TmFtZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZXZlbnRzQ291bnQ+MD9pKHRoaXMuX2V2ZW50cyk6W119fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7KGZ1bmN0aW9uKGUsaSxyKXt2YXIgYT1uKDI3KTtmdW5jdGlvbiBvKHQpe3ZhciBlPXRoaXM7dGhpcy5uZXh0PW51bGwsdGhpcy5lbnRyeT1udWxsLHRoaXMuZmluaXNoPWZ1bmN0aW9uKCl7IWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10LmVudHJ5O3QuZW50cnk9bnVsbDtmb3IoO2k7KXt2YXIgcj1pLmNhbGxiYWNrO2UucGVuZGluZ2NiLS0scihuKSxpPWkubmV4dH1lLmNvcmtlZFJlcXVlc3RzRnJlZT9lLmNvcmtlZFJlcXVlc3RzRnJlZS5uZXh0PXQ6ZS5jb3JrZWRSZXF1ZXN0c0ZyZWU9dH0oZSx0KX19dC5leHBvcnRzPWI7dmFyIHMsYz0hZS5icm93c2VyJiZbXCJ2MC4xMFwiLFwidjAuOS5cIl0uaW5kZXhPZihlLnZlcnNpb24uc2xpY2UoMCw1KSk+LTE/aTphLm5leHRUaWNrO2IuV3JpdGFibGVTdGF0ZT15O3ZhciB1PW4oMTEpO3UuaW5oZXJpdHM9bigwKTt2YXIgbD17ZGVwcmVjYXRlOm4oMTU0KX0scD1uKDY2KSxmPW4oMikuQnVmZmVyLGQ9ci5VaW50OEFycmF5fHxmdW5jdGlvbigpe307dmFyIGgsbT1uKDY3KTtmdW5jdGlvbiBnKCl7fWZ1bmN0aW9uIHkodCxlKXtzPXN8fG4oOCksdD10fHx7fTt2YXIgaT1lIGluc3RhbmNlb2Ygczt0aGlzLm9iamVjdE1vZGU9ISF0Lm9iamVjdE1vZGUsaSYmKHRoaXMub2JqZWN0TW9kZT10aGlzLm9iamVjdE1vZGV8fCEhdC53cml0YWJsZU9iamVjdE1vZGUpO3ZhciByPXQuaGlnaFdhdGVyTWFyayx1PXQud3JpdGFibGVIaWdoV2F0ZXJNYXJrLGw9dGhpcy5vYmplY3RNb2RlPzE2OjE2Mzg0O3RoaXMuaGlnaFdhdGVyTWFyaz1yfHwwPT09cj9yOmkmJih1fHwwPT09dSk/dTpsLHRoaXMuaGlnaFdhdGVyTWFyaz1NYXRoLmZsb29yKHRoaXMuaGlnaFdhdGVyTWFyayksdGhpcy5maW5hbENhbGxlZD0hMSx0aGlzLm5lZWREcmFpbj0hMSx0aGlzLmVuZGluZz0hMSx0aGlzLmVuZGVkPSExLHRoaXMuZmluaXNoZWQ9ITEsdGhpcy5kZXN0cm95ZWQ9ITE7dmFyIHA9ITE9PT10LmRlY29kZVN0cmluZ3M7dGhpcy5kZWNvZGVTdHJpbmdzPSFwLHRoaXMuZGVmYXVsdEVuY29kaW5nPXQuZGVmYXVsdEVuY29kaW5nfHxcInV0ZjhcIix0aGlzLmxlbmd0aD0wLHRoaXMud3JpdGluZz0hMSx0aGlzLmNvcmtlZD0wLHRoaXMuc3luYz0hMCx0aGlzLmJ1ZmZlclByb2Nlc3Npbmc9ITEsdGhpcy5vbndyaXRlPWZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUpe3ZhciBuPXQuX3dyaXRhYmxlU3RhdGUsaT1uLnN5bmMscj1uLndyaXRlY2I7aWYoZnVuY3Rpb24odCl7dC53cml0aW5nPSExLHQud3JpdGVjYj1udWxsLHQubGVuZ3RoLT10LndyaXRlbGVuLHQud3JpdGVsZW49MH0obiksZSkhZnVuY3Rpb24odCxlLG4saSxyKXstLWUucGVuZGluZ2NiLG4/KGEubmV4dFRpY2socixpKSxhLm5leHRUaWNrKEUsdCxlKSx0Ll93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMCx0LmVtaXQoXCJlcnJvclwiLGkpKToocihpKSx0Ll93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMCx0LmVtaXQoXCJlcnJvclwiLGkpLEUodCxlKSl9KHQsbixpLGUscik7ZWxzZXt2YXIgbz1EKG4pO298fG4uY29ya2VkfHxuLmJ1ZmZlclByb2Nlc3Npbmd8fCFuLmJ1ZmZlcmVkUmVxdWVzdHx8eCh0LG4pLGk/Yyh3LHQsbixvLHIpOncodCxuLG8scil9fShlLHQpfSx0aGlzLndyaXRlY2I9bnVsbCx0aGlzLndyaXRlbGVuPTAsdGhpcy5idWZmZXJlZFJlcXVlc3Q9bnVsbCx0aGlzLmxhc3RCdWZmZXJlZFJlcXVlc3Q9bnVsbCx0aGlzLnBlbmRpbmdjYj0wLHRoaXMucHJlZmluaXNoZWQ9ITEsdGhpcy5lcnJvckVtaXR0ZWQ9ITEsdGhpcy5idWZmZXJlZFJlcXVlc3RDb3VudD0wLHRoaXMuY29ya2VkUmVxdWVzdHNGcmVlPW5ldyBvKHRoaXMpfWZ1bmN0aW9uIGIodCl7aWYocz1zfHxuKDgpLCEoaC5jYWxsKGIsdGhpcyl8fHRoaXMgaW5zdGFuY2VvZiBzKSlyZXR1cm4gbmV3IGIodCk7dGhpcy5fd3JpdGFibGVTdGF0ZT1uZXcgeSh0LHRoaXMpLHRoaXMud3JpdGFibGU9ITAsdCYmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQud3JpdGUmJih0aGlzLl93cml0ZT10LndyaXRlKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LndyaXRldiYmKHRoaXMuX3dyaXRldj10LndyaXRldiksXCJmdW5jdGlvblwiPT10eXBlb2YgdC5kZXN0cm95JiYodGhpcy5fZGVzdHJveT10LmRlc3Ryb3kpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZmluYWwmJih0aGlzLl9maW5hbD10LmZpbmFsKSkscC5jYWxsKHRoaXMpfWZ1bmN0aW9uIHYodCxlLG4saSxyLGEsbyl7ZS53cml0ZWxlbj1pLGUud3JpdGVjYj1vLGUud3JpdGluZz0hMCxlLnN5bmM9ITAsbj90Ll93cml0ZXYocixlLm9ud3JpdGUpOnQuX3dyaXRlKHIsYSxlLm9ud3JpdGUpLGUuc3luYz0hMX1mdW5jdGlvbiB3KHQsZSxuLGkpe258fGZ1bmN0aW9uKHQsZSl7MD09PWUubGVuZ3RoJiZlLm5lZWREcmFpbiYmKGUubmVlZERyYWluPSExLHQuZW1pdChcImRyYWluXCIpKX0odCxlKSxlLnBlbmRpbmdjYi0tLGkoKSxFKHQsZSl9ZnVuY3Rpb24geCh0LGUpe2UuYnVmZmVyUHJvY2Vzc2luZz0hMDt2YXIgbj1lLmJ1ZmZlcmVkUmVxdWVzdDtpZih0Ll93cml0ZXYmJm4mJm4ubmV4dCl7dmFyIGk9ZS5idWZmZXJlZFJlcXVlc3RDb3VudCxyPW5ldyBBcnJheShpKSxhPWUuY29ya2VkUmVxdWVzdHNGcmVlO2EuZW50cnk9bjtmb3IodmFyIHM9MCxjPSEwO247KXJbc109bixuLmlzQnVmfHwoYz0hMSksbj1uLm5leHQscys9MTtyLmFsbEJ1ZmZlcnM9Yyx2KHQsZSwhMCxlLmxlbmd0aCxyLFwiXCIsYS5maW5pc2gpLGUucGVuZGluZ2NiKyssZS5sYXN0QnVmZmVyZWRSZXF1ZXN0PW51bGwsYS5uZXh0PyhlLmNvcmtlZFJlcXVlc3RzRnJlZT1hLm5leHQsYS5uZXh0PW51bGwpOmUuY29ya2VkUmVxdWVzdHNGcmVlPW5ldyBvKGUpLGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQ9MH1lbHNle2Zvcig7bjspe3ZhciB1PW4uY2h1bmssbD1uLmVuY29kaW5nLHA9bi5jYWxsYmFjaztpZih2KHQsZSwhMSxlLm9iamVjdE1vZGU/MTp1Lmxlbmd0aCx1LGwscCksbj1uLm5leHQsZS5idWZmZXJlZFJlcXVlc3RDb3VudC0tLGUud3JpdGluZylicmVha31udWxsPT09biYmKGUubGFzdEJ1ZmZlcmVkUmVxdWVzdD1udWxsKX1lLmJ1ZmZlcmVkUmVxdWVzdD1uLGUuYnVmZmVyUHJvY2Vzc2luZz0hMX1mdW5jdGlvbiBEKHQpe3JldHVybiB0LmVuZGluZyYmMD09PXQubGVuZ3RoJiZudWxsPT09dC5idWZmZXJlZFJlcXVlc3QmJiF0LmZpbmlzaGVkJiYhdC53cml0aW5nfWZ1bmN0aW9uIF8odCxlKXt0Ll9maW5hbCgoZnVuY3Rpb24obil7ZS5wZW5kaW5nY2ItLSxuJiZ0LmVtaXQoXCJlcnJvclwiLG4pLGUucHJlZmluaXNoZWQ9ITAsdC5lbWl0KFwicHJlZmluaXNoXCIpLEUodCxlKX0pKX1mdW5jdGlvbiBFKHQsZSl7dmFyIG49RChlKTtyZXR1cm4gbiYmKCFmdW5jdGlvbih0LGUpe2UucHJlZmluaXNoZWR8fGUuZmluYWxDYWxsZWR8fChcImZ1bmN0aW9uXCI9PXR5cGVvZiB0Ll9maW5hbD8oZS5wZW5kaW5nY2IrKyxlLmZpbmFsQ2FsbGVkPSEwLGEubmV4dFRpY2soXyx0LGUpKTooZS5wcmVmaW5pc2hlZD0hMCx0LmVtaXQoXCJwcmVmaW5pc2hcIikpKX0odCxlKSwwPT09ZS5wZW5kaW5nY2ImJihlLmZpbmlzaGVkPSEwLHQuZW1pdChcImZpbmlzaFwiKSkpLG59dS5pbmhlcml0cyhiLHApLHkucHJvdG90eXBlLmdldEJ1ZmZlcj1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLmJ1ZmZlcmVkUmVxdWVzdCxlPVtdO3Q7KWUucHVzaCh0KSx0PXQubmV4dDtyZXR1cm4gZX0sZnVuY3Rpb24oKXt0cnl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHkucHJvdG90eXBlLFwiYnVmZmVyXCIse2dldDpsLmRlcHJlY2F0ZSgoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRCdWZmZXIoKX0pLFwiX3dyaXRhYmxlU3RhdGUuYnVmZmVyIGlzIGRlcHJlY2F0ZWQuIFVzZSBfd3JpdGFibGVTdGF0ZS5nZXRCdWZmZXIgaW5zdGVhZC5cIixcIkRFUDAwMDNcIil9KX1jYXRjaCh0KXt9fSgpLFwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmhhc0luc3RhbmNlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBGdW5jdGlvbi5wcm90b3R5cGVbU3ltYm9sLmhhc0luc3RhbmNlXT8oaD1GdW5jdGlvbi5wcm90b3R5cGVbU3ltYm9sLmhhc0luc3RhbmNlXSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYixTeW1ib2wuaGFzSW5zdGFuY2Use3ZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiEhaC5jYWxsKHRoaXMsdCl8fHRoaXM9PT1iJiYodCYmdC5fd3JpdGFibGVTdGF0ZSBpbnN0YW5jZW9mIHkpfX0pKTpoPWZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgdGhpc30sYi5wcm90b3R5cGUucGlwZT1mdW5jdGlvbigpe3RoaXMuZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiQ2Fubm90IHBpcGUsIG5vdCByZWFkYWJsZVwiKSl9LGIucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyPXRoaXMuX3dyaXRhYmxlU3RhdGUsbz0hMSxzPSFyLm9iamVjdE1vZGUmJihpPXQsZi5pc0J1ZmZlcihpKXx8aSBpbnN0YW5jZW9mIGQpO3JldHVybiBzJiYhZi5pc0J1ZmZlcih0KSYmKHQ9ZnVuY3Rpb24odCl7cmV0dXJuIGYuZnJvbSh0KX0odCkpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGUmJihuPWUsZT1udWxsKSxzP2U9XCJidWZmZXJcIjplfHwoZT1yLmRlZmF1bHRFbmNvZGluZyksXCJmdW5jdGlvblwiIT10eXBlb2YgbiYmKG49Zyksci5lbmRlZD9mdW5jdGlvbih0LGUpe3ZhciBuPW5ldyBFcnJvcihcIndyaXRlIGFmdGVyIGVuZFwiKTt0LmVtaXQoXCJlcnJvclwiLG4pLGEubmV4dFRpY2soZSxuKX0odGhpcyxuKTooc3x8ZnVuY3Rpb24odCxlLG4saSl7dmFyIHI9ITAsbz0hMTtyZXR1cm4gbnVsbD09PW4/bz1uZXcgVHlwZUVycm9yKFwiTWF5IG5vdCB3cml0ZSBudWxsIHZhbHVlcyB0byBzdHJlYW1cIik6XCJzdHJpbmdcIj09dHlwZW9mIG58fHZvaWQgMD09PW58fGUub2JqZWN0TW9kZXx8KG89bmV3IFR5cGVFcnJvcihcIkludmFsaWQgbm9uLXN0cmluZy9idWZmZXIgY2h1bmtcIikpLG8mJih0LmVtaXQoXCJlcnJvclwiLG8pLGEubmV4dFRpY2soaSxvKSxyPSExKSxyfSh0aGlzLHIsdCxuKSkmJihyLnBlbmRpbmdjYisrLG89ZnVuY3Rpb24odCxlLG4saSxyLGEpe2lmKCFuKXt2YXIgbz1mdW5jdGlvbih0LGUsbil7dC5vYmplY3RNb2RlfHwhMT09PXQuZGVjb2RlU3RyaW5nc3x8XCJzdHJpbmdcIiE9dHlwZW9mIGV8fChlPWYuZnJvbShlLG4pKTtyZXR1cm4gZX0oZSxpLHIpO2khPT1vJiYobj0hMCxyPVwiYnVmZmVyXCIsaT1vKX12YXIgcz1lLm9iamVjdE1vZGU/MTppLmxlbmd0aDtlLmxlbmd0aCs9czt2YXIgYz1lLmxlbmd0aDxlLmhpZ2hXYXRlck1hcms7Y3x8KGUubmVlZERyYWluPSEwKTtpZihlLndyaXRpbmd8fGUuY29ya2VkKXt2YXIgdT1lLmxhc3RCdWZmZXJlZFJlcXVlc3Q7ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0PXtjaHVuazppLGVuY29kaW5nOnIsaXNCdWY6bixjYWxsYmFjazphLG5leHQ6bnVsbH0sdT91Lm5leHQ9ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0OmUuYnVmZmVyZWRSZXF1ZXN0PWUubGFzdEJ1ZmZlcmVkUmVxdWVzdCxlLmJ1ZmZlcmVkUmVxdWVzdENvdW50Kz0xfWVsc2Ugdih0LGUsITEscyxpLHIsYSk7cmV0dXJuIGN9KHRoaXMscixzLHQsZSxuKSksb30sYi5wcm90b3R5cGUuY29yaz1mdW5jdGlvbigpe3RoaXMuX3dyaXRhYmxlU3RhdGUuY29ya2VkKyt9LGIucHJvdG90eXBlLnVuY29yaz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX3dyaXRhYmxlU3RhdGU7dC5jb3JrZWQmJih0LmNvcmtlZC0tLHQud3JpdGluZ3x8dC5jb3JrZWR8fHQuZmluaXNoZWR8fHQuYnVmZmVyUHJvY2Vzc2luZ3x8IXQuYnVmZmVyZWRSZXF1ZXN0fHx4KHRoaXMsdCkpfSxiLnByb3RvdHlwZS5zZXREZWZhdWx0RW5jb2Rpbmc9ZnVuY3Rpb24odCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQmJih0PXQudG9Mb3dlckNhc2UoKSksIShbXCJoZXhcIixcInV0ZjhcIixcInV0Zi04XCIsXCJhc2NpaVwiLFwiYmluYXJ5XCIsXCJiYXNlNjRcIixcInVjczJcIixcInVjcy0yXCIsXCJ1dGYxNmxlXCIsXCJ1dGYtMTZsZVwiLFwicmF3XCJdLmluZGV4T2YoKHQrXCJcIikudG9Mb3dlckNhc2UoKSk+LTEpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJVbmtub3duIGVuY29kaW5nOiBcIit0KTtyZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5kZWZhdWx0RW5jb2Rpbmc9dCx0aGlzfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYi5wcm90b3R5cGUsXCJ3cml0YWJsZUhpZ2hXYXRlck1hcmtcIix7ZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrfX0pLGIucHJvdG90eXBlLl93cml0ZT1mdW5jdGlvbih0LGUsbil7bihuZXcgRXJyb3IoXCJfd3JpdGUoKSBpcyBub3QgaW1wbGVtZW50ZWRcIikpfSxiLnByb3RvdHlwZS5fd3JpdGV2PW51bGwsYi5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLl93cml0YWJsZVN0YXRlO1wiZnVuY3Rpb25cIj09dHlwZW9mIHQ/KG49dCx0PW51bGwsZT1udWxsKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBlJiYobj1lLGU9bnVsbCksbnVsbCE9dCYmdGhpcy53cml0ZSh0LGUpLGkuY29ya2VkJiYoaS5jb3JrZWQ9MSx0aGlzLnVuY29yaygpKSxpLmVuZGluZ3x8aS5maW5pc2hlZHx8ZnVuY3Rpb24odCxlLG4pe2UuZW5kaW5nPSEwLEUodCxlKSxuJiYoZS5maW5pc2hlZD9hLm5leHRUaWNrKG4pOnQub25jZShcImZpbmlzaFwiLG4pKTtlLmVuZGVkPSEwLHQud3JpdGFibGU9ITF9KHRoaXMsaSxuKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwiZGVzdHJveWVkXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzLl93cml0YWJsZVN0YXRlJiZ0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZH0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD10KX19KSxiLnByb3RvdHlwZS5kZXN0cm95PW0uZGVzdHJveSxiLnByb3RvdHlwZS5fdW5kZXN0cm95PW0udW5kZXN0cm95LGIucHJvdG90eXBlLl9kZXN0cm95PWZ1bmN0aW9uKHQsZSl7dGhpcy5lbmQoKSxlKHQpfX0pLmNhbGwodGhpcyxuKDMpLG4oNSkuc2V0SW1tZWRpYXRlLG4oNCkpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsaSl7dmFyIHI9big3MCksYT1uKDMwKS5TdHJlYW0sbz1uKDEzKSxzPS9eW2EtZkEtRjAtOV17OH0tW2EtZkEtRjAtOV17NH0tW2EtZkEtRjAtOV17NH0tW2EtZkEtRjAtOV17NH0tW2EtZkEtRjAtOV17MTJ9JC87ZnVuY3Rpb24gYyh0KXtyZXR1cm4gdC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSt0LnNsaWNlKDEpfWZ1bmN0aW9uIHUodCxlLG4saSxhKXt0aHJvdyBuZXcgci5Bc3NlcnRpb25FcnJvcih7bWVzc2FnZTpvLmZvcm1hdChcIiVzICglcykgaXMgcmVxdWlyZWRcIix0LGUpLGFjdHVhbDp2b2lkIDA9PT1hP3R5cGVvZiBpOmEoaSksZXhwZWN0ZWQ6ZSxvcGVyYXRvcjpufHxcIj09PVwiLHN0YWNrU3RhcnRGdW5jdGlvbjp1LmNhbGxlcn0pfWZ1bmN0aW9uIGwodCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KS5zbGljZSg4LC0xKX1mdW5jdGlvbiBwKCl7fXZhciBmPXtib29sOntjaGVjazpmdW5jdGlvbih0KXtyZXR1cm5cImJvb2xlYW5cIj09dHlwZW9mIHR9fSxmdW5jOntjaGVjazpmdW5jdGlvbih0KXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0fX0sc3RyaW5nOntjaGVjazpmdW5jdGlvbih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdH19LG9iamVjdDp7Y2hlY2s6ZnVuY3Rpb24odCl7cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIHQmJm51bGwhPT10fX0sbnVtYmVyOntjaGVjazpmdW5jdGlvbih0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdCYmIWlzTmFOKHQpfX0sZmluaXRlOntjaGVjazpmdW5jdGlvbih0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdCYmIWlzTmFOKHQpJiZpc0Zpbml0ZSh0KX19LGJ1ZmZlcjp7Y2hlY2s6ZnVuY3Rpb24odCl7cmV0dXJuIGUuaXNCdWZmZXIodCl9LG9wZXJhdG9yOlwiQnVmZmVyLmlzQnVmZmVyXCJ9LGFycmF5OntjaGVjazpmdW5jdGlvbih0KXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KX0sb3BlcmF0b3I6XCJBcnJheS5pc0FycmF5XCJ9LHN0cmVhbTp7Y2hlY2s6ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBhfSxvcGVyYXRvcjpcImluc3RhbmNlb2ZcIixhY3R1YWw6bH0sZGF0ZTp7Y2hlY2s6ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBEYXRlfSxvcGVyYXRvcjpcImluc3RhbmNlb2ZcIixhY3R1YWw6bH0scmVnZXhwOntjaGVjazpmdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIFJlZ0V4cH0sb3BlcmF0b3I6XCJpbnN0YW5jZW9mXCIsYWN0dWFsOmx9LHV1aWQ6e2NoZWNrOmZ1bmN0aW9uKHQpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0JiZzLnRlc3QodCl9LG9wZXJhdG9yOlwiaXNVVUlEXCJ9fTt0LmV4cG9ydHM9ZnVuY3Rpb24gdChlKXt2YXIgbixhPU9iamVjdC5rZXlzKGYpO3JldHVybiBuPWkuZW52Lk5PREVfTkRFQlVHP3A6ZnVuY3Rpb24odCxlKXt0fHx1KGUsXCJ0cnVlXCIsdCl9LGEuZm9yRWFjaCgoZnVuY3Rpb24odCl7aWYoZSluW3RdPXA7ZWxzZXt2YXIgaT1mW3RdO25bdF09ZnVuY3Rpb24oZSxuKXtpLmNoZWNrKGUpfHx1KG4sdCxpLm9wZXJhdG9yLGUsaS5hY3R1YWwpfX19KSksYS5mb3JFYWNoKChmdW5jdGlvbih0KXt2YXIgaT1cIm9wdGlvbmFsXCIrYyh0KTtpZihlKW5baV09cDtlbHNle3ZhciByPWZbdF07bltpXT1mdW5jdGlvbihlLG4pe251bGwhPWUmJihyLmNoZWNrKGUpfHx1KG4sdCxyLm9wZXJhdG9yLGUsci5hY3R1YWwpKX19fSkpLGEuZm9yRWFjaCgoZnVuY3Rpb24odCl7dmFyIGk9XCJhcnJheU9mXCIrYyh0KTtpZihlKW5baV09cDtlbHNle3ZhciByPWZbdF0sYT1cIltcIit0K1wiXVwiO25baV09ZnVuY3Rpb24odCxlKXt2YXIgbjtmb3IoQXJyYXkuaXNBcnJheSh0KXx8dShlLGEsci5vcGVyYXRvcix0LHIuYWN0dWFsKSxuPTA7bjx0Lmxlbmd0aDtuKyspci5jaGVjayh0W25dKXx8dShlLGEsci5vcGVyYXRvcix0LHIuYWN0dWFsKX19fSkpLGEuZm9yRWFjaCgoZnVuY3Rpb24odCl7dmFyIGk9XCJvcHRpb25hbEFycmF5T2ZcIitjKHQpO2lmKGUpbltpXT1wO2Vsc2V7dmFyIHI9Zlt0XSxhPVwiW1wiK3QrXCJdXCI7bltpXT1mdW5jdGlvbih0LGUpe3ZhciBuO2lmKG51bGwhPXQpZm9yKEFycmF5LmlzQXJyYXkodCl8fHUoZSxhLHIub3BlcmF0b3IsdCxyLmFjdHVhbCksbj0wO248dC5sZW5ndGg7bisrKXIuY2hlY2sodFtuXSl8fHUoZSxhLHIub3BlcmF0b3IsdCxyLmFjdHVhbCl9fX0pKSxPYmplY3Qua2V5cyhyKS5mb3JFYWNoKChmdW5jdGlvbih0KXtuW3RdPVwiQXNzZXJ0aW9uRXJyb3JcIiE9PXQmJmU/cDpyW3RdfSkpLG4uX3NldEV4cG9ydHM9dCxufShpLmVudi5OT0RFX05ERUJVRyl9KS5jYWxsKHRoaXMsbigxKS5CdWZmZXIsbigzKSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSgpPT5jbGFzc3thc3luYyBpbml0KCl7dGhpcy5fX2luaXRpYWxpemVkPURhdGUubm93KCl9YXN5bmMgZGVpbml0KCl7dGhpcy5fX2luaXRpYWxpemVkPSExfWFzeW5jIGRlc3Ryb3koKXt0aGlzLl9fZGVzdHJveWluZz0hMCxhd2FpdCB0aGlzLmRlaW5pdCgpLHRoaXMuX19kZXN0cm95aW5nPSExfWlzSW5pdGlhbGl6ZWQoKXtyZXR1cm4hIXRoaXMuX19pbml0aWFsaXplZH1pc0Rlc3Ryb3lpbmcoKXtyZXR1cm4hIXRoaXMuX19kZXN0cm95aW5nfX19LGZ1bmN0aW9uKHQpe3QuZXhwb3J0cz1KU09OLnBhcnNlKCdbW1wiMFwiLFwiXFxcXHUwMDAwXCIsMTI3LFwi4oKsXCJdLFtcIjgxNDBcIixcIuS4guS4hOS4heS4huS4j+S4kuS4l+S4n+S4oOS4oeS4o+S4puS4qeS4ruS4r+S4seS4s+S4teS4t+S4vOS5gOS5geS5guS5hOS5huS5iuS5keS5leS5l+S5muS5m+S5ouS5o+S5pOS5peS5p+S5qOS5qlwiLDUsXCLkubLkubRcIiw5LFwi5Lm/XCIsNixcIuS6h+S6ilwiXSxbXCI4MTgwXCIsXCLkupDkupbkupfkupnkupzkup3kup7kuqPkuqrkuq/kurDkurHkurTkurbkurfkurjkurnkurzkur3kur7ku4jku4zku4/ku5Dku5Lku5rku5vku5zku6Dku6Lku6bku6fku6nku63ku67ku6/ku7Hku7Tku7jku7nku7rku7zku77kvIDkvIJcIiw2LFwi5LyL5LyM5LySXCIsNCxcIuS8nOS8neS8oeS8o+S8qOS8qeS8rOS8reS8ruS8seS8s+S8teS8t+S8ueS8u+S8vlwiLDQsXCLkvYTkvYXkvYdcIiw1LFwi5L2S5L2U5L2W5L2h5L2i5L2m5L2o5L2q5L2r5L2t5L2u5L2x5L2y5L215L235L245L255L265L295L6A5L6B5L6C5L6F5L6G5L6H5L6K5L6M5L6O5L6Q5L6S5L6T5L6V5L6W5L6Y5L6Z5L6a5L6c5L6e5L6f5L6h5L6iXCJdLFtcIjgyNDBcIixcIuS+pOS+q+S+reS+sFwiLDQsXCLkvrZcIiw4LFwi5L+A5L+B5L+C5L+G5L+H5L+I5L+J5L+L5L+M5L+N5L+SXCIsNCxcIuS/meS/m+S/oOS/ouS/pOS/peS/p+S/q+S/rOS/sOS/suS/tOS/teS/tuS/t+S/ueS/u+S/vOS/veS/v1wiLDExXSxbXCI4MjgwXCIsXCLlgIvlgI7lgJDlgJHlgJPlgJXlgJblgJflgJvlgJ3lgJ7lgKDlgKLlgKPlgKTlgKflgKvlgK9cIiwxMCxcIuWAu+WAveWAv+WBgOWBgeWBguWBhOWBheWBhuWBieWBiuWBi+WBjeWBkFwiLDQsXCLlgZblgZflgZjlgZnlgZvlgZ1cIiw3LFwi5YGmXCIsNSxcIuWBrVwiLDgsXCLlgbjlgbnlgbrlgbzlgb3lgoHlgoLlgoPlgoTlgoblgoflgonlgorlgovlgozlgo5cIiwyMCxcIuWCpOWCpuWCquWCq+WCrVwiLDQsXCLlgrNcIiw2LFwi5YK8XCJdLFtcIjgzNDBcIixcIuWCvVwiLDE3LFwi5YOQXCIsNSxcIuWDl+WDmOWDmeWDm1wiLDEwLFwi5YOo5YOp5YOq5YOr5YOv5YOw5YOx5YOy5YO05YO2XCIsNCxcIuWDvFwiLDksXCLlhIhcIl0sW1wiODM4MFwiLFwi5YSJ5YSK5YSMXCIsNSxcIuWEk1wiLDEzLFwi5YSiXCIsMjgsXCLlhYLlhYflhYrlhYzlhY7lhY/lhZDlhZLlhZPlhZflhZjlhZnlhZvlhZ1cIiw0LFwi5YWj5YWk5YWm5YWn5YWp5YWq5YWv5YWy5YW65YW+5YW/5YaD5YaE5YaG5YaH5YaK5YaL5YaO5YaP5YaQ5YaR5YaT5YaU5YaY5Yaa5Yad5Yae5Yaf5Yah5Yaj5YamXCIsNCxcIuWGreWGruWGtOWGuOWGueWGuuWGvuWGv+WHgeWHguWHg+WHheWHiOWHiuWHjeWHjuWHkOWHklwiLDVdLFtcIjg0NDBcIixcIuWHmOWHmeWHmuWHnOWHnuWHn+WHouWHo+WHpVwiLDUsXCLlh6zlh67lh7Hlh7Llh7Tlh7flh77liITliIXliInliIvliIzliI/liJDliJPliJTliJXliJzliJ7liJ/liKHliKLliKPliKXliKbliKfliKrliKzliK/liLHliLLliLTliLXliLzliL7liYRcIiw1LFwi5YmL5YmO5YmP5YmS5YmT5YmV5YmX5YmYXCJdLFtcIjg0ODBcIixcIuWJmeWJmuWJm+WJneWJn+WJoOWJouWJo+WJpOWJpuWJqOWJq+WJrOWJreWJruWJsOWJseWJs1wiLDksXCLlib7lioDlioNcIiw0LFwi5YqJXCIsNixcIuWKkeWKkuWKlFwiLDYsXCLlipzliqTliqXliqbliqfliq7liq/lirDlirRcIiw5LFwi5YuA5YuB5YuC5YuE5YuF5YuG5YuI5YuK5YuM5YuN5YuO5YuP5YuR5YuT5YuU5YuV5YuX5YuZXCIsNSxcIuWLoOWLoeWLouWLo+WLpVwiLDEwLFwi5YuxXCIsNyxcIuWLu+WLvOWLveWMgeWMguWMg+WMhOWMh+WMieWMiuWMi+WMjOWMjlwiXSxbXCI4NTQwXCIsXCLljJHljJLljJPljJTljJjljJvljJzljJ7ljJ/ljKLljKTljKXljKfljKjljKnljKvljKzljK3ljK9cIiw5LFwi5Yy85Yy95Y2A5Y2C5Y2E5Y2G5Y2L5Y2M5Y2N5Y2Q5Y2U5Y2Y5Y2Z5Y2b5Y2d5Y2l5Y2o5Y2q5Y2s5Y2t5Y2y5Y225Y255Y275Y285Y295Y2+5Y6A5Y6B5Y6D5Y6H5Y6I5Y6K5Y6O5Y6PXCJdLFtcIjg1ODBcIixcIuWOkFwiLDQsXCLljpbljpfljpnljpvljpzljp7ljqDljqHljqTljqfljqrljqvljqzljq3ljq9cIiw2LFwi5Y635Y645Y655Y665Y685Y695Y6+5Y+A5Y+DXCIsNCxcIuWPjuWPj+WPkOWPkuWPk+WPleWPmuWPnOWPneWPnuWPoeWPouWPp+WPtOWPuuWPvuWPv+WQgOWQguWQheWQh+WQi+WQlOWQmOWQmeWQmuWQnOWQouWQpOWQpeWQquWQsOWQs+WQtuWQt+WQuuWQveWQv+WRgeWRguWRhOWRheWRh+WRieWRjOWRjeWRjuWRj+WRkeWRmuWRnVwiLDQsXCLlkaPlkaXlkaflkalcIiw3LFwi5ZG05ZG55ZG65ZG+5ZG/5ZKB5ZKD5ZKF5ZKH5ZKI5ZKJ5ZKK5ZKN5ZKR5ZKT5ZKX5ZKY5ZKc5ZKe5ZKf5ZKg5ZKhXCJdLFtcIjg2NDBcIixcIuWSouWSpeWSruWSsOWSsuWSteWStuWSt+WSueWSuuWSvOWSvuWTg+WTheWTiuWTi+WTluWTmOWTm+WToFwiLDQsXCLlk6vlk6zlk6/lk7Dlk7Hlk7RcIiw1LFwi5ZO75ZO+5ZSA5ZSC5ZSD5ZSE5ZSF5ZSI5ZSKXCIsNCxcIuWUkuWUk+WUlVwiLDUsXCLllJzllJ3llJ7llJ/llKHllKXllKZcIl0sW1wiODY4MFwiLFwi5ZSo5ZSp5ZSr5ZSt5ZSy5ZS05ZS15ZS25ZS45ZS55ZS65ZS75ZS95ZWA5ZWC5ZWF5ZWH5ZWI5ZWLXCIsNCxcIuWVkeWVkuWVk+WVlOWVl1wiLDQsXCLllZ3llZ7llZ/llaDllaLllaPllajllanllavlla9cIiw1LFwi5ZW55ZW65ZW95ZW/5ZaF5ZaG5ZaM5ZaN5ZaO5ZaQ5ZaS5ZaT5ZaV5ZaW5ZaX5Zaa5Zab5Zae5ZagXCIsNixcIuWWqFwiLDgsXCLllrLllrTllrbllrjllrrllrzllr9cIiw0LFwi5ZeG5ZeH5ZeI5ZeK5ZeL5ZeO5ZeP5ZeQ5ZeV5ZeXXCIsNCxcIuWXnuWXoOWXouWXp+WXqeWXreWXruWXsOWXseWXtOWXtuWXuFwiLDQsXCLll7/lmILlmIPlmITlmIVcIl0sW1wiODc0MFwiLFwi5ZiG5ZiH5ZiK5ZiL5ZiN5ZiQXCIsNyxcIuWYmeWYmuWYnOWYneWYoOWYoeWYouWYpeWYpuWYqOWYqeWYquWYq+WYruWYr+WYsOWYs+WYteWYt+WYuOWYuuWYvOWYveWYvuWZgFwiLDExLFwi5ZmPXCIsNCxcIuWZleWZluWZmuWZm+WZnVwiLDRdLFtcIjg3ODBcIixcIuWZo+WZpeWZpuWZp+WZreWZruWZr+WZsOWZsuWZs+WZtOWZteWZt+WZuOWZueWZuuWZvVwiLDcsXCLlmodcIiw2LFwi5ZqQ5ZqR5ZqS5ZqUXCIsMTQsXCLlmqRcIiwxMCxcIuWasFwiLDYsXCLlmrjlmrnlmrrlmrvlmr1cIiwxMixcIuWbi1wiLDgsXCLlm5Xlm5blm5jlm5nlm5zlm6Plm6VcIiw1LFwi5Zus5Zuu5Zuv5Zuy5Zuz5Zu25Zu35Zu45Zu75Zu85ZyA5ZyB5ZyC5ZyF5ZyH5ZyLXCIsNl0sW1wiODg0MFwiLFwi5ZySXCIsOSxcIuWcneWcnuWcoOWcoeWcouWcpOWcpeWcpuWcp+Wcq+WcseWcsuWctFwiLDQsXCLlnLzlnL3lnL/lnYHlnYPlnYTlnYXlnYblnYjlnYnlnYvlnZJcIiw0LFwi5Z2Y5Z2Z5Z2i5Z2j5Z2l5Z2n5Z2s5Z2u5Z2w5Z2x5Z2y5Z205Z215Z245Z255Z265Z295Z2+5Z2/5Z6AXCJdLFtcIjg4ODBcIixcIuWegeWeh+WeiOWeieWeiuWejVwiLDQsXCLlnpRcIiw2LFwi5Z6c5Z6d5Z6e5Z6f5Z6l5Z6o5Z6q5Z6s5Z6v5Z6w5Z6x5Z6z5Z615Z625Z635Z65XCIsOCxcIuWfhFwiLDYsXCLln4zln43ln5Dln5Hln5Pln5bln5fln5vln5zln57ln6Hln6Lln6Pln6VcIiw3LFwi5Z+u5Z+w5Z+x5Z+y5Z+z5Z+15Z+25Z+35Z+75Z+85Z++5Z+/5aCB5aCD5aCE5aCF5aCI5aCJ5aCK5aCM5aCO5aCP5aCQ5aCS5aCT5aCU5aCW5aCX5aCY5aCa5aCb5aCc5aCd5aCf5aCi5aCj5aClXCIsNCxcIuWgq1wiLDQsXCLloLHloLLloLPloLTloLZcIiw3XSxbXCI4OTQwXCIsXCLloL5cIiw1LFwi5aGFXCIsNixcIuWhjuWhj+WhkOWhkuWhk+WhleWhluWhl+WhmVwiLDQsXCLloZ9cIiw1LFwi5aGmXCIsNCxcIuWhrVwiLDE2LFwi5aG/5aKC5aKE5aKG5aKH5aKI5aKK5aKL5aKMXCJdLFtcIjg5ODBcIixcIuWijVwiLDQsXCLlopRcIiw0LFwi5aKb5aKc5aKd5aKgXCIsNyxcIuWiqlwiLDE3LFwi5aK95aK+5aK/5aOA5aOC5aOD5aOE5aOGXCIsMTAsXCLlo5Llo5Plo5Tlo5ZcIiwxMyxcIuWjpVwiLDUsXCLlo63lo6/lo7Hlo7Llo7Tlo7Xlo7flo7jlo7pcIiw3LFwi5aSD5aSF5aSG5aSIXCIsNCxcIuWkjuWkkOWkkeWkkuWkk+Wkl+WkmOWkm+WkneWknuWkoOWkoeWkouWko+WkpuWkqOWkrOWksOWksuWks+WkteWktuWku1wiXSxbXCI4YTQwXCIsXCLlpL3lpL7lpL/lpYDlpYPlpYXlpYblpYrlpYzlpY3lpZDlpZLlpZPlpZnlpZtcIiw0LFwi5aWh5aWj5aWk5aWmXCIsMTIsXCLlpbXlpbflpbrlpbvlpbzlpb7lpb/lpoDlpoXlponlpovlpozlpo7lpo/lppDlppHlppTlppXlppjlpprlppvlppzlpp3lpp/lpqDlpqHlpqLlpqZcIl0sW1wiOGE4MFwiLFwi5aan5aas5aat5aaw5aax5aazXCIsNSxcIuWmuuWmvOWmveWmv1wiLDYsXCLlp4flp4jlp4nlp4zlp43lp47lp4/lp5Xlp5blp5nlp5vlp55cIiw0LFwi5aek5aem5aen5aep5aeq5aer5aetXCIsMTEsXCLlp7rlp7zlp73lp77lqIDlqILlqIrlqIvlqI3lqI7lqI/lqJDlqJLlqJTlqJXlqJblqJflqJnlqJrlqJvlqJ3lqJ7lqKHlqKLlqKTlqKblqKflqKjlqKpcIiw2LFwi5aiz5ai15ai3XCIsNCxcIuWoveWovuWov+WpgVwiLDQsXCLlqYflqYjlqYtcIiw5LFwi5amW5amX5amY5amZ5ambXCIsNV0sW1wiOGI0MFwiLFwi5amh5amj5amk5aml5amm5amo5amp5amrXCIsOCxcIuWpuOWpueWpu+WpvOWpveWpvuWqgFwiLDE3LFwi5aqTXCIsNixcIuWqnFwiLDEzLFwi5aqr5aqsXCJdLFtcIjhiODBcIixcIuWqrVwiLDQsXCLlqrTlqrblqrflqrlcIiw0LFwi5aq/5auA5auDXCIsNSxcIuWriuWri+WrjVwiLDQsXCLlq5Plq5Xlq5flq5nlq5rlq5vlq53lq57lq5/lq6Llq6Tlq6Xlq6flq6jlq6rlq6xcIiw0LFwi5auyXCIsMjIsXCLlrIpcIiwxMSxcIuWsmFwiLDI1LFwi5ayz5ay15ay25ay4XCIsNyxcIuWtgVwiLDZdLFtcIjhjNDBcIixcIuWtiFwiLDcsXCLlrZLlrZblrZ7lraDlraHlraflrajlravlra3lra7lra/lrbLlrbTlrbblrbflrbjlrbnlrbvlrbzlrb7lrb/lroLlroblrorlro3lro7lrpDlrpHlrpLlrpTlrpblrp/lrqflrqjlrqnlrqzlrq3lrq7lrq/lrrHlrrLlrrflrrrlrrvlrrzlr4Dlr4Hlr4Plr4jlr4nlr4rlr4vlr43lr47lr49cIl0sW1wiOGM4MFwiLFwi5a+R5a+UXCIsOCxcIuWvoOWvouWvo+WvpuWvp+WvqVwiLDQsXCLlr6/lr7FcIiw2LFwi5a+95a++5bCA5bCC5bCD5bCF5bCH5bCI5bCL5bCM5bCN5bCO5bCQ5bCS5bCT5bCX5bCZ5bCb5bCe5bCf5bCg5bCh5bCj5bCm5bCo5bCp5bCq5bCr5bCt5bCu5bCv5bCw5bCy5bCz5bC15bC25bC35bGD5bGE5bGG5bGH5bGM5bGN5bGS5bGT5bGU5bGW5bGX5bGY5bGa5bGb5bGc5bGd5bGf5bGi5bGk5bGnXCIsNixcIuWxsOWxslwiLDYsXCLlsbvlsbzlsb3lsb7lsoDlsoNcIiw0LFwi5bKJ5bKK5bKL5bKO5bKP5bKS5bKT5bKV5bKdXCIsNCxcIuWypFwiLDRdLFtcIjhkNDBcIixcIuWyquWyruWyr+WysOWysuWytOWytuWyueWyuuWyu+WyvOWyvuWzgOWzguWzg+WzhVwiLDUsXCLls4xcIiw1LFwi5bOTXCIsNSxcIuWzmlwiLDYsXCLls6Lls6Pls6fls6nls6vls6zls67ls6/ls7FcIiw5LFwi5bO8XCIsNF0sW1wiOGQ4MFwiLFwi5bSB5bSE5bSF5bSIXCIsNSxcIuW0j1wiLDQsXCLltJXltJfltJjltJnltJrltJzltJ3ltJ9cIiw0LFwi5bSl5bSo5bSq5bSr5bSs5bSvXCIsNCxcIuW0tVwiLDcsXCLltL9cIiw3LFwi5bWI5bWJ5bWNXCIsMTAsXCLltZnltZrltZzltZ5cIiwxMCxcIuW1quW1reW1ruW1sOW1seW1suW1s+W1tVwiLDEyLFwi5baDXCIsMjEsXCLltprltpvltpzltp7ltp/ltqBcIl0sW1wiOGU0MFwiLFwi5bahXCIsMjEsXCLltrhcIiwxMixcIuW3hlwiLDYsXCLlt45cIiwxMixcIuW3nOW3n+W3oOW3o+W3pOW3quW3rOW3rVwiXSxbXCI4ZTgwXCIsXCLlt7Dlt7Xlt7blt7hcIiw0LFwi5be/5biA5biE5biH5biJ5biK5biL5biN5biO5biS5biT5biX5bieXCIsNyxcIuW4qFwiLDQsXCLluK/luLDluLJcIiw0LFwi5bi55bi65bi+5bi/5bmA5bmB5bmD5bmGXCIsNSxcIuW5jVwiLDYsXCLluZZcIiw0LFwi5bmc5bmd5bmf5bmg5bmjXCIsMTQsXCLlubXlubflubnlub7luoHluoLluoPluoXluojluonluozluo3luo7lupLlupjlupvlup3luqHluqLluqPluqTluqhcIiw0LFwi5bquXCIsNCxcIuW6tOW6uuW6u+W6vOW6veW6v1wiLDZdLFtcIjhmNDBcIixcIuW7huW7h+W7iOW7i1wiLDUsXCLlu5Tlu5Xlu5flu5jlu5nlu5rlu5xcIiwxMSxcIuW7qeW7q1wiLDgsXCLlu7Xlu7jlu7nlu7vlu7zlu73lvIXlvIblvIflvInlvIzlvI3lvI7lvJDlvJLlvJTlvJblvJnlvJrlvJzlvJ3lvJ7lvKHlvKLlvKPlvKRcIl0sW1wiOGY4MFwiLFwi5byo5byr5bys5byu5byw5byyXCIsNixcIuW8u+W8veW8vuW8v+W9gVwiLDE0LFwi5b2R5b2U5b2Z5b2a5b2b5b2c5b2e5b2f5b2g5b2j5b2l5b2n5b2o5b2r5b2u5b2v5b2y5b205b215b225b245b265b295b2+5b2/5b6D5b6G5b6N5b6O5b6P5b6R5b6T5b6U5b6W5b6a5b6b5b6d5b6e5b6f5b6g5b6iXCIsNSxcIuW+qeW+q+W+rOW+r1wiLDUsXCLlvrblvrjlvrnlvrrlvrvlvr5cIiw0LFwi5b+H5b+I5b+K5b+L5b+O5b+T5b+U5b+V5b+a5b+b5b+c5b+e5b+f5b+i5b+j5b+l5b+m5b+o5b+p5b+s5b+v5b+w5b+y5b+z5b+05b+25b+35b+55b+65b+85oCHXCJdLFtcIjkwNDBcIixcIuaAiOaAieaAi+aAjOaAkOaAkeaAk+aAl+aAmOaAmuaAnuaAn+aAouaAo+aApOaArOaAreaAruaAsFwiLDQsXCLmgLZcIiw0LFwi5oC95oC+5oGA5oGEXCIsNixcIuaBjOaBjuaBj+aBkeaBk+aBlOaBluaBl+aBmOaBm+aBnOaBnuaBn+aBoOaBoeaBpeaBpuaBruaBseaBsuaBtOaBteaBt+aBvuaCgFwiXSxbXCI5MDgwXCIsXCLmgoHmgoLmgoXmgobmgofmgojmgormgovmgo7mgo/mgpDmgpHmgpPmgpXmgpfmgpjmgpnmgpzmgp7mgqHmgqLmgqTmgqXmgqfmgqnmgqrmgq7mgrDmgrPmgrXmgrbmgrfmgrnmgrrmgr1cIiw3LFwi5oOH5oOI5oOJ5oOMXCIsNCxcIuaDkuaDk+aDlOaDluaDl+aDmeaDm+aDnuaDoVwiLDQsXCLmg6rmg7Hmg7Lmg7Xmg7fmg7jmg7tcIiw0LFwi5oSC5oSD5oSE5oSF5oSH5oSK5oSL5oSM5oSQXCIsNCxcIuaEluaEl+aEmOaEmeaEm+aEnOaEneaEnuaEoeaEouaEpeaEqOaEqeaEquaErFwiLDE4LFwi5oWAXCIsNl0sW1wiOTE0MFwiLFwi5oWH5oWJ5oWL5oWN5oWP5oWQ5oWS5oWT5oWU5oWWXCIsNixcIuaFnuaFn+aFoOaFoeaFo+aFpOaFpeaFpuaFqVwiLDYsXCLmhbHmhbLmhbPmhbTmhbbmhbhcIiwxOCxcIuaGjOaGjeaGj1wiLDQsXCLmhpVcIl0sW1wiOTE4MFwiLFwi5oaWXCIsNixcIuaGnlwiLDgsXCLmhqrmhqvmhq1cIiw5LFwi5oa4XCIsNSxcIuaGv+aHgOaHgeaHg1wiLDQsXCLmh4nmh4xcIiw0LFwi5oeT5oeVXCIsMTYsXCLmh6dcIiwxMyxcIuaHtlwiLDgsXCLmiIBcIiw1LFwi5oiH5oiJ5oiT5oiU5oiZ5oic5oid5oie5oig5oij5oim5oin5oio5oip5oir5oit5oiv5oiw5oix5oiy5oi15oi25oi4XCIsNCxcIuaJguaJhOaJheaJhuaJilwiXSxbXCI5MjQwXCIsXCLmiY/miZDmiZXmiZbmiZfmiZnmiZrmiZxcIiw2LFwi5omk5oml5omo5omx5omy5om05om15om35om45om65om75om95oqB5oqC5oqD5oqF5oqG5oqH5oqI5oqLXCIsNSxcIuaKlOaKmeaKnOaKneaKnuaKo+aKpuaKp+aKqeaKquaKreaKruaKr+aKsOaKsuaKs+aKtOaKtuaKt+aKuOaKuuaKvuaLgOaLgVwiXSxbXCI5MjgwXCIsXCLmi4Pmi4vmi4/mi5Hmi5Xmi53mi57mi6Dmi6Hmi6Tmi6rmi6vmi7Dmi7Lmi7Xmi7jmi7nmi7rmi7vmjIDmjIPmjITmjIXmjIbmjIrmjIvmjIzmjI3mjI/mjJDmjJLmjJPmjJTmjJXmjJfmjJjmjJnmjJzmjKbmjKfmjKnmjKzmjK3mjK7mjLDmjLHmjLNcIiw1LFwi5oy75oy85oy+5oy/5o2A5o2B5o2E5o2H5o2I5o2K5o2R5o2S5o2T5o2U5o2WXCIsNyxcIuaNoOaNpOaNpeaNpuaNqOaNquaNq+aNrOaNr+aNsOaNsuaNs+aNtOaNteaNuOaNueaNvOaNveaNvuaNv+aOgeaOg+aOhOaOheaOhuaOi+aOjeaOkeaOk+aOlOaOleaOl+aOmVwiLDYsXCLmjqHmjqTmjqbmjqvmjq/mjrHmjrLmjrXmjrbmjrnmjrvmjr3mjr/mj4BcIl0sW1wiOTM0MFwiLFwi5o+B5o+C5o+D5o+F5o+H5o+I5o+K5o+L5o+M5o+R5o+T5o+U5o+V5o+XXCIsNixcIuaPn+aPouaPpFwiLDQsXCLmj6vmj6zmj67mj6/mj7Dmj7Hmj7Pmj7Xmj7fmj7nmj7rmj7vmj7zmj77mkIPmkITmkIZcIiw0LFwi5pCN5pCO5pCR5pCS5pCVXCIsNSxcIuaQneaQn+aQouaQo+aQpFwiXSxbXCI5MzgwXCIsXCLmkKXmkKfmkKjmkKnmkKvmkK5cIiw1LFwi5pC1XCIsNCxcIuaQu+aQvOaQvuaRgOaRguaRg+aRieaRi1wiLDYsXCLmkZPmkZXmkZbmkZfmkZlcIiw0LFwi5pGfXCIsNyxcIuaRqOaRquaRq+aRrOaRrlwiLDksXCLmkbtcIiw2LFwi5pKD5pKG5pKIXCIsOCxcIuaSk+aSlOaSl+aSmOaSmuaSm+aSnOaSneaSn1wiLDQsXCLmkqXmkqbmkqfmkqjmkqrmkqvmkq/mkrHmkrLmkrPmkrTmkrbmkrnmkrvmkr3mkr7mkr/mk4Hmk4Pmk4Tmk4ZcIiw2LFwi5pOP5pOR5pOT5pOU5pOV5pOW5pOZ5pOaXCJdLFtcIjk0NDBcIixcIuaTm+aTnOaTneaTn+aToOaToeaTo+aTpeaTp1wiLDI0LFwi5pSBXCIsNyxcIuaUilwiLDcsXCLmlJNcIiw0LFwi5pSZXCIsOF0sW1wiOTQ4MFwiLFwi5pSi5pSj5pSk5pSmXCIsNCxcIuaUrOaUreaUsOaUseaUsuaUs+aUt+aUuuaUvOaUveaVgFwiLDQsXCLmlYbmlYfmlYrmlYvmlY3mlY7mlZDmlZLmlZPmlZTmlZfmlZjmlZrmlZzmlZ/mlaDmlaHmlaTmlaXmlafmlajmlanmlarmla3mla7mla/mlbHmlbPmlbXmlbbmlbhcIiwxNCxcIuaWiOaWieaWiuaWjeaWjuaWj+aWkuaWlOaWleaWluaWmOaWmuaWneaWnuaWoOaWouaWo+aWpuaWqOaWquaWrOaWruaWsVwiLDcsXCLmlrrmlrvmlr7mlr/ml4Dml4Lml4fml4jml4nml4rml43ml5Dml5Hml5Pml5Tml5Xml5hcIiw3LFwi5peh5pej5pek5peq5perXCJdLFtcIjk1NDBcIixcIuaXsuaXs+aXtOaXteaXuOaXueaXu1wiLDQsXCLmmIHmmITmmIXmmIfmmIjmmInmmIvmmI3mmJDmmJHmmJLmmJbmmJfmmJjmmJrmmJvmmJzmmJ7mmKHmmKLmmKPmmKTmmKbmmKnmmKrmmKvmmKzmmK7mmLDmmLLmmLPmmLdcIiw0LFwi5pi95pi/5pmA5pmC5pmEXCIsNixcIuaZjeaZjuaZkOaZkeaZmFwiXSxbXCI5NTgwXCIsXCLmmZnmmZvmmZzmmZ3mmZ7mmaDmmaLmmaPmmaXmmafmmalcIiw0LFwi5pmx5pmy5pmz5pm15pm45pm55pm75pm85pm95pm/5pqA5pqB5pqD5pqF5pqG5pqI5pqJ5pqK5pqL5pqN5pqO5pqP5pqQ5pqS5pqT5pqU5pqV5pqYXCIsNCxcIuaanlwiLDgsXCLmmqlcIiw0LFwi5pqvXCIsNCxcIuaateaatuaat+aauOaauuaau+aavOaaveaav1wiLDI1LFwi5pua5pueXCIsNyxcIuabp+abqOabqlwiLDUsXCLmm7Hmm7Xmm7bmm7jmm7rmm7vmm73mnIHmnILmnINcIl0sW1wiOTY0MFwiLFwi5pyE5pyF5pyG5pyH5pyM5pyO5pyP5pyR5pyS5pyT5pyW5pyY5pyZ5pya5pyc5pye5pygXCIsNSxcIuacp+acqeacruacsOacsuacs+actuact+acuOacueacu+acvOacvuacv+adgeadhOadheadh+adiuadi+adjeadkuadlOadleadl1wiLDQsXCLmnZ3mnaLmnaPmnaTmnabmnafmnavmnazmna7mnbHmnbTmnbZcIl0sW1wiOTY4MFwiLFwi5p245p255p265p275p295p6A5p6C5p6D5p6F5p6G5p6I5p6K5p6M5p6N5p6O5p6P5p6R5p6S5p6T5p6U5p6W5p6Z5p6b5p6f5p6g5p6h5p6k5p6m5p6p5p6s5p6u5p6x5p6y5p605p65XCIsNyxcIuafguafhVwiLDksXCLmn5Xmn5bmn5fmn5vmn5/mn6Hmn6Pmn6Tmn6bmn6fmn6jmn6rmn6vmn63mn67mn7Lmn7VcIiw3LFwi5p++5qCB5qCC5qCD5qCE5qCG5qCN5qCQ5qCS5qCU5qCV5qCYXCIsNCxcIuagnuagn+agoOagolwiLDYsXCLmoKtcIiw2LFwi5qC05qC15qC25qC65qC75qC/5qGH5qGL5qGN5qGP5qGS5qGWXCIsNV0sW1wiOTc0MFwiLFwi5qGc5qGd5qGe5qGf5qGq5qGsXCIsNyxcIuahteahuFwiLDgsXCLmooLmooTmoodcIiw3LFwi5qKQ5qKR5qKS5qKU5qKV5qKW5qKYXCIsOSxcIuaio+aipOaipeaiqeaiquaiq+airOairuaiseaisuaitOaituait+aiuFwiXSxbXCI5NzgwXCIsXCLmorlcIiw2LFwi5qOB5qODXCIsNSxcIuajiuajjOajjuajj+ajkOajkeajk+ajlOajluajl+ajmeajm1wiLDQsXCLmo6Hmo6Lmo6RcIiw5LFwi5qOv5qOy5qOz5qO05qO25qO35qO45qO75qO95qO+5qO/5qSA5qSC5qSD5qSE5qSGXCIsNCxcIuakjOakj+akkeakk1wiLDExLFwi5qSh5qSi5qSj5qSlXCIsNyxcIuakruakr+akseaksuaks+akteaktuakt+akuOakuuaku+akvOakvualgOalgealg1wiLDE2LFwi5qWV5qWW5qWY5qWZ5qWb5qWc5qWfXCJdLFtcIjk4NDBcIixcIualoealoualpOalpealp+alqOalqealqualrOalrealr+alsOalslwiLDQsXCLmpbrmpbvmpb3mpb7mpb/mpoHmpoPmpoXmpormpovmpozmpo5cIiw1LFwi5qaW5qaX5qaZ5qaa5qadXCIsOSxcIuamqeamquamrOamruamr+amsOamsuams+amteamtuamuOamueamuuamvOamvVwiXSxbXCI5ODgwXCIsXCLmpr7mpr/mp4Dmp4JcIiw3LFwi5qeL5qeN5qeP5qeR5qeS5qeT5qeVXCIsNSxcIuannOanneannuanoVwiLDExLFwi5qeu5qev5qew5qex5qezXCIsOSxcIuanvuaogFwiLDksXCLmqItcIiwxMSxcIuaomVwiLDUsXCLmqKDmqKJcIiw1LFwi5qip5qir5qis5qit5qiu5qiw5qiy5qiz5qi05qi2XCIsNixcIuaov1wiLDQsXCLmqYXmqYbmqYhcIiw3LFwi5qmRXCIsNixcIuapmlwiXSxbXCI5OTQwXCIsXCLmqZxcIiw0LFwi5qmi5qmj5qmk5qmmXCIsMTAsXCLmqbJcIiw2LFwi5qm65qm75qm95qm+5qm/5qqB5qqC5qqD5qqFXCIsOCxcIuaqj+aqklwiLDQsXCLmqphcIiw3LFwi5qqhXCIsNV0sW1wiOTk4MFwiLFwi5qqn5qqo5qqq5qqtXCIsMTE0LFwi5qyl5qym5qyoXCIsNl0sW1wiOWE0MFwiLFwi5qyv5qyw5qyx5qyz5qy05qy15qy25qy45qy75qy85qy95qy/5q2A5q2B5q2C5q2E5q2F5q2I5q2K5q2L5q2NXCIsMTEsXCLmrZpcIiw3LFwi5q2o5q2p5q2rXCIsMTMsXCLmrbrmrb3mrb7mrb/mroDmroXmrohcIl0sW1wiOWE4MFwiLFwi5q6M5q6O5q6P5q6Q5q6R5q6U5q6V5q6X5q6Y5q6Z5q6cXCIsNCxcIuauolwiLDcsXCLmrqtcIiw3LFwi5q625q64XCIsNixcIuavgOavg+avhOavhlwiLDQsXCLmr4zmr47mr5Dmr5Hmr5jmr5rmr5xcIiw0LFwi5q+iXCIsNyxcIuavrOavreavruavsOavseavsuavtOavtuavt+avuOavuuavu+avvOavvlwiLDYsXCLmsIhcIiw0LFwi5rCO5rCS5rCX5rCc5rCd5rCe5rCg5rCj5rCl5rCr5rCs5rCt5rCx5rCz5rC25rC35rC55rC65rC75rC85rC+5rC/5rGD5rGE5rGF5rGI5rGLXCIsNCxcIuaxkeaxkuaxk+axluaxmFwiXSxbXCI5YjQwXCIsXCLmsZnmsZrmsaLmsaPmsaXmsabmsafmsatcIiw0LFwi5rGx5rGz5rG15rG35rG45rG65rG75rG85rG/5rKA5rKE5rKH5rKK5rKL5rKN5rKO5rKR5rKS5rKV5rKW5rKX5rKY5rKa5rKc5rKd5rKe5rKg5rKi5rKo5rKs5rKv5rKw5rK05rK15rK25rK35rK65rOA5rOB5rOC5rOD5rOG5rOH5rOI5rOL5rON5rOO5rOP5rOR5rOS5rOYXCJdLFtcIjliODBcIixcIuazmeazmuaznOazneazn+azpOazpuazp+azqeazrOazreazsuaztOazueazv+a0gOa0gua0g+a0hea0hua0iOa0iea0iua0jea0j+a0kOa0kea0k+a0lOa0lea0lua0mOa0nOa0nea0n1wiLDUsXCLmtKbmtKjmtKnmtKzmtK3mtK/mtLDmtLTmtLbmtLfmtLjmtLrmtL/mtYDmtYLmtYTmtYnmtYzmtZDmtZXmtZbmtZfmtZjmtZvmtZ3mtZ/mtaHmtaLmtaTmtaXmtafmtajmtavmtazmta3mtbDmtbHmtbLmtbPmtbXmtbbmtbnmtbrmtbvmtb1cIiw0LFwi5raD5raE5raG5raH5raK5raL5raN5raP5raQ5raS5raWXCIsNCxcIua2nOa2oua2pea2rOa2rea2sOa2sea2s+a2tOa2tua2t+a2uVwiLDUsXCLmt4Hmt4Lmt4Pmt4jmt4nmt4pcIl0sW1wiOWM0MFwiLFwi5reN5reO5reP5reQ5reS5reT5reU5reV5reX5rea5reb5rec5ref5rei5rej5rel5ren5reo5rep5req5ret5rev5rew5rey5re05re15re25re45re65re9XCIsNyxcIua4hua4h+a4iOa4iea4i+a4j+a4kua4k+a4lea4mOa4mea4m+a4nOa4nua4n+a4oua4pua4p+a4qOa4qua4rOa4rua4sOa4sea4s+a4tVwiXSxbXCI5YzgwXCIsXCLmuLbmuLfmuLnmuLtcIiw3LFwi5rmFXCIsNyxcIua5j+a5kOa5kea5kua5lea5l+a5mea5mua5nOa5nea5nua5oFwiLDEwLFwi5rms5rmt5rmvXCIsMTQsXCLmuoDmuoHmuoLmuoTmuofmuojmuopcIiw0LFwi5rqRXCIsNixcIua6mea6mua6m+a6nea6nua6oOa6oea6o+a6pOa6pua6qOa6qea6q+a6rOa6rea6rua6sOa6s+a6tea6uOa6uea6vOa6vua6v+a7gOa7g+a7hOa7hea7hua7iOa7iea7iua7jOa7jea7jua7kOa7kua7lua7mOa7mea7m+a7nOa7nea7o+a7p+a7qlwiLDVdLFtcIjlkNDBcIixcIua7sOa7sea7sua7s+a7tea7tua7t+a7uOa7ulwiLDcsXCLmvIPmvITmvIXmvIfmvIjmvIpcIiw0LFwi5ryQ5ryR5ryS5ryWXCIsOSxcIua8oea8oua8o+a8pea8pua8p+a8qOa8rOa8rua8sOa8sua8tOa8tea8t1wiLDYsXCLmvL/mvYDmvYHmvYJcIl0sW1wiOWQ4MFwiLFwi5r2D5r2E5r2F5r2I5r2J5r2K5r2M5r2OXCIsOSxcIua9mea9mua9m+a9nea9n+a9oOa9oea9o+a9pOa9pea9p1wiLDUsXCLmva/mvbDmvbHmvbPmvbXmvbbmvbfmvbnmvbvmvb1cIiw2LFwi5r6F5r6G5r6H5r6K5r6L5r6PXCIsMTIsXCLmvp3mvp7mvp/mvqDmvqJcIiw0LFwi5r6oXCIsMTAsXCLmvrTmvrXmvrfmvrjmvrpcIiw1LFwi5r+B5r+DXCIsNSxcIua/ilwiLDYsXCLmv5NcIiwxMCxcIua/n+a/oua/o+a/pOa/pVwiXSxbXCI5ZTQwXCIsXCLmv6ZcIiw3LFwi5r+wXCIsMzIsXCLngJJcIiw3LFwi54CcXCIsNixcIueApFwiLDZdLFtcIjllODBcIixcIueAq1wiLDksXCLngLbngLfngLjngLpcIiwxNyxcIueBjeeBjueBkFwiLDEzLFwi54GfXCIsMTEsXCLnga7ngbHngbLngbPngbTngbfngbnngbrngbvngb3ngoHngoLngoPngoTngobngofngojngovngozngo3ngo/ngpDngpHngpPngpfngpjngprngpvngp5cIiwxMixcIueCsOeCsueCtOeCteeCtueCuueCvueCv+eDhOeDheeDhueDh+eDieeDi1wiLDEyLFwi54OaXCJdLFtcIjlmNDBcIixcIueDnOeDneeDnueDoOeDoeeDoueDo+eDpeeDqueDrueDsFwiLDYsXCLng7jng7rng7vng7zng75cIiwxMCxcIueEi1wiLDQsXCLnhJHnhJLnhJTnhJfnhJtcIiwxMCxcIueEp1wiLDcsXCLnhLLnhLPnhLRcIl0sW1wiOWY4MFwiLFwi54S154S3XCIsMTMsXCLnhYbnhYfnhYjnhYnnhYvnhY3nhY9cIiwxMixcIueFneeFn1wiLDQsXCLnhaXnhalcIiw0LFwi54Wv54Ww54Wx54W054W154W254W354W554W754W854W+XCIsNSxcIueGhVwiLDQsXCLnhovnhoznho3nho7nhpDnhpHnhpLnhpPnhpXnhpbnhpfnhppcIiw0LFwi54ahXCIsNixcIueGqeeGqueGq+eGrVwiLDUsXCLnhrTnhrbnhrfnhrjnhrpcIiw4LFwi54eEXCIsOSxcIueHj1wiLDRdLFtcImEwNDBcIixcIueHllwiLDksXCLnh6Hnh6Lnh6Pnh6Tnh6bnh6hcIiw1LFwi54evXCIsOSxcIueHulwiLDExLFwi54iHXCIsMTldLFtcImEwODBcIixcIueIm+eInOeInlwiLDksXCLniKnniKvniK3niK7niK/niLLniLPniLTniLrniLzniL7niYBcIiw2LFwi54mJ54mK54mL54mO54mP54mQ54mR54mT54mU54mV54mX54mY54ma54mc54me54mg54mj54mk54ml54mo54mq54mr54ms54mt54mw54mx54mz54m054m254m354m454m754m854m954qC54qD54qFXCIsNCxcIueKjOeKjueKkOeKkeeKk1wiLDExLFwi54qgXCIsMTEsXCLniq7nirHnirLnirPnirXnirpcIiw2LFwi54uF54uG54uH54uJ54uK54uL54uM54uP54uR54uT54uU54uV54uW54uY54ua54ubXCJdLFtcImExYTFcIixcIuOAgOOAgeOAgsK3y4nLh8Ko44CD44CF4oCU772e4oCW4oCm4oCY4oCZ4oCc4oCd44CU44CV44CIXCIsNyxcIuOAluOAl+OAkOOAkcKxw5fDt+KItuKIp+KIqOKIkeKIj+KIquKIqeKIiOKIt+KImuKKpeKIpeKIoOKMkuKKmeKIq+KIruKJoeKJjOKJiOKIveKIneKJoOKJruKJr+KJpOKJpeKInuKIteKItOKZguKZgMKw4oCy4oCz4oSD77yEwqTvv6Dvv6HigLDCp+KEluKYhuKYheKXi+KXj+KXjuKXh+KXhuKWoeKWoOKWs+KWsuKAu+KGkuKGkOKGkeKGk+OAk1wiXSxbXCJhMmExXCIsXCLihbBcIiw5XSxbXCJhMmIxXCIsXCLikohcIiwxOSxcIuKRtFwiLDE5LFwi4pGgXCIsOV0sW1wiYTJlNVwiLFwi44igXCIsOV0sW1wiYTJmMVwiLFwi4oWgXCIsMTFdLFtcImEzYTFcIixcIu+8ge+8gu+8g++/pe+8hVwiLDg4LFwi77+jXCJdLFtcImE0YTFcIixcIuOBgVwiLDgyXSxbXCJhNWExXCIsXCLjgqFcIiw4NV0sW1wiYTZhMVwiLFwizpFcIiwxNixcIs6jXCIsNl0sW1wiYTZjMVwiLFwizrFcIiwxNixcIs+DXCIsNl0sW1wiYTZlMFwiLFwi77i177i277i577i677i/77mA77i977i+77mB77mC77mD77mEXCJdLFtcImE2ZWVcIixcIu+4u++4vO+4t++4uO+4sVwiXSxbXCJhNmY0XCIsXCLvuLPvuLRcIl0sW1wiYTdhMVwiLFwi0JBcIiw1LFwi0IHQllwiLDI1XSxbXCJhN2QxXCIsXCLQsFwiLDUsXCLRkdC2XCIsMjVdLFtcImE4NDBcIixcIsuKy4vLmeKAk+KAleKApeKAteKEheKEieKGluKGl+KGmOKGmeKIleKIn+KIo+KJkuKJpuKJp+KKv+KVkFwiLDM1LFwi4paBXCIsNl0sW1wiYTg4MFwiLFwi4paIXCIsNyxcIuKWk+KWlOKWleKWvOKWveKXouKXo+KXpOKXpeKYieKKleOAkuOAneOAnlwiXSxbXCJhOGExXCIsXCLEgcOhx47DoMSTw6nEm8OoxKvDrceQw6zFjcOzx5LDssWrw7rHlMO5x5bHmMeax5zDvMOqyZFcIl0sW1wiYThiZFwiLFwixYTFiFwiXSxbXCJhOGMwXCIsXCLJoVwiXSxbXCJhOGM1XCIsXCLjhIVcIiwzNl0sW1wiYTk0MFwiLFwi44ChXCIsOCxcIuOKo+OOjuOOj+OOnOOOneOOnuOOoeOPhOOPjuOPkeOPkuOPle+4sO+/ou+/pFwiXSxbXCJhOTU5XCIsXCLihKHjiLFcIl0sW1wiYTk1Y1wiLFwi4oCQXCJdLFtcImE5NjBcIixcIuODvOOCm+OCnOODveODvuOAhuOCneOCnu+5iVwiLDksXCLvuZTvuZXvuZbvuZfvuZlcIiw4XSxbXCJhOTgwXCIsXCLvuaJcIiw0LFwi77mo77mp77mq77mrXCJdLFtcImE5OTZcIixcIuOAh1wiXSxbXCJhOWE0XCIsXCLilIBcIiw3NV0sW1wiYWE0MFwiLFwi54uc54ud54uf54uiXCIsNSxcIueLqueLq+eLteeLtueLueeLveeLvueLv+eMgOeMgueMhFwiLDUsXCLnjIvnjIznjI3njI/njJDnjJHnjJLnjJTnjJjnjJnnjJrnjJ/njKDnjKPnjKTnjKbnjKfnjKjnjK3njK/njLDnjLLnjLPnjLXnjLbnjLrnjLvnjLznjL3njYBcIiw4XSxbXCJhYTgwXCIsXCLnjYnnjYrnjYvnjYznjY7njY/njZHnjZPnjZTnjZXnjZbnjZhcIiw3LFwi542hXCIsMTAsXCLnja7njbDnjbFcIl0sW1wiYWI0MFwiLFwi542yXCIsMTEsXCLnjb9cIiw0LFwi546F546G546I546K546M546N546P546Q546S546T546U546V546X546Y546Z546a546c546d546e546g546h546jXCIsNSxcIueOqueOrOeOreeOseeOtOeOteeOtueOuOeOueeOvOeOveeOvueOv+ePgeePg1wiLDRdLFtcImFiODBcIixcIuePi+ePjOePjuePklwiLDYsXCLnj5rnj5vnj5znj53nj5/nj6Hnj6Lnj6Pnj6Tnj6bnj6jnj6rnj6vnj6znj67nj6/nj7Dnj7Hnj7NcIiw0XSxbXCJhYzQwXCIsXCLnj7hcIiwxMCxcIueQhOeQh+eQiOeQi+eQjOeQjeeQjueQkVwiLDgsXCLnkJxcIiw1LFwi55Cj55Ck55Cn55Cp55Cr55Ct55Cv55Cx55Cy55C3XCIsNCxcIueQveeQvueQv+eRgOeRglwiLDExXSxbXCJhYzgwXCIsXCLnkY5cIiw2LFwi55GW55GY55Gd55GgXCIsMTIsXCLnka7nka/nkbFcIiw0LFwi55G455G555G6XCJdLFtcImFkNDBcIixcIueRu+eRvOeRveeRv+eSgueShOeSheeShueSiOeSieeSiueSjOeSjeeSj+eSkVwiLDEwLFwi55Kd55KfXCIsNyxcIueSqlwiLDE1LFwi55K7XCIsMTJdLFtcImFkODBcIixcIueTiFwiLDksXCLnk5NcIiw4LFwi55Od55Of55Oh55Ol55OnXCIsNixcIueTsOeTseeTslwiXSxbXCJhZTQwXCIsXCLnk7Pnk7Xnk7hcIiw2LFwi55SA55SB55SC55SD55SFXCIsNyxcIueUjueUkOeUkueUlOeUleeUlueUl+eUm+eUneeUnueUoFwiLDQsXCLnlKbnlKfnlKrnlK7nlLTnlLbnlLnnlLznlL3nlL/nlYHnlYLnlYPnlYTnlYbnlYfnlYnnlYrnlY3nlZDnlZHnlZLnlZPnlZXnlZbnlZfnlZhcIl0sW1wiYWU4MFwiLFwi55WdXCIsNyxcIueVp+eVqOeVqeeVq1wiLDYsXCLnlbPnlbXnlbbnlbfnlbpcIiw0LFwi55aA55aB55aC55aE55aF55aHXCJdLFtcImFmNDBcIixcIueWiOeWieeWiueWjOeWjeeWjueWkOeWk+eWleeWmOeWm+eWnOeWnueWoueWplwiLDQsXCLnlq3nlrbnlrfnlrrnlrvnlr/nl4Dnl4Hnl4bnl4vnl4znl47nl4/nl5Dnl5Hnl5Pnl5fnl5nnl5rnl5znl53nl5/nl6Dnl6Hnl6Xnl6nnl6znl63nl67nl6/nl7Lnl7Pnl7Xnl7bnl7fnl7jnl7rnl7vnl73nl77nmILnmITnmIbnmIdcIl0sW1wiYWY4MFwiLFwi55iI55iJ55iL55iN55iO55iP55iR55iS55iT55iU55iW55ia55ic55id55ie55ih55ij55in55io55is55iu55iv55ix55iy55i255i355i555i655i755i955mB55mC55mEXCJdLFtcImIwNDBcIixcIueZhVwiLDYsXCLnmY5cIiw1LFwi55mV55mXXCIsNCxcIueZneeZn+eZoOeZoeeZoueZpFwiLDYsXCLnmaznma3nma7nmbBcIiw3LFwi55m555m655m855m/55qA55qB55qD55qF55qJ55qK55qM55qN55qP55qQ55qS55qU55qV55qX55qY55qa55qbXCJdLFtcImIwODBcIixcIueanFwiLDcsXCLnmqVcIiw4LFwi55qv55qw55qz55q1XCIsOSxcIuebgOebgeebg+WViumYv+Wfg+aMqOWTjuWUieWTgOeakeeZjOiUvOefruiJvueijeeIsemamOmejeawqOWuieS/uuaMieaal+WyuOiDuuahiOiCruaYguebjuWHueaVlueGrOe/seiihOWCsuWlpeaHiua+s+iKreaNjOaJkuWPreWQp+eshuWFq+eWpOW3tOaLlOi3i+mdtuaKiuiAmeWdnemcuOe9oueIuOeZveafj+eZvuaRhuS9sOi0peaLnOeol+aWkeePreaQrOaJs+iIrOmigeadv+eJiOaJruaLjOS8tOeTo+WNiuWKnue7iumCpuW4ruaihuamnOiGgOe7keajkuejheiajOmVkeWCjeiwpOiLnuiDnuWMheikkuWJpVwiXSxbXCJiMTQwXCIsXCLnm4Tnm4fnm4nnm4vnm4znm5Pnm5Xnm5nnm5rnm5znm53nm57nm6BcIiw0LFwi55umXCIsNyxcIuebsOebs+ebteebtuebt+ebuuebu+ebveebv+ecgOecguecg+echeechueciuecjOecjlwiLDEwLFwi55yb55yc55yd55ye55yh55yj55yk55yl55yn55yq55yrXCJdLFtcImIxODBcIixcIuecrOecruecsFwiLDQsXCLnnLnnnLvnnL3nnL7nnL/nnYLnnYTnnYXnnYbnnYhcIiw3LFwi552SXCIsNyxcIuednOiWhOmbueS/neWgoemlseWuneaKseaKpeaatOixuemyjeeIhuadr+eikeaCsuWNkeWMl+i+iOiDjOi0nemSoeWAjeeLiOWkh+aDq+eEmeiiq+WllOiLr+acrOesqOW0qee7t+eUreaztei5pui/uOmAvOm8u+avlOmEmeeslOW9vOeip+iTluiUveavleavmeavluW4geW6h+eXuemXreaVneW8iuW/hei+n+WjgeiHgumBv+mZm+merei+uee8lui0rOaJgeS+v+WPmOWNnui+qOi+qei+q+mBjeagh+W9quiGmOihqOmzluaGi+WIq+eYquW9rOaWjOa/kua7qOWuvuaRiOWFteWGsOafhOS4meeniemlvOeCs1wiXSxbXCJiMjQwXCIsXCLnnZ3nnZ7nnZ/nnaDnnaTnnafnnannnarnna1cIiwxMSxcIueduuedu+edvOeegeeegueeg+eehlwiLDUsXCLnno/nnpDnnpNcIiwxMSxcIueeoeeeo+eepOeepueeqOeeq+eereeerueer+eeseeesueetOeetlwiLDRdLFtcImIyODBcIixcIueevOeevuefgFwiLDEyLFwi55+OXCIsOCxcIuefmOefmeefmuefnVwiLDQsXCLnn6Tnl4Xlubbnjrvoj6Dmkq3mi6jpkrXms6LljZrli4PmkI/pk4LnrpTkvK/luJvoiLbohJbohormuKTms4rpqbPmjZXljZzlk7rooaXln6DkuI3luIPmraXnsL/pg6jmgJbmk6bnjJzoo4HmnZDmiY3otKLnnazouKnph4flvanoj5zolKHppJDlj4LompXmrovmg63mg6jngb/oi43oiLHku5Pmsqfol4/mk43ns5nmp73mm7nojYnljpXnrZbkvqflhozmtYvlsYLoua3mj5Llj4nojKzojLbmn6XnorTmkL3lr5/lspTlt67or6fmi4bmn7TosbrmkIDmjrronYnppovosJfnvKDpk7LkuqfpmJDpoqTmmIznjJZcIl0sW1wiYjM0MFwiLFwi55+m55+o55+q55+v55+w55+x55+y55+055+155+355+555+655+755+856CDXCIsNSxcIuegiuegi+egjuegj+egkOegk+egleegmeegm+egnuegoOegoeegouegpOegqOegquegq+egruegr+egseegsuegs+egteegtuegveegv+ehgeehguehg+ehhOehhuehiOehieehiuehi+ehjeehj+ehkeehk+ehlOehmOehmeehmlwiXSxbXCJiMzgwXCIsXCLnoZvnoZznoZ5cIiwxMSxcIuehr1wiLDcsXCLnobjnobnnobrnobvnob1cIiw2LFwi5Zy65bCd5bi46ZW/5YG/6IKg5Y6C5pWe55WF5ZSx5YCh6LaF5oqE6ZKe5pyd5Ziy5r2u5bei5ZC154KS6L2m5omv5pKk5o6j5b275r6I6YO06Iej6L6w5bCY5pmo5b+x5rKJ6ZmI6LaB6KGs5pKR56ew5Z+O5qmZ5oiQ5ZGI5LmY56iL5oOp5r6E6K+a5om/6YCe6aqL56ek5ZCD55e05oyB5YyZ5rGg6L+f5byb6amw6IC76b2/5L6I5bC66LWk57+F5pal54K95YWF5Yay6Jmr5bSH5a6g5oq96YWs55W06LiM56ig5oSB56255LuH57u4556F5LiR6Iet5Yid5Ye65qmx5Y6o6LqH6ZSE6ZuP5ruB6Zmk5qWaXCJdLFtcImI0NDBcIixcIueihOeiheeihueiiOeiiueii+eij+eikOeikueilOeileeilueimeeineeinueioOeioueipOeipueiqFwiLDcsXCLnorXnorbnorfnorjnorrnorvnorznor3nor/no4Dno4Lno4Pno4Tno4bno4fno4jno4zno43no47no4/no5Hno5Lno5Pno5bno5fno5jno5pcIiw5XSxbXCJiNDgwXCIsXCLno6Tno6Xno6bno6fno6nno6rno6vno61cIiw0LFwi56Oz56O156O256O456O556O7XCIsNSxcIuekguekg+ekhOekhlwiLDYsXCLnoYDlgqjnn5fmkJDop6blpITmj6Plt53nqb/mpL3kvKDoiLnllpjkuLLnlq7nqpfluaLluorpl6/liJvlkLnngormjbbplKTlnoLmmKXmpL/phofllIfmt7Pnuq/ooKLmiLPnu7DnlrXojKjno4Hpm4zovp7mhYjnk7for43mraTliLrotZDmrKHogarokbHlm7HljIbku47kuJvlh5HnspfphovnsIfkv4Poub/nr6HnqpzmkafltJTlgqzohIbnmIHnsrnmt6znv6DmnZHlrZjlr7jno4vmkq7mkJPmjqrmjKvplJnmkK3ovr7nrZTnmKnmiZPlpKflkYbmrbnlgqPmiLTluKbmrobku6PotLfooovlvoXpgK5cIl0sW1wiYjU0MFwiLFwi56SNXCIsNSxcIueklFwiLDksXCLnpJ9cIiw0LFwi56SlXCIsMTQsXCLnpLVcIiw0LFwi56S956S/56WC56WD56WE56WF56WH56WKXCIsOCxcIuellOelleelmOelmeeloeelo1wiXSxbXCJiNTgwXCIsXCLnpaTnpabnpannparnpavnpaznpa7npbBcIiw2LFwi56W556W7XCIsNCxcIuemguemg+emhuemh+emiOemieemi+emjOemjeemjuemkOemkeemkuaAoOiAveaLheS4ueWNlemDuOaOuOiDhuaXpuawruS9huaDrua3oeivnuW8ueibi+W9k+aMoeWFmuiNoeaho+WIgOaNo+i5iOWAkuWym+elt+WvvOWIsOeou+aCvOmBk+ebl+W+t+W+l+eahOi5rOeBr+eZu+etieeequWHs+mCk+WgpOS9jua7tOi/quaVjOesm+eLhOa2pOe/n+WroeaKteW6leWcsOiSguesrOW4neW8n+mAkue8lOmioOaOgua7h+eimOeCueWFuOmdm+Weq+eUteS9g+eUuOW6l+aDpuWloOa3gOauv+eiieWPvOmbleWHi+WIgeaOieWQiumSk+iwg+i3jOeIueein+idtui/reiwjeWPoFwiXSxbXCJiNjQwXCIsXCLnppNcIiw2LFwi56abXCIsMTEsXCLnpqhcIiwxMCxcIuemtFwiLDQsXCLnprznpr/np4Lnp4Tnp4Xnp4fnp4jnp4rnp4znp47np4/np5Dnp5Pnp5Tnp5bnp5fnp5lcIiw1LFwi56eg56eh56ei56el56eo56eqXCJdLFtcImI2ODBcIixcIuenrOenruensVwiLDYsXCLnp7nnp7rnp7znp77np7/nqIHnqITnqIXnqIfnqIjnqInnqIrnqIznqI9cIiw0LFwi56iV56iW56iY56iZ56ib56ic5LiB55uv5Y+u6ZKJ6aG26byO6ZSt5a6a6K6i5Lii5Lic5Yas6JGj5oeC5Yqo5qCL5L6X5oGr5Ya75rSe5YWc5oqW5paX6Zmh6LGG6YCX55eY6YO9552j5q+S54qK54us6K+75aC155256LWM5p2c6ZWA6IKa5bqm5rih5aaS56uv55+t6ZS75q615pat57yO5aCG5YWR6Zif5a+55aKp5ZCo6Lmy5pWm6aG/5Zuk6ZKd55u+6YGB5o6H5ZOG5aSa5aS65Z6b6Lqy5py16Le66Ii15YmB5oOw5aCV6Ju+5bOo6bmF5L+E6aKd6K655ail5oG25Y6E5om86YGP6YSC6aW/5oGp6ICM5YS/6ICz5bCU6aW15rSx5LqMXCJdLFtcImI3NDBcIixcIueoneeon+eooeeooueopFwiLDE0LFwi56i056i156i256i456i656i+56mAXCIsNSxcIueph1wiLDksXCLnqZJcIiw0LFwi56mYXCIsMTZdLFtcImI3ODBcIixcIuepqVwiLDYsXCLnqbHnqbLnqbPnqbXnqbvnqbznqb3nqb7nqoLnqoXnqofnqonnqornqovnqoznqo7nqo/nqpDnqpPnqpTnqpnnqprnqpvnqp7nqqHnqqLotLDlj5HnvZrnrY/kvJDkuY/pmIDms5Xnj5Dol6nluIbnlarnv7vmqIrnn77pkpLnuYHlh6Hng6blj43ov5TojIPotKnniq/ppa3ms5vlnYroirPmlrnogqrmiL/pmLLlpqjku7/orr/nurrmlL7oj7LpnZ7llaHpo57ogqXljKror73lkKDogrrlup/msrjotLnoiqzphZrlkKnmsJvliIbnurflnZ/nhJrmsb7nsonlpYvku73lv7/mhKTnsqrkuLDlsIHmnqvonILls7DplIvpo47nlq/ng73pgKLlhq/nvJ3orr3lpYnlh6TkvZvlkKblpKvmlbfogqTlrbXmibbmi4LovpDluYXmsJ/nrKbkvI/kv5jmnI1cIl0sW1wiYjg0MFwiLFwi56qj56qk56qn56qp56qq56qr56quXCIsNCxcIueqtFwiLDEwLFwi56uAXCIsMTAsXCLnq4xcIiw5LFwi56uX56uY56ua56ub56uc56ud56uh56ui56uk56unXCIsNSxcIuerruersOerseersuers1wiXSxbXCJiODgwXCIsXCLnq7RcIiw0LFwi56u756u856u+56yA56yB56yC56yF56yH56yJ56yM56yN56yO56yQ56yS56yT56yW56yX56yY56ya56yc56yd56yf56yh56yi56yj56yn56yp56yt5rWu5raq56aP6KKx5byX55Sr5oqa6L6F5L+v6Yec5pan6ISv6IWR5bqc6IWQ6LW05Ymv6KaG6LWL5aSN5YKF5LuY6Zic54i26IW56LSf5a+M6K6j6ZmE5aaH57ya5ZKQ5Zm25ZiO6K+l5pS55qaC6ZKZ55uW5rqJ5bmy55SY5p2G5p+R56u/6IKd6LW25oSf56eG5pWi6LWj5YaI5Yia6ZKi57y46IKb57qy5bKX5riv5p2g56+Z55qL6auY6IaP576U57OV5pCe6ZWQ56i/5ZGK5ZOl5q2M5pCB5oiI6bi96IOz55aZ5Ymy6Z2p6JGb5qC86Juk6ZiB6ZqU6ZOs5Liq5ZCE57uZ5qC56Lef6ICV5pu05bqa5765XCJdLFtcImI5NDBcIixcIuesr+essOessuestOesteestuest+esueesu+esveesv1wiLDUsXCLnrYbnrYjnrYrnrY3nrY7nrZPnrZXnrZfnrZnnrZznrZ7nrZ/nraHnraNcIiwxMCxcIuetr+etsOets+ettOettuetuOetuuetvOetveetv+eugeeugueug+euhOeuhlwiLDYsXCLnro7nro9cIl0sW1wiYjk4MFwiLFwi566R566S566T566W566Y566Z566a566b566e566f566g566j566k566l566u566v566w566y566z5661566256635665XCIsNyxcIuevguevg+evhOWfguiAv+ail+W3peaUu+WKn+aBrem+muS+m+i6rOWFrOWuq+W8k+W3qeaxnuaLsei0oeWFsemSqeWLvuayn+iLn+eLl+WeouaehOi0reWkn+i+nOiPh+WSleeujeS8sOayveWtpOWnkem8k+WPpOibiumqqOiwt+iCoeaVhemhvuWbuumbh+WIrueTnOWJkOWvoeaMguikguS5luaLkOaAquajuuWFs+WumOWGoOingueuoemmhue9kOaDr+eBjOi0r+WFieW5v+mAm+eRsOinhOWcreehheW9kum+n+mXuui9qOmsvOivoeeZuOahguafnOi3qui0teWIvei+iua7muajjemUhemDreWbveaenOijuei/h+WTiFwiXSxbXCJiYTQwXCIsXCLnr4Xnr4jnr4nnr4rnr4vnr43nr47nr4/nr5Dnr5Lnr5RcIiw0LFwi56+b56+c56+e56+f56+g56+i56+j56+k56+n56+o56+p56+r56+s56+t56+v56+w56+yXCIsNCxcIuevuOevueevuuevu+evveevv1wiLDcsXCLnsIjnsInnsIrnsI3nsI7nsJBcIiw1LFwi57CX57CY57CZXCJdLFtcImJhODBcIixcIuewmlwiLDQsXCLnsKBcIiw1LFwi57Co57Cp57CrXCIsMTIsXCLnsLlcIiw1LFwi57GC6aq45a2p5rW35rCm5Lql5a6z6aqH6YWj5oao6YKv6Z+p5ZCr5ra15a+S5Ye95ZaK572V57+w5pK85o2N5pex5oa+5oKN54SK5rGX5rGJ5aSv5p2t6Iiq5aOV5ZqO6LGq5q+r6YOd5aW96ICX5Y+35rWp5ZG15Zad6I236I+P5qC456a+5ZKM5L2V5ZCI55uS6LKJ6ZiC5rKz5ra46LWr6KSQ6bmk6LS65Zi/6buR55eV5b6I54ug5oGo5ZO85Lqo5qiq6KGh5oGS6L2w5ZOE54OY6Jm56bi/5rSq5a6P5byY57qi5ZaJ5L6v54y05ZC85Y6a5YCZ5ZCO5ZG85LmO5b+955Ga5aO26JGr6IOh6J2054uQ57OK5rmWXCJdLFtcImJiNDBcIixcIuexg1wiLDksXCLnsY5cIiwzNixcIuextVwiLDUsXCLnsb5cIiw5XSxbXCJiYjgwXCIsXCLnsojnsopcIiw2LFwi57KT57KU57KW57KZ57Ka57Kb57Kg57Kh57Kj57Km57Kn57Ko57Kp57Kr57Ks57Kt57Kv57Kw57K0XCIsNCxcIueyuueyu+W8p+iZjuWUrOaKpOS6kuayquaIt+iKseWTl+WNjueMvua7keeUu+WIkuWMluivneankOW+iuaAgOa3ruWdj+asoueOr+ahk+i/mOe8k+aNouaCo+WUpOeXquixoueElea2o+WupuW5u+iNkuaFjOm7hOejuuidl+ewp+eah+WHsOaDtueFjOaZg+W5jOaBjeiwjueBsOaMpei+ieW+veaBouiblOWbnuavgeaClOaFp+WNieaDoOaZpui0v+enveS8mueDqeaxh+ius+ivsue7mOiNpOaYj+Wpmumtgua1kea3t+ixgea0u+S8meeBq+iOt+aIluaDkemcjei0p+eluOWHu+WcvuWfuuacuueVuOeoveenr+eulVwiXSxbXCJiYzQwXCIsXCLnsr/ns4Dns4Lns4Pns4Tns4bns4nns4vns45cIiw2LFwi57OY57Oa57Ob57Od57Oe57OhXCIsNixcIuezqVwiLDUsXCLns7BcIiw3LFwi57O557O657O8XCIsMTMsXCLntItcIiw1XSxbXCJiYzgwXCIsXCLntJFcIiwxNCxcIue0oee0o+e0pOe0pee0pue0qOe0qee0que0rOe0ree0rue0sFwiLDYsXCLogozppaXov7nmv4DorqXpuKHlp6znu6nnvInlkInmnoHmo5jovpHnsY3pm4blj4rmgKXnlr7msbLljbPlq4nnuqfmjKTlh6DohIrlt7Hok5/mioDlhoDlraPkvI7npa3liYLmgrjmtY7lr4Tlr4LorqHorrDml6Llv4zpmYXlppPnu6fnuqrlmInmnrflpLnkvbPlrrbliqDojZrpoorotL7nlLLpkr7lgYfnqLzku7fmnrbpqb7lq4Hmrbznm5HlnZrlsJbnrLrpl7TnhY7lhbzogqnoibDlpbjnvITojKfmo4Dmn6znorHnobfmi6PmjaHnroDkv63liarlh4/ojZDmp5vpibTot7XotLHop4HplK7nrq3ku7ZcIl0sW1wiYmQ0MFwiLFwi57S3XCIsNTQsXCLnta9cIiw3XSxbXCJiZDgwXCIsXCLntbhcIiwzMixcIuWBpeiIsOWJkemlr+a4kOa6hea2p+W7uuWDteWnnOWwhua1huaxn+eWhuiSi+ahqOWlluiusuWMoOmFsemZjeiVieakkuekgeeEpuiDtuS6pOmDiua1h+mqhOWoh+WavOaQhemTsOefq+S+peiEmueLoeinkumluue8tOe7nuWJv+aVmemFtei9v+i+g+WPq+eqluaPreaOpeeahuenuOihl+mYtuaIquWKq+iKguahlOadsOaNt+edq+errea0gee7k+ino+WnkOaIkuiXieiKpeeVjOWAn+S7i+eWpeivq+WxiuW3vueti+aWpOmHkeS7iua0peiln+e0p+mUpuS7heiwqOi/m+mds+aZi+emgei/keeDrOa1uFwiXSxbXCJiZTQwXCIsXCLntplcIiwxMixcIue2p1wiLDYsXCLntq9cIiw0Ml0sW1wiYmU4MFwiLFwi57eaXCIsMzIsXCLlsL3lirLojYblhaLojI7nnZvmmbbpsrjkuqzmg4rnsr7nsrPnu4/kupXorabmma/poojpnZnlooPmlazplZzlvoTnl4npnZbnq5/nq57lh4Dngq/nqpjmj6rnqbbnuqDnjpbpn63kuYXngbjkuZ3phZLljqnmlZHml6foh7zoiIXlko7lsLHnlprpnqDmi5jni5nnlr3lsYXpqbnoj4rlsYDlkoDnn6nkuL7msq7ogZrmi5Lmja7lt6jlhbfot53ouJ7plK/kv7Hlj6Xmg6fngqzliafmjZDpuYPlqJ/lgKbnnLfljbfnu6LmkoXmlKvmionmjpjlgJTniLXop4nlhrPor4Dnu53lnYfoj4zpkqflhpvlkJvls7tcIl0sW1wiYmY0MFwiLFwi57e7XCIsNjJdLFtcImJmODBcIixcIue4uue4vFwiLDQsXCLnuYJcIiw0LFwi57mIXCIsMjEsXCLkv4rnq6PmtZrpg6Hpqo/lloDlkpbljaHlkq/lvIDmj6nmpbflh6/mhajliIrloKrli5jlnY7noI3nnIvlurfmhbfns6DmiZvmipfkuqLngpXogIPmi7fng6TpnaDlnbfoi5vmn6/mo7Xno5Xpopfnp5Hlo7PlkrPlj6/muLTlhYvliLvlrqLor77ogq/llYPlnqbmgbPlnZHlkK3nqbrmgZDlrZTmjqfmiqDlj6PmiaPlr4fmnq/lk63nqp/oi6bphbflupPoo6TlpLjlnq7mjI7ot6jog6/lnZfnrbfkvqnlv6vlrr3mrL7ljKHnrZDni4LmoYbnn7/nnLbml7flhrXkuo/nm5Tlsr/nqqXokbXlpY7prYHlgoBcIl0sW1wiYzA0MFwiLFwi57meXCIsMzUsXCLnuoNcIiwyMyxcIue6nOe6nee6nlwiXSxbXCJjMDgwXCIsXCLnuq7nurTnurvnurznu5bnu6Tnu6znu7nnvIrnvJDnvJ7nvLfnvLnnvLtcIiw2LFwi572D572GXCIsOSxcIue9kue9k+mmiOaEp+a6g+WdpOaYhuaNhuWbsOaLrOaJqeW7k+mYlOWeg+aLieWWh+icoeiFiui+o+WVpuiOseadpei1luiTneWpquagj+aLpuevrumYkeWFsOa+nOiwsOaPveiniOaHkue8hueDgua7peeQheamlOeLvOW7iumDjuacl+a1quaNnuWKs+eJouiAgeS9rOWnpemFqueDmea2neWLkuS5kOmbt+mVreiVvuejiue0r+WEoeWekuaTguiCi+exu+azquajsealnuWGt+WOmOaiqOeKgem7juevseeLuOemu+a8k+eQhuadjumHjOmypOekvOiOieiNlOWQj+agl+S4veWOieWKseegvuWOhuWIqeWCiOS+i+S/kFwiXSxbXCJjMTQwXCIsXCLnvZbnvZnnvZvnvZznvZ3nvZ7nvaDnvaNcIiw0LFwi572r572s572t572v572w572z57215722572357245726572757285729572/576A576CXCIsNyxcIue+i+e+jee+j1wiLDQsXCLnvpVcIiw0LFwi576b576c576g576i576j576l576m576oXCIsNixcIue+sVwiXSxbXCJjMTgwXCIsXCLnvrNcIiw0LFwi57665767576+57+A57+C57+D57+E57+G57+H57+I57+J57+L57+N57+PXCIsNCxcIue/lue/l+e/mVwiLDUsXCLnv6Lnv6Pnl6Lnq4vnspLmsqXpmrblipvnkoPlk6nkv6nogZTojrLov57plbDlu4nmgJzmtp/luJjmlZvohLjpk77mgYvngrznu4Pnsq7lh4nmooHnsrHoia/kuKTovobph4/mmb7kuq7osIXmkqnogYrlg5rnlpfnh47lr6Xovr3mvabkuobmkoLplaPlu5bmlpnliJfoo4Lng4jliqPnjI7nkLPmnpfno7fpnJbkuLTpgrvps57mt4vlh5votYHlkJ3mi47njrLoj7Hpm7bpvoTpk4PkvLbnvprlh4zngbXpmbXlsq3pooblj6bku6TmupznkInmprTnoavppo/nlZnliJjnmKTmtYHmn7Plha3pvpnogYvlkpnnrLznqr9cIl0sW1wiYzI0MFwiLFwi57+k57+n57+o57+q57+r57+s57+t57+v57+y57+0XCIsNixcIue/vee/vue/v+iAguiAh+iAiOiAieiAiuiAjuiAj+iAkeiAk+iAmuiAm+iAneiAnuiAn+iAoeiAo+iApOiAq1wiLDUsXCLogLLogLTogLnogLrogLzogL7ogYDogYHogYTogYXogYfogYjogYnogY7ogY/ogZDogZHogZPogZXogZbogZdcIl0sW1wiYzI4MFwiLFwi6IGZ6IGbXCIsMTMsXCLogatcIiw1LFwi6IGyXCIsMTEsXCLpmoblnoTmi6LpmYfmpbzlqITmkILnr5PmvI/pmYvoiqbljaLpooXlupDngonmjrPljaTomY/psoHpupPnoozpnLLot6/otYLpub/mvZ7npoTlvZXpmYbmiK7pqbTlkJXpk53kvqPml4XlsaXlsaHnvJXomZHmsK/lvovnjofmu6Tnu7/ls6bmjJvlrarmu6bljbXkubHmjqDnlaXmiqHova7kvKbku5HmsqbnurborrrokJ3onrrnvZfpgLvplKPnrqnpqqHoo7jokL3mtJvpqobnu5zlpojpurvnjpvnoIHomoLpqazpqoLlmJvlkJfln4vkubDpuqbljZbov4johInnnpLpppLom67mu6HolJPmm7zmhaLmvKtcIl0sW1wiYzM0MFwiLFwi6IG+6IKB6IKC6IKF6IKI6IKK6IKNXCIsNSxcIuiClOiCleiCl+iCmeiCnuiCo+iCpuiCp+iCqOiCrOiCsOiCs+iCteiCtuiCuOiCueiCu+iDheiDh1wiLDQsXCLog49cIiw2LFwi6IOY6IOf6IOg6IOi6IOj6IOm6IOu6IO16IO36IO56IO76IO+6IO/6ISA6ISB6ISD6ISE6ISF6ISH6ISI6ISLXCJdLFtcImMzODBcIixcIuiEjOiEleiEl+iEmeiEm+iEnOiEneiEn1wiLDEyLFwi6ISt6ISu6ISw6ISz6IS06IS16IS36IS5XCIsNCxcIuiEv+iwqeiKkuiMq+ebsuawk+W/meiOveeMq+iMhemUmuavm+efm+mThuWNr+iMguWGkuW4veiyjOi0uOS5iOeOq+aemuaihemFtumcieeFpOayoeecieWqkumVgeavj+e+juaYp+WvkOWmueWqmumXqOmXt+S7rOiQjOiSmeaqrOebn+mUsOeMm+aipuWtn+ecr+mGmumdoeeznOi/t+iwnOW8peexs+enmOinheazjOicnOWvhuW5guajieecoOe7teWGleWFjeWLieWoqee8hemdouiLl+aPj+eehOiXkOenkua4uuW6meWmmeiUkeeBreawkeaKv+eav+aVj+aCr+mXveaYjuien+m4o+mTreWQjeWRveiwrOaRuFwiXSxbXCJjNDQwXCIsXCLohYBcIiw1LFwi6IWH6IWJ6IWN6IWO6IWP6IWS6IWW6IWX6IWY6IWbXCIsNCxcIuiFoeiFouiFo+iFpOiFpuiFqOiFquiFq+iFrOiFr+iFsuiFs+iFteiFtuiFt+iFuOiGgeiGg1wiLDQsXCLohonohovohozoho3oho7ohpDohpJcIiw1LFwi6IaZ6Iaa6IaeXCIsNCxcIuiGpOiGpVwiXSxbXCJjNDgwXCIsXCLohqfohqnohqtcIiw3LFwi6Ia0XCIsNSxcIuiGvOiGveiGvuiGv+iHhOiHheiHh+iHiOiHieiHi+iHjVwiLDYsXCLmkbnomJHmqKHohpzno6jmkanprZTmirnmnKvojqvloqjpu5jmsqvmvKDlr57pmYzosIvniZ/mn5Dmi4fniaHkuqnlp4bmr43lopPmmq7luZXli5/mhZXmnKjnm67nnabniafnqYbmi7/lk6rlkZDpkqDpgqPlqJznurPmsJbkuYPlpbbogJDlpYjljZfnlLfpmr7lm4rmjKDohJHmgbzpl7nmt5blkaLppoHlhoXlq6nog73lpq7pnJPlgKrms6XlsLzmi5/kvaDljL/ohbvpgIbmurrolKvmi4jlubTnor7mkrXmjbvlv7XlqJjphb/puJ/lsL/mjY/ogYLlrb3lla7plYrplY3mtoXmgqjmn6Dni57lh53lroFcIl0sW1wiYzU0MFwiLFwi6IeUXCIsMTQsXCLoh6Toh6Xoh6boh6joh6noh6voh65cIiw0LFwi6Ie1XCIsNSxcIuiHveiHv+iIg+iIh1wiLDQsXCLoiI7oiI/oiJHoiJPoiJVcIiw1LFwi6Iid6Iig6Iik6Iil6Iim6Iin6Iip6Iiu6Iiy6Ii66Ii86Ii96Ii/XCJdLFtcImM1ODBcIixcIuiJgOiJgeiJguiJg+iJheiJhuiJiOiJiuiJjOiJjeiJjuiJkFwiLDcsXCLoiZnoiZvoiZzoiZ3oiZ7oiaBcIiw3LFwi6Imp5oun5rOe54mb5omt6ZKu57q96IST5rWT5Yac5byE5aW05Yqq5oCS5aWz5pqW6JmQ55af5oyq5oem57Ov6K+65ZOm5qyn6bil5q606JeV5ZGV5YG25rKk5ZWq6La054is5biV5oCV55C25ouN5o6S54mM5b6Y5rmD5rS+5pSA5r2Y55uY56OQ55u855WU5Yik5Y+b5LmT5bqe5peB6ICq6IOW5oqb5ZKG5Yio54Ku6KKN6LeR5rOh5ZG46IOa5Z+56KO06LWU6Zmq6YWN5L2p5rKb5Za355uG56Cw5oqo54O55r6O5b2t6JOs5qOa56G856+36Iao5pyL6bmP5o2n56Kw5Z2v56CS6Zy55om55oqr5YqI55C15q+XXCJdLFtcImM2NDBcIixcIuiJquiJq+iJrOiJreiJseiJteiJtuiJt+iJuOiJu+iJvOiKgOiKgeiKg+iKheiKhuiKh+iKieiKjOiKkOiKk+iKlOiKleiKluiKmuiKm+iKnuiKoOiKouiKo+iKp+iKsuiKteiKtuiKuuiKu+iKvOiKv+iLgOiLguiLg+iLheiLhuiLieiLkOiLluiLmeiLmuiLneiLouiLp+iLqOiLqeiLquiLrOiLreiLruiLsOiLsuiLs+iLteiLtuiLuFwiXSxbXCJjNjgwXCIsXCLoi7roi7xcIiw0LFwi6IyK6IyL6IyN6IyQ6IyS6IyT6IyW6IyY6IyZ6IydXCIsOSxcIuiMqeiMquiMruiMsOiMsuiMt+iMu+iMveWVpOiEvueWsuearuWMueeXnuWDu+WxgeitrOevh+WBj+eJh+mql+mjmOa8gueTouelqOaSh+eepeaLvOmikei0q+WTgeiBmOS5kuWdquiLueiQjeW5s+WHreeTtuivhOWxj+WdoeazvOmih+WphuegtOmthOi/q+eyleWJluaJkemTuuS7huiOhuiRoeiPqeiSsuWflOactOWcg+aZrua1puiwseabneeAkeacn+asuuagluaImuWmu+S4g+WHhOa8huafkuayj+WFtuaji+Wlh+atp+eVpuW0juiEkOm9kOaXl+eliOelgemqkei1t+WyguS5nuS8geWQr+WlkeegjOWZqOawlOi/hOW8g+axveazo+iuq+aOkFwiXSxbXCJjNzQwXCIsXCLojL7ojL/ojYHojYLojYTojYXojYjojYpcIiw0LFwi6I2T6I2VXCIsNCxcIuiNneiNouiNsFwiLDYsXCLojbnojbrojb5cIiw2LFwi6I6H6I6I6I6K6I6L6I6M6I6N6I6P6I6Q6I6R6I6U6I6V6I6W6I6X6I6Z6I6a6I6d6I6f6I6hXCIsNixcIuiOrOiOreiOrlwiXSxbXCJjNzgwXCIsXCLojq/ojrXojrvojr7ojr/oj4Loj4Poj4Toj4boj4joj4noj4voj43oj47oj5Doj5Hoj5Loj5Poj5Xoj5foj5noj5roj5voj57oj6Loj6Poj6Toj6boj6foj6joj6voj6zoj63mgbDmtL3nibXmiabpko7pk4XljYPov4Hnrb7ku5/osKbkub7pu5TpkrHpkrPliY3mvZzpgaPmtYXosLTloJHltYzmrKDmrYnmnqrlkZvohZTnvozlopnolLflvLrmiqLmqYfplLnmlbLmgoTmoaXnnqfkuZTkvqjlt6fpnpjmkqznv5jls63kv4/nqo3liIfojITkuJTmgK/nqoPpkqbkvrXkurLnp6bnkLTli6Toirnmk5Lnpr3lr53msoHpnZLovbvmsKLlgL7ljb/muIXmk47mmbTmsLDmg4Xpobfor7fluobnkLznqbfnp4vkuJjpgrHnkIPmsYLlm5rphYvms4XotovljLrom4bmm7Louq/lsYjpqbHmuKBcIl0sW1wiYzg0MFwiLFwi6I+u6I+v6I+zXCIsNCxcIuiPuuiPu+iPvOiPvuiPv+iQgOiQguiQheiQh+iQiOiQieiQiuiQkOiQklwiLDUsXCLokJnokJrokJvokJ5cIiw1LFwi6JCpXCIsNyxcIuiQslwiLDUsXCLokLnokLrokLvokL5cIiw3LFwi6JGH6JGI6JGJXCJdLFtcImM4ODBcIixcIuiRilwiLDYsXCLokZJcIiw0LFwi6JGY6JGd6JGe6JGf6JGg6JGi6JGkXCIsNCxcIuiRquiRruiRr+iRsOiRsuiRtOiRt+iRueiRu+iRvOWPluWotum+i+i2o+WOu+WciOmip+adg+mGm+azieWFqOeXiuaLs+eKrOWIuOWKnee8uueClOeYuOWNtOm5iuamt+ehrumbgOijmee+pOeEtueHg+WGieafk+eTpOWjpOaUmOWat+iuqemltuaJsOe7leaDueeDreWjrOS7geS6uuW/jemfp+S7u+iupOWIg+Wmiue6q+aJlOS7jeaXpeaIjuiMuOiTieiNo+iejeeGlOa6tuWuuee7kuWGl+aPieaflOiCieiMueigleWEkuWtuuWmgui+seS5s+axneWFpeikpei9r+mYruiViueRnumUkOmXsOa2puiLpeW8seaSkua0kuiQqOiFrumzg+Whnui1m+S4ieWPgVwiXSxbXCJjOTQwXCIsXCLokb1cIiw0LFwi6JKD6JKE6JKF6JKG6JKK6JKN6JKPXCIsNyxcIuiSmOiSmuiSm+iSneiSnuiSn+iSoOiSolwiLDEyLFwi6JKw6JKx6JKz6JK16JK26JK36JK76JK86JK+6JOA6JOC6JOD6JOF6JOG6JOH6JOI6JOL6JOM6JOO6JOP6JOS6JOU6JOV6JOXXCJdLFtcImM5ODBcIixcIuiTmFwiLDQsXCLok57ok6Hok6Lok6Tok6dcIiw0LFwi6JOt6JOu6JOv6JOxXCIsMTAsXCLok73ok77olIDolIHolILkvJ7mlaPmoZHll5PkuKfmkJTpqprmiavlq4LnkZ/oibLmtqnmo67lg6fojo7noILmnYDliLnmspnnurHlgrvllaXnhZ7nrZvmmZLnj4roi6vmnYnlsbHliKDnhb3ooavpl6rpmZXmk4XotaHohrPlloTmsZXmiYfnvK7lopLkvKTllYbotY/mmYzkuIrlsJroo7PmoqLmjY7nqI3ng6foio3li7rpn7blsJHlk6jpgrXnu43lpaLotYrom4foiIzoiI3otabmkYTlsITmhZHmtonnpL7orr7noLfnlLPlkbvkvLjouqvmt7HlqKDnu4XnpZ7msojlrqHlqbbnlJrogr7mhY7muJflo7DnlJ/nlKXnibLljYfnu7NcIl0sW1wiY2E0MFwiLFwi6JSDXCIsOCxcIuiUjeiUjuiUj+iUkOiUkuiUlOiUleiUluiUmOiUmeiUm+iUnOiUneiUnuiUoOiUolwiLDgsXCLolK1cIiw5LFwi6JS+XCIsNCxcIuiVhOiVheiVhuiVh+iVi1wiLDEwXSxbXCJjYTgwXCIsXCLolZfolZjolZrolZvolZzolZ3olZ9cIiw0LFwi6JWl6JWm6JWn6JWpXCIsOCxcIuiVs+iVteiVtuiVt+iVuOiVvOiVveiVv+iWgOiWgeecgeebm+WJqeiDnOWco+W4iOWkseeLruaWvea5v+ivl+WwuOiZseWNgeefs+aLvuaXtuS7gOmjn+iagOWunuivhuWPsuefouS9v+WxjumptuWni+W8j+ekuuWjq+S4luafv+S6i+aLreiqk+mAneWKv+aYr+WXnOWZrOmAguS7leS+jemHiumlsOawj+W4guaBg+WupOinhuivleaUtuaJi+mmluWuiOWvv+aOiOWUruWPl+eYpuWFveiUrOaeouais+auiuaKkui+k+WPlOiIkua3keeWj+S5pui1juWtsOeGn+iWr+aakeabmee9suicgOm7jem8oOWxnuacr+i/sOagkeadn+aIjeerluWiheW6tuaVsOa8sVwiXSxbXCJjYjQwXCIsXCLoloLoloPolobolohcIiw2LFwi6JaQXCIsMTAsXCLolp1cIiw2LFwi6Jal6Jam6Jan6Jap6Jar6Jas6Jat6JaxXCIsNSxcIuiWuOiWulwiLDYsXCLol4JcIiw2LFwi6JeKXCIsNCxcIuiXkeiXklwiXSxbXCJjYjgwXCIsXCLol5Tol5ZcIiw1LFwi6JedXCIsNixcIuiXpeiXpuiXp+iXqOiXqlwiLDE0LFwi5oGV5Yi36ICN5pGU6KGw55Sp5biF5qCT5ou06Zyc5Y+M54i96LCB5rC0552h56iO5ZCu556s6aG66Iic6K+056GV5pyU54OB5pav5pKV5Zi25oCd56eB5Y+45Lid5q276IKG5a+65Zej5Zub5Ly65Ly86aWy5bez5p2+6IC45oCC6aKC6YCB5a6L6K686K+15pCc6ImY5pOe5Ze96IuP6YWl5L+X57Sg6YCf57Kf5YOz5aGR5rqv5a6/6K+J6IKD6YW46JKc566X6Jm96ZqL6ZqP57ul6auT56KO5bKB56mX6YGC6Zqn56Wf5a2Z5o2f56yL6JOR5qKt5ZSG57yp55CQ57Si6ZSB5omA5aGM5LuW5a6D5aW55aGUXCJdLFtcImNjNDBcIixcIuiXueiXuuiXvOiXveiXvuiYgFwiLDQsXCLomIZcIiwxMCxcIuiYkuiYk+iYlOiYleiYl1wiLDE1LFwi6Jio6JiqXCIsMTMsXCLomLnomLromLvomL3omL7omL/omYBcIl0sW1wiY2M4MFwiLFwi6JmBXCIsMTEsXCLomZLomZPomZVcIiw0LFwi6Jmb6Jmc6Jmd6Jmf6Jmg6Jmh6JmjXCIsNyxcIueNreaMnui5i+i4j+iDjuiLlOaKrOWPsOazsOmFnuWkquaAgeaxsOWdjeaRiui0queYq+a7qeWdm+aqgOeXsOa9reiwreiwiOWdpuavr+iikueis+aOouWPueeCreaxpOWhmOaQquWgguajoOiGm+WUkOezluWAmOi6uua3jOi2n+eDq+aOj+a2m+a7lOe7puiQhOahg+mAg+a3mOmZtuiuqOWll+eJueiXpOiFvueWvOiqiuair+WJlOi4oumUkeaPkOmimOi5hOWVvOS9k+abv+Waj+aDlea2leWJg+WxieWkqea3u+Whq+eUsOeUnOaBrOiIlOiFhuaMkeadoei/ouecuui3s+i0tOmTgeW4luWOheWQrOeDg1wiXSxbXCJjZDQwXCIsXCLoma3oma/ombDombJcIiw2LFwi6JqDXCIsNixcIuiajlwiLDQsXCLompTompZcIiw1LFwi6JqeXCIsNCxcIuiapeiapuiaq+iareiaruiasuias+iat+iauOiaueiau1wiLDQsXCLom4Hom4Lom4Pom4Xom4jom4zom43om5Lom5Pom5Xom5bom5fom5rom5xcIl0sW1wiY2Q4MFwiLFwi6Jud6Jug6Juh6Jui6Juj6Jul6Jum6Jun6Juo6Juq6Jur6Jus6Juv6Ju16Ju26Ju36Ju66Ju76Ju86Ju96Ju/6JyB6JyE6JyF6JyG6JyL6JyM6JyO6JyP6JyQ6JyR6JyU6JyW5rGA5bu35YGc5Lqt5bqt5oy66ImH6YCa5qGQ6YWu556z5ZCM6ZOc5b2k56ul5qG25o2F562S57uf55eb5YG35oqV5aS06YCP5Ye456eD56qB5Zu+5b6S6YCU5raC5bGg5Zyf5ZCQ5YWU5rmN5Zui5o6o6aKT6IW/6JyV6KSq6YCA5ZCe5bGv6IeA5ouW5omY6ISx6bi16ZmA6amu6am85qSt5aal5ouT5ZS+5oyW5ZOH6JuZ5rS85aiD55Om6KKc5q2q5aSW6LGM5byv5rm+546p6aG95Li454O35a6M56KX5oy95pma55qW5oOL5a6b5amJ5LiH6IWV5rGq546L5Lqh5p6J572R5b6A5pe65pyb5b+Y5aaE5aiBXCJdLFtcImNlNDBcIixcIuicmeicm+icneicn+icoOicpOicpuicp+icqOicquicq+icrOicreicr+icsOicsuics+icteictuicuOicueicuuicvOicveidgFwiLDYsXCLonYronYvonY3onY/onZDonZHonZLonZTonZXonZbonZjonZpcIiw1LFwi6J2h6J2i6J2mXCIsNyxcIuidr+idseidsuids+idtVwiXSxbXCJjZTgwXCIsXCLonbfonbjonbnonbronb/onoDonoHonoTonobonofonononoronozono5cIiw0LFwi6J6U6J6V6J6W6J6YXCIsNixcIuieoFwiLDQsXCLlt43lvq7ljbHpn6bov53moYXlm7TllK/mg5/kuLrmvY3nu7Toi4fokI7lp5TkvJ/kvKrlsL7nuqzmnKrolJrlkbPnlY/og4PlloLprY/kvY3muK3osJPlsInmhbDljavnmJ/muKnomormlofpl7vnurnlkLvnqLPntIrpl67ll6Hnv4Hnk67mjJ3onJfmtqHnqp3miJHmlqHljafmj6HmsoPlt6vlkZzpkqjkuYzmsaHor6zlsYvml6DoipzmoqflkL7lkLTmr4vmrabkupTmjYLljYjoiJ7kvI3kvq7lnZ7miIrpm77mmaTnianli7/liqHmgp/or6/mmJTnhpnmnpDopb/noZLnn73mmbDlmLvlkLjplKHnibpcIl0sW1wiY2Y0MFwiLFwi6J6l6J6m6J6n6J6p6J6q6J6u6J6w6J6x6J6y6J606J626J636J646J656J676J686J6+6J6/6J+BXCIsNCxcIuifh+ifiOifieifjFwiLDQsXCLon5RcIiw2LFwi6J+c6J+d6J+e6J+f6J+h6J+i6J+j6J+k6J+m6J+n6J+o6J+p6J+r6J+s6J+t6J+vXCIsOV0sW1wiY2Y4MFwiLFwi6J+66J+76J+86J+96J+/6KCA6KCB6KCC6KCEXCIsNSxcIuigi1wiLDcsXCLooJTooJfooJjooJnooJrooJxcIiw0LFwi6KCj56iA5oGv5biM5oKJ6Iad5aSV5oOc54aE54Ov5rqq5rGQ54qA5qqE6KKt5bit5Lmg5aqz5Zac6ZOj5rSX57O76ZqZ5oiP57uG556O6Jm+5Yyj6Zye6L6W5pqH5bOh5L6g54ut5LiL5Y6m5aSP5ZCT5o6A6ZSo5YWI5LuZ6bKc57qk5ZK46LSk6KGU6Ii36Zey5raO5bym5auM5pi+6Zmp546w54yu5Y6/6IW66aaF576h5a6q6Zm36ZmQ57q/55u45Y6i6ZW26aaZ566x6KWE5rmY5Lmh57+U56Wl6K+m5oOz5ZON5Lqr6aG55be35qmh5YOP5ZCR6LGh6JCn56Gd6ZyE5YmK5ZOu5Zqj6ZSA5raI5a615reG5pmTXCJdLFtcImQwNDBcIixcIuigpFwiLDEzLFwi6KCzXCIsNSxcIuiguuigu+igveigvuigv+ihgeihguihg+ihhlwiLDUsXCLooY5cIiw1LFwi6KGV6KGW6KGY6KGaXCIsNixcIuihpuihp+ihquihreihr+ihseihs+ihtOihteihtuihuOihueihulwiXSxbXCJkMDgwXCIsXCLoobvoobzoooDoooPooobooofooonooorooozooo7ooo/oopDoopHoopPoopToopXoopdcIiw0LFwi6KKdXCIsNCxcIuiio+iipVwiLDUsXCLlsI/lrZ3moKHogpbllbjnrJHmlYjmpZTkupvmrYfonY7pnovljY/mjJ/mkLrpgqrmlpzog4HosJDlhpnmorDljbjon7nmh4jms4Tms7vosKLlsZHolqroiq/plIzmrKPovpvmlrDlv7vlv4Pkv6HooYXmmJ/ohaXnjKnmg7rlhbTliJHlnovlvaLpgqLooYzphpLlubjmnY/mgKflp5PlhYTlh7bog7jljIjmsbnpm4TnhorkvJHkv67nvp7mnL3ll4XplIjnp4Doopbnu6Plop/miIzpnIDomZrlmJjpobvlvpDorrjok4TphZflj5nml63luo/nlZzmgaTnta7lqb/nu6rnu63ovanllqflrqPmgqzml4vnjoRcIl0sW1wiZDE0MFwiLFwi6KKs6KKu6KKv6KKw6KKyXCIsNCxcIuiiuOiiueiiuuiiu+iiveiivuiiv+ijgOijg+ijhOijh+ijiOijiuiji+ijjOijjeijj+ijkOijkeijk+ijluijl+ijmlwiLDQsXCLoo6Doo6Hoo6boo6foo6lcIiw2LFwi6KOy6KO16KO26KO36KO66KO76KO96KO/6KSA6KSB6KSDXCIsNV0sW1wiZDE4MFwiLFwi6KSJ6KSLXCIsNCxcIuikkeiklFwiLDQsXCLopJxcIiw0LFwi6KSi6KSj6KSk6KSm6KSn6KSo6KSp6KSs6KSt6KSu6KSv6KSx6KSy6KSz6KS16KS36YCJ55mj55yp57ua6Z206Jab5a2m56m06Zuq6KGA5YuL54aP5b6q5pes6K+i5a+76amv5beh5q6J5rGb6K6t6K6v6YCK6L+F5Y6L5oq86bim6bit5ZGA5Lir6Iq954mZ6Jqc5bSW6KGZ5rav6ZuF5ZOR5Lqa6K6254SJ5ZK96ZiJ54Of5re555uQ5Lil56CU6JyS5bKp5bu26KiA6aKc6ZiO54KO5rK/5aWE5o6p55y86KGN5ryU6Imz5aCw54eV5Y6M56Ca6ZuB5ZSB5b2m54Sw5a606LCa6aqM5q6D5aSu6biv56en5p2o5oms5L2v55ah576K5rSL6Ziz5rCn5Luw55eS5YW75qC35ry+6YKA6IWw5aaW55G2XCJdLFtcImQyNDBcIixcIuikuFwiLDgsXCLopYLopYPopYVcIiwyNCxcIuiloFwiLDUsXCLopadcIiwxOSxcIuilvFwiXSxbXCJkMjgwXCIsXCLopb3opb7opoDopoLopoTopoXopodcIiwyNixcIuaRh+Wwp+mBpeeqkeiwo+WnmuWSrOiIgOiNr+imgeiAgOaksOWZjuiAtueIt+mHjuWGtuS5n+mhteaOluS4muWPtuabs+iFi+WknOa2suS4gOWjueWMu+aPlumTseS+neS8iuiho+mikOWkt+mBl+enu+S7quiDsOeWkeayguWunOWnqOW9neakheiageWAmuW3suS5meefo+S7peiJuuaKkeaYk+mCkeWxueS6v+W9ueiHhumAuOiChOeWq+S6puijlOaEj+avheW/huS5ieebiua6ouivo+iuruiwiuivkeW8gue/vOe/jOe7juiMteiNq+WboOaut+mfs+mYtOWnu+WQn+mTtua3q+WvhemlruWwueW8lemakFwiXSxbXCJkMzQwXCIsXCLopqJcIiwzMCxcIuing+injeink+inlOinleinl+inmOinmeinm+inneinn+inoOinoeinouinpOinp+inqOinqeinquinrOinreinruinsOinseinsuintFwiLDZdLFtcImQzODBcIixcIuinu1wiLDQsXCLoqIFcIiw1LFwi6KiIXCIsMjEsXCLljbDoi7HmqLHlqbTpubDlupTnvKjojrnokKTokKXojafonYfov47otaLnm4jlvbHpopbnoazmmKDlk5/mi6XkvaPoh4Pnl4jlurjpm43ouIrom7nlko/ms7PmtozmsLjmgb/li4fnlKjlub3kvJjmgqDlv6flsKTnlLHpgq7pk4DnirnmsrnmuLjphYnmnInlj4vlj7PkvZHph4nor7Hlj4jlubzov4Lmt6Tkuo7nm4LmpobomZ7mhJroiIbkvZnkv57pgL7psbzmhInmuJ3muJTpmoXkuojlqLHpm6jkuI7lsb/nprnlrofor63nvr3njonln5/oiovpg4HlkIHpgYfllrvls6rlvqHmhIjmrLLni7HogrLoqolcIl0sW1wiZDQ0MFwiLFwi6KieXCIsMzEsXCLoqL9cIiw4LFwi6KmJXCIsMjFdLFtcImQ0ODBcIixcIuipn1wiLDI1LFwi6Km6XCIsNixcIua1tOWvk+ijlemihOixq+mprem4s+a4iuWGpOWFg+Weo+iigeWOn+aPtOi+leWbreWRmOWchueMv+a6kOe8mOi/nOiLkeaEv+aAqOmZouabsOe6pui2iui3g+mSpeWys+eypOaciOaCpumYheiAmOS6kemDp+WMgOmZqOWFgei/kOiVtOmFneaZlemfteWtleWMneeguOadguagveWTieeBvuWusOi9veWGjeWcqOWSseaUkuaagui1nui1g+iEj+iRrOmBreezn+WHv+iXu+aeo+aXqea+oeiapOi6geWZqumAoOeagueBtueHpei0o+aLqeWImeazvei0vOaAjuWinuaGjuabvui1oOaJjuWWs+a4o+acrei9p1wiXSxbXCJkNTQwXCIsXCLoqoFcIiw3LFwi6KqLXCIsNyxcIuiqlFwiLDQ2XSxbXCJkNTgwXCIsXCLoq4NcIiwzMixcIumToemXuOecqOagheamqOWSi+S5jeeCuOiviOaRmOaWi+WuheeqhOWAuuWvqOeeu+avoeipueeymOayvuebj+aWqei+l+W0reWxleiYuOagiOWNoOaImOermea5m+e7veaon+eroOW9sOa8s+W8oOaOjOa2qOadluS4iOW4kOi0puS7l+iDgOeYtOmanOaLm+aYreaJvuayvOi1teeFp+e9qeWFhuiCh+WPrOmBruaKmOWTsuibsOi+meiAhemUl+iUl+i/mea1meePjeaWn+ecn+eUhOegp+iHu+i0numSiOS+puaeleeWueiviumch+aMr+mVh+mYteiSuOaMo+edgeW+geeLsOS6ieaAlOaVtOaLr+ato+aUv1wiXSxbXCJkNjQwXCIsXCLoq6RcIiwzNCxcIuisiFwiLDI3XSxbXCJkNjgwXCIsXCLorKTorKXorKdcIiwzMCxcIuW4p+eXh+mDkeivgeiKneaeneaUr+WQseicmOefpeiCouiEguaxgeS5i+e7h+iBjOebtOakjeauluaJp+WAvOS+hOWdgOaMh+atoui2vuWPquaXqOe6uOW/l+aMmuaOt+iHs+iHtOe9ruW4nOWzmeWItuaZuuenqeeomui0qOeCmeeXlOa7nuayu+eqkuS4reebheW/oOmSn+iht+e7iOenjeiCv+mHjeS7suS8l+iIn+WRqOW3nua0suivjOeypei9tOiCmOW4muWSkueaseWumeaYvOmqpOePoOagquibm+acseeMquivuOivm+mAkOerueeDm+eFruaLhOeeqeWYseS4u+iRl+afseWKqeibgOi0rumTuOetkVwiXSxbXCJkNzQwXCIsXCLorYZcIiwzMSxcIuitp1wiLDQsXCLora1cIiwyNV0sW1wiZDc4MFwiLFwi6K6HXCIsMjQsXCLorqzorrHorrvor4for5Dor6rosInosJ7kvY/ms6jnpZ3pqbvmipPniKrmi73kuJPnoJbovazmkrDotZrnr4bmoanluoToo4Xlpobmkp7lo67nirbmpI7plKXov73otZjlnaDnvIDosIblh4bmjYnmi5nljZPmoYznkKLojIHphYzllYTnnYDngbzmtYrlhbnlkqjotYTlp7/mu4vmt4TlrZzntKvku5Tnsb3mu5PlrZDoh6rmuI3lrZfprIPmo5XouKrlrpfnu7zmgLvnurXpgrnotbDlpY/mj43np5/otrPljZLml4/npZbor4XpmLvnu4TpkrvnuoLlmLTphonmnIDnvarlsIrpgbXmmKjlt6bkvZDmn57lgZrkvZzlnZDluqdcIl0sW1wiZDg0MFwiLFwi6LC4XCIsOCxcIuixguixg+ixhOixheixiOixiuixi+ixjVwiLDcsXCLosZbosZfosZjosZnosZtcIiw1LFwi6LGjXCIsNixcIuixrFwiLDYsXCLosbTosbXosbbosbfosbtcIiw2LFwi6LKD6LKE6LKG6LKHXCJdLFtcImQ4ODBcIixcIuiyiOiyi+iyjVwiLDYsXCLospXospbospfosplcIiwyMCxcIuS6jeS4jOWFgOS4kOW7v+WNheS4leS6mOS4numssuWtrOWZqeS4qOemuuS4v+WMleS5h+WkreeIu+WNruawkOWbn+iDpOmml+avk+edvum8l+S4tuS6n+m8kOS5nOS5qeS6k+iKiOWtm+WVrOWYj+S7hOWOjeWOneWOo+WOpeWOrumdpei1neWMmuWPteWMpuWMruWMvui1nOWNpuWNo+WIguWIiOWIjuWIreWIs+WIv+WJgOWJjOWJnuWJoeWJnOiSr+WJveWKguWKgeWKkOWKk+WGgue9lOS6u+S7g+S7ieS7guS7qOS7oeS7q+S7nuS8m+S7s+S8ouS9pOS7teS8peS8p+S8ieS8q+S9nuS9p+aUuOS9muS9nVwiXSxbXCJkOTQwXCIsXCLosq5cIiw2Ml0sW1wiZDk4MFwiLFwi6LOtXCIsMzIsXCLkvZ/kvZfkvLLkvL3kvbbkvbTkvpHkvonkvoPkvo/kvb7kvbvkvqrkvbzkvqzkvpTkv6bkv6jkv6rkv4Xkv5rkv6Pkv5zkv5Hkv5/kv7jlgKnlgYzkv7PlgKzlgI/lgK7lgK3kv77lgJzlgIzlgKXlgKjlgb7lgYPlgZXlgYjlgY7lgazlgbvlgqXlgqflgqnlgrrlg5blhIblg63lg6zlg6blg67lhIflhIvku53msL3kvZjkvaXkv47pvqDmsYbnsbTlha7lt73pu4npppjlhoHlpJTli7nljI3oqIfljJDlh6vlpJnlhZXkuqDlhZbkurPooa7ooqTkurXohJToo5LnpoDlrLTooIPnvrjlhqvlhrHlhr3lhrxcIl0sW1wiZGE0MFwiLFwi6LSOXCIsMTQsXCLotKDotZHotZLotZfotZ/otaXotajotanotarotazota7ota/otbHotbLotbhcIiw4LFwi6LaC6LaD6LaG6LaH6LaI6LaJ6LaMXCIsNCxcIui2kui2k+i2lVwiLDksXCLotqDotqFcIl0sW1wiZGE4MFwiLFwi6Lai6LakXCIsMTIsXCLotrLotrbotrfotrnotrvotr3ot4Dot4Hot4Lot4Xot4fot4jot4not4rot43ot5Dot5Lot5Pot5Tlh4flhpblhqLlhqXorqDorqborqforqrorrTorrXorrfor4Lor4Por4vor4/or47or5Lor5Por5Tor5bor5jor5nor5zor5/or6Dor6Tor6jor6nor67or7Dor7Por7bor7nor7zor7/osIDosILosITosIfosIzosI/osJHosJLosJTosJXosJbosJnosJvosJjosJ3osJ/osKDosKHosKXosKfosKrosKvosK7osK/osLLosLPosLXosLbljanljbrpmJ3pmKLpmKHpmLHpmKrpmL3pmLzpmYLpmYnpmZTpmZ/pmafpmazpmbLpmbTpmojpmo3pmpfpmrDpgpfpgpvpgp3pgpnpgqzpgqHpgrTpgrPpgrbpgrpcIl0sW1wiZGI0MFwiLFwi6LeV6LeY6LeZ6Lec6Leg6Leh6Lei6Lel6Lem6Len6Lep6Let6Leu6Lew6Lex6Ley6Le06Le26Le86Le+XCIsNixcIui4hui4h+i4iOi4i+i4jei4jui4kOi4kei4kui4k+i4lVwiLDcsXCLouKDouKHouKRcIiw0LFwi6Lir6Lit6Liw6Liy6Liz6Li06Li26Li36Li46Li76Li86Li+XCJdLFtcImRiODBcIixcIui4v+i5g+i5hei5hui5jFwiLDQsXCLouZNcIiw1LFwi6LmaXCIsMTEsXCLouafouajouarouavoua7oubHpgrjpgrDpg4/pg4Xpgr7pg5Dpg4Tpg4fpg5Ppg6bpg6Lpg5zpg5fpg5vpg6vpg6/pg77phITphKLphJ7phKPphLHphK/phLnphYPphYbliI3lpYLliqLliqzliq3lir7lk7/li5Dli5bli7Dlj5/nh67nn43lu7Tlh7Xlh7zprK/ljrblvIHnlZrlt6/lnYzlnqnlnqHlob7lorzlo4Xlo5HlnKnlnKzlnKrlnLPlnLnlnK7lnK/lnZzlnLvlnYLlnanlnoXlnavlnoblnbzlnbvlnajlna3lnbblnbPlnq3lnqTlnozlnrLln4/lnqflnrTlnpPlnqDln5Xln5jln5rln5nln5Llnrjln7Tln6/ln7jln6Tln51cIl0sW1wiZGM0MFwiLFwi6Lmz6Lm16Lm3XCIsNCxcIui5vei5vui6gOi6gui6g+i6hOi6hui6iFwiLDYsXCLoupHoupLoupPoupVcIiw2LFwi6Lqd6LqfXCIsMTEsXCLouq3ouq7ourDourHourNcIiw2LFwi6Lq7XCIsN10sW1wiZGM4MFwiLFwi6LuDXCIsMTAsXCLou49cIiwyMSxcIuWgi+WgjeWfveWfreWggOWgnuWgmeWhhOWgoOWhpeWhrOWigeWiieWimuWigOmmqOm8meaHv+iJueiJveiJv+iKj+iKiuiKqOiKhOiKjuiKkeiKl+iKmeiKq+iKuOiKvuiKsOiLiOiLiuiLo+iKmOiKt+iKruiLi+iLjOiLgeiKqeiKtOiKoeiKquiKn+iLhOiLjuiKpOiLoeiMieiLt+iLpOiMj+iMh+iLnOiLtOiLkuiLmOiMjOiLu+iLk+iMkeiMmuiMhuiMlOiMleiLoOiLleiMnOiNkeiNm+iNnOiMiOiOkuiMvOiMtOiMseiOm+iNnuiMr+iNj+iNh+iNg+iNn+iNgOiMl+iNoOiMreiMuuiMs+iNpuiNpVwiXSxbXCJkZDQwXCIsXCLou6VcIiw2Ml0sW1wiZGQ4MFwiLFwi6LykXCIsMzIsXCLojajojJvojanojazojaroja3oja7ojrDojbjojrPojrTojqDojqrojpPojpzojoXojbzojrbojqnojb3ojrjojbvojpjojp7ojqjojrrojrzoj4HokIHoj6Xoj5jloIfokJjokIvoj53oj73oj5bokJzokLjokJHokIboj5Toj5/okI/okIPoj7joj7noj6roj4Xoj4DokKboj7Doj6HokZzokZHokZrokZnokbPokofokojokbrokonokbjokLzokYbokanokbbokozoko7okLHoka3ok4Hok43ok5Dok6bokr3ok5Pok4rokr/okrrok6DokqHokrnokrTokpfok6Xok6PolIznlI3olLjok7DolLnolJ/olLpcIl0sW1wiZGU0MFwiLFwi6L2FXCIsMzIsXCLovarovoDovozovpLovp3ovqDovqHovqLovqTovqXovqbovqfovqrovqzovq3ovq7ovq/ovrLovrPovrTovrXovrfovrjovrrovrvovrzovr/ov4Dov4Pov4ZcIl0sW1wiZGU4MFwiLFwi6L+JXCIsNCxcIui/j+i/kui/lui/l+i/mui/oOi/oei/o+i/p+i/rOi/r+i/sei/sui/tOi/tei/tui/uui/u+i/vOi/vui/v+mAh+mAiOmAjOmAjumAk+mAlemAmOiVluiUu+iTv+iTvOiVmeiViOiVqOiVpOiVnuiVuueeouiVg+iVsuiVu+iWpOiWqOiWh+iWj+iVueiWruiWnOiWheiWueiWt+iWsOiXk+iXgeiXnOiXv+iYp+iYheiYqeiYluiYvOW7vuW8iOWkvOWlgeiAt+WlleWlmuWlmOWMj+WwouWwpeWwrOWwtOaJjOaJquaKn+aKu+aLiuaLmuaLl+aLruaMouaLtuaMueaNi+aNg+aOreaPtuaNseaNuuaOjuaOtOaNreaOrOaOiuaNqeaOruaOvOaPsuaPuOaPoOaPv+aPhOaPnuaPjuaRkuaPhuaOvuaRheaRgeaQi+aQm+aQoOaQjOaQpuaQoeaRnuaShOaRreaSllwiXSxbXCJkZjQwXCIsXCLpgJnpgJzpgKPpgKTpgKXpgKdcIiw1LFwi6YCwXCIsNCxcIumAt+mAuemAuumAvemAv+mBgOmBg+mBhemBhumBiFwiLDQsXCLpgY7pgZTpgZXpgZbpgZnpgZrpgZxcIiw1LFwi6YGk6YGm6YGn6YGp6YGq6YGr6YGs6YGvXCIsNCxcIumBtlwiLDYsXCLpgb7pgoFcIl0sW1wiZGY4MFwiLFwi6YKE6YKF6YKG6YKH6YKJ6YKK6YKMXCIsNCxcIumCkumClOmClumCmOmCmumCnOmCnumCn+mCoOmCpOmCpemCp+mCqOmCqemCq+mCremCsumCt+mCvOmCvemCv+mDgOaRuuaSt+aSuOaSmeaSuuaTgOaTkOaTl+aTpOaTouaUieaUpeaUruW8i+W/kueUmeW8keWNn+WPseWPveWPqeWPqOWPu+WQkuWQluWQhuWRi+WRkuWRk+WRlOWRluWRg+WQoeWRl+WRmeWQo+WQsuWSguWSlOWRt+WRseWRpOWSmuWSm+WShOWRtuWRpuWSneWTkOWSreWTguWStOWTkuWSp+WSpuWTk+WTlOWRsuWSo+WTleWSu+WSv+WTjOWTmeWTmuWTnOWSqeWSquWSpOWTneWTj+WTnuWUm+WTp+WUoOWTveWUlOWTs+WUouWUo+WUj+WUkeWUp+WUquWVp+WWj+WWteWVieWVreWVgeWVleWUv+WVkOWUvFwiXSxbXCJlMDQwXCIsXCLpg4Lpg4Ppg4bpg4jpg4npg4vpg4zpg43pg5Lpg5Tpg5Xpg5bpg5jpg5npg5rpg57pg5/pg6Dpg6Ppg6Tpg6Xpg6npg6rpg6zpg67pg7Dpg7Hpg7Lpg7Ppg7Xpg7bpg7fpg7npg7rpg7vpg7zpg7/phIDphIHphIPphIVcIiwxOSxcIumEmumEm+mEnFwiXSxbXCJlMDgwXCIsXCLphJ3phJ/phKDphKHphKRcIiwxMCxcIumEsOmEslwiLDYsXCLphLpcIiw4LFwi6YWE5ZS35ZWW5ZW15ZW25ZW35ZSz5ZSw5ZWc5ZaL5ZeS5ZaD5Zax5Za55ZaI5ZaB5Zaf5ZW+5ZeW5ZaR5ZW75Zef5Za95Za+5ZaU5ZaZ5Zeq5Ze35ZeJ5Zif5ZeR5Zer5Zes5ZeU5Zem5Zed5ZeE5Zev5Zel5Zey5Zez5ZeM5ZeN5Zeo5Ze15Zek6L6U5Zie5ZiI5ZiM5ZiB5Zik5Zij5Ze+5ZiA5Zin5Zit5ZmY5Zi55ZmX5Zis5ZmN5Zmi5ZmZ5Zmc5ZmM5ZmU5ZqG5Zmk5Zmx5Zmr5Zm75Zm85ZqF5ZqT5Zqv5ZuU5ZuX5Zud5Zuh5Zu15Zur5Zu55Zu/5ZyE5ZyK5ZyJ5Zyc5biP5biZ5biU5biR5bix5bi75bi8XCJdLFtcImUxNDBcIixcIumFhemFh+mFiOmFkemFk+mFlOmFlemFlumFmOmFmemFm+mFnOmFn+mFoOmFpumFp+mFqOmFq+mFremFs+mFuumFu+mFvOmGgFwiLDQsXCLphobphojphorpho7pho/phpNcIiw2LFwi6YacXCIsNSxcIumGpFwiLDUsXCLphqvphqzphrDphrHphrLphrPphrbphrfphrjphrnphrtcIl0sW1wiZTE4MFwiLFwi6Ya8XCIsMTAsXCLph4jph4vph5Dph5JcIiw5LFwi6YedXCIsOCxcIuW4t+W5hOW5lOW5m+W5nuW5oeWyjOWxuuWyjeWykOWyluWyiOWymOWymeWykeWymuWynOWyteWyouWyveWyrOWyq+WyseWyo+WzgeWyt+WzhOWzkuWzpOWzi+WzpeW0guW0g+W0p+W0puW0ruW0pOW0nuW0huW0m+W1mOW0vuW0tOW0veW1rOW1m+W1r+W1neW1q+W1i+W1iuW1qeW1tOW2guW2meW2neixs+W2t+W3heW9s+W9t+W+guW+h+W+ieW+jOW+leW+meW+nOW+qOW+reW+teW+vOihouW9oeeKreeKsOeKtOeKt+eKuOeLg+eLgeeLjueLjeeLkueLqOeLr+eLqeeLsueLtOeLt+eMgeeLs+eMg+eLulwiXSxbXCJlMjQwXCIsXCLph6ZcIiw2Ml0sW1wiZTI4MFwiLFwi6YilXCIsMzIsXCLni7vnjJfnjJPnjKHnjIrnjJ7njJ3njJXnjKLnjLnnjKXnjKznjLjnjLHnjZDnjY3njZfnjaDnjaznja/njb7oiJvlpKXpo6flpKTlpILppaPppadcIiw1LFwi6aW06aW36aW96aaA6aaE6aaH6aaK6aaN6aaQ6aaR6aaT6aaU6aaV5bqA5bqR5bqL5bqW5bql5bqg5bq55bq15bq+5bqz6LWT5buS5buR5bub5buo5buq6Ia65b+E5b+J5b+W5b+P5oCD5b+u5oCE5b+h5b+k5b++5oCF5oCG5b+q5b+t5b+45oCZ5oC15oCm5oCb5oCP5oCN5oCp5oCr5oCK5oC/5oCh5oG45oG55oG75oG65oGCXCJdLFtcImUzNDBcIixcIumJhlwiLDQ1LFwi6Ym1XCIsMTZdLFtcImUzODBcIixcIumKhlwiLDcsXCLpio9cIiwyNCxcIuaBquaBveaCluaCmuaCreaCneaCg+aCkuaCjOaCm+aDrOaCu+aCseaDneaDmOaDhuaDmuaCtOaEoOaEpuaEleaEo+aDtOaEgOaEjuaEq+aFiuaFteaGrOaGlOaGp+aGt+aHlOaHteW/nemas+mXqemXq+mXsemXs+mXtemXtumXvOmXvumYg+mYhOmYhumYiOmYiumYi+mYjOmYjemYj+mYkumYlemYlumYl+mYmemYmuS4rOeIv+aIleawteaxlOaxnOaxiuayo+ayheaykOaylOayjOaxqOaxqeaxtOaxtuayhuayqeazkOazlOayreazt+azuOazseazl+aysuazoOazluazuuazq+azruayseazk+azr+azvlwiXSxbXCJlNDQwXCIsXCLpiqhcIiw1LFwi6YqvXCIsMjQsXCLpi4lcIiwzMV0sW1wiZTQ4MFwiLFwi6YupXCIsMzIsXCLmtLnmtKfmtIzmtYPmtYjmtIfmtITmtJnmtI7mtKvmtY3mtK7mtLXmtJrmtY/mtZLmtZTmtLPmtpHmta/mtp7mtqDmtZ7mtpPmtpTmtZzmtaDmtbzmtaPmuJrmt4fmt4Xmt57muI7mtr/mt6DmuJHmt6bmt53mt5nmuJbmtqvmuIzmtq7muKvmua7muY7muavmurLmuZ/muobmuZPmuZTmuLLmuKXmuYTmu5/murHmupjmu6DmvK3mu6LmuqXmuqfmur3murvmurfmu5fmurTmu4/muo/mu4Lmup/mvaLmvYbmvYfmvKTmvJXmu7nmvK/mvLbmvYvmvbTmvKrmvInmvKnmvonmvo3mvozmvbjmvbLmvbzmvbrmv5FcIl0sW1wiZTU0MFwiLFwi6YyKXCIsNTEsXCLpjL9cIiwxMF0sW1wiZTU4MFwiLFwi6Y2KXCIsMzEsXCLpjavmv4nmvqfmvrnmvrbmv4Lmv6Hmv67mv57mv6Dmv6/ngJrngKPngJvngLnngLXngY/ngZ7lroDlroTlrpXlrpPlrqXlrrjnlK/pqp7mkLTlr6Tlr67opLDlr7DouYforIfovrbov5Pov5Xov6Xov67ov6Tov6nov6bov7Pov6jpgIXpgITpgIvpgKbpgJHpgI3pgJbpgKHpgLXpgLbpgK3pgK/pgYTpgZHpgZLpgZDpgajpgZjpgaLpgZvmmrnpgbTpgb3pgoLpgojpgoPpgovlvZDlvZflvZblvZjlsLvlkqvlsZDlsZnlrbHlsaPlsabnvrzlvKrlvKnlvK3oibTlvLzprLvlsa7lpoHlpoPlpo3lpqnlpqrlpqNcIl0sW1wiZTY0MFwiLFwi6Y2sXCIsMzQsXCLpjpBcIiwyN10sW1wiZTY4MFwiLFwi6Y6sXCIsMjksXCLpj4vpj4zpj43lppflp4rlpqvlpp7lpqTlp5LlprLlpq/lp5flpr7lqIXlqIblp53lqIjlp6Plp5jlp7nlqIzlqInlqLLlqLTlqJHlqKPlqJPlqYDlqaflqYrlqZXlqLzlqaLlqbXog6zlqqrlqpvlqbflqbrlqr7lq6vlqrLlq5Llq5Tlqrjlq6Dlq6Plq7Hlq5blq6blq5jlq5zlrInlrJflrJblrLLlrLflrYDlsJXlsJzlrZrlraXlrbPlrZHlrZPlraLpqbXpqbfpqbjpqbrpqb/pqb3pqoDpqoHpqoXpqojpqorpqpDpqpLpqpPpqpbpqpjpqpvpqpzpqp3pqp/pqqDpqqLpqqPpqqXpqqfnup/nuqHnuqPnuqXnuqjnuqlcIl0sW1wiZTc0MFwiLFwi6Y+OXCIsNyxcIumPl1wiLDU0XSxbXCJlNzgwXCIsXCLpkI5cIiwzMixcIue6ree6sOe6vue7gOe7gee7gue7iee7i+e7jOe7kOe7lOe7l+e7m+e7oOe7oee7qOe7q+e7rue7r+e7see7sue8jee7tue7uue7u+e7vue8gee8gue8g+e8h+e8iOe8i+e8jOe8j+e8kee8kue8l+e8mee8nOe8m+e8n+e8oVwiLDYsXCLnvKrnvKvnvKznvK3nvK9cIiw0LFwi57y15bm655W/5beb55S+6YKV546O546R546u546i546f54+P54+C54+R5463546z54+A54+J54+I54+l54+Z6aG855CK54+p54+n54+e546654+y55CP55Cq55Gb55Cm55Cl55Co55Cw55Cu55CsXCJdLFtcImU4NDBcIixcIumQr1wiLDE0LFwi6ZC/XCIsNDMsXCLpkazpka3pka7pka9cIl0sW1wiZTg4MFwiLFwi6ZGwXCIsMjAsXCLpkpHpkpbpkpjpk4fpk4/pk5Ppk5Tpk5rpk6bpk7vplJzplKDnkJvnkJrnkYHnkZznkZfnkZXnkZnnkbfnka3nkb7nkpznko7nkoDnkoHnkofnkovnkp7nkqjnkqnnkpDnkqfnk5Lnkrrpn6rpn6vpn6zmnYzmnZPmnZ7mnYjmnanmnqXmnofmnarmnbPmnpjmnqfmnbXmnqjmnp7mnq3mnovmnbfmnbzmn7DmoInmn5jmoIrmn6nmnrDmoIzmn5nmnrXmn5rmnrPmn53moIDmn4Pmnrjmn6LmoI7mn4Hmn73moLLmoLPmoaDmoaHmoY7moaLmoYTmoaTmooPmoJ3moZXmoabmoYHmoafmoYDmoL7moYrmoYnmoKnmorXmoo/mobTmobfmopPmoavmo4Lmpa7mo7zmpJ/mpKDmo7lcIl0sW1wiZTk0MFwiLFwi6ZSn6ZSz6ZS96ZWD6ZWI6ZWL6ZWV6ZWa6ZWg6ZWu6ZW06ZW16ZW3XCIsNyxcIumWgFwiLDQyXSxbXCJlOTgwXCIsXCLplqtcIiwzMixcIuakpOajsOaki+akgeall+ajo+akkOalseakuealoOalgualneamhOalq+amgOammOaluOaktOanjOamh+amiOanjuamiealpualo+alueamm+amp+amu+amq+amreanlOamseangeaniuann+amleanoOamjeanv+aor+anreaol+aomOappeansuaphOaovuaqoOapkOapm+aoteaqjuapueaoveaoqOapmOapvOaqkeaqkOaqqeaql+aqq+eMt+eNkuaugeauguauh+auhOaukuauk+aujeaumuaum+auoeauqui9q+i9rei9sei9sui9s+i9tei9tui9uOi9t+i9uei9uui9vOi9vui+gei+gui+hOi+h+i+i1wiXSxbXCJlYTQwXCIsXCLpl4xcIiwyNyxcIumXrOmXv+mYh+mYk+mYmOmYm+mYnumYoOmYo1wiLDYsXCLpmKvpmKzpmK3pmK/pmLDpmLfpmLjpmLnpmLrpmL7pmYHpmYPpmYrpmY7pmY/pmZHpmZLpmZPpmZbpmZdcIl0sW1wiZWE4MFwiLFwi6ZmY6ZmZ6Zma6Zmc6Zmd6Zme6Zmg6Zmj6Zml6Zmm6Zmr6ZmtXCIsNCxcIumZs+mZuFwiLDEyLFwi6ZqH6ZqJ6ZqK6L6N6L6O6L6P6L6Y6L6a6LuO5oiL5oiX5oib5oif5oii5oih5oil5oik5ois6Ien55Ov55O055O/55SP55SR55ST5pS05peu5pev5pew5piK5piZ5p2y5piD5piV5piA54KF5pu35pid5pi05pix5pi25pi16ICG5pmf5pmU5pmB5pmP5pmW5pmh5pmX5pm35pqE5pqM5pqn5pqd5pq+5pub5puc5pum5pup6LSy6LSz6LS26LS76LS96LWA6LWF6LWG6LWI6LWJ6LWH6LWN6LWV6LWZ6KeH6KeK6KeL6KeM6KeO6KeP6KeQ6KeR54mu54qf54md54mm54mv54m+54m/54qE54qL54qN54qP54qS5oyI5oyy5o6wXCJdLFtcImViNDBcIixcIumajOmajumakemakumak+malemalumamumam+manVwiLDksXCLpmqhcIiw3LFwi6Zqx6Zqy6Zq06Zq16Zq36Zq46Zq66Zq76Zq/6ZuC6ZuD6ZuI6ZuK6ZuL6ZuQ6ZuR6ZuT6ZuU6ZuWXCIsOSxcIumboVwiLDYsXCLpm6tcIl0sW1wiZWI4MFwiLFwi6Zus6Zut6Zuu6Zuw6Zux6Zuy6Zu06Zu16Zu46Zu66Zu76Zu86Zu96Zu/6ZyC6ZyD6ZyF6ZyK6ZyL6ZyM6ZyQ6ZyR6ZyS6ZyU6ZyV6ZyXXCIsNCxcIumcnemcn+mcoOaQv+aTmOiAhOavquavs+avveavteavueawheawh+awhuawjeawleawmOawmeawmuawoeawqeawpOawquawsuaUteaVleaVq+eJjeeJkueJlueIsOiZouWIluiCn+iCnOiCk+iCvOaciuiCveiCseiCq+iCreiCtOiCt+iDp+iDqOiDqeiDquiDm+iDguiDhOiDmeiDjeiDl+ackOiDneiDq+iDseiDtOiDreiEjeiEjuiDsuiDvOacleiEkuixmuiEtuiEnuiErOiEmOiEsuiFiOiFjOiFk+iFtOiFmeiFmuiFseiFoOiFqeiFvOiFveiFreiFp+WhjeWqteiGiOiGguiGkea7leiGo+iGquiHjOacpuiHiuiGu1wiXSxbXCJlYzQwXCIsXCLpnKFcIiw4LFwi6Zyr6Zys6Zyu6Zyv6Zyx6ZyzXCIsNCxcIumcuumcu+mcvOmcvemcv1wiLDE4LFwi6Z2U6Z2V6Z2X6Z2Y6Z2a6Z2c6Z2d6Z2f6Z2j6Z2k6Z2m6Z2n6Z2o6Z2qXCIsN10sW1wiZWM4MFwiLFwi6Z2y6Z216Z23XCIsNCxcIumdvVwiLDcsXCLpnoZcIiw0LFwi6Z6M6Z6O6Z6P6Z6Q6Z6T6Z6V6Z6W6Z6X6Z6ZXCIsNCxcIuiHgeiGpuaspOast+asueatg+athuatmemjkemjkumjk+mjlemjmemjmuaus+W9gOavguins+aWkOm9keaWk+aWvOaXhuaXhOaXg+aXjOaXjuaXkuaXlueCgOeCnOeClueCneeCu+eDgOeCt+eCq+eCseeDqOeDiueEkOeEk+eElueEr+eEseeFs+eFnOeFqOeFheeFsueFiueFuOeFuueGmOeGs+eGteeGqOeGoOeHoOeHlOeHp+eHueeIneeIqOeBrOeEmOeFpueGueaIvuaIveaJg+aJiOaJieeku+elgOelhuelieelm+elnOelk+elmuelouell+eloOelr+elp+eluuemheemiuemmuemp+ems+W/keW/kFwiXSxbXCJlZDQwXCIsXCLpnp7pnp/pnqHpnqLpnqRcIiw2LFwi6Z6s6Z6u6Z6w6Z6x6Z6z6Z61XCIsNDZdLFtcImVkODBcIixcIumfpOmfpemfqOmfrlwiLDQsXCLpn7Tpn7dcIiwyMyxcIuaAvOaBneaBmuaBp+aBgeaBmeaBo+aCq+aEhuaEjeaFneaGqeaGneaHi+aHkeaIhuiCgOiBv+ayk+aztua3vOeftuefuOeggOegieegl+egmOegkeaWq+egreegnOegneegueeguuegu+egn+egvOegpeegrOego+egqeehjuehreehluehl+egpuehkOehh+ehjOehqueim+eik+eimueih+einOeioeeio+eisueiueeipeejlOejmeejieejrOejsuekheejtOekk+ekpOeknuektOm+m+m7uem7u+m7vOebseechOecjeebueech+eciOecmuecouecmeecreecpuecteecuOedkOedkeedh+edg+edmuedqFwiXSxbXCJlZTQwXCIsXCLpoI9cIiw2Ml0sW1wiZWU4MFwiLFwi6aGOXCIsMzIsXCLnnaLnnaXnnb/nno3nnb3nnoDnnoznnpHnnp/nnqDnnrDnnrXnnr3nlLrnlYDnlY7nlYvnlYjnlZvnlbLnlbnnloPnvZjnvaHnvZ/oqYjnvajnvbTnvbHnvbnnvoHnvb7nm43nm6XooLLpkoXpkobpkofpkovpkorpkozpko3pko/pkpDpkpTpkpfpkpXpkprpkpvpkpzpkqPpkqTpkqvpkqrpkq3pkqzpkq/pkrDpkrLpkrTpkrZcIiw0LFwi6ZK86ZK96ZK/6ZOE6ZOIXCIsNixcIumTkOmTkemTkumTlemTlumTl+mTmemTmOmTm+mTnumTn+mToOmToumTpOmTpemTp+mTqOmTqlwiXSxbXCJlZjQwXCIsXCLpoa9cIiw1LFwi6aKL6aKO6aKS6aKV6aKZ6aKj6aKoXCIsMzcsXCLpo4/po5Dpo5Tpo5bpo5fpo5vpo5zpo53po6BcIiw0XSxbXCJlZjgwXCIsXCLpo6Xpo6bpo6lcIiwzMCxcIumTqemTq+mTrumTr+mTs+mTtOmTtemTt+mTuemTvOmTvemTv+mUg+mUgumUhumUh+mUiemUiumUjemUjumUj+mUklwiLDQsXCLplJjplJvplJ3plJ7plJ/plKLplKrplKvplKnplKzplLHplLLplLTplLbplLfplLjplLzplL7plL/plYLplLXplYTplYXplYbplYnplYzplY7plY/plZLplZPplZTplZbplZfplZjplZnplZvplZ7plZ/plZ3plaHplaLplaRcIiw4LFwi6ZWv6ZWx6ZWy6ZWz6ZS655+n55+s6ZuJ56eV56et56ej56er56iG5bWH56iD56iC56ie56iUXCJdLFtcImYwNDBcIixcIumkiFwiLDQsXCLppI7ppI/ppJFcIiwyOCxcIumkr1wiLDI2XSxbXCJmMDgwXCIsXCLppYpcIiw5LFwi6aWWXCIsMTIsXCLppaTppabppbPppbjppbnppbvppb7ppoLppoPpponnqLnnqLfnqZHpu4/ppqXnqbDnmojnmo7nmpPnmpnnmqTnk57nk6DnlKzpuKDpuKLpuKhcIiw0LFwi6biy6bix6bi26bi46bi36bi56bi66bi+6bmB6bmC6bmE6bmG6bmH6bmI6bmJ6bmL6bmM6bmO6bmR6bmV6bmX6bma6bmb6bmc6bme6bmj6bmmXCIsNixcIum5sem5rem5s+eWkueWlOeWlueWoOeWneeWrOeWo+eWs+eWtOeWuOeXhOeWseeWsOeXg+eXgueXlueXjeeXo+eXqOeXpueXpOeXq+eXp+eYg+eXseeXvOeXv+eYkOeYgOeYheeYjOeYl+eYiueYpeeYmOeYleeYmVwiXSxbXCJmMTQwXCIsXCLppozppo7ppppcIiwxMCxcIummpummp+mmqVwiLDQ3XSxbXCJmMTgwXCIsXCLpp5lcIiwzMixcIueYm+eYvOeYoueYoOeZgOeYreeYsOeYv+eYteeZg+eYvueYs+eZjeeZnueZlOeZnOeZlueZq+eZr+e/iuerpuepuOepueeqgOeqhueqiOeqleeqpueqoOeqrOeqqOeqreeqs+ihpOihqeihsuihveihv+iiguiiouijhuiit+iivOijieijouijjuijo+ijpeijseikmuijvOijqOijvuijsOikoeikmeikk+ikm+ikiuiktOikq+iktuilgeilpuilu+eWi+iDpeeasueatOefnOiAkuiAlOiAluiAnOiAoOiAouiApeiApuiAp+iAqeiAqOiAseiAi+iAteiBg+iBhuiBjeiBkuiBqeiBseimg+mhuOmigOmig1wiXSxbXCJmMjQwXCIsXCLpp7pcIiw2Ml0sW1wiZjI4MFwiLFwi6ai5XCIsMzIsXCLpoonpoozpoo3poo/popTpoprpopvpop7pop/poqHpoqLpoqXpoqbomY3omZTomazoma7omb/ombrombzombvomqjomo3omovomqzomp3omqfomqPomqrompPomqnomrbom4TomrXom47omrDomrromrHomq/om4nom4/omrTom6nom7Hom7Lom63om7Pom5DonJPom57om7Tom5/om5jom5HonIPonIfom7jonIjonIronI3onInonKPonLvonJ7onKXonK7onJronL7onYjonLTonLHonKnonLfonL/onoLonKLonb3onb7onbvonaDonbDonYzona7onovonZPonaPonbzonaTonZnonaXonpPonq/onqjon5JcIl0sW1wiZjM0MFwiLFwi6amaXCIsMTcsXCLpqbLpqoPpqonpqo3pqo7pqpTpqpXpqpnpqqbpqqlcIiw2LFwi6aqy6aqz6aq06aq16aq56aq76aq96aq+6aq/6auD6auE6auGXCIsNCxcIumrjemrjumrj+mrkOmrkumrlOmrlemrlumrl+mrmemrmumrm+mrnFwiXSxbXCJmMzgwXCIsXCLpq53pq57pq6Dpq6Lpq6Ppq6Tpq6Xpq6fpq6jpq6npq6rpq6zpq67pq7BcIiw4LFwi6au66au8XCIsNixcIumshOmshemshuifhuieiOieheiereiel+ieg+ieq+ifpeierOieteies+ifi+ifk+ieveifkeifgOifiuifm+ifquifoOifruigluigk+ifvuigiuigm+igoeigueigvOe8tue9gue9hOe9heiIkOeruuerveesiOesg+eshOesleesiuesq+esj+eth+esuOesquesmeesruesseesoOespeespOess+esvuesnuetmOetmuetheetteetjOetneetoOetruetu+etouetsuetseeukOeupueup+euuOeurOeuneeuqOeuheeuqueunOeuoueuq+eutOevkeevgeevjOevneevmuevpeevpuevquewjOevvuevvOewj+ewluewi1wiXSxbXCJmNDQwXCIsXCLprIfprIlcIiw1LFwi6ayQ6ayR6ayS6ayUXCIsMTAsXCLprKDprKHprKLprKRcIiwxMCxcIumssOmssemss1wiLDcsXCLprL3prL7prL/prYDprYbprYrprYvprYzprY7prZDprZLprZPprZVcIiw1XSxbXCJmNDgwXCIsXCLprZtcIiwzMixcIuewn+ewquewpuewuOexgeexgOiHvuiIgeiIguiIhOiHrOihhOiIoeiIouiIo+iIreiIr+iIqOiIq+iIuOiIu+iIs+iItOiIvuiJhOiJieiJi+iJj+iJmuiJn+iJqOihvuiiheiiiOijmOijn+ilnue+nee+n+e+p+e+r+e+sOe+suexvOaVieeykeeyneeynOeynueyoueysueyvOeyveezgeezh+ezjOezjeeziOezheezl+ezqOiJruaaqOe+v+e/jue/lee/pee/oee/pue/qee/rue/s+ezuOe1t+e2pue2rue5h+e6m+m6uOm6tOi1s+i2hOi2lOi2kei2sei1p+i1reixh+ixiemFiumFkOmFjumFj+mFpFwiXSxbXCJmNTQwXCIsXCLprbxcIiw2Ml0sW1wiZjU4MFwiLFwi6a67XCIsMzIsXCLphaLphaHphbDphanpha/phb3phb7phbLphbTphbnphozphoXphpDpho3phpHphqLphqPphqrphq3phq7phq/phrXphrTphrrosZXpub7otrjot6vouIXouZnouanotrXotr/otrzotrrot4Tot5bot5fot5rot57ot47ot4/ot5vot4bot6zot7fot7jot6Pot7not7vot6TouInot73ouJTouJ3ouJ/ouKzouK7ouKPouK/ouLrouYDouLnouLXouL3ouLHouYnouYHouYLouZHouZLouYroubDoubboubzoua/oubTouoXouo/oupToupDoupzoup7osbjosoLosorosoXospjospTmlpvop5bop57op5rop5xcIl0sW1wiZjY0MFwiLFwi6a+cXCIsNjJdLFtcImY2ODBcIixcIumwm1wiLDMyLFwi6Kel6Ker6Kev6Ki+6Kym6Z2T6Zup6Zuz6Zuv6ZyG6ZyB6ZyI6ZyP6ZyO6Zyq6Zyt6Zyw6Zy+6b6A6b6D6b6FXCIsNSxcIum+jOm7vum8i+m8jemauemavOmavembjumbkueev+mboOmKjumKrumLiOmMvumNqumPiumOj+mQvumRq+mxv+mygumyhemyhumyh+myiOeoo+myi+myjumykOmykemykumylOmylemymumym+mynlwiLDUsXCLpsqVcIiw0LFwi6bKr6bKt6bKu6bKwXCIsNyxcIumyuumyu+myvOmyvemzhOmzhemzhumzh+mziumzi1wiXSxbXCJmNzQwXCIsXCLpsLxcIiw2Ml0sW1wiZjc4MFwiLFwi6bG76bG96bG+6bKA6bKD6bKE6bKJ6bKK6bKM6bKP6bKT6bKW6bKX6bKY6bKZ6bKd6bKq6bKs6bKv6bK56bK+XCIsNCxcIumziOmziemzkemzkumzmumzm+mzoOmzoemzjFwiLDQsXCLps5Pps5Tps5Xps5fps5jps5nps5zps53ps5/ps6LpnbzpnoXpnpHpnpLpnpTpnq/pnqvpnqPpnrLpnrTpqrHpqrDpqrfpuZjpqrbpqrrpqrzpq4Hpq4Dpq4Xpq4Lpq4vpq4zpq5HprYXprYPprYfprYnprYjprY3prZHpo6jppI3ppK7ppZXppZTpq5/pq6Hpq6bpq6/pq6vpq7vpq63pq7nprIjprI/prJPprJ/prKPpur3pur7nuLvpuoLpuofpuojpuovpupLpj5bpup3pup/pu5vpu5zpu53pu6Dpu5/pu6Lpu6npu6fpu6Xpu6rpu6/pvKLpvKzpvK/pvLnpvLfpvL3pvL7pvYRcIl0sW1wiZjg0MFwiLFwi6bOjXCIsNjJdLFtcImY4ODBcIixcIum0olwiLDMyXSxbXCJmOTQwXCIsXCLptYNcIiw2Ml0sW1wiZjk4MFwiLFwi6baCXCIsMzJdLFtcImZhNDBcIixcIum2o1wiLDYyXSxbXCJmYTgwXCIsXCLpt6JcIiwzMl0sW1wiZmI0MFwiLFwi6biDXCIsMjcsXCLpuKTpuKfpuK7puLDpuLTpuLvpuLzpuYDpuY3puZDpuZLpuZPpuZTpuZbpuZnpuZ3puZ/puaDpuaHpuaLpuaXpua7pua/pubLpubRcIiw5LFwi6bqAXCJdLFtcImZiODBcIixcIum6gem6g+m6hOm6hem6hum6iem6ium6jFwiLDUsXCLpupRcIiw4LFwi6bqe6bqgXCIsNSxcIum6p+m6qOm6qem6qlwiXSxbXCJmYzQwXCIsXCLpuqtcIiw4LFwi6bq16bq26bq36bq56bq66bq86bq/XCIsNCxcIum7hem7hum7h+m7iOm7ium7i+m7jOm7kOm7kum7k+m7lem7lum7l+m7mem7mum7num7oem7o+m7pOm7pum7qOm7q+m7rOm7rem7rum7sFwiLDgsXCLpu7rpu73pu79cIiw2XSxbXCJmYzgwXCIsXCLpvIZcIiw0LFwi6byM6byP6byR6byS6byU6byV6byW6byY6byaXCIsNSxcIum8oem8o1wiLDgsXCLpvK3pvK7pvLDpvLFcIl0sW1wiZmQ0MFwiLFwi6byyXCIsNCxcIum8uOm8uum8vOm8v1wiLDQsXCLpvYVcIiwxMCxcIum9klwiLDM4XSxbXCJmZDgwXCIsXCLpvblcIiw1LFwi6b6B6b6C6b6NXCIsMTEsXCLpvpzpvp3pvp7pvqFcIiw0LFwi76Ss76W576aV76en76exXCJdLFtcImZlNDBcIixcIu+ojO+oje+oju+oj++oke+ok++olO+omO+on++ooO+ooe+oo++opO+op++oqO+oqVwiXV0nKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTYpLHI9bigxMCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVyblwic3ltYm9sXCI9PXR5cGVvZiB0fHxyKHQpJiZcIltvYmplY3QgU3ltYm9sXVwiPT1pKHQpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNDUpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdHx8aSh0KSlyZXR1cm4gdDt2YXIgZT10K1wiXCI7cmV0dXJuXCIwXCI9PWUmJjEvdD09LTEvMD9cIi0wXCI6ZX19LGZ1bmN0aW9uKHQsZSl7dmFyIG49e30udG9TdHJpbmc7dC5leHBvcnRzPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKHQpe3JldHVyblwiW29iamVjdCBBcnJheV1cIj09bi5jYWxsKHQpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzMpKG4oOSksXCJNYXBcIik7dC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7dmFyIG49XCJvYmplY3RcIj09dHlwZW9mIGUmJmUmJmUuT2JqZWN0PT09T2JqZWN0JiZlO3QuZXhwb3J0cz1ufSkuY2FsbCh0aGlzLG4oNCkpfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMDIpLHI9bigxMDkpLGE9bigxMTEpLG89bigxMTIpLHM9bigxMTMpO2Z1bmN0aW9uIGModCl7dmFyIGU9LTEsbj1udWxsPT10PzA6dC5sZW5ndGg7Zm9yKHRoaXMuY2xlYXIoKTsrK2U8bjspe3ZhciBpPXRbZV07dGhpcy5zZXQoaVswXSxpWzFdKX19Yy5wcm90b3R5cGUuY2xlYXI9aSxjLnByb3RvdHlwZS5kZWxldGU9cixjLnByb3RvdHlwZS5nZXQ9YSxjLnByb3RvdHlwZS5oYXM9byxjLnByb3RvdHlwZS5zZXQ9cyx0LmV4cG9ydHM9Y30sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzUpLHI9bigyMSk7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuKXsodm9pZCAwPT09bnx8cih0W2VdLG4pKSYmKHZvaWQgMCE9PW58fGUgaW4gdCl8fGkodCxlLG4pfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzMpLHI9ZnVuY3Rpb24oKXt0cnl7dmFyIHQ9aShPYmplY3QsXCJkZWZpbmVQcm9wZXJ0eVwiKTtyZXR1cm4gdCh7fSxcIlwiLHt9KSx0fWNhdGNoKHQpe319KCk7dC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEyNCkoT2JqZWN0LmdldFByb3RvdHlwZU9mLE9iamVjdCk7dC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSl7dmFyIG49T2JqZWN0LnByb3RvdHlwZTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIGU9dCYmdC5jb25zdHJ1Y3RvcjtyZXR1cm4gdD09PShcImZ1bmN0aW9uXCI9PXR5cGVvZiBlJiZlLnByb3RvdHlwZXx8bil9fSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKHQpe3ZhciBpPW4oOSkscj1uKDEyNyksYT1lJiYhZS5ub2RlVHlwZSYmZSxvPWEmJlwib2JqZWN0XCI9PXR5cGVvZiB0JiZ0JiYhdC5ub2RlVHlwZSYmdCxzPW8mJm8uZXhwb3J0cz09PWE/aS5CdWZmZXI6dm9pZCAwLGM9KHM/cy5pc0J1ZmZlcjp2b2lkIDApfHxyO3QuZXhwb3J0cz1jfSkuY2FsbCh0aGlzLG4oMzYpKHQpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTI5KSxyPW4oMTMwKSxhPW4oMTMxKSxvPWEmJmEuaXNUeXBlZEFycmF5LHM9bz9yKG8pOmk7dC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7aWYoKFwiY29uc3RydWN0b3JcIiE9PWV8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIHRbZV0pJiZcIl9fcHJvdG9fX1wiIT1lKXJldHVybiB0W2VdfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzUpLHI9bigyMSksYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3QuZXhwb3J0cz1mdW5jdGlvbih0LGUsbil7dmFyIG89dFtlXTthLmNhbGwodCxlKSYmcihvLG4pJiYodm9pZCAwIT09bnx8ZSBpbiB0KXx8aSh0LGUsbil9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMzQpLHI9bigxMzYpLGE9bigzNyk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBhKHQpP2kodCwhMCk6cih0KX19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiB0fX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTQwKSxyPU1hdGgubWF4O3QuZXhwb3J0cz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIGU9cih2b2lkIDA9PT1lP3QubGVuZ3RoLTE6ZSwwKSxmdW5jdGlvbigpe2Zvcih2YXIgYT1hcmd1bWVudHMsbz0tMSxzPXIoYS5sZW5ndGgtZSwwKSxjPUFycmF5KHMpOysrbzxzOyljW29dPWFbZStvXTtvPS0xO2Zvcih2YXIgdT1BcnJheShlKzEpOysrbzxlOyl1W29dPWFbb107cmV0dXJuIHVbZV09bihjKSxpKHQsdGhpcyx1KX19fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxNDEpLHI9bigxNDMpKGkpO3QuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKHQpe2UuZmV0Y2g9cyh0LmZldGNoKSYmcyh0LlJlYWRhYmxlU3RyZWFtKSxlLndyaXRhYmxlU3RyZWFtPXModC5Xcml0YWJsZVN0cmVhbSksZS5hYm9ydENvbnRyb2xsZXI9cyh0LkFib3J0Q29udHJvbGxlciksZS5ibG9iQ29uc3RydWN0b3I9ITE7dHJ5e25ldyBCbG9iKFtuZXcgQXJyYXlCdWZmZXIoMSldKSxlLmJsb2JDb25zdHJ1Y3Rvcj0hMH1jYXRjaCh0KXt9dmFyIG47ZnVuY3Rpb24gaSgpe2lmKHZvaWQgMCE9PW4pcmV0dXJuIG47aWYodC5YTUxIdHRwUmVxdWVzdCl7bj1uZXcgdC5YTUxIdHRwUmVxdWVzdDt0cnl7bi5vcGVuKFwiR0VUXCIsdC5YRG9tYWluUmVxdWVzdD9cIi9cIjpcImh0dHBzOi8vZXhhbXBsZS5jb21cIil9Y2F0Y2godCl7bj1udWxsfX1lbHNlIG49bnVsbDtyZXR1cm4gbn1mdW5jdGlvbiByKHQpe3ZhciBlPWkoKTtpZighZSlyZXR1cm4hMTt0cnl7cmV0dXJuIGUucmVzcG9uc2VUeXBlPXQsZS5yZXNwb25zZVR5cGU9PT10fWNhdGNoKHQpe31yZXR1cm4hMX12YXIgYT12b2lkIDAhPT10LkFycmF5QnVmZmVyLG89YSYmcyh0LkFycmF5QnVmZmVyLnByb3RvdHlwZS5zbGljZSk7ZnVuY3Rpb24gcyh0KXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0fWUuYXJyYXlidWZmZXI9ZS5mZXRjaHx8YSYmcihcImFycmF5YnVmZmVyXCIpLGUubXNzdHJlYW09IWUuZmV0Y2gmJm8mJnIoXCJtcy1zdHJlYW1cIiksZS5tb3pjaHVua2VkYXJyYXlidWZmZXI9IWUuZmV0Y2gmJmEmJnIoXCJtb3otY2h1bmtlZC1hcnJheWJ1ZmZlclwiKSxlLm92ZXJyaWRlTWltZVR5cGU9ZS5mZXRjaHx8ISFpKCkmJnMoaSgpLm92ZXJyaWRlTWltZVR5cGUpLGUudmJBcnJheT1zKHQuVkJBcnJheSksbj1udWxsfSkuY2FsbCh0aGlzLG4oNCkpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKHQsaSxyKXt2YXIgYT1uKDYzKSxvPW4oMCkscz1uKDE3KSxjPWUucmVhZHlTdGF0ZXM9e1VOU0VOVDowLE9QRU5FRDoxLEhFQURFUlNfUkVDRUlWRUQ6MixMT0FESU5HOjMsRE9ORTo0fSx1PWUuSW5jb21pbmdNZXNzYWdlPWZ1bmN0aW9uKGUsbixvLGMpe3ZhciB1PXRoaXM7aWYocy5SZWFkYWJsZS5jYWxsKHUpLHUuX21vZGU9byx1LmhlYWRlcnM9e30sdS5yYXdIZWFkZXJzPVtdLHUudHJhaWxlcnM9e30sdS5yYXdUcmFpbGVycz1bXSx1Lm9uKFwiZW5kXCIsKGZ1bmN0aW9uKCl7dC5uZXh0VGljaygoZnVuY3Rpb24oKXt1LmVtaXQoXCJjbG9zZVwiKX0pKX0pKSxcImZldGNoXCI9PT1vKXtpZih1Ll9mZXRjaFJlc3BvbnNlPW4sdS51cmw9bi51cmwsdS5zdGF0dXNDb2RlPW4uc3RhdHVzLHUuc3RhdHVzTWVzc2FnZT1uLnN0YXR1c1RleHQsbi5oZWFkZXJzLmZvckVhY2goKGZ1bmN0aW9uKHQsZSl7dS5oZWFkZXJzW2UudG9Mb3dlckNhc2UoKV09dCx1LnJhd0hlYWRlcnMucHVzaChlLHQpfSkpLGEud3JpdGFibGVTdHJlYW0pe3ZhciBsPW5ldyBXcml0YWJsZVN0cmVhbSh7d3JpdGU6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBQcm9taXNlKChmdW5jdGlvbihlLG4pe3UuX2Rlc3Ryb3llZD9uKCk6dS5wdXNoKG5ldyBpKHQpKT9lKCk6dS5fcmVzdW1lRmV0Y2g9ZX0pKX0sY2xvc2U6ZnVuY3Rpb24oKXtyLmNsZWFyVGltZW91dChjKSx1Ll9kZXN0cm95ZWR8fHUucHVzaChudWxsKX0sYWJvcnQ6ZnVuY3Rpb24odCl7dS5fZGVzdHJveWVkfHx1LmVtaXQoXCJlcnJvclwiLHQpfX0pO3RyeXtyZXR1cm4gdm9pZCBuLmJvZHkucGlwZVRvKGwpLmNhdGNoKChmdW5jdGlvbih0KXtyLmNsZWFyVGltZW91dChjKSx1Ll9kZXN0cm95ZWR8fHUuZW1pdChcImVycm9yXCIsdCl9KSl9Y2F0Y2godCl7fX12YXIgcD1uLmJvZHkuZ2V0UmVhZGVyKCk7IWZ1bmN0aW9uIHQoKXtwLnJlYWQoKS50aGVuKChmdW5jdGlvbihlKXtpZighdS5fZGVzdHJveWVkKXtpZihlLmRvbmUpcmV0dXJuIHIuY2xlYXJUaW1lb3V0KGMpLHZvaWQgdS5wdXNoKG51bGwpO3UucHVzaChuZXcgaShlLnZhbHVlKSksdCgpfX0pKS5jYXRjaCgoZnVuY3Rpb24odCl7ci5jbGVhclRpbWVvdXQoYyksdS5fZGVzdHJveWVkfHx1LmVtaXQoXCJlcnJvclwiLHQpfSkpfSgpfWVsc2V7aWYodS5feGhyPWUsdS5fcG9zPTAsdS51cmw9ZS5yZXNwb25zZVVSTCx1LnN0YXR1c0NvZGU9ZS5zdGF0dXMsdS5zdGF0dXNNZXNzYWdlPWUuc3RhdHVzVGV4dCxlLmdldEFsbFJlc3BvbnNlSGVhZGVycygpLnNwbGl0KC9cXHI/XFxuLykuZm9yRWFjaCgoZnVuY3Rpb24odCl7dmFyIGU9dC5tYXRjaCgvXihbXjpdKyk6XFxzKiguKikvKTtpZihlKXt2YXIgbj1lWzFdLnRvTG93ZXJDYXNlKCk7XCJzZXQtY29va2llXCI9PT1uPyh2b2lkIDA9PT11LmhlYWRlcnNbbl0mJih1LmhlYWRlcnNbbl09W10pLHUuaGVhZGVyc1tuXS5wdXNoKGVbMl0pKTp2b2lkIDAhPT11LmhlYWRlcnNbbl0/dS5oZWFkZXJzW25dKz1cIiwgXCIrZVsyXTp1LmhlYWRlcnNbbl09ZVsyXSx1LnJhd0hlYWRlcnMucHVzaChlWzFdLGVbMl0pfX0pKSx1Ll9jaGFyc2V0PVwieC11c2VyLWRlZmluZWRcIiwhYS5vdmVycmlkZU1pbWVUeXBlKXt2YXIgZj11LnJhd0hlYWRlcnNbXCJtaW1lLXR5cGVcIl07aWYoZil7dmFyIGQ9Zi5tYXRjaCgvO1xccypjaGFyc2V0PShbXjtdKSg7fCQpLyk7ZCYmKHUuX2NoYXJzZXQ9ZFsxXS50b0xvd2VyQ2FzZSgpKX11Ll9jaGFyc2V0fHwodS5fY2hhcnNldD1cInV0Zi04XCIpfX19O28odSxzLlJlYWRhYmxlKSx1LnByb3RvdHlwZS5fcmVhZD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX3Jlc3VtZUZldGNoO3QmJih0aGlzLl9yZXN1bWVGZXRjaD1udWxsLHQoKSl9LHUucHJvdG90eXBlLl9vblhIUlByb2dyZXNzPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuX3hocixuPW51bGw7c3dpdGNoKHQuX21vZGUpe2Nhc2VcInRleHQ6dmJhcnJheVwiOmlmKGUucmVhZHlTdGF0ZSE9PWMuRE9ORSlicmVhazt0cnl7bj1uZXcgci5WQkFycmF5KGUucmVzcG9uc2VCb2R5KS50b0FycmF5KCl9Y2F0Y2godCl7fWlmKG51bGwhPT1uKXt0LnB1c2gobmV3IGkobikpO2JyZWFrfWNhc2VcInRleHRcIjp0cnl7bj1lLnJlc3BvbnNlVGV4dH1jYXRjaChlKXt0Ll9tb2RlPVwidGV4dDp2YmFycmF5XCI7YnJlYWt9aWYobi5sZW5ndGg+dC5fcG9zKXt2YXIgYT1uLnN1YnN0cih0Ll9wb3MpO2lmKFwieC11c2VyLWRlZmluZWRcIj09PXQuX2NoYXJzZXQpe2Zvcih2YXIgbz1uZXcgaShhLmxlbmd0aCkscz0wO3M8YS5sZW5ndGg7cysrKW9bc109MjU1JmEuY2hhckNvZGVBdChzKTt0LnB1c2gobyl9ZWxzZSB0LnB1c2goYSx0Ll9jaGFyc2V0KTt0Ll9wb3M9bi5sZW5ndGh9YnJlYWs7Y2FzZVwiYXJyYXlidWZmZXJcIjppZihlLnJlYWR5U3RhdGUhPT1jLkRPTkV8fCFlLnJlc3BvbnNlKWJyZWFrO249ZS5yZXNwb25zZSx0LnB1c2gobmV3IGkobmV3IFVpbnQ4QXJyYXkobikpKTticmVhaztjYXNlXCJtb3otY2h1bmtlZC1hcnJheWJ1ZmZlclwiOmlmKG49ZS5yZXNwb25zZSxlLnJlYWR5U3RhdGUhPT1jLkxPQURJTkd8fCFuKWJyZWFrO3QucHVzaChuZXcgaShuZXcgVWludDhBcnJheShuKSkpO2JyZWFrO2Nhc2VcIm1zLXN0cmVhbVwiOmlmKG49ZS5yZXNwb25zZSxlLnJlYWR5U3RhdGUhPT1jLkxPQURJTkcpYnJlYWs7dmFyIHU9bmV3IHIuTVNTdHJlYW1SZWFkZXI7dS5vbnByb2dyZXNzPWZ1bmN0aW9uKCl7dS5yZXN1bHQuYnl0ZUxlbmd0aD50Ll9wb3MmJih0LnB1c2gobmV3IGkobmV3IFVpbnQ4QXJyYXkodS5yZXN1bHQuc2xpY2UodC5fcG9zKSkpKSx0Ll9wb3M9dS5yZXN1bHQuYnl0ZUxlbmd0aCl9LHUub25sb2FkPWZ1bmN0aW9uKCl7dC5wdXNoKG51bGwpfSx1LnJlYWRBc0FycmF5QnVmZmVyKG4pfXQuX3hoci5yZWFkeVN0YXRlPT09Yy5ET05FJiZcIm1zLXN0cmVhbVwiIT09dC5fbW9kZSYmdC5wdXNoKG51bGwpfX0pLmNhbGwodGhpcyxuKDMpLG4oMSkuQnVmZmVyLG4oNCkpfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7KGZ1bmN0aW9uKGUsaSl7dmFyIHI9bigyNyk7dC5leHBvcnRzPXY7dmFyIGEsbz1uKDQ3KTt2LlJlYWRhYmxlU3RhdGU9YjtuKDQwKS5FdmVudEVtaXR0ZXI7dmFyIHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5saXN0ZW5lcnMoZSkubGVuZ3RofSxjPW4oNjYpLHU9bigyKS5CdWZmZXIsbD1lLlVpbnQ4QXJyYXl8fGZ1bmN0aW9uKCl7fTt2YXIgcD1uKDExKTtwLmluaGVyaXRzPW4oMCk7dmFyIGY9bigxNTEpLGQ9dm9pZCAwO2Q9ZiYmZi5kZWJ1Z2xvZz9mLmRlYnVnbG9nKFwic3RyZWFtXCIpOmZ1bmN0aW9uKCl7fTt2YXIgaCxtPW4oMTUyKSxnPW4oNjcpO3AuaW5oZXJpdHModixjKTt2YXIgeT1bXCJlcnJvclwiLFwiY2xvc2VcIixcImRlc3Ryb3lcIixcInBhdXNlXCIsXCJyZXN1bWVcIl07ZnVuY3Rpb24gYih0LGUpe3Q9dHx8e307dmFyIGk9ZSBpbnN0YW5jZW9mKGE9YXx8big4KSk7dGhpcy5vYmplY3RNb2RlPSEhdC5vYmplY3RNb2RlLGkmJih0aGlzLm9iamVjdE1vZGU9dGhpcy5vYmplY3RNb2RlfHwhIXQucmVhZGFibGVPYmplY3RNb2RlKTt2YXIgcj10LmhpZ2hXYXRlck1hcmssbz10LnJlYWRhYmxlSGlnaFdhdGVyTWFyayxzPXRoaXMub2JqZWN0TW9kZT8xNjoxNjM4NDt0aGlzLmhpZ2hXYXRlck1hcms9cnx8MD09PXI/cjppJiYob3x8MD09PW8pP286cyx0aGlzLmhpZ2hXYXRlck1hcms9TWF0aC5mbG9vcih0aGlzLmhpZ2hXYXRlck1hcmspLHRoaXMuYnVmZmVyPW5ldyBtLHRoaXMubGVuZ3RoPTAsdGhpcy5waXBlcz1udWxsLHRoaXMucGlwZXNDb3VudD0wLHRoaXMuZmxvd2luZz1udWxsLHRoaXMuZW5kZWQ9ITEsdGhpcy5lbmRFbWl0dGVkPSExLHRoaXMucmVhZGluZz0hMSx0aGlzLnN5bmM9ITAsdGhpcy5uZWVkUmVhZGFibGU9ITEsdGhpcy5lbWl0dGVkUmVhZGFibGU9ITEsdGhpcy5yZWFkYWJsZUxpc3RlbmluZz0hMSx0aGlzLnJlc3VtZVNjaGVkdWxlZD0hMSx0aGlzLmRlc3Ryb3llZD0hMSx0aGlzLmRlZmF1bHRFbmNvZGluZz10LmRlZmF1bHRFbmNvZGluZ3x8XCJ1dGY4XCIsdGhpcy5hd2FpdERyYWluPTAsdGhpcy5yZWFkaW5nTW9yZT0hMSx0aGlzLmRlY29kZXI9bnVsbCx0aGlzLmVuY29kaW5nPW51bGwsdC5lbmNvZGluZyYmKGh8fChoPW4oMjgpLlN0cmluZ0RlY29kZXIpLHRoaXMuZGVjb2Rlcj1uZXcgaCh0LmVuY29kaW5nKSx0aGlzLmVuY29kaW5nPXQuZW5jb2RpbmcpfWZ1bmN0aW9uIHYodCl7aWYoYT1hfHxuKDgpLCEodGhpcyBpbnN0YW5jZW9mIHYpKXJldHVybiBuZXcgdih0KTt0aGlzLl9yZWFkYWJsZVN0YXRlPW5ldyBiKHQsdGhpcyksdGhpcy5yZWFkYWJsZT0hMCx0JiYoXCJmdW5jdGlvblwiPT10eXBlb2YgdC5yZWFkJiYodGhpcy5fcmVhZD10LnJlYWQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZGVzdHJveSYmKHRoaXMuX2Rlc3Ryb3k9dC5kZXN0cm95KSksYy5jYWxsKHRoaXMpfWZ1bmN0aW9uIHcodCxlLG4saSxyKXt2YXIgYSxvPXQuX3JlYWRhYmxlU3RhdGU7bnVsbD09PWU/KG8ucmVhZGluZz0hMSxmdW5jdGlvbih0LGUpe2lmKGUuZW5kZWQpcmV0dXJuO2lmKGUuZGVjb2Rlcil7dmFyIG49ZS5kZWNvZGVyLmVuZCgpO24mJm4ubGVuZ3RoJiYoZS5idWZmZXIucHVzaChuKSxlLmxlbmd0aCs9ZS5vYmplY3RNb2RlPzE6bi5sZW5ndGgpfWUuZW5kZWQ9ITAsXyh0KX0odCxvKSk6KHJ8fChhPWZ1bmN0aW9uKHQsZSl7dmFyIG47aT1lLHUuaXNCdWZmZXIoaSl8fGkgaW5zdGFuY2VvZiBsfHxcInN0cmluZ1wiPT10eXBlb2YgZXx8dm9pZCAwPT09ZXx8dC5vYmplY3RNb2RlfHwobj1uZXcgVHlwZUVycm9yKFwiSW52YWxpZCBub24tc3RyaW5nL2J1ZmZlciBjaHVua1wiKSk7dmFyIGk7cmV0dXJuIG59KG8sZSkpLGE/dC5lbWl0KFwiZXJyb3JcIixhKTpvLm9iamVjdE1vZGV8fGUmJmUubGVuZ3RoPjA/KFwic3RyaW5nXCI9PXR5cGVvZiBlfHxvLm9iamVjdE1vZGV8fE9iamVjdC5nZXRQcm90b3R5cGVPZihlKT09PXUucHJvdG90eXBlfHwoZT1mdW5jdGlvbih0KXtyZXR1cm4gdS5mcm9tKHQpfShlKSksaT9vLmVuZEVtaXR0ZWQ/dC5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJzdHJlYW0udW5zaGlmdCgpIGFmdGVyIGVuZCBldmVudFwiKSk6eCh0LG8sZSwhMCk6by5lbmRlZD90LmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcInN0cmVhbS5wdXNoKCkgYWZ0ZXIgRU9GXCIpKTooby5yZWFkaW5nPSExLG8uZGVjb2RlciYmIW4/KGU9by5kZWNvZGVyLndyaXRlKGUpLG8ub2JqZWN0TW9kZXx8MCE9PWUubGVuZ3RoP3godCxvLGUsITEpOmsodCxvKSk6eCh0LG8sZSwhMSkpKTppfHwoby5yZWFkaW5nPSExKSk7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiF0LmVuZGVkJiYodC5uZWVkUmVhZGFibGV8fHQubGVuZ3RoPHQuaGlnaFdhdGVyTWFya3x8MD09PXQubGVuZ3RoKX0obyl9ZnVuY3Rpb24geCh0LGUsbixpKXtlLmZsb3dpbmcmJjA9PT1lLmxlbmd0aCYmIWUuc3luYz8odC5lbWl0KFwiZGF0YVwiLG4pLHQucmVhZCgwKSk6KGUubGVuZ3RoKz1lLm9iamVjdE1vZGU/MTpuLmxlbmd0aCxpP2UuYnVmZmVyLnVuc2hpZnQobik6ZS5idWZmZXIucHVzaChuKSxlLm5lZWRSZWFkYWJsZSYmXyh0KSksayh0LGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh2LnByb3RvdHlwZSxcImRlc3Ryb3llZFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5fcmVhZGFibGVTdGF0ZSYmdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWR9LHNldDpmdW5jdGlvbih0KXt0aGlzLl9yZWFkYWJsZVN0YXRlJiYodGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ9dCl9fSksdi5wcm90b3R5cGUuZGVzdHJveT1nLmRlc3Ryb3ksdi5wcm90b3R5cGUuX3VuZGVzdHJveT1nLnVuZGVzdHJveSx2LnByb3RvdHlwZS5fZGVzdHJveT1mdW5jdGlvbih0LGUpe3RoaXMucHVzaChudWxsKSxlKHQpfSx2LnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKHQsZSl7dmFyIG4saT10aGlzLl9yZWFkYWJsZVN0YXRlO3JldHVybiBpLm9iamVjdE1vZGU/bj0hMDpcInN0cmluZ1wiPT10eXBlb2YgdCYmKChlPWV8fGkuZGVmYXVsdEVuY29kaW5nKSE9PWkuZW5jb2RpbmcmJih0PXUuZnJvbSh0LGUpLGU9XCJcIiksbj0hMCksdyh0aGlzLHQsZSwhMSxuKX0sdi5wcm90b3R5cGUudW5zaGlmdD1mdW5jdGlvbih0KXtyZXR1cm4gdyh0aGlzLHQsbnVsbCwhMCwhMSl9LHYucHJvdG90eXBlLmlzUGF1c2VkPWZ1bmN0aW9uKCl7cmV0dXJuITE9PT10aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmd9LHYucHJvdG90eXBlLnNldEVuY29kaW5nPWZ1bmN0aW9uKHQpe3JldHVybiBofHwoaD1uKDI4KS5TdHJpbmdEZWNvZGVyKSx0aGlzLl9yZWFkYWJsZVN0YXRlLmRlY29kZXI9bmV3IGgodCksdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmNvZGluZz10LHRoaXN9O2Z1bmN0aW9uIEQodCxlKXtyZXR1cm4gdDw9MHx8MD09PWUubGVuZ3RoJiZlLmVuZGVkPzA6ZS5vYmplY3RNb2RlPzE6dCE9dD9lLmZsb3dpbmcmJmUubGVuZ3RoP2UuYnVmZmVyLmhlYWQuZGF0YS5sZW5ndGg6ZS5sZW5ndGg6KHQ+ZS5oaWdoV2F0ZXJNYXJrJiYoZS5oaWdoV2F0ZXJNYXJrPWZ1bmN0aW9uKHQpe3JldHVybiB0Pj04Mzg4NjA4P3Q9ODM4ODYwODoodC0tLHR8PXQ+Pj4xLHR8PXQ+Pj4yLHR8PXQ+Pj40LHR8PXQ+Pj44LHR8PXQ+Pj4xNix0KyspLHR9KHQpKSx0PD1lLmxlbmd0aD90OmUuZW5kZWQ/ZS5sZW5ndGg6KGUubmVlZFJlYWRhYmxlPSEwLDApKX1mdW5jdGlvbiBfKHQpe3ZhciBlPXQuX3JlYWRhYmxlU3RhdGU7ZS5uZWVkUmVhZGFibGU9ITEsZS5lbWl0dGVkUmVhZGFibGV8fChkKFwiZW1pdFJlYWRhYmxlXCIsZS5mbG93aW5nKSxlLmVtaXR0ZWRSZWFkYWJsZT0hMCxlLnN5bmM/ci5uZXh0VGljayhFLHQpOkUodCkpfWZ1bmN0aW9uIEUodCl7ZChcImVtaXQgcmVhZGFibGVcIiksdC5lbWl0KFwicmVhZGFibGVcIiksQSh0KX1mdW5jdGlvbiBrKHQsZSl7ZS5yZWFkaW5nTW9yZXx8KGUucmVhZGluZ01vcmU9ITAsci5uZXh0VGljayhULHQsZSkpfWZ1bmN0aW9uIFQodCxlKXtmb3IodmFyIG49ZS5sZW5ndGg7IWUucmVhZGluZyYmIWUuZmxvd2luZyYmIWUuZW5kZWQmJmUubGVuZ3RoPGUuaGlnaFdhdGVyTWFyayYmKGQoXCJtYXliZVJlYWRNb3JlIHJlYWQgMFwiKSx0LnJlYWQoMCksbiE9PWUubGVuZ3RoKTspbj1lLmxlbmd0aDtlLnJlYWRpbmdNb3JlPSExfWZ1bmN0aW9uIEModCl7ZChcInJlYWRhYmxlIG5leHR0aWNrIHJlYWQgMFwiKSx0LnJlYWQoMCl9ZnVuY3Rpb24gUyh0LGUpe2UucmVhZGluZ3x8KGQoXCJyZXN1bWUgcmVhZCAwXCIpLHQucmVhZCgwKSksZS5yZXN1bWVTY2hlZHVsZWQ9ITEsZS5hd2FpdERyYWluPTAsdC5lbWl0KFwicmVzdW1lXCIpLEEodCksZS5mbG93aW5nJiYhZS5yZWFkaW5nJiZ0LnJlYWQoMCl9ZnVuY3Rpb24gQSh0KXt2YXIgZT10Ll9yZWFkYWJsZVN0YXRlO2ZvcihkKFwiZmxvd1wiLGUuZmxvd2luZyk7ZS5mbG93aW5nJiZudWxsIT09dC5yZWFkKCk7KTt9ZnVuY3Rpb24gRih0LGUpe3JldHVybiAwPT09ZS5sZW5ndGg/bnVsbDooZS5vYmplY3RNb2RlP249ZS5idWZmZXIuc2hpZnQoKTohdHx8dD49ZS5sZW5ndGg/KG49ZS5kZWNvZGVyP2UuYnVmZmVyLmpvaW4oXCJcIik6MT09PWUuYnVmZmVyLmxlbmd0aD9lLmJ1ZmZlci5oZWFkLmRhdGE6ZS5idWZmZXIuY29uY2F0KGUubGVuZ3RoKSxlLmJ1ZmZlci5jbGVhcigpKTpuPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaTt0PGUuaGVhZC5kYXRhLmxlbmd0aD8oaT1lLmhlYWQuZGF0YS5zbGljZSgwLHQpLGUuaGVhZC5kYXRhPWUuaGVhZC5kYXRhLnNsaWNlKHQpKTppPXQ9PT1lLmhlYWQuZGF0YS5sZW5ndGg/ZS5zaGlmdCgpOm4/ZnVuY3Rpb24odCxlKXt2YXIgbj1lLmhlYWQsaT0xLHI9bi5kYXRhO3QtPXIubGVuZ3RoO2Zvcig7bj1uLm5leHQ7KXt2YXIgYT1uLmRhdGEsbz10PmEubGVuZ3RoP2EubGVuZ3RoOnQ7aWYobz09PWEubGVuZ3RoP3IrPWE6cis9YS5zbGljZSgwLHQpLDA9PT0odC09bykpe289PT1hLmxlbmd0aD8oKytpLG4ubmV4dD9lLmhlYWQ9bi5uZXh0OmUuaGVhZD1lLnRhaWw9bnVsbCk6KGUuaGVhZD1uLG4uZGF0YT1hLnNsaWNlKG8pKTticmVha30rK2l9cmV0dXJuIGUubGVuZ3RoLT1pLHJ9KHQsZSk6ZnVuY3Rpb24odCxlKXt2YXIgbj11LmFsbG9jVW5zYWZlKHQpLGk9ZS5oZWFkLHI9MTtpLmRhdGEuY29weShuKSx0LT1pLmRhdGEubGVuZ3RoO2Zvcig7aT1pLm5leHQ7KXt2YXIgYT1pLmRhdGEsbz10PmEubGVuZ3RoP2EubGVuZ3RoOnQ7aWYoYS5jb3B5KG4sbi5sZW5ndGgtdCwwLG8pLDA9PT0odC09bykpe289PT1hLmxlbmd0aD8oKytyLGkubmV4dD9lLmhlYWQ9aS5uZXh0OmUuaGVhZD1lLnRhaWw9bnVsbCk6KGUuaGVhZD1pLGkuZGF0YT1hLnNsaWNlKG8pKTticmVha30rK3J9cmV0dXJuIGUubGVuZ3RoLT1yLG59KHQsZSk7cmV0dXJuIGl9KHQsZS5idWZmZXIsZS5kZWNvZGVyKSxuKTt2YXIgbn1mdW5jdGlvbiBqKHQpe3ZhciBlPXQuX3JlYWRhYmxlU3RhdGU7aWYoZS5sZW5ndGg+MCl0aHJvdyBuZXcgRXJyb3IoJ1wiZW5kUmVhZGFibGUoKVwiIGNhbGxlZCBvbiBub24tZW1wdHkgc3RyZWFtJyk7ZS5lbmRFbWl0dGVkfHwoZS5lbmRlZD0hMCxyLm5leHRUaWNrKE8sZSx0KSl9ZnVuY3Rpb24gTyh0LGUpe3QuZW5kRW1pdHRlZHx8MCE9PXQubGVuZ3RofHwodC5lbmRFbWl0dGVkPSEwLGUucmVhZGFibGU9ITEsZS5lbWl0KFwiZW5kXCIpKX1mdW5jdGlvbiBCKHQsZSl7Zm9yKHZhciBuPTAsaT10Lmxlbmd0aDtuPGk7bisrKWlmKHRbbl09PT1lKXJldHVybiBuO3JldHVybi0xfXYucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24odCl7ZChcInJlYWRcIix0KSx0PXBhcnNlSW50KHQsMTApO3ZhciBlPXRoaXMuX3JlYWRhYmxlU3RhdGUsbj10O2lmKDAhPT10JiYoZS5lbWl0dGVkUmVhZGFibGU9ITEpLDA9PT10JiZlLm5lZWRSZWFkYWJsZSYmKGUubGVuZ3RoPj1lLmhpZ2hXYXRlck1hcmt8fGUuZW5kZWQpKXJldHVybiBkKFwicmVhZDogZW1pdFJlYWRhYmxlXCIsZS5sZW5ndGgsZS5lbmRlZCksMD09PWUubGVuZ3RoJiZlLmVuZGVkP2oodGhpcyk6Xyh0aGlzKSxudWxsO2lmKDA9PT0odD1EKHQsZSkpJiZlLmVuZGVkKXJldHVybiAwPT09ZS5sZW5ndGgmJmoodGhpcyksbnVsbDt2YXIgaSxyPWUubmVlZFJlYWRhYmxlO3JldHVybiBkKFwibmVlZCByZWFkYWJsZVwiLHIpLCgwPT09ZS5sZW5ndGh8fGUubGVuZ3RoLXQ8ZS5oaWdoV2F0ZXJNYXJrKSYmZChcImxlbmd0aCBsZXNzIHRoYW4gd2F0ZXJtYXJrXCIscj0hMCksZS5lbmRlZHx8ZS5yZWFkaW5nP2QoXCJyZWFkaW5nIG9yIGVuZGVkXCIscj0hMSk6ciYmKGQoXCJkbyByZWFkXCIpLGUucmVhZGluZz0hMCxlLnN5bmM9ITAsMD09PWUubGVuZ3RoJiYoZS5uZWVkUmVhZGFibGU9ITApLHRoaXMuX3JlYWQoZS5oaWdoV2F0ZXJNYXJrKSxlLnN5bmM9ITEsZS5yZWFkaW5nfHwodD1EKG4sZSkpKSxudWxsPT09KGk9dD4wP0YodCxlKTpudWxsKT8oZS5uZWVkUmVhZGFibGU9ITAsdD0wKTplLmxlbmd0aC09dCwwPT09ZS5sZW5ndGgmJihlLmVuZGVkfHwoZS5uZWVkUmVhZGFibGU9ITApLG4hPT10JiZlLmVuZGVkJiZqKHRoaXMpKSxudWxsIT09aSYmdGhpcy5lbWl0KFwiZGF0YVwiLGkpLGl9LHYucHJvdG90eXBlLl9yZWFkPWZ1bmN0aW9uKHQpe3RoaXMuZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiX3JlYWQoKSBpcyBub3QgaW1wbGVtZW50ZWRcIikpfSx2LnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxhPXRoaXMuX3JlYWRhYmxlU3RhdGU7c3dpdGNoKGEucGlwZXNDb3VudCl7Y2FzZSAwOmEucGlwZXM9dDticmVhaztjYXNlIDE6YS5waXBlcz1bYS5waXBlcyx0XTticmVhaztkZWZhdWx0OmEucGlwZXMucHVzaCh0KX1hLnBpcGVzQ291bnQrPTEsZChcInBpcGUgY291bnQ9JWQgb3B0cz0lalwiLGEucGlwZXNDb3VudCxlKTt2YXIgYz0oIWV8fCExIT09ZS5lbmQpJiZ0IT09aS5zdGRvdXQmJnQhPT1pLnN0ZGVycj9sOnY7ZnVuY3Rpb24gdShlLGkpe2QoXCJvbnVucGlwZVwiKSxlPT09biYmaSYmITE9PT1pLmhhc1VucGlwZWQmJihpLmhhc1VucGlwZWQ9ITAsZChcImNsZWFudXBcIiksdC5yZW1vdmVMaXN0ZW5lcihcImNsb3NlXCIseSksdC5yZW1vdmVMaXN0ZW5lcihcImZpbmlzaFwiLGIpLHQucmVtb3ZlTGlzdGVuZXIoXCJkcmFpblwiLHApLHQucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLGcpLHQucmVtb3ZlTGlzdGVuZXIoXCJ1bnBpcGVcIix1KSxuLnJlbW92ZUxpc3RlbmVyKFwiZW5kXCIsbCksbi5yZW1vdmVMaXN0ZW5lcihcImVuZFwiLHYpLG4ucmVtb3ZlTGlzdGVuZXIoXCJkYXRhXCIsbSksZj0hMCwhYS5hd2FpdERyYWlufHx0Ll93cml0YWJsZVN0YXRlJiYhdC5fd3JpdGFibGVTdGF0ZS5uZWVkRHJhaW58fHAoKSl9ZnVuY3Rpb24gbCgpe2QoXCJvbmVuZFwiKSx0LmVuZCgpfWEuZW5kRW1pdHRlZD9yLm5leHRUaWNrKGMpOm4ub25jZShcImVuZFwiLGMpLHQub24oXCJ1bnBpcGVcIix1KTt2YXIgcD1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT10Ll9yZWFkYWJsZVN0YXRlO2QoXCJwaXBlT25EcmFpblwiLGUuYXdhaXREcmFpbiksZS5hd2FpdERyYWluJiZlLmF3YWl0RHJhaW4tLSwwPT09ZS5hd2FpdERyYWluJiZzKHQsXCJkYXRhXCIpJiYoZS5mbG93aW5nPSEwLEEodCkpfX0obik7dC5vbihcImRyYWluXCIscCk7dmFyIGY9ITE7dmFyIGg9ITE7ZnVuY3Rpb24gbShlKXtkKFwib25kYXRhXCIpLGg9ITEsITEhPT10LndyaXRlKGUpfHxofHwoKDE9PT1hLnBpcGVzQ291bnQmJmEucGlwZXM9PT10fHxhLnBpcGVzQ291bnQ+MSYmLTEhPT1CKGEucGlwZXMsdCkpJiYhZiYmKGQoXCJmYWxzZSB3cml0ZSByZXNwb25zZSwgcGF1c2VcIixuLl9yZWFkYWJsZVN0YXRlLmF3YWl0RHJhaW4pLG4uX3JlYWRhYmxlU3RhdGUuYXdhaXREcmFpbisrLGg9ITApLG4ucGF1c2UoKSl9ZnVuY3Rpb24gZyhlKXtkKFwib25lcnJvclwiLGUpLHYoKSx0LnJlbW92ZUxpc3RlbmVyKFwiZXJyb3JcIixnKSwwPT09cyh0LFwiZXJyb3JcIikmJnQuZW1pdChcImVycm9yXCIsZSl9ZnVuY3Rpb24geSgpe3QucmVtb3ZlTGlzdGVuZXIoXCJmaW5pc2hcIixiKSx2KCl9ZnVuY3Rpb24gYigpe2QoXCJvbmZpbmlzaFwiKSx0LnJlbW92ZUxpc3RlbmVyKFwiY2xvc2VcIix5KSx2KCl9ZnVuY3Rpb24gdigpe2QoXCJ1bnBpcGVcIiksbi51bnBpcGUodCl9cmV0dXJuIG4ub24oXCJkYXRhXCIsbSksZnVuY3Rpb24odCxlLG4pe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQucHJlcGVuZExpc3RlbmVyKXJldHVybiB0LnByZXBlbmRMaXN0ZW5lcihlLG4pO3QuX2V2ZW50cyYmdC5fZXZlbnRzW2VdP28odC5fZXZlbnRzW2VdKT90Ll9ldmVudHNbZV0udW5zaGlmdChuKTp0Ll9ldmVudHNbZV09W24sdC5fZXZlbnRzW2VdXTp0Lm9uKGUsbil9KHQsXCJlcnJvclwiLGcpLHQub25jZShcImNsb3NlXCIseSksdC5vbmNlKFwiZmluaXNoXCIsYiksdC5lbWl0KFwicGlwZVwiLG4pLGEuZmxvd2luZ3x8KGQoXCJwaXBlIHJlc3VtZVwiKSxuLnJlc3VtZSgpKSx0fSx2LnByb3RvdHlwZS51bnBpcGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fcmVhZGFibGVTdGF0ZSxuPXtoYXNVbnBpcGVkOiExfTtpZigwPT09ZS5waXBlc0NvdW50KXJldHVybiB0aGlzO2lmKDE9PT1lLnBpcGVzQ291bnQpcmV0dXJuIHQmJnQhPT1lLnBpcGVzP3RoaXM6KHR8fCh0PWUucGlwZXMpLGUucGlwZXM9bnVsbCxlLnBpcGVzQ291bnQ9MCxlLmZsb3dpbmc9ITEsdCYmdC5lbWl0KFwidW5waXBlXCIsdGhpcyxuKSx0aGlzKTtpZighdCl7dmFyIGk9ZS5waXBlcyxyPWUucGlwZXNDb3VudDtlLnBpcGVzPW51bGwsZS5waXBlc0NvdW50PTAsZS5mbG93aW5nPSExO2Zvcih2YXIgYT0wO2E8cjthKyspaVthXS5lbWl0KFwidW5waXBlXCIsdGhpcyxuKTtyZXR1cm4gdGhpc312YXIgbz1CKGUucGlwZXMsdCk7cmV0dXJuLTE9PT1vP3RoaXM6KGUucGlwZXMuc3BsaWNlKG8sMSksZS5waXBlc0NvdW50LT0xLDE9PT1lLnBpcGVzQ291bnQmJihlLnBpcGVzPWUucGlwZXNbMF0pLHQuZW1pdChcInVucGlwZVwiLHRoaXMsbiksdGhpcyl9LHYucHJvdG90eXBlLm9uPWZ1bmN0aW9uKHQsZSl7dmFyIG49Yy5wcm90b3R5cGUub24uY2FsbCh0aGlzLHQsZSk7aWYoXCJkYXRhXCI9PT10KSExIT09dGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nJiZ0aGlzLnJlc3VtZSgpO2Vsc2UgaWYoXCJyZWFkYWJsZVwiPT09dCl7dmFyIGk9dGhpcy5fcmVhZGFibGVTdGF0ZTtpLmVuZEVtaXR0ZWR8fGkucmVhZGFibGVMaXN0ZW5pbmd8fChpLnJlYWRhYmxlTGlzdGVuaW5nPWkubmVlZFJlYWRhYmxlPSEwLGkuZW1pdHRlZFJlYWRhYmxlPSExLGkucmVhZGluZz9pLmxlbmd0aCYmXyh0aGlzKTpyLm5leHRUaWNrKEMsdGhpcykpfXJldHVybiBufSx2LnByb3RvdHlwZS5hZGRMaXN0ZW5lcj12LnByb3RvdHlwZS5vbix2LnByb3RvdHlwZS5yZXN1bWU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9yZWFkYWJsZVN0YXRlO3JldHVybiB0LmZsb3dpbmd8fChkKFwicmVzdW1lXCIpLHQuZmxvd2luZz0hMCxmdW5jdGlvbih0LGUpe2UucmVzdW1lU2NoZWR1bGVkfHwoZS5yZXN1bWVTY2hlZHVsZWQ9ITAsci5uZXh0VGljayhTLHQsZSkpfSh0aGlzLHQpKSx0aGlzfSx2LnByb3RvdHlwZS5wYXVzZT1mdW5jdGlvbigpe3JldHVybiBkKFwiY2FsbCBwYXVzZSBmbG93aW5nPSVqXCIsdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nKSwhMSE9PXRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyYmKGQoXCJwYXVzZVwiKSx0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmc9ITEsdGhpcy5lbWl0KFwicGF1c2VcIikpLHRoaXN9LHYucHJvdG90eXBlLndyYXA9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXRoaXMuX3JlYWRhYmxlU3RhdGUsaT0hMTtmb3IodmFyIHIgaW4gdC5vbihcImVuZFwiLChmdW5jdGlvbigpe2lmKGQoXCJ3cmFwcGVkIGVuZFwiKSxuLmRlY29kZXImJiFuLmVuZGVkKXt2YXIgdD1uLmRlY29kZXIuZW5kKCk7dCYmdC5sZW5ndGgmJmUucHVzaCh0KX1lLnB1c2gobnVsbCl9KSksdC5vbihcImRhdGFcIiwoZnVuY3Rpb24ocil7KGQoXCJ3cmFwcGVkIGRhdGFcIiksbi5kZWNvZGVyJiYocj1uLmRlY29kZXIud3JpdGUocikpLG4ub2JqZWN0TW9kZSYmbnVsbD09cil8fChuLm9iamVjdE1vZGV8fHImJnIubGVuZ3RoKSYmKGUucHVzaChyKXx8KGk9ITAsdC5wYXVzZSgpKSl9KSksdCl2b2lkIDA9PT10aGlzW3JdJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0W3JdJiYodGhpc1tyXT1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdFtlXS5hcHBseSh0LGFyZ3VtZW50cyl9fShyKSk7Zm9yKHZhciBhPTA7YTx5Lmxlbmd0aDthKyspdC5vbih5W2FdLHRoaXMuZW1pdC5iaW5kKHRoaXMseVthXSkpO3JldHVybiB0aGlzLl9yZWFkPWZ1bmN0aW9uKGUpe2QoXCJ3cmFwcGVkIF9yZWFkXCIsZSksaSYmKGk9ITEsdC5yZXN1bWUoKSl9LHRoaXN9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh2LnByb3RvdHlwZSxcInJlYWRhYmxlSGlnaFdhdGVyTWFya1wiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWFkYWJsZVN0YXRlLmhpZ2hXYXRlck1hcmt9fSksdi5fZnJvbUxpc3Q9Rn0pLmNhbGwodGhpcyxuKDQpLG4oMykpfSxmdW5jdGlvbih0LGUsbil7dC5leHBvcnRzPW4oNDApLkV2ZW50RW1pdHRlcn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPW4oMjcpO2Z1bmN0aW9uIHIodCxlKXt0LmVtaXQoXCJlcnJvclwiLGUpfXQuZXhwb3J0cz17ZGVzdHJveTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsYT10aGlzLl9yZWFkYWJsZVN0YXRlJiZ0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCxvPXRoaXMuX3dyaXRhYmxlU3RhdGUmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO3JldHVybiBhfHxvPyhlP2UodCk6IXR8fHRoaXMuX3dyaXRhYmxlU3RhdGUmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkfHxpLm5leHRUaWNrKHIsdGhpcyx0KSx0aGlzKToodGhpcy5fcmVhZGFibGVTdGF0ZSYmKHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkPSEwKSx0aGlzLl93cml0YWJsZVN0YXRlJiYodGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQ9ITApLHRoaXMuX2Rlc3Ryb3kodHx8bnVsbCwoZnVuY3Rpb24odCl7IWUmJnQ/KGkubmV4dFRpY2socixuLHQpLG4uX3dyaXRhYmxlU3RhdGUmJihuLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMCkpOmUmJmUodCl9KSksdGhpcyl9LHVuZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuX3JlYWRhYmxlU3RhdGUmJih0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD0hMSx0aGlzLl9yZWFkYWJsZVN0YXRlLnJlYWRpbmc9ITEsdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmRlZD0hMSx0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZEVtaXR0ZWQ9ITEpLHRoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD0hMSx0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kaW5nPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZmluaXNoZWQ9ITEsdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ9ITEpfX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt0LmV4cG9ydHM9bzt2YXIgaT1uKDgpLHI9bigxMSk7ZnVuY3Rpb24gYSh0LGUpe3ZhciBuPXRoaXMuX3RyYW5zZm9ybVN0YXRlO24udHJhbnNmb3JtaW5nPSExO3ZhciBpPW4ud3JpdGVjYjtpZighaSlyZXR1cm4gdGhpcy5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJ3cml0ZSBjYWxsYmFjayBjYWxsZWQgbXVsdGlwbGUgdGltZXNcIikpO24ud3JpdGVjaHVuaz1udWxsLG4ud3JpdGVjYj1udWxsLG51bGwhPWUmJnRoaXMucHVzaChlKSxpKHQpO3ZhciByPXRoaXMuX3JlYWRhYmxlU3RhdGU7ci5yZWFkaW5nPSExLChyLm5lZWRSZWFkYWJsZXx8ci5sZW5ndGg8ci5oaWdoV2F0ZXJNYXJrKSYmdGhpcy5fcmVhZChyLmhpZ2hXYXRlck1hcmspfWZ1bmN0aW9uIG8odCl7aWYoISh0aGlzIGluc3RhbmNlb2YgbykpcmV0dXJuIG5ldyBvKHQpO2kuY2FsbCh0aGlzLHQpLHRoaXMuX3RyYW5zZm9ybVN0YXRlPXthZnRlclRyYW5zZm9ybTphLmJpbmQodGhpcyksbmVlZFRyYW5zZm9ybTohMSx0cmFuc2Zvcm1pbmc6ITEsd3JpdGVjYjpudWxsLHdyaXRlY2h1bms6bnVsbCx3cml0ZWVuY29kaW5nOm51bGx9LHRoaXMuX3JlYWRhYmxlU3RhdGUubmVlZFJlYWRhYmxlPSEwLHRoaXMuX3JlYWRhYmxlU3RhdGUuc3luYz0hMSx0JiYoXCJmdW5jdGlvblwiPT10eXBlb2YgdC50cmFuc2Zvcm0mJih0aGlzLl90cmFuc2Zvcm09dC50cmFuc2Zvcm0pLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZmx1c2gmJih0aGlzLl9mbHVzaD10LmZsdXNoKSksdGhpcy5vbihcInByZWZpbmlzaFwiLHMpfWZ1bmN0aW9uIHMoKXt2YXIgdD10aGlzO1wiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMuX2ZsdXNoP3RoaXMuX2ZsdXNoKChmdW5jdGlvbihlLG4pe2ModCxlLG4pfSkpOmModGhpcyxudWxsLG51bGwpfWZ1bmN0aW9uIGModCxlLG4pe2lmKGUpcmV0dXJuIHQuZW1pdChcImVycm9yXCIsZSk7aWYobnVsbCE9biYmdC5wdXNoKG4pLHQuX3dyaXRhYmxlU3RhdGUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkNhbGxpbmcgdHJhbnNmb3JtIGRvbmUgd2hlbiB3cy5sZW5ndGggIT0gMFwiKTtpZih0Ll90cmFuc2Zvcm1TdGF0ZS50cmFuc2Zvcm1pbmcpdGhyb3cgbmV3IEVycm9yKFwiQ2FsbGluZyB0cmFuc2Zvcm0gZG9uZSB3aGVuIHN0aWxsIHRyYW5zZm9ybWluZ1wiKTtyZXR1cm4gdC5wdXNoKG51bGwpfXIuaW5oZXJpdHM9bigwKSxyLmluaGVyaXRzKG8saSksby5wcm90b3R5cGUucHVzaD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl90cmFuc2Zvcm1TdGF0ZS5uZWVkVHJhbnNmb3JtPSExLGkucHJvdG90eXBlLnB1c2guY2FsbCh0aGlzLHQsZSl9LG8ucHJvdG90eXBlLl90cmFuc2Zvcm09ZnVuY3Rpb24odCxlLG4pe3Rocm93IG5ldyBFcnJvcihcIl90cmFuc2Zvcm0oKSBpcyBub3QgaW1wbGVtZW50ZWRcIil9LG8ucHJvdG90eXBlLl93cml0ZT1mdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcy5fdHJhbnNmb3JtU3RhdGU7aWYoaS53cml0ZWNiPW4saS53cml0ZWNodW5rPXQsaS53cml0ZWVuY29kaW5nPWUsIWkudHJhbnNmb3JtaW5nKXt2YXIgcj10aGlzLl9yZWFkYWJsZVN0YXRlOyhpLm5lZWRUcmFuc2Zvcm18fHIubmVlZFJlYWRhYmxlfHxyLmxlbmd0aDxyLmhpZ2hXYXRlck1hcmspJiZ0aGlzLl9yZWFkKHIuaGlnaFdhdGVyTWFyayl9fSxvLnByb3RvdHlwZS5fcmVhZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl90cmFuc2Zvcm1TdGF0ZTtudWxsIT09ZS53cml0ZWNodW5rJiZlLndyaXRlY2ImJiFlLnRyYW5zZm9ybWluZz8oZS50cmFuc2Zvcm1pbmc9ITAsdGhpcy5fdHJhbnNmb3JtKGUud3JpdGVjaHVuayxlLndyaXRlZW5jb2RpbmcsZS5hZnRlclRyYW5zZm9ybSkpOmUubmVlZFRyYW5zZm9ybT0hMH0sby5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO2kucHJvdG90eXBlLl9kZXN0cm95LmNhbGwodGhpcyx0LChmdW5jdGlvbih0KXtlKHQpLG4uZW1pdChcImNsb3NlXCIpfSkpfX0sZnVuY3Rpb24odCxlKXt2YXIgbj0xZTMsaT02ZTQscj0zNmU1LGE9MjQqcjtmdW5jdGlvbiBvKHQsZSxuLGkpe3ZhciByPWU+PTEuNSpuO3JldHVybiBNYXRoLnJvdW5kKHQvbikrXCIgXCIraSsocj9cInNcIjpcIlwiKX10LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtlPWV8fHt9O3ZhciBzPXR5cGVvZiB0O2lmKFwic3RyaW5nXCI9PT1zJiZ0Lmxlbmd0aD4wKXJldHVybiBmdW5jdGlvbih0KXtpZigodD1TdHJpbmcodCkpLmxlbmd0aD4xMDApcmV0dXJuO3ZhciBlPS9eKC0/KD86XFxkKyk/XFwuP1xcZCspICoobWlsbGlzZWNvbmRzP3xtc2Vjcz98bXN8c2Vjb25kcz98c2Vjcz98c3xtaW51dGVzP3xtaW5zP3xtfGhvdXJzP3xocnM/fGh8ZGF5cz98ZHx3ZWVrcz98d3x5ZWFycz98eXJzP3x5KT8kL2kuZXhlYyh0KTtpZighZSlyZXR1cm47dmFyIG89cGFyc2VGbG9hdChlWzFdKTtzd2l0Y2goKGVbMl18fFwibXNcIikudG9Mb3dlckNhc2UoKSl7Y2FzZVwieWVhcnNcIjpjYXNlXCJ5ZWFyXCI6Y2FzZVwieXJzXCI6Y2FzZVwieXJcIjpjYXNlXCJ5XCI6cmV0dXJuIDMxNTU3NmU1Km87Y2FzZVwid2Vla3NcIjpjYXNlXCJ3ZWVrXCI6Y2FzZVwid1wiOnJldHVybiA2MDQ4ZTUqbztjYXNlXCJkYXlzXCI6Y2FzZVwiZGF5XCI6Y2FzZVwiZFwiOnJldHVybiBvKmE7Y2FzZVwiaG91cnNcIjpjYXNlXCJob3VyXCI6Y2FzZVwiaHJzXCI6Y2FzZVwiaHJcIjpjYXNlXCJoXCI6cmV0dXJuIG8qcjtjYXNlXCJtaW51dGVzXCI6Y2FzZVwibWludXRlXCI6Y2FzZVwibWluc1wiOmNhc2VcIm1pblwiOmNhc2VcIm1cIjpyZXR1cm4gbyppO2Nhc2VcInNlY29uZHNcIjpjYXNlXCJzZWNvbmRcIjpjYXNlXCJzZWNzXCI6Y2FzZVwic2VjXCI6Y2FzZVwic1wiOnJldHVybiBvKm47Y2FzZVwibWlsbGlzZWNvbmRzXCI6Y2FzZVwibWlsbGlzZWNvbmRcIjpjYXNlXCJtc2Vjc1wiOmNhc2VcIm1zZWNcIjpjYXNlXCJtc1wiOnJldHVybiBvO2RlZmF1bHQ6cmV0dXJufX0odCk7aWYoXCJudW1iZXJcIj09PXMmJmlzRmluaXRlKHQpKXJldHVybiBlLmxvbmc/ZnVuY3Rpb24odCl7dmFyIGU9TWF0aC5hYnModCk7aWYoZT49YSlyZXR1cm4gbyh0LGUsYSxcImRheVwiKTtpZihlPj1yKXJldHVybiBvKHQsZSxyLFwiaG91clwiKTtpZihlPj1pKXJldHVybiBvKHQsZSxpLFwibWludXRlXCIpO2lmKGU+PW4pcmV0dXJuIG8odCxlLG4sXCJzZWNvbmRcIik7cmV0dXJuIHQrXCIgbXNcIn0odCk6ZnVuY3Rpb24odCl7dmFyIGU9TWF0aC5hYnModCk7aWYoZT49YSlyZXR1cm4gTWF0aC5yb3VuZCh0L2EpK1wiZFwiO2lmKGU+PXIpcmV0dXJuIE1hdGgucm91bmQodC9yKStcImhcIjtpZihlPj1pKXJldHVybiBNYXRoLnJvdW5kKHQvaSkrXCJtXCI7aWYoZT49bilyZXR1cm4gTWF0aC5yb3VuZCh0L24pK1wic1wiO3JldHVybiB0K1wibXNcIn0odCk7dGhyb3cgbmV3IEVycm9yKFwidmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSB2YWxpZCBudW1iZXIuIHZhbD1cIitKU09OLnN0cmluZ2lmeSh0KSl9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7KGZ1bmN0aW9uKGUpe1xuLyohXG4gKiBUaGUgYnVmZmVyIG1vZHVsZSBmcm9tIG5vZGUuanMsIGZvciB0aGUgYnJvd3Nlci5cbiAqXG4gKiBAYXV0aG9yICAgRmVyb3NzIEFib3VraGFkaWplaCA8ZmVyb3NzQGZlcm9zcy5vcmc+IDxodHRwOi8vZmVyb3NzLm9yZz5cbiAqIEBsaWNlbnNlICBNSVRcbiAqL1xuZnVuY3Rpb24gaSh0LGUpe2lmKHQ9PT1lKXJldHVybiAwO2Zvcih2YXIgbj10Lmxlbmd0aCxpPWUubGVuZ3RoLHI9MCxhPU1hdGgubWluKG4saSk7cjxhOysrcilpZih0W3JdIT09ZVtyXSl7bj10W3JdLGk9ZVtyXTticmVha31yZXR1cm4gbjxpPy0xOmk8bj8xOjB9ZnVuY3Rpb24gcih0KXtyZXR1cm4gZS5CdWZmZXImJlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuQnVmZmVyLmlzQnVmZmVyP2UuQnVmZmVyLmlzQnVmZmVyKHQpOiEobnVsbD09dHx8IXQuX2lzQnVmZmVyKX12YXIgYT1uKDEzKSxvPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkscz1BcnJheS5wcm90b3R5cGUuc2xpY2UsYz1cImZvb1wiPT09ZnVuY3Rpb24oKXt9Lm5hbWU7ZnVuY3Rpb24gdSh0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfWZ1bmN0aW9uIGwodCl7cmV0dXJuIXIodCkmJihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLkFycmF5QnVmZmVyJiYoXCJmdW5jdGlvblwiPT10eXBlb2YgQXJyYXlCdWZmZXIuaXNWaWV3P0FycmF5QnVmZmVyLmlzVmlldyh0KTohIXQmJih0IGluc3RhbmNlb2YgRGF0YVZpZXd8fCEhKHQuYnVmZmVyJiZ0LmJ1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSkpKX12YXIgcD10LmV4cG9ydHM9eSxmPS9cXHMqZnVuY3Rpb25cXHMrKFteXFwoXFxzXSopXFxzKi87ZnVuY3Rpb24gZCh0KXtpZihhLmlzRnVuY3Rpb24odCkpe2lmKGMpcmV0dXJuIHQubmFtZTt2YXIgZT10LnRvU3RyaW5nKCkubWF0Y2goZik7cmV0dXJuIGUmJmVbMV19fWZ1bmN0aW9uIGgodCxlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdD90Lmxlbmd0aDxlP3Q6dC5zbGljZSgwLGUpOnR9ZnVuY3Rpb24gbSh0KXtpZihjfHwhYS5pc0Z1bmN0aW9uKHQpKXJldHVybiBhLmluc3BlY3QodCk7dmFyIGU9ZCh0KTtyZXR1cm5cIltGdW5jdGlvblwiKyhlP1wiOiBcIitlOlwiXCIpK1wiXVwifWZ1bmN0aW9uIGcodCxlLG4saSxyKXt0aHJvdyBuZXcgcC5Bc3NlcnRpb25FcnJvcih7bWVzc2FnZTpuLGFjdHVhbDp0LGV4cGVjdGVkOmUsb3BlcmF0b3I6aSxzdGFja1N0YXJ0RnVuY3Rpb246cn0pfWZ1bmN0aW9uIHkodCxlKXt0fHxnKHQsITAsZSxcIj09XCIscC5vayl9ZnVuY3Rpb24gYih0LGUsbixvKXtpZih0PT09ZSlyZXR1cm4hMDtpZihyKHQpJiZyKGUpKXJldHVybiAwPT09aSh0LGUpO2lmKGEuaXNEYXRlKHQpJiZhLmlzRGF0ZShlKSlyZXR1cm4gdC5nZXRUaW1lKCk9PT1lLmdldFRpbWUoKTtpZihhLmlzUmVnRXhwKHQpJiZhLmlzUmVnRXhwKGUpKXJldHVybiB0LnNvdXJjZT09PWUuc291cmNlJiZ0Lmdsb2JhbD09PWUuZ2xvYmFsJiZ0Lm11bHRpbGluZT09PWUubXVsdGlsaW5lJiZ0Lmxhc3RJbmRleD09PWUubGFzdEluZGV4JiZ0Lmlnbm9yZUNhc2U9PT1lLmlnbm9yZUNhc2U7aWYobnVsbCE9PXQmJlwib2JqZWN0XCI9PXR5cGVvZiB0fHxudWxsIT09ZSYmXCJvYmplY3RcIj09dHlwZW9mIGUpe2lmKGwodCkmJmwoZSkmJnUodCk9PT11KGUpJiYhKHQgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXl8fHQgaW5zdGFuY2VvZiBGbG9hdDY0QXJyYXkpKXJldHVybiAwPT09aShuZXcgVWludDhBcnJheSh0LmJ1ZmZlciksbmV3IFVpbnQ4QXJyYXkoZS5idWZmZXIpKTtpZihyKHQpIT09cihlKSlyZXR1cm4hMTt2YXIgYz0obz1vfHx7YWN0dWFsOltdLGV4cGVjdGVkOltdfSkuYWN0dWFsLmluZGV4T2YodCk7cmV0dXJuLTEhPT1jJiZjPT09by5leHBlY3RlZC5pbmRleE9mKGUpfHwoby5hY3R1YWwucHVzaCh0KSxvLmV4cGVjdGVkLnB1c2goZSksZnVuY3Rpb24odCxlLG4saSl7aWYobnVsbD09dHx8bnVsbD09ZSlyZXR1cm4hMTtpZihhLmlzUHJpbWl0aXZlKHQpfHxhLmlzUHJpbWl0aXZlKGUpKXJldHVybiB0PT09ZTtpZihuJiZPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkhPT1PYmplY3QuZ2V0UHJvdG90eXBlT2YoZSkpcmV0dXJuITE7dmFyIHI9dih0KSxvPXYoZSk7aWYociYmIW98fCFyJiZvKXJldHVybiExO2lmKHIpcmV0dXJuIHQ9cy5jYWxsKHQpLGU9cy5jYWxsKGUpLGIodCxlLG4pO3ZhciBjLHUsbD1EKHQpLHA9RChlKTtpZihsLmxlbmd0aCE9PXAubGVuZ3RoKXJldHVybiExO2ZvcihsLnNvcnQoKSxwLnNvcnQoKSx1PWwubGVuZ3RoLTE7dT49MDt1LS0paWYobFt1XSE9PXBbdV0pcmV0dXJuITE7Zm9yKHU9bC5sZW5ndGgtMTt1Pj0wO3UtLSlpZihjPWxbdV0sIWIodFtjXSxlW2NdLG4saSkpcmV0dXJuITE7cmV0dXJuITB9KHQsZSxuLG8pKX1yZXR1cm4gbj90PT09ZTp0PT1lfWZ1bmN0aW9uIHYodCl7cmV0dXJuXCJbb2JqZWN0IEFyZ3VtZW50c11cIj09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfWZ1bmN0aW9uIHcodCxlKXtpZighdHx8IWUpcmV0dXJuITE7aWYoXCJbb2JqZWN0IFJlZ0V4cF1cIj09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKXJldHVybiBlLnRlc3QodCk7dHJ5e2lmKHQgaW5zdGFuY2VvZiBlKXJldHVybiEwfWNhdGNoKHQpe31yZXR1cm4hRXJyb3IuaXNQcm90b3R5cGVPZihlKSYmITA9PT1lLmNhbGwoe30sdCl9ZnVuY3Rpb24geCh0LGUsbixpKXt2YXIgcjtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wiYmxvY2tcIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcInN0cmluZ1wiPT10eXBlb2YgbiYmKGk9bixuPW51bGwpLHI9ZnVuY3Rpb24odCl7dmFyIGU7dHJ5e3QoKX1jYXRjaCh0KXtlPXR9cmV0dXJuIGV9KGUpLGk9KG4mJm4ubmFtZT9cIiAoXCIrbi5uYW1lK1wiKS5cIjpcIi5cIikrKGk/XCIgXCIraTpcIi5cIiksdCYmIXImJmcocixuLFwiTWlzc2luZyBleHBlY3RlZCBleGNlcHRpb25cIitpKTt2YXIgbz1cInN0cmluZ1wiPT10eXBlb2YgaSxzPSF0JiZyJiYhbjtpZigoIXQmJmEuaXNFcnJvcihyKSYmbyYmdyhyLG4pfHxzKSYmZyhyLG4sXCJHb3QgdW53YW50ZWQgZXhjZXB0aW9uXCIraSksdCYmciYmbiYmIXcocixuKXx8IXQmJnIpdGhyb3cgcn1wLkFzc2VydGlvbkVycm9yPWZ1bmN0aW9uKHQpe3RoaXMubmFtZT1cIkFzc2VydGlvbkVycm9yXCIsdGhpcy5hY3R1YWw9dC5hY3R1YWwsdGhpcy5leHBlY3RlZD10LmV4cGVjdGVkLHRoaXMub3BlcmF0b3I9dC5vcGVyYXRvcix0Lm1lc3NhZ2U/KHRoaXMubWVzc2FnZT10Lm1lc3NhZ2UsdGhpcy5nZW5lcmF0ZWRNZXNzYWdlPSExKToodGhpcy5tZXNzYWdlPWZ1bmN0aW9uKHQpe3JldHVybiBoKG0odC5hY3R1YWwpLDEyOCkrXCIgXCIrdC5vcGVyYXRvcitcIiBcIitoKG0odC5leHBlY3RlZCksMTI4KX0odGhpcyksdGhpcy5nZW5lcmF0ZWRNZXNzYWdlPSEwKTt2YXIgZT10LnN0YWNrU3RhcnRGdW5jdGlvbnx8ZztpZihFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSlFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLGUpO2Vsc2V7dmFyIG49bmV3IEVycm9yO2lmKG4uc3RhY2spe3ZhciBpPW4uc3RhY2sscj1kKGUpLGE9aS5pbmRleE9mKFwiXFxuXCIrcik7aWYoYT49MCl7dmFyIG89aS5pbmRleE9mKFwiXFxuXCIsYSsxKTtpPWkuc3Vic3RyaW5nKG8rMSl9dGhpcy5zdGFjaz1pfX19LGEuaW5oZXJpdHMocC5Bc3NlcnRpb25FcnJvcixFcnJvcikscC5mYWlsPWcscC5vaz15LHAuZXF1YWw9ZnVuY3Rpb24odCxlLG4pe3QhPWUmJmcodCxlLG4sXCI9PVwiLHAuZXF1YWwpfSxwLm5vdEVxdWFsPWZ1bmN0aW9uKHQsZSxuKXt0PT1lJiZnKHQsZSxuLFwiIT1cIixwLm5vdEVxdWFsKX0scC5kZWVwRXF1YWw9ZnVuY3Rpb24odCxlLG4pe2IodCxlLCExKXx8Zyh0LGUsbixcImRlZXBFcXVhbFwiLHAuZGVlcEVxdWFsKX0scC5kZWVwU3RyaWN0RXF1YWw9ZnVuY3Rpb24odCxlLG4pe2IodCxlLCEwKXx8Zyh0LGUsbixcImRlZXBTdHJpY3RFcXVhbFwiLHAuZGVlcFN0cmljdEVxdWFsKX0scC5ub3REZWVwRXF1YWw9ZnVuY3Rpb24odCxlLG4pe2IodCxlLCExKSYmZyh0LGUsbixcIm5vdERlZXBFcXVhbFwiLHAubm90RGVlcEVxdWFsKX0scC5ub3REZWVwU3RyaWN0RXF1YWw9ZnVuY3Rpb24gdChlLG4saSl7YihlLG4sITApJiZnKGUsbixpLFwibm90RGVlcFN0cmljdEVxdWFsXCIsdCl9LHAuc3RyaWN0RXF1YWw9ZnVuY3Rpb24odCxlLG4pe3QhPT1lJiZnKHQsZSxuLFwiPT09XCIscC5zdHJpY3RFcXVhbCl9LHAubm90U3RyaWN0RXF1YWw9ZnVuY3Rpb24odCxlLG4pe3Q9PT1lJiZnKHQsZSxuLFwiIT09XCIscC5ub3RTdHJpY3RFcXVhbCl9LHAudGhyb3dzPWZ1bmN0aW9uKHQsZSxuKXt4KCEwLHQsZSxuKX0scC5kb2VzTm90VGhyb3c9ZnVuY3Rpb24odCxlLG4pe3goITEsdCxlLG4pfSxwLmlmRXJyb3I9ZnVuY3Rpb24odCl7aWYodCl0aHJvdyB0fTt2YXIgRD1PYmplY3Qua2V5c3x8ZnVuY3Rpb24odCl7dmFyIGU9W107Zm9yKHZhciBuIGluIHQpby5jYWxsKHQsbikmJmUucHVzaChuKTtyZXR1cm4gZX19KS5jYWxsKHRoaXMsbig0KSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24odCl7dmFyIGk9big3MCkscj1uKDEzKTtmdW5jdGlvbiBhKHQpe3ZhciBlLG4sYSxvLHUsbCxwLGYsZCxoPVtcIihbXiVdKilcIixcIiVcIixcIihbJ1xcXFwtKyAjMF0qPylcIixcIihbMS05XVxcXFxkKik/XCIsXCIoXFxcXC4oWzEtOV1cXFxcZCopKT9cIixcIltsaGp6dExdKj9cIixcIihbZGlvdXhYZkZlRWdHYUFjQ3NTcCVqcl0pXCJdLmpvaW4oXCJcIiksbT1uZXcgUmVnRXhwKGgpLGc9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLHk9XCJcIixiPTE7Zm9yKGkuZXF1YWwoXCJzdHJpbmdcIix0eXBlb2YgdCk7bnVsbCE9PShkPW0uZXhlYyh0KSk7KWlmKHkrPWRbMV0sdD10LnN1YnN0cmluZyhkWzBdLmxlbmd0aCksZT1kWzJdfHxcIlwiLG49ZFszXXx8MCxhPWRbNF18fFwiXCIsdT0hMSxwPSExLGw9XCIgXCIsXCIlXCIhPShvPWRbNl0pKXtpZigwPT09Zy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwidG9vIGZldyBhcmdzIHRvIHNwcmludGZcIik7aWYoZj1nLnNoaWZ0KCksYisrLGUubWF0Y2goL1tcXCcgI10vKSl0aHJvdyBuZXcgRXJyb3IoXCJ1bnN1cHBvcnRlZCBmbGFnczogXCIrZSk7aWYoYS5sZW5ndGg+MCl0aHJvdyBuZXcgRXJyb3IoXCJub24temVybyBwcmVjaXNpb24gbm90IHN1cHBvcnRlZFwiKTtzd2l0Y2goZS5tYXRjaCgvLS8pJiYodT0hMCksZS5tYXRjaCgvMC8pJiYobD1cIjBcIiksZS5tYXRjaCgvXFwrLykmJihwPSEwKSxvKXtjYXNlXCJzXCI6aWYobnVsbD09Zil0aHJvdyBuZXcgRXJyb3IoXCJhcmd1bWVudCBcIitiK1wiOiBhdHRlbXB0ZWQgdG8gcHJpbnQgdW5kZWZpbmVkIG9yIG51bGwgYXMgYSBzdHJpbmdcIik7eSs9cyhsLG4sdSxmLnRvU3RyaW5nKCkpO2JyZWFrO2Nhc2VcImRcIjpmPU1hdGguZmxvb3IoZik7Y2FzZVwiZlwiOnkrPShwPXAmJmY+MD9cIitcIjpcIlwiKStzKGwsbix1LGYudG9TdHJpbmcoKSk7YnJlYWs7Y2FzZVwieFwiOnkrPXMobCxuLHUsZi50b1N0cmluZygxNikpO2JyZWFrO2Nhc2VcImpcIjowPT09biYmKG49MTApLHkrPXIuaW5zcGVjdChmLCExLG4pO2JyZWFrO2Nhc2VcInJcIjp5Kz1jKGYpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwidW5zdXBwb3J0ZWQgY29udmVyc2lvbjogXCIrbyl9fWVsc2UgeSs9XCIlXCI7cmV0dXJuIHkrPXR9ZnVuY3Rpb24gbyh0KXt2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSk7cmV0dXJuIHQud3JpdGUoYS5hcHBseSh0aGlzLGUpKX1mdW5jdGlvbiBzKHQsZSxuLGkpe2Zvcih2YXIgcj1pO3IubGVuZ3RoPGU7KW4/cis9dDpyPXQrcjtyZXR1cm4gcn1mdW5jdGlvbiBjKHQpe3ZhciBlO2lmKCEodCBpbnN0YW5jZW9mIEVycm9yKSl0aHJvdyBuZXcgRXJyb3IoYShcImludmFsaWQgdHlwZSBmb3IgJSVyOiAlalwiLHQpKTtpZihlPVwiRVhDRVBUSU9OOiBcIit0LmNvbnN0cnVjdG9yLm5hbWUrXCI6IFwiK3Quc3RhY2ssdC5jYXVzZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5jYXVzZSl7dmFyIG49dC5jYXVzZSgpO24mJihlKz1cIlxcbkNhdXNlZCBieTogXCIrYyhuKSl9cmV0dXJuIGV9ZS5zcHJpbnRmPWEsZS5wcmludGY9ZnVuY3Rpb24oKXt2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO2UudW5zaGlmdCh0LnN0ZG91dCksby5hcHBseShudWxsLGUpfSxlLmZwcmludGY9b30pLmNhbGwodGhpcyxuKDMpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXtjb25zdCBpPW4oMTc2KSxyPW4oMTgwKSxhPW4oMTkyKSxvPW4oMTIpLHM9bigxMiksYz1uKDMwKSx1PW4oNSksbD1uKDc2KSxwPU9iamVjdC5hc3NpZ24oe30sbigyOSkpO3AuaXNGaWxlUmVhZFN0cmVhbT1mdW5jdGlvbih0KXtyZXR1cm4gYyYmXCJmdW5jdGlvblwiPT10eXBlb2YgYyYmYy5SZWFkYWJsZSYmdCBpbnN0YW5jZW9mIGMuUmVhZGFibGV9LHAuZ2V0RGlza0luZm89YXN5bmMgZnVuY3Rpb24odCl7cmV0dXJuIGF3YWl0IG8uY2hlY2sodCl9LHAuZ2V0RmlsZUluZm89YXN5bmMgZnVuY3Rpb24odCxuPXt9KXtuPU9iamVjdC5hc3NpZ24oe3NpemU6ITAsbWltZTohMCxleHQ6ITAsaGFzaDohMH0sbik7bGV0IHI9e307aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgQmxvYiYmdCBpbnN0YW5jZW9mIEJsb2Ipbi5zaXplJiYoci5zaXplPXQuc2l6ZSksbi5taW1lJiYoci5taW1lPXQudHlwZSksbi5taW1lJiZuLmV4dCYmKHIuZXh0PWkuZ2V0RXh0ZW5zaW9uKHIubWltZSkpLG4uaGFzaCYmKHIuaGFzaD1hd2FpdCB0aGlzLmdldEZpbGVIYXNoKHQpKTtlbHNlIGlmKHRoaXMuaXNGaWxlUmVhZFN0cmVhbSh0KXx8XCJzdHJpbmdcIj09dHlwZW9mIHQpe2NvbnN0IGU9dC5wYXRofHx0O24uc2l6ZSYmKHIuc2l6ZT0oYXdhaXQgcy5zdGF0KGUpKS5zaXplKSxuLm1pbWUmJihyLm1pbWU9YXdhaXQgdGhpcy5nZXRGaWxlTWltZVR5cGUoZSkpLG4ubWltZSYmbi5leHQmJihyLmV4dD1pLmdldEV4dGVuc2lvbihyLm1pbWUpKSxuLmhhc2gmJihyLmhhc2g9YXdhaXQgdGhpcy5nZXRGaWxlSGFzaChlKSl9ZWxzZXtpZighKFwiZnVuY3Rpb25cIj09dHlwZW9mIGUmJnQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgbC5Xb3JrRXJyb3IoXCJXcm9uZyBmaWxlIGZvcm1hdFwiLFwiRVJSX1NUT1JBQ0xFX1dST05HX0ZJTEVcIik7bi5zaXplJiYoci5zaXplPXQubGVuZ3RoKSxuLm1pbWUmJihyLm1pbWU9YXdhaXQgdGhpcy5nZXRGaWxlTWltZVR5cGUodCkpLG4ubWltZSYmbi5leHQmJihyLmV4dD1pLmdldEV4dGVuc2lvbihyLm1pbWUpKSxuLmhhc2gmJihyLmhhc2g9YXdhaXQgdGhpcy5nZXRGaWxlSGFzaCh0KSl9cmV0dXJuIHJ9LHAuZ2V0RmlsZUhhc2g9YXN5bmMgZnVuY3Rpb24odCl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgQmxvYiYmdCBpbnN0YW5jZW9mIEJsb2IpcmV0dXJuIGF3YWl0IHIoYXdhaXQgdGhpcy5ibG9iVG9CdWZmZXIodCkse2FsZ29yaXRobTpcIm1kNVwifSk7aWYodGhpcy5pc0ZpbGVSZWFkU3RyZWFtKHQpfHxcInN0cmluZ1wiPT10eXBlb2YgdClyZXR1cm4gYXdhaXQgci5mcm9tRmlsZSh0LnBhdGh8fHQse2FsZ29yaXRobTpcIm1kNVwifSk7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZSYmdCBpbnN0YW5jZW9mIGUpcmV0dXJuIGF3YWl0IHIodCx7YWxnb3JpdGhtOlwibWQ1XCJ9KTt0aHJvdyBuZXcgbC5Xb3JrRXJyb3IoXCJXcm9uZyBmaWxlIGZvcm1hdFwiLFwiRVJSX1NUT1JBQ0xFX1dST05HX0ZJTEVcIil9LHAuZ2V0RmlsZU1pbWVUeXBlPWFzeW5jIGZ1bmN0aW9uKHQpe3JldHVybiBhd2FpdCBuZXcgUHJvbWlzZSgobixpKT0+e3RoaXMuaXNGaWxlUmVhZFN0cmVhbSh0KSYmKHQ9dC5wYXRoKSxhW3QgaW5zdGFuY2VvZiBlP1wiZnJvbUJ1ZmZlclwiOlwiZnJvbUZpbGVcIl0odCwodCxlKT0+e2lmKHQpcmV0dXJuIGkoaSk7bihlP2UubWltZTpcInRleHQvcGxhaW5cIil9KX0pfSxwLmJsb2JUb0J1ZmZlcj1hc3luYyBmdW5jdGlvbih0KXtyZXR1cm4gYXdhaXQgbmV3IFByb21pc2UoKG4saSk9Pntjb25zdCByPW5ldyBGaWxlUmVhZGVyLGE9dD0+e2lmKHIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImxvYWRlbmRcIixhKSx0LmVycm9yKXJldHVybiBpKHQuZXJyb3IpO24oZS5mcm9tKHIucmVzdWx0KSl9O3IuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRlbmRcIixhKSxyLnJlYWRBc0FycmF5QnVmZmVyKHQpfSl9LHAuaXNWYWxpZEZpbGVMaW5rPWZ1bmN0aW9uKHQsZT17fSl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIHQpcmV0dXJuITE7Y29uc3Qgbj11LnBhcnNlKHQpO3JldHVybiEoIW4uaG9zdG5hbWV8fCF0aGlzLmlzVmFsaWRIb3N0bmFtZShuLmhvc3RuYW1lKSkmJighKCFuLnBvcnR8fCF0aGlzLmlzVmFsaWRQb3J0KG4ucG9ydCkpJiYoISFuLnByb3RvY29sLm1hdGNoKC9eaHR0cHM/Oj8kLykmJiEoIW4ucGF0aG5hbWV8fCFuLnBhdGhuYW1lLm1hdGNoKG5ldyBSZWdFeHAoYFxcXFwvJHtlLmFjdGlvbnx8XCJmaWxlXCJ9XFxcXC9bYS16MC05XSsoXFxcXC5bXFxcXHdcXFxcZF0rKSokYCkpKSkpfSx0LmV4cG9ydHM9cH0pLmNhbGwodGhpcyxuKDEpLkJ1ZmZlcil9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDIpLkJ1ZmZlcixyPW4oMzApLlRyYW5zZm9ybTtmdW5jdGlvbiBhKHQpe3IuY2FsbCh0aGlzKSx0aGlzLl9ibG9jaz1pLmFsbG9jVW5zYWZlKHQpLHRoaXMuX2Jsb2NrU2l6ZT10LHRoaXMuX2Jsb2NrT2Zmc2V0PTAsdGhpcy5fbGVuZ3RoPVswLDAsMCwwXSx0aGlzLl9maW5hbGl6ZWQ9ITF9bigwKShhLHIpLGEucHJvdG90eXBlLl90cmFuc2Zvcm09ZnVuY3Rpb24odCxlLG4pe3ZhciBpPW51bGw7dHJ5e3RoaXMudXBkYXRlKHQsZSl9Y2F0Y2godCl7aT10fW4oaSl9LGEucHJvdG90eXBlLl9mbHVzaD1mdW5jdGlvbih0KXt2YXIgZT1udWxsO3RyeXt0aGlzLnB1c2godGhpcy5kaWdlc3QoKSl9Y2F0Y2godCl7ZT10fXQoZSl9LGEucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0LGUpe2lmKGZ1bmN0aW9uKHQsZSl7aWYoIWkuaXNCdWZmZXIodCkmJlwic3RyaW5nXCIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoZStcIiBtdXN0IGJlIGEgc3RyaW5nIG9yIGEgYnVmZmVyXCIpfSh0LFwiRGF0YVwiKSx0aGlzLl9maW5hbGl6ZWQpdGhyb3cgbmV3IEVycm9yKFwiRGlnZXN0IGFscmVhZHkgY2FsbGVkXCIpO2kuaXNCdWZmZXIodCl8fCh0PWkuZnJvbSh0LGUpKTtmb3IodmFyIG49dGhpcy5fYmxvY2sscj0wO3RoaXMuX2Jsb2NrT2Zmc2V0K3QubGVuZ3RoLXI+PXRoaXMuX2Jsb2NrU2l6ZTspe2Zvcih2YXIgYT10aGlzLl9ibG9ja09mZnNldDthPHRoaXMuX2Jsb2NrU2l6ZTspblthKytdPXRbcisrXTt0aGlzLl91cGRhdGUoKSx0aGlzLl9ibG9ja09mZnNldD0wfWZvcig7cjx0Lmxlbmd0aDspblt0aGlzLl9ibG9ja09mZnNldCsrXT10W3IrK107Zm9yKHZhciBvPTAscz04KnQubGVuZ3RoO3M+MDsrK28pdGhpcy5fbGVuZ3RoW29dKz1zLChzPXRoaXMuX2xlbmd0aFtvXS80Mjk0OTY3Mjk2fDApPjAmJih0aGlzLl9sZW5ndGhbb10tPTQyOTQ5NjcyOTYqcyk7cmV0dXJuIHRoaXN9LGEucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJfdXBkYXRlIGlzIG5vdCBpbXBsZW1lbnRlZFwiKX0sYS5wcm90b3R5cGUuZGlnZXN0PWZ1bmN0aW9uKHQpe2lmKHRoaXMuX2ZpbmFsaXplZCl0aHJvdyBuZXcgRXJyb3IoXCJEaWdlc3QgYWxyZWFkeSBjYWxsZWRcIik7dGhpcy5fZmluYWxpemVkPSEwO3ZhciBlPXRoaXMuX2RpZ2VzdCgpO3ZvaWQgMCE9PXQmJihlPWUudG9TdHJpbmcodCkpLHRoaXMuX2Jsb2NrLmZpbGwoMCksdGhpcy5fYmxvY2tPZmZzZXQ9MDtmb3IodmFyIG49MDtuPDQ7KytuKXRoaXMuX2xlbmd0aFtuXT0wO3JldHVybiBlfSxhLnByb3RvdHlwZS5fZGlnZXN0PWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwiX2RpZ2VzdCBpcyBub3QgaW1wbGVtZW50ZWRcIil9LHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigwKSxyPW4oMTQpLGE9bigyKS5CdWZmZXIsbz1bMTExNjM1MjQwOCwxODk5NDQ3NDQxLDMwNDkzMjM0NzEsMzkyMTAwOTU3Myw5NjE5ODcxNjMsMTUwODk3MDk5MywyNDUzNjM1NzQ4LDI4NzA3NjMyMjEsMzYyNDM4MTA4MCwzMTA1OTg0MDEsNjA3MjI1Mjc4LDE0MjY4ODE5ODcsMTkyNTA3ODM4OCwyMTYyMDc4MjA2LDI2MTQ4ODgxMDMsMzI0ODIyMjU4MCwzODM1MzkwNDAxLDQwMjIyMjQ3NzQsMjY0MzQ3MDc4LDYwNDgwNzYyOCw3NzAyNTU5ODMsMTI0OTE1MDEyMiwxNTU1MDgxNjkyLDE5OTYwNjQ5ODYsMjU1NDIyMDg4MiwyODIxODM0MzQ5LDI5NTI5OTY4MDgsMzIxMDMxMzY3MSwzMzM2NTcxODkxLDM1ODQ1Mjg3MTEsMTEzOTI2OTkzLDMzODI0MTg5NSw2NjYzMDcyMDUsNzczNTI5OTEyLDEyOTQ3NTczNzIsMTM5NjE4MjI5MSwxNjk1MTgzNzAwLDE5ODY2NjEwNTEsMjE3NzAyNjM1MCwyNDU2OTU2MDM3LDI3MzA0ODU5MjEsMjgyMDMwMjQxMSwzMjU5NzMwODAwLDMzNDU3NjQ3NzEsMzUxNjA2NTgxNywzNjAwMzUyODA0LDQwOTQ1NzE5MDksMjc1NDIzMzQ0LDQzMDIyNzczNCw1MDY5NDg2MTYsNjU5MDYwNTU2LDg4Mzk5Nzg3Nyw5NTgxMzk1NzEsMTMyMjgyMjIxOCwxNTM3MDAyMDYzLDE3NDc4NzM3NzksMTk1NTU2MjIyMiwyMDI0MTA0ODE1LDIyMjc3MzA0NTIsMjM2MTg1MjQyNCwyNDI4NDM2NDc0LDI3NTY3MzQxODcsMzIwNDAzMTQ3OSwzMzI5MzI1Mjk4XSxzPW5ldyBBcnJheSg2NCk7ZnVuY3Rpb24gYygpe3RoaXMuaW5pdCgpLHRoaXMuX3c9cyxyLmNhbGwodGhpcyw2NCw1Nil9ZnVuY3Rpb24gdSh0LGUsbil7cmV0dXJuIG5edCYoZV5uKX1mdW5jdGlvbiBsKHQsZSxuKXtyZXR1cm4gdCZlfG4mKHR8ZSl9ZnVuY3Rpb24gcCh0KXtyZXR1cm4odD4+PjJ8dDw8MzApXih0Pj4+MTN8dDw8MTkpXih0Pj4+MjJ8dDw8MTApfWZ1bmN0aW9uIGYodCl7cmV0dXJuKHQ+Pj42fHQ8PDI2KV4odD4+PjExfHQ8PDIxKV4odD4+PjI1fHQ8PDcpfWZ1bmN0aW9uIGQodCl7cmV0dXJuKHQ+Pj43fHQ8PDI1KV4odD4+PjE4fHQ8PDE0KV50Pj4+M31pKGMsciksYy5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9hPTE3NzkwMzM3MDMsdGhpcy5fYj0zMTQ0MTM0Mjc3LHRoaXMuX2M9MTAxMzkwNDI0Mix0aGlzLl9kPTI3NzM0ODA3NjIsdGhpcy5fZT0xMzU5ODkzMTE5LHRoaXMuX2Y9MjYwMDgyMjkyNCx0aGlzLl9nPTUyODczNDYzNSx0aGlzLl9oPTE1NDE0NTkyMjUsdGhpc30sYy5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0KXtmb3IodmFyIGUsbj10aGlzLl93LGk9MHx0aGlzLl9hLHI9MHx0aGlzLl9iLGE9MHx0aGlzLl9jLHM9MHx0aGlzLl9kLGM9MHx0aGlzLl9lLGg9MHx0aGlzLl9mLG09MHx0aGlzLl9nLGc9MHx0aGlzLl9oLHk9MDt5PDE2OysreSluW3ldPXQucmVhZEludDMyQkUoNCp5KTtmb3IoO3k8NjQ7Kyt5KW5beV09MHwoKChlPW5beS0yXSk+Pj4xN3xlPDwxNSleKGU+Pj4xOXxlPDwxMyleZT4+PjEwKStuW3ktN10rZChuW3ktMTVdKStuW3ktMTZdO2Zvcih2YXIgYj0wO2I8NjQ7KytiKXt2YXIgdj1nK2YoYykrdShjLGgsbSkrb1tiXStuW2JdfDAsdz1wKGkpK2woaSxyLGEpfDA7Zz1tLG09aCxoPWMsYz1zK3Z8MCxzPWEsYT1yLHI9aSxpPXYrd3wwfXRoaXMuX2E9aSt0aGlzLl9hfDAsdGhpcy5fYj1yK3RoaXMuX2J8MCx0aGlzLl9jPWErdGhpcy5fY3wwLHRoaXMuX2Q9cyt0aGlzLl9kfDAsdGhpcy5fZT1jK3RoaXMuX2V8MCx0aGlzLl9mPWgrdGhpcy5fZnwwLHRoaXMuX2c9bSt0aGlzLl9nfDAsdGhpcy5faD1nK3RoaXMuX2h8MH0sYy5wcm90b3R5cGUuX2hhc2g9ZnVuY3Rpb24oKXt2YXIgdD1hLmFsbG9jVW5zYWZlKDMyKTtyZXR1cm4gdC53cml0ZUludDMyQkUodGhpcy5fYSwwKSx0LndyaXRlSW50MzJCRSh0aGlzLl9iLDQpLHQud3JpdGVJbnQzMkJFKHRoaXMuX2MsOCksdC53cml0ZUludDMyQkUodGhpcy5fZCwxMiksdC53cml0ZUludDMyQkUodGhpcy5fZSwxNiksdC53cml0ZUludDMyQkUodGhpcy5fZiwyMCksdC53cml0ZUludDMyQkUodGhpcy5fZywyNCksdC53cml0ZUludDMyQkUodGhpcy5faCwyOCksdH0sdC5leHBvcnRzPWN9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDApLHI9bigxNCksYT1uKDIpLkJ1ZmZlcixvPVsxMTE2MzUyNDA4LDM2MDk3Njc0NTgsMTg5OTQ0NzQ0MSw2MDI4OTE3MjUsMzA0OTMyMzQ3MSwzOTY0NDg0Mzk5LDM5MjEwMDk1NzMsMjE3MzI5NTU0OCw5NjE5ODcxNjMsNDA4MTYyODQ3MiwxNTA4OTcwOTkzLDMwNTM4MzQyNjUsMjQ1MzYzNTc0OCwyOTM3NjcxNTc5LDI4NzA3NjMyMjEsMzY2NDYwOTU2MCwzNjI0MzgxMDgwLDI3MzQ4ODMzOTQsMzEwNTk4NDAxLDExNjQ5OTY1NDIsNjA3MjI1Mjc4LDEzMjM2MTA3NjQsMTQyNjg4MTk4NywzNTkwMzA0OTk0LDE5MjUwNzgzODgsNDA2ODE4MjM4MywyMTYyMDc4MjA2LDk5MTMzNjExMywyNjE0ODg4MTAzLDYzMzgwMzMxNywzMjQ4MjIyNTgwLDM0Nzk3NzQ4NjgsMzgzNTM5MDQwMSwyNjY2NjEzNDU4LDQwMjIyMjQ3NzQsOTQ0NzExMTM5LDI2NDM0NzA3OCwyMzQxMjYyNzczLDYwNDgwNzYyOCwyMDA3ODAwOTMzLDc3MDI1NTk4MywxNDk1OTkwOTAxLDEyNDkxNTAxMjIsMTg1NjQzMTIzNSwxNTU1MDgxNjkyLDMxNzUyMTgxMzIsMTk5NjA2NDk4NiwyMTk4OTUwODM3LDI1NTQyMjA4ODIsMzk5OTcxOTMzOSwyODIxODM0MzQ5LDc2Njc4NDAxNiwyOTUyOTk2ODA4LDI1NjY1OTQ4NzksMzIxMDMxMzY3MSwzMjAzMzM3OTU2LDMzMzY1NzE4OTEsMTAzNDQ1NzAyNiwzNTg0NTI4NzExLDI0NjY5NDg5MDEsMTEzOTI2OTkzLDM3NTgzMjYzODMsMzM4MjQxODk1LDE2ODcxNzkzNiw2NjYzMDcyMDUsMTE4ODE3OTk2NCw3NzM1Mjk5MTIsMTU0NjA0NTczNCwxMjk0NzU3MzcyLDE1MjI4MDU0ODUsMTM5NjE4MjI5MSwyNjQzODMzODIzLDE2OTUxODM3MDAsMjM0MzUyNzM5MCwxOTg2NjYxMDUxLDEwMTQ0Nzc0ODAsMjE3NzAyNjM1MCwxMjA2NzU5MTQyLDI0NTY5NTYwMzcsMzQ0MDc3NjI3LDI3MzA0ODU5MjEsMTI5MDg2MzQ2MCwyODIwMzAyNDExLDMxNTg0NTQyNzMsMzI1OTczMDgwMCwzNTA1OTUyNjU3LDMzNDU3NjQ3NzEsMTA2MjE3MDA4LDM1MTYwNjU4MTcsMzYwNjAwODM0NCwzNjAwMzUyODA0LDE0MzI3MjU3NzYsNDA5NDU3MTkwOSwxNDY3MDMxNTk0LDI3NTQyMzM0NCw4NTExNjk3MjAsNDMwMjI3NzM0LDMxMDA4MjM3NTIsNTA2OTQ4NjE2LDEzNjMyNTgxOTUsNjU5MDYwNTU2LDM3NTA2ODU1OTMsODgzOTk3ODc3LDM3ODUwNTAyODAsOTU4MTM5NTcxLDMzMTgzMDc0MjcsMTMyMjgyMjIxOCwzODEyNzIzNDAzLDE1MzcwMDIwNjMsMjAwMzAzNDk5NSwxNzQ3ODczNzc5LDM2MDIwMzY4OTksMTk1NTU2MjIyMiwxNTc1OTkwMDEyLDIwMjQxMDQ4MTUsMTEyNTU5MjkyOCwyMjI3NzMwNDUyLDI3MTY5MDQzMDYsMjM2MTg1MjQyNCw0NDI3NzYwNDQsMjQyODQzNjQ3NCw1OTM2OTgzNDQsMjc1NjczNDE4NywzNzMzMTEwMjQ5LDMyMDQwMzE0NzksMjk5OTM1MTU3MywzMzI5MzI1Mjk4LDM4MTU5MjA0MjcsMzM5MTU2OTYxNCwzOTI4MzgzOTAwLDM1MTUyNjcyNzEsNTY2MjgwNzExLDM5NDAxODc2MDYsMzQ1NDA2OTUzNCw0MTE4NjMwMjcxLDQwMDAyMzk5OTIsMTE2NDE4NDc0LDE5MTQxMzg1NTQsMTc0MjkyNDIxLDI3MzEwNTUyNzAsMjg5MzgwMzU2LDMyMDM5OTMwMDYsNDYwMzkzMjY5LDMyMDYyMDMxNSw2ODU0NzE3MzMsNTg3NDk2ODM2LDg1MjE0Mjk3MSwxMDg2NzkyODUxLDEwMTcwMzYyOTgsMzY1NTQzMTAwLDExMjYwMDA1ODAsMjYxODI5NzY3NiwxMjg4MDMzNDcwLDM0MDk4NTUxNTgsMTUwMTUwNTk0OCw0MjM0NTA5ODY2LDE2MDcxNjc5MTUsOTg3MTY3NDY4LDE4MTY0MDIzMTYsMTI0NjE4OTU5MV0scz1uZXcgQXJyYXkoMTYwKTtmdW5jdGlvbiBjKCl7dGhpcy5pbml0KCksdGhpcy5fdz1zLHIuY2FsbCh0aGlzLDEyOCwxMTIpfWZ1bmN0aW9uIHUodCxlLG4pe3JldHVybiBuXnQmKGVebil9ZnVuY3Rpb24gbCh0LGUsbil7cmV0dXJuIHQmZXxuJih0fGUpfWZ1bmN0aW9uIHAodCxlKXtyZXR1cm4odD4+PjI4fGU8PDQpXihlPj4+Mnx0PDwzMCleKGU+Pj43fHQ8PDI1KX1mdW5jdGlvbiBmKHQsZSl7cmV0dXJuKHQ+Pj4xNHxlPDwxOCleKHQ+Pj4xOHxlPDwxNCleKGU+Pj45fHQ8PDIzKX1mdW5jdGlvbiBkKHQsZSl7cmV0dXJuKHQ+Pj4xfGU8PDMxKV4odD4+Pjh8ZTw8MjQpXnQ+Pj43fWZ1bmN0aW9uIGgodCxlKXtyZXR1cm4odD4+PjF8ZTw8MzEpXih0Pj4+OHxlPDwyNCleKHQ+Pj43fGU8PDI1KX1mdW5jdGlvbiBtKHQsZSl7cmV0dXJuKHQ+Pj4xOXxlPDwxMyleKGU+Pj4yOXx0PDwzKV50Pj4+Nn1mdW5jdGlvbiBnKHQsZSl7cmV0dXJuKHQ+Pj4xOXxlPDwxMyleKGU+Pj4yOXx0PDwzKV4odD4+PjZ8ZTw8MjYpfWZ1bmN0aW9uIHkodCxlKXtyZXR1cm4gdD4+PjA8ZT4+PjA/MTowfWkoYyxyKSxjLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FoPTE3NzkwMzM3MDMsdGhpcy5fYmg9MzE0NDEzNDI3Nyx0aGlzLl9jaD0xMDEzOTA0MjQyLHRoaXMuX2RoPTI3NzM0ODA3NjIsdGhpcy5fZWg9MTM1OTg5MzExOSx0aGlzLl9maD0yNjAwODIyOTI0LHRoaXMuX2doPTUyODczNDYzNSx0aGlzLl9oaD0xNTQxNDU5MjI1LHRoaXMuX2FsPTQwODkyMzU3MjAsdGhpcy5fYmw9MjIyNzg3MzU5NSx0aGlzLl9jbD00MjcxMTc1NzIzLHRoaXMuX2RsPTE1OTU3NTAxMjksdGhpcy5fZWw9MjkxNzU2NTEzNyx0aGlzLl9mbD03MjU1MTExOTksdGhpcy5fZ2w9NDIxNTM4OTU0Nyx0aGlzLl9obD0zMjcwMzMyMDksdGhpc30sYy5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5fdyxuPTB8dGhpcy5fYWgsaT0wfHRoaXMuX2JoLHI9MHx0aGlzLl9jaCxhPTB8dGhpcy5fZGgscz0wfHRoaXMuX2VoLGM9MHx0aGlzLl9maCxiPTB8dGhpcy5fZ2gsdj0wfHRoaXMuX2hoLHc9MHx0aGlzLl9hbCx4PTB8dGhpcy5fYmwsRD0wfHRoaXMuX2NsLF89MHx0aGlzLl9kbCxFPTB8dGhpcy5fZWwsaz0wfHRoaXMuX2ZsLFQ9MHx0aGlzLl9nbCxDPTB8dGhpcy5faGwsUz0wO1M8MzI7Uys9MillW1NdPXQucmVhZEludDMyQkUoNCpTKSxlW1MrMV09dC5yZWFkSW50MzJCRSg0KlMrNCk7Zm9yKDtTPDE2MDtTKz0yKXt2YXIgQT1lW1MtMzBdLEY9ZVtTLTMwKzFdLGo9ZChBLEYpLE89aChGLEEpLEI9bShBPWVbUy00XSxGPWVbUy00KzFdKSxxPWcoRixBKSxSPWVbUy0xNF0sST1lW1MtMTQrMV0sTD1lW1MtMzJdLFA9ZVtTLTMyKzFdLE09TytJfDAsej1qK1IreShNLE8pfDA7ej0oej16K0IreShNPU0rcXwwLHEpfDApK0wreShNPU0rUHwwLFApfDAsZVtTXT16LGVbUysxXT1NfWZvcih2YXIgVT0wO1U8MTYwO1UrPTIpe3o9ZVtVXSxNPWVbVSsxXTt2YXIgTj1sKG4saSxyKSwkPWwodyx4LEQpLFc9cChuLHcpLEg9cCh3LG4pLEc9ZihzLEUpLFk9ZihFLHMpLFY9b1tVXSxLPW9bVSsxXSxYPXUocyxjLGIpLEo9dShFLGssVCksWj1DK1l8MCxRPXYrRyt5KFosQyl8MDtRPShRPShRPVErWCt5KFo9WitKfDAsSil8MCkrVit5KFo9WitLfDAsSyl8MCkreit5KFo9WitNfDAsTSl8MDt2YXIgdHQ9SCskfDAsZXQ9VytOK3kodHQsSCl8MDt2PWIsQz1ULGI9YyxUPWssYz1zLGs9RSxzPWErUSt5KEU9XytafDAsXyl8MCxhPXIsXz1ELHI9aSxEPXgsaT1uLHg9dyxuPVErZXQreSh3PVordHR8MCxaKXwwfXRoaXMuX2FsPXRoaXMuX2FsK3d8MCx0aGlzLl9ibD10aGlzLl9ibCt4fDAsdGhpcy5fY2w9dGhpcy5fY2wrRHwwLHRoaXMuX2RsPXRoaXMuX2RsK198MCx0aGlzLl9lbD10aGlzLl9lbCtFfDAsdGhpcy5fZmw9dGhpcy5fZmwra3wwLHRoaXMuX2dsPXRoaXMuX2dsK1R8MCx0aGlzLl9obD10aGlzLl9obCtDfDAsdGhpcy5fYWg9dGhpcy5fYWgrbit5KHRoaXMuX2FsLHcpfDAsdGhpcy5fYmg9dGhpcy5fYmgraSt5KHRoaXMuX2JsLHgpfDAsdGhpcy5fY2g9dGhpcy5fY2grcit5KHRoaXMuX2NsLEQpfDAsdGhpcy5fZGg9dGhpcy5fZGgrYSt5KHRoaXMuX2RsLF8pfDAsdGhpcy5fZWg9dGhpcy5fZWgrcyt5KHRoaXMuX2VsLEUpfDAsdGhpcy5fZmg9dGhpcy5fZmgrYyt5KHRoaXMuX2ZsLGspfDAsdGhpcy5fZ2g9dGhpcy5fZ2grYit5KHRoaXMuX2dsLFQpfDAsdGhpcy5faGg9dGhpcy5faGgrdit5KHRoaXMuX2hsLEMpfDB9LGMucHJvdG90eXBlLl9oYXNoPWZ1bmN0aW9uKCl7dmFyIHQ9YS5hbGxvY1Vuc2FmZSg2NCk7ZnVuY3Rpb24gZShlLG4saSl7dC53cml0ZUludDMyQkUoZSxpKSx0LndyaXRlSW50MzJCRShuLGkrNCl9cmV0dXJuIGUodGhpcy5fYWgsdGhpcy5fYWwsMCksZSh0aGlzLl9iaCx0aGlzLl9ibCw4KSxlKHRoaXMuX2NoLHRoaXMuX2NsLDE2KSxlKHRoaXMuX2RoLHRoaXMuX2RsLDI0KSxlKHRoaXMuX2VoLHRoaXMuX2VsLDMyKSxlKHRoaXMuX2ZoLHRoaXMuX2ZsLDQwKSxlKHRoaXMuX2doLHRoaXMuX2dsLDQ4KSxlKHRoaXMuX2hoLHRoaXMuX2hsLDU2KSx0fSx0LmV4cG9ydHM9Y30sZnVuY3Rpb24odCxlLG4pe3QuZXhwb3J0cz1PYmplY3QuYXNzaWduKHt9LG4oMzEpKX0sZnVuY3Rpb24odCl7dC5leHBvcnRzPUpTT04ucGFyc2UoJ1tbXCJhMTQwXCIsXCLuk4ZcIiw2Ml0sW1wiYTE4MFwiLFwi7pSFXCIsMzJdLFtcImEyNDBcIixcIu6UplwiLDYyXSxbXCJhMjgwXCIsXCLulaVcIiwzMl0sW1wiYTJhYlwiLFwi7p2mXCIsNV0sW1wiYTJlM1wiLFwi4oKs7p2tXCJdLFtcImEyZWZcIixcIu6dru6dr1wiXSxbXCJhMmZkXCIsXCLunbDunbFcIl0sW1wiYTM0MFwiLFwi7paGXCIsNjJdLFtcImEzODBcIixcIu6XhVwiLDMxLFwi44CAXCJdLFtcImE0NDBcIixcIu6XplwiLDYyXSxbXCJhNDgwXCIsXCLumKVcIiwzMl0sW1wiYTRmNFwiLFwi7p2yXCIsMTBdLFtcImE1NDBcIixcIu6ZhlwiLDYyXSxbXCJhNTgwXCIsXCLumoVcIiwzMl0sW1wiYTVmN1wiLFwi7p29XCIsN10sW1wiYTY0MFwiLFwi7pqmXCIsNjJdLFtcImE2ODBcIixcIu6bpVwiLDMyXSxbXCJhNmI5XCIsXCLunoVcIiw3XSxbXCJhNmQ5XCIsXCLuno1cIiw2XSxbXCJhNmVjXCIsXCLunpTunpVcIl0sW1wiYTZmM1wiLFwi7p6WXCJdLFtcImE2ZjZcIixcIu6el1wiLDhdLFtcImE3NDBcIixcIu6chlwiLDYyXSxbXCJhNzgwXCIsXCLunYVcIiwzMl0sW1wiYTdjMlwiLFwi7p6gXCIsMTRdLFtcImE3ZjJcIixcIu6er1wiLDEyXSxbXCJhODk2XCIsXCLunrxcIiwxMF0sW1wiYThiY1wiLFwi7p+HXCJdLFtcImE4YmZcIixcIse5XCJdLFtcImE4YzFcIixcIu6fie6fiu6fi+6fjFwiXSxbXCJhOGVhXCIsXCLun41cIiwyMF0sW1wiYTk1OFwiLFwi7p+iXCJdLFtcImE5NWJcIixcIu6fo1wiXSxbXCJhOTVkXCIsXCLun6Tun6Xun6ZcIl0sW1wiYTk4OVwiLFwi44C+4r+wXCIsMTFdLFtcImE5OTdcIixcIu6ftFwiLDEyXSxbXCJhOWYwXCIsXCLuoIFcIiwxNF0sW1wiYWFhMVwiLFwi7oCAXCIsOTNdLFtcImFiYTFcIixcIu6BnlwiLDkzXSxbXCJhY2ExXCIsXCLugrxcIiw5M10sW1wiYWRhMVwiLFwi7oSaXCIsOTNdLFtcImFlYTFcIixcIu6FuFwiLDkzXSxbXCJhZmExXCIsXCLuh5ZcIiw5M10sW1wiZDdmYVwiLFwi7qCQXCIsNF0sW1wiZjhhMVwiLFwi7oi0XCIsOTNdLFtcImY5YTFcIixcIu6KklwiLDkzXSxbXCJmYWExXCIsXCLui7BcIiw5M10sW1wiZmJhMVwiLFwi7o2OXCIsOTNdLFtcImZjYTFcIixcIu6OrFwiLDkzXSxbXCJmZGExXCIsXCLukIpcIiw5M10sW1wiZmU1MFwiLFwi4rqB7qCW7qCX7qCY4rqE45Gz45GH4rqI4rqL7qCe45ae45ia45iO4rqM4rqX46Wu46SY7qCm46eP46ef46mz46eQ7qCr7qCs462O47Gu47Og4rqn7qCx7qCy4rqq5IGW5IWf4rqu5Iy34rqz4rq24rq37qC75I6x5I6s4rq75I+d5JOW5Jmh5JmM7qGDXCJdLFtcImZlODBcIixcIuSco+ScqeSdvOSejeK7iuSlh+SluuSlveSmguSmg+SmheSmhuSmn+Smm+Smt+Smtu6hlO6hleSyo+Syn+SyoOSyoeSxt+SyouS0k1wiLDYsXCLktq7uoaTukahcIiw5M11dJyl9LGZ1bmN0aW9uKHQpe3QuZXhwb3J0cz1KU09OLnBhcnNlKCdbW1wiMFwiLFwiXFxcXHUwMDAwXCIsMTI3XSxbXCJhMTQwXCIsXCLjgIDvvIzjgIHjgILvvI7igKfvvJvvvJrvvJ/vvIHvuLDigKbigKXvuZDvuZHvuZLCt++5lO+5le+5lu+5l++9nOKAk++4seKAlO+4s+KVtO+4tO+5j++8iO+8ie+4te+4tu+9m++9ne+4t++4uOOAlOOAle+4ue+4uuOAkOOAke+4u++4vOOAiuOAi++4ve+4vuOAiOOAie+4v++5gOOAjOOAje+5ge+5guOAjuOAj++5g++5hO+5me+5mlwiXSxbXCJhMWExXCIsXCLvuZvvuZzvuZ3vuZ7igJjigJnigJzigJ3jgJ3jgJ7igLXigLLvvIPvvIbvvIrigLvCp+OAg+KXi+KXj+KWs+KWsuKXjuKYhuKYheKXh+KXhuKWoeKWoOKWveKWvOOKo+KEhcKv77+j77y/y43vuYnvuYrvuY3vuY7vuYvvuYzvuZ/vuaDvuaHvvIvvvI3Dl8O3wrHiiJrvvJzvvJ7vvJ3iiabiiafiiaDiiJ7iiZLiiaHvuaJcIiw0LFwi772e4oip4oiq4oql4oig4oif4oq/44+S44+R4oir4oiu4oi14oi04pmA4pmC4oqV4oqZ4oaR4oaT4oaQ4oaS4oaW4oaX4oaZ4oaY4oil4oij77yPXCJdLFtcImEyNDBcIixcIu+8vOKIle+5qO+8hO+/peOAku+/oO+/oe+8he+8oOKEg+KEie+5qe+5qu+5q+OPleOOnOOOneOOnuOPjuOOoeOOjuOOj+OPhMKw5YWZ5YWb5YWe5YWd5YWh5YWj5Zen55Op57OO4paBXCIsNyxcIuKWj+KWjuKWjeKWjOKWi+KWiuKWieKUvOKUtOKUrOKUpOKUnOKWlOKUgOKUguKWleKUjOKUkOKUlOKUmOKVrVwiXSxbXCJhMmExXCIsXCLila7ilbDila/ilZDilZ7ilarilaHil6Lil6Pil6Xil6TilbHilbLilbPvvJBcIiw5LFwi4oWgXCIsOSxcIuOAoVwiLDgsXCLljYHljYTljYXvvKFcIiwyNSxcIu+9gVwiLDIxXSxbXCJhMzQwXCIsXCLvvZfvvZjvvZnvvZrOkVwiLDE2LFwizqNcIiw2LFwizrFcIiwxNixcIs+DXCIsNixcIuOEhVwiLDEwXSxbXCJhM2ExXCIsXCLjhJBcIiwyNSxcIsuZy4nLisuHy4tcIl0sW1wiYTNlMVwiLFwi4oKsXCJdLFtcImE0NDBcIixcIuS4gOS5meS4geS4g+S5g+S5neS6huS6jOS6uuWEv+WFpeWFq+WHoOWIgOWIgeWKm+WMleWNgeWNnOWPiOS4ieS4i+S4iOS4iuS4q+S4uOWHoeS5heS5iOS5n+S5nuS6juS6oeWFgOWIg+WLuuWNg+WPieWPo+Wcn+Wjq+WkleWkp+Wls+WtkOWtkeWtk+WvuOWwj+WwouWwuOWxseW3neW3peW3seW3suW3s+W3vuW5suW7vuW8i+W8k+aJjVwiXSxbXCJhNGExXCIsXCLkuJHkuJDkuI3kuK3kuLDkuLnkuYvlsLnkuojkupHkupXkupLkupTkuqLku4Hku4Dku4Pku4bku4fku43ku4rku4vku4TlhYPlhYHlhaflha3lha7lhazlhpflh7bliIbliIfliIjli7vli77li7/ljJbljLnljYjljYfljYXljZ7ljoTlj4vlj4rlj43lo6zlpKnlpKvlpKrlpK3lrZTlsJHlsKTlsLrlsa/lt7Tlubvlu7/lvJTlvJXlv4PmiIjmiLbmiYvmiY7mlK/mlofmlpfmlqTmlrnml6Xmm7DmnIjmnKjmrKDmraLmrbnmr4vmr5Tmr5vmsI/msLTngavniKrniLbniLvniYfniZnniZvniqznjovkuJlcIl0sW1wiYTU0MFwiLFwi5LiW5LiV5LiU5LiY5Li75LmN5LmP5LmO5Lul5LuY5LuU5LuV5LuW5LuX5Luj5Luk5LuZ5Lue5YWF5YWE5YaJ5YaK5Yas5Ye55Ye65Ye45YiK5Yqg5Yqf5YyF5YyG5YyX5Yyd5Luf5Y2K5Y2J5Y2h5Y2g5Y2v5Y2u5Y675Y+v5Y+k5Y+z5Y+s5Y+u5Y+p5Y+o5Y+85Y+45Y+15Y+r5Y+m5Y+q5Y+y5Y+x5Y+w5Y+l5Y+t5Y+75Zub5Zua5aSWXCJdLFtcImE1YTFcIixcIuWkruWkseWltOWltuWtleWug+WwvOW3qOW3p+W3puW4guW4g+W5s+W5vOW8geW8mOW8l+W/heaIiuaJk+aJlOaJkuaJkeaWpeaXpuacruacrOacquacq+acreato+avjeawkeawkOawuOaxgeaxgOawvueKr+eOhOeOieeTnOeTpueUmOeUn+eUqOeUqeeUsOeUseeUsueUs+eWi+eZveearueav+ebruefm+efouefs+ekuuemvueptOeri+S4nuS4n+S5kuS5k+S5qeS6meS6pOS6puS6peS7v+S8ieS8meS8iuS8leS8jeS8kOS8keS8j+S7suS7tuS7u+S7sOS7s+S7veS8geS8i+WFieWFh+WFhuWFiOWFqFwiXSxbXCJhNjQwXCIsXCLlhbHlho3lhrDliJfliJHliJLliI7liJbliqPljIjljKHljKDljbDljbHlkInlkI/lkIzlkIrlkJDlkIHlkIvlkITlkJHlkI3lkIjlkIPlkI7lkIblkJLlm6Dlm57lm53lnLPlnLDlnKjlnK3lnKzlnK/lnKnlpJnlpJrlpLflpLjlpoTlpbjlpoPlpb3lpbnlpoLlpoHlrZflrZjlroflrojlroXlronlr7rlsJblsbnlt57luIblubblubRcIl0sW1wiYTZhMVwiLFwi5byP5byb5b+Z5b+W5oiO5oiM5oiN5oiQ5omj5omb5omY5pS25pep5peo5pes5pet5puy5puz5pyJ5py95py05pyx5py15qyh5q2k5q275rCW5rGd5rGX5rGZ5rGf5rGg5rGQ5rGV5rGh5rGb5rGN5rGO54Gw54mf54md55m+56u557Gz57O457y2576K57696ICB6ICD6ICM6ICS6ICz6IG/6IKJ6IKL6IKM6Iej6Ieq6Iez6Ie86IiM6Iib6Iif6Imu6Imy6Im+6Jmr6KGA6KGM6KGj6KW/6Zih5Liy5Lqo5L2N5L2P5L2H5L2X5L2e5Ly05L2b5L2V5Lyw5L2Q5L2R5Ly95Ly65Ly45L2D5L2U5Ly85L2G5L2jXCJdLFtcImE3NDBcIixcIuS9nOS9oOS8r+S9juS8tuS9meS9neS9iOS9muWFjOWFi+WFjeWFteWGtuWGt+WIpeWIpOWIqeWIquWIqOWKq+WKqeWKquWKrOWMo+WNs+WNteWQneWQreWQnuWQvuWQpuWRjuWQp+WRhuWRg+WQs+WRiOWRguWQm+WQqeWRiuWQueWQu+WQuOWQruWQteWQtuWQoOWQvOWRgOWQseWQq+WQn+WQrOWbquWbsOWbpOWbq+WdiuWdkeWdgOWdjVwiXSxbXCJhN2ExXCIsXCLlnYflnY7lnL7lnZDlnY/lnLvlo6/lpL7lpp3lppLlpqjlpp7lpqPlppnlppblpo3lpqTlppPlporlpqXlrZ3lrZzlrZrlrZvlrozlrovlro/lsKzlsYDlsYHlsL/lsL7lspDlspHlspTlsozlt6vluIzluo/luofluorlu7flvITlvJ/lvaTlvaLlvbflvbnlv5jlv4zlv5flv43lv7Hlv6vlv7jlv6rmiJLmiJHmioTmipfmipbmioDmibbmionmia3miormibzmib7mibnmibPmipLmia/mipjmia7mipXmipPmipHmiobmlLnmlLvmlLjml7Hmm7TmnZ/mnY7mnY/mnZDmnZHmnZzmnZbmnZ7mnYnmnYbmnaBcIl0sW1wiYTg0MFwiLFwi5p2T5p2X5q2l5q+P5rGC5rGe5rKZ5rKB5rKI5rKJ5rKF5rKb5rGq5rG65rKQ5rGw5rKM5rGo5rKW5rKS5rG95rKD5rGy5rG+5rG05rKG5rG25rKN5rKU5rKY5rKC54G254G854G954G454mi54mh54mg54uE54uC546W55Ss55Sr55S355S455qC55uv55+j56eB56eA56a/56m257O7572V6IKW6IKT6IKd6IKY6IKb6IKa6IKy6Imv6IqSXCJdLFtcImE4YTFcIixcIuiKi+iKjeimi+inkuiogOiwt+ixhuixleiynei1pOi1sOi2s+i6q+i7iui+m+i+sOi/gui/hui/hei/hOW3oemCkemCoumCqumCpumCo+mFiemHhumHjOmYsumYrumYsemYqumYrOS4puS5luS5s+S6i+S6m+S6nuS6q+S6rOS9r+S+neS+jeS9s+S9v+S9rOS+m+S+i+S+huS+g+S9sOS9teS+iOS9qeS9u+S+luS9vuS+j+S+keS9uuWFlOWFkuWFleWFqeWFt+WFtuWFuOWGveWHveWIu+WIuOWIt+WIuuWIsOWIruWItuWJgeWKvuWKu+WNkuWNlOWNk+WNkeWNpuWNt+WNuOWNueWPluWPlOWPl+WRs+WRtVwiXSxbXCJhOTQwXCIsXCLlkpblkbjlkpXlkoDlkbvlkbflkoTlkpLlkoblkbzlkpDlkbHlkbblkozlkprlkaLlkajlkovlkb3lko7lm7rlnoPlnbflnarlnanlnaHlnablnaTlnbzlpJzlpYnlpYflpYjlpYTlpZTlpr7lprvlp5Tlprnlpq7lp5Hlp4blp5Dlp43lp4vlp5Plp4rlpq/lprPlp5Llp4XlrZ/lraTlraPlrpflrprlrpjlrpzlrpnlrpvlsJrlsYjlsYVcIl0sW1wiYTlhMVwiLFwi5bGG5bK35bKh5bK45bKp5bKr5bKx5bKz5biY5bia5biW5biV5bib5biR5bm45bqa5bqX5bqc5bqV5bqW5bu25bym5byn5byp5b6A5b6B5b2/5b285b+d5b+g5b+95b+15b+/5oCP5oCU5oCv5oC15oCW5oCq5oCV5oCh5oCn5oCp5oCr5oCb5oiW5oiV5oi/5oi+5omA5om/5ouJ5ouM5ouE5oq/5ouC5oq55ouS5oub5oqr5ouT5ouU5ouL5ouI5oqo5oq95oq85ouQ5ouZ5ouH5ouN5oq15oua5oqx5ouY5ouW5ouX5ouG5oqs5ouO5pS+5pan5pa85pe65piU5piT5piM5piG5piC5piO5piA5piP5piV5piKXCJdLFtcImFhNDBcIixcIuaYh+acjeaci+adreaei+aeleadseaenOads+adt+aeh+aeneael+adr+adsOadv+aeieadvuaekOadteaemuaek+advOadquadsuaso+atpuatp+atv+awk+awm+azo+azqOazs+ayseazjOazpeays+ayveayvuayvOazouayq+azleazk+ayuOazhOayueazgeayruazl+azheazseayv+ayu+azoeazm+aziuayrOazr+aznOazluazoFwiXSxbXCJhYWExXCIsXCLngpXngo7ngpLngorngpnniKzniK3niLjniYjniafnianni4Dni47ni5nni5fni5Dnjqnnjqjnjp/njqvnjqXnlL3nlp3nlpnnlprnmoTnm4Lnm7Lnm7Tnn6Xnn73npL7npYDnpYHnp4nnp4jnqbrnqbnnq7rns77nvZTnvoznvovogIXogrrogqXogqLogrHogqHogqvogqnogrTogqrogq/oh6Xoh77oiI3oirPoip3oipnoiq3oir3oip/oirnoirHoiqzoiqXoiq/oirjoiqPoirDoir7oirfomY7ombHliJ3ooajou4vov47ov5Tov5HpgrXpgrjpgrHpgrbph4fph5HplbfploDpmJzpmYDpmL/pmLvpmYRcIl0sW1wiYWI0MFwiLFwi6ZmC6Zq56Zuo6Z2S6Z2e5Lqf5Lqt5Lqu5L+h5L615L6v5L6/5L+g5L+R5L+P5L+d5L+D5L625L+Y5L+f5L+K5L+X5L6u5L+Q5L+E5L+C5L+a5L+O5L+e5L635YWX5YaS5YaR5Yag5YmO5YmD5YmK5YmN5YmM5YmL5YmH5YuH5YuJ5YuD5YuB5YyN5Y2X5Y275Y6a5Y+b5ZKs5ZOA5ZKo5ZOO5ZOJ5ZK45ZKm5ZKz5ZOH5ZOC5ZK95ZKq5ZOBXCJdLFtcImFiYTFcIixcIuWThOWTiOWSr+WSq+WSseWSu+WSqeWSp+WSv+Wbv+WeguWei+WeoOWeo+WeouWfjuWeruWek+WlleWlkeWlj+WljuWlkOWnnOWnmOWnv+Wno+WnqOWog+WnpeWnquWnmuWnpuWogeWnu+WtqeWuo+WupuWupOWuouWupeWwgeWxjuWxj+WxjeWxi+WzmeWzkuW3t+W4neW4peW4n+W5veW6oOW6puW7uuW8iOW8reW9peW+iOW+heW+iuW+i+W+h+W+jOW+ieaAkuaAneaAoOaApeaAjuaAqOaBjeaBsOaBqOaBouaBhuaBg+aBrOaBq+aBquaBpOaJgeaLnOaMluaMieaLvOaLreaMgeaLruaLveaMh+aLseaLt1wiXSxbXCJhYzQwXCIsXCLmi6/mi6zmi77mi7TmjJHmjILmlL/mlYXmlqvmlr3ml6LmmKXmmK3mmKDmmKfmmK/mmJ/mmKjmmLHmmKTmm7fmn7/mn5Pmn7Hmn5Tmn5Dmn6zmnrbmnq/mn7Xmn6nmn6/mn4Tmn5HmnrTmn5rmn6Xmnrjmn4/mn57mn7PmnrDmn5nmn6Lmn53mn5LmrarmroPmrobmrrXmr5Lmr5fmsJ/ms4nmtIvmtLLmtKrmtYHmtKXmtIzmtLHmtJ7mtJdcIl0sW1wiYWNhMVwiLFwi5rS75rS95rS+5rS25rSb5rO15rS55rSn5rS45rSp5rSu5rS15rSO5rSr54Kr54K654Kz54Ks54Kv54Kt54K454Ku54Kk54iw54my54mv54m054up54ug54uh546354+K5467546y54+N54+A546z55Sa55St55WP55WM55WO55WL55ar55ak55al55ai55aj55m455qG55qH55qI55uI55uG55uD55uF55yB55u555u455yJ55yL55u+55u855yH55+c56CC56CU56CM56CN56WG56WJ56WI56WH56a556a656eR56eS56eL56m/56qB56u/56u957G957SC57SF57SA57SJ57SH57SE57SG57y4576O576/6ICEXCJdLFtcImFkNDBcIixcIuiAkOiAjeiAkeiAtuiDluiDpeiDmuiDg+iDhOiDjOiDoeiDm+iDjuiDnuiDpOiDneiHtOiIouiLp+iMg+iMheiLo+iLm+iLpuiMhOiLpeiMguiMieiLkuiLl+iLseiMgeiLnOiLlOiLkeiLnuiLk+iLn+iLr+iMhuiZkOiZueiZu+iZuuihjeihq+imgeinlOioiOioguiog+iynuiyoOi1tOi1s+i2tOi7jei7jOi/sOi/pui/oui/qui/pVwiXSxbXCJhZGExXCIsXCLov63ov6vov6Tov6jpg4rpg47pg4Hpg4PphYvphYrph43ploLpmZDpmYvpmYzpmY3pnaLpnanpn4vpn63pn7PpoIHpoqjpo5vpo5/pppbpppnkuZjkurPlgIzlgI3lgKPkv6/lgKblgKXkv7jlgKnlgJblgIblgLzlgJ/lgJrlgJLlgJHkv7rlgIDlgJTlgKjkv7HlgKHlgIvlgJnlgJjkv7Pkv67lgK3lgKrkv77lgKvlgInlhbzlhqTlhqXlhqLlh43lh4zlh4blh4vliZbliZzliZTliZvliZ3ljKrljb/ljp/ljp3lj5/lk6jllJDllIHllLflk7zlk6Xlk7LllIblk7rllJTlk6nlk63lk6HllInlk67lk6pcIl0sW1wiYWU0MFwiLFwi5ZOm5ZSn5ZSH5ZO95ZSP5ZyD5ZyE5Z+C5Z+U5Z+L5Z+D5aCJ5aSP5aWX5aWY5aWa5aiR5aiY5aic5aif5aib5aiT5aes5aig5aij5aip5ail5aiM5aiJ5a2r5bGY5a6w5a6z5a625a605a6u5a615a655a645bCE5bGR5bGV5bGQ5bOt5bO95bO75bOq5bOo5bOw5bO25bSB5bO05beu5bit5bir5bqr5bqt5bqn5byx5b6S5b6R5b6Q5oGZXCJdLFtcImFlYTFcIixcIuaBo+aBpeaBkOaBleaBreaBqeaBr+aChOaCn+aCmuaCjeaClOaCjOaCheaCluaJh+aLs+aMiOaLv+aNjuaMvuaMr+aNleaNguaNhuaNj+aNieaMuuaNkOaMveaMquaMq+aMqOaNjeaNjOaViOaVieaWmeaXgeaXheaZguaZieaZj+aZg+aZkuaZjOaZheaZgeabuOaclOacleacl+agoeaguOahiOahhuahk+agueahguahlOagqeais+agl+ahjOahkeagveaftOahkOahgOagvOahg+agquahheagk+agmOahgeauiuauieaut+awo+awp+awqOawpuawpOazsOa1qua2lea2iOa2h+a1pua1uOa1t+a1mea2k1wiXSxbXCJhZjQwXCIsXCLmtazmtonmta7mtZrmtbTmtanmtozmtormtbnmtoXmtaXmtpTng4rng5jng6Tng5nng4jng4/niLnnibnni7zni7nni73ni7jni7fnjobnj63nkInnj67nj6Dnj6rnj57nlZTnlZ3nlZznlZrnlZnnlr7nl4Xnl4fnlrLnlrPnlr3nlrznlrnnl4LnlrjnmovnmrDnm4rnm43nm47nnKnnnJ/nnKDnnKjnn6nnoLDnoKfnoLjnoJ3noLTnoLdcIl0sW1wiYWZhMVwiLFwi56Cl56Ct56Cg56Cf56Cy56WV56WQ56Wg56Wf56WW56We56Wd56WX56Wa56ek56ej56en56ef56em56ep56eY56qE56qI56uZ56yG56yR57KJ57Sh57SX57SL57SK57Sg57Si57SU57SQ57SV57Sa57Sc57SN57SZ57Sb57y6572f576U57+F57+B6ICG6ICY6ICV6ICZ6ICX6IC96IC/6IOx6ISC6IOw6ISF6IOt6IO06ISG6IO46IOz6ISI6IO96ISK6IO86IOv6Iet6Ies6IiA6IiQ6Iiq6Iir6Iio6Iis6Iq76Iyr6I2S6I2U6I2K6Iy46I2Q6I2J6Iy16Iy06I2P6Iyy6Iy56Iy26IyX6I2A6Iyx6Iyo6I2DXCJdLFtcImIwNDBcIixcIuiZlOiaiuiaquiak+iapOiaqeiajOiao+ianOihsOiht+iigeiiguihveihueiomOiokOiojuiojOioleioiuiol+iok+ioluioj+iokeixiOixuuixueiyoeiyoui1t+i6rOi7kui7lOi7j+i+semAgemAhui/t+mAgOi/uui/tOmAg+i/vemAhei/uOmClemDoemDnemDoumFkumFjemFjOmHmOmHnemHl+mHnOmHmemWg+mZoumZo+mZoVwiXSxbXCJiMGExXCIsXCLpmZvpmZ3pmaTpmZjpmZ7pmrvpo6Lppqzpqqjpq5jprKXprLLprLzkub7lgbrlgb3lgZzlgYflgYPlgYzlgZrlgYnlgaXlgbblgY7lgZXlgbXlgbTlgbflgY/lgI/lga/lga3lhZzlhpXlh7Dliarlia/li5Lli5nli5jli5XljJDljI/ljJnljL/ljYDljL7lj4Pmm7zllYbllarllabllYTllZ7llaHllYPllYrllLHllZbllY/llZXllK/llaTllLjllK7llZzllKzllaPllLPllYHllZflnIjlnIvlnInln5/loIXloIrloIbln6Dln6Tln7rloILloLXln7fln7nlpKDlpaLlqLblqYHlqYnlqablqarlqYBcIl0sW1wiYjE0MFwiLFwi5ai85ami5ama5amG5amK5a2w5a+H5a+F5a+E5a+C5a6/5a+G5bCJ5bCI5bCH5bGg5bGc5bGd5bSH5bSG5bSO5bSb5bSW5bSi5bSR5bSp5bSU5bSZ5bSk5bSn5bSX5bei5bi45bi25biz5bi35bq35bq45bq25bq15bq+5by15by35b2X5b2s5b2p5b2r5b6X5b6Z5b6e5b6Y5b6h5b6g5b6c5oG/5oKj5oKJ5oKg5oKo5oOL5oK05oOm5oK9XCJdLFtcImIxYTFcIixcIuaDheaCu+aCteaDnOaCvOaDmOaDleaDhuaDn+aCuOaDmuaDh+aImuaIm+aJiOaOoOaOp+aNsuaOluaOouaOpeaNt+aNp+aOmOaOquaNseaOqeaOieaOg+aOm+aNq+aOqOaOhOaOiOaOmeaOoeaOrOaOkuaOj+aOgOaNu+aNqeaNqOaNuuaVneaVluaVkeaVmeaVl+WVn+aVj+aVmOaVleaVlOaWnOaWm+aWrOaXj+aXi+aXjOaXjuaZneaZmuaZpOaZqOaZpuaZnuabueWLl+acm+aigeair+aiouaik+aiteahv+ahtuaiseaip+ail+aisOaig+ajhOaireaihuaiheailOaineaiqOain+aioeaiguassuauulwiXSxbXCJiMjQwXCIsXCLmr6vmr6zmsKvmto7mtrzmt7Pmt5nmtrLmt6Hmt4zmt6Tmt7vmt7rmuIXmt4fmt4vmtq/mt5Hmtq7mt57mt7nmtrjmt7fmt7Xmt4Xmt5LmuJrmtrXmt5rmt6vmt5jmt6rmt7Hmt67mt6jmt4bmt4Tmtqrmt6zmtr/mt6bng7nnhInnhIrng73ng6/niL3nib3nioHnjJznjJvnjJbnjJPnjJnnjofnkIXnkIrnkIPnkIbnj77nkI3nk6Dnk7ZcIl0sW1wiYjJhMVwiLFwi55O355Sc55Si55Wl55Wm55Wi55Ww55aP55eU55eV55a155eK55eN55qO55uU55uS55ub55y355y+55y855y255y455y656Gr56GD56GO56Wl56Wo56Wt56e756qS56qV56yg56yo56yb56ys56ym56yZ56ye56yu57KS57KX57KV57WG57WD57Wx57Su57S557S857WA57Sw57Sz57WE57Sv57WC57Sy57Sx57y9576e576a57+M57+O57+S6ICc6IGK6IGG6ISv6ISW6ISj6ISr6ISp6ISw6ISk6IiC6Ii16Ii36Ii26Ii56I6O6I6e6I6Y6I246I6i6I6W6I696I6r6I6S6I6K6I6T6I6J6I6g6I236I276I28XCJdLFtcImIzNDBcIixcIuiOhuiOp+iZleW9quibh+ibgOiatuibhOiateibhuibi+iaseiar+ibieihk+iinuiiiOiiq+iikuiiluiijeiii+imk+imj+ioquioneioo+iopeioseioreion+iom+ioouixieixmuiyqeiyrOiyq+iyqOiyquiyp+i1p+i1pui2vui2uui7m+i7n+mAmemAjemAmumAl+mAo+mAn+mAnemAkOmAlemAnumAoOmAj+mAoumAlumAm+mAlFwiXSxbXCJiM2ExXCIsXCLpg6jpg63pg73phZfph47ph7Xph6bph6Pph6fph63ph6nplonpmarpmbXpmbPpmbjpmbDpmbTpmbbpmbfpmazpm4Dpm6rpm6nnq6Dnq5/poILpoIPprZrps6XpubXpub/puqXpurvlgqLlgo3lgoXlgpnlgpHlgoDlgpblgpjlgprmnIDlh7HlibLlibTlibXlianli57li53li5vljZrljqXllbvlloDllqfllbzllorllp3llpjlloLllpzllqrllpTllofllovlloPllrPllq7llp/llL7llrLllprllrvllqzllrHllb7llonllqvllpnlnI3loK/loKrloLTloKTloLDloLHloKHloJ3loKDlo7nlo7rlpaBcIl0sW1wiYjQ0MFwiLFwi5am35aqa5am/5aqS5aqb5aqn5a2z5a2x5a+S5a+M5a+T5a+Q5bCK5bCL5bCx5bWM5bWQ5bS05bWH5be95bmF5bi95bmA5bmD5bm+5buK5buB5buC5buE5by85b2t5b6p5b6q5b6o5oOR5oOh5oKy5oK25oOg5oSc5oSj5oO65oSV5oOw5oO75oO05oWo5oOx5oSO5oO25oSJ5oSA5oSS5oif5omJ5o6j5o6M5o+P5o+A5o+p5o+J5o+G5o+NXCJdLFtcImI0YTFcIixcIuaPkuaPo+aPkOaPoeaPluaPreaPruaNtuaPtOaPquaPm+aRkuaPmuaPueaVnuaVpuaVouaVo+aWkeaWkOaWr+aZruaZsOaZtOaZtuaZr+aakeaZuuaZvuaZt+abvuabv+acn+acneajuuajleajoOajmOajl+akheajn+ajteajruajp+ajueajkuajsuajo+aji+ajjeakjeakkuakjuajieajmualruaju+asvuasuuasveaumOauluauvOavr+awruawr+awrOa4r+a4uOa5lOa4oea4sua5p+a5iua4oOa4pea4o+a4m+a5m+a5mOa4pOa5lua5rua4rea4pua5r+a4tOa5jea4uua4rOa5g+a4nea4vua7i1wiXSxbXCJiNTQwXCIsXCLmuonmuJnmuY7muaPmuYTmubLmuanmuZ/nhJnnhJrnhKbnhLDnhKHnhLbnha7nhJzniYznioTnioDnjLbnjKXnjLTnjKnnkLrnkKrnkLPnkKLnkKXnkLXnkLbnkLTnkK/nkJvnkKbnkKjnlKXnlKbnlavnlarnl6Lnl5vnl6Pnl5nnl5jnl57nl6DnmbvnmbznmpbnmpPnmrTnm5znnY/nn63noZ3noaznoa/nqI3nqIjnqIvnqIXnqIDnqphcIl0sW1wiYjVhMVwiLFwi56qX56qW56ul56uj562J562W562G562Q562S562U562N562L562P562R57Kf57Kl57We57WQ57Wo57WV57Sr57Wu57Wy57Wh57Wm57Wi57Ww57Wz5ZaE57+U57+V6ICL6IGS6IKF6IWV6IWU6IWL6IWR6IWO6IS56IWG6IS+6IWM6IWT6IW06IiS6Iic6I+p6JCD6I+46JCN6I+g6I+F6JCL6I+B6I+v6I+x6I+06JGX6JCK6I+w6JCM6I+M6I+96I+y6I+K6JC46JCO6JCE6I+c6JCH6I+U6I+f6Jmb6Juf6JuZ6Jut6JuU6Jub6Juk6JuQ6Jue6KGX6KOB6KOC6KKx6KaD6KaW6Ki76Kmg6KmV6Kme6Ki86KmBXCJdLFtcImI2NDBcIixcIuiplOipm+ipkOiphuiotOiouuiotuipluixoeiyguiyr+iyvOiys+iyveizgeiyu+izgOiytOiyt+iytuiyv+iyuOi2iui2hei2gei3jui3nei3i+i3mui3kei3jOi3m+i3hui7u+i7uOi7vOi+nOmArumAtemAsemAuOmAsumAtumEgumDtemEiemDvumFo+mFpemHj+mIlOmIlemIo+mIiemInumIjemIkOmIh+mIkemWlOmWj+mWi+mWkVwiXSxbXCJiNmExXCIsXCLplpPplpLplo7pmorpmo7pmovpmb3pmoXpmobpmo3pmbLpmoTpm4Hpm4Xpm4Tpm4bpm4fpm6/pm7Lpn4zpoIXpoIbpoIjpo6fpo6rpo6/po6npo7Lpo63ppq7ppq3pu4Ppu43pu5HkuoLlgq3lgrXlgrLlgrPlg4Xlgr7lgqzlgrflgrvlgq/lg4flib/libflib3li5/li6bli6Tli6Lli6PljK/ll5/ll6jll5Pll6bll47ll5zll4fll5Hll6Pll6Tll6/ll5rll6Hll4Xll4bll6Xll4nlnJLlnJPloZ7loZHloZjloZfloZrloZTloavloYzloa3loYrloaLloZLloYvlpaflq4Hlq4nlq4zlqr7lqr3lqrxcIl0sW1wiYjc0MFwiLFwi5aqz5auC5aqy5bWp5bWv5bmM5bm55buJ5buI5byS5b2Z5b6s5b6u5oSa5oSP5oWI5oSf5oOz5oSb5oO55oSB5oSI5oWO5oWM5oWE5oWN5oS+5oS05oSn5oSN5oSG5oS35oih5oii5pCT5pC+5pCe5pCq5pCt5pC95pCs5pCP5pCc5pCU5pCN5pC25pCW5pCX5pCG5pWs5paf5paw5pqX5pqJ5pqH5pqI5pqW5pqE5pqY5pqN5pyD5qaU5qWtXCJdLFtcImI3YTFcIixcIualmualt+aloOallOalteaksOamgualiualqOalq+alnualk+alueamhualnealo+alm+ath+atsuavgOauv+avk+avvea6oua6r+a7k+a6tua7gua6kOa6nea7h+a7hea6pea6mOa6vOa6uua6q+a7kea6lua6nOa7hOa7lOa6qua6p+a6tOeFjueFmeeFqeeFpOeFieeFp+eFnOeFrOeFpueFjOeFpeeFnueFhueFqOeFlueIuueJkueMt+eNheeMv+eMvueRr+eRmueRleeRn+eRnueRgeeQv+eRmeeRm+eRnOeVtueVuOeYgOeXsOeYgeeXsueXseeXuueXv+eXtOeXs+ebnuebn+edm+edq+edpuednuedo1wiXSxbXCJiODQwXCIsXCLnnbnnnarnnaznnZznnaXnnajnnaLnn67noo7norDnopfnopjnooznoonnobznopHnopPnob/npbrnpb/npoHokKznpr3nqJznqJrnqKDnqJTnqJ/nqJ7nqp/nqqDnrbfnr4DnraDnra7nrafnsrHnsrPnsrXntpPntbnntpHntoHnto/ntZvnva7nvannvarnvbLnvqnnvqjnvqTogZbogZjogobogoTohbHohbDohbjohaXoha7ohbPohatcIl0sW1wiYjhhMVwiLFwi6IW56IW66IWm6IiF6ImH6JKC6JG36JC96JCx6JG16JGm6JGr6JGJ6JGs6JGb6JC86JC16JGh6JGj6JGp6JGt6JGG6Jme6Jmc6Jmf6Ju56JyT6JyI6JyH6JyA6Ju+6Ju76JyC6JyD6JyG6JyK6KGZ6KOf6KOU6KOZ6KOc6KOY6KOd6KOh6KOK6KOV6KOS6Kac6Kej6Kmr6Kmy6Kmz6Kmm6Kmp6Kmw6KqH6Km86Kmj6Kqg6Kmx6KqF6Kmt6Kmi6Kmu6Kms6Km56Km76Ki+6Kmo6LGi6LKK6LKJ6LOK6LOH6LOI6LOE6LKy6LOD6LOC6LOF6Leh6Lef6Leo6Lev6Lez6Le66Leq6Lek6Lem6Lqy6LyD6LyJ6Lu+6LyKXCJdLFtcImI5NDBcIixcIui+n+i+sumBi+mBiumBk+mBgumBlOmAvOmBlemBkOmBh+mBj+mBjumBjemBkemAvumBgemEkumEl+mFrOmFqumFqemHiemIt+mJl+mIuOmIvemJgOmIvumJm+mJi+mJpOmJkemItOmJiemJjemJhemIuemIv+mJmumWmOmamOmalOmalembjembi+mbiembiumbt+mbu+mbuembtumdlumdtOmdtumgkOmgkemgk+mgiumgkumgjOmjvOmjtFwiXSxbXCJiOWExXCIsXCLpo73po77pprPpprHpprTpq6Hps6npuoLpvI7pvJPpvKDlg6flg67lg6Xlg5blg63lg5rlg5Xlg4/lg5Hlg7Hlg47lg6nlhaLlh7PlioPlioLljLHljq3ll77lmIDlmJvlmJfll73lmJTlmIblmInlmI3lmI7ll7flmJblmJ/lmIjlmJDll7blnJjlnJblobXlob7looPlopPloorlobnlooXlob3lo73lpKXlpKLlpKTlparlpanlq6Hlq6blq6nlq5flq5blq5jlq6PlrbXlr57lr6flr6Hlr6Xlr6blr6jlr6Llr6Tlr5/lsI3lsaLltoTltofluZvluaPluZXluZfluZTlu5Plu5blvIrlvYblvbDlvrnmhYdcIl0sW1wiYmE0MFwiLFwi5oS/5oWL5oW35oWi5oWj5oWf5oWa5oWY5oW15oiq5pKH5pGY5pGU5pKk5pG45pGf5pG65pGR5pGn5pC05pGt5pG75pWy5pah5peX5peW5pqi5pqo5pqd5qac5qao5qaV5qeB5qau5qeT5qeL5qab5qa35qa75qar5qa05qeQ5qeN5qat5qeM5qam5qeD5qaj5q2J5q2M5rCz5ryz5ryU5ru+5ryT5ru05ryp5ry+5ryg5rys5ryP5ryC5ryiXCJdLFtcImJhYTFcIixcIua7v+a7r+a8hua8sea8uOa8sua8o+a8lea8q+a8r+a+iOa8qua7rOa8gea7sua7jOa7t+eGlOeGmeeFveeGiueGhOeGkueIvueKkueKlueNhOeNkOeRpOeRo+eRqueRsOeRreeUhOeWkeeYp+eYjeeYi+eYieeYk+eboeebo+eehOedveedv+edoeejgeein+eip+eis+eiqeeio+emjuemj+emjeeorueoseeqqueqqeerreerr+euoeeuleeui+etteeul+euneeulOeuj+euuOeuh+euhOeyueeyveeyvue2u+e2sOe2nOe2vee2vue2oOe3iue2tOe2sue2see2uue2oue2v+e2tee2uOe2ree3kue3h+e2rFwiXSxbXCJiYjQwXCIsXCLnvbDnv6Dnv6Hnv5/ogZ7ogZrogofohZDohoDoho/ohojohorohb/ohoLoh6foh7roiIfoiJToiJ7oiYvok4nokr/ok4bok4Tokpnokp7okrLokpzok4vokrjok4Dok5PokpDokrzok5Hok4ronL/onJzonLvonKLonKXonLTonJjonZXonLfonKnoo7PopILoo7Too7noo7joo73oo6jopJroo6/oqqboqozoqp7oqqPoqo3oqqHoqpPoqqRcIl0sW1wiYmJhMVwiLFwi6Kqq6Kql6Kqo6KqY6KqR6Kqa6Kqn6LGq6LKN6LKM6LOT6LOR6LOS6LWr6LaZ6LaV6Le86LyU6LyS6LyV6LyT6L6j6YGg6YGY6YGc6YGj6YGZ6YGe6YGi6YGd6YGb6YSZ6YSY6YSe6YW16YW46YW36YW06Ym46YqA6YqF6YqY6YqW6Ym76YqT6Yqc6Yqo6Ym86YqR6Zah6Zao6Zap6Zaj6Zal6Zak6ZqZ6Zqc6Zqb6ZuM6ZuS6ZyA6Z286Z6F6Z+26aCX6aCY6aKv6aKx6aSD6aSF6aSM6aSJ6aeB6aqv6aqw6aum6a2B6a2C6bO06bO26bOz6bq86by76b2K5YSE5YSA5YO75YO15YO55YSC5YSI5YSJ5YSF5YecXCJdLFtcImJjNDBcIixcIuWKh+WKiOWKieWKjeWKiuWLsOWOsuWYruWYu+WYueWYsuWYv+WYtOWYqeWZk+WZjuWZl+WZtOWYtuWYr+WYsOWigOWin+WinuWis+WinOWiruWiqeWipuWlreWsieWru+Wsi+WrteWsjOWsiOWvruWvrOWvqeWvq+WxpOWxpeW2neW2lOW5ouW5n+W5oeW7ouW7muW7n+W7neW7o+W7oOW9iOW9seW+t+W+teaFtuaFp+aFruaFneaFleaGglwiXSxbXCJiY2ExXCIsXCLmhbzmhbDmhavmhb7mhqfmhpDmhqvmho7mhqzmhprmhqTmhpTmhq7miK7mkanmka/mkbnmkp7mkrLmkojmkpDmkrDmkqXmkpPmkpXmkqnmkpLmkq7mkq3mkqvmkprmkqzmkpnmkqLmkrPmlbXmlbfmlbjmmq7mmqvmmrTmmrHmqKPmqJ/mp6jmqIHmqJ7mqJnmp73mqKHmqJPmqIrmp7PmqILmqIXmp63mqJHmrZDmrY7mrqTmr4Xmr4bmvL/mvbzmvoTmvZHmvabmvZTmvobmva3mvZvmvbjmva7mvo7mvbrmvbDmvaTmvpfmvZjmu5Xmva/mvaDmvZ/nhp/nhqznhrHnhqjniZbnipvnjY7njZfnkannkovnkoNcIl0sW1wiYmQ0MFwiLFwi55G+55KA55W/55ig55ip55if55ik55im55ih55ii55qa55q655uk556O556H556M556R556L56OL56OF56K656OK56K+56OV56K856OQ56i/56i856mA56i956i356i756qv56qu566t566x56+E566056+G56+H56+B566g56+M57OK57eg57e057ev57e757eY57es57ed57eo57ej57ea57ee57ep57ae57eZ57ey57e557215723576vXCJdLFtcImJkYTFcIixcIue/qeiApuiGm+iGnOiGneiGoOiGmuiGmOiUl+iUveiUmuiTruiUrOiUreiUk+iUkeiUo+iUoeiUlOiTrOiUpeiTv+iUhuieguidtOidtuidoOidpuiduOidqOidmeidl+idjOidk+ihm+ihneikkOikh+ikkuikk+ikleikiuiqvOirkuirh+irhOiqleiri+iruOiqsuirieirguiqv+iqsOirluirjeiqtuiqueirm+ixjOixjuixrOizoOiznuizpuizpOizrOizreizouizo+iznOizquizoei1rei2n+i2o+i4q+i4kOi4nei4oui4j+i4qei4n+i4oei4nui6uui8nei8m+i8n+i8qei8pui8qui8nOi8nlwiXSxbXCJiZTQwXCIsXCLovKXpganpga7pgajpga3pgbfphLDphK3phKfphLHphofphonphovphoPpi4Xpirvpirfpi6rpiqzpi6Tpi4HpirPpirzpi5Lpi4fpi7DpirLplq3plrHpnITpnIbpnIfpnInpnaDpno3pnovpno/poKHpoKvpoJzporPppIrppJPppJLppJjpp53pp5Dpp5/pp5vpp5Hpp5Xpp5Lpp5npqrfpq67pq6/prKfprYXprYTprbfpra/ptIbptIlcIl0sW1wiYmVhMVwiLFwi6bSD6bqp6bq+6buO5aKo6b2S5YSS5YSY5YSU5YSQ5YSV5YaA5Yaq5Yed5YqR5YqT5Yuz5ZmZ5Zmr5Zm55Zmp5Zmk5Zm45Zmq5Zmo5Zml5Zmx5Zmv5Zms5Zmi5Zm25aOB5aK+5aOH5aOF5aWu5ayd5ay05a245a+w5bCO5b2K5oay5oaR5oap5oaK5oeN5oa25oa+5oeK5oeI5oiw5pOF5pOB5pOL5pK75pK85pOa5pOE5pOH5pOC5pON5pK/5pOS5pOU5pK+5pW05puG5puJ5pq55puE5puH5pq45qi95qi45qi65qmZ5qmr5qmY5qi55qmE5qmi5qmh5qmL5qmH5qi15qmf5qmI5q2Z5q235rCF5r+C5r6x5r6hXCJdLFtcImJmNDBcIixcIua/g+a+pOa/gea+p+a+s+a/gOa+uea+tua+pua+oOa+tOeGvueHieeHkOeHkueHiOeHleeGueeHjueHmeeHnOeHg+eHhOeNqOeSnOeSo+eSmOeSn+eSnueToueUjOeUjeeYtOeYuOeYuuebp+ebpeeeoOeenueen+eepeejqOejmuejrOejp+empuepjeepjuephuepjOepi+equuevmeewkeevieevpOevm+evoeevqeevpuezleezlue4ilwiXSxbXCJiZmExXCIsXCLnuJHnuIjnuJvnuKPnuJ7nuJ3nuInnuJDnvbnnvrLnv7Dnv7Hnv67ogKjohrPohqnohqjoh7voiIjoiZjoiZnolYrolZnolYjolajolanolYPolYnola3olarolZ7onoPonp/onp7onqLono3ooaHopKropLLopKXopKvopKHopqropqboq6boq7roq6voq7HorIDoq5zoq6foq67oq77orIHorILoq7foq63oq7Poq7boq7zosavosa3ospPos7TouYTouLHouLTouYLouLnouLXovLvovK/ovLjovLPovqjovqbpgbXpgbTpgbjpgbLpgbzpgbrphLTphpLpjKDpjLbpi7jpjLPpjK/pjKLpi7zpjKvpjITpjJpcIl0sW1wiYzA0MFwiLFwi6YyQ6Yym6Yyh6YyV6Yyu6YyZ6Za76Zqn6Zqo6Zqq6ZuV6ZyO6ZyR6ZyW6ZyN6ZyT6ZyP6Z2b6Z2c6Z2m6Z6Y6aCw6aC46aC76aC36aCt6aC56aCk6aSQ6aSo6aSe6aSb6aSh6aSa6aet6aei6aex6aq46aq86au76aut6ayo6a6R6bSV6bSj6bSm6bSo6bSS6bSb6buY6buU6b6N6b6c5YSq5YSf5YSh5YSy5Yu15ZqO5ZqA5ZqQ5ZqF5ZqHXCJdLFtcImMwYTFcIixcIuWaj+WjleWjk+WjkeWjjuWssOWsquWspOWtuuWwt+WxqOW2vOW2uuW2veW2uOW5q+W9jOW+veaHieaHguaHh+aHpuaHi+aIsuaItOaTjuaTiuaTmOaToOaTsOaTpuaTrOaTseaTouaTreaWguaWg+abmeabluaqgOaqlOaqhOaqouaqnOarm+aqo+apvuaql+aqkOaqoOatnOauruavmuawiOa/mOa/sea/n+a/oOa/m+a/pOa/q+a/r+a+gOa/rOa/oea/qea/lea/rua/sOeHp+eHn+eHrueHpueHpeeHreeHrOeHtOeHoOeIteeJhueNsOeNsueSqeeSsOeSpueSqOeZhueZgueZjOebquees+eequeesOeerFwiXSxbXCJjMTQwXCIsXCLnnqfnnq3nn6/no7fno7rno7Tno6/npIHnpqfnpqrnqZfnqr/nsIfnsI3nr77nr7fnsIznr6Dns6Dns5zns57ns6Lns5/ns5nns53nuK7nuL7nuYbnuLfnuLLnuYPnuKvnuL3nuLHnuYXnuYHnuLTnuLnnuYjnuLXnuL/nuK/nvYTnv7Pnv7zogbHogbLogbDoga/ogbPoh4boh4Pohrroh4Loh4Dohr/ohr3oh4nohr7oh6joiInoibHolqpcIl0sW1wiYzFhMVwiLFwi6JaE6JW+6Jac6JaR6JaU6Jav6Jab6JaH6Jao6JaK6Jmn6J+A6J+R6J6z6J+S6J+G6J6r6J676J666J+I6J+L6KS76KS26KWE6KS46KS96Kas6KyO6KyX6KyZ6Kyb6KyK6Kyg6Kyd6KyE6KyQ6LGB6LC/6LGz6LO66LO96LO86LO46LO76Lao6LmJ6LmL6LmI6LmK6L2E6Ly+6L2C6L2F6Ly/6YG/6YG96YKE6YKB6YKC6YKA6YS56Yaj6Yae6Yac6Y2N6Y6C6Yyo6Y216Y2K6Y2l6Y2L6YyY6Y2+6Y2s6Y2b6Y2w6Y2a6Y2U6ZeK6ZeL6ZeM6ZeI6ZeG6Zqx6Zq46ZuW6Zyc6Zye6Z6g6Z+T6aGG6aK26aS16aiBXCJdLFtcImMyNDBcIixcIumnv+murumuq+muqumurem0u+m0v+m6i+m7j+m7num7nOm7nem7m+m8vum9i+WPouWaleWaruWjmeWjmOWsuOW9neaHo+aIs+aTtOaTsuaTvuaUhuaTuuaTu+aTt+aWt+abnOacpuaqs+aqrOarg+aqu+aquOarguaqruaqr+atn+atuOaur+eAieeAi+a/vueAhua/uueAkeeAj+eHu+eHvOeHvueHuOeNt+eNteeSp+eSv+eUleeZlueZmFwiXSxbXCJjMmExXCIsXCLnmZLnnr3nnr/nnrvnnrznpI7npq7nqaHnqaLnqaDnq4Tnq4XnsKvnsKfnsKrnsJ7nsKPnsKHns6fnuZTnuZXnuZ7nuZrnuaHnuZLnuZnnvYjnv7nnv7vogbfogbboh43oh4/oiIrol4/olqnol43ol5Dol4nolrDolrrolrnolqbon6/on6zon7Lon6DopoboprLop7TorKjorLnorKzorKvosZDotIXouZnouaPouabouaTouZ/ouZXou4DovYnovY3pgofpgoPpgojphqvphqzph5DpjpTpjorpjpbpjqLpjrPpjq7pjqzpjrDpjpjpjprpjpfpl5Tpl5bpl5Dpl5Xpm6Lpm5zpm5npm5vpm57pnKTpnqPpnqZcIl0sW1wiYzM0MFwiLFwi6Z6t6Z+56aGN6aGP6aGM6aGO6aGT6aK66aS+6aS/6aS96aSu6aal6aiO6auB6ayD6ayG6a2P6a2O6a2N6a+K6a+J6a+96a+I6a+A6bWR6bWd6bWg6bug6byV6bys5YSz5Zql5aOe5aOf5aOi5a+16b6Q5bus5oey5oe35oe25oe15pSA5pSP5pug5pud5qul5qud5qua5quT54Cb54Cf54Co54Ca54Cd54CV54CY54iG54iN54mY54qi5424XCJdLFtcImMzYTFcIixcIueNuueSveeTiueTo+eWh+eWhueZn+eZoeefh+ekmeemseepq+epqeewvuewv+ewuOewveewt+exgOe5q+e5ree5uee5qee5que+hee5s+e+tue+uee+uOiHmOiXqeiXneiXquiXleiXpOiXpeiXt+ifu+igheigjeifueifvuiloOiln+illuilnuitgeitnOitmOitieitmuitjuitj+ithuitmei0iOi0iui5vOi5sui6h+i5tui5rOi5uui5tOi9lOi9jui+remCiumCi+mGsemGrumPoemPkemPn+mPg+mPiOmPnOmPnemPlumPoumPjemPmOmPpOmPl+mPqOmXnOmatOmbo+mcqumcp+mdoemfnOmfu+mhnlwiXSxbXCJjNDQwXCIsXCLpoZjpoZvporzppYXppYnpqJbpqJnprI3pr6jpr6fpr5bpr5vptonptaHptbLptarptazpupLpupfpupPpurTli7jlmqjlmrflmrblmrTlmrzlo6TlrYDlrYPlrb3lr7blt4nmh7jmh7rmlJjmlJTmlJnmm6bmnKfmq6zngL7ngLDngLLniJDnjbvnk4/nmaLnmaXnpKbnpKrnpKznpKvnq4fnq7bnsYznsYPnsY3ns6/ns7Dovq7nub3nubxcIl0sW1wiYzRhMVwiLFwi57qC572M6ICA6Iea6Imm6Je76Je56JiR6Je66JiG6JiL6JiH6JiK6KCU6KCV6KWk6Ka66Ke46K2w6K2s6K2m6K2v6K2f6K2r6LSP6LSN6LqJ6LqB6LqF6LqC6Ya06YeL6ZCY6ZCD6Y+96Zeh6Zyw6aOE6aWS6aWR6aao6air6aiw6ai36ai16bCT6bCN6bm56bq16buo6byv6b2f6b2j6b2h5YS35YS45ZuB5ZuA5ZuC5aSU5bGs5beN5oe85oe+5pSd5pSc5paV5pup5qu75qyE5qu65q6y54GM54ib54qn55OW55OU55mp55+T57GQ57qP57qM57686JiX6Jit6Jia6KCj6KCi6KCh6KCf6KWq6KWs6Ka96K20XCJdLFtcImM1NDBcIixcIuitt+itvei0k+i6iui6jei6i+i9n+i+r+mGuumQrumQs+mQtemQuumQuOmQsumQq+mXoumcuOmcuemcsumfv+mhp+mhpemll+mphempg+mpgOmovumrj+mtlOmtkemwremwpem2r+m2tOm3gum2uOm6nem7r+m8mem9nOm9pum9p+WEvOWEu+WbiOWbiuWbieWtv+W3lOW3kuW9juaHv+aUpOasiuatoeeBkeeBmOeOgOeTpOeWiueZrueZrFwiXSxbXCJjNWExXCIsXCLnprPnsaDnsZ/ogb7ogb3oh5/opbLopa/op7zoroDotJbotJfoupHoupPovaHphYjpkYTpkZHpkZLpnL3pnL7pn4Ppn4HpoavppZXpqZXpqY3pq5LprJrpsYnpsLHpsL7psLvpt5Ppt5fpvLTpvazpvarpvpTlm4zlt5bmiIDmlKPmlKvmlKrmm6zmrJDnk5rnq4rnsaTnsaPnsaXnupPnupbnupToh6LomLjomL/ooLHororpgpDpgo/pkaPpkaDpkaTpnajpoa/ppZzpqZrpqZvpqZfpq5Ppq5Tpq5HpsZTpsZfpsZbpt6Xpup/pu7Tlm5Hlo6nmlKzngZ7nmbHnmbLnn5fnvZDnvojooLbooLnooaLorpPorpJcIl0sW1wiYzY0MFwiLFwi6K6W6Im36LSb6YeA6ZGq6Z2C6Z2I6Z2E6Z+G6aGw6amf6ayi6a2Y6bGf6be56be66bm86bm96byH6b236b2y5buz5qyW54Gj57Gs57Gu6KC76KeA6Lqh6YeB6ZGy6ZGw6aGx6aWe6auW6ayj6buM54Gk55+a6K6a6ZG36Z+J6ami6aml57qc6K6c6Lqq6YeF6ZG96ZG+6ZG86bG36bG46bu36LGU6ZG/6bia54io6amq6ayx6bib6bie57GyXCJdLFtcImM5NDBcIixcIuS5guS5nOWHteWMmuWOguS4h+S4jOS5h+S6jeWbl++ojOWxruW9s+S4j+WGh+S4juS4ruS6k+S7guS7ieS7iOWGmOWLvOWNrOWOueWcoOWkg+WkrOWwkOW3v+aXoeaus+avjOawlOeIv+S4seS4vOS7qOS7nOS7qeS7oeS7neS7muWIjOWMnOWNjOWcouWco+Wkl+Wkr+WugeWuhOWwkuWwu+WxtOWxs+W4hOW6gOW6guW/ieaIieaJkOawlVwiXSxbXCJjOWExXCIsXCLmsLbmsYPmsL/msLvniq7nirDnjornprjogorpmJ7kvI7kvJjkvKzku7XkvJTku7HkvIDku7fkvIjkvJ3kvILkvIXkvKLkvJPkvITku7TkvJLlhrHliJPliInliJDliqbljKLljJ/ljY3ljorlkIflm6Hlm5/lnK7lnKrlnLTlpLzlpoDlpbzlpoXlpbvlpb7lpbflpb/lrZblsJXlsKXlsbzlsbrlsbvlsb7lt5/lubXluoTlvILlvJrlvbTlv5Xlv5Tlv4/miZzmiZ7miaTmiaHmiabmiaLmiZnmiaDmiZrmiaXml6/ml67mnL7mnLnmnLjmnLvmnLrmnL/mnLzmnLPmsJjmsYbmsZLmsZzmsY/msYrmsZTmsYtcIl0sW1wiY2E0MFwiLFwi5rGM54Gx54me54q054q1546O55Sq55m/56m1572R6Im46Im86IqA6Im96Im/6JmN6KW+6YKZ6YKX6YKY6YKb6YKU6Zii6Zik6Zig6Zij5L2W5Ly75L2i5L2J5L2T5L2k5Ly+5L2n5L2S5L2f5L2B5L2Y5Lyt5Lyz5Ly/5L2h5YaP5Ya55Yic5Yie5Yih5Yqt5Yqu5YyJ5Y2j5Y2y5Y6O5Y6P5ZCw5ZC35ZCq5ZGU5ZGF5ZCZ5ZCc5ZCl5ZCYXCJdLFtcImNhYTFcIixcIuWQveWRj+WRgeWQqOWQpOWRh+WbruWbp+WbpeWdgeWdheWdjOWdieWdi+WdkuWkhuWlgOWmpuWmmOWmoOWml+WmjuWmouWmkOWmj+Wmp+WmoeWujuWukuWwqOWwquWyjeWyj+WyiOWyi+WyieWykuWyiuWyhuWyk+WyleW3oOW4iuW4juW6i+W6ieW6jOW6iOW6jeW8heW8neW9uOW9tuW/kuW/keW/kOW/reW/qOW/ruW/s+W/oeW/pOW/o+W/uuW/r+W/t+W/u+aAgOW/tOaIuuaKg+aKjOaKjuaKj+aKlOaKh+aJseaJu+aJuuaJsOaKgeaKiOaJt+aJveaJsuaJtOaUt+aXsOaXtOaXs+aXsuaXteadheadh1wiXSxbXCJjYjQwXCIsXCLmnZnmnZXmnYzmnYjmnZ3mnY3mnZrmnYvmr5DmsJnmsJrmsbjmsafmsavmsoTmsovmso/msbHmsa/msanmsprmsa3msofmspXmspzmsabmsbPmsaXmsbvmso7ngbTngbrniaPnir/nir3ni4Pni4bni4Hnirrni4XnjpXnjpfnjpPnjpTnjpLnlLrnlLnnlpTnlpXnmoHnpL3ogLTogpXogpnogpDogpLogpzoipDoio/oioXoio7oipHoipNcIl0sW1wiY2JhMVwiLFwi6IqK6IqD6IqE6LG46L+J6L6/6YKf6YKh6YKl6YKe6YKn6YKg6Ziw6Zio6Ziv6Zit5Liz5L6Y5L285L6F5L295L6A5L6H5L225L205L6J5L6E5L235L2M5L6X5L2q5L6a5L255L6B5L245L6Q5L6c5L6U5L6e5L6S5L6C5L6V5L2r5L2u5Yae5Ya85Ya+5Yi15Yiy5Yiz5YmG5Yix5Yq85YyK5YyL5Yy85Y6S5Y6U5ZKH5ZG/5ZKB5ZKR5ZKC5ZKI5ZGr5ZG65ZG+5ZGl5ZGs5ZG05ZGm5ZKN5ZGv5ZGh5ZGg5ZKY5ZGj5ZGn5ZGk5Zu35Zu55Z2v5Z2y5Z2t5Z2r5Z2x5Z2w5Z225Z6A5Z215Z275Z2z5Z205Z2iXCJdLFtcImNjNDBcIixcIuWdqOWdveWkjOWlheWmteWmuuWnj+WnjuWmsuWnjOWngeWmtuWmvOWng+WnluWmseWmveWngOWniOWmtOWnh+WtouWtpeWuk+WuleWxhOWxh+WyruWypOWyoOWyteWyr+WyqOWyrOWyn+Wyo+WyreWyouWyquWyp+WyneWypeWytuWysOWypuW4l+W4lOW4meW8qOW8ouW8o+W8pOW9lOW+guW9vuW9veW/nuW/peaAreaApuaAmeaAsuaAi1wiXSxbXCJjY2ExXCIsXCLmgLTmgIrmgJfmgLPmgJrmgJ7mgKzmgKLmgI3mgJDmgK7mgJPmgJHmgIzmgInmgJzmiJTmiL3miq3mirTmi5Hmir7miqrmirbmi4rmiq7mirPmiq/mirvmiqnmirDmirjmlL3mlqjmlrvmmInml7zmmITmmJLmmIjml7vmmIPmmIvmmI3mmIXml73mmJHmmJDmm7bmnIrmnoXmnazmno7mnpLmnbbmnbvmnpjmnobmnoTmnbTmno3mnozmnbrmnp/mnpHmnpnmnoPmnb3mnoHmnbjmnbnmnpTmrKXmroDmrb7mr57msJ3mspPms6zms6vms67ms5nmsrbms5Tmsq3ms6fmsrfms5Dms4Lmsrrms4Pms4bms63ms7JcIl0sW1wiY2Q0MFwiLFwi5rOS5rOd5rK05rKK5rKd5rKA5rOe5rOA5rSw5rON5rOH5rKw5rO55rOP5rOp5rOR54KU54KY54KF54KT54KG54KE54KR54KW54KC54Ka54KD54mq54uW54uL54uY54uJ54uc54uS54uU54ua54uM54uR546k546h546t546m546i546g546s546d55Od55Oo55S/55WA55S+55aM55aY55qv55uz55ux55uw55u155+455+855+555+755+6XCJdLFtcImNkYTFcIixcIueft+elguekv+enheepuOepu+eru+exteezveiAteiCj+iCruiCo+iCuOiCteiCreiIoOiKoOiLgOiKq+iKmuiKmOiKm+iKteiKp+iKruiKvOiKnuiKuuiKtOiKqOiKoeiKqeiLguiKpOiLg+iKtuiKouiZsOiZr+iZreiZruixlui/kui/i+i/k+i/jei/lui/lei/l+mCsumCtOmCr+mCs+mCsOmYuemYvemYvOmYuumZg+S/jeS/heS/k+S+suS/ieS/i+S/geS/lOS/nOS/meS+u+S+s+S/m+S/h+S/luS+uuS/gOS+ueS/rOWJhOWJieWLgOWLguWMveWNvOWOl+WOluWOmeWOmOWSuuWSoeWSreWSpeWTj1wiXSxbXCJjZTQwXCIsXCLlk4PojI3lkrflkq7lk5blkrblk4Xlk4blkqDlkbDlkrzlkqLlkr7lkbLlk57lkrDlnrXlnp7lnp/lnqTlnozlnpflnp3lnpvlnpTlnpjlno/lnpnlnqXlnprlnpXlo7TlpI3lpZPlp6Hlp57lp67lqIDlp7Hlp53lp7rlp73lp7zlp7blp6Tlp7Llp7flp5vlp6nlp7Plp7Xlp6Dlp77lp7Tlp63lrqjlsYzls5Dls5jls4zls5fls4vls5tcIl0sW1wiY2VhMVwiLFwi5bOe5bOa5bOJ5bOH5bOK5bOW5bOT5bOU5bOP5bOI5bOG5bOO5bOf5bO45be55bih5bii5bij5big5bik5bqw5bqk5bqi5bqb5bqj5bql5byH5byu5b2W5b6G5oC35oC55oGU5oGy5oGe5oGF5oGT5oGH5oGJ5oGb5oGM5oGA5oGC5oGf5oCk5oGE5oGY5oGm5oGu5omC5omD5ouP5oyN5oyL5ou15oyO5oyD5our5ou55oyP5oyM5ou45ou25oyA5oyT5oyU5ou65oyV5ou75ouw5pWB5pWD5paq5pa/5pi25pih5piy5pi15pic5pim5pii5piz5pir5pi65pid5pi05pi55piu5pyP5pyQ5p+B5p+y5p+I5p66XCJdLFtcImNmNDBcIixcIuafnOaeu+afuOafmOafgOaet+afheafq+afpOafn+aeteafjeaes+aft+aftuafruafo+afguaeueafjuafp+afsOaesuafvOafhuafreafjOaeruafpuafm+afuuafieafiuafg+afquafi+asqOauguauhOautuavluavmOavoOawoOawoea0qOa0tOa0rea0n+a0vOa0v+a0kua0iuazmua0s+a0hOa0mea0uua0mua0kea0gOa0nea1glwiXSxbXCJjZmExXCIsXCLmtIHmtJjmtLfmtIPmtI/mtYDmtIfmtKDmtKzmtIjmtKLmtInmtJDngrfngp/ngr7ngrHngrDngqHngrTngrXngqnniYHniYnniYrniaznibDnibPnia7ni4rni6Tni6jni6vni5/ni6rni6bni6PnjoXnj4znj4Lnj4jnj4XnjrnnjrbnjrXnjrTnj6vnjr/nj4fnjr7nj4Pnj4bnjrjnj4vnk6znk67nlK7nlYfnlYjnlqfnlqrnmbnnm4TnnIjnnIPnnITnnIXnnIrnm7fnm7vnm7rnn6fnn6jnoIbnoJHnoJLnoIXnoJDnoI/noI7noInnoIPnoJPnpYrnpYznpYvnpYXnpYTnp5Xnp43np4/np5bnp47nqoBcIl0sW1wiZDA0MFwiLFwi56m+56uR56yA56yB57G657G457G557G/57KA57KB57SD57SI57SB572Y576R576N576+6ICH6ICO6ICP6ICU6IC36IOY6IOH6IOg6IOR6IOI6IOC6IOQ6IOF6IOj6IOZ6IOc6IOK6IOV6IOJ6IOP6IOX6IOm6ION6Ie/6Iih6IqU6IuZ6Iu+6Iu56IyH6Iuo6IyA6IuV6Iy66Iur6IuW6Iu06Ius6Iuh6Iuy6Iu16IyM6Iu76Iu26Iuw6IuqXCJdLFtcImQwYTFcIixcIuiLpOiLoOiLuuiLs+iLreiZt+iZtOiZvOiZs+ihgeihjuihp+ihquihqeink+iohOioh+i1sui/o+i/oei/rui/oOmDsemCvemCv+mDlemDhemCvumDh+mDi+mDiOmHlOmHk+mZlOmZj+mZkemZk+mZiumZjuWAnuWAheWAh+WAk+WAouWAsOWAm+S/teS/tOWAs+WAt+WArOS/tuS/t+WAl+WAnOWAoOWAp+WAteWAr+WAseWAjuWFmuWGlOWGk+WHiuWHhOWHheWHiOWHjuWJoeWJmuWJkuWJnuWJn+WJleWJouWLjeWMjuWOnuWUpuWTouWUl+WUkuWTp+WTs+WTpOWUmuWTv+WUhOWUiOWTq+WUkeWUheWTsVwiXSxbXCJkMTQwXCIsXCLllIrlk7vlk7flk7jlk6DllI7llIPllIvlnIHlnILln4zloLLln5Xln5Llnrrln4blnr3lnrzlnrjlnrblnr/ln4fln5Dlnrnln4HlpI7lpYrlqJnlqJblqK3lqK7lqJXlqI/lqJflqIrlqJ7lqLPlrazlrqflrq3lrqzlsIPlsZblsZTls6zls7/ls67ls7Hls7fltIDls7nluKnluKjluqjluq7luqrluqzlvLPlvLDlvafmgZ3mgZrmgadcIl0sW1wiZDFhMVwiLFwi5oGB5oKi5oKI5oKA5oKS5oKB5oKd5oKD5oKV5oKb5oKX5oKH5oKc5oKO5oiZ5omG5ouy5oyQ5o2W5oys5o2E5o2F5oy25o2D5o+k5oy55o2L5o2K5oy85oyp5o2B5oy05o2Y5o2U5o2Z5oyt5o2H5oyz5o2a5o2R5oy45o2X5o2A5o2I5pWK5pWG5peG5peD5peE5peC5pmK5pmf5pmH5pmR5pyS5pyT5qCf5qCa5qGJ5qCy5qCz5qC75qGL5qGP5qCW5qCx5qCc5qC15qCr5qCt5qCv5qGO5qGE5qC05qCd5qCS5qCU5qCm5qCo5qCu5qGN5qC65qCl5qCg5qys5qyv5qyt5qyx5qy05q2t6IKC5q6I5q+m5q+kXCJdLFtcImQyNDBcIixcIuavqOavo+avouavp+awpea1uua1o+a1pOa1tua0jea1oea2kua1mOa1oua1rea1r+a2kea2jea3r+a1v+a2hua1nua1p+a1oOa2l+a1sOa1vOa1n+a2gua2mOa0r+a1qOa2i+a1vua2gOa2hOa0lua2g+a1u+a1vea1tea2kOeDnOeDk+eDkeeDneeDi+e8ueeDoueDl+eDkueDnueDoOeDlOeDjeeDheeDhueDh+eDmueDjueDoeeJgueJuFwiXSxbXCJkMmExXCIsXCLnibfnibbnjIDni7rni7Tni77ni7bni7Pni7vnjIHnj5Pnj5nnj6Xnj5bnjrznj6fnj6Pnj6nnj5znj5Lnj5vnj5Tnj53nj5rnj5fnj5jnj6jnk57nk5/nk7Tnk7XnlKHnlZvnlZ/nlrDnl4Hnlrvnl4Tnl4Dnlr/nlrbnlrrnmornm4nnnJ3nnJvnnJDnnJPnnJLnnKPnnJHnnJXnnJnnnJrnnKLnnKfnoKPnoKznoKLnoLXnoK/noKjnoK7noKvnoKHnoKnnoLPnoKrnoLHnpZTnpZvnpY/npZznpZPnpZLnpZHnp6vnp6znp6Dnp67np63np6rnp5znp57np53nqobnqonnqoXnqovnqoznqornqofnq5jnrJBcIl0sW1wiZDM0MFwiLFwi56yE56yT56yF56yP56yI56yK56yO56yJ56yS57KE57KR57KK57KM57KI57KN57KF57Se57Sd57SR57SO57SY57SW57ST57Sf57SS57SP57SM572c572h572e572g572d572b576W576S57+D57+C57+A6ICW6IC+6IC56IO66IOy6IO56IO16ISB6IO76ISA6IiB6Iiv6Iil6Iyz6Iyt6I2E6IyZ6I2R6Iyl6I2W6Iy/6I2B6Iym6Iyc6IyiXCJdLFtcImQzYTFcIixcIuiNguiNjuiMm+iMquiMiOiMvOiNjeiMluiMpOiMoOiMt+iMr+iMqeiNh+iNheiNjOiNk+iMnuiMrOiNi+iMp+iNiOiZk+iZkuiaouiaqOialuiajeiakeianuiah+ial+iahuiai+iamuiaheiapeiameiaoeiap+ialeiamOiajuianeiakOialOihg+ihhOihreihteihtuihsuiigOihseihv+ihr+iig+ihvuihtOihvOiokuixh+ixl+ixu+iypOiyo+i1tui1uOi2tei2t+i2tui7kei7k+i/vui/temAgui/v+i/u+mAhOi/vOi/tumDlumDoOmDmemDmumDo+mDn+mDpemDmOmDm+mDl+mDnOmDpOmFkFwiXSxbXCJkNDQwXCIsXCLphY7phY/ph5Xph6Lph5rpmZzpmZ/pmrzpo6Ppq5/prK/kub/lgbDlgarlgaHlgZ7lgaDlgZPlgYvlgZ3lgbLlgYjlgY3lgYHlgZvlgYrlgaLlgJXlgYXlgZ/lganlgavlgaPlgaTlgYblgYDlga7lgbPlgZflgZHlh5Dliavlia3liazlia7li5bli5PljK3ljpzllbXllbbllLzllY3llZDllLTllKrllZHllaLllLbllLXllLDllZLllYVcIl0sW1wiZDRhMVwiLFwi5ZSM5ZSy5ZWl5ZWO5ZS55ZWI5ZSt5ZS75ZWA5ZWL5ZyK5ZyH5Z+75aCU5Z+i5Z+25Z+c5Z+05aCA5Z+t5Z+95aCI5Z+45aCL5Z+z5Z+P5aCH5Z+u5Z+j5Z+y5Z+l5Z+s5Z+h5aCO5Z+85aCQ5Z+n5aCB5aCM5Z+x5Z+p5Z+w5aCN5aCE5aWc5amg5amY5amV5amn5ame5ai45ai15amt5amQ5amf5aml5ams5amT5amk5amX5amD5amd5amS5amE5amb5amI5aqO5ai+5amN5ai55amM5amw5amp5amH5amR5amW5amC5amc5a2y5a2u5a+B5a+A5bGZ5bSe5bSL5bSd5bSa5bSg5bSM5bSo5bSN5bSm5bSl5bSPXCJdLFtcImQ1NDBcIixcIuW0sOW0kuW0o+W0n+W0ruW4vuW4tOW6seW6tOW6ueW6suW6s+W8tuW8uOW+m+W+luW+n+aCiuaCkOaChuaCvuaCsOaCuuaDk+aDlOaDj+aDpOaDmeaDneaDiOaCseaDm+aCt+aDiuaCv+aDg+aDjeaDgOaMsuaNpeaOiuaOguaNveaOveaOnuaOreaOneaOl+aOq+aOjuaNr+aOh+aOkOaNruaOr+aNteaOnOaNreaOruaNvOaOpOaMu+aOn1wiXSxbXCJkNWExXCIsXCLmjbjmjoXmjoHmjpHmjo3mjbDmlZPml43mmaXmmaHmmZvmmZnmmZzmmaLmnJjmobnmoofmopDmopzmoa3moa7moq7moqvmpZbmoa/moqPmoqzmoqnmobXmobTmorLmoo/mobfmopLmobzmoavmobLmoqrmooDmobHmob7mopvmopbmoovmoqDmoonmoqTmobjmobvmopHmoozmoormob3mrLbmrLPmrLfmrLjmrpHmro/mro3mro7mrozmsKrmt4DmtqvmtrTmtrPmubTmtqzmt6nmt6Lmtrfmt7bmt5TmuIDmt4jmt6Dmt5/mt5bmtr7mt6Xmt5zmt53mt5vmt7Tmt4rmtr3mt63mt7Dmtrrmt5Xmt4Lmt4/mt4lcIl0sW1wiZDY0MFwiLFwi5reQ5rey5reT5re95reX5reN5rej5ra754O654SN54O354SX54O054SM54Ow54SE54Oz54SQ54O854O/54SG54ST54SA54O454O254SL54SC54SO54m+54m754m854m/54yd54yX54yH54yR54yY54yK54yI54u/54yP54ye546I54+254+454+155CE55CB54+955CH55CA54+654+854+/55CM55CL54+055CI55Wk55Wj55eO55eS55ePXCJdLFtcImQ2YTFcIixcIueXi+eXjOeXkeeXkOeaj+eaieebk+ecueecr+ecreecseecsuectOecs+ecveecpeecu+ecteehiOehkuehieehjeehiuehjOegpuehheehkOelpOelp+elqeelquelo+elq+eloeemu+enuuenuOentuent+eqj+eqlOeqkOesteeth+estOespeessOesouespOess+esmOesquesneesseesq+esreesr+essuesuOesmueso+eylOeymOeylueyo+e0tee0vee0uOe0tue0uue1hee0rOe0qee1gee1h+e0vue0v+e1iue0u+e0qOe9o+e+lee+nOe+nee+m+e/iue/i+e/jee/kOe/kee/h+e/j+e/ieiAn1wiXSxbXCJkNzQwXCIsXCLogJ7ogJvogYfogYPogYjohJjohKXohJnohJvohK3ohJ/ohKzohJ7ohKHohJXohKfohJ3ohKLoiJHoiLjoiLPoiLroiLToiLLoibTojpDojqPojqjojo3ojbrojbPojqTojbTojo/ojoHojpXojpnojbXojpTojqnojb3ojoPojozojp3ojpvojqrojovojb7ojqXojq/ojojojpfojrDojb/ojqbojofojq7ojbbojpromZnomZbomr/omrdcIl0sW1wiZDdhMVwiLFwi6JuC6JuB6JuF6Jq66Jqw6JuI6Jq56Jqz6Jq46JuM6Jq06Jq76Jq86JuD6Jq96Jq+6KGS6KKJ6KKV6KKo6KKi6KKq6KKa6KKR6KKh6KKf6KKY6KKn6KKZ6KKb6KKX6KKk6KKs6KKM6KKT6KKO6KaC6KeW6KeZ6KeV6Kiw6Kin6Kis6Kie6LC56LC76LGc6LGd6LG96LKl6LW96LW76LW56La86LeC6La56La/6LeB6LuY6Lue6Lud6Luc6LuX6Lug6Luh6YCk6YCL6YCR6YCc6YCM6YCh6YOv6YOq6YOw6YO06YOy6YOz6YOU6YOr6YOs6YOp6YWW6YWY6YWa6YWT6YWV6Yes6Ye06Yex6Yez6Ye46Yek6Ye56YeqXCJdLFtcImQ4NDBcIixcIumHq+mHt+mHqOmHrumVuumWhumWiOmZvOmZremZq+mZsemZr+mav+mdqumghOmjpemml+WCm+WCleWClOWCnuWCi+WCo+WCg+WCjOWCjuWCneWBqOWCnOWCkuWCguWCh+WFn+WHlOWMkuWMkeWOpOWOp+WWkeWWqOWWpeWWreWVt+WZheWWouWWk+WWiOWWj+WWteWWgeWWo+WWkuWWpOWVveWWjOWWpuWVv+WWleWWoeWWjuWcjOWgqeWgt1wiXSxbXCJkOGExXCIsXCLloJnloJ7loKfloKPloKjln7XloYjloKXloJzloJvloLPloL/loLbloK7loLnloLjloK3loKzloLvlpaHlqq/lqpTlqp/lqbrlqqLlqp7lqbjlqqblqbzlqqXlqqzlqpXlqq7lqLflqoTlqorlqpflqoPlqovlqqnlqbvlqb3lqozlqpzlqo/lqpPlqp3lr6rlr43lr4vlr5Tlr5Hlr4rlr47lsIzlsLDltLfltYPltavltYHltYvltL/ltLXltZHltY7ltZXltLPltLrltZLltL3ltLHltZnltYLltLnltYnltLjltLzltLLltLbltYDltYXluYTluYHlvZjlvqblvqXlvqvmg4nmgrnmg4zmg6Lmg47mg4TmhJRcIl0sW1wiZDk0MFwiLFwi5oOy5oSK5oSW5oSF5oO15oST5oO45oO85oO+5oOB5oSD5oSY5oSd5oSQ5oO/5oSE5oSL5omK5o6U5o6x5o6w5o+O5o+l5o+o5o+v5o+D5pKd5o+z5o+K5o+g5o+25o+V5o+y5o+15pGh5o+f5o6+5o+d5o+c5o+E5o+Y5o+T5o+C5o+H5o+M5o+L5o+I5o+w5o+X5o+Z5pSy5pWn5pWq5pWk5pWc5pWo5pWl5paM5pad5pae5pau5peQ5peSXCJdLFtcImQ5YTFcIixcIuaZvOaZrOaZu+aagOaZseaZueaZquaZsuacgeakjOajk+akhOajnOakquajrOajquajseakj+ajluajt+ajq+ajpOajtuakk+akkOajs+ajoeakh+ajjOakiOalsOaitOakkeajr+ajhuaklOajuOajkOajveajvOajqOaki+akiuakl+ajjuajiOajneajnuajpuajtOajkeakhuajlOajqeakleakpeajh+asueasu+asv+asvOaulOaul+aumeauleauveavsOavsuavs+awsOa3vOa5hua5h+a4n+a5iea6iOa4vOa4vea5hea5oua4q+a4v+a5gea5nea5s+a4nOa4s+a5i+a5gOa5kea4u+a4g+a4rua5nlwiXSxbXCJkYTQwXCIsXCLmuajmuZzmuaHmuLHmuKjmuaDmubHmuavmuLnmuKLmuLDmuZPmuaXmuKfmubjmuaTmubfmuZXmubnmuZLmuabmuLXmuLbmuZrnhKDnhJ7nhK/ng7vnhK7nhLHnhKPnhKXnhKLnhLLnhJ/nhKjnhLrnhJvniYvniZrniojnionniobnioXniovnjJLnjIvnjLDnjKLnjLHnjLPnjKfnjLLnjK3njKbnjKPnjLXnjIznkK7nkKznkLDnkKvnkJZcIl0sW1wiZGFhMVwiLFwi55Ca55Ch55Ct55Cx55Ck55Cj55Cd55Cp55Cg55Cy55O755Sv55Wv55Ws55en55ea55eh55em55ed55ef55ek55eX55qV55qS55ua552G552H552E552N552F552K552O552L552M55+e55+s56Gg56Gk56Gl56Gc56Gt56Gx56Gq56Gu56Gw56Gp56Go56Ge56Gi56W056Wz56Wy56Ww56iC56iK56iD56iM56iE56qZ56um56uk562K56y7562E562I562M562O562A562Y562F57Ki57Ke57Ko57Kh57WY57Wv57Wj57WT57WW57Wn57Wq57WP57Wt57Wc57Wr57WS57WU57Wp57WR57Wf57WO57y+57y/572lXCJdLFtcImRiNDBcIixcIue9pue+oue+oOe+oee/l+iBkeiBj+iBkOiDvuiDlOiFg+iFiuiFkuiFj+iFh+iEveiFjeiEuuiHpuiHruiHt+iHuOiHueiIhOiIvOiIveiIv+iJteiMu+iPj+iPueiQo+iPgOiPqOiQkuiPp+iPpOiPvOiPtuiQkOiPhuiPiOiPq+iPo+iOv+iQgeiPneiPpeiPmOiPv+iPoeiPi+iPjuiPluiPteiPieiQieiQj+iPnuiQkeiQhuiPguiPs1wiXSxbXCJkYmExXCIsXCLoj5Xoj7roj4foj5Hoj6rokJPoj4Poj6zoj67oj4Toj7voj5foj6LokJvoj5voj77om5jom6Lom6bom5Pom6Pom5rom6rom53om6vom5zom6zom6nom5fom6jom5HooYjooZbooZXoorroo5foornoorjoo4Door7oorboorzoorfoor3oorLopIHoo4noppXoppjoppfop53op5rop5voqY7oqY3oqLnoqZnoqYDoqZfoqZjoqYToqYXoqZLoqYjoqZHoqYroqYzoqY/osZ/osoHosoDosrrosr7osrDosrnosrXotoTotoDotonot5jot5Pot43ot4fot5bot5zot4/ot5Xot5not4jot5fot4Xou6/ou7fou7pcIl0sW1wiZGM0MFwiLFwi6Lu56Lum6Luu6Lul6Lu16Lun6Luo6Lu26Lur6Lux6Lus6Lu06Lup6YCt6YC06YCv6YSG6YSs6YSE6YO/6YO86YSI6YO56YO76YSB6YSA6YSH6YSF6YSD6YWh6YWk6YWf6YWi6YWg6YiB6YiK6Yil6YiD6Yia6Yim6YiP6YiM6YiA6YiS6Ye/6Ye96YiG6YiE6Yin6YiC6Yic6Yik6YiZ6YiX6YiF6YiW6ZW76ZaN6ZaM6ZaQ6ZqH6Zm+6ZqIXCJdLFtcImRjYTFcIixcIumaiemag+magOmbgumbiOmbg+mbsembsOmdrOmdsOmdrumgh+miqemjq+mzpum7ueS6g+S6hOS6tuWCveWCv+WDhuWCruWDhOWDiuWCtOWDiOWDguWCsOWDgeWCuuWCseWDi+WDieWCtuWCuOWHl+WJuuWJuOWJu+WJvOWXg+WXm+WXjOWXkOWXi+WXiuWXneWXgOWXlOWXhOWXqeWWv+WXkuWWjeWXj+WXleWXouWXluWXiOWXsuWXjeWXmeWXguWclOWhk+WhqOWhpOWhj+WhjeWhieWhr+WhleWhjuWhneWhmeWhpeWhm+WgveWho+WhseWjvOWrh+WrhOWri+WquuWquOWqseWqteWqsOWqv+WriOWqu+WrhlwiXSxbXCJkZDQwXCIsXCLlqrflq4Dlq4rlqrTlqrblq43lqrnlqpDlr5blr5jlr5nlsJ/lsLPltbHltaPltYrltaXltbLltazltZ7ltajltafltaLlt7DluY/luY7luYrluY3luYvlu4Xlu4zlu4blu4vlu4flvYDlvq/lvq3mg7fmhYnmhYrmhKvmhYXmhLbmhLLmhK7mhYbmhK/mhY/mhKnmhYDmiKDphajmiKPmiKXmiKTmj4Xmj7Hmj6vmkJDmkJLmkInmkKDmkKRcIl0sW1wiZGRhMVwiLFwi5pCz5pGD5pCf5pCV5pCY5pC55pC35pCi5pCj5pCM5pCm5pCw5pCo5pGB5pC15pCv5pCK5pCa5pGA5pCl5pCn5pCL5o+n5pCb5pCu5pCh5pCO5pWv5paS5peT5pqG5pqM5pqV5pqQ5pqL5pqK5pqZ5pqU5pm45pyg5qWm5qWf5qS45qWO5qWi5qWx5qS/5qWF5qWq5qS55qWC5qWX5qWZ5qW65qWI5qWJ5qS15qWs5qSz5qS95qWl5qOw5qW45qS05qWp5qWA5qWv5qWE5qW25qWY5qWB5qW05qWM5qS75qWL5qS35qWc5qWP5qWR5qSy5qWS5qSv5qW75qS85q2G5q2F5q2D5q2C5q2I5q2B5q6b76iN5q+75q+8XCJdLFtcImRlNDBcIixcIuavueavt+avuOa6m+a7lua7iOa6j+a7gOa6n+a6k+a6lOa6oOa6sea6uea7hua7kua6vea7gea6nua7iea6t+a6sOa7jea6pua7j+a6sua6vua7g+a7nOa7mOa6mea6kua6jua6jea6pOa6oea6v+a6s+a7kOa7iua6l+a6rua6o+eFh+eFlOeFkueFo+eFoOeFgeeFneeFoueFsueFuOeFqueFoeeFgueFmOeFg+eFi+eFsOeFn+eFkOeFk1wiXSxbXCJkZWExXCIsXCLnhYTnhY3nhZrniY/nio3nioznipHnipDnio7njLznjYLnjLvnjLrnjYDnjYrnjYnnkYTnkYrnkYvnkZLnkZHnkZfnkYDnkY/nkZDnkY7nkYLnkYbnkY3nkZTnk6Hnk7/nk77nk73nlJ3nlbnnlbfmpoPnl6/nmI/nmIPnl7fnl77nl7znl7nnl7jnmJDnl7vnl7bnl63nl7Xnl73nmpnnmrXnm53nnZXnnZ/nnaDnnZLnnZbnnZrnnannnafnnZTnnZnnna3nn6DnoofnoprnopTnoo/nooTnopXnooXnoobnoqHnooPnobnnopnnooDnopbnobvnpbznpoLnpb3npbnnqJHnqJjnqJnnqJLnqJfnqJXnqKLnqJNcIl0sW1wiZGY0MFwiLFwi56ib56iQ56qj56qi56qe56ur562m562k562t5620562p562y562l562z562x562w562h56245622562j57Ky57K057Kv57aI57aG57aA57aN57W/57aF57W657aO57W757aD57W857aM57aU57aE57W957aS572t572r572n572o572s576m576l576n57+b57+c6ICh6IWk6IWg6IW36IWc6IWp6IWb6IWi6IWy5pyh6IWe6IW26IWn6IWvXCJdLFtcImRmYTFcIixcIuiFhOiFoeiIneiJieiJhOiJgOiJguiJheiTseiQv+iRluiRtuiRueiSj+iSjeiRpeiRkeiRgOiShuiRp+iQsOiRjeiRveiRmuiRmeiRtOiRs+iRneiUh+iRnuiQt+iQuuiQtOiRuuiRg+iRuOiQsuiRheiQqeiPmeiRi+iQr+iRguiQreiRn+iRsOiQueiRjuiRjOiRkuiRr+iTheiSjuiQu+iRh+iQtuiQs+iRqOiRvuiRhOiQq+iRoOiRlOiRruiRkOici+ichOibt+icjOibuuibluibteidjeibuOicjuicieicgeibtuicjeicheijluiji+ijjeijjuijnuijm+ijmuijjOijkOimheimm+inn+inpeinpFwiXSxbXCJlMDQwXCIsXCLop6Hop6Dop6Lop5zop6boqbboqoboqb/oqaHoqL/oqbfoqoLoqoToqbXoqoPoqoHoqbToqbrosLzosYvosYrosaXosaTosabosobosoTosoXos4zotajotanotpHotozoto7oto/oto3otpPotpTotpDotpLot7Dot6Dot6zot7Hot67ot5Dot6not6Pot6Lot6fot7Lot6vot7TovIbou7/ovIHovIDovIXovIfovIjovILovIvpgZLpgL9cIl0sW1wiZTBhMVwiLFwi6YGE6YGJ6YC96YSQ6YSN6YSP6YSR6YSW6YSU6YSL6YSO6YWu6YWv6YmI6YmS6Yiw6Yi66Ymm6Yiz6Yml6Yme6YqD6Yiu6YmK6YmG6Ymt6Yms6YmP6Ymg6Ymn6Ymv6Yi26Ymh6Ymw6Yix6YmU6Ymj6YmQ6Ymy6YmO6YmT6YmM6YmW6Yiy6Zaf6Zac6Zae6Zab6ZqS6ZqT6ZqR6ZqX6ZuO6Zu66Zu96Zu46Zu16Z2z6Z236Z246Z2y6aCP6aCN6aCO6aKs6aO26aO56aav6aay6aaw6aa16aqt6aqr6a2b6bOq6bOt6bOn6bqA6bu95YOm5YOU5YOX5YOo5YOz5YOb5YOq5YOd5YOk5YOT5YOs5YOw5YOv5YOj5YOgXCJdLFtcImUxNDBcIixcIuWHmOWKgOWKgeWLqeWLq+WMsOWOrOWYp+WYleWYjOWYkuWXvOWYj+WYnOWYgeWYk+WYguWXuuWYneWYhOWXv+WXueWiieWhvOWikOWimOWihuWigeWhv+WhtOWii+WhuuWih+WikeWijuWhtuWiguWiiOWhu+WilOWij+WjvuWlq+WrnOWrruWrpeWrleWrquWrmuWrreWrq+Wrs+WrouWroOWrm+WrrOWrnuWrneWrmeWrqOWrn+Wtt+WvoFwiXSxbXCJlMWExXCIsXCLlr6PlsaPltoLltoDltb3ltobltbrltoHltbfltorltonltojltb7ltbzlto3ltbnltb/luZjluZnluZPlu5jlu5Hlu5flu47lu5zlu5Xlu5nlu5Llu5TlvYTlvYPlva/lvrbmhKzmhKjmhYHmhZ7mhbHmhbPmhZLmhZPmhbLmhazmhoDmhbTmhZTmhbrmhZvmhaXmhLvmharmhaHmhZbmiKnmiKfmiKvmkKvmkY3mkZvmkZ3mkbTmkbbmkbLmkbPmkb3mkbXmkabmkqbmkY7mkoLmkZ7mkZzmkYvmkZPmkaDmkZDmkb/mkL/mkazmkavmkZnmkaXmkbfmlbPmlqDmmqHmmqDmmp/mnIXmnITmnKLmprHmprbmp4lcIl0sW1wiZTI0MFwiLFwi5qag5qeO5qaW5qaw5qas5qa85qaR5qaZ5qaO5qan5qaN5qap5qa+5qav5qa/5qeE5qa95qak5qeU5qa55qeK5qaa5qeP5qaz5qaT5qaq5qah5qae5qeZ5qaX5qaQ5qeC5qa15qal5qeG5q2K5q2N5q2L5q6e5q6f5q6g5q+D5q+E5q++5ruO5ru15rux5ryD5ryl5ru45ry35ru75ryu5ryJ5r2O5ryZ5rya5ryn5ryY5ry75ryS5rut5ryKXCJdLFtcImUyYTFcIixcIua8tua9s+a7uea7rua8rea9gOa8sOa8vOa8tea7q+a8h+a8jua9g+a8hea7vea7tua8uea8nOa7vOa8uua8n+a8jea8nua8iOa8oeeGh+eGkOeGieeGgOeGheeGgueGj+eFu+eGhueGgeeGl+eJhOeJk+eKl+eKleeKk+eNg+eNjeeNkeeNjOeRoueRs+eRseeRteeRsueRp+eRrueUgOeUgueUg+eVveeWkOeYlueYiOeYjOeYleeYkeeYiueYlOeauOeegeedvOeeheeeguedrueegOedr+edvueeg+eisueiqueitOeireeiqOehvueiq+einueipeeioOeirOeioueipOemmOemiuemi+emluemleemlOemk1wiXSxbXCJlMzQwXCIsXCLnppfnpojnppLnppDnqKvnqYrnqLDnqK/nqKjnqKbnqqjnqqvnqqznq67nrojnrpznrornrpHnrpDnrpbnro3nroznrpvnro7nroXnrpjlioTnrpnnrqTnroLnsrvnsr/nsrznsrrntqfntrfnt4LntqPntqrnt4Hnt4Dnt4Xntp3nt47nt4Tnt4bnt4vnt4zntq/ntrnntpbntrzntp/ntqbntq7ntqnntqHnt4nnvbPnv6Lnv6Pnv6Xnv55cIl0sW1wiZTNhMVwiLFwi6ICk6IGd6IGc6IaJ6IaG6IaD6IaH6IaN6IaM6IaL6IiV6JKX6JKk6JKh6JKf6JK66JOO6JOC6JKs6JKu6JKr6JK56JK06JOB6JON6JKq6JKa6JKx6JOQ6JKd6JKn6JK76JKi6JKU6JOH6JOM6JKb6JKp6JKv6JKo6JOW6JKY6JK26JOP6JKg6JOX6JOU6JOS6JOb6JKw6JKR6Jmh6Jyz6Jyj6Jyo6J2r6J2A6Jyu6Jye6Jyh6JyZ6Jyb6J2D6Jys6J2B6Jy+6J2G6Jyg6Jyy6Jyq6Jyt6Jy86JyS6Jy66Jyx6Jy16J2C6Jym6Jyn6Jy46Jyk6Jya6Jyw6JyR6KO36KOn6KOx6KOy6KO66KO+6KOu6KO86KO26KO7XCJdLFtcImU0NDBcIixcIuijsOijrOijq+imneimoeimn+imnuinqeinq+inqOiqq+iqmeiqi+iqkuiqj+iqluiwveixqOixqeizleizj+izl+i2lui4iei4gui3v+i4jei3vei4iui4g+i4h+i4hui4hei3vui4gOi4hOi8kOi8kei8jui8jemEo+mEnOmEoOmEoumEn+mEnemEmumEpOmEoemEm+mFuumFsumFuemFs+mKpemKpOmJtumKm+mJuumKoOmKlOmKqumKjVwiXSxbXCJlNGExXCIsXCLpiqbpiprpiqvpibnpipfpib/piqPpi67pio7pioLpipXpiqLpib3piojpiqHpiorpiobpiozpipnpiqfpib7piofpiqnpip3piovpiK3pmp7pmqHpm7/pnZjpnb3pnbrpnb7pnoPpnoDpnoLpnbvpnoTpnoHpnb/pn47pn43poJbpoq3poq7ppILppIDppIfppp3pppzpp4Ppprnpprvpprrpp4Lppr3pp4fpqrHpq6Ppq6fprL7prL/praDpraHprZ/ps7Hps7Lps7Xpuqflg7/lhIPlhLDlg7jlhIblhIflg7blg77lhIvlhIzlg73lhIrliovliozli7Hli6/lmYjlmYLlmYzlmLXlmYHlmYrlmYnlmYblmZhcIl0sW1wiZTU0MFwiLFwi5Zma5ZmA5Ziz5Zi95Zis5Zi+5Zi45Ziq5Zi65Zya5aKr5aKd5aKx5aKg5aKj5aKv5aKs5aKl5aKh5aO/5au/5au05au95au35au25ayD5au45ayC5au55ayB5ayH5ayF5ayP5bGn5baZ5baX5baf5baS5bai5baT5baV5bag5bac5bah5baa5bae5bmp5bmd5bmg5bmc57ez5bub5bue5buh5b2J5b6y5oaL5oaD5oW55oax5oaw5oai5oaJXCJdLFtcImU1YTFcIixcIuaGm+aGk+aGr+aGreaGn+aGkuaGquaGoeaGjeaFpuaGs+aIreaRruaRsOaSluaSoOaSheaSl+aSnOaSj+aSi+aSiuaSjOaSo+aSn+aRqOaSseaSmOaVtuaVuuaVueaVu+aWsuaWs+aateaasOaaqeaasuaat+aaquaar+aogOaohuaol+anpeanuOaoleanseanpOaooOanv+anrOanouaom+aoneanvuaop+ansuanruaolOant+anp+apgOaoiOanpuanu+aojeanvOanq+aoieaohOaomOaopeaoj+antuaopuaoh+antOaoluatkeaupeauo+auouaupuawgeawgOavv+awgua9gea8pua9vua+h+a/hua+klwiXSxbXCJlNjQwXCIsXCLmvo3mvonmvozmvaLmvY/mvoXmvZrmvpbmvbbmvazmvoLmvZXmvbLmvZLmvZDmvZfmvpTmvpPmvZ3mvIDmvaHmvavmvb3mvafmvpDmvZPmvovmvanmvb/mvpXmvaPmvbfmvarmvbvnhrLnhq/nhpvnhrDnhqDnhprnhqnnhrXnhp3nhqXnhp7nhqTnhqHnhqrnhpznhqfnhrPnipjniprnjZjnjZLnjZ7njZ/njaDnjZ3njZvnjaHnjZrnjZlcIl0sW1wiZTZhMVwiLFwi542i55KH55KJ55KK55KG55KB55G955KF55KI55G855G555SI55SH55W+55il55ie55iZ55id55ic55ij55ia55io55ib55qc55qd55qe55qb556N556P556J556I56ON56K756OP56OM56OR56OO56OU56OI56OD56OE56OJ56aa56ah56ag56ac56ai56ab5q2256i556qy56q056qz566356+L566+566s56+O566v566556+K566157OF57OI57OM57OL57e357eb57eq57en57eX57eh57iD57e657em57e257ex57ew57eu57ef5722576s576w576t57+t57+r57+q57+s57+m57+o6IGk6IGn6Iaj6IafXCJdLFtcImU3NDBcIixcIuiGnuiGleiGouiGmeiGl+iIluiJj+iJk+iJkuiJkOiJjuiJkeiUpOiUu+iUj+iUgOiUqeiUjuiUieiUjeiUn+iUiuiUp+iUnOiTu+iUq+iTuuiUiOiUjOiTtOiUquiTsuiUleiTt+iTq+iTs+iTvOiUkuiTquiTqeiUluiTvuiUqOiUneiUruiUguiTveiUnuiTtuiUseiUpuiTp+iTqOiTsOiTr+iTueiUmOiUoOiUsOiUi+iUmeiUr+iZolwiXSxbXCJlN2ExXCIsXCLonZbonaPonaTonbfon6HonbPonZjonZTonZvonZLonaHonZronZHonZ7ona3onaronZDonY7onZ/onZ3ona/onazonbrona7onZzonaXonY/onbvonbXonaLonafonanooZropIXopIzopJTopIvopJfopJjopJnopIbopJbopJHopI7opInopqLopqTopqPop63op7Dop6zoq4/oq4boqrjoq5Poq5Hoq5Toq5Xoqrvoq5foqr7oq4Doq4Xoq5joq4Poqrroqr3oq5nosL7osY3oso/os6Xos5/os5nos6jos5ros53os6fotqDotpzotqHotpvouKDouKPouKXouKTouK7ouJXouJvouJbouJHouJnouKbouKdcIl0sW1wiZTg0MFwiLFwi6LiU6LiS6LiY6LiT6Lic6LiX6Lia6Lys6Lyk6LyY6Lya6Lyg6Lyj6LyW6LyX6YGz6YGw6YGv6YGn6YGr6YSv6YSr6YSp6YSq6YSy6YSm6YSu6YaF6YaG6YaK6YaB6YaC6YaE6YaA6YuQ6YuD6YuE6YuA6YuZ6Yq26YuP6Yux6Yuf6YuY6Yup6YuX6Yud6YuM6Yuv6YuC6Yuo6YuK6YuI6YuO6Yum6YuN6YuV6YuJ6Yug6Yue6Yun6YuR6YuTXCJdLFtcImU4YTFcIixcIumKtemLoemLhumKtOmVvOmWrOmWq+mWrumWsOmapOmaoumbk+mchemciOmcgumdmumeiumejumeiOmfkOmfj+mgnumgnemgpumgqemgqOmgoOmgm+mgp+misumkiOmjuumkkemklOmklumkl+mklemnnOmnjemnj+mnk+mnlOmnjumniemnlumnmOmni+mnl+mnjOmqs+mrrOmrq+mrs+mrsumrsemthumtg+mtp+mttOmtsemtpumttumttemtsOmtqOmtpOmtrOmzvOmzuumzvemzv+mzt+m0h+m0gOmzuemzu+m0iOm0hem0hOm6g+m7k+m8j+m8kOWEnOWEk+WEl+WEmuWEkeWHnuWMtOWPoeWZsOWZoOWZrlwiXSxbXCJlOTQwXCIsXCLlmbPlmablmaPlma3lmbLlmZ7lmbflnJzlnJvlo4jlor3lo4nlor/lorrlo4Llorzlo4blrJflrJnlrJvlrKHlrJTlrJPlrJDlrJblrKjlrJrlrKDlrJ7lr6/ltqzltrHltqnltqfltrXltrDltq7ltqrltqjltrLltq3ltq/ltrTluafluajluablua/lu6nlu6flu6blu6jlu6XlvYvlvrzmhp3mhqjmhpbmh4XmhrTmh4bmh4Hmh4zmhrpcIl0sW1wiZTlhMVwiLFwi5oa/5oa45oaM5pOX5pOW5pOQ5pOP5pOJ5pK95pKJ5pOD5pOb5pOz5pOZ5pSz5pW/5pW85pai5puI5pq+5puA5puK5puL5puP5pq95pq75pq65puM5pyj5qi05qmm5qmJ5qmn5qiy5qmo5qi+5qmd5qmt5qm25qmb5qmR5qio5qma5qi75qi/5qmB5qmq5qmk5qmQ5qmP5qmU5qmv5qmp5qmg5qi85qme5qmW5qmV5qmN5qmO5qmG5q2V5q2U5q2W5q6n5q6q5q6r5q+I5q+H5rCE5rCD5rCG5r6t5r+L5r6j5r+H5r685r+O5r+I5r2e5r+E5r695r6e5r+K5r6o54CE5r6l5r6u5r665r6s5r6q5r+P5r6/5r64XCJdLFtcImVhNDBcIixcIua+oua/iea+q+a/jea+r+a+sua+sOeHheeHgueGv+eGuOeHlueHgOeHgeeHi+eHlOeHiueHh+eHj+eGveeHmOeGvOeHhueHmueHm+eKneeKnueNqeeNpueNp+eNrOeNpeeNq+eNqueRv+eSmueSoOeSlOeSkueSleeSoeeUi+eWgOeYr+eYreeYseeYveeYs+eYvOeYteeYsueYsOeau+ebpueemueeneeeoeeenOeem+eeoueeo+eeleeemVwiXSxbXCJlYWExXCIsXCLnnpfno53no6nno6Xno6rno57no6Pno5vno6Hno6Lno63no5/no6DnpqTnqYTnqYjnqYfnqrbnqrjnqrXnqrHnqrfnr57nr6Pnr6fnr53nr5Xnr6Xnr5rnr6jnr7nnr5Tnr6rnr6Lnr5znr6vnr5jnr5/ns5Lns5Tns5fns5Dns5HnuJLnuKHnuJfnuIznuJ/nuKDnuJPnuI7nuJznuJXnuJrnuKLnuIvnuI/nuJbnuI3nuJTnuKXnuKTnvYPnvbvnvbznvbrnvrHnv6/ogKrogKnogazohrHohqbohq7ohrnohrXohqvohrDohqzohrTohrLohrfohqfoh7LoiZXoiZboiZfolZbolYXolavolY3olZPolaHolZhcIl0sW1wiZWI0MFwiLFwi6JWA6JWG6JWk6JWB6JWi6JWE6JWR6JWH6JWj6JS+6JWb6JWx6JWO6JWu6JW16JWV6JWn6JWg6JaM6JWm6JWd6JWU6JWl6JWs6Jmj6Jml6Jmk6J6b6J6P6J6X6J6T6J6S6J6I6J6B6J6W6J6Y6J256J6H6J6j6J6F6J6Q6J6R6J6d6J6E6J6U6J6c6J6a6J6J6KSe6KSm6KSw6KSt6KSu6KSn6KSx6KSi6KSp6KSj6KSv6KSs6KSf6Kex6KugXCJdLFtcImViYTFcIixcIuirouirsuirtOirteirneislOirpOirn+irsOiriOirnuiroeirqOirv+irr+iru+iykeiykuiykOizteizruizseizsOizs+i1rOi1rui2pei2p+i4s+i4vui4uOi5gOi5hei4tui4vOi4vei5gei4sOi4v+i6vei8tui8rui8tei8sui8uei8t+i8tOmBtumBuemBu+mChumDuumEs+mEtemEtumGk+mGkOmGkemGjemGj+mMp+mMnumMiOmMn+mMhumMj+mNuumMuOmMvOmMm+mMo+mMkumMgemNhumMremMjumMjemLi+mMnemLuumMpemMk+mLuemLt+mMtOmMgumMpOmLv+mMqemMuemMtemMqumMlOmMjFwiXSxbXCJlYzQwXCIsXCLpjIvpi77pjInpjIDpi7vpjJbplrzpl43plr7plrnplrrplrbplr/plrXplr3pmqnpm5TpnIvpnJLpnJDpnpnpnpfpnpTpn7Dpn7jpoLXpoK/poLLppKTppJ/ppKfppKnppp7pp67pp6zpp6Xpp6Tpp7Dpp6Ppp6rpp6npp6fpqrnpqr/pqrTpqrvpq7bpq7rpq7npq7fprLPproDproXprofprbzprb7prbvproLprpPprpLprpDprbrprpVcIl0sW1wiZWNhMVwiLFwi6a296a6I6bSl6bSX6bSg6bSe6bSU6bSp6bSd6bSY6bSi6bSQ6bSZ6bSf6bqI6bqG6bqH6bqu6bqt6buV6buW6bu66byS6by95YSm5YSl5YSi5YSk5YSg5YSp5Yu05ZqT5ZqM5ZqN5ZqG5ZqE5ZqD5Zm+5ZqC5Zm/5ZqB5aOW5aOU5aOP5aOS5ayt5ayl5ayy5ayj5ays5ayn5aym5ayv5ayu5a275a+x5a+y5ba35bms5bmq5b6+5b675oeD5oa15oa85oen5oeg5oel5oek5oeo5oee5pOv5pOp5pOj5pOr5pOk5pOo5paB5paA5pa25pea5puS5qqN5qqW5qqB5qql5qqJ5qqf5qqb5qqh5qqe5qqH5qqT5qqOXCJdLFtcImVkNDBcIixcIuaqleaqg+aqqOaqpOaqkeapv+aqpuaqmuaqheaqjOaqkuatm+aureawiea/jOa+qea/tOa/lOa/o+a/nOa/rea/p+a/pua/nua/sua/nea/oua/qOeHoeeHseeHqOeHsueHpOeHsOeHoueNs+eNrueNr+eSl+eSsueSq+eSkOeSqueSreeSseeSpeeSr+eUkOeUkeeUkueUj+eWhOeZg+eZiOeZieeZh+eapOebqeeeteeeq+eesueet+eetlwiXSxbXCJlZGExXCIsXCLnnrTnnrHnnqjnn7Dno7Pno73npILno7vno7zno7LnpIXno7nno77npITnpqvnpqjnqZznqZvnqZbnqZjnqZTnqZrnqr7nq4Dnq4HnsIXnsI/nr7LnsIDnr7/nr7vnsI7nr7TnsIvnr7PnsILnsInnsIPnsIHnr7jnr73nsIbnr7Dnr7HnsJDnsIrns6jnuK3nuLznuYLnuLPpoYjnuLjnuKrnuYnnuYDnuYfnuKnnuYznuLDnuLvnuLbnuYTnuLrnvYXnvb/nvb7nvb3nv7Tnv7LogKzohrvoh4Toh4zoh4roh4Xoh4fohrzoh6noiZvoiZroiZzoloPoloDolo/olqfolpXolqDolovolqPolbvolqTolprolp5cIl0sW1wiZWU0MFwiLFwi6JW36JW86JaJ6Jah6JW66JW46JWX6JaO6JaW6JaG6JaN6JaZ6Jad6JaB6Jai6JaC6JaI6JaF6JW56JW26JaY6JaQ6Jaf6Jmo6J6+6J6q6J6t6J+F6J6w6J6s6J656J616J686J6u6J+J6J+D6J+C6J+M6J636J6v6J+E6J+K6J606J626J6/6J646J696J+e6J6y6KS16KSz6KS86KS+6KWB6KWS6KS36KWC6Kat6Kav6Kau6Key6Kez6KyeXCJdLFtcImVlYTFcIixcIuismOisluiskeisheisi+isouisj+iskuisleish+isjeisiOishuisnOisk+ismuixj+ixsOixsuixseixr+iyleiylOizuei1r+i5jui5jei5k+i5kOi5jOi5h+i9g+i9gOmChemBvumEuOmGmumGoumGm+mGmemGn+mGoemGnemGoOmOoemOg+mOr+mNpOmNlumNh+mNvOmNmOmNnOmNtumNiemNkOmNkemNoOmNremOj+mNjOmNqumNuemNl+mNlemNkumNj+mNsemNt+mNu+mNoemNnumNo+mNp+mOgOmNjumNmemXh+mXgOmXiemXg+mXhemWt+marumasOmarOmcoOmcn+mcmOmcnemcmememumeoemenFwiXSxbXCJlZjQwXCIsXCLpnp7pnp3pn5Xpn5Tpn7HpoYHpoYTpoYrpoYnpoYXpoYPppKXppKvppKzppKrppLPppLLppK/ppK3ppLHppLDpppjppqPppqHpqILpp7rpp7Tpp7fpp7npp7jpp7bpp7vpp73pp77pp7zpqIPpqr7pq77pq73prIHpq7zprYjprprprqjprp7prpvprqbprqHprqXprqTprobprqLprqDprq/ptLPptYHptafptLbptK7ptK/ptLHptLjptLBcIl0sW1wiZWZhMVwiLFwi6bWF6bWC6bWD6bS+6bS36bWA6bS957+16bSt6bqK6bqJ6bqN6bqw6buI6bua6bu76bu/6byk6byj6byi6b2U6b6g5YSx5YSt5YSu5ZqY5Zqc5ZqX5Zqa5Zqd5ZqZ5aWw5ay85bGp5bGq5beA5bmt5bmu5oeY5oef5oet5oeu5oex5oeq5oew5oer5oeW5oep5pO/5pSE5pO95pO45pSB5pSD5pO85paU5peb5pua5pub5puY5quF5qq55qq95quh5quG5qq65qq25qq35quH5qq05qqt5q2e5q+J5rCL54CH54CM54CN54CB54CF54CU54CO5r+/54CA5r+754Cm5r+85r+354CK54iB54e/54e554iD54e95422XCJdLFtcImYwNDBcIixcIueSuOeTgOeSteeTgeeSvueStueSu+eTgueUlOeUk+eZnOeZpOeZmeeZkOeZk+eZl+eZmueapueaveebrOefgueeuuejv+ekjOekk+eklOekieekkOekkuekkeemreemrOepn+ewnOewqeewmeewoOewn+ewreewneewpuewqOewouewpeewsOe5nOe5kOe5lue5o+e5mOe5oue5n+e5kee5oOe5l+e5k+e+tee+s+e/t+e/uOiBteiHkeiHklwiXSxbXCJmMGExXCIsXCLoh5DoiZ/oiZ7olrTol4bol4Dol4Pol4LolrPolrXolr3ol4fol4Tolr/ol4vol47ol4jol4XolrHolrbol5LomKTolrjolrfolr7omanon6fon6bon6Lon5von6von6ron6Xon5/on7Pon6Ton5Ton5zon5Pon63on5jon6PonqTon5fon5nooIHon7Ton6jon53opZPopYvopY/opYzopYbopZDopZHopYnorKrorKforKPorLPorLDorLXorYforK/orLzorL7orLHorKXorLforKborLborK7orKTorLvorL3orLrosYLosbXospnospjospfos77otITotILotIDouZzouaLouaDouZfouZbouZ7ouaXouadcIl0sW1wiZjE0MFwiLFwi6Lmb6Lma6Lmh6Lmd6Lmp6LmU6L2G6L2H6L2I6L2L6YSo6YS66YS76YS+6Yao6Yal6Yan6Yav6Yaq6Y616Y6M6Y6S6Y636Y6b6Y6d6Y6J6Y6n6Y6O6Y6q6Y6e6Y6m6Y6V6Y6I6Y6Z6Y6f6Y6N6Y6x6Y6R6Y6y6Y6k6Y6o6Y606Y6j6Y6l6ZeS6ZeT6ZeR6Zqz6ZuX6Zua5beC6Zuf6ZuY6Zud6Zyj6Zyi6Zyl6Z6s6Z6u6Z6o6Z6r6Z6k6Z6qXCJdLFtcImYxYTFcIixcIumeoumepemfl+mfmemflumfmOmfuumhkOmhkemhkumiuOmlgemkvOmkuumoj+moi+moiemojemohOmokemoiumohemoh+mohumrgOmrnOmsiOmshOmshemsqemstemtiumtjOmti+mvh+mvhumvg+muv+mvgemutemuuOmvk+mutumvhOmuuemuvem1nOm1k+m1j+m1ium1m+m1i+m1mem1lum1jOm1l+m1kum1lOm1n+m1mOm1mum6jum6jOm7n+m8gem8gOm8lum8pem8q+m8qum8qem8qOm9jOm9leWEtOWEteWKluWLt+WOtOWaq+WareWapuWap+WaquWarOWjmuWjneWjm+WkkuWsveWsvuWsv+W3g+W5sFwiXSxbXCJmMjQwXCIsXCLlvr/mh7vmlIfmlJDmlI3mlInmlIzmlI7mloTml57ml53mm57mq6fmq6Dmq4zmq5Hmq5nmq4vmq5/mq5zmq5Dmq6vmq4/mq43mq57mraDmrrDmsIzngJnngKfngKDngJbngKvngKHngKLngKPngKnngJfngKTngJzngKrniIzniIrniIfniILniIXniqXniqbniqTniqPniqHnk4vnk4Xnkrfnk4PnlJbnmaDnn4nnn4rnn4Tnn7HnpJ3npJtcIl0sW1wiZjJhMVwiLFwi56Sh56Sc56SX56Se56aw56mn56mo57Cz57C857C557Cs57C757Os57Oq57m257m157m457mw57m357mv57m657my57m057mo572L572K576D576G576357+957++6IG46IeX6IeV6Imk6Imh6Imj6Jer6Jex6Jet6JeZ6Jeh6Jeo6Jea6JeX6Jes6Jey6Je46JeY6Jef6Jej6Jec6JeR6Jew6Jem6Jev6Jee6Jei6KCA6J+66KCD6J+26J+36KCJ6KCM6KCL6KCG6J+86KCI6J+/6KCK6KCC6KWi6KWa6KWb6KWX6KWh6KWc6KWY6KWd6KWZ6KaI6Ka36Ka26Ke26K2Q6K2I6K2K6K2A6K2T6K2W6K2U6K2L6K2VXCJdLFtcImYzNDBcIixcIuitkeitguitkuitl+ixg+ixt+ixtuiymui0hui0h+i0iei2rOi2qui2rei2q+i5rei5uOi5s+i5qui5r+i5u+i7gui9kui9kei9j+i9kOi9k+i+tOmFgOmEv+mGsOmGremPnumPh+mPj+mPgumPmumPkOmPuemPrOmPjOmPmemOqemPpumPiumPlOmPrumPo+mPlemPhOmPjumPgOmPkumPp+mVvemXmumXm+mboemcqemcq+mcrOmcqOmcplwiXSxbXCJmM2ExXCIsXCLpnrPpnrfpnrbpn53pn57pn5/poZzpoZnpoZ3poZfpor/por3porvpor7ppYjppYfppYPppqbppqfpqJrpqJXpqKXpqJ3pqKTpqJvpqKLpqKDpqKfpqKPpqJ7pqJzpqJTpq4LprIvprIrprI7prIzprLfpr6rpr6vpr6Dpr57pr6Tpr6bpr6Lpr7Dpr5Tpr5fpr6zpr5zpr5npr6Xpr5Xpr6Hpr5rptbfptoHptorptoTptojptbHptoDptbjptobptovptozptb3ptavptbTptbXptbDptanptoXptbPptbvptoLpta/ptbnptb/ptofptajpupTpupHpu4Dpu7zpvK3pvYDpvYHpvY3pvZbpvZfpvZjljLflmrJcIl0sW1wiZjQ0MFwiLFwi5Zq15Zqz5aOj5a2F5beG5beH5buu5buv5b+A5b+B5oe55pSX5pSW5pSV5pST5pef5puo5puj5puk5quz5quw5quq5quo5qu55qux5quu5quv54C854C154Cv54C354C054Cx54GC54C454C/54C654C554GA54C754Cz54GB54iT54iU54qo5429542855K655qr55qq55q+55ut55+M55+O55+P55+N55+y56Sl56Sj56Sn56So56Sk56SpXCJdLFtcImY0YTFcIixcIuemsueprueprOepreert+exieexiOexiuexh+exheezrue5u+e5vue6gee6gOe+uue/v+iBueiHm+iHmeiIi+iJqOiJqeiYouiXv+iYgeiXvuiYm+iYgOiXtuiYhOiYieiYheiYjOiXveigmeigkOigkeigl+igk+igluilo+ilpuimueint+itoOitquitneitqOito+itpeitp+itrei2rui6hui6iOi6hOi9mei9lui9l+i9lei9mOi9mumCjemFg+mFgemGt+mGtemGsumGs+mQi+mQk+mPu+mQoOmQj+mQlOmPvumQlemQkOmQqOmQmemQjemPtemQgOmPt+mQh+mQjumQlumQkumPuumQiemPuOmQiumPv1wiXSxbXCJmNTQwXCIsXCLpj7zpkIzpj7bpkJHpkIbpl57pl6Dpl5/pnK7pnK/pnrnpnrvpn73pn77poaDpoaLpoaPpoZ/po4Hpo4LppZDppY7ppZnppYzppYvppZPpqLLpqLTpqLHpqKzpqKrpqLbpqKnpqK7pqLjpqK3pq4fpq4rpq4bprJDprJLprJHpsIvpsIjpr7fpsIXpsJLpr7jpsYDpsIfpsI7psIbpsJfpsJTpsInptp/ptpnptqTptp3ptpLptpjptpDptptcIl0sW1wiZjVhMVwiLFwi6bag6baU6bac6baq6baX6bah6baa6bai6bao6bae6baj6ba/6bap6baW6bam6ban6bqZ6bqb6bqa6bul6buk6bun6bum6byw6byu6b2b6b2g6b2e6b2d6b2Z6b6R5YS65YS55YqY5YqX5ZuD5Zq95Zq+5a2I5a2H5beL5beP5bux5oe95pSb5qyC5qu85qyD5qu45qyA54GD54GE54GK54GI54GJ54GF54GG54id54ia54iZ542+55SX55mq55+Q56St56Sx56Sv57GU57GT57Oy57qK57qH57qI57qL57qG57qN572N57676ICw6Ied6JiY6Jiq6Jim6Jif6Jij6Jic6JiZ6Jin6Jiu6Jih6Jig6Jip6Jie6JilXCJdLFtcImY2NDBcIixcIuigqeigneigm+igoOigpOignOigq+ihiuilreilqeilruilq+inuuitueituOitheituuitu+i0kOi0lOi2r+i6jui6jOi9nui9m+i9nemFhumFhOmFhemGuemQv+mQu+mQtumQqemQvemQvOmQsOmQuemQqumQt+mQrOmRgOmQsemXpemXpOmXo+mctemcuumev+mfoemhpOmjiemjhumjgOmlmOmllumouemovemphumphOmpgumpgemoulwiXSxbXCJmNmExXCIsXCLpqL/pq43prJXprJfprJjprJbprLrprZLpsKvpsJ3psJzpsKzpsKPpsKjpsKnpsKTpsKHptrfptrbptrzpt4Hpt4fpt4rpt4/ptr7pt4Xpt4PptrvptrXpt47ptrnptrrptqzpt4jptrHptq3pt4zptrPpt43ptrLpubrpupzpu6vpu67pu63pvJvpvJjpvJrpvLHpvY7pvaXpvaTpvpLkurnlm4blm4Xlm4vlpbHlrYvlrYzlt5Xlt5Hlu7LmlKHmlKDmlKbmlKLmrIvmrIjmrInmsI3ngZXngZbngZfngZLniJ7niJ/niqnnjb/nk5jnk5Xnk5nnk5fnma3nmq3npLXnprTnqbDnqbHnsZfnsZznsZnnsZvnsZpcIl0sW1wiZjc0MFwiLFwi57O057Ox57qR572P576H6Iee6Imr6Ji06Ji16Jiz6Jis6Jiy6Ji26KCs6KCo6KCm6KCq6KCl6KWx6Ka/6Ka+6Ke76K2+6K6E6K6C6K6G6K6F6K2/6LSV6LqV6LqU6Lqa6LqS6LqQ6LqW6LqX6L2g6L2i6YWH6ZGM6ZGQ6ZGK6ZGL6ZGP6ZGH6ZGF6ZGI6ZGJ6ZGG6Zy/6Z+j6aGq6aGp6aOL6aWU6aWb6amO6amT6amU6amM6amP6amI6amKXCJdLFtcImY3YTFcIixcIumpiempkumpkOmrkOmsmemsq+msu+mtlumtlemxhumxiOmwv+mxhOmwuemws+mxgemwvOmwt+mwtOmwsumwvemwtum3m+m3kum3num3mum3i+m3kOm3nOm3kem3n+m3qem3mem3mOm3lum3tem3lem3nem6tum7sOm8tem8s+m8sum9gum9q+m+lem+ouWEveWKmeWjqOWjp+WlsuWtjeW3mOigr+W9j+aIgeaIg+aIhOaUqeaUpeaWluabq+askeaskuasj+aviueBm+eBmueIoueOgueOgeeOg+eZsOeflOexp+expue6leiJrOiYuuiZgOiYueiYvOiYseiYu+iYvuigsOigsuigruigs+iltuiltOils+invlwiXSxbXCJmODQwXCIsXCLorozoro7orovorojosYXotJnoupjovaTovaPphrzpkaLpkZXpkZ3pkZfpkZ7pn4Tpn4XpoIDpqZbpqZnprJ7prJ/prKDpsZLpsZjpsZDpsYrpsY3psYvpsZXpsZnpsYzpsY7pt7vpt7fpt6/pt6Ppt6vpt7jpt6Tpt7bpt6Hpt67pt6bpt7Lpt7Dpt6Lpt6zpt7Tpt7Ppt6jpt63pu4Lpu5Dpu7Lpu7PpvIbpvJzpvLjpvLfpvLbpvYPpvY9cIl0sW1wiZjhhMVwiLFwi6b2x6b2w6b2u6b2v5ZuT5ZuN5a2O5bGt5pSt5put5puu5qyT54Gf54Gh54Gd54Gg54ij55Ob55Ol55+V56S456a356a257Gq57qX576J6Imt6JmD6KC46KC36KC16KGL6K6U6K6V6Lqe6Lqf6Lqg6Lqd6Ya+6Ya96YeC6ZGr6ZGo6ZGp6Zul6Z2G6Z2D6Z2H6Z+H6Z+l6ame6auV6a2Z6bGj6bGn6bGm6bGi6bGe6bGg6biC6be+6biH6biD6biG6biF6biA6biB6biJ6be/6be96biE6bqg6bye6b2G6b206b216b225ZuU5pSu5pa45qyY5qyZ5qyX5qya54Gi54im54qq55+Y55+Z56S557Gp57Gr57O257qaXCJdLFtcImY5NDBcIixcIue6mOe6m+e6meiHoOiHoeiZhuiZh+iZiOilueiluuilvOilu+inv+iumOiumei6pei6pOi6o+mRrumRremRr+mRsemRs+mdiemhsumln+mxqOmxrumxrem4i+m4jem4kOm4j+m4kum4kem6oem7tem8iem9h+m9uOm9u+m9uum9ueWcnueBpuexr+igvOi2sui6pumHg+mRtOmRuOmRtumRtempoOmxtOmxs+mxsemxtem4lOm4k+m7tum8ilwiXSxbXCJmOWExXCIsXCLpvqTngajngaXns7fomarooL7ooL3ooL/orp7ospzouqnou4npnYvpobPpobTpo4zppaHppqvpqaTpqabpqafprKTpuJXpuJfpvYjmiIfmrJ7niKfomYzouqjpkoLpkoDpkoHpqanpqajprK7puJnniKnomYvorp/pkoPpsbnpurfnmbXpqavpsbrpuJ3nganngarpuqTpvb7pvYnpvpjnooHpirnoo4/lorvmgZLnsqflq7rilZTilabilZfilaDilazilaPilZrilanilZ3ilZLilaTilZXilZ7ilarilaHilZjilafilZvilZPilaXilZbilZ/ilavilaLilZnilajilZzilZHilZDila3ila7ilbDila/ilpNcIl1dJyl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt0LmV4cG9ydHM9big4MCkoKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXtjb25zdCBpPW4oNSkscj1uKDE4KSxhPW4oMzkpLG89bigxNDUpKCkscz1uKDE5NCksYz1uKDI0MCk7dC5leHBvcnRzPXQ9PmNsYXNzIGV4dGVuZHModHx8byl7c3RhdGljIGdldCB1dGlscygpe3JldHVybiBzfXN0YXRpYyBnZXQgZXJyb3JzKCl7cmV0dXJuIGN9Y29uc3RydWN0b3IodD17fSl7c3VwZXIodD1yKHtyZXF1ZXN0OntmaWxlU3RvcmluZ1RpbWVvdXQ6XCIxMW1cIixmaWxlR2V0dGluZ1RpbWVvdXQ6XCI1bVwifX0sdCkpfWFzeW5jIGdldFNvbmdJbmZvKHQsZT17fSl7Y29uc3Qgbj1hd2FpdCB0aGlzLnJlcXVlc3QoXCJnZXQtc29uZy1pbmZvXCIse2JvZHk6e3RpdGxlOnR9LHRpbWVvdXQ6ZS50aW1lb3V0fHx0aGlzLm9wdGlvbnMucmVxdWVzdC5maWxlTGlua0dldHRpbmdUaW1lb3V0LHVzZUluaXRpYWxBZGRyZXNzOmUudXNlSW5pdGlhbEFkZHJlc3N9KTtyZXR1cm4gbi5pbmZvLmZvckVhY2godD0+dC50YWdzPXMuY3JlYXRlU29uZ1RhZ3ModC50YWdzKSksbi5pbmZvfWFzeW5jIGdldFNvbmcodCxlPXt9KXtjb25zdCBuPWF3YWl0IHRoaXMucmVxdWVzdChcImdldC1zb25nLWluZm9cIix7Ym9keTp7dGl0bGU6dH0sdGltZW91dDplLnRpbWVvdXR8fHRoaXMub3B0aW9ucy5yZXF1ZXN0LmZpbGVMaW5rR2V0dGluZ1RpbWVvdXQsdXNlSW5pdGlhbEFkZHJlc3M6ZS51c2VJbml0aWFsQWRkcmVzc30pO2lmKCFuLmluZm8ubGVuZ3RoKXJldHVybiBudWxsO2xldCBpPXt0YWdzOnt9fTtmb3IobGV0IHQ9bi5pbmZvLmxlbmd0aC0xO3Q+PTA7dC0tKXtjb25zdCBlPW4uaW5mb1t0XTshZS5jb3ZlckxpbmsmJmRlbGV0ZSBlLmNvdmVyTGluaztjb25zdCByPXMubWVyZ2VTb25nVGFncyhpLnRhZ3MsZS50YWdzKTtpPU9iamVjdC5hc3NpZ24oaSxlKSxpLnRhZ3M9cn1yZXR1cm4gaX1hc3luYyBnZXRTb25nQXVkaW9MaW5rKHQsZT17fSl7cmV0dXJuKGF3YWl0IHRoaXMucmVxdWVzdChcImdldC1zb25nLWxpbmtcIix7Ym9keTp7dGl0bGU6dCx0eXBlOlwiYXVkaW9cIn0sdGltZW91dDplLnRpbWVvdXR8fHRoaXMub3B0aW9ucy5yZXF1ZXN0LmZpbGVMaW5rR2V0dGluZ1RpbWVvdXQsdXNlSW5pdGlhbEFkZHJlc3M6ZS51c2VJbml0aWFsQWRkcmVzc30pKS5saW5rfWFzeW5jIGdldFNvbmdDb3ZlckxpbmsodCxlPXt9KXtyZXR1cm4oYXdhaXQgdGhpcy5yZXF1ZXN0KFwiZ2V0LXNvbmctbGlua1wiLHtib2R5Ont0aXRsZTp0LHR5cGU6XCJjb3ZlclwifSx0aW1lb3V0OmUudGltZW91dHx8dGhpcy5vcHRpb25zLnJlcXVlc3QuZmlsZUxpbmtHZXR0aW5nVGltZW91dCx1c2VJbml0aWFsQWRkcmVzczplLnVzZUluaXRpYWxBZGRyZXNzfSkpLmxpbmt9YXN5bmMgZ2V0U29uZ1RvQnVmZmVyKHQsbixpPXt9KXt0aGlzLmVudlRlc3QoITEsXCJnZXRTb25nVG9CdWZmZXJcIik7Y29uc3Qgcj1pLnRpbWVvdXR8fHRoaXMub3B0aW9ucy5yZXF1ZXN0LmZpbGVHZXR0aW5nVGltZW91dCxvPXRoaXMuY3JlYXRlUmVxdWVzdFRpbWVyKHIpO2xldCB1PWF3YWl0IHRoaXMucmVxdWVzdChcImdldC1zb25nLWxpbmtcIix7Ym9keTp7dGl0bGU6dCx0eXBlOm59LHRpbWVvdXQ6byhbdGhpcy5vcHRpb25zLnJlcXVlc3QuZmlsZUxpbmtHZXR0aW5nVGltZW91dF0pLHVzZUluaXRpYWxBZGRyZXNzOmkudXNlSW5pdGlhbEFkZHJlc3N9KTtpZighdS5saW5rKXRocm93IG5ldyBjLldvcmtFcnJvcihgTGluayBmb3Igc29uZyBcIiR7dH1cIiBpcyBub3QgZm91bmRgLFwiRVJSX01VU0VSSUFfTk9UX0ZPVU5EX0xJTktcIik7cmV0dXJuIGF3YWl0IG5ldyBQcm9taXNlKGFzeW5jKHQsbik9Pnt0cnl7Y29uc3QgaT1bXTsoYXdhaXQgYSh1LmxpbmssdGhpcy5jcmVhdGVEZWZhdWx0UmVxdWVzdE9wdGlvbnMoe21ldGhvZDpcIkdFVFwiLHRpbWVvdXQ6bygpfSkpKS5ib2R5Lm9uKFwiZXJyb3JcIix0PT5uKHMuaXNSZXF1ZXN0VGltZW91dEVycm9yKHQpP3MuY3JlYXRlUmVxdWVzdFRpbWVvdXRFcnJvcigpOnQpKS5vbihcImRhdGFcIix0PT5pLnB1c2godCkpLm9uKFwiZW5kXCIsKCk9PnQoZS5jb25jYXQoaSkpKX1jYXRjaCh0KXtuKHQpfX0pfWFzeW5jIGdldFNvbmdBdWRpb1RvQnVmZmVyKHQsZT17fSl7cmV0dXJuIHRoaXMuZ2V0U29uZ1RvQnVmZmVyKHQsXCJhdWRpb1wiLGUpfWFzeW5jIGdldFNvbmdDb3ZlclRvQnVmZmVyKHQsZT17fSl7cmV0dXJuIHRoaXMuZ2V0U29uZ1RvQnVmZmVyKHQsXCJjb3ZlclwiLGUpfWFzeW5jIGdldFNvbmdUb1BhdGgodCxlLG4scj17fSl7dGhpcy5lbnZUZXN0KCExLFwiZ2V0U29uZ1RvQnVmZmVyXCIpO2NvbnN0IG89ci50aW1lb3V0fHx0aGlzLm9wdGlvbnMucmVxdWVzdC5maWxlR2V0dGluZ1RpbWVvdXQsdT10aGlzLmNyZWF0ZVJlcXVlc3RUaW1lcihvKTtsZXQgbD1hd2FpdCB0aGlzLnJlcXVlc3QoXCJnZXQtc29uZy1saW5rXCIse2JvZHk6e3RpdGxlOnQsdHlwZTpufSx0aW1lb3V0OnUoW3RoaXMub3B0aW9ucy5yZXF1ZXN0LmZpbGVMaW5rR2V0dGluZ1RpbWVvdXRdKSx1c2VJbml0aWFsQWRkcmVzczpyLnVzZUluaXRpYWxBZGRyZXNzfSk7aWYoIWwubGluayl0aHJvdyBuZXcgYy5Xb3JrRXJyb3IoYExpbmsgZm9yIHNvbmcgXCIke3R9XCIgaXMgbm90IGZvdW5kYCxcIkVSUl9NVVNFUklBX05PVF9GT1VORF9MSU5LXCIpO3JldHVybiBhd2FpdCBuZXcgUHJvbWlzZShhc3luYyh0LG4pPT57dHJ5eyhhd2FpdCBhKGwubGluayx0aGlzLmNyZWF0ZURlZmF1bHRSZXF1ZXN0T3B0aW9ucyh7bWV0aG9kOlwiR0VUXCIsdGltZW91dDp1KCl9KSkpLmJvZHkub24oXCJlcnJvclwiLHQ9Pm4ocy5pc1JlcXVlc3RUaW1lb3V0RXJyb3IodCk/cy5jcmVhdGVSZXF1ZXN0VGltZW91dEVycm9yKCk6dCkpLnBpcGUoaS5jcmVhdGVXcml0ZVN0cmVhbShlKSkub24oXCJlcnJvclwiLG4pLm9uKFwiZmluaXNoXCIsdCl9Y2F0Y2godCl7bih0KX19KX1hc3luYyBnZXRTb25nQXVkaW9Ub1BhdGgodCxlLG49e30pe3JldHVybiB0aGlzLmdldFNvbmdUb1BhdGgodCxlLFwiYXVkaW9cIixuKX1hc3luYyBnZXRTb25nQ292ZXJUb1BhdGgodCxlLG49e30pe3JldHVybiB0aGlzLmdldFNvbmdUb1BhdGgodCxlLFwiY292ZXJcIixuKX1hc3luYyBnZXRTb25nVG9CbG9iKHQsZSxuPXt9KXt0aGlzLmVudlRlc3QoITEsXCJnZXRTb25nVG9CdWZmZXJcIik7Y29uc3QgaT1uLnRpbWVvdXR8fHRoaXMub3B0aW9ucy5yZXF1ZXN0LmZpbGVHZXR0aW5nVGltZW91dCxyPXRoaXMuY3JlYXRlUmVxdWVzdFRpbWVyKGkpO2xldCBvPWF3YWl0IHRoaXMucmVxdWVzdChcImdldC1zb25nLWxpbmtcIix7Ym9keTp7dGl0bGU6dCx0eXBlOmV9LHRpbWVvdXQ6cihbdGhpcy5vcHRpb25zLnJlcXVlc3QuZmlsZUxpbmtHZXR0aW5nVGltZW91dF0pLHVzZUluaXRpYWxBZGRyZXNzOm4udXNlSW5pdGlhbEFkZHJlc3N9KTtpZighby5saW5rKXRocm93IG5ldyBjLldvcmtFcnJvcihgTGluayBmb3Igc29uZyBcIiR7dH1cIiBpcyBub3QgZm91bmRgLFwiRVJSX01VU0VSSUFfTk9UX0ZPVU5EX0xJTktcIik7cmV0dXJuIG89YXdhaXQgYShvLmxpbmssdGhpcy5jcmVhdGVEZWZhdWx0UmVxdWVzdE9wdGlvbnMoe21ldGhvZDpcIkdFVFwiLHRpbWVvdXQ6cigpfSkpLG8uYmxvYigpfWFzeW5jIGdldFNvbmdBdWRpb1RvQmxvYih0LGU9e30pe3JldHVybiB0aGlzLmdldFNvbmdUb0Jsb2IodCxcImF1ZGlvXCIsZSl9YXN5bmMgZ2V0U29uZ0NvdmVyVG9CbG9iKHQsZT17fSl7cmV0dXJuIHRoaXMuZ2V0U29uZ1RvQmxvYih0LFwiY292ZXJcIixlKX1hc3luYyBhZGRTb25nKHQsZT17fSl7Y29uc3Qgbj0oKT0+cy5pc0ZpbGVSZWFkU3RyZWFtKHQpJiZ0LmRlc3Ryb3koKTt0cnl7Y29uc3Qgcj1hd2FpdCBzLmdldEZpbGVJbmZvKHQpLGE9YXdhaXQgcy5nZXRTb25nVGFncyh0KTtpZighcy5pc1NvbmdUaXRsZShhLmZ1bGxUaXRsZSkpdGhyb3cgbmV3IGMuV29ya0Vycm9yKGBXcm9uZyBzb25nIHRpdGxlIFwiJHthLmZ1bGxUaXRsZX1cImAsXCJFUlJfTVVTRVJJQV9TT05HX1dST05HX1RJVExFXCIpO1wic3RyaW5nXCI9PXR5cGVvZiB0JiYodD1pLmNyZWF0ZVJlYWRTdHJlYW0odCkpO2NvbnN0IG89YXdhaXQgdGhpcy5yZXF1ZXN0KFwiYWRkLXNvbmdcIix7Zm9ybURhdGE6e2ZpbGU6e3ZhbHVlOnQsb3B0aW9uczp7ZmlsZW5hbWU6ci5oYXNoKyhyLmV4dD9cIi5cIityLmV4dDpcIlwiKSxjb250ZW50VHlwZTpyLm1pbWV9fX0sdGltZW91dDplLnRpbWVvdXR8fHRoaXMub3B0aW9ucy5yZXF1ZXN0LmZpbGVTdG9yaW5nVGltZW91dCx1c2VJbml0aWFsQWRkcmVzczplLnVzZUluaXRpYWxBZGRyZXNzfSk7cmV0dXJuIG4oKSxvfWNhdGNoKHQpe3Rocm93IG4oKSx0fX1hc3luYyByZW1vdmVTb25nKHQsZT17fSl7cmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdChcInJlbW92ZS1zb25nXCIse2JvZHk6e3RpdGxlOnR9LHRpbWVvdXQ6ZS50aW1lb3V0fHx0aGlzLm9wdGlvbnMucmVxdWVzdC5maWxlUmVtb3ZhbFRpbWVvdXQsdXNlSW5pdGlhbEFkZHJlc3M6ZS51c2VJbml0aWFsQWRkcmVzc30pfWNyZWF0ZVJlcXVlc3RlZFNvbmdMaW5rKHQsZSxuPXt9KXtyZXR1cm4gbj1PYmplY3QuYXNzaWduKHtxdWVyeTp7dHlwZTplLHRpdGxlOnR9fSxuKSx0aGlzLmNyZWF0ZVJlcXVlc3RVcmwoXCJyZXF1ZXN0LXNvbmdcIixuKX1jcmVhdGVSZXF1ZXN0ZWRTb25nQXVkaW9MaW5rKHQsZT17fSl7cmV0dXJuIHRoaXMuY3JlYXRlUmVxdWVzdGVkU29uZ0xpbmsodCxcImF1ZGlvXCIsZSl9Y3JlYXRlUmVxdWVzdGVkU29uZ0NvdmVyTGluayh0LGU9e30pe3JldHVybiB0aGlzLmNyZWF0ZVJlcXVlc3RlZFNvbmdMaW5rKHQsXCJjb3ZlclwiLGUpfX19KS5jYWxsKHRoaXMsbigxKS5CdWZmZXIpfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZS5ieXRlTGVuZ3RoPWZ1bmN0aW9uKHQpe3ZhciBlPXUodCksbj1lWzBdLGk9ZVsxXTtyZXR1cm4gMyoobitpKS80LWl9LGUudG9CeXRlQXJyYXk9ZnVuY3Rpb24odCl7dmFyIGUsbixpPXUodCksbz1pWzBdLHM9aVsxXSxjPW5ldyBhKGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gMyooZStuKS80LW59KDAsbyxzKSksbD0wLHA9cz4wP28tNDpvO2ZvcihuPTA7bjxwO24rPTQpZT1yW3QuY2hhckNvZGVBdChuKV08PDE4fHJbdC5jaGFyQ29kZUF0KG4rMSldPDwxMnxyW3QuY2hhckNvZGVBdChuKzIpXTw8NnxyW3QuY2hhckNvZGVBdChuKzMpXSxjW2wrK109ZT4+MTYmMjU1LGNbbCsrXT1lPj44JjI1NSxjW2wrK109MjU1JmU7Mj09PXMmJihlPXJbdC5jaGFyQ29kZUF0KG4pXTw8MnxyW3QuY2hhckNvZGVBdChuKzEpXT4+NCxjW2wrK109MjU1JmUpOzE9PT1zJiYoZT1yW3QuY2hhckNvZGVBdChuKV08PDEwfHJbdC5jaGFyQ29kZUF0KG4rMSldPDw0fHJbdC5jaGFyQ29kZUF0KG4rMildPj4yLGNbbCsrXT1lPj44JjI1NSxjW2wrK109MjU1JmUpO3JldHVybiBjfSxlLmZyb21CeXRlQXJyYXk9ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49dC5sZW5ndGgscj1uJTMsYT1bXSxvPTAscz1uLXI7bzxzO28rPTE2MzgzKWEucHVzaChsKHQsbyxvKzE2MzgzPnM/czpvKzE2MzgzKSk7MT09PXI/KGU9dFtuLTFdLGEucHVzaChpW2U+PjJdK2lbZTw8NCY2M10rXCI9PVwiKSk6Mj09PXImJihlPSh0W24tMl08PDgpK3Rbbi0xXSxhLnB1c2goaVtlPj4xMF0raVtlPj40JjYzXStpW2U8PDImNjNdK1wiPVwiKSk7cmV0dXJuIGEuam9pbihcIlwiKX07Zm9yKHZhciBpPVtdLHI9W10sYT1cInVuZGVmaW5lZFwiIT10eXBlb2YgVWludDhBcnJheT9VaW50OEFycmF5OkFycmF5LG89XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCIscz0wLGM9by5sZW5ndGg7czxjOysrcylpW3NdPW9bc10scltvLmNoYXJDb2RlQXQocyldPXM7ZnVuY3Rpb24gdSh0KXt2YXIgZT10Lmxlbmd0aDtpZihlJTQ+MCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0XCIpO3ZhciBuPXQuaW5kZXhPZihcIj1cIik7cmV0dXJuLTE9PT1uJiYobj1lKSxbbixuPT09ZT8wOjQtbiU0XX1mdW5jdGlvbiBsKHQsZSxuKXtmb3IodmFyIHIsYSxvPVtdLHM9ZTtzPG47cys9MylyPSh0W3NdPDwxNiYxNjcxMTY4MCkrKHRbcysxXTw8OCY2NTI4MCkrKDI1NSZ0W3MrMl0pLG8ucHVzaChpWyhhPXIpPj4xOCY2M10raVthPj4xMiY2M10raVthPj42JjYzXStpWzYzJmFdKTtyZXR1cm4gby5qb2luKFwiXCIpfXJbXCItXCIuY2hhckNvZGVBdCgwKV09NjIscltcIl9cIi5jaGFyQ29kZUF0KDApXT02M30sZnVuY3Rpb24odCxlKXtlLnJlYWQ9ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvLHM9OCpyLWktMSxjPSgxPDxzKS0xLHU9Yz4+MSxsPS03LHA9bj9yLTE6MCxmPW4/LTE6MSxkPXRbZStwXTtmb3IocCs9ZixhPWQmKDE8PC1sKS0xLGQ+Pj0tbCxsKz1zO2w+MDthPTI1NiphK3RbZStwXSxwKz1mLGwtPTgpO2ZvcihvPWEmKDE8PC1sKS0xLGE+Pj0tbCxsKz1pO2w+MDtvPTI1NipvK3RbZStwXSxwKz1mLGwtPTgpO2lmKDA9PT1hKWE9MS11O2Vsc2V7aWYoYT09PWMpcmV0dXJuIG8/TmFOOjEvMCooZD8tMToxKTtvKz1NYXRoLnBvdygyLGkpLGEtPXV9cmV0dXJuKGQ/LTE6MSkqbypNYXRoLnBvdygyLGEtaSl9LGUud3JpdGU9ZnVuY3Rpb24odCxlLG4saSxyLGEpe3ZhciBvLHMsYyx1PTgqYS1yLTEsbD0oMTw8dSktMSxwPWw+PjEsZj0yMz09PXI/TWF0aC5wb3coMiwtMjQpLU1hdGgucG93KDIsLTc3KTowLGQ9aT8wOmEtMSxoPWk/MTotMSxtPWU8MHx8MD09PWUmJjEvZTwwPzE6MDtmb3IoZT1NYXRoLmFicyhlKSxpc05hTihlKXx8ZT09PTEvMD8ocz1pc05hTihlKT8xOjAsbz1sKToobz1NYXRoLmZsb29yKE1hdGgubG9nKGUpL01hdGguTE4yKSxlKihjPU1hdGgucG93KDIsLW8pKTwxJiYoby0tLGMqPTIpLChlKz1vK3A+PTE/Zi9jOmYqTWF0aC5wb3coMiwxLXApKSpjPj0yJiYobysrLGMvPTIpLG8rcD49bD8ocz0wLG89bCk6bytwPj0xPyhzPShlKmMtMSkqTWF0aC5wb3coMixyKSxvKz1wKToocz1lKk1hdGgucG93KDIscC0xKSpNYXRoLnBvdygyLHIpLG89MCkpO3I+PTg7dFtuK2RdPTI1NSZzLGQrPWgscy89MjU2LHItPTgpO2ZvcihvPW88PHJ8cyx1Kz1yO3U+MDt0W24rZF09MjU1Jm8sZCs9aCxvLz0yNTYsdS09OCk7dFtuK2QtaF18PTEyOCptfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oODQpLHI9big1MSksYT1uKDExNCksbz1uKDExNikscz1uKDYpLGM9big1OSksdT1uKDU3KTt0LmV4cG9ydHM9ZnVuY3Rpb24gdChlLG4sbCxwLGYpe2UhPT1uJiZhKG4sKGZ1bmN0aW9uKGEsYyl7aWYoZnx8KGY9bmV3IGkpLHMoYSkpbyhlLG4sYyxsLHQscCxmKTtlbHNle3ZhciBkPXA/cCh1KGUsYyksYSxjK1wiXCIsZSxuLGYpOnZvaWQgMDt2b2lkIDA9PT1kJiYoZD1hKSxyKGUsYyxkKX19KSxjKX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDE5KSxyPW4oOTApLGE9big5MSksbz1uKDkyKSxzPW4oOTMpLGM9big5NCk7ZnVuY3Rpb24gdSh0KXt2YXIgZT10aGlzLl9fZGF0YV9fPW5ldyBpKHQpO3RoaXMuc2l6ZT1lLnNpemV9dS5wcm90b3R5cGUuY2xlYXI9cix1LnByb3RvdHlwZS5kZWxldGU9YSx1LnByb3RvdHlwZS5nZXQ9byx1LnByb3RvdHlwZS5oYXM9cyx1LnByb3RvdHlwZS5zZXQ9Yyx0LmV4cG9ydHM9dX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt0aGlzLl9fZGF0YV9fPVtdLHRoaXMuc2l6ZT0wfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMjApLHI9QXJyYXkucHJvdG90eXBlLnNwbGljZTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fX2RhdGFfXyxuPWkoZSx0KTtyZXR1cm4hKG48MCkmJihuPT1lLmxlbmd0aC0xP2UucG9wKCk6ci5jYWxsKGUsbiwxKSwtLXRoaXMuc2l6ZSwhMCl9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX19kYXRhX18sbj1pKGUsdCk7cmV0dXJuIG48MD92b2lkIDA6ZVtuXVsxXX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIwKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIGkodGhpcy5fX2RhdGFfXyx0KT4tMX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIwKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9fZGF0YV9fLHI9aShuLHQpO3JldHVybiByPDA/KCsrdGhpcy5zaXplLG4ucHVzaChbdCxlXSkpOm5bcl1bMV09ZSx0aGlzfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTkpO3QuZXhwb3J0cz1mdW5jdGlvbigpe3RoaXMuX19kYXRhX189bmV3IGksdGhpcy5zaXplPTB9fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9fZGF0YV9fLG49ZS5kZWxldGUodCk7cmV0dXJuIHRoaXMuc2l6ZT1lLnNpemUsbn19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9fZGF0YV9fLmdldCh0KX19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9fZGF0YV9fLmhhcyh0KX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDE5KSxyPW4oNDgpLGE9big1MCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fX2RhdGFfXztpZihuIGluc3RhbmNlb2YgaSl7dmFyIG89bi5fX2RhdGFfXztpZighcnx8by5sZW5ndGg8MTk5KXJldHVybiBvLnB1c2goW3QsZV0pLHRoaXMuc2l6ZT0rK24uc2l6ZSx0aGlzO249dGhpcy5fX2RhdGFfXz1uZXcgYShvKX1yZXR1cm4gbi5zZXQodCxlKSx0aGlzLnNpemU9bi5zaXplLHRoaXN9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigzNCkscj1uKDk4KSxhPW4oNiksbz1uKDEwMCkscz0vXlxcW29iamVjdCAuKz9Db25zdHJ1Y3RvclxcXSQvLGM9RnVuY3Rpb24ucHJvdG90eXBlLHU9T2JqZWN0LnByb3RvdHlwZSxsPWMudG9TdHJpbmcscD11Lmhhc093blByb3BlcnR5LGY9UmVnRXhwKFwiXlwiK2wuY2FsbChwKS5yZXBsYWNlKC9bXFxcXF4kLiorPygpW1xcXXt9fF0vZyxcIlxcXFwkJlwiKS5yZXBsYWNlKC9oYXNPd25Qcm9wZXJ0eXwoZnVuY3Rpb24pLio/KD89XFxcXFxcKCl8IGZvciAuKz8oPz1cXFxcXFxdKS9nLFwiJDEuKj9cIikrXCIkXCIpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4hKCFhKHQpfHxyKHQpKSYmKGkodCk/ZjpzKS50ZXN0KG8odCkpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMjIpLHI9T2JqZWN0LnByb3RvdHlwZSxhPXIuaGFzT3duUHJvcGVydHksbz1yLnRvU3RyaW5nLHM9aT9pLnRvU3RyaW5nVGFnOnZvaWQgMDt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIGU9YS5jYWxsKHQscyksbj10W3NdO3RyeXt0W3NdPXZvaWQgMDt2YXIgaT0hMH1jYXRjaCh0KXt9dmFyIHI9by5jYWxsKHQpO3JldHVybiBpJiYoZT90W3NdPW46ZGVsZXRlIHRbc10pLHJ9fSxmdW5jdGlvbih0LGUpe3ZhciBuPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBuLmNhbGwodCl9fSxmdW5jdGlvbih0LGUsbil7dmFyIGkscj1uKDk5KSxhPShpPS9bXi5dKyQvLmV4ZWMociYmci5rZXlzJiZyLmtleXMuSUVfUFJPVE98fFwiXCIpKT9cIlN5bWJvbChzcmMpXzEuXCIraTpcIlwiO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4hIWEmJmEgaW4gdH19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDkpW1wiX19jb3JlLWpzX3NoYXJlZF9fXCJdO3QuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUpe3ZhciBuPUZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZzt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7aWYobnVsbCE9dCl7dHJ5e3JldHVybiBuLmNhbGwodCl9Y2F0Y2godCl7fXRyeXtyZXR1cm4gdCtcIlwifWNhdGNoKHQpe319cmV0dXJuXCJcIn19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGw9PXQ/dm9pZCAwOnRbZV19fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMDMpLHI9bigxOSksYT1uKDQ4KTt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt0aGlzLnNpemU9MCx0aGlzLl9fZGF0YV9fPXtoYXNoOm5ldyBpLG1hcDpuZXcoYXx8ciksc3RyaW5nOm5ldyBpfX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEwNCkscj1uKDEwNSksYT1uKDEwNiksbz1uKDEwNykscz1uKDEwOCk7ZnVuY3Rpb24gYyh0KXt2YXIgZT0tMSxuPW51bGw9PXQ/MDp0Lmxlbmd0aDtmb3IodGhpcy5jbGVhcigpOysrZTxuOyl7dmFyIGk9dFtlXTt0aGlzLnNldChpWzBdLGlbMV0pfX1jLnByb3RvdHlwZS5jbGVhcj1pLGMucHJvdG90eXBlLmRlbGV0ZT1yLGMucHJvdG90eXBlLmdldD1hLGMucHJvdG90eXBlLmhhcz1vLGMucHJvdG90eXBlLnNldD1zLHQuZXhwb3J0cz1jfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMyk7dC5leHBvcnRzPWZ1bmN0aW9uKCl7dGhpcy5fX2RhdGFfXz1pP2kobnVsbCk6e30sdGhpcy5zaXplPTB9fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmhhcyh0KSYmZGVsZXRlIHRoaXMuX19kYXRhX19bdF07cmV0dXJuIHRoaXMuc2l6ZS09ZT8xOjAsZX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIzKSxyPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX19kYXRhX187aWYoaSl7dmFyIG49ZVt0XTtyZXR1cm5cIl9fbG9kYXNoX2hhc2hfdW5kZWZpbmVkX19cIj09PW4/dm9pZCAwOm59cmV0dXJuIHIuY2FsbChlLHQpP2VbdF06dm9pZCAwfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMjMpLHI9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fX2RhdGFfXztyZXR1cm4gaT92b2lkIDAhPT1lW3RdOnIuY2FsbChlLHQpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMjMpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuX19kYXRhX187cmV0dXJuIHRoaXMuc2l6ZSs9dGhpcy5oYXModCk/MDoxLG5bdF09aSYmdm9pZCAwPT09ZT9cIl9fbG9kYXNoX2hhc2hfdW5kZWZpbmVkX19cIjplLHRoaXN9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyNCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlPWkodGhpcyx0KS5kZWxldGUodCk7cmV0dXJuIHRoaXMuc2l6ZS09ZT8xOjAsZX19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlPXR5cGVvZiB0O3JldHVyblwic3RyaW5nXCI9PWV8fFwibnVtYmVyXCI9PWV8fFwic3ltYm9sXCI9PWV8fFwiYm9vbGVhblwiPT1lP1wiX19wcm90b19fXCIhPT10Om51bGw9PT10fX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMjQpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gaSh0aGlzLHQpLmdldCh0KX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDI0KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIGkodGhpcyx0KS5oYXModCl9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyNCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7dmFyIG49aSh0aGlzLHQpLHI9bi5zaXplO3JldHVybiBuLnNldCh0LGUpLHRoaXMuc2l6ZSs9bi5zaXplPT1yPzA6MSx0aGlzfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTE1KSgpO3QuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSxuLGkpe2Zvcih2YXIgcj0tMSxhPU9iamVjdChlKSxvPWkoZSkscz1vLmxlbmd0aDtzLS07KXt2YXIgYz1vW3Q/czorK3JdO2lmKCExPT09bihhW2NdLGMsYSkpYnJlYWt9cmV0dXJuIGV9fX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNTEpLHI9bigxMTcpLGE9bigxMTgpLG89bigxMjEpLHM9bigxMjIpLGM9bigyNSksdT1uKDcpLGw9bigxMjYpLHA9big1NSksZj1uKDM0KSxkPW4oNiksaD1uKDEyOCksbT1uKDU2KSxnPW4oNTcpLHk9bigxMzIpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUsbixiLHYsdyx4KXt2YXIgRD1nKHQsbiksXz1nKGUsbiksRT14LmdldChfKTtpZihFKWkodCxuLEUpO2Vsc2V7dmFyIGs9dz93KEQsXyxuK1wiXCIsdCxlLHgpOnZvaWQgMCxUPXZvaWQgMD09PWs7aWYoVCl7dmFyIEM9dShfKSxTPSFDJiZwKF8pLEE9IUMmJiFTJiZtKF8pO2s9XyxDfHxTfHxBP3UoRCk/az1EOmwoRCk/az1vKEQpOlM/KFQ9ITEsaz1yKF8sITApKTpBPyhUPSExLGs9YShfLCEwKSk6az1bXTpoKF8pfHxjKF8pPyhrPUQsYyhEKT9rPXkoRCk6ZChEKSYmIWYoRCl8fChrPXMoXykpKTpUPSExfVQmJih4LnNldChfLGspLHYoayxfLGIsdyx4KSx4LmRlbGV0ZShfKSksaSh0LG4sayl9fX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbih0KXt2YXIgaT1uKDkpLHI9ZSYmIWUubm9kZVR5cGUmJmUsYT1yJiZcIm9iamVjdFwiPT10eXBlb2YgdCYmdCYmIXQubm9kZVR5cGUmJnQsbz1hJiZhLmV4cG9ydHM9PT1yP2kuQnVmZmVyOnZvaWQgMCxzPW8/by5hbGxvY1Vuc2FmZTp2b2lkIDA7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7aWYoZSlyZXR1cm4gdC5zbGljZSgpO3ZhciBuPXQubGVuZ3RoLGk9cz9zKG4pOm5ldyB0LmNvbnN0cnVjdG9yKG4pO3JldHVybiB0LmNvcHkoaSksaX19KS5jYWxsKHRoaXMsbigzNikodCkpfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMTkpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3ZhciBuPWU/aSh0LmJ1ZmZlcik6dC5idWZmZXI7cmV0dXJuIG5ldyB0LmNvbnN0cnVjdG9yKG4sdC5ieXRlT2Zmc2V0LHQubGVuZ3RoKX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEyMCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyB0LmNvbnN0cnVjdG9yKHQuYnl0ZUxlbmd0aCk7cmV0dXJuIG5ldyBpKGUpLnNldChuZXcgaSh0KSksZX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDkpLlVpbnQ4QXJyYXk7dC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7dmFyIG49LTEsaT10Lmxlbmd0aDtmb3IoZXx8KGU9QXJyYXkoaSkpOysrbjxpOyllW25dPXRbbl07cmV0dXJuIGV9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMjMpLHI9big1MyksYT1uKDU0KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuXCJmdW5jdGlvblwiIT10eXBlb2YgdC5jb25zdHJ1Y3Rvcnx8YSh0KT97fTppKHIodCkpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNikscj1PYmplY3QuY3JlYXRlLGE9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7fXJldHVybiBmdW5jdGlvbihlKXtpZighaShlKSlyZXR1cm57fTtpZihyKXJldHVybiByKGUpO3QucHJvdG90eXBlPWU7dmFyIG49bmV3IHQ7cmV0dXJuIHQucHJvdG90eXBlPXZvaWQgMCxufX0oKTt0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIHQoZShuKSl9fX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTYpLHI9bigxMCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiByKHQpJiZcIltvYmplY3QgQXJndW1lbnRzXVwiPT1pKHQpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzcpLHI9bigxMCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiByKHQpJiZpKHQpfX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24oKXtyZXR1cm4hMX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDE2KSxyPW4oNTMpLGE9bigxMCksbz1GdW5jdGlvbi5wcm90b3R5cGUscz1PYmplY3QucHJvdG90eXBlLGM9by50b1N0cmluZyx1PXMuaGFzT3duUHJvcGVydHksbD1jLmNhbGwoT2JqZWN0KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7aWYoIWEodCl8fFwiW29iamVjdCBPYmplY3RdXCIhPWkodCkpcmV0dXJuITE7dmFyIGU9cih0KTtpZihudWxsPT09ZSlyZXR1cm4hMDt2YXIgbj11LmNhbGwoZSxcImNvbnN0cnVjdG9yXCIpJiZlLmNvbnN0cnVjdG9yO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIG4mJm4gaW5zdGFuY2VvZiBuJiZjLmNhbGwobik9PWx9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxNikscj1uKDM4KSxhPW4oMTApLG89e307b1tcIltvYmplY3QgRmxvYXQzMkFycmF5XVwiXT1vW1wiW29iamVjdCBGbG9hdDY0QXJyYXldXCJdPW9bXCJbb2JqZWN0IEludDhBcnJheV1cIl09b1tcIltvYmplY3QgSW50MTZBcnJheV1cIl09b1tcIltvYmplY3QgSW50MzJBcnJheV1cIl09b1tcIltvYmplY3QgVWludDhBcnJheV1cIl09b1tcIltvYmplY3QgVWludDhDbGFtcGVkQXJyYXldXCJdPW9bXCJbb2JqZWN0IFVpbnQxNkFycmF5XVwiXT1vW1wiW29iamVjdCBVaW50MzJBcnJheV1cIl09ITAsb1tcIltvYmplY3QgQXJndW1lbnRzXVwiXT1vW1wiW29iamVjdCBBcnJheV1cIl09b1tcIltvYmplY3QgQXJyYXlCdWZmZXJdXCJdPW9bXCJbb2JqZWN0IEJvb2xlYW5dXCJdPW9bXCJbb2JqZWN0IERhdGFWaWV3XVwiXT1vW1wiW29iamVjdCBEYXRlXVwiXT1vW1wiW29iamVjdCBFcnJvcl1cIl09b1tcIltvYmplY3QgRnVuY3Rpb25dXCJdPW9bXCJbb2JqZWN0IE1hcF1cIl09b1tcIltvYmplY3QgTnVtYmVyXVwiXT1vW1wiW29iamVjdCBPYmplY3RdXCJdPW9bXCJbb2JqZWN0IFJlZ0V4cF1cIl09b1tcIltvYmplY3QgU2V0XVwiXT1vW1wiW29iamVjdCBTdHJpbmddXCJdPW9bXCJbb2JqZWN0IFdlYWtNYXBdXCJdPSExLHQuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gYSh0KSYmcih0Lmxlbmd0aCkmJiEhb1tpKHQpXX19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gdChlKX19fSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKHQpe3ZhciBpPW4oNDkpLHI9ZSYmIWUubm9kZVR5cGUmJmUsYT1yJiZcIm9iamVjdFwiPT10eXBlb2YgdCYmdCYmIXQubm9kZVR5cGUmJnQsbz1hJiZhLmV4cG9ydHM9PT1yJiZpLnByb2Nlc3Mscz1mdW5jdGlvbigpe3RyeXt2YXIgdD1hJiZhLnJlcXVpcmUmJmEucmVxdWlyZShcInV0aWxcIikudHlwZXM7cmV0dXJuIHR8fG8mJm8uYmluZGluZyYmby5iaW5kaW5nKFwidXRpbFwiKX1jYXRjaCh0KXt9fSgpO3QuZXhwb3J0cz1zfSkuY2FsbCh0aGlzLG4oMzYpKHQpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTMzKSxyPW4oNTkpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gaSh0LHIodCkpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNTgpLHI9bigzNSk7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuLGEpe3ZhciBvPSFuO258fChuPXt9KTtmb3IodmFyIHM9LTEsYz1lLmxlbmd0aDsrK3M8Yzspe3ZhciB1PWVbc10sbD1hP2Eoblt1XSx0W3VdLHUsbix0KTp2b2lkIDA7dm9pZCAwPT09bCYmKGw9dFt1XSksbz9yKG4sdSxsKTppKG4sdSxsKX1yZXR1cm4gbn19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEzNSkscj1uKDI1KSxhPW4oNyksbz1uKDU1KSxzPW4oMjYpLGM9big1NiksdT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3ZhciBuPWEodCksbD0hbiYmcih0KSxwPSFuJiYhbCYmbyh0KSxmPSFuJiYhbCYmIXAmJmModCksZD1ufHxsfHxwfHxmLGg9ZD9pKHQubGVuZ3RoLFN0cmluZyk6W10sbT1oLmxlbmd0aDtmb3IodmFyIGcgaW4gdCkhZSYmIXUuY2FsbCh0LGcpfHxkJiYoXCJsZW5ndGhcIj09Z3x8cCYmKFwib2Zmc2V0XCI9PWd8fFwicGFyZW50XCI9PWcpfHxmJiYoXCJidWZmZXJcIj09Z3x8XCJieXRlTGVuZ3RoXCI9PWd8fFwiYnl0ZU9mZnNldFwiPT1nKXx8cyhnLG0pKXx8aC5wdXNoKGcpO3JldHVybiBofX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49LTEsaT1BcnJheSh0KTsrK248dDspaVtuXT1lKG4pO3JldHVybiBpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNikscj1uKDU0KSxhPW4oMTM3KSxvPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKCFpKHQpKXJldHVybiBhKHQpO3ZhciBlPXIodCksbj1bXTtmb3IodmFyIHMgaW4gdCkoXCJjb25zdHJ1Y3RvclwiIT1zfHwhZSYmby5jYWxsKHQscykpJiZuLnB1c2gocyk7cmV0dXJuIG59fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgZT1bXTtpZihudWxsIT10KWZvcih2YXIgbiBpbiBPYmplY3QodCkpZS5wdXNoKG4pO3JldHVybiBlfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTM5KSxyPW4oMTQ0KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIGkoKGZ1bmN0aW9uKGUsbil7dmFyIGk9LTEsYT1uLmxlbmd0aCxvPWE+MT9uW2EtMV06dm9pZCAwLHM9YT4yP25bMl06dm9pZCAwO2ZvcihvPXQubGVuZ3RoPjMmJlwiZnVuY3Rpb25cIj09dHlwZW9mIG8/KGEtLSxvKTp2b2lkIDAscyYmcihuWzBdLG5bMV0scykmJihvPWE8Mz92b2lkIDA6byxhPTEpLGU9T2JqZWN0KGUpOysraTxhOyl7dmFyIGM9bltpXTtjJiZ0KGUsYyxpLG8pfXJldHVybiBlfSkpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNjApLHI9big2MSksYT1uKDYyKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gYShyKHQsZSxpKSx0K1wiXCIpfX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlLG4pe3N3aXRjaChuLmxlbmd0aCl7Y2FzZSAwOnJldHVybiB0LmNhbGwoZSk7Y2FzZSAxOnJldHVybiB0LmNhbGwoZSxuWzBdKTtjYXNlIDI6cmV0dXJuIHQuY2FsbChlLG5bMF0sblsxXSk7Y2FzZSAzOnJldHVybiB0LmNhbGwoZSxuWzBdLG5bMV0sblsyXSl9cmV0dXJuIHQuYXBwbHkoZSxuKX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDE0Mikscj1uKDUyKSxhPW4oNjApLG89cj9mdW5jdGlvbih0LGUpe3JldHVybiByKHQsXCJ0b1N0cmluZ1wiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx2YWx1ZTppKGUpLHdyaXRhYmxlOiEwfSl9OmE7dC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX19LGZ1bmN0aW9uKHQsZSl7dmFyIG49RGF0ZS5ub3c7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlPTAsaT0wO3JldHVybiBmdW5jdGlvbigpe3ZhciByPW4oKSxhPTE2LShyLWkpO2lmKGk9cixhPjApe2lmKCsrZT49ODAwKXJldHVybiBhcmd1bWVudHNbMF19ZWxzZSBlPTA7cmV0dXJuIHQuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9fX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMjEpLHI9bigzNyksYT1uKDI2KSxvPW4oNik7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuKXtpZighbyhuKSlyZXR1cm4hMTt2YXIgcz10eXBlb2YgZTtyZXR1cm4hIShcIm51bWJlclwiPT1zP3IobikmJmEoZSxuLmxlbmd0aCk6XCJzdHJpbmdcIj09cyYmZSBpbiBuKSYmaShuW2VdLHQpfX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXtjb25zdCBpPW4oMTgpLHI9bigzOSksYT1uKDE0NikoKSxvPW4oNSkscz1uKDcyKSxjPW4oNzYpO3QuZXhwb3J0cz10PT5jbGFzcyBleHRlbmRzKHR8fGEpe3N0YXRpYyBnZXQgdXRpbHMoKXtyZXR1cm4gc31zdGF0aWMgZ2V0IGVycm9ycygpe3JldHVybiBjfWNvbnN0cnVjdG9yKHQ9e30pe3N1cGVyKHQ9aSh7cmVxdWVzdDp7ZmlsZVN0b3JpbmdUaW1lb3V0OlwiMi4wNWhcIixmaWxlR2V0dGluZ1RpbWVvdXQ6XCIxaFwiLGZpbGVSZW1vdmFsVGltZW91dDpcIjZzXCIsZmlsZUxpbmtHZXR0aW5nVGltZW91dDpcIjZzXCJ9fSx0KSl9YXN5bmMgZ2V0RmlsZUxpbmsodCxlPXt9KXtyZXR1cm4oYXdhaXQgdGhpcy5yZXF1ZXN0KFwiZ2V0LWZpbGUtbGlua1wiLHtib2R5OntoYXNoOnR9LHRpbWVvdXQ6ZS50aW1lb3V0fHx0aGlzLm9wdGlvbnMucmVxdWVzdC5maWxlTGlua0dldHRpbmdUaW1lb3V0LHVzZUluaXRpYWxBZGRyZXNzOmUudXNlSW5pdGlhbEFkZHJlc3N9KSkubGlua31hc3luYyBnZXRGaWxlTGlua3ModCxlPXt9KXtyZXR1cm4oYXdhaXQgdGhpcy5yZXF1ZXN0KFwiZ2V0LWZpbGUtbGlua3NcIix7Ym9keTp7aGFzaDp0fSx0aW1lb3V0OmUudGltZW91dHx8dGhpcy5vcHRpb25zLnJlcXVlc3QuZmlsZUxpbmtHZXR0aW5nVGltZW91dCx1c2VJbml0aWFsQWRkcmVzczplLnVzZUluaXRpYWxBZGRyZXNzfSkpLmxpbmtzfWFzeW5jIGdldEZpbGVUb0J1ZmZlcih0LG49e30pe3RoaXMuZW52VGVzdCghMSxcImdldEZpbGVUb0J1ZmZlclwiKTtjb25zdCBpPW4udGltZW91dHx8dGhpcy5vcHRpb25zLnJlcXVlc3QuZmlsZUdldHRpbmdUaW1lb3V0LGE9dGhpcy5jcmVhdGVSZXF1ZXN0VGltZXIoaSk7bGV0IG89YXdhaXQgdGhpcy5yZXF1ZXN0KFwiZ2V0LWZpbGUtbGlua1wiLHtib2R5OntoYXNoOnR9LHRpbWVvdXQ6YShbdGhpcy5vcHRpb25zLnJlcXVlc3QuZmlsZUxpbmtHZXR0aW5nVGltZW91dF0pLHVzZUluaXRpYWxBZGRyZXNzOm4udXNlSW5pdGlhbEFkZHJlc3N9KTtpZighby5saW5rKXRocm93IG5ldyBjLldvcmtFcnJvcihgTGluayBmb3IgaGFzaCBcIiR7dH1cIiBpcyBub3QgZm91bmRgLFwiRVJSX1NUT1JBQ0xFX05PVF9GT1VORF9MSU5LXCIpO3JldHVybiBhd2FpdCBuZXcgUHJvbWlzZShhc3luYyh0LG4pPT57dHJ5e2NvbnN0IGk9W107KGF3YWl0IHIoby5saW5rLHRoaXMuY3JlYXRlRGVmYXVsdFJlcXVlc3RPcHRpb25zKHttZXRob2Q6XCJHRVRcIix0aW1lb3V0OmEoKX0pKSkuYm9keS5vbihcImVycm9yXCIsdD0+bihzLmlzUmVxdWVzdFRpbWVvdXRFcnJvcih0KT9zLmNyZWF0ZVJlcXVlc3RUaW1lb3V0RXJyb3IoKTp0KSkub24oXCJkYXRhXCIsdD0+aS5wdXNoKHQpKS5vbihcImVuZFwiLCgpPT50KGUuY29uY2F0KGkpKSl9Y2F0Y2godCl7bih0KX19KX1hc3luYyBnZXRGaWxlVG9QYXRoKHQsZSxuPXt9KXt0aGlzLmVudlRlc3QoITEsXCJnZXRGaWxlVG9QYXRoXCIpO2NvbnN0IGk9bi50aW1lb3V0fHx0aGlzLm9wdGlvbnMucmVxdWVzdC5maWxlR2V0dGluZ1RpbWVvdXQsYT10aGlzLmNyZWF0ZVJlcXVlc3RUaW1lcihpKTtsZXQgdT1hd2FpdCB0aGlzLnJlcXVlc3QoXCJnZXQtZmlsZS1saW5rXCIse2JvZHk6e2hhc2g6dH0sdGltZW91dDphKFt0aGlzLm9wdGlvbnMucmVxdWVzdC5maWxlTGlua0dldHRpbmdUaW1lb3V0XSksdXNlSW5pdGlhbEFkZHJlc3M6bi51c2VJbml0aWFsQWRkcmVzc30pO2lmKCF1LmxpbmspdGhyb3cgbmV3IGMuV29ya0Vycm9yKGBMaW5rIGZvciBoYXNoIFwiJHt0fVwiIGlzIG5vdCBmb3VuZGAsXCJFUlJfU1RPUkFDTEVfTk9UX0ZPVU5EX0xJTktcIik7cmV0dXJuIGF3YWl0IG5ldyBQcm9taXNlKGFzeW5jKHQsbik9Pnt0cnl7KGF3YWl0IHIodS5saW5rLHRoaXMuY3JlYXRlRGVmYXVsdFJlcXVlc3RPcHRpb25zKHttZXRob2Q6XCJHRVRcIix0aW1lb3V0OmEoKX0pKSkuYm9keS5vbihcImVycm9yXCIsdD0+bihzLmlzUmVxdWVzdFRpbWVvdXRFcnJvcih0KT9zLmNyZWF0ZVJlcXVlc3RUaW1lb3V0RXJyb3IoKTp0KSkucGlwZShvLmNyZWF0ZVdyaXRlU3RyZWFtKGUpKS5vbihcImVycm9yXCIsbikub24oXCJmaW5pc2hcIix0KX1jYXRjaCh0KXtuKHQpfX0pfWFzeW5jIGdldEZpbGVUb0Jsb2IodCxlPXt9KXt0aGlzLmVudlRlc3QoITAsXCJnZXRGaWxlVG9CbG9iXCIpO2NvbnN0IG49ZS50aW1lb3V0fHx0aGlzLm9wdGlvbnMucmVxdWVzdC5maWxlR2V0dGluZ1RpbWVvdXQsaT10aGlzLmNyZWF0ZVJlcXVlc3RUaW1lcihuKTtsZXQgYT1hd2FpdCB0aGlzLnJlcXVlc3QoXCJnZXQtZmlsZS1saW5rXCIse2JvZHk6e2hhc2g6dH0sdGltZW91dDppKFt0aGlzLm9wdGlvbnMucmVxdWVzdC5maWxlTGlua0dldHRpbmdUaW1lb3V0XSksdXNlSW5pdGlhbEFkZHJlc3M6ZS51c2VJbml0aWFsQWRkcmVzc30pO2lmKCFhLmxpbmspdGhyb3cgbmV3IGMuV29ya0Vycm9yKGBMaW5rIGZvciBoYXNoIFwiJHt0fVwiIGlzIG5vdCBmb3VuZGAsXCJFUlJfU1RPUkFDTEVfTk9UX0ZPVU5EX0xJTktcIik7cmV0dXJuIGE9YXdhaXQgcihhLmxpbmssdGhpcy5jcmVhdGVEZWZhdWx0UmVxdWVzdE9wdGlvbnMoe21ldGhvZDpcIkdFVFwiLHRpbWVvdXQ6aSgpfSkpLGEuYmxvYigpfWFzeW5jIHN0b3JlRmlsZSh0LGU9e30pe2NvbnN0IG49KCk9PnMuaXNGaWxlUmVhZFN0cmVhbSh0KSYmdC5kZXN0cm95KCk7dHJ5e2NvbnN0IGk9YXdhaXQgcy5nZXRGaWxlSW5mbyh0KTtcInN0cmluZ1wiPT10eXBlb2YgdCYmKHQ9by5jcmVhdGVSZWFkU3RyZWFtKHQpKTtjb25zdCByPWF3YWl0IHRoaXMucmVxdWVzdChcInN0b3JlLWZpbGVcIix7Zm9ybURhdGE6e2ZpbGU6e3ZhbHVlOnQsb3B0aW9uczp7ZmlsZW5hbWU6aS5oYXNoKyhpLmV4dD9cIi5cIitpLmV4dDpcIlwiKSxjb250ZW50VHlwZTppLm1pbWV9fX0sdGltZW91dDplLnRpbWVvdXR8fHRoaXMub3B0aW9ucy5yZXF1ZXN0LmZpbGVTdG9yaW5nVGltZW91dCx1c2VJbml0aWFsQWRkcmVzczplLnVzZUluaXRpYWxBZGRyZXNzfSk7cmV0dXJuIG4oKSxyLmhhc2h9Y2F0Y2godCl7dGhyb3cgbigpLHR9fWFzeW5jIHJlbW92ZUZpbGUodCxlPXt9KXtyZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KFwicmVtb3ZlLWZpbGVcIix7Ym9keTp7aGFzaDp0fSx0aW1lb3V0OmUudGltZW91dHx8dGhpcy5vcHRpb25zLnJlcXVlc3QuZmlsZVJlbW92YWxUaW1lb3V0LHVzZUluaXRpYWxBZGRyZXNzOmUudXNlSW5pdGlhbEFkZHJlc3N9KX1jcmVhdGVSZXF1ZXN0ZWRGaWxlTGluayh0LGU9e30pe3JldHVybiB0aGlzLmNyZWF0ZVJlcXVlc3RVcmwoYHJlcXVlc3QtZmlsZS8ke3R9YCxlKX1wcmVwYXJlT3B0aW9ucygpe3N1cGVyLnByZXBhcmVPcHRpb25zKCksdGhpcy5vcHRpb25zLnJlcXVlc3QuZmlsZUdldHRpbmdUaW1lb3V0PXMuZ2V0TXModGhpcy5vcHRpb25zLnJlcXVlc3QuZmlsZUdldHRpbmdUaW1lb3V0KSx0aGlzLm9wdGlvbnMucmVxdWVzdC5maWxlU3RvcmluZ1RpbWVvdXQ9cy5nZXRNcyh0aGlzLm9wdGlvbnMucmVxdWVzdC5maWxlU3RvcmluZ1RpbWVvdXQpLHRoaXMub3B0aW9ucy5yZXF1ZXN0LmZpbGVSZW1vdmFsVGltZW91dD1zLmdldE1zKHRoaXMub3B0aW9ucy5yZXF1ZXN0LmZpbGVSZW1vdmFsVGltZW91dCksdGhpcy5vcHRpb25zLnJlcXVlc3QuZmlsZUxpbmtHZXR0aW5nVGltZW91dD1zLmdldE1zKHRoaXMub3B0aW9ucy5yZXF1ZXN0LmZpbGVMaW5rR2V0dGluZ1RpbWVvdXQpfX19KS5jYWxsKHRoaXMsbigxKS5CdWZmZXIpfSxmdW5jdGlvbih0LGUsbil7Y29uc3QgaT1uKDE4KSxyPW4oMzkpLGE9bigxNDcpLG89bigxNDgpLHM9bigxNTkpLGM9bigyOSksdT1uKDMxKSxsPW4oNjkpLHA9bigxNzIpKCksZj1uKDE3NCkoKSxkPW4oNDMpKCk7dC5leHBvcnRzPXQ9PmNsYXNzIGV4dGVuZHModHx8ZCl7c3RhdGljIGdldCBMb2dnZXJUcmFuc3BvcnQoKXtyZXR1cm4gcH1zdGF0aWMgZ2V0IFRhc2tUcmFuc3BvcnQoKXtyZXR1cm4gZn1jb25zdHJ1Y3Rvcih0PXt9KXtpZihzdXBlciguLi5hcmd1bWVudHMpLCF0LmFkZHJlc3MpdGhyb3cgbmV3IEVycm9yKCdZb3UgbXVzdCBwYXNzIHRoZSBub2RlIGFkZHJlc3MgaW4gXCJpcDpwb3J0XCIgZm9ybWF0Jyk7dGhpcy5vcHRpb25zPWkoe3JlcXVlc3Q6e3BpbmdUaW1lb3V0OlwiMXNcIixjbGllbnRUaW1lb3V0OlwiOHNcIn0sc2VjcmV0S2V5OlwiXCIsaHR0cHM6ITEsbG9nZ2VyOntsZXZlbDpcImluZm9cIn0sdGFzazp7d29ya2VyQ2hhbmdlSW50ZXJ2YWw6XCIzMHNcIn19LHQpLCF0aGlzLm9wdGlvbnMubG9nZ2VyJiYodGhpcy5vcHRpb25zLmxvZ2dlcj17bGV2ZWw6ITF9KSx0aGlzLkxvZ2dlclRyYW5zcG9ydD10aGlzLmNvbnN0cnVjdG9yLkxvZ2dlclRyYW5zcG9ydCx0aGlzLlRhc2tUcmFuc3BvcnQ9dGhpcy5jb25zdHJ1Y3Rvci5UYXNrVHJhbnNwb3J0LHRoaXMuYWRkcmVzcz10LmFkZHJlc3MsdGhpcy5wcmVwYXJlT3B0aW9ucygpfWFzeW5jIGluaXQoKXthd2FpdCB0aGlzLnByZXBhcmVTZXJ2aWNlcygpLGF3YWl0IHRoaXMuaW5pdFNlcnZpY2VzKCk7Y29uc3QgdD1BcnJheS5pc0FycmF5KHRoaXMuYWRkcmVzcyk/dGhpcy5hZGRyZXNzOlt0aGlzLmFkZHJlc3NdLGU9YXdhaXQgdGhpcy5nZXRBdmFpbGFibGVBZGRyZXNzKHQpO2lmKCFlKXRocm93IG5ldyBFcnJvcihcIlByb3ZpZGVkIGFkZHJlc3NlcyBhcmUgbm90IGF2YWlsYWJsZVwiKTt0aGlzLndvcmtlckFkZHJlc3M9ZSxhd2FpdCB0aGlzLmNoYW5nZVdvcmtlcigpLHN1cGVyLmluaXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfWFzeW5jIGRlaW5pdCgpe2F3YWl0IHRoaXMuZGVpbml0U2VydmljZXMoKSxzdXBlci5kZWluaXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfWFzeW5jIHByZXBhcmVTZXJ2aWNlcygpe3RoaXMubG9nZ2VyPW5ldyB0aGlzLkxvZ2dlclRyYW5zcG9ydCh0aGlzLHRoaXMub3B0aW9ucy5sb2dnZXIpLHRoaXMub3B0aW9ucy50YXNrJiYodGhpcy50YXNrPW5ldyB0aGlzLlRhc2tUcmFuc3BvcnQodGhpcyx0aGlzLm9wdGlvbnMudGFzaykpLHRoaXMudGFzayYmdGhpcy5vcHRpb25zLnRhc2sud29ya2VyQ2hhbmdlSW50ZXJ2YWwmJmF3YWl0IHRoaXMudGFzay5hZGQoXCJ3b3JrZXJDaGFuZ2VcIix0aGlzLm9wdGlvbnMudGFzay53b3JrZXJDaGFuZ2VJbnRlcnZhbCwoKT0+dGhpcy5jaGFuZ2VXb3JrZXIoKSl9YXN5bmMgaW5pdFNlcnZpY2VzKCl7YXdhaXQgdGhpcy5sb2dnZXIuaW5pdCgpLHRoaXMudGFzayYmYXdhaXQgdGhpcy50YXNrLmluaXQoKX1hc3luYyBkZWluaXRTZXJ2aWNlcygpe3RoaXMudGFzayYmYXdhaXQgdGhpcy50YXNrLmRlaW5pdCgpLGF3YWl0IHRoaXMubG9nZ2VyLmRlaW5pdCgpfWFzeW5jIGdldEF2YWlsYWJsZUFkZHJlc3ModCl7bGV0IGU7Zm9yKGxldCBuPTA7bjx0Lmxlbmd0aDtuKyspe2NvbnN0IGk9dFtuXTt0cnl7YXdhaXQgcihgJHt0aGlzLmdldFJlcXVlc3RQcm90b2NvbCgpfTovLyR7aX0vcGluZ2AsdGhpcy5jcmVhdGVEZWZhdWx0UmVxdWVzdE9wdGlvbnMoe21ldGhvZDpcIkdFVFwiLHRpbWVvdXQ6dGhpcy5vcHRpb25zLnJlcXVlc3QucGluZ1RpbWVvdXR9KSksZT1pO2JyZWFrfWNhdGNoKHQpe3RoaXMubG9nZ2VyLndhcm4odC5zdGFjayl9fXJldHVybiBlfHxudWxsfWFzeW5jIGNoYW5nZVdvcmtlcigpe2NvbnN0IHQ9dGhpcy53b3JrZXJBZGRyZXNzLGU9KGF3YWl0IHRoaXMucmVxdWVzdChcImdldC1hdmFpbGFibGUtbm9kZVwiLHt1c2VJbml0aWFsQWRkcmVzczohMH0pKS5hZGRyZXNzO2lmKGUhPXQpdHJ5e2F3YWl0IHIoYCR7dGhpcy5nZXRSZXF1ZXN0UHJvdG9jb2woKX06Ly8ke2V9L3BpbmdgLHRoaXMuY3JlYXRlRGVmYXVsdFJlcXVlc3RPcHRpb25zKHttZXRob2Q6XCJHRVRcIix0aW1lb3V0OnRoaXMub3B0aW9ucy5yZXF1ZXN0LnBpbmdUaW1lb3V0fSkpLHRoaXMud29ya2VyQWRkcmVzcz1lfWNhdGNoKGUpe3RoaXMubG9nZ2VyLndhcm4oZS5zdGFjayksdGhpcy53b3JrZXJBZGRyZXNzPXR9fWFzeW5jIHJlcXVlc3QodCxlPXt9KXtsZXQgbj0oZT1pKHRoaXMuY3JlYXRlRGVmYXVsdFJlcXVlc3RPcHRpb25zKCksZSkpLmZvcm1EYXRhfHxlLmJvZHl8fHt9O2lmKG4udGltZW91dD1lLnRpbWVvdXQsbi50aW1lc3RhbXA9RGF0ZS5ub3coKSxlLmZvcm1EYXRhKXtjb25zdCB0PW5ldyBhO2ZvcihsZXQgZSBpbiBuKXtsZXQgaT1uW2VdO1wib2JqZWN0XCI9PXR5cGVvZiBpP3QuYXBwZW5kKGUsaS52YWx1ZSxpLm9wdGlvbnMpOnQuYXBwZW5kKGUsaSl9ZS5ib2R5PXQsZGVsZXRlIGUuZm9ybURhdGF9ZWxzZSBlLmhlYWRlcnNbXCJjb250ZW50LXR5cGVcIl09XCJhcHBsaWNhdGlvbi9qc29uXCIsZS5ib2R5PUpTT04uc3RyaW5naWZ5KG4pO2UudXJsPXRoaXMuY3JlYXRlUmVxdWVzdFVybCh0LHt1c2VJbml0aWFsQWRkcmVzczplLnVzZUluaXRpYWxBZGRyZXNzfSk7Y29uc3Qgbz1EYXRlLm5vdygpO3RyeXtjb25zdCB0PWF3YWl0IHIoZS51cmwsZSk7dGhpcy5sb2dnZXIuaW5mbyhgUmVxdWVzdCB0byBcIiR7ZS51cmx9XCI6ICR7bChEYXRlLm5vdygpLW8pfWApO2NvbnN0IG49YXdhaXQgdC5qc29uKCk7aWYodC5vaylyZXR1cm4gbjtpZighbnx8XCJvYmplY3RcIiE9dHlwZW9mIG4pdGhyb3cgbmV3IEVycm9yKG58fFwiVW5rbm93biBlcnJvclwiKTtpZighbi5jb2RlKXRocm93IG5ldyBFcnJvcihuLm1lc3NhZ2UpO3Rocm93IG5ldyB1LldvcmtFcnJvcihuLm1lc3NhZ2Usbi5jb2RlKX1jYXRjaCh0KXt0aHJvdyBjLmlzUmVxdWVzdFRpbWVvdXRFcnJvcih0KSYmKHQ9Yy5jcmVhdGVSZXF1ZXN0VGltZW91dEVycm9yKCkpLHQucmVxdWVzdE9wdGlvbnM9ZSx0fX1jcmVhdGVSZXF1ZXN0VXJsKHQsZT17fSl7Y29uc3Qgbj1lLnF1ZXJ5P3Muc3RyaW5naWZ5KGUucXVlcnkpOm51bGwsaT1lLnVzZUluaXRpYWxBZGRyZXNzP3RoaXMuYWRkcmVzczp0aGlzLndvcmtlckFkZHJlc3M7bGV0IHI9YCR7dGhpcy5nZXRSZXF1ZXN0UHJvdG9jb2woKX06Ly8ke2l9L2NsaWVudC8ke3R9YDtyZXR1cm4gbiYmKHIrPVwiP1wiK24pLHJ9Y3JlYXRlRGVmYXVsdFJlcXVlc3RPcHRpb25zKHQ9e30pe2NvbnN0IGU9e21ldGhvZDpcIlBPU1RcIix0aW1lb3V0OnRoaXMub3B0aW9ucy5yZXF1ZXN0LmNsaWVudFRpbWVvdXQsaGVhZGVyczp7XCJuZXR3b3JrLXNlY3JldC1rZXlcIjp0aGlzLm9wdGlvbnMuc2VjcmV0S2V5fX07cmV0dXJuIHQudGltZW91dCYmKHQudGltZW91dD1jLmdldE1zKHQudGltZW91dCkpLFwib2JqZWN0XCI9PXR5cGVvZiB0aGlzLm9wdGlvbnMuaHR0cHMmJnRoaXMub3B0aW9ucy5odHRwcy5jYSYmKHQuYWdlbnQ9dC5hZ2VudHx8bmV3IG8uQWdlbnQsdC5hZ2VudC5vcHRpb25zLmNhPXRoaXMub3B0aW9ucy5odHRwcy5jYSksaSh7fSxlLHQpfWNyZWF0ZVJlcXVlc3RUaW1lcih0KXtyZXR1cm4gYy5nZXRSZXF1ZXN0VGltZXIodCx7bWluOnRoaXMub3B0aW9ucy5yZXF1ZXN0LnBpbmdUaW1lb3V0fSl9cHJlcGFyZU9wdGlvbnMoKXt0aGlzLm9wdGlvbnMucmVxdWVzdC5jbGllbnRUaW1lb3V0PWMuZ2V0TXModGhpcy5vcHRpb25zLnJlcXVlc3QuY2xpZW50VGltZW91dCl9Z2V0UmVxdWVzdFByb3RvY29sKCl7cmV0dXJuIHRoaXMub3B0aW9ucy5odHRwcz9cImh0dHBzXCI6XCJodHRwXCJ9ZW52VGVzdCh0LGUpe2NvbnN0IG49Yy5pc0Jyb3dzZXJFbnYoKTtpZih0JiYhbil0aHJvdyBuZXcgRXJyb3IoYFlvdSBjYW4ndCB1c2UgXCIke2V9XCIgbWV0aG9kIGluIHRoZSBub2RlanMgZW52aXJvbm1lbnRgKTtpZighdCYmbil0aHJvdyBuZXcgRXJyb3IoYFlvdSBjYW4ndCB1c2UgXCIke2V9XCIgbWV0aG9kIGluIHRoZSBicm93c2VyIGVudmlyb25tZW50YCl9fX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9XCJvYmplY3RcIj09dHlwZW9mIHNlbGY/c2VsZi5Gb3JtRGF0YTp3aW5kb3cuRm9ybURhdGF9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDE0OSkscj1uKDUpLGE9dC5leHBvcnRzO2Zvcih2YXIgbyBpbiBpKWkuaGFzT3duUHJvcGVydHkobykmJihhW29dPWlbb10pO2Z1bmN0aW9uIHModCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQmJih0PXIucGFyc2UodCkpLHQucHJvdG9jb2x8fCh0LnByb3RvY29sPVwiaHR0cHM6XCIpLFwiaHR0cHM6XCIhPT10LnByb3RvY29sKXRocm93IG5ldyBFcnJvcignUHJvdG9jb2wgXCInK3QucHJvdG9jb2wrJ1wiIG5vdCBzdXBwb3J0ZWQuIEV4cGVjdGVkIFwiaHR0cHM6XCInKTtyZXR1cm4gdH1hLnJlcXVlc3Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD1zKHQpLGkucmVxdWVzdC5jYWxsKHRoaXMsdCxlKX0sYS5nZXQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD1zKHQpLGkuZ2V0LmNhbGwodGhpcyx0LGUpfX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbih0KXt2YXIgaT1uKDE1MCkscj1uKDY0KSxhPW4oMTU3KSxvPW4oMTU4KSxzPW4oNSksYz1lO2MucmVxdWVzdD1mdW5jdGlvbihlLG4pe2U9XCJzdHJpbmdcIj09dHlwZW9mIGU/cy5wYXJzZShlKTphKGUpO3ZhciByPS0xPT09dC5sb2NhdGlvbi5wcm90b2NvbC5zZWFyY2goL15odHRwcz86JC8pP1wiaHR0cDpcIjpcIlwiLG89ZS5wcm90b2NvbHx8cixjPWUuaG9zdG5hbWV8fGUuaG9zdCx1PWUucG9ydCxsPWUucGF0aHx8XCIvXCI7YyYmLTEhPT1jLmluZGV4T2YoXCI6XCIpJiYoYz1cIltcIitjK1wiXVwiKSxlLnVybD0oYz9vK1wiLy9cIitjOlwiXCIpKyh1P1wiOlwiK3U6XCJcIikrbCxlLm1ldGhvZD0oZS5tZXRob2R8fFwiR0VUXCIpLnRvVXBwZXJDYXNlKCksZS5oZWFkZXJzPWUuaGVhZGVyc3x8e307dmFyIHA9bmV3IGkoZSk7cmV0dXJuIG4mJnAub24oXCJyZXNwb25zZVwiLG4pLHB9LGMuZ2V0PWZ1bmN0aW9uKHQsZSl7dmFyIG49Yy5yZXF1ZXN0KHQsZSk7cmV0dXJuIG4uZW5kKCksbn0sYy5DbGllbnRSZXF1ZXN0PWksYy5JbmNvbWluZ01lc3NhZ2U9ci5JbmNvbWluZ01lc3NhZ2UsYy5BZ2VudD1mdW5jdGlvbigpe30sYy5BZ2VudC5kZWZhdWx0TWF4U29ja2V0cz00LGMuZ2xvYmFsQWdlbnQ9bmV3IGMuQWdlbnQsYy5TVEFUVVNfQ09ERVM9byxjLk1FVEhPRFM9W1wiQ0hFQ0tPVVRcIixcIkNPTk5FQ1RcIixcIkNPUFlcIixcIkRFTEVURVwiLFwiR0VUXCIsXCJIRUFEXCIsXCJMT0NLXCIsXCJNLVNFQVJDSFwiLFwiTUVSR0VcIixcIk1LQUNUSVZJVFlcIixcIk1LQ09MXCIsXCJNT1ZFXCIsXCJOT1RJRllcIixcIk9QVElPTlNcIixcIlBBVENIXCIsXCJQT1NUXCIsXCJQUk9QRklORFwiLFwiUFJPUFBBVENIXCIsXCJQVVJHRVwiLFwiUFVUXCIsXCJSRVBPUlRcIixcIlNFQVJDSFwiLFwiU1VCU0NSSUJFXCIsXCJUUkFDRVwiLFwiVU5MT0NLXCIsXCJVTlNVQlNDUklCRVwiXX0pLmNhbGwodGhpcyxuKDQpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkscil7dmFyIGE9big2Myksbz1uKDApLHM9big2NCksYz1uKDE3KSx1PW4oMTU2KSxsPXMuSW5jb21pbmdNZXNzYWdlLHA9cy5yZWFkeVN0YXRlczt2YXIgZj10LmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIG4saT10aGlzO2MuV3JpdGFibGUuY2FsbChpKSxpLl9vcHRzPXQsaS5fYm9keT1bXSxpLl9oZWFkZXJzPXt9LHQuYXV0aCYmaS5zZXRIZWFkZXIoXCJBdXRob3JpemF0aW9uXCIsXCJCYXNpYyBcIituZXcgZSh0LmF1dGgpLnRvU3RyaW5nKFwiYmFzZTY0XCIpKSxPYmplY3Qua2V5cyh0LmhlYWRlcnMpLmZvckVhY2goKGZ1bmN0aW9uKGUpe2kuc2V0SGVhZGVyKGUsdC5oZWFkZXJzW2VdKX0pKTt2YXIgcj0hMDtpZihcImRpc2FibGUtZmV0Y2hcIj09PXQubW9kZXx8XCJyZXF1ZXN0VGltZW91dFwiaW4gdCYmIWEuYWJvcnRDb250cm9sbGVyKXI9ITEsbj0hMDtlbHNlIGlmKFwicHJlZmVyLXN0cmVhbWluZ1wiPT09dC5tb2RlKW49ITE7ZWxzZSBpZihcImFsbG93LXdyb25nLWNvbnRlbnQtdHlwZVwiPT09dC5tb2RlKW49IWEub3ZlcnJpZGVNaW1lVHlwZTtlbHNle2lmKHQubW9kZSYmXCJkZWZhdWx0XCIhPT10Lm1vZGUmJlwicHJlZmVyLWZhc3RcIiE9PXQubW9kZSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHZhbHVlIGZvciBvcHRzLm1vZGVcIik7bj0hMH1pLl9tb2RlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGEuZmV0Y2gmJmU/XCJmZXRjaFwiOmEubW96Y2h1bmtlZGFycmF5YnVmZmVyP1wibW96LWNodW5rZWQtYXJyYXlidWZmZXJcIjphLm1zc3RyZWFtP1wibXMtc3RyZWFtXCI6YS5hcnJheWJ1ZmZlciYmdD9cImFycmF5YnVmZmVyXCI6YS52YkFycmF5JiZ0P1widGV4dDp2YmFycmF5XCI6XCJ0ZXh0XCJ9KG4sciksaS5fZmV0Y2hUaW1lcj1udWxsLGkub24oXCJmaW5pc2hcIiwoZnVuY3Rpb24oKXtpLl9vbkZpbmlzaCgpfSkpfTtvKGYsYy5Xcml0YWJsZSksZi5wcm90b3R5cGUuc2V0SGVhZGVyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC50b0xvd2VyQ2FzZSgpOy0xPT09ZC5pbmRleE9mKG4pJiYodGhpcy5faGVhZGVyc1tuXT17bmFtZTp0LHZhbHVlOmV9KX0sZi5wcm90b3R5cGUuZ2V0SGVhZGVyPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2hlYWRlcnNbdC50b0xvd2VyQ2FzZSgpXTtyZXR1cm4gZT9lLnZhbHVlOm51bGx9LGYucHJvdG90eXBlLnJlbW92ZUhlYWRlcj1mdW5jdGlvbih0KXtkZWxldGUgdGhpcy5faGVhZGVyc1t0LnRvTG93ZXJDYXNlKCldfSxmLnByb3RvdHlwZS5fb25GaW5pc2g9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCF0Ll9kZXN0cm95ZWQpe3ZhciBuPXQuX29wdHMsbz10Ll9oZWFkZXJzLHM9bnVsbDtcIkdFVFwiIT09bi5tZXRob2QmJlwiSEVBRFwiIT09bi5tZXRob2QmJihzPWEuYXJyYXlidWZmZXI/dShlLmNvbmNhdCh0Ll9ib2R5KSk6YS5ibG9iQ29uc3RydWN0b3I/bmV3IGkuQmxvYih0Ll9ib2R5Lm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHUodCl9KSkse3R5cGU6KG9bXCJjb250ZW50LXR5cGVcIl18fHt9KS52YWx1ZXx8XCJcIn0pOmUuY29uY2F0KHQuX2JvZHkpLnRvU3RyaW5nKCkpO3ZhciBjPVtdO2lmKE9iamVjdC5rZXlzKG8pLmZvckVhY2goKGZ1bmN0aW9uKHQpe3ZhciBlPW9bdF0ubmFtZSxuPW9bdF0udmFsdWU7QXJyYXkuaXNBcnJheShuKT9uLmZvckVhY2goKGZ1bmN0aW9uKHQpe2MucHVzaChbZSx0XSl9KSk6Yy5wdXNoKFtlLG5dKX0pKSxcImZldGNoXCI9PT10Ll9tb2RlKXt2YXIgbD1udWxsO2lmKGEuYWJvcnRDb250cm9sbGVyKXt2YXIgZj1uZXcgQWJvcnRDb250cm9sbGVyO2w9Zi5zaWduYWwsdC5fZmV0Y2hBYm9ydENvbnRyb2xsZXI9ZixcInJlcXVlc3RUaW1lb3V0XCJpbiBuJiYwIT09bi5yZXF1ZXN0VGltZW91dCYmKHQuX2ZldGNoVGltZXI9aS5zZXRUaW1lb3V0KChmdW5jdGlvbigpe3QuZW1pdChcInJlcXVlc3RUaW1lb3V0XCIpLHQuX2ZldGNoQWJvcnRDb250cm9sbGVyJiZ0Ll9mZXRjaEFib3J0Q29udHJvbGxlci5hYm9ydCgpfSksbi5yZXF1ZXN0VGltZW91dCkpfWkuZmV0Y2godC5fb3B0cy51cmwse21ldGhvZDp0Ll9vcHRzLm1ldGhvZCxoZWFkZXJzOmMsYm9keTpzfHx2b2lkIDAsbW9kZTpcImNvcnNcIixjcmVkZW50aWFsczpuLndpdGhDcmVkZW50aWFscz9cImluY2x1ZGVcIjpcInNhbWUtb3JpZ2luXCIsc2lnbmFsOmx9KS50aGVuKChmdW5jdGlvbihlKXt0Ll9mZXRjaFJlc3BvbnNlPWUsdC5fY29ubmVjdCgpfSksKGZ1bmN0aW9uKGUpe2kuY2xlYXJUaW1lb3V0KHQuX2ZldGNoVGltZXIpLHQuX2Rlc3Ryb3llZHx8dC5lbWl0KFwiZXJyb3JcIixlKX0pKX1lbHNle3ZhciBkPXQuX3hocj1uZXcgaS5YTUxIdHRwUmVxdWVzdDt0cnl7ZC5vcGVuKHQuX29wdHMubWV0aG9kLHQuX29wdHMudXJsLCEwKX1jYXRjaChlKXtyZXR1cm4gdm9pZCByLm5leHRUaWNrKChmdW5jdGlvbigpe3QuZW1pdChcImVycm9yXCIsZSl9KSl9XCJyZXNwb25zZVR5cGVcImluIGQmJihkLnJlc3BvbnNlVHlwZT10Ll9tb2RlLnNwbGl0KFwiOlwiKVswXSksXCJ3aXRoQ3JlZGVudGlhbHNcImluIGQmJihkLndpdGhDcmVkZW50aWFscz0hIW4ud2l0aENyZWRlbnRpYWxzKSxcInRleHRcIj09PXQuX21vZGUmJlwib3ZlcnJpZGVNaW1lVHlwZVwiaW4gZCYmZC5vdmVycmlkZU1pbWVUeXBlKFwidGV4dC9wbGFpbjsgY2hhcnNldD14LXVzZXItZGVmaW5lZFwiKSxcInJlcXVlc3RUaW1lb3V0XCJpbiBuJiYoZC50aW1lb3V0PW4ucmVxdWVzdFRpbWVvdXQsZC5vbnRpbWVvdXQ9ZnVuY3Rpb24oKXt0LmVtaXQoXCJyZXF1ZXN0VGltZW91dFwiKX0pLGMuZm9yRWFjaCgoZnVuY3Rpb24odCl7ZC5zZXRSZXF1ZXN0SGVhZGVyKHRbMF0sdFsxXSl9KSksdC5fcmVzcG9uc2U9bnVsbCxkLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe3N3aXRjaChkLnJlYWR5U3RhdGUpe2Nhc2UgcC5MT0FESU5HOmNhc2UgcC5ET05FOnQuX29uWEhSUHJvZ3Jlc3MoKX19LFwibW96LWNodW5rZWQtYXJyYXlidWZmZXJcIj09PXQuX21vZGUmJihkLm9ucHJvZ3Jlc3M9ZnVuY3Rpb24oKXt0Ll9vblhIUlByb2dyZXNzKCl9KSxkLm9uZXJyb3I9ZnVuY3Rpb24oKXt0Ll9kZXN0cm95ZWR8fHQuZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiWEhSIGVycm9yXCIpKX07dHJ5e2Quc2VuZChzKX1jYXRjaChlKXtyZXR1cm4gdm9pZCByLm5leHRUaWNrKChmdW5jdGlvbigpe3QuZW1pdChcImVycm9yXCIsZSl9KSl9fX19LGYucHJvdG90eXBlLl9vblhIUlByb2dyZXNzPWZ1bmN0aW9uKCl7KGZ1bmN0aW9uKHQpe3RyeXt2YXIgZT10LnN0YXR1cztyZXR1cm4gbnVsbCE9PWUmJjAhPT1lfWNhdGNoKHQpe3JldHVybiExfX0pKHRoaXMuX3hocikmJiF0aGlzLl9kZXN0cm95ZWQmJih0aGlzLl9yZXNwb25zZXx8dGhpcy5fY29ubmVjdCgpLHRoaXMuX3Jlc3BvbnNlLl9vblhIUlByb2dyZXNzKCkpfSxmLnByb3RvdHlwZS5fY29ubmVjdD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dC5fZGVzdHJveWVkfHwodC5fcmVzcG9uc2U9bmV3IGwodC5feGhyLHQuX2ZldGNoUmVzcG9uc2UsdC5fbW9kZSx0Ll9mZXRjaFRpbWVyKSx0Ll9yZXNwb25zZS5vbihcImVycm9yXCIsKGZ1bmN0aW9uKGUpe3QuZW1pdChcImVycm9yXCIsZSl9KSksdC5lbWl0KFwicmVzcG9uc2VcIix0Ll9yZXNwb25zZSkpfSxmLnByb3RvdHlwZS5fd3JpdGU9ZnVuY3Rpb24odCxlLG4pe3RoaXMuX2JvZHkucHVzaCh0KSxuKCl9LGYucHJvdG90eXBlLmFib3J0PWYucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLl9kZXN0cm95ZWQ9ITAsaS5jbGVhclRpbWVvdXQodGhpcy5fZmV0Y2hUaW1lciksdGhpcy5fcmVzcG9uc2UmJih0aGlzLl9yZXNwb25zZS5fZGVzdHJveWVkPSEwKSx0aGlzLl94aHI/dGhpcy5feGhyLmFib3J0KCk6dGhpcy5fZmV0Y2hBYm9ydENvbnRyb2xsZXImJnRoaXMuX2ZldGNoQWJvcnRDb250cm9sbGVyLmFib3J0KCl9LGYucHJvdG90eXBlLmVuZD1mdW5jdGlvbih0LGUsbil7XCJmdW5jdGlvblwiPT10eXBlb2YgdCYmKG49dCx0PXZvaWQgMCksYy5Xcml0YWJsZS5wcm90b3R5cGUuZW5kLmNhbGwodGhpcyx0LGUsbil9LGYucHJvdG90eXBlLmZsdXNoSGVhZGVycz1mdW5jdGlvbigpe30sZi5wcm90b3R5cGUuc2V0VGltZW91dD1mdW5jdGlvbigpe30sZi5wcm90b3R5cGUuc2V0Tm9EZWxheT1mdW5jdGlvbigpe30sZi5wcm90b3R5cGUuc2V0U29ja2V0S2VlcEFsaXZlPWZ1bmN0aW9uKCl7fTt2YXIgZD1bXCJhY2NlcHQtY2hhcnNldFwiLFwiYWNjZXB0LWVuY29kaW5nXCIsXCJhY2Nlc3MtY29udHJvbC1yZXF1ZXN0LWhlYWRlcnNcIixcImFjY2Vzcy1jb250cm9sLXJlcXVlc3QtbWV0aG9kXCIsXCJjb25uZWN0aW9uXCIsXCJjb250ZW50LWxlbmd0aFwiLFwiY29va2llXCIsXCJjb29raWUyXCIsXCJkYXRlXCIsXCJkbnRcIixcImV4cGVjdFwiLFwiaG9zdFwiLFwia2VlcC1hbGl2ZVwiLFwib3JpZ2luXCIsXCJyZWZlcmVyXCIsXCJ0ZVwiLFwidHJhaWxlclwiLFwidHJhbnNmZXItZW5jb2RpbmdcIixcInVwZ3JhZGVcIixcInZpYVwiXX0pLmNhbGwodGhpcyxuKDEpLkJ1ZmZlcixuKDQpLG4oMykpfSxmdW5jdGlvbih0LGUpe30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPW4oMikuQnVmZmVyLHI9bigxNTMpO3QuZXhwb3J0cz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLHQpLHRoaXMuaGVhZD1udWxsLHRoaXMudGFpbD1udWxsLHRoaXMubGVuZ3RoPTB9cmV0dXJuIHQucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24odCl7dmFyIGU9e2RhdGE6dCxuZXh0Om51bGx9O3RoaXMubGVuZ3RoPjA/dGhpcy50YWlsLm5leHQ9ZTp0aGlzLmhlYWQ9ZSx0aGlzLnRhaWw9ZSwrK3RoaXMubGVuZ3RofSx0LnByb3RvdHlwZS51bnNoaWZ0PWZ1bmN0aW9uKHQpe3ZhciBlPXtkYXRhOnQsbmV4dDp0aGlzLmhlYWR9OzA9PT10aGlzLmxlbmd0aCYmKHRoaXMudGFpbD1lKSx0aGlzLmhlYWQ9ZSwrK3RoaXMubGVuZ3RofSx0LnByb3RvdHlwZS5zaGlmdD1mdW5jdGlvbigpe2lmKDAhPT10aGlzLmxlbmd0aCl7dmFyIHQ9dGhpcy5oZWFkLmRhdGE7cmV0dXJuIDE9PT10aGlzLmxlbmd0aD90aGlzLmhlYWQ9dGhpcy50YWlsPW51bGw6dGhpcy5oZWFkPXRoaXMuaGVhZC5uZXh0LC0tdGhpcy5sZW5ndGgsdH19LHQucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5oZWFkPXRoaXMudGFpbD1udWxsLHRoaXMubGVuZ3RoPTB9LHQucHJvdG90eXBlLmpvaW49ZnVuY3Rpb24odCl7aWYoMD09PXRoaXMubGVuZ3RoKXJldHVyblwiXCI7Zm9yKHZhciBlPXRoaXMuaGVhZCxuPVwiXCIrZS5kYXRhO2U9ZS5uZXh0OyluKz10K2UuZGF0YTtyZXR1cm4gbn0sdC5wcm90b3R5cGUuY29uY2F0PWZ1bmN0aW9uKHQpe2lmKDA9PT10aGlzLmxlbmd0aClyZXR1cm4gaS5hbGxvYygwKTtpZigxPT09dGhpcy5sZW5ndGgpcmV0dXJuIHRoaXMuaGVhZC5kYXRhO2Zvcih2YXIgZSxuLHIsYT1pLmFsbG9jVW5zYWZlKHQ+Pj4wKSxvPXRoaXMuaGVhZCxzPTA7bzspZT1vLmRhdGEsbj1hLHI9cyxlLmNvcHkobixyKSxzKz1vLmRhdGEubGVuZ3RoLG89by5uZXh0O3JldHVybiBhfSx0fSgpLHImJnIuaW5zcGVjdCYmci5pbnNwZWN0LmN1c3RvbSYmKHQuZXhwb3J0cy5wcm90b3R5cGVbci5pbnNwZWN0LmN1c3RvbV09ZnVuY3Rpb24oKXt2YXIgdD1yLmluc3BlY3Qoe2xlbmd0aDp0aGlzLmxlbmd0aH0pO3JldHVybiB0aGlzLmNvbnN0cnVjdG9yLm5hbWUrXCIgXCIrdH0pfSxmdW5jdGlvbih0LGUpe30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXtmdW5jdGlvbiBuKHQpe3RyeXtpZighZS5sb2NhbFN0b3JhZ2UpcmV0dXJuITF9Y2F0Y2godCl7cmV0dXJuITF9dmFyIG49ZS5sb2NhbFN0b3JhZ2VbdF07cmV0dXJuIG51bGwhPW4mJlwidHJ1ZVwiPT09U3RyaW5nKG4pLnRvTG93ZXJDYXNlKCl9dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7aWYobihcIm5vRGVwcmVjYXRpb25cIikpcmV0dXJuIHQ7dmFyIGk9ITE7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoIWkpe2lmKG4oXCJ0aHJvd0RlcHJlY2F0aW9uXCIpKXRocm93IG5ldyBFcnJvcihlKTtuKFwidHJhY2VEZXByZWNhdGlvblwiKT9jb25zb2xlLnRyYWNlKGUpOmNvbnNvbGUud2FybihlKSxpPSEwfXJldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX19fSkuY2FsbCh0aGlzLG4oNCkpfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dC5leHBvcnRzPWE7dmFyIGk9big2OCkscj1uKDExKTtmdW5jdGlvbiBhKHQpe2lmKCEodGhpcyBpbnN0YW5jZW9mIGEpKXJldHVybiBuZXcgYSh0KTtpLmNhbGwodGhpcyx0KX1yLmluaGVyaXRzPW4oMCksci5pbmhlcml0cyhhLGkpLGEucHJvdG90eXBlLl90cmFuc2Zvcm09ZnVuY3Rpb24odCxlLG4pe24obnVsbCx0KX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEpLkJ1ZmZlcjt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7aWYodCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpe2lmKDA9PT10LmJ5dGVPZmZzZXQmJnQuYnl0ZUxlbmd0aD09PXQuYnVmZmVyLmJ5dGVMZW5ndGgpcmV0dXJuIHQuYnVmZmVyO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuYnVmZmVyLnNsaWNlKXJldHVybiB0LmJ1ZmZlci5zbGljZSh0LmJ5dGVPZmZzZXQsdC5ieXRlT2Zmc2V0K3QuYnl0ZUxlbmd0aCl9aWYoaS5pc0J1ZmZlcih0KSl7Zm9yKHZhciBlPW5ldyBVaW50OEFycmF5KHQubGVuZ3RoKSxuPXQubGVuZ3RoLHI9MDtyPG47cisrKWVbcl09dFtyXTtyZXR1cm4gZS5idWZmZXJ9dGhyb3cgbmV3IEVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlclwiKX19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXt9LGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXt2YXIgaT1hcmd1bWVudHNbZV07Zm9yKHZhciByIGluIGkpbi5jYWxsKGkscikmJih0W3JdPWlbcl0pfXJldHVybiB0fTt2YXIgbj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz17MTAwOlwiQ29udGludWVcIiwxMDE6XCJTd2l0Y2hpbmcgUHJvdG9jb2xzXCIsMTAyOlwiUHJvY2Vzc2luZ1wiLDIwMDpcIk9LXCIsMjAxOlwiQ3JlYXRlZFwiLDIwMjpcIkFjY2VwdGVkXCIsMjAzOlwiTm9uLUF1dGhvcml0YXRpdmUgSW5mb3JtYXRpb25cIiwyMDQ6XCJObyBDb250ZW50XCIsMjA1OlwiUmVzZXQgQ29udGVudFwiLDIwNjpcIlBhcnRpYWwgQ29udGVudFwiLDIwNzpcIk11bHRpLVN0YXR1c1wiLDIwODpcIkFscmVhZHkgUmVwb3J0ZWRcIiwyMjY6XCJJTSBVc2VkXCIsMzAwOlwiTXVsdGlwbGUgQ2hvaWNlc1wiLDMwMTpcIk1vdmVkIFBlcm1hbmVudGx5XCIsMzAyOlwiRm91bmRcIiwzMDM6XCJTZWUgT3RoZXJcIiwzMDQ6XCJOb3QgTW9kaWZpZWRcIiwzMDU6XCJVc2UgUHJveHlcIiwzMDc6XCJUZW1wb3JhcnkgUmVkaXJlY3RcIiwzMDg6XCJQZXJtYW5lbnQgUmVkaXJlY3RcIiw0MDA6XCJCYWQgUmVxdWVzdFwiLDQwMTpcIlVuYXV0aG9yaXplZFwiLDQwMjpcIlBheW1lbnQgUmVxdWlyZWRcIiw0MDM6XCJGb3JiaWRkZW5cIiw0MDQ6XCJOb3QgRm91bmRcIiw0MDU6XCJNZXRob2QgTm90IEFsbG93ZWRcIiw0MDY6XCJOb3QgQWNjZXB0YWJsZVwiLDQwNzpcIlByb3h5IEF1dGhlbnRpY2F0aW9uIFJlcXVpcmVkXCIsNDA4OlwiUmVxdWVzdCBUaW1lb3V0XCIsNDA5OlwiQ29uZmxpY3RcIiw0MTA6XCJHb25lXCIsNDExOlwiTGVuZ3RoIFJlcXVpcmVkXCIsNDEyOlwiUHJlY29uZGl0aW9uIEZhaWxlZFwiLDQxMzpcIlBheWxvYWQgVG9vIExhcmdlXCIsNDE0OlwiVVJJIFRvbyBMb25nXCIsNDE1OlwiVW5zdXBwb3J0ZWQgTWVkaWEgVHlwZVwiLDQxNjpcIlJhbmdlIE5vdCBTYXRpc2ZpYWJsZVwiLDQxNzpcIkV4cGVjdGF0aW9uIEZhaWxlZFwiLDQxODpcIkknbSBhIHRlYXBvdFwiLDQyMTpcIk1pc2RpcmVjdGVkIFJlcXVlc3RcIiw0MjI6XCJVbnByb2Nlc3NhYmxlIEVudGl0eVwiLDQyMzpcIkxvY2tlZFwiLDQyNDpcIkZhaWxlZCBEZXBlbmRlbmN5XCIsNDI1OlwiVW5vcmRlcmVkIENvbGxlY3Rpb25cIiw0MjY6XCJVcGdyYWRlIFJlcXVpcmVkXCIsNDI4OlwiUHJlY29uZGl0aW9uIFJlcXVpcmVkXCIsNDI5OlwiVG9vIE1hbnkgUmVxdWVzdHNcIiw0MzE6XCJSZXF1ZXN0IEhlYWRlciBGaWVsZHMgVG9vIExhcmdlXCIsNDUxOlwiVW5hdmFpbGFibGUgRm9yIExlZ2FsIFJlYXNvbnNcIiw1MDA6XCJJbnRlcm5hbCBTZXJ2ZXIgRXJyb3JcIiw1MDE6XCJOb3QgSW1wbGVtZW50ZWRcIiw1MDI6XCJCYWQgR2F0ZXdheVwiLDUwMzpcIlNlcnZpY2UgVW5hdmFpbGFibGVcIiw1MDQ6XCJHYXRld2F5IFRpbWVvdXRcIiw1MDU6XCJIVFRQIFZlcnNpb24gTm90IFN1cHBvcnRlZFwiLDUwNjpcIlZhcmlhbnQgQWxzbyBOZWdvdGlhdGVzXCIsNTA3OlwiSW5zdWZmaWNpZW50IFN0b3JhZ2VcIiw1MDg6XCJMb29wIERldGVjdGVkXCIsNTA5OlwiQmFuZHdpZHRoIExpbWl0IEV4Y2VlZGVkXCIsNTEwOlwiTm90IEV4dGVuZGVkXCIsNTExOlwiTmV0d29yayBBdXRoZW50aWNhdGlvbiBSZXF1aXJlZFwifX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2UuZGVjb2RlPWUucGFyc2U9bigxNjApLGUuZW5jb2RlPWUuc3RyaW5naWZ5PW4oMTYxKX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkodCxlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSl9dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuLGEpe2U9ZXx8XCImXCIsbj1ufHxcIj1cIjt2YXIgbz17fTtpZihcInN0cmluZ1wiIT10eXBlb2YgdHx8MD09PXQubGVuZ3RoKXJldHVybiBvO3ZhciBzPS9cXCsvZzt0PXQuc3BsaXQoZSk7dmFyIGM9MWUzO2EmJlwibnVtYmVyXCI9PXR5cGVvZiBhLm1heEtleXMmJihjPWEubWF4S2V5cyk7dmFyIHU9dC5sZW5ndGg7Yz4wJiZ1PmMmJih1PWMpO2Zvcih2YXIgbD0wO2w8dTsrK2wpe3ZhciBwLGYsZCxoLG09dFtsXS5yZXBsYWNlKHMsXCIlMjBcIiksZz1tLmluZGV4T2Yobik7Zz49MD8ocD1tLnN1YnN0cigwLGcpLGY9bS5zdWJzdHIoZysxKSk6KHA9bSxmPVwiXCIpLGQ9ZGVjb2RlVVJJQ29tcG9uZW50KHApLGg9ZGVjb2RlVVJJQ29tcG9uZW50KGYpLGkobyxkKT9yKG9bZF0pP29bZF0ucHVzaChoKTpvW2RdPVtvW2RdLGhdOm9bZF09aH1yZXR1cm4gb307dmFyIHI9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24odCl7cmV0dXJuXCJbb2JqZWN0IEFycmF5XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPWZ1bmN0aW9uKHQpe3N3aXRjaCh0eXBlb2YgdCl7Y2FzZVwic3RyaW5nXCI6cmV0dXJuIHQ7Y2FzZVwiYm9vbGVhblwiOnJldHVybiB0P1widHJ1ZVwiOlwiZmFsc2VcIjtjYXNlXCJudW1iZXJcIjpyZXR1cm4gaXNGaW5pdGUodCk/dDpcIlwiO2RlZmF1bHQ6cmV0dXJuXCJcIn19O3QuZXhwb3J0cz1mdW5jdGlvbih0LGUsbixzKXtyZXR1cm4gZT1lfHxcIiZcIixuPW58fFwiPVwiLG51bGw9PT10JiYodD12b2lkIDApLFwib2JqZWN0XCI9PXR5cGVvZiB0P2Eobyh0KSwoZnVuY3Rpb24obyl7dmFyIHM9ZW5jb2RlVVJJQ29tcG9uZW50KGkobykpK247cmV0dXJuIHIodFtvXSk/YSh0W29dLChmdW5jdGlvbih0KXtyZXR1cm4gcytlbmNvZGVVUklDb21wb25lbnQoaSh0KSl9KSkuam9pbihlKTpzK2VuY29kZVVSSUNvbXBvbmVudChpKHRbb10pKX0pKS5qb2luKGUpOnM/ZW5jb2RlVVJJQ29tcG9uZW50KGkocykpK24rZW5jb2RlVVJJQ29tcG9uZW50KGkodCkpOlwiXCJ9O3ZhciByPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKHQpe3JldHVyblwiW29iamVjdCBBcnJheV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX07ZnVuY3Rpb24gYSh0LGUpe2lmKHQubWFwKXJldHVybiB0Lm1hcChlKTtmb3IodmFyIG49W10saT0wO2k8dC5sZW5ndGg7aSsrKW4ucHVzaChlKHRbaV0saSkpO3JldHVybiBufXZhciBvPU9iamVjdC5rZXlzfHxmdW5jdGlvbih0KXt2YXIgZT1bXTtmb3IodmFyIG4gaW4gdClPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxuKSYmZS5wdXNoKG4pO3JldHVybiBlfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO1xuLyohXG4gKiBieXRlc1xuICogQ29weXJpZ2h0KGMpIDIwMTItMjAxNCBUSiBIb2xvd2F5Y2h1a1xuICogQ29weXJpZ2h0KGMpIDIwMTUgSmVkIFdhdHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi90LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgdClyZXR1cm4gYyh0KTtpZihcIm51bWJlclwiPT10eXBlb2YgdClyZXR1cm4gcyh0LGUpO3JldHVybiBudWxsfSx0LmV4cG9ydHMuZm9ybWF0PXMsdC5leHBvcnRzLnBhcnNlPWM7dmFyIGk9L1xcQig/PShcXGR7M30pKyg/IVxcZCkpL2cscj0vKD86XFwuMCp8KFxcLlteMF0rKTArKSQvLGE9e2I6MSxrYjoxMDI0LG1iOjE8PDIwLGdiOjE8PDMwLHRiOk1hdGgucG93KDEwMjQsNCkscGI6TWF0aC5wb3coMTAyNCw1KX0sbz0vXigoLXxcXCspPyhcXGQrKD86XFwuXFxkKyk/KSkgKihrYnxtYnxnYnx0YnxwYikkL2k7ZnVuY3Rpb24gcyh0LGUpe2lmKCFOdW1iZXIuaXNGaW5pdGUodCkpcmV0dXJuIG51bGw7dmFyIG49TWF0aC5hYnModCksbz1lJiZlLnRob3VzYW5kc1NlcGFyYXRvcnx8XCJcIixzPWUmJmUudW5pdFNlcGFyYXRvcnx8XCJcIixjPWUmJnZvaWQgMCE9PWUuZGVjaW1hbFBsYWNlcz9lLmRlY2ltYWxQbGFjZXM6Mix1PUJvb2xlYW4oZSYmZS5maXhlZERlY2ltYWxzKSxsPWUmJmUudW5pdHx8XCJcIjtsJiZhW2wudG9Mb3dlckNhc2UoKV18fChsPW4+PWEucGI/XCJQQlwiOm4+PWEudGI/XCJUQlwiOm4+PWEuZ2I/XCJHQlwiOm4+PWEubWI/XCJNQlwiOm4+PWEua2I/XCJLQlwiOlwiQlwiKTt2YXIgcD0odC9hW2wudG9Mb3dlckNhc2UoKV0pLnRvRml4ZWQoYyk7cmV0dXJuIHV8fChwPXAucmVwbGFjZShyLFwiJDFcIikpLG8mJihwPXAucmVwbGFjZShpLG8pKSxwK3MrbH1mdW5jdGlvbiBjKHQpe2lmKFwibnVtYmVyXCI9PXR5cGVvZiB0JiYhaXNOYU4odCkpcmV0dXJuIHQ7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIHQpcmV0dXJuIG51bGw7dmFyIGUsbj1vLmV4ZWModCksaT1cImJcIjtyZXR1cm4gbj8oZT1wYXJzZUZsb2F0KG5bMV0pLGk9bls0XS50b0xvd2VyQ2FzZSgpKTooZT1wYXJzZUludCh0LDEwKSxpPVwiYlwiKSxNYXRoLmZsb29yKGFbaV0qZSl9fSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpe3ZhciBpPW4oNDIpLHI9bigxNjkpO2Z1bmN0aW9uIGEodCxlLG4pe0Vycm9yLmNhcHR1cmVTdGFja1RyYWNlJiZFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLGEpLHRoaXMuaW5wdXQ9dCx0aGlzLm1lc3NhZ2U9ZSx2b2lkIDAhPT1uJiYodGhpcy5tZXNzYWdlKz1cIiBhdCBpbmRleCBcIituKX1mdW5jdGlvbiBvKHQpe3ZhciBlO3JldHVybiBlPSh0WzBdPj44KStcIi5cIisoMjU1JnRbMF0pK1wiLlwiLGUrPSh0WzFdPj44KStcIi5cIisoMjU1JnRbMV0pfWZ1bmN0aW9uIHModCl7cmV0dXJuIShcIm9iamVjdFwiIT10eXBlb2YgdHx8IUFycmF5LmlzQXJyYXkodC5fZmllbGRzKXx8XCJvYmplY3RcIiE9dHlwZW9mIHQuX2F0dHJzKX1mdW5jdGlvbiBjKHQpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiBiKHQpO2lmKHModCkpcmV0dXJuIHQ7dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudDogQWRkciBvciBwYXJzYWJsZSBzdHJpbmcgZXhwZWN0ZWRcIil9ZnVuY3Rpb24gdSh0LGUsbil7dmFyIGkscj1udWxsLGE9MDtpZihlKXt2YXIgbz1udWxsLHM9bnVsbDtmb3IoaT0wO2k8dC5sZW5ndGg7aSsrKTA9PT10W2ldP251bGw9PT1vPyhvPWkscz0xKTpzKys6bnVsbCE9PW8mJihzPmEmJihyPW8sYT1zKSxvPW51bGwpO251bGwhPT1vJiZzPmEmJihyPW8sYT1zKX12YXIgYyx1PVtdO2ZvcihpPTA7aTx0Lmxlbmd0aDtpKyspe2lmKG51bGwhPT1yKXtpZihpPT09cil7aWYoOD09PWEpcmV0dXJuW1wiOjpcIl07MD09PXJ8fHIrYT09PXQubGVuZ3RoP3UucHVzaChcIjpcIik6dS5wdXNoKFwiXCIpfWlmKGk+PXImJmk8cithKWNvbnRpbnVlfWM9dFtpXS50b1N0cmluZygxNiksbiYmNCE9Yy5sZW5ndGgmJihjPVwiMDAwMFwiLnNsaWNlKGMubGVuZ3RoKStjKSx1LnB1c2goYyl9cmV0dXJuIHV9ZnVuY3Rpb24gbCh0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdClyZXR1cm4gbmV3IGgodCk7aWYodCBpbnN0YW5jZW9mIGgpcmV0dXJuIHQ7dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudDogQ0lEUiBvciBwYXJzYWJsZSBzdHJpbmcgZXhwZWN0ZWRcIil9bigxMykuaW5oZXJpdHMoYSxFcnJvcik7dmFyIHA9e2Zvcm1hdDpcImF1dG9cIix6ZXJvRWxpZGU6ITAsemVyb1BhZDohMX07ZnVuY3Rpb24gZih0LGUpe3JldHVybiB0JiZ0Lmhhc093blByb3BlcnR5KGUpP3RbZV06cFtlXX1mdW5jdGlvbiBkKCl7dGhpcy5fZmllbGRzPVswLDAsMCwwLDAsMCwwLDBdLHRoaXMuX2F0dHJzPXt9fWZ1bmN0aW9uIGgodCxlKXtpZih2b2lkIDA9PT1lKXtpLnN0cmluZyh0KTt2YXIgbj10Lm1hdGNoKC9eKFthLWZBLUYwLTk6Ll0rKVxcLyhbMC05XSspJC8pO2lmKG51bGw9PT1uKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnQ6IDxhZGRyPi88cHJlZml4PiBleHBlY3RlZFwiKTt0PW5bMV0sZT1wYXJzZUludChuWzJdLDEwKX1pZihpLm51bWJlcihlKSxlfD0wLCh0PWModCkpLl9hdHRycy5pcHY0QmFyZSYmKGUrPTk2KSxlPDB8fGU+MTI4KXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcHJlZml4IGxlbmd0aFwiKTt0aGlzLl9wcmVmaXg9ZSx0aGlzLl9tYXNrPWZ1bmN0aW9uKHQpe2kubnVtYmVyKHQpLHR8PTAsaS5vayh0PD0xMjgpLGkub2sodD49MCk7dmFyIGUsbj1uZXcgZDtmb3IoZT0wO3Q+MTY7ZSsrLHQtPTE2KW4uX2ZpZWxkc1tlXT02NTUzNTtyZXR1cm4gdD4wJiYobi5fZmllbGRzW2VdPTY1NTM1LSgoMTw8MTYtdCktMSkpLG59KGUpLHRoaXMuX2FkZHI9dC5hbmQodGhpcy5fbWFzayl9ZC5wcm90b3R5cGUua2luZD1mdW5jdGlvbigpe3JldHVybiBtLmNvbnRhaW5zKHRoaXMpP1wiaXB2NFwiOlwiaXB2NlwifSxkLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbih0KXtpLm9wdGlvbmFsT2JqZWN0KHQsXCJvcHRzXCIpO3ZhciBlPWYodCxcImZvcm1hdFwiKSxuPWYodCxcInplcm9FbGlkZVwiKSxyPWYodCxcInplcm9QYWRcIik7c3dpdGNoKGkuc3RyaW5nKGUsXCJvcHRzLmZvcm1hdFwiKSxpLmJvb2wobixcIm9wdHMuemVyb0VsaWRlXCIpLGkuYm9vbChyLFwib3B0cy56ZXJvUGFkXCIpLFwiYXV0b1wiPT09ZSYmKGU9dGhpcy5fYXR0cnMuaXB2NEJhcmU/XCJ2NFwiOnRoaXMuX2F0dHJzLmlwdjRNYXBwZWQ/XCJ2NC1tYXBwZWRcIjpcInY2XCIpLGUpe2Nhc2VcInY0XCI6aWYoIW0uY29udGFpbnModGhpcykpdGhyb3cgbmV3IEVycm9yKFwiY2Fubm90IHByaW50IG5vbi12NCBhZGRyZXNzIGluIGRvdHRlZCBxdWFkIG5vdGF0aW9uXCIpO3JldHVybiBvKHRoaXMuX2ZpZWxkcy5zbGljZSg2KSk7Y2FzZVwidjQtbWFwcGVkXCI6aWYoIW0uY29udGFpbnModGhpcykpdGhyb3cgbmV3IEVycm9yKFwiY2Fubm90IHByaW50IG5vbi12NCBhZGRyZXNzIGFzIGEgdjQtbWFwcGVkIGFkZHJlc3NcIik7dmFyIGE9dSh0aGlzLl9maWVsZHMuc2xpY2UoMCw2KSxuLHIpO3JldHVybiBhLnB1c2gobyh0aGlzLl9maWVsZHMuc2xpY2UoNikpKSxhLmpvaW4oXCI6XCIpO2Nhc2VcInY2XCI6cmV0dXJuIHUodGhpcy5fZmllbGRzLG4scikuam9pbihcIjpcIik7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoJ3VucmVjb2duaXplZCBmb3JtYXQgbWV0aG9kIFwiJytlKydcIicpfX0sZC5wcm90b3R5cGUudG9CdWZmZXI9ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dCl7aWYoIWUuaXNCdWZmZXIodCkpdGhyb3cgbmV3IEVycm9yKFwib3B0aW9uYWwgYXJnIG11c3QgYmUgQnVmZmVyXCIpfWVsc2UgdD1uZXcgZSgxNik7dmFyIG47Zm9yKG49MDtuPDg7bisrKXQud3JpdGVVSW50MTZCRSh0aGlzLl9maWVsZHNbbl0sMipuKTtyZXR1cm4gdH0sZC5wcm90b3R5cGUudG9Mb25nPWZ1bmN0aW9uKCl7aWYoIW0uY29udGFpbnModGhpcykpdGhyb3cgbmV3IEVycm9yKFwib25seSBwb3NzaWJsZSBmb3IgaXB2NC1tYXBwZWQgYWRkcmVzc2VzXCIpO3JldHVybih0aGlzLl9maWVsZHNbNl08PDE2Pj4+MCkrdGhpcy5fZmllbGRzWzddfSxkLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciB0PW5ldyBkO2Zvcih2YXIgZSBpbiB0Ll9maWVsZHM9dGhpcy5fZmllbGRzLnNsaWNlKCksdGhpcy5fYXR0cnMpdC5fYXR0cnNbZV09dGhpcy5fYXR0cnNbZV07cmV0dXJuIHR9LGQucHJvdG90eXBlLm9mZnNldD1mdW5jdGlvbih0KXtpZih0PC00Mjk0OTY3Mjk1fHx0PjQyOTQ5NjcyOTUpdGhyb3cgbmV3IEVycm9yKFwib2Zmc2V0cyBzaG91bGQgYmUgYmV0d2VlbiAtNDI5NDk2NzI5NSBhbmQgNDI5NDk2NzI5NVwiKTt2YXIgZSxuLGkscj10aGlzLmNsb25lKCk7Zm9yKGU9NztlPj0wJiYoKG49ci5fZmllbGRzW2VdK3QpPjY1NTM1Pyh0PW4+Pj4xNixuJj02NTUzNSk6bjwwPyh0PU1hdGguZmxvb3Iobi82NTUzNiksbj0oKGk9NjU1MzYpK24laSklaSk6dD0wLHIuX2ZpZWxkc1tlXT1uLDAhPT10KTtlLS0paWYoMD09PWV8fDY9PT1lJiZ0aGlzLl9hdHRycy5pcHY0TWFwcGVkKXJldHVybiBudWxsO3JldHVybiByfSxkLnByb3RvdHlwZS5hbmQ9ZnVuY3Rpb24odCl7dmFyIGU7dD1jKHQpO3ZhciBuPXRoaXMuY2xvbmUoKTtmb3IoZT0wO2U8ODtlKyspbi5fZmllbGRzW2VdPW4uX2ZpZWxkc1tlXSZ0Ll9maWVsZHNbZV07cmV0dXJuIG59LGQucHJvdG90eXBlLm9yPWZ1bmN0aW9uKHQpe3ZhciBlO3Q9Yyh0KTt2YXIgbj10aGlzLmNsb25lKCk7Zm9yKGU9MDtlPDg7ZSsrKW4uX2ZpZWxkc1tlXT1uLl9maWVsZHNbZV18dC5fZmllbGRzW2VdO3JldHVybiBufSxkLnByb3RvdHlwZS5ub3Q9ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMuY2xvbmUoKTtmb3IodD0wO3Q8ODt0KyspZS5fZmllbGRzW3RdPTY1NTM1Jn5lLl9maWVsZHNbdF07cmV0dXJuIGV9LGQucHJvdG90eXBlLmNvbXBhcmU9ZnVuY3Rpb24odCl7cmV0dXJuIHYodGhpcyx0KX0saC5wcm90b3R5cGUuY29udGFpbnM9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9Yyh0KSwwPT09dGhpcy5fYWRkci5jb21wYXJlKHQuYW5kKHRoaXMuX21hc2spKX0saC5wcm90b3R5cGUuZmlyc3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJlZml4Pj0xMjc/dGhpcy5fYWRkcjp0aGlzLl9hZGRyLm9mZnNldCgxKX0saC5wcm90b3R5cGUubGFzdD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX2FkZHIub3IodGhpcy5fbWFzay5ub3QoKSk7cmV0dXJuIHRoaXMuX3ByZWZpeD49MTI3P3Q6dGhpcy5fYWRkci5fYXR0cnMuaXB2NE1hcHBlZD90Lm9mZnNldCgtMSk6dH0saC5wcm90b3R5cGUuYnJvYWRjYXN0PWZ1bmN0aW9uKCl7aWYoIW0uY29udGFpbnModGhpcy5fYWRkcikpdGhyb3cgbmV3IEVycm9yKFwiT25seSBJUHY0IG5ldHdvcmtzIGhhdmUgYnJvYWRjYXN0IGFkZHJlc3Nlc1wiKTtyZXR1cm4gdGhpcy5fYWRkci5vcih0aGlzLl9tYXNrLm5vdCgpKX0saC5wcm90b3R5cGUuY29tcGFyZT1mdW5jdGlvbih0KXtyZXR1cm4gZyh0aGlzLHQpfSxoLnByb3RvdHlwZS5wcmVmaXhMZW5ndGg9ZnVuY3Rpb24odCl7c3dpdGNoKGkub3B0aW9uYWxTdHJpbmcodCxcImZvcm1hdFwiKSx2b2lkIDAhPT10JiZcImF1dG9cIiE9PXR8fCh0PXRoaXMuX2FkZHIuX2F0dHJzLmlwdjRCYXJlP1widjRcIjpcInY2XCIpLHQpe2Nhc2VcInY0XCI6aWYoIW0uY29udGFpbnModGhpcy5fYWRkcikpdGhyb3cgbmV3IEVycm9yKFwiY2Fubm90IHJldHVybiB2NCBwcmVmaXggbGVuZ3RoIGZvciBub24tdjQgYWRkcmVzc1wiKTtyZXR1cm4gdGhpcy5fcHJlZml4LTk2O2Nhc2VcInY2XCI6cmV0dXJuIHRoaXMuX3ByZWZpeDtkZWZhdWx0OnRocm93IG5ldyBFcnJvcigndW5yZWNvZ25pemVkIGZvcm1hdCBtZXRob2QgXCInK3QrJ1wiJyl9fSxoLnByb3RvdHlwZS5hZGRyZXNzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FkZHJ9LGgucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKHQpe2kub3B0aW9uYWxPYmplY3QodCxcIm9wdHNcIik7dmFyIGU9Zih0LFwiZm9ybWF0XCIpO3JldHVyblwidjQtbWFwcGVkXCI9PT1lJiYoZT1cInY2XCIpLHRoaXMuX2FkZHIudG9TdHJpbmcodCkrXCIvXCIrdGhpcy5wcmVmaXhMZW5ndGgoZSl9O3ZhciBtPW5ldyBoKFwiOjpmZmZmOjA6MFwiLDk2KTtmdW5jdGlvbiBnKHQsZSl7dD1sKHQpLGU9bChlKTt2YXIgbj12KHQuX2FkZHIsZS5fYWRkcik7cmV0dXJuIDA9PT1uP2UuX3ByZWZpeC10Ll9wcmVmaXg6bn1mdW5jdGlvbiB5KHQsZSl7aWYodD1jKHQpLGU9YyhlKSx0LmNvbXBhcmUoZSk+MCl0aHJvdyBuZXcgRXJyb3IoXCJiZWdpbiBhZGRyZXNzIG11c3QgYmUgPD0gZW5kIGFkZHJlc3NcIik7dGhpcy5fYmVnaW49dCx0aGlzLl9lbmQ9ZX1mdW5jdGlvbiBiKHQpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiBmdW5jdGlvbih0KXtpLnN0cmluZyh0KSx0PXQudG9Mb3dlckNhc2UoKTt2YXIgZSxuLG8scyxjPW5ldyBkLHU9W10sbD1bXSxwPW51bGwsZj1cIlwiO2lmKHQubGVuZ3RoPjQwKXRocm93IG5ldyBhKHQsXCJJbnB1dCB0b28gbG9uZ1wiKTtmb3IoZT0wO2U8dC5sZW5ndGg7ZSsrKWlmKFwiOlwiPT09KG49dFtlXSkpaWYoZSsxPHQubGVuZ3RoJiZcIjpcIj09PXRbZSsxXSl7aWYobnVsbCE9PXApdGhyb3cgbmV3IGEodCxcIk11bHRpcGxlIDo6IGRlbGltaXRlcnNcIixlKTtcIlwiIT09ZiYmKHUucHVzaChmKSxmPVwiXCIpLHA9dS5sZW5ndGgsZSsrfWVsc2V7aWYoXCJcIj09PWYpdGhyb3cgbmV3IGEodCxcImlsbGVnYWwgZGVsaW1pdGVyXCIsZSk7dS5wdXNoKGYpLGY9XCJcIn1lbHNlXCIuXCI9PT1uPyhsLnB1c2goZiksZj1cIlwiKTpmKz1uO2lmKFwiXCIhPT1mKTAhPT1sLmxlbmd0aD9sLnB1c2goZik6dS5wdXNoKGYpLGY9XCJcIjtlbHNlIGlmKHAhPT11Lmxlbmd0aHx8bC5sZW5ndGg+MCl0aHJvdyBuZXcgYSh0LFwiQ2Fubm90IGVuZCB3aXRoIGRlbGltaXRlciBiZXNpZGVzIDo6XCIpO2lmKDA9PT1sLmxlbmd0aCl7aWYodS5sZW5ndGg+OCl0aHJvdyBuZXcgYSh0LFwiVG9vIG1hbnkgZmllbGRzXCIpO2lmKHUubGVuZ3RoPDgmJm51bGw9PT1wKXRocm93IG5ldyBhKHQsXCJUb28gZmV3IGZpZWxkc1wiKX1lbHNle2lmKDQhPT1sLmxlbmd0aCl0aHJvdyBuZXcgYSh0LFwiSVB2NCBwb3J0aW9uIG11c3QgaGF2ZSA0IGZpZWxkc1wiKTtpZigwPT09dS5sZW5ndGgmJm51bGw9PT1wJiYoYy5fYXR0cnMuaXB2NEJhcmU9ITAsdT1bXCJmZmZmXCJdLHA9MCksdS5sZW5ndGg+Nil0aHJvdyBuZXcgYSh0LFwiVG9vIG1hbnkgZmllbGRzXCIpO2lmKHUubGVuZ3RoPDYmJm51bGw9PT1wKXRocm93IG5ldyBhKHQsXCJUb28gZmV3IGZpZWxkc1wiKX1mb3IoZT0wO2U8dS5sZW5ndGg7ZSsrKXtpZihvPXVbZV0sKHM9ci5wYXJzZUludGVnZXIobyx7YmFzZToxNixhbGxvd1NpZ246ITF9KSlpbnN0YW5jZW9mIEVycm9yfHxzPDB8fHM+NjU1MzUpdGhyb3cgbmV3IGEodCxcIkludmFsaWQgZmllbGQgdmFsdWU6IFwiK28pO3VbZV09c31mb3IoZT0wO2U8bC5sZW5ndGg7ZSsrKXtpZihvPWxbZV0sKHM9ci5wYXJzZUludGVnZXIobyx7YmFzZToxMCxhbGxvd1NpZ246ITF9KSlpbnN0YW5jZW9mIEVycm9yfHxzPDB8fHM+MjU1KXRocm93IG5ldyBhKHQsXCJJbnZhbGlkIGZpZWxkIHZhbHVlOiBcIitvKTtsW2VdPXN9MCE9PWwubGVuZ3RoJiYodS5wdXNoKDI1NipsWzBdK2xbMV0pLHUucHVzaCgyNTYqbFsyXStsWzNdKSk7aWYodS5sZW5ndGg8OCYmbnVsbCE9PXApe3ZhciBoPVtdO2ZvcihlPTA7ZTw4LXUubGVuZ3RoO2UrKyloLnB1c2goMCk7dT1BcnJheS5wcm90b3R5cGUuY29uY2F0KHUuc2xpY2UoMCxwKSxoLHUuc2xpY2UocCkpfWlmKDAhPT1sLmxlbmd0aCl7aWYoIWZ1bmN0aW9uKHQpe3ZhciBlLG49WzAsMCwwLDAsMCw2NTUzNV07Zm9yKGU9MDtlPDY7ZSsrKWlmKHRbZV0hPW5bZV0pcmV0dXJuITE7cmV0dXJuITB9KHUpKXRocm93IG5ldyBhKHQsXCJpbnZhbGlkIGRvdHRlZC1xdWFkIG5vdGF0aW9uXCIpO2MuX2F0dHJzLmlwdjRNYXBwZWQ9ITB9cmV0dXJuIGMuX2ZpZWxkcz11LGN9KHQpO2lmKFwibnVtYmVyXCI9PXR5cGVvZiB0KXJldHVybiBmdW5jdGlvbih0KXtpZihpLm51bWJlcih0KSx0IT09TWF0aC5mbG9vcih0KSl0aHJvdyBuZXcgRXJyb3IoXCJWYWx1ZSBtdXN0IGJlIGludGVnZXJcIik7aWYodDwwfHx0PjQyOTQ5NjcyOTUpdGhyb3cgbmV3IEVycm9yKFwiVmFsdWUgbXVzdCBiZSAzMiBiaXRcIik7dmFyIGU9bmV3IGQ7cmV0dXJuIGUuX2ZpZWxkc1s3XT02NTUzNSZ0LGUuX2ZpZWxkc1s2XT10Pj4+MTYsZS5fZmllbGRzWzVdPTY1NTM1LGUuX2F0dHJzLmlwdjRCYXJlPSEwLGUuX2F0dHJzLmlwdjRNYXBwZWQ9ITAsZX0odCk7aWYoXCJvYmplY3RcIj09dHlwZW9mIHQmJnModCkpcmV0dXJuIHQ7dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudDogb25seSBzdHJpbmd8bnVtYmVyIGFsbG93ZWRcIil9ZnVuY3Rpb24gdih0LGUpe3ZhciBuO2Zvcih0PWModCksZT1jKGUpLG49MDtuPDg7bisrKXtpZih0Ll9maWVsZHNbbl08ZS5fZmllbGRzW25dKXJldHVybi0xO2lmKHQuX2ZpZWxkc1tuXT5lLl9maWVsZHNbbl0pcmV0dXJuIDF9cmV0dXJuIDB9eS5wcm90b3R5cGUuY29udGFpbnM9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9Yyh0KSx0aGlzLl9iZWdpbi5jb21wYXJlKHQpPD0wJiZ0aGlzLl9lbmQuY29tcGFyZSh0KT49MH0seS5wcm90b3R5cGUuZmlyc3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYmVnaW59LHkucHJvdG90eXBlLmxhc3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZW5kfSx0LmV4cG9ydHM9e3BhcnNlOmIsY29tcGFyZTp2LGNyZWF0ZUNJRFI6ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IGgodCxlKX0sY29tcGFyZUNJRFI6ZyxjcmVhdGVBZGRyUmFuZ2U6ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHkodCxlKX19fSkuY2FsbCh0aGlzLG4oMSkuQnVmZmVyKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwib2JqZWN0XCI9PXR5cGVvZiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmNvcHkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZmlsbCYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5yZWFkVUludDh9fSxmdW5jdGlvbih0LGUsbil7dC5leHBvcnRzPW4oNDEpfSxmdW5jdGlvbih0LGUsbil7dC5leHBvcnRzPW4oOCl9LGZ1bmN0aW9uKHQsZSxuKXt0LmV4cG9ydHM9bigxNykuVHJhbnNmb3JtfSxmdW5jdGlvbih0LGUsbil7dC5leHBvcnRzPW4oMTcpLlBhc3NUaHJvdWdofSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big0Mikscj0obigxMyksbig3MSkpLGE9bigxNzApLG89bigxNzEpO2Z1bmN0aW9uIHModCxlKXtyZXR1cm4gaS5lcXVhbCh0eXBlb2YgZSxcInN0cmluZ1wiKSxPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKX1lLmRlZXBDb3B5PWZ1bmN0aW9uIHQoZSl7dmFyIG4saSxyPVwiX19kZWVwQ29weVwiO2lmKGUmJmVbcl0pdGhyb3cgbmV3IEVycm9yKFwiYXR0ZW1wdGVkIGRlZXAgY29weSBvZiBjeWNsaWMgb2JqZWN0XCIpO2lmKGUmJmUuY29uc3RydWN0b3I9PU9iamVjdCl7Zm9yKGkgaW4gbj17fSxlW3JdPSEwLGUpaSE9ciYmKG5baV09dChlW2ldKSk7cmV0dXJuIGRlbGV0ZSBlW3JdLG59aWYoZSYmZS5jb25zdHJ1Y3Rvcj09QXJyYXkpe2ZvcihuPVtdLGVbcl09ITAsaT0wO2k8ZS5sZW5ndGg7aSsrKW4ucHVzaCh0KGVbaV0pKTtyZXR1cm4gZGVsZXRlIGVbcl0sbn1yZXR1cm4gZX0sZS5kZWVwRXF1YWw9ZnVuY3Rpb24gdChlLG4pe2lmKHR5cGVvZiBlIT10eXBlb2YgbilyZXR1cm4hMTtpZihudWxsPT09ZXx8bnVsbD09PW58fFwib2JqZWN0XCIhPXR5cGVvZiBlKXJldHVybiBlPT09bjtpZihlLmNvbnN0cnVjdG9yIT1uLmNvbnN0cnVjdG9yKXJldHVybiExO3ZhciBpO2ZvcihpIGluIGUpe2lmKCFuLmhhc093blByb3BlcnR5KGkpKXJldHVybiExO2lmKCF0KGVbaV0sbltpXSkpcmV0dXJuITF9Zm9yKGkgaW4gbilpZighZS5oYXNPd25Qcm9wZXJ0eShpKSlyZXR1cm4hMTtyZXR1cm4hMH0sZS5pc0VtcHR5PWZ1bmN0aW9uKHQpe3ZhciBlO2ZvcihlIGluIHQpcmV0dXJuITE7cmV0dXJuITB9LGUuaGFzS2V5PXMsZS5mb3JFYWNoS2V5PWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIHQpcyh0LG4pJiZlKG4sdFtuXSl9LGUucGx1Y2s9ZnVuY3Rpb24odCxlKXtyZXR1cm4gaS5lcXVhbCh0eXBlb2YgZSxcInN0cmluZ1wiKSxmdW5jdGlvbiB0KGUsbil7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPXR5cGVvZiBlKXJldHVybjtpZihlLmhhc093blByb3BlcnR5KG4pKXJldHVybiBlW25dO3ZhciBpPW4uaW5kZXhPZihcIi5cIik7aWYoLTE9PWkpcmV0dXJuO3ZhciByPW4uc3Vic3RyKDAsaSk7cmV0dXJuIGUuaGFzT3duUHJvcGVydHkocik/dChlW3JdLG4uc3Vic3RyKGkrMSkpOnZvaWQgMH0odCxlKX0sZS5mbGF0dGVuT2JqZWN0PWZ1bmN0aW9uIHQoZSxuKXtpZigwPT09bilyZXR1cm5bZV07aS5vayhudWxsIT09ZSksaS5lcXVhbCh0eXBlb2YgZSxcIm9iamVjdFwiKSxpLmVxdWFsKHR5cGVvZiBuLFwibnVtYmVyXCIpLGkub2sobj49MCk7dmFyIHIsYT1bXTtmb3IociBpbiBlKXQoZVtyXSxuLTEpLmZvckVhY2goKGZ1bmN0aW9uKHQpe2EucHVzaChbcl0uY29uY2F0KHQpKX0pKTtyZXR1cm4gYX0sZS5mbGF0dGVuSXRlcj1mdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uIHQoZSxuLHIsYSl7dmFyIG8scztpZigwPT09bilyZXR1cm4obz1yLnNsaWNlKDApKS5wdXNoKGUpLHZvaWQgYShvKTtmb3IocyBpbiBpLm9rKG51bGwhPT1lKSxpLmVxdWFsKHR5cGVvZiBlLFwib2JqZWN0XCIpLGkuZXF1YWwodHlwZW9mIG4sXCJudW1iZXJcIiksaS5vayhuPj0wKSxlKShvPXIuc2xpY2UoMCkpLnB1c2gocyksdChlW3NdLG4tMSxvLGEpfSh0LGUsW10sbil9LGUudmFsaWRhdGVKc29uT2JqZWN0PW0sZS52YWxpZGF0ZUpzb25PYmplY3RKUz1tLGUucmFuZEVsdD1mdW5jdGlvbih0KXtyZXR1cm4gaS5vayhBcnJheS5pc0FycmF5KHQpJiZ0Lmxlbmd0aD4wLFwicmFuZEVsdCBhcmd1bWVudCBtdXN0IGJlIGEgbm9uLWVtcHR5IGFycmF5XCIpLHRbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKnQubGVuZ3RoKV19LGUuZXh0cmFQcm9wZXJ0aWVzPWZ1bmN0aW9uKHQsZSl7aS5vayhcIm9iamVjdFwiPT10eXBlb2YgdCYmbnVsbCE9PXQsXCJvYmogYXJndW1lbnQgbXVzdCBiZSBhIG5vbi1udWxsIG9iamVjdFwiKSxpLm9rKEFycmF5LmlzQXJyYXkoZSksXCJhbGxvd2VkIGFyZ3VtZW50IG11c3QgYmUgYW4gYXJyYXkgb2Ygc3RyaW5nc1wiKTtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKylpLm9rKFwic3RyaW5nXCI9PXR5cGVvZiBlW25dLFwiYWxsb3dlZCBhcmd1bWVudCBtdXN0IGJlIGFuIGFycmF5IG9mIHN0cmluZ3NcIik7cmV0dXJuIE9iamVjdC5rZXlzKHQpLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuLTE9PT1lLmluZGV4T2YodCl9KSl9LGUubWVyZ2VPYmplY3RzPXYsZS5zdGFydHNXaXRoPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuc3Vic3RyKDAsZS5sZW5ndGgpPT1lfSxlLmVuZHNXaXRoPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuc3Vic3RyKHQubGVuZ3RoLWUubGVuZ3RoLGUubGVuZ3RoKT09ZX0sZS5wYXJzZUludGVnZXI9ZnVuY3Rpb24odCxlKXtpLnN0cmluZyh0LFwic3RyXCIpLGkub3B0aW9uYWxPYmplY3QoZSxcIm9wdGlvbnNcIik7dmFyIG4scj0hMSxhPWY7ZSYmKHI9cyhlLFwiYmFzZVwiKSxhPXYoYSxlKSxpLm51bWJlcihhLmJhc2UsXCJvcHRpb25zLmJhc2VcIiksaS5vayhhLmJhc2U+PTIsXCJvcHRpb25zLmJhc2UgPj0gMlwiKSxpLm9rKGEuYmFzZTw9MzYsXCJvcHRpb25zLmJhc2UgPD0gMzZcIiksaS5ib29sKGEuYWxsb3dTaWduLFwib3B0aW9ucy5hbGxvd1NpZ25cIiksaS5ib29sKGEuYWxsb3dQcmVmaXgsXCJvcHRpb25zLmFsbG93UHJlZml4XCIpLGkuYm9vbChhLmFsbG93VHJhaWxpbmcsXCJvcHRpb25zLmFsbG93VHJhaWxpbmdcIiksaS5ib29sKGEuYWxsb3dJbXByZWNpc2UsXCJvcHRpb25zLmFsbG93SW1wcmVjaXNlXCIpLGkuYm9vbChhLnRyaW1XaGl0ZXNwYWNlLFwib3B0aW9ucy50cmltV2hpdGVzcGFjZVwiKSxpLmJvb2woYS5sZWFkaW5nWmVyb0lzT2N0YWwsXCJvcHRpb25zLmxlYWRpbmdaZXJvSXNPY3RhbFwiKSxhLmxlYWRpbmdaZXJvSXNPY3RhbCYmaS5vayghciwnXCJiYXNlXCIgYW5kIFwibGVhZGluZ1plcm9Jc09jdGFsXCIgYXJlIG11dHVhbGx5IGV4Y2x1c2l2ZScpKTt2YXIgbyxjPS0xLHU9YS5iYXNlLG09MSxnPTAseT0wLGI9dC5sZW5ndGg7aWYoYS50cmltV2hpdGVzcGFjZSlmb3IoO3k8YiYmaCh0LmNoYXJDb2RlQXQoeSkpOykrK3k7YS5hbGxvd1NpZ24mJihcIi1cIj09PXRbeV0/KHkrPTEsbT0tMSk6XCIrXCI9PT10W3ldJiYoeSs9MSkpO1wiMFwiPT09dFt5XSYmKGEuYWxsb3dQcmVmaXgmJigtMT09PShjPWZ1bmN0aW9uKHQpe3JldHVybiA5OD09PXR8fDY2PT09dD8yOjExMT09PXR8fDc5PT09dD84OjExNj09PXR8fDg0PT09dD8xMDoxMjA9PT10fHw4OD09PXQ/MTY6LTF9KHQuY2hhckNvZGVBdCh5KzEpKSl8fHImJmMhPT11fHwodT1jLHkrPTIpKSwtMT09PWMmJmEubGVhZGluZ1plcm9Jc09jdGFsJiYodT04KSk7Zm9yKG89eTt5PGImJigtMSE9PShuPWQodC5jaGFyQ29kZUF0KHkpKSkmJm48dSk7Kyt5KWcqPXUsZys9bjtpZihvPT09eSlyZXR1cm4gbmV3IEVycm9yKFwiaW52YWxpZCBudW1iZXI6IFwiK0pTT04uc3RyaW5naWZ5KHQpKTtpZihhLnRyaW1XaGl0ZXNwYWNlKWZvcig7eTxiJiZoKHQuY2hhckNvZGVBdCh5KSk7KSsreTtpZih5PGImJiFhLmFsbG93VHJhaWxpbmcpcmV0dXJuIG5ldyBFcnJvcihcInRyYWlsaW5nIGNoYXJhY3RlcnMgYWZ0ZXIgbnVtYmVyOiBcIitKU09OLnN0cmluZ2lmeSh0LnNsaWNlKHkpKSk7aWYoMD09PWcpcmV0dXJuIDA7dmFyIHc9ZyptO2lmKCFhLmFsbG93SW1wcmVjaXNlJiYoZz5sfHx3PHApKXJldHVybiBuZXcgRXJyb3IoXCJudW1iZXIgaXMgb3V0c2lkZSBvZiB0aGUgc3VwcG9ydGVkIHJhbmdlOiBcIitKU09OLnN0cmluZ2lmeSh0LnNsaWNlKG8seSkpKTtyZXR1cm4gd30sZS5pc284NjAxPWZ1bmN0aW9uKHQpe1wibnVtYmVyXCI9PXR5cGVvZiB0JiYodD1uZXcgRGF0ZSh0KSk7cmV0dXJuIGkub2sodC5jb25zdHJ1Y3Rvcj09PURhdGUpLHIuc3ByaW50ZihcIiU0ZC0lMDJkLSUwMmRUJTAyZDolMDJkOiUwMmQuJTAzZFpcIix0LmdldFVUQ0Z1bGxZZWFyKCksdC5nZXRVVENNb250aCgpKzEsdC5nZXRVVENEYXRlKCksdC5nZXRVVENIb3VycygpLHQuZ2V0VVRDTWludXRlcygpLHQuZ2V0VVRDU2Vjb25kcygpLHQuZ2V0VVRDTWlsbGlzZWNvbmRzKCkpfSxlLnJmYzExMjM9ZnVuY3Rpb24odCl7cmV0dXJuIHIuc3ByaW50ZihcIiVzLCAlMDJkICVzICUwNGQgJTAyZDolMDJkOiUwMmQgR01UXCIsdVt0LmdldFVUQ0RheSgpXSx0LmdldFVUQ0RhdGUoKSxjW3QuZ2V0VVRDTW9udGgoKV0sdC5nZXRVVENGdWxsWWVhcigpLHQuZ2V0VVRDSG91cnMoKSx0LmdldFVUQ01pbnV0ZXMoKSx0LmdldFVUQ1NlY29uZHMoKSl9LGUucGFyc2VEYXRlVGltZT1mdW5jdGlvbih0KXt2YXIgZT0rdDtyZXR1cm4gaXNOYU4oZSk/bmV3IERhdGUodCk6bmV3IERhdGUoZSl9LGUuaHJ0aW1lZGlmZj15LGUuaHJ0aW1lRGlmZj15LGUuaHJ0aW1lQWNjdW09YixlLmhydGltZUFkZD1mdW5jdGlvbih0LGUpe3JldHVybiBnKHQpLGIoW3RbMF0sdFsxXV0sZSl9LGUuaHJ0aW1lTmFub3NlYz1mdW5jdGlvbih0KXtyZXR1cm4gZyh0KSxNYXRoLmZsb29yKDFlOSp0WzBdK3RbMV0pfSxlLmhydGltZU1pY3Jvc2VjPWZ1bmN0aW9uKHQpe3JldHVybiBnKHQpLE1hdGguZmxvb3IoMWU2KnRbMF0rdFsxXS8xZTMpfSxlLmhydGltZU1pbGxpc2VjPWZ1bmN0aW9uKHQpe3JldHVybiBnKHQpLE1hdGguZmxvb3IoMWUzKnRbMF0rdFsxXS8xZTYpfTt2YXIgYz1bXCJKYW5cIixcIkZlYlwiLFwiTWFyXCIsXCJBcHJcIixcIk1heVwiLFwiSnVuXCIsXCJKdWxcIixcIkF1Z1wiLFwiU2VwXCIsXCJPY3RcIixcIk5vdlwiLFwiRGVjXCJdLHU9W1wiU3VuXCIsXCJNb25cIixcIlR1ZVwiLFwiV2VkXCIsXCJUaHVcIixcIkZyaVwiLFwiU2F0XCJdO3ZhciBsPU51bWJlci5NQVhfU0FGRV9JTlRFR0VSfHw5MDA3MTk5MjU0NzQwOTkxLHA9TnVtYmVyLk1JTl9TQUZFX0lOVEVHRVJ8fC05MDA3MTk5MjU0NzQwOTkxLGY9e2Jhc2U6MTAsYWxsb3dTaWduOiEwLGFsbG93UHJlZml4OiExLGFsbG93VHJhaWxpbmc6ITEsYWxsb3dJbXByZWNpc2U6ITEsdHJpbVdoaXRlc3BhY2U6ITEsbGVhZGluZ1plcm9Jc09jdGFsOiExfTtmdW5jdGlvbiBkKHQpe3JldHVybiB0Pj00OCYmdDw9NTc/dC00ODp0Pj02NSYmdDw9OTA/dC01NTp0Pj05NyYmdDw9MTIyP3QtODc6LTF9ZnVuY3Rpb24gaCh0KXtyZXR1cm4gMzI9PT10fHx0Pj05JiZ0PD0xM3x8MTYwPT09dHx8NTc2MD09PXR8fDYxNTg9PT10fHx0Pj04MTkyJiZ0PD04MjAyfHw4MjMyPT09dHx8ODIzMz09PXR8fDgyMzk9PT10fHw4Mjg3PT09dHx8MTIyODg9PT10fHw2NTI3OT09PXR9ZnVuY3Rpb24gbSh0LGUpe3ZhciBuPW8udmFsaWRhdGUoZSx0KTtpZigwPT09bi5lcnJvcnMubGVuZ3RoKXJldHVybiBudWxsO3ZhciBpLHIscz1uLmVycm9yc1swXSxjPXMucHJvcGVydHksdT1zLm1lc3NhZ2UudG9Mb3dlckNhc2UoKTstMSE9KGk9dS5pbmRleE9mKFwidGhlIHByb3BlcnR5IFwiKSkmJi0xIT0ocj11LmluZGV4T2YoXCIgaXMgbm90IGRlZmluZWQgaW4gdGhlIHNjaGVtYSBhbmQgdGhlIHNjaGVtYSBkb2VzIG5vdCBhbGxvdyBhZGRpdGlvbmFsIHByb3BlcnRpZXNcIikpJiYoaSs9XCJ0aGUgcHJvcGVydHkgXCIubGVuZ3RoLGM9XCJcIj09PWM/dS5zdWJzdHIoaSxyLWkpOmMrXCIuXCIrdS5zdWJzdHIoaSxyLWkpLHU9XCJ1bnN1cHBvcnRlZCBwcm9wZXJ0eVwiKTt2YXIgbD1uZXcgYS5WRXJyb3IoJ3Byb3BlcnR5IFwiJXNcIjogJXMnLGMsdSk7cmV0dXJuIGwuanN2X2RldGFpbHM9cyxsfWZ1bmN0aW9uIGcodCl7aS5vayh0WzBdPj0wJiZ0WzFdPj0wLFwibmVnYXRpdmUgbnVtYmVycyBub3QgYWxsb3dlZCBpbiBocnRpbWVzXCIpLGkub2sodFsxXTwxZTksXCJuYW5vc2Vjb25kcyBjb2x1bW4gb3ZlcmZsb3dcIil9ZnVuY3Rpb24geSh0LGUpe2codCksZyhlKSxpLm9rKHRbMF0+ZVswXXx8dFswXT09ZVswXSYmdFsxXT49ZVsxXSxcIm5lZ2F0aXZlIGRpZmZlcmVuY2VzIG5vdCBhbGxvd2VkXCIpO3ZhciBuPVt0WzBdLWVbMF0sMF07cmV0dXJuIHRbMV0+PWVbMV0/blsxXT10WzFdLWVbMV06KG5bMF0tLSxuWzFdPTFlOS0oZVsxXS10WzFdKSksbn1mdW5jdGlvbiBiKHQsZSl7cmV0dXJuIGcodCksZyhlKSx0WzFdKz1lWzFdLHRbMV0+PTFlOSYmKHRbMF0rKyx0WzFdLT0xZTkpLHRbMF0rPWVbMF0sdH1mdW5jdGlvbiB2KHQsZSxuKXt2YXIgaSxyO2lmKGk9e30sbilmb3IociBpbiBuKWlbcl09bltyXTtpZih0KWZvcihyIGluIHQpaVtyXT10W3JdO2lmKGUpZm9yKHIgaW4gZSlpW3JdPWVbcl07cmV0dXJuIGl9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big0Mikscj1uKDEzKSxhPW4oNzEpLG89bigxMSkuaXNFcnJvcixzPWEuc3ByaW50ZjtmdW5jdGlvbiBjKHQpe3ZhciBlLG4scixhO2lmKGkub2JqZWN0KHQsXCJhcmdzXCIpLGkuYm9vbCh0LnN0cmljdCxcImFyZ3Muc3RyaWN0XCIpLGkuYXJyYXkodC5hcmd2LFwiYXJncy5hcmd2XCIpLDA9PT0oZT10LmFyZ3YpLmxlbmd0aCluPXt9LHI9W107ZWxzZSBpZihvKGVbMF0pKW49e2NhdXNlOmVbMF19LHI9ZS5zbGljZSgxKTtlbHNlIGlmKFwib2JqZWN0XCI9PXR5cGVvZiBlWzBdKXtmb3IoYSBpbiBuPXt9LGVbMF0pblthXT1lWzBdW2FdO3I9ZS5zbGljZSgxKX1lbHNlIGkuc3RyaW5nKGVbMF0sXCJmaXJzdCBhcmd1bWVudCB0byBWRXJyb3IsIFNFcnJvciwgb3IgV0Vycm9yIGNvbnN0cnVjdG9yIG11c3QgYmUgYSBzdHJpbmcsIG9iamVjdCwgb3IgRXJyb3JcIiksbj17fSxyPWU7cmV0dXJuIGkub2JqZWN0KG4pLG4uc3RyaWN0fHx0LnN0cmljdHx8KHI9ci5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT09dD9cIm51bGxcIjp2b2lkIDA9PT10P1widW5kZWZpbmVkXCI6dH0pKSkse29wdGlvbnM6bixzaG9ydG1lc3NhZ2U6MD09PXIubGVuZ3RoP1wiXCI6cy5hcHBseShudWxsLHIpfX1mdW5jdGlvbiB1KCl7dmFyIHQsZSxuLHIsYSxzLGw7aWYodD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCksISh0aGlzIGluc3RhbmNlb2YgdSkpcmV0dXJuIGU9T2JqZWN0LmNyZWF0ZSh1LnByb3RvdHlwZSksdS5hcHBseShlLGFyZ3VtZW50cyksZTtpZigobj1jKHthcmd2OnQsc3RyaWN0OiExfSkpLm9wdGlvbnMubmFtZSYmKGkuc3RyaW5nKG4ub3B0aW9ucy5uYW1lLCdlcnJvclxcJ3MgXCJuYW1lXCIgbXVzdCBiZSBhIHN0cmluZycpLHRoaXMubmFtZT1uLm9wdGlvbnMubmFtZSksdGhpcy5qc2Vfc2hvcnRtc2c9bi5zaG9ydG1lc3NhZ2Uscz1uLnNob3J0bWVzc2FnZSwocj1uLm9wdGlvbnMuY2F1c2UpJiYoaS5vayhvKHIpLFwiY2F1c2UgaXMgbm90IGFuIEVycm9yXCIpLHRoaXMuanNlX2NhdXNlPXIsbi5vcHRpb25zLnNraXBDYXVzZU1lc3NhZ2V8fChzKz1cIjogXCIrci5tZXNzYWdlKSksdGhpcy5qc2VfaW5mbz17fSxuLm9wdGlvbnMuaW5mbylmb3IobCBpbiBuLm9wdGlvbnMuaW5mbyl0aGlzLmpzZV9pbmZvW2xdPW4ub3B0aW9ucy5pbmZvW2xdO3JldHVybiB0aGlzLm1lc3NhZ2U9cyxFcnJvci5jYWxsKHRoaXMscyksRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UmJihhPW4ub3B0aW9ucy5jb25zdHJ1Y3Rvck9wdHx8dGhpcy5jb25zdHJ1Y3RvcixFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLGEpKSx0aGlzfWZ1bmN0aW9uIGwoKXt2YXIgdCxlLG4saTtyZXR1cm4gdD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCksdGhpcyBpbnN0YW5jZW9mIGw/KGk9KG49Yyh7YXJndjp0LHN0cmljdDohMH0pKS5vcHRpb25zLHUuY2FsbCh0aGlzLGksXCIlc1wiLG4uc2hvcnRtZXNzYWdlKSx0aGlzKTooZT1PYmplY3QuY3JlYXRlKGwucHJvdG90eXBlKSxsLmFwcGx5KGUsYXJndW1lbnRzKSxlKX1mdW5jdGlvbiBwKHQpe2kuYXJyYXkodCxcImxpc3Qgb2YgZXJyb3JzXCIpLGkub2sodC5sZW5ndGg+MCxcIm11c3QgYmUgYXQgbGVhc3Qgb25lIGVycm9yXCIpLHRoaXMuYXNlX2Vycm9ycz10LHUuY2FsbCh0aGlzLHtjYXVzZTp0WzBdfSxcImZpcnN0IG9mICVkIGVycm9yJXNcIix0Lmxlbmd0aCwxPT10Lmxlbmd0aD9cIlwiOlwic1wiKX1mdW5jdGlvbiBmKCl7dmFyIHQsZSxuLGk7cmV0dXJuIHQ9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDApLHRoaXMgaW5zdGFuY2VvZiBmPygoaT0obj1jKHthcmd2OnQsc3RyaWN0OiExfSkpLm9wdGlvbnMpLnNraXBDYXVzZU1lc3NhZ2U9ITAsdS5jYWxsKHRoaXMsaSxcIiVzXCIsbi5zaG9ydG1lc3NhZ2UpLHRoaXMpOihlPU9iamVjdC5jcmVhdGUoZi5wcm90b3R5cGUpLGYuYXBwbHkoZSx0KSxlKX10LmV4cG9ydHM9dSx1LlZFcnJvcj11LHUuU0Vycm9yPWwsdS5XRXJyb3I9Zix1Lk11bHRpRXJyb3I9cCxyLmluaGVyaXRzKHUsRXJyb3IpLHUucHJvdG90eXBlLm5hbWU9XCJWRXJyb3JcIix1LnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuaGFzT3duUHJvcGVydHkoXCJuYW1lXCIpJiZ0aGlzLm5hbWV8fHRoaXMuY29uc3RydWN0b3IubmFtZXx8dGhpcy5jb25zdHJ1Y3Rvci5wcm90b3R5cGUubmFtZTtyZXR1cm4gdGhpcy5tZXNzYWdlJiYodCs9XCI6IFwiK3RoaXMubWVzc2FnZSksdH0sdS5wcm90b3R5cGUuY2F1c2U9ZnVuY3Rpb24oKXt2YXIgdD11LmNhdXNlKHRoaXMpO3JldHVybiBudWxsPT09dD92b2lkIDA6dH0sdS5jYXVzZT1mdW5jdGlvbih0KXtyZXR1cm4gaS5vayhvKHQpLFwiZXJyIG11c3QgYmUgYW4gRXJyb3JcIiksbyh0LmpzZV9jYXVzZSk/dC5qc2VfY2F1c2U6bnVsbH0sdS5pbmZvPWZ1bmN0aW9uKHQpe3ZhciBlLG4scjtpZihpLm9rKG8odCksXCJlcnIgbXVzdCBiZSBhbiBFcnJvclwiKSxlPW51bGwhPT0obj11LmNhdXNlKHQpKT91LmluZm8obik6e30sXCJvYmplY3RcIj09dHlwZW9mIHQuanNlX2luZm8mJm51bGwhPT10LmpzZV9pbmZvKWZvcihyIGluIHQuanNlX2luZm8pZVtyXT10LmpzZV9pbmZvW3JdO3JldHVybiBlfSx1LmZpbmRDYXVzZUJ5TmFtZT1mdW5jdGlvbih0LGUpe3ZhciBuO2ZvcihpLm9rKG8odCksXCJlcnIgbXVzdCBiZSBhbiBFcnJvclwiKSxpLnN0cmluZyhlLFwibmFtZVwiKSxpLm9rKGUubGVuZ3RoPjAsXCJuYW1lIGNhbm5vdCBiZSBlbXB0eVwiKSxuPXQ7bnVsbCE9PW47bj11LmNhdXNlKG4pKWlmKGkub2sobyhuKSksbi5uYW1lPT1lKXJldHVybiBuO3JldHVybiBudWxsfSx1Lmhhc0NhdXNlV2l0aE5hbWU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbnVsbCE9PXUuZmluZENhdXNlQnlOYW1lKHQsZSl9LHUuZnVsbFN0YWNrPWZ1bmN0aW9uKHQpe2kub2sobyh0KSxcImVyciBtdXN0IGJlIGFuIEVycm9yXCIpO3ZhciBlPXUuY2F1c2UodCk7cmV0dXJuIGU/dC5zdGFjaytcIlxcbmNhdXNlZCBieTogXCIrdS5mdWxsU3RhY2soZSk6dC5zdGFja30sdS5lcnJvckZyb21MaXN0PWZ1bmN0aW9uKHQpe3JldHVybiBpLmFycmF5T2ZPYmplY3QodCxcImVycm9yc1wiKSwwPT09dC5sZW5ndGg/bnVsbDoodC5mb3JFYWNoKChmdW5jdGlvbih0KXtpLm9rKG8odCkpfSkpLDE9PXQubGVuZ3RoP3RbMF06bmV3IHAodCkpfSx1LmVycm9yRm9yRWFjaD1mdW5jdGlvbih0LGUpe2kub2sobyh0KSxcImVyciBtdXN0IGJlIGFuIEVycm9yXCIpLGkuZnVuYyhlLFwiZnVuY1wiKSx0IGluc3RhbmNlb2YgcD90LmVycm9ycygpLmZvckVhY2goKGZ1bmN0aW9uKHQpe2UodCl9KSk6ZSh0KX0sci5pbmhlcml0cyhsLHUpLHIuaW5oZXJpdHMocCx1KSxwLnByb3RvdHlwZS5uYW1lPVwiTXVsdGlFcnJvclwiLHAucHJvdG90eXBlLmVycm9ycz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmFzZV9lcnJvcnMuc2xpY2UoMCl9LHIuaW5oZXJpdHMoZix1KSxmLnByb3RvdHlwZS5uYW1lPVwiV0Vycm9yXCIsZi5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmhhc093blByb3BlcnR5KFwibmFtZVwiKSYmdGhpcy5uYW1lfHx0aGlzLmNvbnN0cnVjdG9yLm5hbWV8fHRoaXMuY29uc3RydWN0b3IucHJvdG90eXBlLm5hbWU7cmV0dXJuIHRoaXMubWVzc2FnZSYmKHQrPVwiOiBcIit0aGlzLm1lc3NhZ2UpLHRoaXMuanNlX2NhdXNlJiZ0aGlzLmpzZV9jYXVzZS5tZXNzYWdlJiYodCs9XCI7IGNhdXNlZCBieSBcIit0aGlzLmpzZV9jYXVzZS50b1N0cmluZygpKSx0fSxmLnByb3RvdHlwZS5jYXVzZT1mdW5jdGlvbih0KXtyZXR1cm4gbyh0KSYmKHRoaXMuanNlX2NhdXNlPXQpLHRoaXMuanNlX2NhdXNlfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpO3ZvaWQgMD09PShpPWZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHQ9bjt0LkludGVnZXI9e3R5cGU6XCJpbnRlZ2VyXCJ9O3ZhciBlPXtTdHJpbmc6U3RyaW5nLEJvb2xlYW46Qm9vbGVhbixOdW1iZXI6TnVtYmVyLE9iamVjdDpPYmplY3QsQXJyYXk6QXJyYXksRGF0ZTpEYXRlfTtmdW5jdGlvbiBuKHQsZSl7cmV0dXJuIG4odCxlLHtjaGFuZ2luZzohMX0pfXQudmFsaWRhdGU9bix0LmNoZWNrUHJvcGVydHlDaGFuZ2U9ZnVuY3Rpb24odCxlLGkpe3JldHVybiBuKHQsZSx7Y2hhbmdpbmc6aXx8XCJwcm9wZXJ0eVwifSl9O3ZhciBuPXQuX3ZhbGlkYXRlPWZ1bmN0aW9uKHQsbixpKXtpfHwoaT17fSk7dmFyIHI9aS5jaGFuZ2luZztmdW5jdGlvbiBhKHQpe3JldHVybiB0LnR5cGV8fGVbdC5uYW1lXT09dCYmdC5uYW1lLnRvTG93ZXJDYXNlKCl9dmFyIG89W107ZnVuY3Rpb24gcyh0LGUsbixjKXt2YXIgdTtmdW5jdGlvbiBsKHQpe28ucHVzaCh7cHJvcGVydHk6bixtZXNzYWdlOnR9KX1pZihuKz1uP1wibnVtYmVyXCI9PXR5cGVvZiBjP1wiW1wiK2MrXCJdXCI6dm9pZCAwPT09Yz9cIlwiOlwiLlwiK2M6YywoXCJvYmplY3RcIiE9dHlwZW9mIGV8fGUgaW5zdGFuY2VvZiBBcnJheSkmJihufHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKSYmKCFlfHwhYShlKSkpcmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZT90IGluc3RhbmNlb2YgZXx8bChcImlzIG5vdCBhbiBpbnN0YW5jZSBvZiB0aGUgY2xhc3MvY29uc3RydWN0b3IgXCIrZS5uYW1lKTplJiZsKFwiSW52YWxpZCBzY2hlbWEvcHJvcGVydHkgZGVmaW5pdGlvbiBcIitlKSxudWxsO2Z1bmN0aW9uIHAodCxlKXtpZih0KXtpZighKFwic3RyaW5nXCIhPXR5cGVvZiB0fHxcImFueVwiPT10fHwoXCJudWxsXCI9PXQ/bnVsbD09PWU6dHlwZW9mIGU9PXQpfHxlIGluc3RhbmNlb2YgQXJyYXkmJlwiYXJyYXlcIj09dHx8ZSBpbnN0YW5jZW9mIERhdGUmJlwiZGF0ZVwiPT10fHxcImludGVnZXJcIj09dCYmZSUxPT0wKSlyZXR1cm5be3Byb3BlcnR5Om4sbWVzc2FnZTp0eXBlb2YgZStcIiB2YWx1ZSBmb3VuZCwgYnV0IGEgXCIrdCtcIiBpcyByZXF1aXJlZFwifV07aWYodCBpbnN0YW5jZW9mIEFycmF5KXtmb3IodmFyIGk9W10scj0wO3I8dC5sZW5ndGgmJihpPXAodFtyXSxlKSkubGVuZ3RoO3IrKyk7aWYoaS5sZW5ndGgpcmV0dXJuIGl9ZWxzZSBpZihcIm9iamVjdFwiPT10eXBlb2YgdCl7dmFyIGE9bztvPVtdLHMoZSx0LG4pO3ZhciBjPW87cmV0dXJuIG89YSxjfX1yZXR1cm5bXX1pZihyJiZlLnJlYWRvbmx5JiZsKFwiaXMgYSByZWFkb25seSBmaWVsZCwgaXQgY2FuIG5vdCBiZSBjaGFuZ2VkXCIpLGUuZXh0ZW5kcyYmcyh0LGUuZXh0ZW5kcyxuLGMpLHZvaWQgMD09PXQpZS5yZXF1aXJlZCYmbChcImlzIG1pc3NpbmcgYW5kIGl0IGlzIHJlcXVpcmVkXCIpO2Vsc2UgaWYobz1vLmNvbmNhdChwKGEoZSksdCkpLGUuZGlzYWxsb3cmJiFwKGUuZGlzYWxsb3csdCkubGVuZ3RoJiZsKFwiIGRpc2FsbG93ZWQgdmFsdWUgd2FzIG1hdGNoZWRcIiksbnVsbCE9PXQpe2lmKHQgaW5zdGFuY2VvZiBBcnJheSl7aWYoZS5pdGVtcyl7dmFyIGY9ZS5pdGVtcyBpbnN0YW5jZW9mIEFycmF5LGQ9ZS5pdGVtcztmb3IoYz0wLHU9dC5sZW5ndGg7Yzx1O2MrPTEpZiYmKGQ9ZS5pdGVtc1tjXSksaS5jb2VyY2UmJih0W2NdPWkuY29lcmNlKHRbY10sZCkpLG8uY29uY2F0KHModFtjXSxkLG4sYykpfWUubWluSXRlbXMmJnQubGVuZ3RoPGUubWluSXRlbXMmJmwoXCJUaGVyZSBtdXN0IGJlIGEgbWluaW11bSBvZiBcIitlLm1pbkl0ZW1zK1wiIGluIHRoZSBhcnJheVwiKSxlLm1heEl0ZW1zJiZ0Lmxlbmd0aD5lLm1heEl0ZW1zJiZsKFwiVGhlcmUgbXVzdCBiZSBhIG1heGltdW0gb2YgXCIrZS5tYXhJdGVtcytcIiBpbiB0aGUgYXJyYXlcIil9ZWxzZShlLnByb3BlcnRpZXN8fGUuYWRkaXRpb25hbFByb3BlcnRpZXMpJiZvLmNvbmNhdChmdW5jdGlvbih0LGUsbixhKXtpZihcIm9iamVjdFwiPT10eXBlb2YgZSlmb3IodmFyIGMgaW4oXCJvYmplY3RcIiE9dHlwZW9mIHR8fHQgaW5zdGFuY2VvZiBBcnJheSkmJm8ucHVzaCh7cHJvcGVydHk6bixtZXNzYWdlOlwiYW4gb2JqZWN0IGlzIHJlcXVpcmVkXCJ9KSxlKWlmKGUuaGFzT3duUHJvcGVydHkoYykpe3ZhciB1PXRbY107aWYodm9pZCAwPT09dSYmaS5leGlzdGluZ09ubHkpY29udGludWU7dmFyIGw9ZVtjXTt2b2lkIDA9PT11JiZsLmRlZmF1bHQmJih1PXRbY109bC5kZWZhdWx0KSxpLmNvZXJjZSYmYyBpbiB0JiYodT10W2NdPWkuY29lcmNlKHUsbCkpLHModSxsLG4sYyl9Zm9yKGMgaW4gdCl7aWYodC5oYXNPd25Qcm9wZXJ0eShjKSYmKFwiX1wiIT1jLmNoYXJBdCgwKXx8XCJfXCIhPWMuY2hhckF0KDEpKSYmZSYmIWVbY10mJiExPT09YSl7aWYoaS5maWx0ZXIpe2RlbGV0ZSB0W2NdO2NvbnRpbnVlfW8ucHVzaCh7cHJvcGVydHk6bixtZXNzYWdlOnR5cGVvZiB1K1wiVGhlIHByb3BlcnR5IFwiK2MrXCIgaXMgbm90IGRlZmluZWQgaW4gdGhlIHNjaGVtYSBhbmQgdGhlIHNjaGVtYSBkb2VzIG5vdCBhbGxvdyBhZGRpdGlvbmFsIHByb3BlcnRpZXNcIn0pfXZhciBwPWUmJmVbY10mJmVbY10ucmVxdWlyZXM7IXB8fHAgaW4gdHx8by5wdXNoKHtwcm9wZXJ0eTpuLG1lc3NhZ2U6XCJ0aGUgcHJlc2VuY2Ugb2YgdGhlIHByb3BlcnR5IFwiK2MrXCIgcmVxdWlyZXMgdGhhdCBcIitwK1wiIGFsc28gYmUgcHJlc2VudFwifSksdT10W2NdLCFhfHxlJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmYyBpbiBlfHwoaS5jb2VyY2UmJih1PXRbY109aS5jb2VyY2UodSxhKSkscyh1LGEsbixjKSksIXImJnUmJnUuJHNjaGVtYSYmKG89by5jb25jYXQocyh1LHUuJHNjaGVtYSxuLGMpKSl9cmV0dXJuIG99KHQsZS5wcm9wZXJ0aWVzLG4sZS5hZGRpdGlvbmFsUHJvcGVydGllcykpO2lmKGUucGF0dGVybiYmXCJzdHJpbmdcIj09dHlwZW9mIHQmJiF0Lm1hdGNoKGUucGF0dGVybikmJmwoXCJkb2VzIG5vdCBtYXRjaCB0aGUgcmVnZXggcGF0dGVybiBcIitlLnBhdHRlcm4pLGUubWF4TGVuZ3RoJiZcInN0cmluZ1wiPT10eXBlb2YgdCYmdC5sZW5ndGg+ZS5tYXhMZW5ndGgmJmwoXCJtYXkgb25seSBiZSBcIitlLm1heExlbmd0aCtcIiBjaGFyYWN0ZXJzIGxvbmdcIiksZS5taW5MZW5ndGgmJlwic3RyaW5nXCI9PXR5cGVvZiB0JiZ0Lmxlbmd0aDxlLm1pbkxlbmd0aCYmbChcIm11c3QgYmUgYXQgbGVhc3QgXCIrZS5taW5MZW5ndGgrXCIgY2hhcmFjdGVycyBsb25nXCIpLHZvaWQgMCE9PXR5cGVvZiBlLm1pbmltdW0mJnR5cGVvZiB0PT10eXBlb2YgZS5taW5pbXVtJiZlLm1pbmltdW0+dCYmbChcIm11c3QgaGF2ZSBhIG1pbmltdW0gdmFsdWUgb2YgXCIrZS5taW5pbXVtKSx2b2lkIDAhPT10eXBlb2YgZS5tYXhpbXVtJiZ0eXBlb2YgdD09dHlwZW9mIGUubWF4aW11bSYmZS5tYXhpbXVtPHQmJmwoXCJtdXN0IGhhdmUgYSBtYXhpbXVtIHZhbHVlIG9mIFwiK2UubWF4aW11bSksZS5lbnVtKXt2YXIgaCxtPWUuZW51bTt1PW0ubGVuZ3RoO2Zvcih2YXIgZz0wO2c8dTtnKyspaWYobVtnXT09PXQpe2g9MTticmVha31ofHxsKFwiZG9lcyBub3QgaGF2ZSBhIHZhbHVlIGluIHRoZSBlbnVtZXJhdGlvbiBcIittLmpvaW4oXCIsIFwiKSl9XCJudW1iZXJcIj09dHlwZW9mIGUubWF4RGVjaW1hbCYmdC50b1N0cmluZygpLm1hdGNoKG5ldyBSZWdFeHAoXCJcXFxcLlswLTlde1wiKyhlLm1heERlY2ltYWwrMSkrXCIsfVwiKSkmJmwoXCJtYXkgb25seSBoYXZlIFwiK2UubWF4RGVjaW1hbCtcIiBkaWdpdHMgb2YgZGVjaW1hbCBwbGFjZXNcIil9cmV0dXJuIG51bGx9cmV0dXJuIG4mJnModCxuLFwiXCIscnx8XCJcIiksIXImJnQmJnQuJHNjaGVtYSYmcyh0LHQuJHNjaGVtYSxcIlwiLFwiXCIpLHt2YWxpZDohby5sZW5ndGgsZXJyb3JzOm99fTtyZXR1cm4gdC5tdXN0QmVWYWxpZD1mdW5jdGlvbih0KXtpZighdC52YWxpZCl0aHJvdyBuZXcgVHlwZUVycm9yKHQuZXJyb3JzLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuXCJmb3IgcHJvcGVydHkgXCIrdC5wcm9wZXJ0eStcIjogXCIrdC5tZXNzYWdlfSkpLmpvaW4oXCIsIFxcblwiKSl9LHR9KCl9LmFwcGx5KGUsW10pKXx8KHQuZXhwb3J0cz1pKX0sZnVuY3Rpb24odCxlLG4pe2NvbnN0IGk9bigxNzMpKCkscj1uKDEyKSxhPW4oMjkpO3QuZXhwb3J0cz10PT5jbGFzcyBleHRlbmRzKHR8fGkpe2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLmNvbG9ycz17aW5mbzpcIndoaXRlXCIsd2FybjpcInllbGxvd1wiLGVycm9yOlwicmVkXCJ9fWFzeW5jIGxvZyh0LC4uLmUpe3RoaXMuaXNMZXZlbEFjdGl2ZSh0KSYmY29uc29sZVt0XS5hcHBseShjb25zb2xlW3RdLGEuaXNCcm93c2VyRW52KCk/ZTplLm1hcChlPT4oZSYmXCJvYmplY3RcIj09dHlwZW9mIGUmJihlPUpTT04uc3RyaW5naWZ5KGUpKSxyW3RoaXMuY29sb3JzW3RdXShlKSkpKX19fSxmdW5jdGlvbih0LGUsbil7Y29uc3QgaT1uKDQzKSgpO3QuZXhwb3J0cz10PT5jbGFzcyBleHRlbmRzKHR8fGkpe2NvbnN0cnVjdG9yKHQsZT17fSl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLm5vZGU9dCx0aGlzLm9wdGlvbnM9ZSx0aGlzLmxldmVscz1bXCJpbmZvXCIsXCJ3YXJuXCIsXCJlcnJvclwiXSx0aGlzLmRlZmF1bHRMZXZlbD1cImluZm9cIn1hc3luYyBpbml0KCl7dGhpcy5zZXRMZXZlbCh2b2lkIDA9PT10aGlzLm9wdGlvbnMubGV2ZWw/dGhpcy5kZWZhdWx0TGV2ZWw6dGhpcy5vcHRpb25zLmxldmVsKSxhd2FpdCBzdXBlci5pbml0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1hc3luYyBkZWluaXQoKXt0aGlzLnNldExldmVsKCExKSxhd2FpdCBzdXBlci5kZWluaXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfWFzeW5jIGxvZygpe3Rocm93IG5ldyBFcnJvcignTWV0aG9kIFwibG9nXCIgaXMgcmVxdWlyZWQgZm9yIGxvZ2dlciB0cmFuc3BvcnQnKX1hc3luYyBpbmZvKC4uLnQpe2F3YWl0IHRoaXMubG9nKFwiaW5mb1wiLC4uLnQpfWFzeW5jIHdhcm4oLi4udCl7YXdhaXQgdGhpcy5sb2coXCJ3YXJuXCIsLi4udCl9YXN5bmMgZXJyb3IoLi4udCl7YXdhaXQgdGhpcy5sb2coXCJlcnJvclwiLC4uLnQpfWlzTGV2ZWxBY3RpdmUodCl7cmV0dXJuISF0aGlzLmxldmVsJiZ0aGlzLmxldmVscy5pbmRleE9mKHQpPj10aGlzLmxldmVscy5pbmRleE9mKHRoaXMubGV2ZWwpfXNldExldmVsKHQpe2lmKCExPT09dClyZXR1cm4gdGhpcy5sZXZlbD0hMTtpZigtMT09dGhpcy5sZXZlbHMuaW5kZXhPZih0KSl0aHJvdyBuZXcgRXJyb3IoYFdyb25nIGxvZ2dlciBsZXZlbCBcIiR7dH1cImApO3RoaXMubGV2ZWw9dH19fSxmdW5jdGlvbih0LGUsbil7Y29uc3QgaT1uKDE3NSkoKSxyPW4oMjkpO3QuZXhwb3J0cz10PT5jbGFzcyBleHRlbmRzKHR8fGkpe2FzeW5jIGFkZCh0LGUsbixpKXtyZXR1cm4gc3VwZXIuYWRkKHQsci5nZXRNcyhlKSxuLGkpfWFzeW5jIHN0YXJ0KHQpe2F3YWl0IHN1cGVyLnN0YXJ0KHQpO2NvbnN0IGU9c2V0SW50ZXJ2YWwoKCk9PnRoaXMucnVuKHQpLHQuaW50ZXJ2YWwpO3QuaW50ZXJ2YWxPYmplY3Q9ZX1hc3luYyBzdG9wKHQpe2NsZWFySW50ZXJ2YWwodC5pbnRlcnZhbE9iamVjdCksYXdhaXQgc3VwZXIuc3RvcCh0KX19fSxmdW5jdGlvbih0LGUsbil7Y29uc3QgaT1uKDE4KSxyPW4oNDMpKCk7dC5leHBvcnRzPXQ9PmNsYXNzIGV4dGVuZHModHx8cil7Y29uc3RydWN0b3IodCxlPXt9KXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMubm9kZT10LHRoaXMub3B0aW9ucz1pKHtzaG93Q29tcGxldGlvbkxvZ3M6ITAsc2hvd0ZhaWxMb2dzOiEwfSxlKSx0aGlzLnRhc2tzPXt9fWFzeW5jIGFkZCh0LGUsbixyKXtjb25zdCBhPWkoe2ludGVydmFsOmUsZm46bixuYW1lOnR9LHIpO3JldHVybiB2b2lkIDA9PT1hLmlzU3RvcHBlZCYmKGEuaXNTdG9wcGVkPSEwKSx0aGlzLnRhc2tzW3RdPWEsYS5pc1N0b3BwZWR8fChhd2FpdCB0aGlzLnN0b3AoYSksYXdhaXQgdGhpcy5zdGFydChhKSksYX1hc3luYyBnZXQodCl7cmV0dXJuIHRoaXMudGFza3NbdF18fG51bGx9YXN5bmMgcmVtb3ZlKHQpe2NvbnN0IGU9dGhpcy50YXNrc1t0XTtlJiYoIWUuaXNTdG9wcGVkJiZhd2FpdCB0aGlzLnN0b3AoZSksZGVsZXRlIHRoaXMudGFza3NbdF0pfWFzeW5jIGluaXQoKXt0aGlzLnN0YXJ0QWxsKCksYXdhaXQgc3VwZXIuaW5pdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9YXN5bmMgZGVpbml0KCl7dGhpcy5zdG9wQWxsKCksYXdhaXQgc3VwZXIuZGVpbml0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1hc3luYyBzdGFydEFsbCgpe2ZvcihsZXQgdCBpbiB0aGlzLnRhc2tzKWF3YWl0IHRoaXMuc3RhcnQodGhpcy50YXNrc1t0XSl9YXN5bmMgc3RvcEFsbCgpe2ZvcihsZXQgdCBpbiB0aGlzLnRhc2tzKWF3YWl0IHRoaXMuc3RvcCh0aGlzLnRhc2tzW3RdKX1hc3luYyBydW4odCl7aWYodC5pc1N0b3BwZWQpdGhpcy5vcHRpb25zLnNob3dGYWlsTG9ncyYmdGhpcy5ub2RlLmxvZ2dlci53YXJuKGBUYXNrIFwiJHt0Lm5hbWV9XCIgc2hvdWxkIGJlIHN0YXJ0ZWQgYXQgZmlyc3RgKTtlbHNlIGlmKHQuaXNSdW4pdGhpcy5vcHRpb25zLnNob3dGYWlsTG9ncyYmdGhpcy5ub2RlLmxvZ2dlci53YXJuKGBUYXNrIFwiJHt0Lm5hbWV9XCIgaGFzIGJsb2NraW5nIG9wZXJhdGlvbnNgKTtlbHNle3QuaXNSdW49ITA7dHJ5e2F3YWl0IHQuZm4oKSx0aGlzLm9wdGlvbnMuc2hvd0NvbXBsZXRpb25Mb2dzJiZ0aGlzLm5vZGUubG9nZ2VyLmluZm8oYFRhc2sgXCIke3QubmFtZX1cIiBoYXMgYmVlbiBjb21wbGV0ZWRgKX1jYXRjaChlKXt0aGlzLm9wdGlvbnMuc2hvd0ZhaWxMb2dzJiZ0aGlzLm5vZGUubG9nZ2VyLmVycm9yKGBUYXNrIFwiJHt0Lm5hbWV9XCIsYCxlLnN0YWNrKX10LmlzUnVuPSExfX1hc3luYyBzdGFydCh0KXt0LmlzU3RvcHBlZD0hMX1hc3luYyBzdG9wKHQpe3QuaXNTdG9wcGVkPSEwfX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDE3Nyk7dC5leHBvcnRzPW5ldyBpKG4oMTc4KSxuKDE3OSkpfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaSgpe3RoaXMuX3R5cGVzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fZXh0ZW5zaW9ucz1PYmplY3QuY3JlYXRlKG51bGwpO2Zvcih2YXIgdD0wO3Q8YXJndW1lbnRzLmxlbmd0aDt0KyspdGhpcy5kZWZpbmUoYXJndW1lbnRzW3RdKTt0aGlzLmRlZmluZT10aGlzLmRlZmluZS5iaW5kKHRoaXMpLHRoaXMuZ2V0VHlwZT10aGlzLmdldFR5cGUuYmluZCh0aGlzKSx0aGlzLmdldEV4dGVuc2lvbj10aGlzLmdldEV4dGVuc2lvbi5iaW5kKHRoaXMpfWkucHJvdG90eXBlLmRlZmluZT1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiB0KXt2YXIgaT10W25dLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQudG9Mb3dlckNhc2UoKX0pKTtuPW4udG9Mb3dlckNhc2UoKTtmb3IodmFyIHI9MDtyPGkubGVuZ3RoO3IrKyl7aWYoXCIqXCIhPShhPWlbcl0pWzBdKXtpZighZSYmYSBpbiB0aGlzLl90eXBlcyl0aHJvdyBuZXcgRXJyb3IoJ0F0dGVtcHQgdG8gY2hhbmdlIG1hcHBpbmcgZm9yIFwiJythKydcIiBleHRlbnNpb24gZnJvbSBcIicrdGhpcy5fdHlwZXNbYV0rJ1wiIHRvIFwiJytuKydcIi4gUGFzcyBgZm9yY2U9dHJ1ZWAgdG8gYWxsb3cgdGhpcywgb3RoZXJ3aXNlIHJlbW92ZSBcIicrYSsnXCIgZnJvbSB0aGUgbGlzdCBvZiBleHRlbnNpb25zIGZvciBcIicrbisnXCIuJyk7dGhpcy5fdHlwZXNbYV09bn19aWYoZXx8IXRoaXMuX2V4dGVuc2lvbnNbbl0pe3ZhciBhPWlbMF07dGhpcy5fZXh0ZW5zaW9uc1tuXT1cIipcIiE9YVswXT9hOmEuc3Vic3RyKDEpfX19LGkucHJvdG90eXBlLmdldFR5cGU9ZnVuY3Rpb24odCl7dmFyIGU9KHQ9U3RyaW5nKHQpKS5yZXBsYWNlKC9eLipbL1xcXFxdLyxcIlwiKS50b0xvd2VyQ2FzZSgpLG49ZS5yZXBsYWNlKC9eLipcXC4vLFwiXCIpLnRvTG93ZXJDYXNlKCksaT1lLmxlbmd0aDx0Lmxlbmd0aDtyZXR1cm4obi5sZW5ndGg8ZS5sZW5ndGgtMXx8IWkpJiZ0aGlzLl90eXBlc1tuXXx8bnVsbH0saS5wcm90b3R5cGUuZ2V0RXh0ZW5zaW9uPWZ1bmN0aW9uKHQpe3JldHVybih0PS9eXFxzKihbXjtcXHNdKikvLnRlc3QodCkmJlJlZ0V4cC4kMSkmJnRoaXMuX2V4dGVuc2lvbnNbdC50b0xvd2VyQ2FzZSgpXXx8bnVsbH0sdC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPXtcImFwcGxpY2F0aW9uL2FuZHJldy1pbnNldFwiOltcImV6XCJdLFwiYXBwbGljYXRpb24vYXBwbGl4d2FyZVwiOltcImF3XCJdLFwiYXBwbGljYXRpb24vYXRvbSt4bWxcIjpbXCJhdG9tXCJdLFwiYXBwbGljYXRpb24vYXRvbWNhdCt4bWxcIjpbXCJhdG9tY2F0XCJdLFwiYXBwbGljYXRpb24vYXRvbXN2Yyt4bWxcIjpbXCJhdG9tc3ZjXCJdLFwiYXBwbGljYXRpb24vYmRvY1wiOltcImJkb2NcIl0sXCJhcHBsaWNhdGlvbi9jY3htbCt4bWxcIjpbXCJjY3htbFwiXSxcImFwcGxpY2F0aW9uL2NkbWktY2FwYWJpbGl0eVwiOltcImNkbWlhXCJdLFwiYXBwbGljYXRpb24vY2RtaS1jb250YWluZXJcIjpbXCJjZG1pY1wiXSxcImFwcGxpY2F0aW9uL2NkbWktZG9tYWluXCI6W1wiY2RtaWRcIl0sXCJhcHBsaWNhdGlvbi9jZG1pLW9iamVjdFwiOltcImNkbWlvXCJdLFwiYXBwbGljYXRpb24vY2RtaS1xdWV1ZVwiOltcImNkbWlxXCJdLFwiYXBwbGljYXRpb24vY3Utc2VlbWVcIjpbXCJjdVwiXSxcImFwcGxpY2F0aW9uL2Rhc2greG1sXCI6W1wibXBkXCJdLFwiYXBwbGljYXRpb24vZGF2bW91bnQreG1sXCI6W1wiZGF2bW91bnRcIl0sXCJhcHBsaWNhdGlvbi9kb2Nib29rK3htbFwiOltcImRia1wiXSxcImFwcGxpY2F0aW9uL2Rzc2MrZGVyXCI6W1wiZHNzY1wiXSxcImFwcGxpY2F0aW9uL2Rzc2MreG1sXCI6W1wieGRzc2NcIl0sXCJhcHBsaWNhdGlvbi9lY21hc2NyaXB0XCI6W1wiZWNtYVwiLFwiZXNcIl0sXCJhcHBsaWNhdGlvbi9lbW1hK3htbFwiOltcImVtbWFcIl0sXCJhcHBsaWNhdGlvbi9lcHViK3ppcFwiOltcImVwdWJcIl0sXCJhcHBsaWNhdGlvbi9leGlcIjpbXCJleGlcIl0sXCJhcHBsaWNhdGlvbi9mb250LXRkcGZyXCI6W1wicGZyXCJdLFwiYXBwbGljYXRpb24vZ2VvK2pzb25cIjpbXCJnZW9qc29uXCJdLFwiYXBwbGljYXRpb24vZ21sK3htbFwiOltcImdtbFwiXSxcImFwcGxpY2F0aW9uL2dweCt4bWxcIjpbXCJncHhcIl0sXCJhcHBsaWNhdGlvbi9neGZcIjpbXCJneGZcIl0sXCJhcHBsaWNhdGlvbi9nemlwXCI6W1wiZ3pcIl0sXCJhcHBsaWNhdGlvbi9oanNvblwiOltcImhqc29uXCJdLFwiYXBwbGljYXRpb24vaHlwZXJzdHVkaW9cIjpbXCJzdGtcIl0sXCJhcHBsaWNhdGlvbi9pbmttbCt4bWxcIjpbXCJpbmtcIixcImlua21sXCJdLFwiYXBwbGljYXRpb24vaXBmaXhcIjpbXCJpcGZpeFwiXSxcImFwcGxpY2F0aW9uL2phdmEtYXJjaGl2ZVwiOltcImphclwiLFwid2FyXCIsXCJlYXJcIl0sXCJhcHBsaWNhdGlvbi9qYXZhLXNlcmlhbGl6ZWQtb2JqZWN0XCI6W1wic2VyXCJdLFwiYXBwbGljYXRpb24vamF2YS12bVwiOltcImNsYXNzXCJdLFwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiOltcImpzXCIsXCJtanNcIl0sXCJhcHBsaWNhdGlvbi9qc29uXCI6W1wianNvblwiLFwibWFwXCJdLFwiYXBwbGljYXRpb24vanNvbjVcIjpbXCJqc29uNVwiXSxcImFwcGxpY2F0aW9uL2pzb25tbCtqc29uXCI6W1wianNvbm1sXCJdLFwiYXBwbGljYXRpb24vbGQranNvblwiOltcImpzb25sZFwiXSxcImFwcGxpY2F0aW9uL2xvc3QreG1sXCI6W1wibG9zdHhtbFwiXSxcImFwcGxpY2F0aW9uL21hYy1iaW5oZXg0MFwiOltcImhxeFwiXSxcImFwcGxpY2F0aW9uL21hYy1jb21wYWN0cHJvXCI6W1wiY3B0XCJdLFwiYXBwbGljYXRpb24vbWFkcyt4bWxcIjpbXCJtYWRzXCJdLFwiYXBwbGljYXRpb24vbWFuaWZlc3QranNvblwiOltcIndlYm1hbmlmZXN0XCJdLFwiYXBwbGljYXRpb24vbWFyY1wiOltcIm1yY1wiXSxcImFwcGxpY2F0aW9uL21hcmN4bWwreG1sXCI6W1wibXJjeFwiXSxcImFwcGxpY2F0aW9uL21hdGhlbWF0aWNhXCI6W1wibWFcIixcIm5iXCIsXCJtYlwiXSxcImFwcGxpY2F0aW9uL21hdGhtbCt4bWxcIjpbXCJtYXRobWxcIl0sXCJhcHBsaWNhdGlvbi9tYm94XCI6W1wibWJveFwiXSxcImFwcGxpY2F0aW9uL21lZGlhc2VydmVyY29udHJvbCt4bWxcIjpbXCJtc2NtbFwiXSxcImFwcGxpY2F0aW9uL21ldGFsaW5rK3htbFwiOltcIm1ldGFsaW5rXCJdLFwiYXBwbGljYXRpb24vbWV0YWxpbms0K3htbFwiOltcIm1ldGE0XCJdLFwiYXBwbGljYXRpb24vbWV0cyt4bWxcIjpbXCJtZXRzXCJdLFwiYXBwbGljYXRpb24vbW9kcyt4bWxcIjpbXCJtb2RzXCJdLFwiYXBwbGljYXRpb24vbXAyMVwiOltcIm0yMVwiLFwibXAyMVwiXSxcImFwcGxpY2F0aW9uL21wNFwiOltcIm1wNHNcIixcIm00cFwiXSxcImFwcGxpY2F0aW9uL21zd29yZFwiOltcImRvY1wiLFwiZG90XCJdLFwiYXBwbGljYXRpb24vbXhmXCI6W1wibXhmXCJdLFwiYXBwbGljYXRpb24vbi1xdWFkc1wiOltcIm5xXCJdLFwiYXBwbGljYXRpb24vbi10cmlwbGVzXCI6W1wibnRcIl0sXCJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW1cIjpbXCJiaW5cIixcImRtc1wiLFwibHJmXCIsXCJtYXJcIixcInNvXCIsXCJkaXN0XCIsXCJkaXN0elwiLFwicGtnXCIsXCJicGtcIixcImR1bXBcIixcImVsY1wiLFwiZGVwbG95XCIsXCJleGVcIixcImRsbFwiLFwiZGViXCIsXCJkbWdcIixcImlzb1wiLFwiaW1nXCIsXCJtc2lcIixcIm1zcFwiLFwibXNtXCIsXCJidWZmZXJcIl0sXCJhcHBsaWNhdGlvbi9vZGFcIjpbXCJvZGFcIl0sXCJhcHBsaWNhdGlvbi9vZWJwcy1wYWNrYWdlK3htbFwiOltcIm9wZlwiXSxcImFwcGxpY2F0aW9uL29nZ1wiOltcIm9neFwiXSxcImFwcGxpY2F0aW9uL29tZG9jK3htbFwiOltcIm9tZG9jXCJdLFwiYXBwbGljYXRpb24vb25lbm90ZVwiOltcIm9uZXRvY1wiLFwib25ldG9jMlwiLFwib25ldG1wXCIsXCJvbmVwa2dcIl0sXCJhcHBsaWNhdGlvbi9veHBzXCI6W1wib3hwc1wiXSxcImFwcGxpY2F0aW9uL3BhdGNoLW9wcy1lcnJvcit4bWxcIjpbXCJ4ZXJcIl0sXCJhcHBsaWNhdGlvbi9wZGZcIjpbXCJwZGZcIl0sXCJhcHBsaWNhdGlvbi9wZ3AtZW5jcnlwdGVkXCI6W1wicGdwXCJdLFwiYXBwbGljYXRpb24vcGdwLXNpZ25hdHVyZVwiOltcImFzY1wiLFwic2lnXCJdLFwiYXBwbGljYXRpb24vcGljcy1ydWxlc1wiOltcInByZlwiXSxcImFwcGxpY2F0aW9uL3BrY3MxMFwiOltcInAxMFwiXSxcImFwcGxpY2F0aW9uL3BrY3M3LW1pbWVcIjpbXCJwN21cIixcInA3Y1wiXSxcImFwcGxpY2F0aW9uL3BrY3M3LXNpZ25hdHVyZVwiOltcInA3c1wiXSxcImFwcGxpY2F0aW9uL3BrY3M4XCI6W1wicDhcIl0sXCJhcHBsaWNhdGlvbi9wa2l4LWF0dHItY2VydFwiOltcImFjXCJdLFwiYXBwbGljYXRpb24vcGtpeC1jZXJ0XCI6W1wiY2VyXCJdLFwiYXBwbGljYXRpb24vcGtpeC1jcmxcIjpbXCJjcmxcIl0sXCJhcHBsaWNhdGlvbi9wa2l4LXBraXBhdGhcIjpbXCJwa2lwYXRoXCJdLFwiYXBwbGljYXRpb24vcGtpeGNtcFwiOltcInBraVwiXSxcImFwcGxpY2F0aW9uL3Bscyt4bWxcIjpbXCJwbHNcIl0sXCJhcHBsaWNhdGlvbi9wb3N0c2NyaXB0XCI6W1wiYWlcIixcImVwc1wiLFwicHNcIl0sXCJhcHBsaWNhdGlvbi9wc2tjK3htbFwiOltcInBza2N4bWxcIl0sXCJhcHBsaWNhdGlvbi9yYW1sK3lhbWxcIjpbXCJyYW1sXCJdLFwiYXBwbGljYXRpb24vcmRmK3htbFwiOltcInJkZlwiLFwib3dsXCJdLFwiYXBwbGljYXRpb24vcmVnaW5mbyt4bWxcIjpbXCJyaWZcIl0sXCJhcHBsaWNhdGlvbi9yZWxheC1uZy1jb21wYWN0LXN5bnRheFwiOltcInJuY1wiXSxcImFwcGxpY2F0aW9uL3Jlc291cmNlLWxpc3RzK3htbFwiOltcInJsXCJdLFwiYXBwbGljYXRpb24vcmVzb3VyY2UtbGlzdHMtZGlmZit4bWxcIjpbXCJybGRcIl0sXCJhcHBsaWNhdGlvbi9ybHMtc2VydmljZXMreG1sXCI6W1wicnNcIl0sXCJhcHBsaWNhdGlvbi9ycGtpLWdob3N0YnVzdGVyc1wiOltcImdiclwiXSxcImFwcGxpY2F0aW9uL3Jwa2ktbWFuaWZlc3RcIjpbXCJtZnRcIl0sXCJhcHBsaWNhdGlvbi9ycGtpLXJvYVwiOltcInJvYVwiXSxcImFwcGxpY2F0aW9uL3JzZCt4bWxcIjpbXCJyc2RcIl0sXCJhcHBsaWNhdGlvbi9yc3MreG1sXCI6W1wicnNzXCJdLFwiYXBwbGljYXRpb24vcnRmXCI6W1wicnRmXCJdLFwiYXBwbGljYXRpb24vc2JtbCt4bWxcIjpbXCJzYm1sXCJdLFwiYXBwbGljYXRpb24vc2N2cC1jdi1yZXF1ZXN0XCI6W1wic2NxXCJdLFwiYXBwbGljYXRpb24vc2N2cC1jdi1yZXNwb25zZVwiOltcInNjc1wiXSxcImFwcGxpY2F0aW9uL3NjdnAtdnAtcmVxdWVzdFwiOltcInNwcVwiXSxcImFwcGxpY2F0aW9uL3NjdnAtdnAtcmVzcG9uc2VcIjpbXCJzcHBcIl0sXCJhcHBsaWNhdGlvbi9zZHBcIjpbXCJzZHBcIl0sXCJhcHBsaWNhdGlvbi9zZXQtcGF5bWVudC1pbml0aWF0aW9uXCI6W1wic2V0cGF5XCJdLFwiYXBwbGljYXRpb24vc2V0LXJlZ2lzdHJhdGlvbi1pbml0aWF0aW9uXCI6W1wic2V0cmVnXCJdLFwiYXBwbGljYXRpb24vc2hmK3htbFwiOltcInNoZlwiXSxcImFwcGxpY2F0aW9uL3NpZXZlXCI6W1wic2l2XCIsXCJzaWV2ZVwiXSxcImFwcGxpY2F0aW9uL3NtaWwreG1sXCI6W1wic21pXCIsXCJzbWlsXCJdLFwiYXBwbGljYXRpb24vc3BhcnFsLXF1ZXJ5XCI6W1wicnFcIl0sXCJhcHBsaWNhdGlvbi9zcGFycWwtcmVzdWx0cyt4bWxcIjpbXCJzcnhcIl0sXCJhcHBsaWNhdGlvbi9zcmdzXCI6W1wiZ3JhbVwiXSxcImFwcGxpY2F0aW9uL3NyZ3MreG1sXCI6W1wiZ3J4bWxcIl0sXCJhcHBsaWNhdGlvbi9zcnUreG1sXCI6W1wic3J1XCJdLFwiYXBwbGljYXRpb24vc3NkbCt4bWxcIjpbXCJzc2RsXCJdLFwiYXBwbGljYXRpb24vc3NtbCt4bWxcIjpbXCJzc21sXCJdLFwiYXBwbGljYXRpb24vdGVpK3htbFwiOltcInRlaVwiLFwidGVpY29ycHVzXCJdLFwiYXBwbGljYXRpb24vdGhyYXVkK3htbFwiOltcInRmaVwiXSxcImFwcGxpY2F0aW9uL3RpbWVzdGFtcGVkLWRhdGFcIjpbXCJ0c2RcIl0sXCJhcHBsaWNhdGlvbi92b2ljZXhtbCt4bWxcIjpbXCJ2eG1sXCJdLFwiYXBwbGljYXRpb24vd2FzbVwiOltcIndhc21cIl0sXCJhcHBsaWNhdGlvbi93aWRnZXRcIjpbXCJ3Z3RcIl0sXCJhcHBsaWNhdGlvbi93aW5obHBcIjpbXCJobHBcIl0sXCJhcHBsaWNhdGlvbi93c2RsK3htbFwiOltcIndzZGxcIl0sXCJhcHBsaWNhdGlvbi93c3BvbGljeSt4bWxcIjpbXCJ3c3BvbGljeVwiXSxcImFwcGxpY2F0aW9uL3hhbWwreG1sXCI6W1wieGFtbFwiXSxcImFwcGxpY2F0aW9uL3hjYXAtZGlmZit4bWxcIjpbXCJ4ZGZcIl0sXCJhcHBsaWNhdGlvbi94ZW5jK3htbFwiOltcInhlbmNcIl0sXCJhcHBsaWNhdGlvbi94aHRtbCt4bWxcIjpbXCJ4aHRtbFwiLFwieGh0XCJdLFwiYXBwbGljYXRpb24veG1sXCI6W1wieG1sXCIsXCJ4c2xcIixcInhzZFwiLFwicm5nXCJdLFwiYXBwbGljYXRpb24veG1sLWR0ZFwiOltcImR0ZFwiXSxcImFwcGxpY2F0aW9uL3hvcCt4bWxcIjpbXCJ4b3BcIl0sXCJhcHBsaWNhdGlvbi94cHJvYyt4bWxcIjpbXCJ4cGxcIl0sXCJhcHBsaWNhdGlvbi94c2x0K3htbFwiOltcInhzbHRcIl0sXCJhcHBsaWNhdGlvbi94c3BmK3htbFwiOltcInhzcGZcIl0sXCJhcHBsaWNhdGlvbi94dit4bWxcIjpbXCJteG1sXCIsXCJ4aHZtbFwiLFwieHZtbFwiLFwieHZtXCJdLFwiYXBwbGljYXRpb24veWFuZ1wiOltcInlhbmdcIl0sXCJhcHBsaWNhdGlvbi95aW4reG1sXCI6W1wieWluXCJdLFwiYXBwbGljYXRpb24vemlwXCI6W1wiemlwXCJdLFwiYXVkaW8vM2dwcFwiOltcIiozZ3BwXCJdLFwiYXVkaW8vYWRwY21cIjpbXCJhZHBcIl0sXCJhdWRpby9iYXNpY1wiOltcImF1XCIsXCJzbmRcIl0sXCJhdWRpby9taWRpXCI6W1wibWlkXCIsXCJtaWRpXCIsXCJrYXJcIixcInJtaVwiXSxcImF1ZGlvL21wM1wiOltcIiptcDNcIl0sXCJhdWRpby9tcDRcIjpbXCJtNGFcIixcIm1wNGFcIl0sXCJhdWRpby9tcGVnXCI6W1wibXBnYVwiLFwibXAyXCIsXCJtcDJhXCIsXCJtcDNcIixcIm0yYVwiLFwibTNhXCJdLFwiYXVkaW8vb2dnXCI6W1wib2dhXCIsXCJvZ2dcIixcInNweFwiXSxcImF1ZGlvL3MzbVwiOltcInMzbVwiXSxcImF1ZGlvL3NpbGtcIjpbXCJzaWxcIl0sXCJhdWRpby93YXZcIjpbXCJ3YXZcIl0sXCJhdWRpby93YXZlXCI6W1wiKndhdlwiXSxcImF1ZGlvL3dlYm1cIjpbXCJ3ZWJhXCJdLFwiYXVkaW8veG1cIjpbXCJ4bVwiXSxcImZvbnQvY29sbGVjdGlvblwiOltcInR0Y1wiXSxcImZvbnQvb3RmXCI6W1wib3RmXCJdLFwiZm9udC90dGZcIjpbXCJ0dGZcIl0sXCJmb250L3dvZmZcIjpbXCJ3b2ZmXCJdLFwiZm9udC93b2ZmMlwiOltcIndvZmYyXCJdLFwiaW1hZ2UvYWNlc1wiOltcImV4clwiXSxcImltYWdlL2FwbmdcIjpbXCJhcG5nXCJdLFwiaW1hZ2UvYm1wXCI6W1wiYm1wXCJdLFwiaW1hZ2UvY2dtXCI6W1wiY2dtXCJdLFwiaW1hZ2UvZGljb20tcmxlXCI6W1wiZHJsZVwiXSxcImltYWdlL2VtZlwiOltcImVtZlwiXSxcImltYWdlL2ZpdHNcIjpbXCJmaXRzXCJdLFwiaW1hZ2UvZzNmYXhcIjpbXCJnM1wiXSxcImltYWdlL2dpZlwiOltcImdpZlwiXSxcImltYWdlL2hlaWNcIjpbXCJoZWljXCJdLFwiaW1hZ2UvaGVpYy1zZXF1ZW5jZVwiOltcImhlaWNzXCJdLFwiaW1hZ2UvaGVpZlwiOltcImhlaWZcIl0sXCJpbWFnZS9oZWlmLXNlcXVlbmNlXCI6W1wiaGVpZnNcIl0sXCJpbWFnZS9pZWZcIjpbXCJpZWZcIl0sXCJpbWFnZS9qbHNcIjpbXCJqbHNcIl0sXCJpbWFnZS9qcDJcIjpbXCJqcDJcIixcImpwZzJcIl0sXCJpbWFnZS9qcGVnXCI6W1wianBlZ1wiLFwianBnXCIsXCJqcGVcIl0sXCJpbWFnZS9qcG1cIjpbXCJqcG1cIl0sXCJpbWFnZS9qcHhcIjpbXCJqcHhcIixcImpwZlwiXSxcImltYWdlL2p4clwiOltcImp4clwiXSxcImltYWdlL2t0eFwiOltcImt0eFwiXSxcImltYWdlL3BuZ1wiOltcInBuZ1wiXSxcImltYWdlL3NnaVwiOltcInNnaVwiXSxcImltYWdlL3N2Zyt4bWxcIjpbXCJzdmdcIixcInN2Z3pcIl0sXCJpbWFnZS90MzhcIjpbXCJ0MzhcIl0sXCJpbWFnZS90aWZmXCI6W1widGlmXCIsXCJ0aWZmXCJdLFwiaW1hZ2UvdGlmZi1meFwiOltcInRmeFwiXSxcImltYWdlL3dlYnBcIjpbXCJ3ZWJwXCJdLFwiaW1hZ2Uvd21mXCI6W1wid21mXCJdLFwibWVzc2FnZS9kaXNwb3NpdGlvbi1ub3RpZmljYXRpb25cIjpbXCJkaXNwb3NpdGlvbi1ub3RpZmljYXRpb25cIl0sXCJtZXNzYWdlL2dsb2JhbFwiOltcInU4bXNnXCJdLFwibWVzc2FnZS9nbG9iYWwtZGVsaXZlcnktc3RhdHVzXCI6W1widThkc25cIl0sXCJtZXNzYWdlL2dsb2JhbC1kaXNwb3NpdGlvbi1ub3RpZmljYXRpb25cIjpbXCJ1OG1kblwiXSxcIm1lc3NhZ2UvZ2xvYmFsLWhlYWRlcnNcIjpbXCJ1OGhkclwiXSxcIm1lc3NhZ2UvcmZjODIyXCI6W1wiZW1sXCIsXCJtaW1lXCJdLFwibW9kZWwvM21mXCI6W1wiM21mXCJdLFwibW9kZWwvZ2x0Zitqc29uXCI6W1wiZ2x0ZlwiXSxcIm1vZGVsL2dsdGYtYmluYXJ5XCI6W1wiZ2xiXCJdLFwibW9kZWwvaWdlc1wiOltcImlnc1wiLFwiaWdlc1wiXSxcIm1vZGVsL21lc2hcIjpbXCJtc2hcIixcIm1lc2hcIixcInNpbG9cIl0sXCJtb2RlbC9zdGxcIjpbXCJzdGxcIl0sXCJtb2RlbC92cm1sXCI6W1wid3JsXCIsXCJ2cm1sXCJdLFwibW9kZWwveDNkK2JpbmFyeVwiOltcIip4M2RiXCIsXCJ4M2RielwiXSxcIm1vZGVsL3gzZCtmYXN0aW5mb3NldFwiOltcIngzZGJcIl0sXCJtb2RlbC94M2QrdnJtbFwiOltcIip4M2R2XCIsXCJ4M2R2elwiXSxcIm1vZGVsL3gzZCt4bWxcIjpbXCJ4M2RcIixcIngzZHpcIl0sXCJtb2RlbC94M2QtdnJtbFwiOltcIngzZHZcIl0sXCJ0ZXh0L2NhY2hlLW1hbmlmZXN0XCI6W1wiYXBwY2FjaGVcIixcIm1hbmlmZXN0XCJdLFwidGV4dC9jYWxlbmRhclwiOltcImljc1wiLFwiaWZiXCJdLFwidGV4dC9jb2ZmZWVzY3JpcHRcIjpbXCJjb2ZmZWVcIixcImxpdGNvZmZlZVwiXSxcInRleHQvY3NzXCI6W1wiY3NzXCJdLFwidGV4dC9jc3ZcIjpbXCJjc3ZcIl0sXCJ0ZXh0L2h0bWxcIjpbXCJodG1sXCIsXCJodG1cIixcInNodG1sXCJdLFwidGV4dC9qYWRlXCI6W1wiamFkZVwiXSxcInRleHQvanN4XCI6W1wianN4XCJdLFwidGV4dC9sZXNzXCI6W1wibGVzc1wiXSxcInRleHQvbWFya2Rvd25cIjpbXCJtYXJrZG93blwiLFwibWRcIl0sXCJ0ZXh0L21hdGhtbFwiOltcIm1tbFwiXSxcInRleHQvbWR4XCI6W1wibWR4XCJdLFwidGV4dC9uM1wiOltcIm4zXCJdLFwidGV4dC9wbGFpblwiOltcInR4dFwiLFwidGV4dFwiLFwiY29uZlwiLFwiZGVmXCIsXCJsaXN0XCIsXCJsb2dcIixcImluXCIsXCJpbmlcIl0sXCJ0ZXh0L3JpY2h0ZXh0XCI6W1wicnR4XCJdLFwidGV4dC9ydGZcIjpbXCIqcnRmXCJdLFwidGV4dC9zZ21sXCI6W1wic2dtbFwiLFwic2dtXCJdLFwidGV4dC9zaGV4XCI6W1wic2hleFwiXSxcInRleHQvc2xpbVwiOltcInNsaW1cIixcInNsbVwiXSxcInRleHQvc3R5bHVzXCI6W1wic3R5bHVzXCIsXCJzdHlsXCJdLFwidGV4dC90YWItc2VwYXJhdGVkLXZhbHVlc1wiOltcInRzdlwiXSxcInRleHQvdHJvZmZcIjpbXCJ0XCIsXCJ0clwiLFwicm9mZlwiLFwibWFuXCIsXCJtZVwiLFwibXNcIl0sXCJ0ZXh0L3R1cnRsZVwiOltcInR0bFwiXSxcInRleHQvdXJpLWxpc3RcIjpbXCJ1cmlcIixcInVyaXNcIixcInVybHNcIl0sXCJ0ZXh0L3ZjYXJkXCI6W1widmNhcmRcIl0sXCJ0ZXh0L3Z0dFwiOltcInZ0dFwiXSxcInRleHQveG1sXCI6W1wiKnhtbFwiXSxcInRleHQveWFtbFwiOltcInlhbWxcIixcInltbFwiXSxcInZpZGVvLzNncHBcIjpbXCIzZ3BcIixcIjNncHBcIl0sXCJ2aWRlby8zZ3BwMlwiOltcIjNnMlwiXSxcInZpZGVvL2gyNjFcIjpbXCJoMjYxXCJdLFwidmlkZW8vaDI2M1wiOltcImgyNjNcIl0sXCJ2aWRlby9oMjY0XCI6W1wiaDI2NFwiXSxcInZpZGVvL2pwZWdcIjpbXCJqcGd2XCJdLFwidmlkZW8vanBtXCI6W1wiKmpwbVwiLFwianBnbVwiXSxcInZpZGVvL21qMlwiOltcIm1qMlwiLFwibWpwMlwiXSxcInZpZGVvL21wMnRcIjpbXCJ0c1wiXSxcInZpZGVvL21wNFwiOltcIm1wNFwiLFwibXA0dlwiLFwibXBnNFwiXSxcInZpZGVvL21wZWdcIjpbXCJtcGVnXCIsXCJtcGdcIixcIm1wZVwiLFwibTF2XCIsXCJtMnZcIl0sXCJ2aWRlby9vZ2dcIjpbXCJvZ3ZcIl0sXCJ2aWRlby9xdWlja3RpbWVcIjpbXCJxdFwiLFwibW92XCJdLFwidmlkZW8vd2VibVwiOltcIndlYm1cIl19fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz17XCJhcHBsaWNhdGlvbi9wcnMuY3d3XCI6W1wiY3d3XCJdLFwiYXBwbGljYXRpb24vdm5kLjNncHAucGljLWJ3LWxhcmdlXCI6W1wicGxiXCJdLFwiYXBwbGljYXRpb24vdm5kLjNncHAucGljLWJ3LXNtYWxsXCI6W1wicHNiXCJdLFwiYXBwbGljYXRpb24vdm5kLjNncHAucGljLWJ3LXZhclwiOltcInB2YlwiXSxcImFwcGxpY2F0aW9uL3ZuZC4zZ3BwMi50Y2FwXCI6W1widGNhcFwiXSxcImFwcGxpY2F0aW9uL3ZuZC4zbS5wb3N0LWl0LW5vdGVzXCI6W1wicHduXCJdLFwiYXBwbGljYXRpb24vdm5kLmFjY3BhYy5zaW1wbHkuYXNvXCI6W1wiYXNvXCJdLFwiYXBwbGljYXRpb24vdm5kLmFjY3BhYy5zaW1wbHkuaW1wXCI6W1wiaW1wXCJdLFwiYXBwbGljYXRpb24vdm5kLmFjdWNvYm9sXCI6W1wiYWN1XCJdLFwiYXBwbGljYXRpb24vdm5kLmFjdWNvcnBcIjpbXCJhdGNcIixcImFjdXRjXCJdLFwiYXBwbGljYXRpb24vdm5kLmFkb2JlLmFpci1hcHBsaWNhdGlvbi1pbnN0YWxsZXItcGFja2FnZSt6aXBcIjpbXCJhaXJcIl0sXCJhcHBsaWNhdGlvbi92bmQuYWRvYmUuZm9ybXNjZW50cmFsLmZjZHRcIjpbXCJmY2R0XCJdLFwiYXBwbGljYXRpb24vdm5kLmFkb2JlLmZ4cFwiOltcImZ4cFwiLFwiZnhwbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5hZG9iZS54ZHAreG1sXCI6W1wieGRwXCJdLFwiYXBwbGljYXRpb24vdm5kLmFkb2JlLnhmZGZcIjpbXCJ4ZmRmXCJdLFwiYXBwbGljYXRpb24vdm5kLmFoZWFkLnNwYWNlXCI6W1wiYWhlYWRcIl0sXCJhcHBsaWNhdGlvbi92bmQuYWlyemlwLmZpbGVzZWN1cmUuYXpmXCI6W1wiYXpmXCJdLFwiYXBwbGljYXRpb24vdm5kLmFpcnppcC5maWxlc2VjdXJlLmF6c1wiOltcImF6c1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5hbWF6b24uZWJvb2tcIjpbXCJhendcIl0sXCJhcHBsaWNhdGlvbi92bmQuYW1lcmljYW5keW5hbWljcy5hY2NcIjpbXCJhY2NcIl0sXCJhcHBsaWNhdGlvbi92bmQuYW1pZ2EuYW1pXCI6W1wiYW1pXCJdLFwiYXBwbGljYXRpb24vdm5kLmFuZHJvaWQucGFja2FnZS1hcmNoaXZlXCI6W1wiYXBrXCJdLFwiYXBwbGljYXRpb24vdm5kLmFuc2VyLXdlYi1jZXJ0aWZpY2F0ZS1pc3N1ZS1pbml0aWF0aW9uXCI6W1wiY2lpXCJdLFwiYXBwbGljYXRpb24vdm5kLmFuc2VyLXdlYi1mdW5kcy10cmFuc2Zlci1pbml0aWF0aW9uXCI6W1wiZnRpXCJdLFwiYXBwbGljYXRpb24vdm5kLmFudGl4LmdhbWUtY29tcG9uZW50XCI6W1wiYXR4XCJdLFwiYXBwbGljYXRpb24vdm5kLmFwcGxlLmluc3RhbGxlcit4bWxcIjpbXCJtcGtnXCJdLFwiYXBwbGljYXRpb24vdm5kLmFwcGxlLmtleW5vdGVcIjpbXCJrZXlub3RlXCJdLFwiYXBwbGljYXRpb24vdm5kLmFwcGxlLm1wZWd1cmxcIjpbXCJtM3U4XCJdLFwiYXBwbGljYXRpb24vdm5kLmFwcGxlLm51bWJlcnNcIjpbXCJudW1iZXJzXCJdLFwiYXBwbGljYXRpb24vdm5kLmFwcGxlLnBhZ2VzXCI6W1wicGFnZXNcIl0sXCJhcHBsaWNhdGlvbi92bmQuYXBwbGUucGtwYXNzXCI6W1wicGtwYXNzXCJdLFwiYXBwbGljYXRpb24vdm5kLmFyaXN0YW5ldHdvcmtzLnN3aVwiOltcInN3aVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5hc3RyYWVhLXNvZnR3YXJlLmlvdGFcIjpbXCJpb3RhXCJdLFwiYXBwbGljYXRpb24vdm5kLmF1ZGlvZ3JhcGhcIjpbXCJhZXBcIl0sXCJhcHBsaWNhdGlvbi92bmQuYmx1ZWljZS5tdWx0aXBhc3NcIjpbXCJtcG1cIl0sXCJhcHBsaWNhdGlvbi92bmQuYm1pXCI6W1wiYm1pXCJdLFwiYXBwbGljYXRpb24vdm5kLmJ1c2luZXNzb2JqZWN0c1wiOltcInJlcFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jaGVtZHJhdyt4bWxcIjpbXCJjZHhtbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jaGlwbnV0cy5rYXJhb2tlLW1tZFwiOltcIm1tZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jaW5kZXJlbGxhXCI6W1wiY2R5XCJdLFwiYXBwbGljYXRpb24vdm5kLmNpdGF0aW9uc3R5bGVzLnN0eWxlK3htbFwiOltcImNzbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jbGF5bW9yZVwiOltcImNsYVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jbG9hbnRvLnJwOVwiOltcInJwOVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jbG9uay5jNGdyb3VwXCI6W1wiYzRnXCIsXCJjNGRcIixcImM0ZlwiLFwiYzRwXCIsXCJjNHVcIl0sXCJhcHBsaWNhdGlvbi92bmQuY2x1ZXRydXN0LmNhcnRvbW9iaWxlLWNvbmZpZ1wiOltcImMxMWFtY1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5jbHVldHJ1c3QuY2FydG9tb2JpbGUtY29uZmlnLXBrZ1wiOltcImMxMWFtelwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jb21tb25zcGFjZVwiOltcImNzcFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jb250YWN0LmNtc2dcIjpbXCJjZGJjbXNnXCJdLFwiYXBwbGljYXRpb24vdm5kLmNvc21vY2FsbGVyXCI6W1wiY21jXCJdLFwiYXBwbGljYXRpb24vdm5kLmNyaWNrLmNsaWNrZXJcIjpbXCJjbGt4XCJdLFwiYXBwbGljYXRpb24vdm5kLmNyaWNrLmNsaWNrZXIua2V5Ym9hcmRcIjpbXCJjbGtrXCJdLFwiYXBwbGljYXRpb24vdm5kLmNyaWNrLmNsaWNrZXIucGFsZXR0ZVwiOltcImNsa3BcIl0sXCJhcHBsaWNhdGlvbi92bmQuY3JpY2suY2xpY2tlci50ZW1wbGF0ZVwiOltcImNsa3RcIl0sXCJhcHBsaWNhdGlvbi92bmQuY3JpY2suY2xpY2tlci53b3JkYmFua1wiOltcImNsa3dcIl0sXCJhcHBsaWNhdGlvbi92bmQuY3JpdGljYWx0b29scy53YnMreG1sXCI6W1wid2JzXCJdLFwiYXBwbGljYXRpb24vdm5kLmN0Yy1wb3NtbFwiOltcInBtbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jdXBzLXBwZFwiOltcInBwZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jdXJsLmNhclwiOltcImNhclwiXSxcImFwcGxpY2F0aW9uL3ZuZC5jdXJsLnBjdXJsXCI6W1wicGN1cmxcIl0sXCJhcHBsaWNhdGlvbi92bmQuZGFydFwiOltcImRhcnRcIl0sXCJhcHBsaWNhdGlvbi92bmQuZGF0YS12aXNpb24ucmR6XCI6W1wicmR6XCJdLFwiYXBwbGljYXRpb24vdm5kLmRlY2UuZGF0YVwiOltcInV2ZlwiLFwidXZ2ZlwiLFwidXZkXCIsXCJ1dnZkXCJdLFwiYXBwbGljYXRpb24vdm5kLmRlY2UudHRtbCt4bWxcIjpbXCJ1dnRcIixcInV2dnRcIl0sXCJhcHBsaWNhdGlvbi92bmQuZGVjZS51bnNwZWNpZmllZFwiOltcInV2eFwiLFwidXZ2eFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5kZWNlLnppcFwiOltcInV2elwiLFwidXZ2elwiXSxcImFwcGxpY2F0aW9uL3ZuZC5kZW5vdm8uZmNzZWxheW91dC1saW5rXCI6W1wiZmVfbGF1bmNoXCJdLFwiYXBwbGljYXRpb24vdm5kLmRuYVwiOltcImRuYVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5kb2xieS5tbHBcIjpbXCJtbHBcIl0sXCJhcHBsaWNhdGlvbi92bmQuZHBncmFwaFwiOltcImRwZ1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5kcmVhbWZhY3RvcnlcIjpbXCJkZmFjXCJdLFwiYXBwbGljYXRpb24vdm5kLmRzLWtleXBvaW50XCI6W1wia3B4eFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5kdmIuYWl0XCI6W1wiYWl0XCJdLFwiYXBwbGljYXRpb24vdm5kLmR2Yi5zZXJ2aWNlXCI6W1wic3ZjXCJdLFwiYXBwbGljYXRpb24vdm5kLmR5bmFnZW9cIjpbXCJnZW9cIl0sXCJhcHBsaWNhdGlvbi92bmQuZWNvd2luLmNoYXJ0XCI6W1wibWFnXCJdLFwiYXBwbGljYXRpb24vdm5kLmVubGl2ZW5cIjpbXCJubWxcIl0sXCJhcHBsaWNhdGlvbi92bmQuZXBzb24uZXNmXCI6W1wiZXNmXCJdLFwiYXBwbGljYXRpb24vdm5kLmVwc29uLm1zZlwiOltcIm1zZlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5lcHNvbi5xdWlja2FuaW1lXCI6W1wicWFtXCJdLFwiYXBwbGljYXRpb24vdm5kLmVwc29uLnNhbHRcIjpbXCJzbHRcIl0sXCJhcHBsaWNhdGlvbi92bmQuZXBzb24uc3NmXCI6W1wic3NmXCJdLFwiYXBwbGljYXRpb24vdm5kLmVzemlnbm8zK3htbFwiOltcImVzM1wiLFwiZXQzXCJdLFwiYXBwbGljYXRpb24vdm5kLmV6cGl4LWFsYnVtXCI6W1wiZXoyXCJdLFwiYXBwbGljYXRpb24vdm5kLmV6cGl4LXBhY2thZ2VcIjpbXCJlejNcIl0sXCJhcHBsaWNhdGlvbi92bmQuZmRmXCI6W1wiZmRmXCJdLFwiYXBwbGljYXRpb24vdm5kLmZkc24ubXNlZWRcIjpbXCJtc2VlZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5mZHNuLnNlZWRcIjpbXCJzZWVkXCIsXCJkYXRhbGVzc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5mbG9ncmFwaGl0XCI6W1wiZ3BoXCJdLFwiYXBwbGljYXRpb24vdm5kLmZsdXh0aW1lLmNsaXBcIjpbXCJmdGNcIl0sXCJhcHBsaWNhdGlvbi92bmQuZnJhbWVtYWtlclwiOltcImZtXCIsXCJmcmFtZVwiLFwibWFrZXJcIixcImJvb2tcIl0sXCJhcHBsaWNhdGlvbi92bmQuZnJvZ2Fucy5mbmNcIjpbXCJmbmNcIl0sXCJhcHBsaWNhdGlvbi92bmQuZnJvZ2Fucy5sdGZcIjpbXCJsdGZcIl0sXCJhcHBsaWNhdGlvbi92bmQuZnNjLndlYmxhdW5jaFwiOltcImZzY1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5mdWppdHN1Lm9hc3lzXCI6W1wib2FzXCJdLFwiYXBwbGljYXRpb24vdm5kLmZ1aml0c3Uub2FzeXMyXCI6W1wib2EyXCJdLFwiYXBwbGljYXRpb24vdm5kLmZ1aml0c3Uub2FzeXMzXCI6W1wib2EzXCJdLFwiYXBwbGljYXRpb24vdm5kLmZ1aml0c3Uub2FzeXNncFwiOltcImZnNVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5mdWppdHN1Lm9hc3lzcHJzXCI6W1wiYmgyXCJdLFwiYXBwbGljYXRpb24vdm5kLmZ1aml4ZXJveC5kZGRcIjpbXCJkZGRcIl0sXCJhcHBsaWNhdGlvbi92bmQuZnVqaXhlcm94LmRvY3V3b3Jrc1wiOltcInhkd1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5mdWppeGVyb3guZG9jdXdvcmtzLmJpbmRlclwiOltcInhiZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5mdXp6eXNoZWV0XCI6W1wiZnpzXCJdLFwiYXBwbGljYXRpb24vdm5kLmdlbm9tYXRpeC50dXhlZG9cIjpbXCJ0eGRcIl0sXCJhcHBsaWNhdGlvbi92bmQuZ2VvZ2VicmEuZmlsZVwiOltcImdnYlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5nZW9nZWJyYS50b29sXCI6W1wiZ2d0XCJdLFwiYXBwbGljYXRpb24vdm5kLmdlb21ldHJ5LWV4cGxvcmVyXCI6W1wiZ2V4XCIsXCJncmVcIl0sXCJhcHBsaWNhdGlvbi92bmQuZ2VvbmV4dFwiOltcImd4dFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5nZW9wbGFuXCI6W1wiZzJ3XCJdLFwiYXBwbGljYXRpb24vdm5kLmdlb3NwYWNlXCI6W1wiZzN3XCJdLFwiYXBwbGljYXRpb24vdm5kLmdteFwiOltcImdteFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5kb2N1bWVudFwiOltcImdkb2NcIl0sXCJhcHBsaWNhdGlvbi92bmQuZ29vZ2xlLWFwcHMucHJlc2VudGF0aW9uXCI6W1wiZ3NsaWRlc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5zcHJlYWRzaGVldFwiOltcImdzaGVldFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtZWFydGgua21sK3htbFwiOltcImttbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtZWFydGgua216XCI6W1wia216XCJdLFwiYXBwbGljYXRpb24vdm5kLmdyYWZlcVwiOltcImdxZlwiLFwiZ3FzXCJdLFwiYXBwbGljYXRpb24vdm5kLmdyb292ZS1hY2NvdW50XCI6W1wiZ2FjXCJdLFwiYXBwbGljYXRpb24vdm5kLmdyb292ZS1oZWxwXCI6W1wiZ2hmXCJdLFwiYXBwbGljYXRpb24vdm5kLmdyb292ZS1pZGVudGl0eS1tZXNzYWdlXCI6W1wiZ2ltXCJdLFwiYXBwbGljYXRpb24vdm5kLmdyb292ZS1pbmplY3RvclwiOltcImdydlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5ncm9vdmUtdG9vbC1tZXNzYWdlXCI6W1wiZ3RtXCJdLFwiYXBwbGljYXRpb24vdm5kLmdyb292ZS10b29sLXRlbXBsYXRlXCI6W1widHBsXCJdLFwiYXBwbGljYXRpb24vdm5kLmdyb292ZS12Y2FyZFwiOltcInZjZ1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5oYWwreG1sXCI6W1wiaGFsXCJdLFwiYXBwbGljYXRpb24vdm5kLmhhbmRoZWxkLWVudGVydGFpbm1lbnQreG1sXCI6W1wiem1tXCJdLFwiYXBwbGljYXRpb24vdm5kLmhiY2lcIjpbXCJoYmNpXCJdLFwiYXBwbGljYXRpb24vdm5kLmhoZS5sZXNzb24tcGxheWVyXCI6W1wibGVzXCJdLFwiYXBwbGljYXRpb24vdm5kLmhwLWhwZ2xcIjpbXCJocGdsXCJdLFwiYXBwbGljYXRpb24vdm5kLmhwLWhwaWRcIjpbXCJocGlkXCJdLFwiYXBwbGljYXRpb24vdm5kLmhwLWhwc1wiOltcImhwc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5ocC1qbHl0XCI6W1wiamx0XCJdLFwiYXBwbGljYXRpb24vdm5kLmhwLXBjbFwiOltcInBjbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5ocC1wY2x4bFwiOltcInBjbHhsXCJdLFwiYXBwbGljYXRpb24vdm5kLmh5ZHJvc3RhdGl4LnNvZi1kYXRhXCI6W1wic2ZkLWhkc3R4XCJdLFwiYXBwbGljYXRpb24vdm5kLmlibS5taW5pcGF5XCI6W1wibXB5XCJdLFwiYXBwbGljYXRpb24vdm5kLmlibS5tb2RjYXBcIjpbXCJhZnBcIixcImxpc3RhZnBcIixcImxpc3QzODIwXCJdLFwiYXBwbGljYXRpb24vdm5kLmlibS5yaWdodHMtbWFuYWdlbWVudFwiOltcImlybVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5pYm0uc2VjdXJlLWNvbnRhaW5lclwiOltcInNjXCJdLFwiYXBwbGljYXRpb24vdm5kLmljY3Byb2ZpbGVcIjpbXCJpY2NcIixcImljbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5pZ2xvYWRlclwiOltcImlnbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5pbW1lcnZpc2lvbi1pdnBcIjpbXCJpdnBcIl0sXCJhcHBsaWNhdGlvbi92bmQuaW1tZXJ2aXNpb24taXZ1XCI6W1wiaXZ1XCJdLFwiYXBwbGljYXRpb24vdm5kLmluc29ycy5pZ21cIjpbXCJpZ21cIl0sXCJhcHBsaWNhdGlvbi92bmQuaW50ZXJjb24uZm9ybW5ldFwiOltcInhwd1wiLFwieHB4XCJdLFwiYXBwbGljYXRpb24vdm5kLmludGVyZ2VvXCI6W1wiaTJnXCJdLFwiYXBwbGljYXRpb24vdm5kLmludHUucWJvXCI6W1wicWJvXCJdLFwiYXBwbGljYXRpb24vdm5kLmludHUucWZ4XCI6W1wicWZ4XCJdLFwiYXBwbGljYXRpb24vdm5kLmlwdW5wbHVnZ2VkLnJjcHJvZmlsZVwiOltcInJjcHJvZmlsZVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5pcmVwb3NpdG9yeS5wYWNrYWdlK3htbFwiOltcImlycFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5pcy14cHJcIjpbXCJ4cHJcIl0sXCJhcHBsaWNhdGlvbi92bmQuaXNhYy5mY3NcIjpbXCJmY3NcIl0sXCJhcHBsaWNhdGlvbi92bmQuamFtXCI6W1wiamFtXCJdLFwiYXBwbGljYXRpb24vdm5kLmpjcC5qYXZhbWUubWlkbGV0LXJtc1wiOltcInJtc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5qaXNwXCI6W1wiamlzcFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5qb29zdC5qb2RhLWFyY2hpdmVcIjpbXCJqb2RhXCJdLFwiYXBwbGljYXRpb24vdm5kLmthaG9vdHpcIjpbXCJrdHpcIixcImt0clwiXSxcImFwcGxpY2F0aW9uL3ZuZC5rZGUua2FyYm9uXCI6W1wia2FyYm9uXCJdLFwiYXBwbGljYXRpb24vdm5kLmtkZS5rY2hhcnRcIjpbXCJjaHJ0XCJdLFwiYXBwbGljYXRpb24vdm5kLmtkZS5rZm9ybXVsYVwiOltcImtmb1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5rZGUua2l2aW9cIjpbXCJmbHdcIl0sXCJhcHBsaWNhdGlvbi92bmQua2RlLmtvbnRvdXJcIjpbXCJrb25cIl0sXCJhcHBsaWNhdGlvbi92bmQua2RlLmtwcmVzZW50ZXJcIjpbXCJrcHJcIixcImtwdFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5rZGUua3NwcmVhZFwiOltcImtzcFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5rZGUua3dvcmRcIjpbXCJrd2RcIixcImt3dFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5rZW5hbWVhYXBwXCI6W1wiaHRrZVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5raWRzcGlyYXRpb25cIjpbXCJraWFcIl0sXCJhcHBsaWNhdGlvbi92bmQua2luYXJcIjpbXCJrbmVcIixcImtucFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5rb2FuXCI6W1wic2twXCIsXCJza2RcIixcInNrdFwiLFwic2ttXCJdLFwiYXBwbGljYXRpb24vdm5kLmtvZGFrLWRlc2NyaXB0b3JcIjpbXCJzc2VcIl0sXCJhcHBsaWNhdGlvbi92bmQubGFzLmxhcyt4bWxcIjpbXCJsYXN4bWxcIl0sXCJhcHBsaWNhdGlvbi92bmQubGxhbWFncmFwaGljcy5saWZlLWJhbGFuY2UuZGVza3RvcFwiOltcImxiZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5sbGFtYWdyYXBoaWNzLmxpZmUtYmFsYW5jZS5leGNoYW5nZSt4bWxcIjpbXCJsYmVcIl0sXCJhcHBsaWNhdGlvbi92bmQubG90dXMtMS0yLTNcIjpbXCIxMjNcIl0sXCJhcHBsaWNhdGlvbi92bmQubG90dXMtYXBwcm9hY2hcIjpbXCJhcHJcIl0sXCJhcHBsaWNhdGlvbi92bmQubG90dXMtZnJlZWxhbmNlXCI6W1wicHJlXCJdLFwiYXBwbGljYXRpb24vdm5kLmxvdHVzLW5vdGVzXCI6W1wibnNmXCJdLFwiYXBwbGljYXRpb24vdm5kLmxvdHVzLW9yZ2FuaXplclwiOltcIm9yZ1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5sb3R1cy1zY3JlZW5jYW1cIjpbXCJzY21cIl0sXCJhcHBsaWNhdGlvbi92bmQubG90dXMtd29yZHByb1wiOltcImx3cFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tYWNwb3J0cy5wb3J0cGtnXCI6W1wicG9ydHBrZ1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5tY2RcIjpbXCJtY2RcIl0sXCJhcHBsaWNhdGlvbi92bmQubWVkY2FsY2RhdGFcIjpbXCJtYzFcIl0sXCJhcHBsaWNhdGlvbi92bmQubWVkaWFzdGF0aW9uLmNka2V5XCI6W1wiY2RrZXlcIl0sXCJhcHBsaWNhdGlvbi92bmQubWZlclwiOltcIm13ZlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tZm1wXCI6W1wibWZtXCJdLFwiYXBwbGljYXRpb24vdm5kLm1pY3JvZ3JhZnguZmxvXCI6W1wiZmxvXCJdLFwiYXBwbGljYXRpb24vdm5kLm1pY3JvZ3JhZnguaWd4XCI6W1wiaWd4XCJdLFwiYXBwbGljYXRpb24vdm5kLm1pZlwiOltcIm1pZlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tb2JpdXMuZGFmXCI6W1wiZGFmXCJdLFwiYXBwbGljYXRpb24vdm5kLm1vYml1cy5kaXNcIjpbXCJkaXNcIl0sXCJhcHBsaWNhdGlvbi92bmQubW9iaXVzLm1ia1wiOltcIm1ia1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5tb2JpdXMubXF5XCI6W1wibXF5XCJdLFwiYXBwbGljYXRpb24vdm5kLm1vYml1cy5tc2xcIjpbXCJtc2xcIl0sXCJhcHBsaWNhdGlvbi92bmQubW9iaXVzLnBsY1wiOltcInBsY1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5tb2JpdXMudHhmXCI6W1widHhmXCJdLFwiYXBwbGljYXRpb24vdm5kLm1vcGh1bi5hcHBsaWNhdGlvblwiOltcIm1wblwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tb3BodW4uY2VydGlmaWNhdGVcIjpbXCJtcGNcIl0sXCJhcHBsaWNhdGlvbi92bmQubW96aWxsYS54dWwreG1sXCI6W1wieHVsXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLWFydGdhbHJ5XCI6W1wiY2lsXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLWNhYi1jb21wcmVzc2VkXCI6W1wiY2FiXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsXCI6W1wieGxzXCIsXCJ4bG1cIixcInhsYVwiLFwieGxjXCIsXCJ4bHRcIixcInhsd1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1leGNlbC5hZGRpbi5tYWNyb2VuYWJsZWQuMTJcIjpbXCJ4bGFtXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsLnNoZWV0LmJpbmFyeS5tYWNyb2VuYWJsZWQuMTJcIjpbXCJ4bHNiXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsLnNoZWV0Lm1hY3JvZW5hYmxlZC4xMlwiOltcInhsc21cIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtZXhjZWwudGVtcGxhdGUubWFjcm9lbmFibGVkLjEyXCI6W1wieGx0bVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1mb250b2JqZWN0XCI6W1wiZW90XCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLWh0bWxoZWxwXCI6W1wiY2htXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLWltc1wiOltcImltc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1scm1cIjpbXCJscm1cIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtb2ZmaWNldGhlbWVcIjpbXCJ0aG14XCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLW91dGxvb2tcIjpbXCJtc2dcIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtcGtpLnNlY2NhdFwiOltcImNhdFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1wa2kuc3RsXCI6W1wiKnN0bFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1wb3dlcnBvaW50XCI6W1wicHB0XCIsXCJwcHNcIixcInBvdFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1wb3dlcnBvaW50LmFkZGluLm1hY3JvZW5hYmxlZC4xMlwiOltcInBwYW1cIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludC5wcmVzZW50YXRpb24ubWFjcm9lbmFibGVkLjEyXCI6W1wicHB0bVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1wb3dlcnBvaW50LnNsaWRlLm1hY3JvZW5hYmxlZC4xMlwiOltcInNsZG1cIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludC5zbGlkZXNob3cubWFjcm9lbmFibGVkLjEyXCI6W1wicHBzbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy1wb3dlcnBvaW50LnRlbXBsYXRlLm1hY3JvZW5hYmxlZC4xMlwiOltcInBvdG1cIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtcHJvamVjdFwiOltcIm1wcFwiLFwibXB0XCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLXdvcmQuZG9jdW1lbnQubWFjcm9lbmFibGVkLjEyXCI6W1wiZG9jbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5tcy13b3JkLnRlbXBsYXRlLm1hY3JvZW5hYmxlZC4xMlwiOltcImRvdG1cIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtd29ya3NcIjpbXCJ3cHNcIixcIndrc1wiLFwid2NtXCIsXCJ3ZGJcIl0sXCJhcHBsaWNhdGlvbi92bmQubXMtd3BsXCI6W1wid3BsXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zLXhwc2RvY3VtZW50XCI6W1wieHBzXCJdLFwiYXBwbGljYXRpb24vdm5kLm1zZXFcIjpbXCJtc2VxXCJdLFwiYXBwbGljYXRpb24vdm5kLm11c2ljaWFuXCI6W1wibXVzXCJdLFwiYXBwbGljYXRpb24vdm5kLm11dmVlLnN0eWxlXCI6W1wibXN0eVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5teW5mY1wiOltcInRhZ2xldFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5uZXVyb2xhbmd1YWdlLm5sdVwiOltcIm5sdVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5uaXRmXCI6W1wibnRmXCIsXCJuaXRmXCJdLFwiYXBwbGljYXRpb24vdm5kLm5vYmxlbmV0LWRpcmVjdG9yeVwiOltcIm5uZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5ub2JsZW5ldC1zZWFsZXJcIjpbXCJubnNcIl0sXCJhcHBsaWNhdGlvbi92bmQubm9ibGVuZXQtd2ViXCI6W1wibm53XCJdLFwiYXBwbGljYXRpb24vdm5kLm5va2lhLm4tZ2FnZS5kYXRhXCI6W1wibmdkYXRcIl0sXCJhcHBsaWNhdGlvbi92bmQubm9raWEubi1nYWdlLnN5bWJpYW4uaW5zdGFsbFwiOltcIm4tZ2FnZVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5ub2tpYS5yYWRpby1wcmVzZXRcIjpbXCJycHN0XCJdLFwiYXBwbGljYXRpb24vdm5kLm5va2lhLnJhZGlvLXByZXNldHNcIjpbXCJycHNzXCJdLFwiYXBwbGljYXRpb24vdm5kLm5vdmFkaWdtLmVkbVwiOltcImVkbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5ub3ZhZGlnbS5lZHhcIjpbXCJlZHhcIl0sXCJhcHBsaWNhdGlvbi92bmQubm92YWRpZ20uZXh0XCI6W1wiZXh0XCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5jaGFydFwiOltcIm9kY1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuY2hhcnQtdGVtcGxhdGVcIjpbXCJvdGNcIl0sXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LmRhdGFiYXNlXCI6W1wib2RiXCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5mb3JtdWxhXCI6W1wib2RmXCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5mb3JtdWxhLXRlbXBsYXRlXCI6W1wib2RmdFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuZ3JhcGhpY3NcIjpbXCJvZGdcIl0sXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LmdyYXBoaWNzLXRlbXBsYXRlXCI6W1wib3RnXCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5pbWFnZVwiOltcIm9kaVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuaW1hZ2UtdGVtcGxhdGVcIjpbXCJvdGlcIl0sXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LnByZXNlbnRhdGlvblwiOltcIm9kcFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQucHJlc2VudGF0aW9uLXRlbXBsYXRlXCI6W1wib3RwXCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5zcHJlYWRzaGVldFwiOltcIm9kc1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuc3ByZWFkc2hlZXQtdGVtcGxhdGVcIjpbXCJvdHNcIl0sXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LnRleHRcIjpbXCJvZHRcIl0sXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LnRleHQtbWFzdGVyXCI6W1wib2RtXCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC50ZXh0LXRlbXBsYXRlXCI6W1wib3R0XCJdLFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC50ZXh0LXdlYlwiOltcIm90aFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vbHBjLXN1Z2FyXCI6W1wieG9cIl0sXCJhcHBsaWNhdGlvbi92bmQub21hLmRkMit4bWxcIjpbXCJkZDJcIl0sXCJhcHBsaWNhdGlvbi92bmQub3Blbm9mZmljZW9yZy5leHRlbnNpb25cIjpbXCJveHRcIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQucHJlc2VudGF0aW9ubWwucHJlc2VudGF0aW9uXCI6W1wicHB0eFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC5wcmVzZW50YXRpb25tbC5zbGlkZVwiOltcInNsZHhcIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQucHJlc2VudGF0aW9ubWwuc2xpZGVzaG93XCI6W1wicHBzeFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC5wcmVzZW50YXRpb25tbC50ZW1wbGF0ZVwiOltcInBvdHhcIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQuc3ByZWFkc2hlZXRtbC5zaGVldFwiOltcInhsc3hcIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQuc3ByZWFkc2hlZXRtbC50ZW1wbGF0ZVwiOltcInhsdHhcIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQud29yZHByb2Nlc3NpbmdtbC5kb2N1bWVudFwiOltcImRvY3hcIl0sXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQud29yZHByb2Nlc3NpbmdtbC50ZW1wbGF0ZVwiOltcImRvdHhcIl0sXCJhcHBsaWNhdGlvbi92bmQub3NnZW8ubWFwZ3VpZGUucGFja2FnZVwiOltcIm1ncFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5vc2dpLmRwXCI6W1wiZHBcIl0sXCJhcHBsaWNhdGlvbi92bmQub3NnaS5zdWJzeXN0ZW1cIjpbXCJlc2FcIl0sXCJhcHBsaWNhdGlvbi92bmQucGFsbVwiOltcInBkYlwiLFwicHFhXCIsXCJvcHJjXCJdLFwiYXBwbGljYXRpb24vdm5kLnBhd2FhZmlsZVwiOltcInBhd1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5wZy5mb3JtYXRcIjpbXCJzdHJcIl0sXCJhcHBsaWNhdGlvbi92bmQucGcub3Nhc2xpXCI6W1wiZWk2XCJdLFwiYXBwbGljYXRpb24vdm5kLnBpY3NlbFwiOltcImVmaWZcIl0sXCJhcHBsaWNhdGlvbi92bmQucG1pLndpZGdldFwiOltcIndnXCJdLFwiYXBwbGljYXRpb24vdm5kLnBvY2tldGxlYXJuXCI6W1wicGxmXCJdLFwiYXBwbGljYXRpb24vdm5kLnBvd2VyYnVpbGRlcjZcIjpbXCJwYmRcIl0sXCJhcHBsaWNhdGlvbi92bmQucHJldmlld3N5c3RlbXMuYm94XCI6W1wiYm94XCJdLFwiYXBwbGljYXRpb24vdm5kLnByb3RldXMubWFnYXppbmVcIjpbXCJtZ3pcIl0sXCJhcHBsaWNhdGlvbi92bmQucHVibGlzaGFyZS1kZWx0YS10cmVlXCI6W1wicXBzXCJdLFwiYXBwbGljYXRpb24vdm5kLnB2aS5wdGlkMVwiOltcInB0aWRcIl0sXCJhcHBsaWNhdGlvbi92bmQucXVhcmsucXVhcmt4cHJlc3NcIjpbXCJxeGRcIixcInF4dFwiLFwicXdkXCIsXCJxd3RcIixcInF4bFwiLFwicXhiXCJdLFwiYXBwbGljYXRpb24vdm5kLnJlYWx2bmMuYmVkXCI6W1wiYmVkXCJdLFwiYXBwbGljYXRpb24vdm5kLnJlY29yZGFyZS5tdXNpY3htbFwiOltcIm14bFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5yZWNvcmRhcmUubXVzaWN4bWwreG1sXCI6W1wibXVzaWN4bWxcIl0sXCJhcHBsaWNhdGlvbi92bmQucmlnLmNyeXB0b25vdGVcIjpbXCJjcnlwdG9ub3RlXCJdLFwiYXBwbGljYXRpb24vdm5kLnJpbS5jb2RcIjpbXCJjb2RcIl0sXCJhcHBsaWNhdGlvbi92bmQucm4tcmVhbG1lZGlhXCI6W1wicm1cIl0sXCJhcHBsaWNhdGlvbi92bmQucm4tcmVhbG1lZGlhLXZiclwiOltcInJtdmJcIl0sXCJhcHBsaWNhdGlvbi92bmQucm91dGU2Ni5saW5rNjYreG1sXCI6W1wibGluazY2XCJdLFwiYXBwbGljYXRpb24vdm5kLnNhaWxpbmd0cmFja2VyLnRyYWNrXCI6W1wic3RcIl0sXCJhcHBsaWNhdGlvbi92bmQuc2VlbWFpbFwiOltcInNlZVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zZW1hXCI6W1wic2VtYVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zZW1kXCI6W1wic2VtZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zZW1mXCI6W1wic2VtZlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zaGFuYS5pbmZvcm1lZC5mb3JtZGF0YVwiOltcImlmbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zaGFuYS5pbmZvcm1lZC5mb3JtdGVtcGxhdGVcIjpbXCJpdHBcIl0sXCJhcHBsaWNhdGlvbi92bmQuc2hhbmEuaW5mb3JtZWQuaW50ZXJjaGFuZ2VcIjpbXCJpaWZcIl0sXCJhcHBsaWNhdGlvbi92bmQuc2hhbmEuaW5mb3JtZWQucGFja2FnZVwiOltcImlwa1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5zaW10ZWNoLW1pbmRtYXBwZXJcIjpbXCJ0d2RcIixcInR3ZHNcIl0sXCJhcHBsaWNhdGlvbi92bmQuc21hZlwiOltcIm1tZlwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zbWFydC50ZWFjaGVyXCI6W1widGVhY2hlclwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zb2xlbnQuc2RrbSt4bWxcIjpbXCJzZGttXCIsXCJzZGtkXCJdLFwiYXBwbGljYXRpb24vdm5kLnNwb3RmaXJlLmR4cFwiOltcImR4cFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zcG90ZmlyZS5zZnNcIjpbXCJzZnNcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3RhcmRpdmlzaW9uLmNhbGNcIjpbXCJzZGNcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3RhcmRpdmlzaW9uLmRyYXdcIjpbXCJzZGFcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3RhcmRpdmlzaW9uLmltcHJlc3NcIjpbXCJzZGRcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3RhcmRpdmlzaW9uLm1hdGhcIjpbXCJzbWZcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3RhcmRpdmlzaW9uLndyaXRlclwiOltcInNkd1wiLFwidm9yXCJdLFwiYXBwbGljYXRpb24vdm5kLnN0YXJkaXZpc2lvbi53cml0ZXItZ2xvYmFsXCI6W1wic2dsXCJdLFwiYXBwbGljYXRpb24vdm5kLnN0ZXBtYW5pYS5wYWNrYWdlXCI6W1wic216aXBcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3RlcG1hbmlhLnN0ZXBjaGFydFwiOltcInNtXCJdLFwiYXBwbGljYXRpb24vdm5kLnN1bi53YWRsK3htbFwiOltcIndhZGxcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3VuLnhtbC5jYWxjXCI6W1wic3hjXCJdLFwiYXBwbGljYXRpb24vdm5kLnN1bi54bWwuY2FsYy50ZW1wbGF0ZVwiOltcInN0Y1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5zdW4ueG1sLmRyYXdcIjpbXCJzeGRcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3VuLnhtbC5kcmF3LnRlbXBsYXRlXCI6W1wic3RkXCJdLFwiYXBwbGljYXRpb24vdm5kLnN1bi54bWwuaW1wcmVzc1wiOltcInN4aVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zdW4ueG1sLmltcHJlc3MudGVtcGxhdGVcIjpbXCJzdGlcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3VuLnhtbC5tYXRoXCI6W1wic3htXCJdLFwiYXBwbGljYXRpb24vdm5kLnN1bi54bWwud3JpdGVyXCI6W1wic3h3XCJdLFwiYXBwbGljYXRpb24vdm5kLnN1bi54bWwud3JpdGVyLmdsb2JhbFwiOltcInN4Z1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5zdW4ueG1sLndyaXRlci50ZW1wbGF0ZVwiOltcInN0d1wiXSxcImFwcGxpY2F0aW9uL3ZuZC5zdXMtY2FsZW5kYXJcIjpbXCJzdXNcIixcInN1c3BcIl0sXCJhcHBsaWNhdGlvbi92bmQuc3ZkXCI6W1wic3ZkXCJdLFwiYXBwbGljYXRpb24vdm5kLnN5bWJpYW4uaW5zdGFsbFwiOltcInNpc1wiLFwic2lzeFwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zeW5jbWwreG1sXCI6W1wieHNtXCJdLFwiYXBwbGljYXRpb24vdm5kLnN5bmNtbC5kbSt3YnhtbFwiOltcImJkbVwiXSxcImFwcGxpY2F0aW9uL3ZuZC5zeW5jbWwuZG0reG1sXCI6W1wieGRtXCJdLFwiYXBwbGljYXRpb24vdm5kLnRhby5pbnRlbnQtbW9kdWxlLWFyY2hpdmVcIjpbXCJ0YW9cIl0sXCJhcHBsaWNhdGlvbi92bmQudGNwZHVtcC5wY2FwXCI6W1wicGNhcFwiLFwiY2FwXCIsXCJkbXBcIl0sXCJhcHBsaWNhdGlvbi92bmQudG1vYmlsZS1saXZldHZcIjpbXCJ0bW9cIl0sXCJhcHBsaWNhdGlvbi92bmQudHJpZC50cHRcIjpbXCJ0cHRcIl0sXCJhcHBsaWNhdGlvbi92bmQudHJpc2NhcGUubXhzXCI6W1wibXhzXCJdLFwiYXBwbGljYXRpb24vdm5kLnRydWVhcHBcIjpbXCJ0cmFcIl0sXCJhcHBsaWNhdGlvbi92bmQudWZkbFwiOltcInVmZFwiLFwidWZkbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC51aXEudGhlbWVcIjpbXCJ1dHpcIl0sXCJhcHBsaWNhdGlvbi92bmQudW1hamluXCI6W1widW1qXCJdLFwiYXBwbGljYXRpb24vdm5kLnVuaXR5XCI6W1widW5pdHl3ZWJcIl0sXCJhcHBsaWNhdGlvbi92bmQudW9tbCt4bWxcIjpbXCJ1b21sXCJdLFwiYXBwbGljYXRpb24vdm5kLnZjeFwiOltcInZjeFwiXSxcImFwcGxpY2F0aW9uL3ZuZC52aXNpb1wiOltcInZzZFwiLFwidnN0XCIsXCJ2c3NcIixcInZzd1wiXSxcImFwcGxpY2F0aW9uL3ZuZC52aXNpb25hcnlcIjpbXCJ2aXNcIl0sXCJhcHBsaWNhdGlvbi92bmQudnNmXCI6W1widnNmXCJdLFwiYXBwbGljYXRpb24vdm5kLndhcC53YnhtbFwiOltcIndieG1sXCJdLFwiYXBwbGljYXRpb24vdm5kLndhcC53bWxjXCI6W1wid21sY1wiXSxcImFwcGxpY2F0aW9uL3ZuZC53YXAud21sc2NyaXB0Y1wiOltcIndtbHNjXCJdLFwiYXBwbGljYXRpb24vdm5kLndlYnR1cmJvXCI6W1wid3RiXCJdLFwiYXBwbGljYXRpb24vdm5kLndvbGZyYW0ucGxheWVyXCI6W1wibmJwXCJdLFwiYXBwbGljYXRpb24vdm5kLndvcmRwZXJmZWN0XCI6W1wid3BkXCJdLFwiYXBwbGljYXRpb24vdm5kLndxZFwiOltcIndxZFwiXSxcImFwcGxpY2F0aW9uL3ZuZC53dC5zdGZcIjpbXCJzdGZcIl0sXCJhcHBsaWNhdGlvbi92bmQueGFyYVwiOltcInhhclwiXSxcImFwcGxpY2F0aW9uL3ZuZC54ZmRsXCI6W1wieGZkbFwiXSxcImFwcGxpY2F0aW9uL3ZuZC55YW1haGEuaHYtZGljXCI6W1wiaHZkXCJdLFwiYXBwbGljYXRpb24vdm5kLnlhbWFoYS5odi1zY3JpcHRcIjpbXCJodnNcIl0sXCJhcHBsaWNhdGlvbi92bmQueWFtYWhhLmh2LXZvaWNlXCI6W1wiaHZwXCJdLFwiYXBwbGljYXRpb24vdm5kLnlhbWFoYS5vcGVuc2NvcmVmb3JtYXRcIjpbXCJvc2ZcIl0sXCJhcHBsaWNhdGlvbi92bmQueWFtYWhhLm9wZW5zY29yZWZvcm1hdC5vc2ZwdmcreG1sXCI6W1wib3NmcHZnXCJdLFwiYXBwbGljYXRpb24vdm5kLnlhbWFoYS5zbWFmLWF1ZGlvXCI6W1wic2FmXCJdLFwiYXBwbGljYXRpb24vdm5kLnlhbWFoYS5zbWFmLXBocmFzZVwiOltcInNwZlwiXSxcImFwcGxpY2F0aW9uL3ZuZC55ZWxsb3dyaXZlci1jdXN0b20tbWVudVwiOltcImNtcFwiXSxcImFwcGxpY2F0aW9uL3ZuZC56dWxcIjpbXCJ6aXJcIixcInppcnpcIl0sXCJhcHBsaWNhdGlvbi92bmQuenphenouZGVjayt4bWxcIjpbXCJ6YXpcIl0sXCJhcHBsaWNhdGlvbi94LTd6LWNvbXByZXNzZWRcIjpbXCI3elwiXSxcImFwcGxpY2F0aW9uL3gtYWJpd29yZFwiOltcImFid1wiXSxcImFwcGxpY2F0aW9uL3gtYWNlLWNvbXByZXNzZWRcIjpbXCJhY2VcIl0sXCJhcHBsaWNhdGlvbi94LWFwcGxlLWRpc2tpbWFnZVwiOltcIipkbWdcIl0sXCJhcHBsaWNhdGlvbi94LWFyalwiOltcImFyalwiXSxcImFwcGxpY2F0aW9uL3gtYXV0aG9yd2FyZS1iaW5cIjpbXCJhYWJcIixcIngzMlwiLFwidTMyXCIsXCJ2b3hcIl0sXCJhcHBsaWNhdGlvbi94LWF1dGhvcndhcmUtbWFwXCI6W1wiYWFtXCJdLFwiYXBwbGljYXRpb24veC1hdXRob3J3YXJlLXNlZ1wiOltcImFhc1wiXSxcImFwcGxpY2F0aW9uL3gtYmNwaW9cIjpbXCJiY3Bpb1wiXSxcImFwcGxpY2F0aW9uL3gtYmRvY1wiOltcIipiZG9jXCJdLFwiYXBwbGljYXRpb24veC1iaXR0b3JyZW50XCI6W1widG9ycmVudFwiXSxcImFwcGxpY2F0aW9uL3gtYmxvcmJcIjpbXCJibGJcIixcImJsb3JiXCJdLFwiYXBwbGljYXRpb24veC1iemlwXCI6W1wiYnpcIl0sXCJhcHBsaWNhdGlvbi94LWJ6aXAyXCI6W1wiYnoyXCIsXCJib3pcIl0sXCJhcHBsaWNhdGlvbi94LWNiclwiOltcImNiclwiLFwiY2JhXCIsXCJjYnRcIixcImNielwiLFwiY2I3XCJdLFwiYXBwbGljYXRpb24veC1jZGxpbmtcIjpbXCJ2Y2RcIl0sXCJhcHBsaWNhdGlvbi94LWNmcy1jb21wcmVzc2VkXCI6W1wiY2ZzXCJdLFwiYXBwbGljYXRpb24veC1jaGF0XCI6W1wiY2hhdFwiXSxcImFwcGxpY2F0aW9uL3gtY2hlc3MtcGduXCI6W1wicGduXCJdLFwiYXBwbGljYXRpb24veC1jaHJvbWUtZXh0ZW5zaW9uXCI6W1wiY3J4XCJdLFwiYXBwbGljYXRpb24veC1jb2NvYVwiOltcImNjb1wiXSxcImFwcGxpY2F0aW9uL3gtY29uZmVyZW5jZVwiOltcIm5zY1wiXSxcImFwcGxpY2F0aW9uL3gtY3Bpb1wiOltcImNwaW9cIl0sXCJhcHBsaWNhdGlvbi94LWNzaFwiOltcImNzaFwiXSxcImFwcGxpY2F0aW9uL3gtZGViaWFuLXBhY2thZ2VcIjpbXCIqZGViXCIsXCJ1ZGViXCJdLFwiYXBwbGljYXRpb24veC1kZ2MtY29tcHJlc3NlZFwiOltcImRnY1wiXSxcImFwcGxpY2F0aW9uL3gtZGlyZWN0b3JcIjpbXCJkaXJcIixcImRjclwiLFwiZHhyXCIsXCJjc3RcIixcImNjdFwiLFwiY3h0XCIsXCJ3M2RcIixcImZnZFwiLFwic3dhXCJdLFwiYXBwbGljYXRpb24veC1kb29tXCI6W1wid2FkXCJdLFwiYXBwbGljYXRpb24veC1kdGJuY3greG1sXCI6W1wibmN4XCJdLFwiYXBwbGljYXRpb24veC1kdGJvb2sreG1sXCI6W1wiZHRiXCJdLFwiYXBwbGljYXRpb24veC1kdGJyZXNvdXJjZSt4bWxcIjpbXCJyZXNcIl0sXCJhcHBsaWNhdGlvbi94LWR2aVwiOltcImR2aVwiXSxcImFwcGxpY2F0aW9uL3gtZW52b3lcIjpbXCJldnlcIl0sXCJhcHBsaWNhdGlvbi94LWV2YVwiOltcImV2YVwiXSxcImFwcGxpY2F0aW9uL3gtZm9udC1iZGZcIjpbXCJiZGZcIl0sXCJhcHBsaWNhdGlvbi94LWZvbnQtZ2hvc3RzY3JpcHRcIjpbXCJnc2ZcIl0sXCJhcHBsaWNhdGlvbi94LWZvbnQtbGludXgtcHNmXCI6W1wicHNmXCJdLFwiYXBwbGljYXRpb24veC1mb250LXBjZlwiOltcInBjZlwiXSxcImFwcGxpY2F0aW9uL3gtZm9udC1zbmZcIjpbXCJzbmZcIl0sXCJhcHBsaWNhdGlvbi94LWZvbnQtdHlwZTFcIjpbXCJwZmFcIixcInBmYlwiLFwicGZtXCIsXCJhZm1cIl0sXCJhcHBsaWNhdGlvbi94LWZyZWVhcmNcIjpbXCJhcmNcIl0sXCJhcHBsaWNhdGlvbi94LWZ1dHVyZXNwbGFzaFwiOltcInNwbFwiXSxcImFwcGxpY2F0aW9uL3gtZ2NhLWNvbXByZXNzZWRcIjpbXCJnY2FcIl0sXCJhcHBsaWNhdGlvbi94LWdsdWx4XCI6W1widWx4XCJdLFwiYXBwbGljYXRpb24veC1nbnVtZXJpY1wiOltcImdudW1lcmljXCJdLFwiYXBwbGljYXRpb24veC1ncmFtcHMteG1sXCI6W1wiZ3JhbXBzXCJdLFwiYXBwbGljYXRpb24veC1ndGFyXCI6W1wiZ3RhclwiXSxcImFwcGxpY2F0aW9uL3gtaGRmXCI6W1wiaGRmXCJdLFwiYXBwbGljYXRpb24veC1odHRwZC1waHBcIjpbXCJwaHBcIl0sXCJhcHBsaWNhdGlvbi94LWluc3RhbGwtaW5zdHJ1Y3Rpb25zXCI6W1wiaW5zdGFsbFwiXSxcImFwcGxpY2F0aW9uL3gtaXNvOTY2MC1pbWFnZVwiOltcIippc29cIl0sXCJhcHBsaWNhdGlvbi94LWphdmEtYXJjaGl2ZS1kaWZmXCI6W1wiamFyZGlmZlwiXSxcImFwcGxpY2F0aW9uL3gtamF2YS1qbmxwLWZpbGVcIjpbXCJqbmxwXCJdLFwiYXBwbGljYXRpb24veC1sYXRleFwiOltcImxhdGV4XCJdLFwiYXBwbGljYXRpb24veC1sdWEtYnl0ZWNvZGVcIjpbXCJsdWFjXCJdLFwiYXBwbGljYXRpb24veC1semgtY29tcHJlc3NlZFwiOltcImx6aFwiLFwibGhhXCJdLFwiYXBwbGljYXRpb24veC1tYWtlc2VsZlwiOltcInJ1blwiXSxcImFwcGxpY2F0aW9uL3gtbWllXCI6W1wibWllXCJdLFwiYXBwbGljYXRpb24veC1tb2JpcG9ja2V0LWVib29rXCI6W1wicHJjXCIsXCJtb2JpXCJdLFwiYXBwbGljYXRpb24veC1tcy1hcHBsaWNhdGlvblwiOltcImFwcGxpY2F0aW9uXCJdLFwiYXBwbGljYXRpb24veC1tcy1zaG9ydGN1dFwiOltcImxua1wiXSxcImFwcGxpY2F0aW9uL3gtbXMtd21kXCI6W1wid21kXCJdLFwiYXBwbGljYXRpb24veC1tcy13bXpcIjpbXCJ3bXpcIl0sXCJhcHBsaWNhdGlvbi94LW1zLXhiYXBcIjpbXCJ4YmFwXCJdLFwiYXBwbGljYXRpb24veC1tc2FjY2Vzc1wiOltcIm1kYlwiXSxcImFwcGxpY2F0aW9uL3gtbXNiaW5kZXJcIjpbXCJvYmRcIl0sXCJhcHBsaWNhdGlvbi94LW1zY2FyZGZpbGVcIjpbXCJjcmRcIl0sXCJhcHBsaWNhdGlvbi94LW1zY2xpcFwiOltcImNscFwiXSxcImFwcGxpY2F0aW9uL3gtbXNkb3MtcHJvZ3JhbVwiOltcIipleGVcIl0sXCJhcHBsaWNhdGlvbi94LW1zZG93bmxvYWRcIjpbXCIqZXhlXCIsXCIqZGxsXCIsXCJjb21cIixcImJhdFwiLFwiKm1zaVwiXSxcImFwcGxpY2F0aW9uL3gtbXNtZWRpYXZpZXdcIjpbXCJtdmJcIixcIm0xM1wiLFwibTE0XCJdLFwiYXBwbGljYXRpb24veC1tc21ldGFmaWxlXCI6W1wiKndtZlwiLFwiKndtelwiLFwiKmVtZlwiLFwiZW16XCJdLFwiYXBwbGljYXRpb24veC1tc21vbmV5XCI6W1wibW55XCJdLFwiYXBwbGljYXRpb24veC1tc3B1Ymxpc2hlclwiOltcInB1YlwiXSxcImFwcGxpY2F0aW9uL3gtbXNzY2hlZHVsZVwiOltcInNjZFwiXSxcImFwcGxpY2F0aW9uL3gtbXN0ZXJtaW5hbFwiOltcInRybVwiXSxcImFwcGxpY2F0aW9uL3gtbXN3cml0ZVwiOltcIndyaVwiXSxcImFwcGxpY2F0aW9uL3gtbmV0Y2RmXCI6W1wibmNcIixcImNkZlwiXSxcImFwcGxpY2F0aW9uL3gtbnMtcHJveHktYXV0b2NvbmZpZ1wiOltcInBhY1wiXSxcImFwcGxpY2F0aW9uL3gtbnpiXCI6W1wibnpiXCJdLFwiYXBwbGljYXRpb24veC1wZXJsXCI6W1wicGxcIixcInBtXCJdLFwiYXBwbGljYXRpb24veC1waWxvdFwiOltcIipwcmNcIixcIipwZGJcIl0sXCJhcHBsaWNhdGlvbi94LXBrY3MxMlwiOltcInAxMlwiLFwicGZ4XCJdLFwiYXBwbGljYXRpb24veC1wa2NzNy1jZXJ0aWZpY2F0ZXNcIjpbXCJwN2JcIixcInNwY1wiXSxcImFwcGxpY2F0aW9uL3gtcGtjczctY2VydHJlcXJlc3BcIjpbXCJwN3JcIl0sXCJhcHBsaWNhdGlvbi94LXJhci1jb21wcmVzc2VkXCI6W1wicmFyXCJdLFwiYXBwbGljYXRpb24veC1yZWRoYXQtcGFja2FnZS1tYW5hZ2VyXCI6W1wicnBtXCJdLFwiYXBwbGljYXRpb24veC1yZXNlYXJjaC1pbmZvLXN5c3RlbXNcIjpbXCJyaXNcIl0sXCJhcHBsaWNhdGlvbi94LXNlYVwiOltcInNlYVwiXSxcImFwcGxpY2F0aW9uL3gtc2hcIjpbXCJzaFwiXSxcImFwcGxpY2F0aW9uL3gtc2hhclwiOltcInNoYXJcIl0sXCJhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaFwiOltcInN3ZlwiXSxcImFwcGxpY2F0aW9uL3gtc2lsdmVybGlnaHQtYXBwXCI6W1wieGFwXCJdLFwiYXBwbGljYXRpb24veC1zcWxcIjpbXCJzcWxcIl0sXCJhcHBsaWNhdGlvbi94LXN0dWZmaXRcIjpbXCJzaXRcIl0sXCJhcHBsaWNhdGlvbi94LXN0dWZmaXR4XCI6W1wic2l0eFwiXSxcImFwcGxpY2F0aW9uL3gtc3VicmlwXCI6W1wic3J0XCJdLFwiYXBwbGljYXRpb24veC1zdjRjcGlvXCI6W1wic3Y0Y3Bpb1wiXSxcImFwcGxpY2F0aW9uL3gtc3Y0Y3JjXCI6W1wic3Y0Y3JjXCJdLFwiYXBwbGljYXRpb24veC10M3ZtLWltYWdlXCI6W1widDNcIl0sXCJhcHBsaWNhdGlvbi94LXRhZHNcIjpbXCJnYW1cIl0sXCJhcHBsaWNhdGlvbi94LXRhclwiOltcInRhclwiXSxcImFwcGxpY2F0aW9uL3gtdGNsXCI6W1widGNsXCIsXCJ0a1wiXSxcImFwcGxpY2F0aW9uL3gtdGV4XCI6W1widGV4XCJdLFwiYXBwbGljYXRpb24veC10ZXgtdGZtXCI6W1widGZtXCJdLFwiYXBwbGljYXRpb24veC10ZXhpbmZvXCI6W1widGV4aW5mb1wiLFwidGV4aVwiXSxcImFwcGxpY2F0aW9uL3gtdGdpZlwiOltcIm9ialwiXSxcImFwcGxpY2F0aW9uL3gtdXN0YXJcIjpbXCJ1c3RhclwiXSxcImFwcGxpY2F0aW9uL3gtdmlydHVhbGJveC1oZGRcIjpbXCJoZGRcIl0sXCJhcHBsaWNhdGlvbi94LXZpcnR1YWxib3gtb3ZhXCI6W1wib3ZhXCJdLFwiYXBwbGljYXRpb24veC12aXJ0dWFsYm94LW92ZlwiOltcIm92ZlwiXSxcImFwcGxpY2F0aW9uL3gtdmlydHVhbGJveC12Ym94XCI6W1widmJveFwiXSxcImFwcGxpY2F0aW9uL3gtdmlydHVhbGJveC12Ym94LWV4dHBhY2tcIjpbXCJ2Ym94LWV4dHBhY2tcIl0sXCJhcHBsaWNhdGlvbi94LXZpcnR1YWxib3gtdmRpXCI6W1widmRpXCJdLFwiYXBwbGljYXRpb24veC12aXJ0dWFsYm94LXZoZFwiOltcInZoZFwiXSxcImFwcGxpY2F0aW9uL3gtdmlydHVhbGJveC12bWRrXCI6W1widm1ka1wiXSxcImFwcGxpY2F0aW9uL3gtd2Fpcy1zb3VyY2VcIjpbXCJzcmNcIl0sXCJhcHBsaWNhdGlvbi94LXdlYi1hcHAtbWFuaWZlc3QranNvblwiOltcIndlYmFwcFwiXSxcImFwcGxpY2F0aW9uL3gteDUwOS1jYS1jZXJ0XCI6W1wiZGVyXCIsXCJjcnRcIixcInBlbVwiXSxcImFwcGxpY2F0aW9uL3gteGZpZ1wiOltcImZpZ1wiXSxcImFwcGxpY2F0aW9uL3gteGxpZmYreG1sXCI6W1wieGxmXCJdLFwiYXBwbGljYXRpb24veC14cGluc3RhbGxcIjpbXCJ4cGlcIl0sXCJhcHBsaWNhdGlvbi94LXh6XCI6W1wieHpcIl0sXCJhcHBsaWNhdGlvbi94LXptYWNoaW5lXCI6W1wiejFcIixcInoyXCIsXCJ6M1wiLFwiejRcIixcIno1XCIsXCJ6NlwiLFwiejdcIixcIno4XCJdLFwiYXVkaW8vdm5kLmRlY2UuYXVkaW9cIjpbXCJ1dmFcIixcInV2dmFcIl0sXCJhdWRpby92bmQuZGlnaXRhbC13aW5kc1wiOltcImVvbFwiXSxcImF1ZGlvL3ZuZC5kcmFcIjpbXCJkcmFcIl0sXCJhdWRpby92bmQuZHRzXCI6W1wiZHRzXCJdLFwiYXVkaW8vdm5kLmR0cy5oZFwiOltcImR0c2hkXCJdLFwiYXVkaW8vdm5kLmx1Y2VudC52b2ljZVwiOltcImx2cFwiXSxcImF1ZGlvL3ZuZC5tcy1wbGF5cmVhZHkubWVkaWEucHlhXCI6W1wicHlhXCJdLFwiYXVkaW8vdm5kLm51ZXJhLmVjZWxwNDgwMFwiOltcImVjZWxwNDgwMFwiXSxcImF1ZGlvL3ZuZC5udWVyYS5lY2VscDc0NzBcIjpbXCJlY2VscDc0NzBcIl0sXCJhdWRpby92bmQubnVlcmEuZWNlbHA5NjAwXCI6W1wiZWNlbHA5NjAwXCJdLFwiYXVkaW8vdm5kLnJpcFwiOltcInJpcFwiXSxcImF1ZGlvL3gtYWFjXCI6W1wiYWFjXCJdLFwiYXVkaW8veC1haWZmXCI6W1wiYWlmXCIsXCJhaWZmXCIsXCJhaWZjXCJdLFwiYXVkaW8veC1jYWZcIjpbXCJjYWZcIl0sXCJhdWRpby94LWZsYWNcIjpbXCJmbGFjXCJdLFwiYXVkaW8veC1tNGFcIjpbXCIqbTRhXCJdLFwiYXVkaW8veC1tYXRyb3NrYVwiOltcIm1rYVwiXSxcImF1ZGlvL3gtbXBlZ3VybFwiOltcIm0zdVwiXSxcImF1ZGlvL3gtbXMtd2F4XCI6W1wid2F4XCJdLFwiYXVkaW8veC1tcy13bWFcIjpbXCJ3bWFcIl0sXCJhdWRpby94LXBuLXJlYWxhdWRpb1wiOltcInJhbVwiLFwicmFcIl0sXCJhdWRpby94LXBuLXJlYWxhdWRpby1wbHVnaW5cIjpbXCJybXBcIl0sXCJhdWRpby94LXJlYWxhdWRpb1wiOltcIipyYVwiXSxcImF1ZGlvL3gtd2F2XCI6W1wiKndhdlwiXSxcImNoZW1pY2FsL3gtY2R4XCI6W1wiY2R4XCJdLFwiY2hlbWljYWwveC1jaWZcIjpbXCJjaWZcIl0sXCJjaGVtaWNhbC94LWNtZGZcIjpbXCJjbWRmXCJdLFwiY2hlbWljYWwveC1jbWxcIjpbXCJjbWxcIl0sXCJjaGVtaWNhbC94LWNzbWxcIjpbXCJjc21sXCJdLFwiY2hlbWljYWwveC14eXpcIjpbXCJ4eXpcIl0sXCJpbWFnZS9wcnMuYnRpZlwiOltcImJ0aWZcIl0sXCJpbWFnZS9wcnMucHRpXCI6W1wicHRpXCJdLFwiaW1hZ2Uvdm5kLmFkb2JlLnBob3Rvc2hvcFwiOltcInBzZFwiXSxcImltYWdlL3ZuZC5haXJ6aXAuYWNjZWxlcmF0b3IuYXp2XCI6W1wiYXp2XCJdLFwiaW1hZ2Uvdm5kLmRlY2UuZ3JhcGhpY1wiOltcInV2aVwiLFwidXZ2aVwiLFwidXZnXCIsXCJ1dnZnXCJdLFwiaW1hZ2Uvdm5kLmRqdnVcIjpbXCJkanZ1XCIsXCJkanZcIl0sXCJpbWFnZS92bmQuZHZiLnN1YnRpdGxlXCI6W1wiKnN1YlwiXSxcImltYWdlL3ZuZC5kd2dcIjpbXCJkd2dcIl0sXCJpbWFnZS92bmQuZHhmXCI6W1wiZHhmXCJdLFwiaW1hZ2Uvdm5kLmZhc3RiaWRzaGVldFwiOltcImZic1wiXSxcImltYWdlL3ZuZC5mcHhcIjpbXCJmcHhcIl0sXCJpbWFnZS92bmQuZnN0XCI6W1wiZnN0XCJdLFwiaW1hZ2Uvdm5kLmZ1aml4ZXJveC5lZG1pY3MtbW1yXCI6W1wibW1yXCJdLFwiaW1hZ2Uvdm5kLmZ1aml4ZXJveC5lZG1pY3MtcmxjXCI6W1wicmxjXCJdLFwiaW1hZ2Uvdm5kLm1pY3Jvc29mdC5pY29uXCI6W1wiaWNvXCJdLFwiaW1hZ2Uvdm5kLm1zLW1vZGlcIjpbXCJtZGlcIl0sXCJpbWFnZS92bmQubXMtcGhvdG9cIjpbXCJ3ZHBcIl0sXCJpbWFnZS92bmQubmV0LWZweFwiOltcIm5weFwiXSxcImltYWdlL3ZuZC50ZW5jZW50LnRhcFwiOltcInRhcFwiXSxcImltYWdlL3ZuZC52YWx2ZS5zb3VyY2UudGV4dHVyZVwiOltcInZ0ZlwiXSxcImltYWdlL3ZuZC53YXAud2JtcFwiOltcIndibXBcIl0sXCJpbWFnZS92bmQueGlmZlwiOltcInhpZlwiXSxcImltYWdlL3ZuZC56YnJ1c2gucGN4XCI6W1wicGN4XCJdLFwiaW1hZ2UveC0zZHNcIjpbXCIzZHNcIl0sXCJpbWFnZS94LWNtdS1yYXN0ZXJcIjpbXCJyYXNcIl0sXCJpbWFnZS94LWNteFwiOltcImNteFwiXSxcImltYWdlL3gtZnJlZWhhbmRcIjpbXCJmaFwiLFwiZmhjXCIsXCJmaDRcIixcImZoNVwiLFwiZmg3XCJdLFwiaW1hZ2UveC1pY29uXCI6W1wiKmljb1wiXSxcImltYWdlL3gtam5nXCI6W1wiam5nXCJdLFwiaW1hZ2UveC1tcnNpZC1pbWFnZVwiOltcInNpZFwiXSxcImltYWdlL3gtbXMtYm1wXCI6W1wiKmJtcFwiXSxcImltYWdlL3gtcGN4XCI6W1wiKnBjeFwiXSxcImltYWdlL3gtcGljdFwiOltcInBpY1wiLFwicGN0XCJdLFwiaW1hZ2UveC1wb3J0YWJsZS1hbnltYXBcIjpbXCJwbm1cIl0sXCJpbWFnZS94LXBvcnRhYmxlLWJpdG1hcFwiOltcInBibVwiXSxcImltYWdlL3gtcG9ydGFibGUtZ3JheW1hcFwiOltcInBnbVwiXSxcImltYWdlL3gtcG9ydGFibGUtcGl4bWFwXCI6W1wicHBtXCJdLFwiaW1hZ2UveC1yZ2JcIjpbXCJyZ2JcIl0sXCJpbWFnZS94LXRnYVwiOltcInRnYVwiXSxcImltYWdlL3gteGJpdG1hcFwiOltcInhibVwiXSxcImltYWdlL3gteHBpeG1hcFwiOltcInhwbVwiXSxcImltYWdlL3gteHdpbmRvd2R1bXBcIjpbXCJ4d2RcIl0sXCJtZXNzYWdlL3ZuZC53ZmEud3NjXCI6W1wid3NjXCJdLFwibW9kZWwvdm5kLmNvbGxhZGEreG1sXCI6W1wiZGFlXCJdLFwibW9kZWwvdm5kLmR3ZlwiOltcImR3ZlwiXSxcIm1vZGVsL3ZuZC5nZGxcIjpbXCJnZGxcIl0sXCJtb2RlbC92bmQuZ3R3XCI6W1wiZ3R3XCJdLFwibW9kZWwvdm5kLm10c1wiOltcIm10c1wiXSxcIm1vZGVsL3ZuZC5vcGVuZ2V4XCI6W1wib2dleFwiXSxcIm1vZGVsL3ZuZC5wYXJhc29saWQudHJhbnNtaXQuYmluYXJ5XCI6W1wieF9iXCJdLFwibW9kZWwvdm5kLnBhcmFzb2xpZC50cmFuc21pdC50ZXh0XCI6W1wieF90XCJdLFwibW9kZWwvdm5kLnVzZHoremlwXCI6W1widXNkelwiXSxcIm1vZGVsL3ZuZC52YWx2ZS5zb3VyY2UuY29tcGlsZWQtbWFwXCI6W1wiYnNwXCJdLFwibW9kZWwvdm5kLnZ0dVwiOltcInZ0dVwiXSxcInRleHQvcHJzLmxpbmVzLnRhZ1wiOltcImRzY1wiXSxcInRleHQvdm5kLmN1cmxcIjpbXCJjdXJsXCJdLFwidGV4dC92bmQuY3VybC5kY3VybFwiOltcImRjdXJsXCJdLFwidGV4dC92bmQuY3VybC5tY3VybFwiOltcIm1jdXJsXCJdLFwidGV4dC92bmQuY3VybC5zY3VybFwiOltcInNjdXJsXCJdLFwidGV4dC92bmQuZHZiLnN1YnRpdGxlXCI6W1wic3ViXCJdLFwidGV4dC92bmQuZmx5XCI6W1wiZmx5XCJdLFwidGV4dC92bmQuZm1pLmZsZXhzdG9yXCI6W1wiZmx4XCJdLFwidGV4dC92bmQuZ3JhcGh2aXpcIjpbXCJndlwiXSxcInRleHQvdm5kLmluM2QuM2RtbFwiOltcIjNkbWxcIl0sXCJ0ZXh0L3ZuZC5pbjNkLnNwb3RcIjpbXCJzcG90XCJdLFwidGV4dC92bmQuc3VuLmoybWUuYXBwLWRlc2NyaXB0b3JcIjpbXCJqYWRcIl0sXCJ0ZXh0L3ZuZC53YXAud21sXCI6W1wid21sXCJdLFwidGV4dC92bmQud2FwLndtbHNjcmlwdFwiOltcIndtbHNcIl0sXCJ0ZXh0L3gtYXNtXCI6W1wic1wiLFwiYXNtXCJdLFwidGV4dC94LWNcIjpbXCJjXCIsXCJjY1wiLFwiY3h4XCIsXCJjcHBcIixcImhcIixcImhoXCIsXCJkaWNcIl0sXCJ0ZXh0L3gtY29tcG9uZW50XCI6W1wiaHRjXCJdLFwidGV4dC94LWZvcnRyYW5cIjpbXCJmXCIsXCJmb3JcIixcImY3N1wiLFwiZjkwXCJdLFwidGV4dC94LWhhbmRsZWJhcnMtdGVtcGxhdGVcIjpbXCJoYnNcIl0sXCJ0ZXh0L3gtamF2YS1zb3VyY2VcIjpbXCJqYXZhXCJdLFwidGV4dC94LWx1YVwiOltcImx1YVwiXSxcInRleHQveC1tYXJrZG93blwiOltcIm1rZFwiXSxcInRleHQveC1uZm9cIjpbXCJuZm9cIl0sXCJ0ZXh0L3gtb3BtbFwiOltcIm9wbWxcIl0sXCJ0ZXh0L3gtb3JnXCI6W1wiKm9yZ1wiXSxcInRleHQveC1wYXNjYWxcIjpbXCJwXCIsXCJwYXNcIl0sXCJ0ZXh0L3gtcHJvY2Vzc2luZ1wiOltcInBkZVwiXSxcInRleHQveC1zYXNzXCI6W1wic2Fzc1wiXSxcInRleHQveC1zY3NzXCI6W1wic2Nzc1wiXSxcInRleHQveC1zZXRleHRcIjpbXCJldHhcIl0sXCJ0ZXh0L3gtc2Z2XCI6W1wic2Z2XCJdLFwidGV4dC94LXN1c2UteW1wXCI6W1wieW1wXCJdLFwidGV4dC94LXV1ZW5jb2RlXCI6W1widXVcIl0sXCJ0ZXh0L3gtdmNhbGVuZGFyXCI6W1widmNzXCJdLFwidGV4dC94LXZjYXJkXCI6W1widmNmXCJdLFwidmlkZW8vdm5kLmRlY2UuaGRcIjpbXCJ1dmhcIixcInV2dmhcIl0sXCJ2aWRlby92bmQuZGVjZS5tb2JpbGVcIjpbXCJ1dm1cIixcInV2dm1cIl0sXCJ2aWRlby92bmQuZGVjZS5wZFwiOltcInV2cFwiLFwidXZ2cFwiXSxcInZpZGVvL3ZuZC5kZWNlLnNkXCI6W1widXZzXCIsXCJ1dnZzXCJdLFwidmlkZW8vdm5kLmRlY2UudmlkZW9cIjpbXCJ1dnZcIixcInV2dnZcIl0sXCJ2aWRlby92bmQuZHZiLmZpbGVcIjpbXCJkdmJcIl0sXCJ2aWRlby92bmQuZnZ0XCI6W1wiZnZ0XCJdLFwidmlkZW8vdm5kLm1wZWd1cmxcIjpbXCJteHVcIixcIm00dVwiXSxcInZpZGVvL3ZuZC5tcy1wbGF5cmVhZHkubWVkaWEucHl2XCI6W1wicHl2XCJdLFwidmlkZW8vdm5kLnV2dnUubXA0XCI6W1widXZ1XCIsXCJ1dnZ1XCJdLFwidmlkZW8vdm5kLnZpdm9cIjpbXCJ2aXZcIl0sXCJ2aWRlby94LWY0dlwiOltcImY0dlwiXSxcInZpZGVvL3gtZmxpXCI6W1wiZmxpXCJdLFwidmlkZW8veC1mbHZcIjpbXCJmbHZcIl0sXCJ2aWRlby94LW00dlwiOltcIm00dlwiXSxcInZpZGVvL3gtbWF0cm9za2FcIjpbXCJta3ZcIixcIm1rM2RcIixcIm1rc1wiXSxcInZpZGVvL3gtbW5nXCI6W1wibW5nXCJdLFwidmlkZW8veC1tcy1hc2ZcIjpbXCJhc2ZcIixcImFzeFwiXSxcInZpZGVvL3gtbXMtdm9iXCI6W1widm9iXCJdLFwidmlkZW8veC1tcy13bVwiOltcIndtXCJdLFwidmlkZW8veC1tcy13bXZcIjpbXCJ3bXZcIl0sXCJ2aWRlby94LW1zLXdteFwiOltcIndteFwiXSxcInZpZGVvL3gtbXMtd3Z4XCI6W1wid3Z4XCJdLFwidmlkZW8veC1tc3ZpZGVvXCI6W1wiYXZpXCJdLFwidmlkZW8veC1zZ2ktbW92aWVcIjpbXCJtb3ZpZVwiXSxcInZpZGVvL3gtc212XCI6W1wic212XCJdLFwieC1jb25mZXJlbmNlL3gtY29vbHRhbGtcIjpbXCJpY2VcIl19fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7Y29uc3QgaT1uKDUpLHI9bigxODEpLGE9bigxOTEpLG89KHQsZT17fSk9PntsZXQgbj1lLmVuY29kaW5nfHxcImhleFwiO1wiYnVmZmVyXCI9PT1uJiYobj12b2lkIDApO2NvbnN0IGk9ci5jcmVhdGVIYXNoKGUuYWxnb3JpdGhtfHxcInNoYTUxMlwiKSxhPXQ9Pntjb25zdCBlPVwic3RyaW5nXCI9PXR5cGVvZiB0P1widXRmOFwiOnZvaWQgMDtpLnVwZGF0ZSh0LGUpfTtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KT90LmZvckVhY2goYSk6YSh0KSxpLmRpZ2VzdChuKX07by5zdHJlYW09KHQ9e30pPT57bGV0IGU9dC5lbmNvZGluZ3x8XCJoZXhcIjtcImJ1ZmZlclwiPT09ZSYmKGU9dm9pZCAwKTtjb25zdCBuPXIuY3JlYXRlSGFzaCh0LmFsZ29yaXRobXx8XCJzaGE1MTJcIik7cmV0dXJuIG4uc2V0RW5jb2RpbmcoZSksbn0sby5mcm9tU3RyZWFtPWFzeW5jKHQsZT17fSk9PntpZighYSh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiRXhwZWN0ZWQgYSBzdHJlYW1cIik7cmV0dXJuIG5ldyBQcm9taXNlKChuLGkpPT57dC5vbihcImVycm9yXCIsaSkucGlwZShvLnN0cmVhbShlKSkub24oXCJlcnJvclwiLGkpLm9uKFwiZmluaXNoXCIsKGZ1bmN0aW9uKCl7bih0aGlzLnJlYWQoKSl9KSl9KX0sby5mcm9tRmlsZT1hc3luYyh0LGUpPT5vLmZyb21TdHJlYW0oaS5jcmVhdGVSZWFkU3RyZWFtKHQpLGUpLG8uZnJvbUZpbGVTeW5jPSh0LGUpPT5vKGkucmVhZEZpbGVTeW5jKHQpLGUpLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9e2NyZWF0ZUhhc2g6bigxODIpfTt0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPW4oMCkscj1uKDE4MyksYT1uKDE4NCksbz1uKDE4NSkscz1uKDE5MCk7ZnVuY3Rpb24gYyh0KXtzLmNhbGwodGhpcyxcImRpZ2VzdFwiKSx0aGlzLl9oYXNoPXR9aShjLHMpLGMucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCl7dGhpcy5faGFzaC51cGRhdGUodCl9LGMucHJvdG90eXBlLl9maW5hbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9oYXNoLmRpZ2VzdCgpfSx0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuXCJtZDVcIj09PSh0PXQudG9Mb3dlckNhc2UoKSk/bmV3IHI6XCJybWQxNjBcIj09PXR8fFwicmlwZW1kMTYwXCI9PT10P25ldyBhOm5ldyBjKG8odCkpfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPW4oMCkscj1uKDczKSxhPW4oMikuQnVmZmVyLG89bmV3IEFycmF5KDE2KTtmdW5jdGlvbiBzKCl7ci5jYWxsKHRoaXMsNjQpLHRoaXMuX2E9MTczMjU4NDE5Myx0aGlzLl9iPTQwMjMyMzM0MTcsdGhpcy5fYz0yNTYyMzgzMTAyLHRoaXMuX2Q9MjcxNzMzODc4fWZ1bmN0aW9uIGModCxlKXtyZXR1cm4gdDw8ZXx0Pj4+MzItZX1mdW5jdGlvbiB1KHQsZSxuLGkscixhLG8pe3JldHVybiBjKHQrKGUmbnx+ZSZpKStyK2F8MCxvKStlfDB9ZnVuY3Rpb24gbCh0LGUsbixpLHIsYSxvKXtyZXR1cm4gYyh0KyhlJml8biZ+aSkrcithfDAsbykrZXwwfWZ1bmN0aW9uIHAodCxlLG4saSxyLGEsbyl7cmV0dXJuIGModCsoZV5uXmkpK3IrYXwwLG8pK2V8MH1mdW5jdGlvbiBmKHQsZSxuLGkscixhLG8pe3JldHVybiBjKHQrKG5eKGV8fmkpKStyK2F8MCxvKStlfDB9aShzLHIpLHMucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9byxlPTA7ZTwxNjsrK2UpdFtlXT10aGlzLl9ibG9jay5yZWFkSW50MzJMRSg0KmUpO3ZhciBuPXRoaXMuX2EsaT10aGlzLl9iLHI9dGhpcy5fYyxhPXRoaXMuX2Q7bj11KG4saSxyLGEsdFswXSwzNjE0MDkwMzYwLDcpLGE9dShhLG4saSxyLHRbMV0sMzkwNTQwMjcxMCwxMikscj11KHIsYSxuLGksdFsyXSw2MDYxMDU4MTksMTcpLGk9dShpLHIsYSxuLHRbM10sMzI1MDQ0MTk2NiwyMiksbj11KG4saSxyLGEsdFs0XSw0MTE4NTQ4Mzk5LDcpLGE9dShhLG4saSxyLHRbNV0sMTIwMDA4MDQyNiwxMikscj11KHIsYSxuLGksdFs2XSwyODIxNzM1OTU1LDE3KSxpPXUoaSxyLGEsbix0WzddLDQyNDkyNjEzMTMsMjIpLG49dShuLGkscixhLHRbOF0sMTc3MDAzNTQxNiw3KSxhPXUoYSxuLGkscix0WzldLDIzMzY1NTI4NzksMTIpLHI9dShyLGEsbixpLHRbMTBdLDQyOTQ5MjUyMzMsMTcpLGk9dShpLHIsYSxuLHRbMTFdLDIzMDQ1NjMxMzQsMjIpLG49dShuLGkscixhLHRbMTJdLDE4MDQ2MDM2ODIsNyksYT11KGEsbixpLHIsdFsxM10sNDI1NDYyNjE5NSwxMikscj11KHIsYSxuLGksdFsxNF0sMjc5Mjk2NTAwNiwxNyksbj1sKG4saT11KGkscixhLG4sdFsxNV0sMTIzNjUzNTMyOSwyMikscixhLHRbMV0sNDEyOTE3MDc4Niw1KSxhPWwoYSxuLGkscix0WzZdLDMyMjU0NjU2NjQsOSkscj1sKHIsYSxuLGksdFsxMV0sNjQzNzE3NzEzLDE0KSxpPWwoaSxyLGEsbix0WzBdLDM5MjEwNjk5OTQsMjApLG49bChuLGkscixhLHRbNV0sMzU5MzQwODYwNSw1KSxhPWwoYSxuLGkscix0WzEwXSwzODAxNjA4Myw5KSxyPWwocixhLG4saSx0WzE1XSwzNjM0NDg4OTYxLDE0KSxpPWwoaSxyLGEsbix0WzRdLDM4ODk0Mjk0NDgsMjApLG49bChuLGkscixhLHRbOV0sNTY4NDQ2NDM4LDUpLGE9bChhLG4saSxyLHRbMTRdLDMyNzUxNjM2MDYsOSkscj1sKHIsYSxuLGksdFszXSw0MTA3NjAzMzM1LDE0KSxpPWwoaSxyLGEsbix0WzhdLDExNjM1MzE1MDEsMjApLG49bChuLGkscixhLHRbMTNdLDI4NTAyODU4MjksNSksYT1sKGEsbixpLHIsdFsyXSw0MjQzNTYzNTEyLDkpLHI9bChyLGEsbixpLHRbN10sMTczNTMyODQ3MywxNCksbj1wKG4saT1sKGkscixhLG4sdFsxMl0sMjM2ODM1OTU2MiwyMCkscixhLHRbNV0sNDI5NDU4ODczOCw0KSxhPXAoYSxuLGkscix0WzhdLDIyNzIzOTI4MzMsMTEpLHI9cChyLGEsbixpLHRbMTFdLDE4MzkwMzA1NjIsMTYpLGk9cChpLHIsYSxuLHRbMTRdLDQyNTk2NTc3NDAsMjMpLG49cChuLGkscixhLHRbMV0sMjc2Mzk3NTIzNiw0KSxhPXAoYSxuLGkscix0WzRdLDEyNzI4OTMzNTMsMTEpLHI9cChyLGEsbixpLHRbN10sNDEzOTQ2OTY2NCwxNiksaT1wKGkscixhLG4sdFsxMF0sMzIwMDIzNjY1NiwyMyksbj1wKG4saSxyLGEsdFsxM10sNjgxMjc5MTc0LDQpLGE9cChhLG4saSxyLHRbMF0sMzkzNjQzMDA3NCwxMSkscj1wKHIsYSxuLGksdFszXSwzNTcyNDQ1MzE3LDE2KSxpPXAoaSxyLGEsbix0WzZdLDc2MDI5MTg5LDIzKSxuPXAobixpLHIsYSx0WzldLDM2NTQ2MDI4MDksNCksYT1wKGEsbixpLHIsdFsxMl0sMzg3MzE1MTQ2MSwxMSkscj1wKHIsYSxuLGksdFsxNV0sNTMwNzQyNTIwLDE2KSxuPWYobixpPXAoaSxyLGEsbix0WzJdLDMyOTk2Mjg2NDUsMjMpLHIsYSx0WzBdLDQwOTYzMzY0NTIsNiksYT1mKGEsbixpLHIsdFs3XSwxMTI2ODkxNDE1LDEwKSxyPWYocixhLG4saSx0WzE0XSwyODc4NjEyMzkxLDE1KSxpPWYoaSxyLGEsbix0WzVdLDQyMzc1MzMyNDEsMjEpLG49ZihuLGkscixhLHRbMTJdLDE3MDA0ODU1NzEsNiksYT1mKGEsbixpLHIsdFszXSwyMzk5OTgwNjkwLDEwKSxyPWYocixhLG4saSx0WzEwXSw0MjkzOTE1NzczLDE1KSxpPWYoaSxyLGEsbix0WzFdLDIyNDAwNDQ0OTcsMjEpLG49ZihuLGkscixhLHRbOF0sMTg3MzMxMzM1OSw2KSxhPWYoYSxuLGkscix0WzE1XSw0MjY0MzU1NTUyLDEwKSxyPWYocixhLG4saSx0WzZdLDI3MzQ3Njg5MTYsMTUpLGk9ZihpLHIsYSxuLHRbMTNdLDEzMDkxNTE2NDksMjEpLG49ZihuLGkscixhLHRbNF0sNDE0OTQ0NDIyNiw2KSxhPWYoYSxuLGkscix0WzExXSwzMTc0NzU2OTE3LDEwKSxyPWYocixhLG4saSx0WzJdLDcxODc4NzI1OSwxNSksaT1mKGkscixhLG4sdFs5XSwzOTUxNDgxNzQ1LDIxKSx0aGlzLl9hPXRoaXMuX2ErbnwwLHRoaXMuX2I9dGhpcy5fYitpfDAsdGhpcy5fYz10aGlzLl9jK3J8MCx0aGlzLl9kPXRoaXMuX2QrYXwwfSxzLnByb3RvdHlwZS5fZGlnZXN0PWZ1bmN0aW9uKCl7dGhpcy5fYmxvY2tbdGhpcy5fYmxvY2tPZmZzZXQrK109MTI4LHRoaXMuX2Jsb2NrT2Zmc2V0PjU2JiYodGhpcy5fYmxvY2suZmlsbCgwLHRoaXMuX2Jsb2NrT2Zmc2V0LDY0KSx0aGlzLl91cGRhdGUoKSx0aGlzLl9ibG9ja09mZnNldD0wKSx0aGlzLl9ibG9jay5maWxsKDAsdGhpcy5fYmxvY2tPZmZzZXQsNTYpLHRoaXMuX2Jsb2NrLndyaXRlVUludDMyTEUodGhpcy5fbGVuZ3RoWzBdLDU2KSx0aGlzLl9ibG9jay53cml0ZVVJbnQzMkxFKHRoaXMuX2xlbmd0aFsxXSw2MCksdGhpcy5fdXBkYXRlKCk7dmFyIHQ9YS5hbGxvY1Vuc2FmZSgxNik7cmV0dXJuIHQud3JpdGVJbnQzMkxFKHRoaXMuX2EsMCksdC53cml0ZUludDMyTEUodGhpcy5fYiw0KSx0LndyaXRlSW50MzJMRSh0aGlzLl9jLDgpLHQud3JpdGVJbnQzMkxFKHRoaXMuX2QsMTIpLHR9LHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9bigxKS5CdWZmZXIscj1uKDApLGE9big3Myksbz1uZXcgQXJyYXkoMTYpLHM9WzAsMSwyLDMsNCw1LDYsNyw4LDksMTAsMTEsMTIsMTMsMTQsMTUsNyw0LDEzLDEsMTAsNiwxNSwzLDEyLDAsOSw1LDIsMTQsMTEsOCwzLDEwLDE0LDQsOSwxNSw4LDEsMiw3LDAsNiwxMywxMSw1LDEyLDEsOSwxMSwxMCwwLDgsMTIsNCwxMywzLDcsMTUsMTQsNSw2LDIsNCwwLDUsOSw3LDEyLDIsMTAsMTQsMSwzLDgsMTEsNiwxNSwxM10sYz1bNSwxNCw3LDAsOSwyLDExLDQsMTMsNiwxNSw4LDEsMTAsMywxMiw2LDExLDMsNywwLDEzLDUsMTAsMTQsMTUsOCwxMiw0LDksMSwyLDE1LDUsMSwzLDcsMTQsNiw5LDExLDgsMTIsMiwxMCwwLDQsMTMsOCw2LDQsMSwzLDExLDE1LDAsNSwxMiwyLDEzLDksNywxMCwxNCwxMiwxNSwxMCw0LDEsNSw4LDcsNiwyLDEzLDE0LDAsMyw5LDExXSx1PVsxMSwxNCwxNSwxMiw1LDgsNyw5LDExLDEzLDE0LDE1LDYsNyw5LDgsNyw2LDgsMTMsMTEsOSw3LDE1LDcsMTIsMTUsOSwxMSw3LDEzLDEyLDExLDEzLDYsNywxNCw5LDEzLDE1LDE0LDgsMTMsNiw1LDEyLDcsNSwxMSwxMiwxNCwxNSwxNCwxNSw5LDgsOSwxNCw1LDYsOCw2LDUsMTIsOSwxNSw1LDExLDYsOCwxMywxMiw1LDEyLDEzLDE0LDExLDgsNSw2XSxsPVs4LDksOSwxMSwxMywxNSwxNSw1LDcsNyw4LDExLDE0LDE0LDEyLDYsOSwxMywxNSw3LDEyLDgsOSwxMSw3LDcsMTIsNyw2LDE1LDEzLDExLDksNywxNSwxMSw4LDYsNiwxNCwxMiwxMyw1LDE0LDEzLDEzLDcsNSwxNSw1LDgsMTEsMTQsMTQsNiwxNCw2LDksMTIsOSwxMiw1LDE1LDgsOCw1LDEyLDksMTIsNSwxNCw2LDgsMTMsNiw1LDE1LDEzLDExLDExXSxwPVswLDE1MTg1MDAyNDksMTg1OTc3NTM5MywyNDAwOTU5NzA4LDI4NDA4NTM4MzhdLGY9WzEzNTI4Mjk5MjYsMTU0ODYwMzY4NCwxODM2MDcyNjkxLDIwNTM5OTQyMTcsMF07ZnVuY3Rpb24gZCgpe2EuY2FsbCh0aGlzLDY0KSx0aGlzLl9hPTE3MzI1ODQxOTMsdGhpcy5fYj00MDIzMjMzNDE3LHRoaXMuX2M9MjU2MjM4MzEwMix0aGlzLl9kPTI3MTczMzg3OCx0aGlzLl9lPTMyODUzNzc1MjB9ZnVuY3Rpb24gaCh0LGUpe3JldHVybiB0PDxlfHQ+Pj4zMi1lfWZ1bmN0aW9uIG0odCxlLG4saSxyLGEsbyxzKXtyZXR1cm4gaCh0KyhlXm5eaSkrYStvfDAscykrcnwwfWZ1bmN0aW9uIGcodCxlLG4saSxyLGEsbyxzKXtyZXR1cm4gaCh0KyhlJm58fmUmaSkrYStvfDAscykrcnwwfWZ1bmN0aW9uIHkodCxlLG4saSxyLGEsbyxzKXtyZXR1cm4gaCh0KygoZXx+bileaSkrYStvfDAscykrcnwwfWZ1bmN0aW9uIGIodCxlLG4saSxyLGEsbyxzKXtyZXR1cm4gaCh0KyhlJml8biZ+aSkrYStvfDAscykrcnwwfWZ1bmN0aW9uIHYodCxlLG4saSxyLGEsbyxzKXtyZXR1cm4gaCh0KyhlXihufH5pKSkrYStvfDAscykrcnwwfXIoZCxhKSxkLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PW8sZT0wO2U8MTY7KytlKXRbZV09dGhpcy5fYmxvY2sucmVhZEludDMyTEUoNCplKTtmb3IodmFyIG49MHx0aGlzLl9hLGk9MHx0aGlzLl9iLHI9MHx0aGlzLl9jLGE9MHx0aGlzLl9kLGQ9MHx0aGlzLl9lLHc9MHx0aGlzLl9hLHg9MHx0aGlzLl9iLEQ9MHx0aGlzLl9jLF89MHx0aGlzLl9kLEU9MHx0aGlzLl9lLGs9MDtrPDgwO2srPTEpe3ZhciBULEM7azwxNj8oVD1tKG4saSxyLGEsZCx0W3Nba11dLHBbMF0sdVtrXSksQz12KHcseCxELF8sRSx0W2Nba11dLGZbMF0sbFtrXSkpOms8MzI/KFQ9ZyhuLGkscixhLGQsdFtzW2tdXSxwWzFdLHVba10pLEM9Yih3LHgsRCxfLEUsdFtjW2tdXSxmWzFdLGxba10pKTprPDQ4PyhUPXkobixpLHIsYSxkLHRbc1trXV0scFsyXSx1W2tdKSxDPXkodyx4LEQsXyxFLHRbY1trXV0sZlsyXSxsW2tdKSk6azw2ND8oVD1iKG4saSxyLGEsZCx0W3Nba11dLHBbM10sdVtrXSksQz1nKHcseCxELF8sRSx0W2Nba11dLGZbM10sbFtrXSkpOihUPXYobixpLHIsYSxkLHRbc1trXV0scFs0XSx1W2tdKSxDPW0odyx4LEQsXyxFLHRbY1trXV0sZls0XSxsW2tdKSksbj1kLGQ9YSxhPWgociwxMCkscj1pLGk9VCx3PUUsRT1fLF89aChELDEwKSxEPXgseD1DfXZhciBTPXRoaXMuX2IrcitffDA7dGhpcy5fYj10aGlzLl9jK2ErRXwwLHRoaXMuX2M9dGhpcy5fZCtkK3d8MCx0aGlzLl9kPXRoaXMuX2Urbit4fDAsdGhpcy5fZT10aGlzLl9hK2krRHwwLHRoaXMuX2E9U30sZC5wcm90b3R5cGUuX2RpZ2VzdD1mdW5jdGlvbigpe3RoaXMuX2Jsb2NrW3RoaXMuX2Jsb2NrT2Zmc2V0KytdPTEyOCx0aGlzLl9ibG9ja09mZnNldD41NiYmKHRoaXMuX2Jsb2NrLmZpbGwoMCx0aGlzLl9ibG9ja09mZnNldCw2NCksdGhpcy5fdXBkYXRlKCksdGhpcy5fYmxvY2tPZmZzZXQ9MCksdGhpcy5fYmxvY2suZmlsbCgwLHRoaXMuX2Jsb2NrT2Zmc2V0LDU2KSx0aGlzLl9ibG9jay53cml0ZVVJbnQzMkxFKHRoaXMuX2xlbmd0aFswXSw1NiksdGhpcy5fYmxvY2sud3JpdGVVSW50MzJMRSh0aGlzLl9sZW5ndGhbMV0sNjApLHRoaXMuX3VwZGF0ZSgpO3ZhciB0PWkuYWxsb2M/aS5hbGxvYygyMCk6bmV3IGkoMjApO3JldHVybiB0LndyaXRlSW50MzJMRSh0aGlzLl9hLDApLHQud3JpdGVJbnQzMkxFKHRoaXMuX2IsNCksdC53cml0ZUludDMyTEUodGhpcy5fYyw4KSx0LndyaXRlSW50MzJMRSh0aGlzLl9kLDEyKSx0LndyaXRlSW50MzJMRSh0aGlzLl9lLDE2KSx0fSx0LmV4cG9ydHM9ZH0sZnVuY3Rpb24odCxlLG4peyhlPXQuZXhwb3J0cz1mdW5jdGlvbih0KXt0PXQudG9Mb3dlckNhc2UoKTt2YXIgbj1lW3RdO2lmKCFuKXRocm93IG5ldyBFcnJvcih0K1wiIGlzIG5vdCBzdXBwb3J0ZWQgKHdlIGFjY2VwdCBwdWxsIHJlcXVlc3RzKVwiKTtyZXR1cm4gbmV3IG59KS5zaGE9bigxODYpLGUuc2hhMT1uKDE4NyksZS5zaGEyMjQ9bigxODgpLGUuc2hhMjU2PW4oNzQpLGUuc2hhMzg0PW4oMTg5KSxlLnNoYTUxMj1uKDc1KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMCkscj1uKDE0KSxhPW4oMikuQnVmZmVyLG89WzE1MTg1MDAyNDksMTg1OTc3NTM5MywtMTg5NDAwNzU4OCwtODk5NDk3NTE0XSxzPW5ldyBBcnJheSg4MCk7ZnVuY3Rpb24gYygpe3RoaXMuaW5pdCgpLHRoaXMuX3c9cyxyLmNhbGwodGhpcyw2NCw1Nil9ZnVuY3Rpb24gdSh0KXtyZXR1cm4gdDw8MzB8dD4+PjJ9ZnVuY3Rpb24gbCh0LGUsbixpKXtyZXR1cm4gMD09PXQ/ZSZufH5lJmk6Mj09PXQ/ZSZufGUmaXxuJmk6ZV5uXml9aShjLHIpLGMucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYT0xNzMyNTg0MTkzLHRoaXMuX2I9NDAyMzIzMzQxNyx0aGlzLl9jPTI1NjIzODMxMDIsdGhpcy5fZD0yNzE3MzM4NzgsdGhpcy5fZT0zMjg1Mzc3NTIwLHRoaXN9LGMucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49dGhpcy5fdyxpPTB8dGhpcy5fYSxyPTB8dGhpcy5fYixhPTB8dGhpcy5fYyxzPTB8dGhpcy5fZCxjPTB8dGhpcy5fZSxwPTA7cDwxNjsrK3ApbltwXT10LnJlYWRJbnQzMkJFKDQqcCk7Zm9yKDtwPDgwOysrcCluW3BdPW5bcC0zXV5uW3AtOF1ebltwLTE0XV5uW3AtMTZdO2Zvcih2YXIgZj0wO2Y8ODA7KytmKXt2YXIgZD1+fihmLzIwKSxoPTB8KChlPWkpPDw1fGU+Pj4yNykrbChkLHIsYSxzKStjK25bZl0rb1tkXTtjPXMscz1hLGE9dShyKSxyPWksaT1ofXRoaXMuX2E9aSt0aGlzLl9hfDAsdGhpcy5fYj1yK3RoaXMuX2J8MCx0aGlzLl9jPWErdGhpcy5fY3wwLHRoaXMuX2Q9cyt0aGlzLl9kfDAsdGhpcy5fZT1jK3RoaXMuX2V8MH0sYy5wcm90b3R5cGUuX2hhc2g9ZnVuY3Rpb24oKXt2YXIgdD1hLmFsbG9jVW5zYWZlKDIwKTtyZXR1cm4gdC53cml0ZUludDMyQkUoMHx0aGlzLl9hLDApLHQud3JpdGVJbnQzMkJFKDB8dGhpcy5fYiw0KSx0LndyaXRlSW50MzJCRSgwfHRoaXMuX2MsOCksdC53cml0ZUludDMyQkUoMHx0aGlzLl9kLDEyKSx0LndyaXRlSW50MzJCRSgwfHRoaXMuX2UsMTYpLHR9LHQuZXhwb3J0cz1jfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigwKSxyPW4oMTQpLGE9bigyKS5CdWZmZXIsbz1bMTUxODUwMDI0OSwxODU5Nzc1MzkzLC0xODk0MDA3NTg4LC04OTk0OTc1MTRdLHM9bmV3IEFycmF5KDgwKTtmdW5jdGlvbiBjKCl7dGhpcy5pbml0KCksdGhpcy5fdz1zLHIuY2FsbCh0aGlzLDY0LDU2KX1mdW5jdGlvbiB1KHQpe3JldHVybiB0PDw1fHQ+Pj4yN31mdW5jdGlvbiBsKHQpe3JldHVybiB0PDwzMHx0Pj4+Mn1mdW5jdGlvbiBwKHQsZSxuLGkpe3JldHVybiAwPT09dD9lJm58fmUmaToyPT09dD9lJm58ZSZpfG4maTplXm5eaX1pKGMsciksYy5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9hPTE3MzI1ODQxOTMsdGhpcy5fYj00MDIzMjMzNDE3LHRoaXMuX2M9MjU2MjM4MzEwMix0aGlzLl9kPTI3MTczMzg3OCx0aGlzLl9lPTMyODUzNzc1MjAsdGhpc30sYy5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0KXtmb3IodmFyIGUsbj10aGlzLl93LGk9MHx0aGlzLl9hLHI9MHx0aGlzLl9iLGE9MHx0aGlzLl9jLHM9MHx0aGlzLl9kLGM9MHx0aGlzLl9lLGY9MDtmPDE2OysrZiluW2ZdPXQucmVhZEludDMyQkUoNCpmKTtmb3IoO2Y8ODA7KytmKW5bZl09KGU9bltmLTNdXm5bZi04XV5uW2YtMTRdXm5bZi0xNl0pPDwxfGU+Pj4zMTtmb3IodmFyIGQ9MDtkPDgwOysrZCl7dmFyIGg9fn4oZC8yMCksbT11KGkpK3AoaCxyLGEscykrYytuW2RdK29baF18MDtjPXMscz1hLGE9bChyKSxyPWksaT1tfXRoaXMuX2E9aSt0aGlzLl9hfDAsdGhpcy5fYj1yK3RoaXMuX2J8MCx0aGlzLl9jPWErdGhpcy5fY3wwLHRoaXMuX2Q9cyt0aGlzLl9kfDAsdGhpcy5fZT1jK3RoaXMuX2V8MH0sYy5wcm90b3R5cGUuX2hhc2g9ZnVuY3Rpb24oKXt2YXIgdD1hLmFsbG9jVW5zYWZlKDIwKTtyZXR1cm4gdC53cml0ZUludDMyQkUoMHx0aGlzLl9hLDApLHQud3JpdGVJbnQzMkJFKDB8dGhpcy5fYiw0KSx0LndyaXRlSW50MzJCRSgwfHRoaXMuX2MsOCksdC53cml0ZUludDMyQkUoMHx0aGlzLl9kLDEyKSx0LndyaXRlSW50MzJCRSgwfHRoaXMuX2UsMTYpLHR9LHQuZXhwb3J0cz1jfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigwKSxyPW4oNzQpLGE9bigxNCksbz1uKDIpLkJ1ZmZlcixzPW5ldyBBcnJheSg2NCk7ZnVuY3Rpb24gYygpe3RoaXMuaW5pdCgpLHRoaXMuX3c9cyxhLmNhbGwodGhpcyw2NCw1Nil9aShjLHIpLGMucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYT0zMjM4MzcxMDMyLHRoaXMuX2I9OTE0MTUwNjYzLHRoaXMuX2M9ODEyNzAyOTk5LHRoaXMuX2Q9NDE0NDkxMjY5Nyx0aGlzLl9lPTQyOTA3NzU4NTcsdGhpcy5fZj0xNzUwNjAzMDI1LHRoaXMuX2c9MTY5NDA3NjgzOSx0aGlzLl9oPTMyMDQwNzU0MjgsdGhpc30sYy5wcm90b3R5cGUuX2hhc2g9ZnVuY3Rpb24oKXt2YXIgdD1vLmFsbG9jVW5zYWZlKDI4KTtyZXR1cm4gdC53cml0ZUludDMyQkUodGhpcy5fYSwwKSx0LndyaXRlSW50MzJCRSh0aGlzLl9iLDQpLHQud3JpdGVJbnQzMkJFKHRoaXMuX2MsOCksdC53cml0ZUludDMyQkUodGhpcy5fZCwxMiksdC53cml0ZUludDMyQkUodGhpcy5fZSwxNiksdC53cml0ZUludDMyQkUodGhpcy5fZiwyMCksdC53cml0ZUludDMyQkUodGhpcy5fZywyNCksdH0sdC5leHBvcnRzPWN9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDApLHI9big3NSksYT1uKDE0KSxvPW4oMikuQnVmZmVyLHM9bmV3IEFycmF5KDE2MCk7ZnVuY3Rpb24gYygpe3RoaXMuaW5pdCgpLHRoaXMuX3c9cyxhLmNhbGwodGhpcywxMjgsMTEyKX1pKGMsciksYy5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9haD0zNDE4MDcwMzY1LHRoaXMuX2JoPTE2NTQyNzAyNTAsdGhpcy5fY2g9MjQzODUyOTM3MCx0aGlzLl9kaD0zNTU0NjIzNjAsdGhpcy5fZWg9MTczMTQwNTQxNSx0aGlzLl9maD0yMzk0MTgwMjMxLHRoaXMuX2doPTM2NzUwMDg1MjUsdGhpcy5faGg9MTIwMzA2MjgxMyx0aGlzLl9hbD0zMjM4MzcxMDMyLHRoaXMuX2JsPTkxNDE1MDY2Myx0aGlzLl9jbD04MTI3MDI5OTksdGhpcy5fZGw9NDE0NDkxMjY5Nyx0aGlzLl9lbD00MjkwNzc1ODU3LHRoaXMuX2ZsPTE3NTA2MDMwMjUsdGhpcy5fZ2w9MTY5NDA3NjgzOSx0aGlzLl9obD0zMjA0MDc1NDI4LHRoaXN9LGMucHJvdG90eXBlLl9oYXNoPWZ1bmN0aW9uKCl7dmFyIHQ9by5hbGxvY1Vuc2FmZSg0OCk7ZnVuY3Rpb24gZShlLG4saSl7dC53cml0ZUludDMyQkUoZSxpKSx0LndyaXRlSW50MzJCRShuLGkrNCl9cmV0dXJuIGUodGhpcy5fYWgsdGhpcy5fYWwsMCksZSh0aGlzLl9iaCx0aGlzLl9ibCw4KSxlKHRoaXMuX2NoLHRoaXMuX2NsLDE2KSxlKHRoaXMuX2RoLHRoaXMuX2RsLDI0KSxlKHRoaXMuX2VoLHRoaXMuX2VsLDMyKSxlKHRoaXMuX2ZoLHRoaXMuX2ZsLDQwKSx0fSx0LmV4cG9ydHM9Y30sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMikuQnVmZmVyLHI9bigzMCkuVHJhbnNmb3JtLGE9bigyOCkuU3RyaW5nRGVjb2RlcjtmdW5jdGlvbiBvKHQpe3IuY2FsbCh0aGlzKSx0aGlzLmhhc2hNb2RlPVwic3RyaW5nXCI9PXR5cGVvZiB0LHRoaXMuaGFzaE1vZGU/dGhpc1t0XT10aGlzLl9maW5hbE9yRGlnZXN0OnRoaXMuZmluYWw9dGhpcy5fZmluYWxPckRpZ2VzdCx0aGlzLl9maW5hbCYmKHRoaXMuX19maW5hbD10aGlzLl9maW5hbCx0aGlzLl9maW5hbD1udWxsKSx0aGlzLl9kZWNvZGVyPW51bGwsdGhpcy5fZW5jb2Rpbmc9bnVsbH1uKDApKG8sciksby5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKHQsZSxuKXtcInN0cmluZ1wiPT10eXBlb2YgdCYmKHQ9aS5mcm9tKHQsZSkpO3ZhciByPXRoaXMuX3VwZGF0ZSh0KTtyZXR1cm4gdGhpcy5oYXNoTW9kZT90aGlzOihuJiYocj10aGlzLl90b1N0cmluZyhyLG4pKSxyKX0sby5wcm90b3R5cGUuc2V0QXV0b1BhZGRpbmc9ZnVuY3Rpb24oKXt9LG8ucHJvdG90eXBlLmdldEF1dGhUYWc9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJ0cnlpbmcgdG8gZ2V0IGF1dGggdGFnIGluIHVuc3VwcG9ydGVkIHN0YXRlXCIpfSxvLnByb3RvdHlwZS5zZXRBdXRoVGFnPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwidHJ5aW5nIHRvIHNldCBhdXRoIHRhZyBpbiB1bnN1cHBvcnRlZCBzdGF0ZVwiKX0sby5wcm90b3R5cGUuc2V0QUFEPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwidHJ5aW5nIHRvIHNldCBhYWQgaW4gdW5zdXBwb3J0ZWQgc3RhdGVcIil9LG8ucHJvdG90eXBlLl90cmFuc2Zvcm09ZnVuY3Rpb24odCxlLG4pe3ZhciBpO3RyeXt0aGlzLmhhc2hNb2RlP3RoaXMuX3VwZGF0ZSh0KTp0aGlzLnB1c2godGhpcy5fdXBkYXRlKHQpKX1jYXRjaCh0KXtpPXR9ZmluYWxseXtuKGkpfX0sby5wcm90b3R5cGUuX2ZsdXNoPWZ1bmN0aW9uKHQpe3ZhciBlO3RyeXt0aGlzLnB1c2godGhpcy5fX2ZpbmFsKCkpfWNhdGNoKHQpe2U9dH10KGUpfSxvLnByb3RvdHlwZS5fZmluYWxPckRpZ2VzdD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9fZmluYWwoKXx8aS5hbGxvYygwKTtyZXR1cm4gdCYmKGU9dGhpcy5fdG9TdHJpbmcoZSx0LCEwKSksZX0sby5wcm90b3R5cGUuX3RvU3RyaW5nPWZ1bmN0aW9uKHQsZSxuKXtpZih0aGlzLl9kZWNvZGVyfHwodGhpcy5fZGVjb2Rlcj1uZXcgYShlKSx0aGlzLl9lbmNvZGluZz1lKSx0aGlzLl9lbmNvZGluZyE9PWUpdGhyb3cgbmV3IEVycm9yKFwiY2FuJ3Qgc3dpdGNoIGVuY29kaW5nc1wiKTt2YXIgaT10aGlzLl9kZWNvZGVyLndyaXRlKHQpO3JldHVybiBuJiYoaSs9dGhpcy5fZGVjb2Rlci5lbmQoKSksaX0sdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT10LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPT10JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5waXBlfTtpLndyaXRhYmxlPWZ1bmN0aW9uKHQpe3JldHVybiBpKHQpJiYhMSE9PXQud3JpdGFibGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuX3dyaXRlJiZcIm9iamVjdFwiPT10eXBlb2YgdC5fd3JpdGFibGVTdGF0ZX0saS5yZWFkYWJsZT1mdW5jdGlvbih0KXtyZXR1cm4gaSh0KSYmITEhPT10LnJlYWRhYmxlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0Ll9yZWFkJiZcIm9iamVjdFwiPT10eXBlb2YgdC5fcmVhZGFibGVTdGF0ZX0saS5kdXBsZXg9ZnVuY3Rpb24odCl7cmV0dXJuIGkud3JpdGFibGUodCkmJmkucmVhZGFibGUodCl9LGkudHJhbnNmb3JtPWZ1bmN0aW9uKHQpe3JldHVybiBpLmR1cGxleCh0KSYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5fdHJhbnNmb3JtJiZcIm9iamVjdFwiPT10eXBlb2YgdC5fdHJhbnNmb3JtU3RhdGV9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7KGZ1bmN0aW9uKGUpe3ZhciBpPWEobig1KSkscj1hKG4oMTkzKSk7ZnVuY3Rpb24gYSh0KXtyZXR1cm4gdCYmdC5fX2VzTW9kdWxlP3Q6e2RlZmF1bHQ6dH19Y29uc3Qgbz1bXSxzPSgpPT57fTtsZXQgYz0hMTtjbGFzcyB1e3N0YXRpYyBmcm9tRmlsZSh0LGUsbil7XCJmdW5jdGlvblwiPT10eXBlb2YgZSYmKG49ZSxlPXZvaWQgMCksdS5fZ2V0RmlsZVNpemUodCwocixhKT0+e2lmKHIpcmV0dXJuIG4ocik7aS5kZWZhdWx0Lm9wZW4odCxcInJcIiwodCxpKT0+e2lmKHQpcmV0dXJuIG4odCk7dS5mcm9tRmQoaSxNYXRoLm1pbihlfHw1MDAsYSksbil9KX0pfXN0YXRpYyBmcm9tRmQodCxuLHIpe1wiZnVuY3Rpb25cIj09dHlwZW9mIG4mJihyPW4sbj12b2lkIDApO2xldCBhPW47YXx8KGE9NTAwKTtjb25zdCBvPW5ldyBlKGEpO2kuZGVmYXVsdC5yZWFkKHQsbywwLGEsMCwoZSxuKT0+e2lmKGkuZGVmYXVsdC5jbG9zZSh0LHMpLGUpcmV0dXJuIHIoZSk7dS5mcm9tQnVmZmVyKG8scil9KX1zdGF0aWMgZnJvbUJ1ZmZlcih0LG4pe2xldCBpPW51bGw7aWYoY3x8KGM9dS5fdmFsaWRhdGVTaWdhbnR1cmVzKCkpLEFycmF5LmlzQXJyYXkoYykpcmV0dXJuIG4oYyk7dCBpbnN0YW5jZW9mIGV8fCh0PWUuZnJvbSh0KSksci5kZWZhdWx0LmV2ZXJ5KGU9PntsZXQgbj11Ll9kZXRlY3QodCxlLnJ1bGVzKTtyZXR1cm4hbnx8KGk9dS5fZ2V0UnVsZURldGVjdGlvbih7fSxlLG4pLCExKX0pLG51bGw9PT1pJiZvLmV2ZXJ5KGU9Pntjb25zdCBuPWUodCk7cmV0dXJuIW58fChpPW4sITEpfSksbihudWxsLGkpfXN0YXRpYyBhZGRTaWduYXR1cmUodCl7Yz0hMSxyLmRlZmF1bHQucHVzaCh0KX1zdGF0aWMgYWRkQ3VzdG9tRnVuY3Rpb24odCl7by5wdXNoKHQpfXN0YXRpYyBfZGV0ZWN0KHQsbixpLHIpe2l8fChpPVwiYW5kXCIpO2xldCBhPSEwO3JldHVybiBuLmV2ZXJ5KG49PntsZXQgbz0hMDtpZihcIm9iamVjdFwiPT10eXBlb2Ygbi5zZWFyY2gpe2xldCBvPW4uc2VhcmNoO28uYnl0ZXMgaW5zdGFuY2VvZiBlfHwoby5ieXRlcz1lLmZyb20oby5ieXRlcyxcInN0cmluZ1wiPT10eXBlb2Ygby5ieXRlcz9cImhleFwiOm51bGwpKTtsZXQgcz1vLnN0YXJ0fHwwLGM9by5lbmQ7aWYoby5oYXNPd25Qcm9wZXJ0eShcInNlYXJjaF9yZWZcIikpe2NvbnN0IHQ9cj9yLmdldChvLnNlYXJjaF9yZWYpOi0xOy0xPT09dD9zPS0xOihzKz10LGMrPXQpfWM9TWF0aC5taW4oXCJudW1iZXJcIj09dHlwZW9mIGM/Yzp0Lmxlbmd0aCx0Lmxlbmd0aCk7bGV0IHU9LTE9PT1zPy0xOnQuaW5kZXhPZihvLmJ5dGVzLHZvaWQgMCx2b2lkIDAscyxjKTtpZih1PDApcmV0dXJuIGE9dGhpcy5fZ2V0UnVsZURldGVjdGlvbihhLCExKSx0aGlzLl9pc1JldHVybkZhbHNlKGEsaSk7KHI9cnx8bmV3IE1hcCkuc2V0KG8uaWQsdSl9aWYoXCJvclwiPT09bi50eXBlKW89dGhpcy5fZGV0ZWN0KHQsbi5ydWxlcyxcIm9yXCIscik7ZWxzZSBpZihcImFuZFwiPT09bi50eXBlKW89dGhpcy5fZGV0ZWN0KHQsbi5ydWxlcyxcImFuZFwiLHIpO2Vsc2UgaWYoXCJkZWZhdWx0XCI9PT1uLnR5cGUpbz1uO2Vsc2V7bi5ieXRlcyBpbnN0YW5jZW9mIGV8fChuLmJ5dGVzPWUuZnJvbShuLmJ5dGVzLFwic3RyaW5nXCI9PXR5cGVvZiBuLmJ5dGVzP1wiaGV4XCI6bnVsbCkpO2xldCBpPW4uc3RhcnR8fDAsYT1uLmVuZDtpZihuLmhhc093blByb3BlcnR5KFwic2VhcmNoX3JlZlwiKSl7Y29uc3QgdD1yP3IuZ2V0KG4uc2VhcmNoX3JlZik6LTE7LTE9PT10P2k9LTE6KGkrPXQsYSs9dCl9YT1NYXRoLm1pbihcIm51bWJlclwiPT10eXBlb2YgYT9hOnQubGVuZ3RoLHQubGVuZ3RoKSxpPDA/bz0hMTpcImVxdWFsXCI9PT1uLnR5cGU/bz0wPT09dC5jb21wYXJlKG4uYnl0ZXMsdm9pZCAwLHZvaWQgMCxpLGEpOlwibm90RXF1YWxcIj09PW4udHlwZT9vPTAhPT10LmNvbXBhcmUobi5ieXRlcyx2b2lkIDAsdm9pZCAwLG4uc3RhcnR8fDAsYSk6XCJjb250YWluc1wiPT09bi50eXBlP289dC5zbGljZShuLnN0YXJ0fHwwLG4uZW5kfHx0Lmxlbmd0aCkuaW5jbHVkZXMobi5ieXRlcyk6XCJub3RDb250YWluc1wiPT09bi50eXBlJiYobz0hdC5zbGljZShuLnN0YXJ0fHwwLG4uZW5kfHx0Lmxlbmd0aCkuaW5jbHVkZXMobi5ieXRlcykpfXJldHVybiEwPT09byYmKG89biksYT10aGlzLl9nZXRSdWxlRGV0ZWN0aW9uKGEsbyksdGhpcy5faXNSZXR1cm5GYWxzZShhLGkpfSksYX1zdGF0aWMgX2lzUmV0dXJuRmFsc2UodCxlKXtyZXR1cm4hKCF0JiZcImFuZFwiPT09ZSkmJighdHx8XCJvclwiIT09ZSl9c3RhdGljIF92YWxpZGF0ZVJ1bGVUeXBlKHQpe3JldHVybi0xIT09W1wib3JcIixcImFuZFwiLFwiY29udGFpbnNcIixcIm5vdENvbnRhaW5zXCIsXCJlcXVhbFwiLFwibm90RXF1YWxcIixcImRlZmF1bHRcIl0uaW5kZXhPZih0LnR5cGUpfXN0YXRpYyBfdmFsaWRhdGVTaWdhbnR1cmVzKCl7bGV0IHQ9ci5kZWZhdWx0Lm1hcCh0PT50aGlzLl92YWxpZGF0ZVNpZ25hdHVyZSh0KSkuZmlsdGVyKEJvb2xlYW4pO3JldHVybiF0Lmxlbmd0aHx8dH1zdGF0aWMgX3ZhbGlkYXRlU2lnbmF0dXJlKHQpe2lmKCEoXCJ0eXBlXCJpbiB0KSlyZXR1cm57bWVzc2FnZTonc2lnbmF0dXJlIGRvZXMgbm90IGNvbnRhaW4gXCJ0eXBlXCIgZmllbGQnLHNpZ25hdHVyZTp0fTtpZighKFwicnVsZXNcImluIHQpKXJldHVybnttZXNzYWdlOidzaWduYXR1cmUgZG9lcyBub3QgY29udGFpbiBcInJ1bGVzXCIgZmllbGQnLHNpZ25hdHVyZTp0fTtjb25zdCBlPXRoaXMuX3ZhbGlkYXRlUnVsZXModC5ydWxlcyk7cmV0dXJuXCJleHRcImluIHR8fGUuaGFzRXh0P1wibWltZVwiaW4gdHx8ZS5oYXNNaW1lP0FycmF5LmlzQXJyYXkoZSk/e21lc3NhZ2U6XCJzaWduYXR1cmUgaGFzIGludmFsaWQgcnVsZVwiLHNpZ25hdHVyZTp0LHJ1bGVzOmV9OnZvaWQgMDp7bWVzc2FnZTonc2lnbmF0dXJlIGRvZXMgbm90IGNvbnRhaW4gXCJtaW1lXCIgZmllbGQnLHNpZ25hdHVyZTp0fTp7bWVzc2FnZTonc2lnbmF0dXJlIGRvZXMgbm90IGNvbnRhaW4gXCJleHRcIiBmaWVsZCcsc2lnbmF0dXJlOnR9fXN0YXRpYyBfdmFsaWRhdGVSdWxlcyh0KXtsZXQgZT10Lm1hcCh0PT50aGlzLl92YWxpZGF0ZVJ1bGVUeXBlKHQpP1wib3JcIiE9PXQudHlwZSYmXCJhbmRcIiE9PXQudHlwZXx8XCJydWxlc1wiaW4gdD9cIm9yXCI9PT10LnR5cGV8fFwiYW5kXCI9PT10LnR5cGU/dGhpcy5fdmFsaWRhdGVSdWxlcyh0LnJ1bGVzKTp7aGFzRXh0OlwiZXh0XCJpbiB0LGhhc01pbWU6XCJtaW1lXCJpbiB0fTp7bWVzc2FnZToncnVsZSBzaG91bGQgY29udGFpbnMgXCJydWxlc1wiIGZpZWxkJyxydWxlOnR9OnttZXNzYWdlOlwicnVsZSB0eXBlIG5vdCBzdXBwb3J0ZWRcIixydWxlOnR9KSxuPWUuZmlsdGVyKHQ9PnQubWVzc2FnZSksaT1lLmZpbHRlcih0PT4hdC5tZXNzYWdlKTtyZXR1cm4gbj97aGFzRXh0Omkuc29tZSh0PT50Lmhhc0V4dCksaGFzTWltZTppLnNvbWUodD0+dC5oYXNNaW1lKX06bn1zdGF0aWMgX2dldEZpbGVTaXplKHQsZSl7aS5kZWZhdWx0LnN0YXQodCwodCxuKT0+dD9lKHQpOmUobnVsbCxuLnNpemUpKX1zdGF0aWMgX2dldFJ1bGVEZXRlY3Rpb24oKXtsZXQgdD0hMTtmb3IobGV0IGU9MCxuPWFyZ3VtZW50cy5sZW5ndGg7ZTxuO2UrKyl7bGV0IG49YXJndW1lbnRzW2VdO1wiYm9vbGVhblwiPT10eXBlb2Ygbj90PSEhbiYmKHR8fG4pOih0PVwiYm9vbGVhblwiPT10eXBlb2YgdD97fTp0LFwiZXh0XCJpbiBuJiYodC5leHQ9bi5leHQpLFwibWltZVwiaW4gbiYmKHQubWltZT1uLm1pbWUpLFwiaWFuYVwiaW4gbiYmKHQuaWFuYT1uLmlhbmEpKX1yZXR1cm4gdH19dC5leHBvcnRzPXV9KS5jYWxsKHRoaXMsbigxKS5CdWZmZXIpfSxmdW5jdGlvbih0KXt0LmV4cG9ydHM9SlNPTi5wYXJzZSgnW3tcInR5cGVcIjpcImpwZ1wiLFwiZXh0XCI6XCJqcGdcIixcIm1pbWVcIjpcImltYWdlL2pwZWdcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjozLFwiYnl0ZXNcIjpcImZmZDhmZlwifV19LHtcInR5cGVcIjpcInBuZ1wiLFwiZXh0XCI6XCJwbmdcIixcIm1pbWVcIjpcImltYWdlL3BuZ1wiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjQsXCJieXRlc1wiOlwiODk1MDRlNDdcIn1dfSx7XCJ0eXBlXCI6XCJnaWZcIixcImV4dFwiOlwiZ2lmXCIsXCJtaW1lXCI6XCJpbWFnZS9naWZcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjozLFwiYnl0ZXNcIjpcIjQ3NDk0NlwifV19LHtcInR5cGVcIjpcIndlYnBcIixcImV4dFwiOlwid2VicFwiLFwibWltZVwiOlwiaW1hZ2Uvd2VicFwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6OCxcImVuZFwiOjEyLFwiYnl0ZXNcIjpcIjU3NDU0MjUwXCJ9XX0se1widHlwZVwiOlwiZmxpZlwiLFwiZXh0XCI6XCJmbGlmXCIsXCJtaW1lXCI6XCJpbWFnZS9mbGlmXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCI0NjRjNDk0NlwifV19LHtcInR5cGVcIjpcImNyMlwiLFwiZXh0XCI6XCJjcjJcIixcIm1pbWVcIjpcImltYWdlL3gtY2Fub24tY3IyXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJhbmRcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcIm9yXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCI0OTQ5MmEwMFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCI0ZDRkMDAyYVwifV19LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjgsXCJlbmRcIjoxMCxcImJ5dGVzXCI6XCI0MzUyXCJ9XX1dfSx7XCJ0eXBlXCI6XCJ0aWZcIixcImV4dFwiOlwidGlmXCIsXCJtaW1lXCI6XCJpbWFnZS90aWZmXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJhbmRcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcIm9yXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCI0OTQ5MmEwMFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCI0ZDRkMDAyYVwifV19LHtcInR5cGVcIjpcIm5vdEVxdWFsXCIsXCJzdGFydFwiOjgsXCJlbmRcIjoxMCxcImJ5dGVzXCI6XCI0MzUyXCJ9XX1dfSx7XCJ0eXBlXCI6XCJibXBcIixcImV4dFwiOlwiYm1wXCIsXCJtaW1lXCI6XCJpbWFnZS9ibXBcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjoyLFwiYnl0ZXNcIjpcIjQyNGRcIn1dfSx7XCJ0eXBlXCI6XCJqeHJcIixcImV4dFwiOlwianhyXCIsXCJtaW1lXCI6XCJpbWFnZS92bmQubXMtcGhvdG9cIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjozLFwiYnl0ZXNcIjpcIjQ5NDliY1wifV19LHtcInR5cGVcIjpcInBzZFwiLFwiZXh0XCI6XCJwc2RcIixcIm1pbWVcIjpcImltYWdlL3ZuZC5hZG9iZS5waG90b3Nob3BcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcIjM4NDI1MDUzXCJ9XX0se1widHlwZVwiOlwiemlwXCIsXCJleHRcIjpcInppcFwiLFwibWltZVwiOlwiYXBwbGljYXRpb24vemlwXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6MixcImJ5dGVzXCI6XCI1MDRiXCJ9LHtcInR5cGVcIjpcIm9yXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjoyLFwiZW5kXCI6MyxcImJ5dGVzXCI6XCIwM1wifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjoyLFwiZW5kXCI6MyxcImJ5dGVzXCI6XCIwNVwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjoyLFwiZW5kXCI6MyxcImJ5dGVzXCI6XCIwN1wifV19LHtcInR5cGVcIjpcIm9yXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCIwNFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCIwNlwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCIwOFwifV19LHtcInR5cGVcIjpcIm5vdEVxdWFsXCIsXCJzdGFydFwiOjM2LFwiZW5kXCI6NTgsXCJieXRlc1wiOlwiNzA2NTYxNzA3MDZjNjk2MzYxNzQ2OTZmNmUyZjY1NzA3NTYyMmI3YTY5NzBcIn0se1widHlwZVwiOlwibm90RXF1YWxcIixcInN0YXJ0XCI6MzAsXCJlbmRcIjo1MCxcImJ5dGVzXCI6XCI0ZDQ1NTQ0MTJkNDk0ZTQ2MmY2ZDZmN2E2OTZjNmM2MTJlNzI3MzYxXCJ9XX0se1widHlwZVwiOlwiZXB1YlwiLFwiZXh0XCI6XCJlcHViXCIsXCJtaW1lXCI6XCJhcHBsaWNhdGlvbi9lcHViK3ppcFwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjQsXCJieXRlc1wiOlwiNTA0YjAzMDRcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MzYsXCJlbmRcIjo1OCxcImJ5dGVzXCI6XCI3MDY1NjE3MDcwNmM2OTYzNjE3NDY5NmY2ZTJmNjU3MDc1NjIyYjdhNjk3MFwifV19LHtcInR5cGVcIjpcInhwaVwiLFwiZXh0XCI6XCJ4cGlcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL3gteHBpbnN0YWxsXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCI1MDRiMDMwNFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozMCxcImVuZFwiOjUwLFwiYnl0ZXNcIjpcIjRkNDU1NDQxMmQ0OTRlNDYyZjZkNmY3YTY5NmM2YzYxMmU3MjczNjFcIn1dfSx7XCJ0eXBlXCI6XCJ0YXJcIixcImV4dFwiOlwidGFyXCIsXCJtaW1lXCI6XCJhcHBsaWNhdGlvbi94LXRhclwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MjU3LFwiZW5kXCI6MjYyLFwiYnl0ZXNcIjpcIjc1NzM3NDYxNzJcIn1dfSx7XCJ0eXBlXCI6XCJyYXJcIixcImV4dFwiOlwicmFyXCIsXCJtaW1lXCI6XCJhcHBsaWNhdGlvbi94LXJhci1jb21wcmVzc2VkXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NixcImJ5dGVzXCI6XCI1MjYxNzIyMTFhMDdcIn0se1widHlwZVwiOlwib3JcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjYsXCJlbmRcIjo3LFwiYnl0ZXNcIjpcIjAwXCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjYsXCJlbmRcIjo3LFwiYnl0ZXNcIjpcIjAxXCJ9XX1dfSx7XCJ0eXBlXCI6XCJnelwiLFwiZXh0XCI6XCJnelwiLFwibWltZVwiOlwiYXBwbGljYXRpb24vZ3ppcFwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjMsXCJieXRlc1wiOlwiMWY4YjA4XCJ9XX0se1widHlwZVwiOlwiYnoyXCIsXCJleHRcIjpcImJ6MlwiLFwibWltZVwiOlwiYXBwbGljYXRpb24veC1iemlwMlwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjMsXCJieXRlc1wiOlwiNDI1YTY4XCJ9XX0se1widHlwZVwiOlwiN3pcIixcImV4dFwiOlwiN3pcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL3gtN3otY29tcHJlc3NlZFwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjYsXCJieXRlc1wiOlwiMzc3YWJjYWYyNzFjXCJ9XX0se1widHlwZVwiOlwiZG1nXCIsXCJleHRcIjpcImRtZ1wiLFwibWltZVwiOlwiYXBwbGljYXRpb24veC1hcHBsZS1kaXNraW1hZ2VcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjoyLFwiYnl0ZXNcIjpcIjc4MDFcIn1dfSx7XCJ0eXBlXCI6XCJtb3ZcIixcImV4dFwiOlwibW92XCIsXCJtaW1lXCI6XCJ2aWRlby9xdWlja3RpbWVcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcIm9yXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo0LFwiZW5kXCI6MTIsXCJieXRlc1wiOlwiNjY3NDc5NzA3MTc0MjAyMFwiLFwiZGVzY1wiOlwiZnR5cHF0ICBcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6NCxcImVuZFwiOjgsXCJieXRlc1wiOlwiNmQ2ZjZmNzZcIixcImRlc2NcIjpcIm1vb3ZcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6NCxcImVuZFwiOjgsXCJieXRlc1wiOlwiNjY3MjY1NjVcIixcImRlc2NcIjpcImZyZWVcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6NCxcImVuZFwiOjgsXCJieXRlc1wiOlwiNmQ2NDYxNzRcIixcImRlc2NcIjpcIm1kYXRcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6NCxcImVuZFwiOjgsXCJieXRlc1wiOlwiNzc2OTY0NjVcIixcImRlc2NcIjpcIndpZGVcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6NCxcImVuZFwiOjgsXCJieXRlc1wiOlwiNzA2ZTZmNzRcIixcImRlc2NcIjpcInBub3RcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6NCxcImVuZFwiOjgsXCJieXRlc1wiOlwiNzM2YjY5NzBcIixcImRlc2NcIjpcInNraXBcIn1dfV0sXCJkZXNjXCI6XCJtdXN0IGNvbWUgYmVmb3JlIG1wNFwifSx7XCJ0eXBlXCI6XCJtcDRcIixcImV4dFwiOlwibXA0XCIsXCJtaW1lXCI6XCJ2aWRlby9tcDRcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcIm9yXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCIzMzY3NzAzNVwiLFwiZGVzY1wiOlwiM2dwNVwifSx7XCJ0eXBlXCI6XCJhbmRcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjozLFwiYnl0ZXNcIjpcIjAwMDAwMFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo0LFwiZW5kXCI6OCxcImJ5dGVzXCI6XCI2Njc0Nzk3MFwiLFwiZGVzY1wiOlwiZnR5cFwifSx7XCJ0eXBlXCI6XCJvclwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6OCxcImVuZFwiOjEyLFwiYnl0ZXNcIjpcIjZkNzAzNDMxXCIsXCJkZXNjXCI6XCJtcDQxXCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjgsXCJlbmRcIjoxMixcImJ5dGVzXCI6XCI2ZDcwMzQzMlwiLFwiZGVzY1wiOlwibXA0MlwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo4LFwiZW5kXCI6MTIsXCJieXRlc1wiOlwiNjk3MzZmNmRcIixcImRlc2NcIjpcImlzb21cIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6OCxcImVuZFwiOjEyLFwiYnl0ZXNcIjpcIjY5NzM2ZjMyXCIsXCJkZXNjXCI6XCJpc28yXCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjgsXCJlbmRcIjoxMixcImJ5dGVzXCI6XCI2ZDZkNzAzNFwiLFwiZGVzY1wiOlwibW1wNFwifSx7XCJ0eXBlXCI6XCJhbmRcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjgsXCJlbmRcIjoxMSxcImJ5dGVzXCI6XCI0ZDM0NTZcIixcImRlc2NcIjpcIk00VlwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjoxNixcImVuZFwiOjI0LFwiYnl0ZXNcIjpcIjRkMzQ1NjIwNGQzNDQxMjBcIixcImRlc2NcIjpcIk00ViBNNEEgXCJ9XSxcImRlc2NcIjpcIm00dittNGEsIGV4dGVuc2lvbiBpcyBkZWZhdWx0IG1wNFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo4LFwiZW5kXCI6MTEsXCJieXRlc1wiOlwiNGQzNDU2XCIsXCJkZXNjXCI6XCJNNFZcIixcImV4dFwiOlwibTR2XCIsXCJtaW1lXCI6XCJ2aWRlby9tcDRcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6OCxcImVuZFwiOjExLFwiYnl0ZXNcIjpcIjRkMzQ0MVwiLFwiZGVzY1wiOlwiTTRBXCIsXCJleHRcIjpcIm00YVwiLFwibWltZVwiOlwiYXVkaW8vbXA0XCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjgsXCJlbmRcIjoxMSxcImJ5dGVzXCI6XCI0ZDM0NTBcIixcImRlc2NcIjpcIk00UFwiLFwiZXh0XCI6XCJtcDRcIixcIm1pbWVcIjpcImF1ZGlvL21wNGEtbGF0bVwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo4LFwiZW5kXCI6MTEsXCJieXRlc1wiOlwiNGQzNDQyXCIsXCJkZXNjXCI6XCJNNEJcIixcImV4dFwiOlwibXA0XCIsXCJtaW1lXCI6XCJhdWRpby9tcDRhLWxhdG1cIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6OCxcImVuZFwiOjExLFwiYnl0ZXNcIjpcIjMzNjczMlwiLFwiZGVzY1wiOlwiM2cyXCIsXCJleHRcIjpcIjNnMlwiLFwibWltZVwiOlwidmlkZW8vM2dwcDJcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6OCxcImVuZFwiOjEwLFwiYnl0ZXNcIjpcIjMzNjdcIixcImRlc2NcIjpcIjNnXCIsXCJleHRcIjpcIjNncFwiLFwibWltZVwiOlwidmlkZW8vM2dwcFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo4LFwiZW5kXCI6MTIsXCJieXRlc1wiOlwiNjQ2MTczNjhcIixcImRlc2NcIjpcImRhc2hcIn0se1widHlwZVwiOlwiZGVmYXVsdFwiLFwibWltZVwiOlwidmlkZW8vbXBlZzQtZ2VuZXJpY1wifV19XX1dfV19LHtcInR5cGVcIjpcInJpZmZcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcIjUyNDk0NjQ2XCIsXCJkZXNjXCI6XCJSSUZGXCJ9LHtcInR5cGVcIjpcIm9yXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo4LFwiZW5kXCI6MTEsXCJieXRlc1wiOlwiNDE1NjQ5XCIsXCJkZXNjXCI6XCJBVklcIixcImV4dFwiOlwiYXZpXCIsXCJtaW1lXCI6XCJ2aWRlby94LW1zdmlkZW9cIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6OCxcImVuZFwiOjEyLFwiYnl0ZXNcIjpcIjU3NDE1NjQ1XCIsXCJkZXNjXCI6XCJXQVZFXCIsXCJleHRcIjpcIndhdlwiLFwibWltZVwiOlwiYXVkaW8veC13YXZcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6OCxcImVuZFwiOjEyLFwiYnl0ZXNcIjpcIjUxNGM0MzRkXCIsXCJkZXNjXCI6XCJRTENNXCIsXCJleHRcIjpcInFjcFwiLFwibWltZVwiOlwiYXVkaW8vcWNlbHBcIn1dfV19LHtcInR5cGVcIjpcIm1pZFwiLFwiZXh0XCI6XCJtaWRcIixcIm1pbWVcIjpcImF1ZGlvL21pZGlcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcIjRkNTQ2ODY0XCJ9XX0se1widHlwZVwiOlwibWt2XCIsXCJleHRcIjpcIm1rdlwiLFwibWltZVwiOlwidmlkZW8veC1tYXRyb3NrYVwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjQsXCJieXRlc1wiOlwiMWE0NWRmYTNcIn0se1widHlwZVwiOlwib3JcIixcInNlYXJjaFwiOntcImlkXCI6MSxcInN0YXJ0XCI6NCxcImVuZFwiOjQwOTYsXCJieXRlc1wiOlwiNDI4MlwifSxcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzZWFyY2hfcmVmXCI6MSxcInN0YXJ0XCI6MyxcImVuZFwiOjExLFwiYnl0ZXNcIjpcIjZkNjE3NDcyNmY3MzZiNjFcIixcImRlc2NcIjpcIm1hdHJvc2thXCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzZWFyY2hfcmVmXCI6MSxcInN0YXJ0XCI6MyxcImVuZFwiOjcsXCJieXRlc1wiOlwiNzc2NTYyNmRcIixcImRlc2NcIjpcIldlYm1cIixcImV4dFwiOlwid2VibVwiLFwibWltZVwiOlwidmlkZW8vd2VibVwifV19XX0se1widHlwZVwiOlwid2FzbVwiLFwiZXh0XCI6XCJ3YXNtXCIsXCJtaW1lXCI6XCJhcHBsaWNhdGlvbi93YXNtXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCIwMDYxNzM2ZFwifV19LHtcInR5cGVcIjpcImFzZlwiLFwiZXh0XCI6XCJhc2ZcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL3ZuZC5tcy1hc2ZcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjoxMCxcImJ5dGVzXCI6XCIzMDI2YjI3NThlNjZjZjExYTZkOVwifSx7XCJ0eXBlXCI6XCJvclwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiYW5kXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJjb250YWluc1wiLFwic3RhcnRcIjoxMCxcImVuZFwiOjEwMjQsXCJieXRlc1wiOlwiNDA5ZTY5Zjg0ZDViY2YxMWE4ZmQwMDgwNWY1YzQ0MmJcIn0se1widHlwZVwiOlwiY29udGFpbnNcIixcInN0YXJ0XCI6MTAsXCJlbmRcIjoxMDI0LFwiYnl0ZXNcIjpcImMwZWYxOWJjNGQ1YmNmMTFhOGZkMDA4MDVmNWM0NDJiXCJ9XSxcImV4dFwiOlwid212XCIsXCJtaW1lXCI6XCJ2aWRlby94LW1zLWFzZlwifSx7XCJ0eXBlXCI6XCJjb250YWluc1wiLFwic3RhcnRcIjoxMCxcImVuZFwiOjEwMjQsXCJieXRlc1wiOlwiNDA5ZTY5Zjg0ZDViY2YxMWE4ZmQwMDgwNWY1YzQ0MmJcIixcImV4dFwiOlwid21hXCIsXCJtaW1lXCI6XCJhdWRpby94LW1zLXdtYVwifSx7XCJ0eXBlXCI6XCJjb250YWluc1wiLFwic3RhcnRcIjoxMCxcImVuZFwiOjEwMjQsXCJieXRlc1wiOlwiYzBlZjE5YmM0ZDViY2YxMWE4ZmQwMDgwNWY1YzQ0MmJcIixcImV4dFwiOlwid212XCIsXCJtaW1lXCI6XCJ2aWRlby94LW1zLXdtdlwifSx7XCJ0eXBlXCI6XCJkZWZhdWx0XCIsXCJkZXNjXCI6XCJmYWxsYmFjayB0byBnZW5lcmljIGFzZlwifV19XX0se1widHlwZVwiOlwibXBnXCIsXCJleHRcIjpcIm1wZ1wiLFwibWltZVwiOlwidmlkZW8vbXBlZ1wiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjMsXCJieXRlc1wiOlwiMDAwMDAxXCJ9LHtcInR5cGVcIjpcIm9yXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiMFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiMVwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiMlwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiM1wifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiNFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiNVwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiNlwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiN1wifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiOFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiOVwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiYVwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiYlwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiY1wifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiZFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiZVwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjozLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCJiZlwifV19XX0se1widHlwZVwiOlwibXAzXCIsXCJleHRcIjpcIm1wM1wiLFwibWltZVwiOlwiYXVkaW8vbXBlZ1wiLFwicnVsZXNcIjpbe1widHlwZVwiOlwib3JcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjozLFwiYnl0ZXNcIjpcIjQ5NDQzM1wifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6MixcImJ5dGVzXCI6XCJmZmZiXCJ9XX1dfSx7XCJ0eXBlXCI6XCJvcHVzXCIsXCJleHRcIjpcIm9wdXNcIixcIm1pbWVcIjpcImF1ZGlvL29wdXNcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjI4LFwiZW5kXCI6MzYsXCJieXRlc1wiOlwiNGY3MDc1NzM0ODY1NjE2NFwifV19LHtcInR5cGVcIjpcIm9nZ1wiLFwiZXh0XCI6XCJvZ2dcIixcIm1pbWVcIjpcImF1ZGlvL29nZ1wiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjQsXCJieXRlc1wiOlwiNGY2NzY3NTNcIixcImRlc2NcIjpcIk9nZ1NcIn0se1widHlwZVwiOlwib3JcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjI4LFwiZW5kXCI6MzUsXCJieXRlc1wiOlwiODA3NDY4NjU2ZjcyNjFcIixcImRlc2NcIjpcIsKAdGhlb3JhXCIsXCJleHRcIjpcIm9ndlwiLFwibWltZVwiOlwidmlkZW8vb2dnXCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjI4LFwiZW5kXCI6MzUsXCJieXRlc1wiOlwiMDE3NjY5NjQ2NTZmMDBcIixcImRlc2NcIjpcIlxcXFx1MDAwMXZpZGVvXFxcXHUwMDAwXCIsXCJleHRcIjpcIm9nbVwiLFwibWltZVwiOlwidmlkZW8vb2dnXCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjI4LFwiZW5kXCI6MzMsXCJieXRlc1wiOlwiN2Y0NjRjNDE0M1wiLFwiZGVzY1wiOlwif0ZMQUNcIixcImV4dFwiOlwib2dhXCIsXCJtaW1lXCI6XCJhdWRpby9vZ2dcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MjgsXCJlbmRcIjozNSxcImJ5dGVzXCI6XCI1MzcwNjU2NTc4MjAyMFwiLFwiZGVzY1wiOlwiU3BlZXggIFwiLFwiZXh0XCI6XCJzcHhcIixcIm1pbWVcIjpcImF1ZGlvL29nZ1wifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjoyOCxcImVuZFwiOjM1LFwiYnl0ZXNcIjpcIjAxNzY2ZjcyNjI2OTczXCIsXCJkZXNjXCI6XCJcXFxcdTAwMDF2b3JiaXNcIixcImV4dFwiOlwib2dnXCIsXCJtaW1lXCI6XCJhdWRpby9vZ2dcIn0se1widHlwZVwiOlwiZGVmYXVsdFwiLFwiZXh0XCI6XCJvZ3hcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL29nZ1wifV19LHtcInR5cGVcIjpcIm5vdEVxdWFsXCIsXCJzdGFydFwiOjI4LFwiZW5kXCI6MzYsXCJieXRlc1wiOlwiNGY3MDc1NzM0ODY1NjE2NFwifV19LHtcInR5cGVcIjpcImZsYWNcIixcImV4dFwiOlwiZmxhY1wiLFwibWltZVwiOlwiYXVkaW8veC1mbGFjXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCI2NjRjNjE0M1wifV19LHtcInR5cGVcIjpcImFwZVwiLFwiZXh0XCI6XCJhcGVcIixcIm1pbWVcIjpcImF1ZGlvL2FwZVwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjQsXCJieXRlc1wiOlwiNGQ0MTQzMjBcIn1dfSx7XCJ0eXBlXCI6XCJ3dlwiLFwiZXh0XCI6XCJ3dlwiLFwibWltZVwiOlwiYXVkaW8vd2F2cGFja1wiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjQsXCJieXRlc1wiOlwiNzc3NjcwNmJcIn1dfSx7XCJ0eXBlXCI6XCJhbXJcIixcImV4dFwiOlwiYW1yXCIsXCJtaW1lXCI6XCJhdWRpby9hbXJcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo2LFwiYnl0ZXNcIjpcIjIzMjE0MTRkNTIwYVwifV19LHtcInR5cGVcIjpcInBkZlwiLFwiZXh0XCI6XCJwZGZcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL3BkZlwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjQsXCJieXRlc1wiOlwiMjU1MDQ0NDZcIn1dfSx7XCJ0eXBlXCI6XCJleGVcIixcImV4dFwiOlwiZXhlXCIsXCJtaW1lXCI6XCJhcHBsaWNhdGlvbi94LW1zZG93bmxvYWRcIixcImlhbmFcIjpcImFwcGxpY2F0aW9uL3ZuZC5taWNyb3NvZnQucG9ydGFibGUtZXhlY3V0YWJsZVwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwib3JcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjoyLFwiYnl0ZXNcIjpcIjRkNWFcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjIsXCJieXRlc1wiOlwiNGQ3YVwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6MixcImJ5dGVzXCI6XCI2ZDdhXCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjoyLFwiYnl0ZXNcIjpcIjZkNWFcIn1dfV19LHtcInR5cGVcIjpcInN3ZlwiLFwiZXh0XCI6XCJzd2ZcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoXCIsXCJpYW5hXCI6XCJhcHBsaWNhdGlvbi92bmQuYWRvYmUuZmxhc2gubW92aWVcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcIm9yXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6MSxcImJ5dGVzXCI6XCI0M1wifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6MSxcImJ5dGVzXCI6XCI0NlwifV19LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjEsXCJlbmRcIjozLFwiYnl0ZXNcIjpcIjU3NTNcIn1dfSx7XCJ0eXBlXCI6XCJydGZcIixcImV4dFwiOlwicnRmXCIsXCJtaW1lXCI6XCJhcHBsaWNhdGlvbi9ydGZcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo1LFwiYnl0ZXNcIjpcIjdiNWM3Mjc0NjZcIn1dfSx7XCJ0eXBlXCI6XCJ3b2ZmXCIsXCJleHRcIjpcIndvZmZcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL2ZvbnQtd29mZlwiLFwiaWFuYVwiOlwiZm9udC93b2ZmXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCI3NzRmNDY0NlwifSx7XCJ0eXBlXCI6XCJvclwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6NCxcImVuZFwiOjgsXCJieXRlc1wiOlwiMDAwMTAwMDBcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6NCxcImVuZFwiOjgsXCJieXRlc1wiOlwiNGY1NDU0NGZcIn1dfV19LHtcInR5cGVcIjpcIndvZmYyXCIsXCJleHRcIjpcIndvZmYyXCIsXCJtaW1lXCI6XCJhcHBsaWNhdGlvbi9mb250LXdvZmZcIixcImlhbmFcIjpcImZvbnQvd29mZjJcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcIjc3NGY0NjMyXCJ9LHtcInR5cGVcIjpcIm9yXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo0LFwiZW5kXCI6OCxcImJ5dGVzXCI6XCIwMDAxMDAwMFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo0LFwiZW5kXCI6OCxcImJ5dGVzXCI6XCI0ZjU0NTQ0ZlwifV19XX0se1widHlwZVwiOlwiZW90XCIsXCJleHRcIjpcImVvdFwiLFwibWltZVwiOlwiYXBwbGljYXRpb24vdm5kLm1zLWZvbnRvYmplY3RcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjM0LFwiZW5kXCI6MzYsXCJieXRlc1wiOlwiNGM1MFwifSx7XCJ0eXBlXCI6XCJvclwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6OCxcImVuZFwiOjExLFwiYnl0ZXNcIjpcIjAwMDAwMVwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo4LFwiZW5kXCI6MTEsXCJieXRlc1wiOlwiMDEwMDAyXCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjgsXCJlbmRcIjoxMSxcImJ5dGVzXCI6XCIwMjAwMDJcIn1dfV19LHtcInR5cGVcIjpcInR0ZlwiLFwiZXh0XCI6XCJ0dGZcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL2ZvbnQtc2ZudFwiLFwiaWFuYVwiOlwiZm9udC90dGZcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo1LFwiYnl0ZXNcIjpcIjAwMDEwMDAwMDBcIn1dfSx7XCJ0eXBlXCI6XCJvdGZcIixcImV4dFwiOlwib3RmXCIsXCJtaW1lXCI6XCJhcHBsaWNhdGlvbi9mb250LXNmbnRcIixcImlhbmFcIjpcImZvbnQvb3RmXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NSxcImJ5dGVzXCI6XCI0ZjU0NTQ0ZjAwXCJ9XX0se1widHlwZVwiOlwiaWNvXCIsXCJleHRcIjpcImljb1wiLFwibWltZVwiOlwiaW1hZ2UveC1pY29uXCIsXCJpYW5hXCI6XCJpbWFnZS92bmQubWljcm9zb2Z0Lmljb25cIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcIjAwMDAwMTAwXCJ9XX0se1widHlwZVwiOlwiY3VyXCIsXCJleHRcIjpcImN1clwiLFwibWltZVwiOlwiaW1hZ2UveC1pY29uXCIsXCJpYW5hXCI6XCJpbWFnZS92bmQubWljcm9zb2Z0Lmljb25cIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcIjAwMDAwMjAwXCJ9XX0se1widHlwZVwiOlwiZmx2XCIsXCJleHRcIjpcImZsdlwiLFwibWltZVwiOlwidmlkZW8veC1mbHZcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcIjQ2NGM1NjAxXCJ9XX0se1widHlwZVwiOlwicHNcIixcImV4dFwiOlwicHNcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL3Bvc3RzY3JpcHRcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjoyLFwiYnl0ZXNcIjpcIjI1MjFcIn1dfSx7XCJ0eXBlXCI6XCJ4elwiLFwiZXh0XCI6XCJ4elwiLFwibWltZVwiOlwiYXBwbGljYXRpb24veC14elwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjYsXCJieXRlc1wiOlwiZmQzNzdhNTg1YTAwXCJ9XX0se1widHlwZVwiOlwic3FsaXRlXCIsXCJleHRcIjpcInNxbGl0ZVwiLFwibWltZVwiOlwiYXBwbGljYXRpb24veC1zcWxpdGUzXCIsXCJpYW5hXCI6XCJhcHBsaWNhdGlvbi92bmQuc3FsaXRlM1wiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjQsXCJieXRlc1wiOlwiNTM1MTRjNjlcIn1dfSx7XCJ0eXBlXCI6XCJuZXNcIixcImV4dFwiOlwibmVzXCIsXCJtaW1lXCI6XCJhcHBsaWNhdGlvbi94LW5pbnRlbmRvLW5lcy1yb21cIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcIjRlNDU1MzFhXCJ9XX0se1widHlwZVwiOlwiZGV4XCIsXCJleHRcIjpcImRleFwiLFwibWltZVwiOlwiYXBwbGljYXRpb24veC1kZXhcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcIjY0NjU3ODBhXCJ9XX0se1widHlwZVwiOlwiY3J4XCIsXCJleHRcIjpcImNyeFwiLFwibWltZVwiOlwiYXBwbGljYXRpb24veC1nb29nbGUtY2hyb21lLWV4dGVuc2lvblwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjQsXCJieXRlc1wiOlwiNDM3MjMyMzRcIn1dfSx7XCJ0eXBlXCI6XCJlbGZcIixcImV4dFwiOlwiZWxmXCIsXCJtaW1lXCI6XCJhcHBsaWNhdGlvbi94LWV4ZWN1dGFibGVcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcIjdmNDU0YzQ2XCJ9XX0se1widHlwZVwiOlwiY2FiXCIsXCJleHRcIjpcImNhYlwiLFwibWltZVwiOlwiYXBwbGljYXRpb24vdm5kLm1zLWNhYi1jb21wcmVzc2VkXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJvclwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjQsXCJieXRlc1wiOlwiNGQ1MzQzNDZcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjQsXCJieXRlc1wiOlwiNDk1MzYzMjhcIn1dfV19LHtcInR5cGVcIjpcImRlYlwiLFwiZXh0XCI6XCJkZWJcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL3gtZGViXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6MjEsXCJieXRlc1wiOlwiMjEzYzYxNzI2MzY4M2UwYTY0NjU2MjY5NjE2ZTJkNjI2OTZlNjE3Mjc5XCJ9XX0se1widHlwZVwiOlwiYXJcIixcImV4dFwiOlwiYXJcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL3gtdW5peC1hcmNoaXZlXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NyxcImJ5dGVzXCI6XCIyMTNjNjE3MjYzNjgzZVwifSx7XCJ0eXBlXCI6XCJub3RFcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6MjEsXCJieXRlc1wiOlwiMjEzYzYxNzI2MzY4M2UwYTY0NjU2MjY5NjE2ZTJkNjI2OTZlNjE3Mjc5XCJ9XX0se1widHlwZVwiOlwicnBtXCIsXCJleHRcIjpcInJwbVwiLFwibWltZVwiOlwiYXBwbGljYXRpb24veC1ycG1cIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcImVkYWJlZWRiXCJ9XX0se1widHlwZVwiOlwiWlwiLFwiZXh0XCI6XCJaXCIsXCJtaW1lXCI6XCJhcHBsaWNhdGlvbi94LWNvbXByZXNzXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJvclwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjIsXCJieXRlc1wiOlwiMWZhMFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6MixcImJ5dGVzXCI6XCIxZjlkXCJ9XX1dfSx7XCJ0eXBlXCI6XCJselwiLFwiZXh0XCI6XCJselwiLFwibWltZVwiOlwiYXBwbGljYXRpb24veC1semlwXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NCxcImJ5dGVzXCI6XCI0YzVhNDk1MFwifV19LHtcInR5cGVcIjpcIm1zaVwiLFwiZXh0XCI6XCJtc2lcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL3gtbXNpXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6OCxcImJ5dGVzXCI6XCJkMGNmMTFlMGExYjExYWUxXCJ9XX0se1widHlwZVwiOlwibXhmXCIsXCJleHRcIjpcIm14ZlwiLFwibWltZVwiOlwiYXBwbGljYXRpb24vbXhmXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6MTQsXCJieXRlc1wiOlwiMDYwZTJiMzQwMjA1MDEwMTBkMDEwMjAxMDEwMlwifV19LHtcInR5cGVcIjpcIm10c1wiLFwiZXh0XCI6XCJtdHNcIixcIm1pbWVcIjpcInZpZGVvL21wMnRcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImFuZFwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6NCxcImVuZFwiOjUsXCJieXRlc1wiOlwiNDdcIn0se1widHlwZVwiOlwib3JcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjE5MixcImVuZFwiOjE5MyxcImJ5dGVzXCI6XCI0N1wifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjoxOTYsXCJlbmRcIjoxOTcsXCJieXRlc1wiOlwiNDdcIn1dfV19XX0se1widHlwZVwiOlwiYmxlbmRcIixcImV4dFwiOlwiYmxlbmRcIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL3gtYmxlbmRlclwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjcsXCJieXRlc1wiOlwiNDI0YzQ1NGU0NDQ1NTJcIixcImRlc2NcIjpcIkJMRU5ERVJcIn1dfSx7XCJ0eXBlXCI6XCJicGdcIixcImV4dFwiOlwiYnBnXCIsXCJtaW1lXCI6XCJpbWFnZS9icGdcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcIjQyNTA0N2ZiXCJ9XX0se1widHlwZVwiOlwianBlZy0yMDAwXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJhbmRcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjoxMixcImJ5dGVzXCI6XCIwMDAwMDAwYzZhNTAyMDIwMGQwYTg3MGFcIn0se1widHlwZVwiOlwib3JcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjIwLFwiZW5kXCI6MjQsXCJieXRlc1wiOlwiNmE3MDMyMjBcIixcImV4dFwiOlwianAyXCIsXCJtaW1lXCI6XCJpbWFnZS9qcDJcIn0se1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MjAsXCJlbmRcIjoyNCxcImJ5dGVzXCI6XCI2YTcwNzgyMFwiLFwiZXh0XCI6XCJqcHhcIixcIm1pbWVcIjpcImltYWdlL2pweFwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjoyMCxcImVuZFwiOjI0LFwiYnl0ZXNcIjpcIjZhNzA2ZDIwXCIsXCJleHRcIjpcImpwbVwiLFwibWltZVwiOlwiaW1hZ2UvanBtXCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjIwLFwiZW5kXCI6MjQsXCJieXRlc1wiOlwiNmQ2YTcwMzJcIixcImV4dFwiOlwibWoyXCIsXCJtaW1lXCI6XCJpbWFnZS9tajJcIn1dfV19XX0se1widHlwZVwiOlwiYWlmXCIsXCJleHRcIjpcImFpZlwiLFwibWltZVwiOlwiYXVkaW8vYWlmZlwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjQsXCJieXRlc1wiOlwiNDY0ZjUyNGRcIn1dfSx7XCJ0eXBlXCI6XCJ4bWxcIixcImV4dFwiOlwieG1sXCIsXCJtaW1lXCI6XCJhcHBsaWNhdGlvbi94bWxcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo2LFwiYnl0ZXNcIjpcIjNjM2Y3ODZkNmMyMFwiLFwiZGVzY1wiOlwiPD94bWwgXCJ9XX0se1widHlwZVwiOlwic3ZnXCIsXCJleHRcIjpcInN2Z1wiLFwibWltZVwiOlwiaW1hZ2Uvc3ZnK3htbFwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiY29udGFpbnNcIixcImJ5dGVzXCI6XCIzYzczNzY2N1wifV19LHtcInR5cGVcIjpcIm1vYmlcIixcImV4dFwiOlwibW9iaVwiLFwibWltZVwiOlwiYXBwbGljYXRpb24veC1tb2JpcG9ja2V0LWVib29rXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo2MCxcImVuZFwiOjY4LFwiYnl0ZXNcIjpcIjQyNGY0ZjRiNGQ0ZjQyNDlcIn1dfSx7XCJ0eXBlXCI6XCJoZWljXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJhbmRcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjQsXCJlbmRcIjo4LFwiYnl0ZXNcIjpcIjY2NzQ3OTcwXCJ9LHtcInR5cGVcIjpcIm9yXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo4LFwiZW5kXCI6MTIsXCJieXRlc1wiOlwiNmQ2OTY2MzFcIixcImV4dFwiOlwiaGVpY1wiLFwibWltZVwiOlwiaW1hZ2UvaGVpZlwifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo4LFwiZW5kXCI6MTIsXCJieXRlc1wiOlwiNmQ3MzY2MzFcIixcImV4dFwiOlwiaGVpY1wiLFwibWltZVwiOlwiaW1hZ2UvaGVpZi1zZXF1ZW5jZVwifSx7XCJ0eXBlXCI6XCJvclwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6OCxcImVuZFwiOjEyLFwiYnl0ZXNcIjpcIjY4NjU2OTYzXCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjgsXCJlbmRcIjoxMixcImJ5dGVzXCI6XCI2ODY1Njk3OFwifV0sXCJleHRcIjpcImhlaWNcIixcIm1pbWVcIjpcImltYWdlL2hlaWNcIn0se1widHlwZVwiOlwib3JcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjgsXCJlbmRcIjoxMixcImJ5dGVzXCI6XCI2ODY1NzY2M1wifSx7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjo4LFwiZW5kXCI6MTIsXCJieXRlc1wiOlwiNjg2NTc2NzhcIn1dLFwiZXh0XCI6XCJoZWljXCIsXCJtaW1lXCI6XCJpbWFnZS9oZWljLXNlcXVlbmNlXCJ9XX1dfV19LHtcInR5cGVcIjpcImt0eFwiLFwiZXh0XCI6XCJrdHhcIixcIm1pbWVcIjpcImltYWdlL2t0eFwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjEyLFwiYnl0ZXNcIjpcImFiNGI1NDU4MjAzMTMxYmIwZDBhMWEwYVwifV19LHtcInR5cGVcIjpcImRjbVwiLFwiZXh0XCI6XCJkY21cIixcIm1pbWVcIjpcImFwcGxpY2F0aW9uL2RpY29tXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjoxMjgsXCJlbmRcIjoxMzIsXCJieXRlc1wiOlwiNDQ0OTQzNGRcIn1dfSx7XCJ0eXBlXCI6XCJtcGNcIixcImV4dFwiOlwibXBjXCIsXCJtaW1lXCI6XCJhdWRpby94LW11c2VwYWNrXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJvclwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjMsXCJieXRlc1wiOlwiNGQ1MDJiXCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcIjRkNTA0MzRiXCJ9XX1dfSx7XCJ0eXBlXCI6XCJpY3NcIixcImV4dFwiOlwiaWNzXCIsXCJtaW1lXCI6XCJ0ZXh0L2NhbGVuZGFyXCIsXCJydWxlc1wiOlt7XCJ0eXBlXCI6XCJlcXVhbFwiLFwic3RhcnRcIjowLFwiZW5kXCI6NixcImJ5dGVzXCI6XCI0MjQ1NDc0OTRlM2FcIn1dfSx7XCJ0eXBlXCI6XCJnbGJcIixcImV4dFwiOlwiZ2xiXCIsXCJtaW1lXCI6XCJtb2RlbC9nbHRmLWJpbmFyeVwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwiZXF1YWxcIixcInN0YXJ0XCI6MCxcImVuZFwiOjgsXCJieXRlc1wiOlwiNjc2YzU0NDYwMjAwMDAwMFwifV19LHtcInR5cGVcIjpcInBjYXBcIixcImV4dFwiOlwicGNhcFwiLFwibWltZVwiOlwiYXBwbGljYXRpb24vdm5kLnRjcGR1bXAucGNhcFwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwib3JcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcImQ0YzNiMmExXCJ9LHtcInR5cGVcIjpcImVxdWFsXCIsXCJzdGFydFwiOjAsXCJlbmRcIjo0LFwiYnl0ZXNcIjpcImExYjJjM2Q0XCJ9XX1dfSx7XCJ0eXBlXCI6XCJodG1sXCIsXCJleHRcIjpcImh0bWxcIixcIm1pbWVcIjpcInRleHQvaHRtbFwiLFwicnVsZXNcIjpbe1widHlwZVwiOlwib3JcIixcInJ1bGVzXCI6W3tcInR5cGVcIjpcImNvbnRhaW5zXCIsXCJieXRlc1wiOlwiM2M2ODc0NmQ2Y1wifSx7XCJ0eXBlXCI6XCJjb250YWluc1wiLFwiYnl0ZXNcIjpcIjNjMDA2ODAwNzQwMDZkMDA2YzAwXCJ9XX1dfV0nKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXtjb25zdCBpPW4oMTk1KSxyPW4oNSksYT1uKDIxNCksbz1uKDIzNCkscz1uKDcyKSxjPU9iamVjdC5hc3NpZ24oe30scyksdT1uKDIzNSksbD1uKDIzNyk7Yy5yZWdleFNvbmdMaW5rcz1sKHtzdHJpY3Q6ITF9KSxjLnJlZ2V4U29uZ0ZlYXRzPS9bKFtdKigoZnRcXC4/fGZlYXRcXC4/fGZlYXR1cmluZylbXFxzXSsoKD8hKFxccytbLShbKVxcXV0rKSlbXilcXF1dKSspXFxzKlspXFxdXSooW1xcc10rWy0oW10rfCQpL2ksYy5oZXJpdGFibGVTb25nVGFncz1bXCJUQUxCXCIsXCJUQ09NXCIsXCJUQ09OXCIsXCJUQ09QXCIsXCJUREFUXCIsXCJURVhUXCIsXCJUSVQxXCIsXCJUSVQzXCIsXCJUTEFOXCIsXCJUT0FMXCIsXCJUT0xZXCIsXCJUT1BFXCIsXCJUT1JZXCIsXCJUUEUyXCIsXCJUUEUzXCIsXCJUUEU0XCIsXCJBUElDXCJdLGMuZ2V0RmlsZUluZm89YXN5bmMgZnVuY3Rpb24oKXtjb25zdCB0PWF3YWl0IHMuZ2V0RmlsZUluZm8uYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVyblwibXBnYVwiPT10LmV4dCYmKHQuZXh0PVwibXAzXCIpLHR9LGMuaXNWYWxpZFNvbmdBdWRpb0xpbms9ZnVuY3Rpb24odCl7cmV0dXJuIShcInN0cmluZ1wiIT10eXBlb2YgdHx8IXQubWF0Y2goL1xcLihtcDN8bXBlZ3xtcGdhKSQvaSkpJiZ0aGlzLmlzVmFsaWRGaWxlTGluayh0LHthY3Rpb246XCJhdWRpb1wifSl9LGMuaXNWYWxpZFNvbmdDb3Zlckxpbms9ZnVuY3Rpb24odCl7cmV0dXJuIShcInN0cmluZ1wiIT10eXBlb2YgdHx8IXQubWF0Y2goL1xcLihqcGU/Z3xwbmcpJC9pKSkmJnRoaXMuaXNWYWxpZEZpbGVMaW5rKHQse2FjdGlvbjpcImNvdmVyXCJ9KX0sYy5iZWF1dGlmeVNvbmdUaXRsZT1mdW5jdGlvbih0KXtpZihcInN0cmluZ1wiIT10eXBlb2YgdClyZXR1cm5cIlwiO2lmKCEodD11KHQpLnJlcGxhY2UoL1vigJPigJRdKy9nLFwiLVwiKS5yZXBsYWNlKHRoaXMucmVnZXhTb25nTGlua3MsXCJcIikucmVwbGFjZSgvW1xcc+GFoF0rL2csXCIgXCIpLnJlcGxhY2UoLyhbKFtdKVxccysvZyxcIiQxXCIpLnJlcGxhY2UoL1xccysoWylcXF1dKS9nLFwiJDFcIikudG9Mb3dlckNhc2UoKSkubWF0Y2goXCIgLSBcIikpcmV0dXJuXCJcIjtjb25zdCBlPXQuc3BsaXQoXCIgLSBcIik7bGV0IG49ZVswXS5zcGxpdCgvLFtcXHNdKi8pO2NvbnN0IGk9blswXTtpZihuLnNoaWZ0KCksIWkpcmV0dXJuXCJcIjtjb25zdCByPXQubWF0Y2godGhpcy5yZWdleFNvbmdGZWF0cyk7bGV0IGE9KHI/clsxXTpcIlwiKS5yZXBsYWNlKC8sKFteXFxzXSkvLFwiLCAkMVwiKS50cmltKCk7cmV0dXJuIHQ9KHQ9YCR7aX0gLSAke2VbMV19YCkucmVwbGFjZSh0aGlzLnJlZ2V4U29uZ0ZlYXRzLFwiJDVcIiksbj1uLm1hcCh0PT50LnRyaW0oKSksbi5sZW5ndGgmJihhPWE/W2FdLmNvbmNhdChuKS5qb2luKFwiLCBcIik6YGZ0LiAke24uam9pbihcIiwgXCIpfWApLGEmJih0Kz1gICgke2F9KWApLHQ9dC5yZXBsYWNlKC8oZmVhdHxmdHxmZWF0dXJpbmcpKFxcLj9cXHMrKS9pLFwiZmVhdCQyXCIpLnJlcGxhY2UoLyhmZWF0KShcXHMrKS8sXCIkMS4kMlwiKS5yZXBsYWNlKC9cXHMrL2csXCIgXCIpLnNwbGl0KFwiIFwiKS5tYXAodD0+dD90WzBdLnRvVXBwZXJDYXNlKCkrdC5zbGljZSgxKTp0KS5qb2luKFwiIFwiKS50cmltKCl9LGMuaXNTb25nVGl0bGU9ZnVuY3Rpb24odCxlPXt9KXtyZXR1cm4oZS5iZWF1dGlmeXx8dm9pZCAwPT09ZS5iZWF1dGlmeSkmJih0PXRoaXMuYmVhdXRpZnlTb25nVGl0bGUodCkpLCEoXCJzdHJpbmdcIiE9dHlwZW9mIHR8fHQubGVuZ3RoPjUwMCkmJi8uXFxzKy1cXHMrLi8udGVzdCh0KX0sYy5nZXRTb25nTmFtZT1mdW5jdGlvbih0LGU9e30pe3JldHVybihlLmJlYXV0aWZ5fHx2b2lkIDA9PT1lLmJlYXV0aWZ5KSYmKHQ9dGhpcy5iZWF1dGlmeVNvbmdUaXRsZSh0KSksdGhpcy5pc1NvbmdUaXRsZSh0LHtiZWF1dGlmeTohMX0pP3QucmVwbGFjZSh0aGlzLnJlZ2V4U29uZ0ZlYXRzLFwiJDVcIikuc3BsaXQoXCIgLSBcIilbMV0uc3BsaXQoL1tbKF0vKVswXS50cmltKCk6XCJcIn0sYy5nZXRTb25nU2ltaWxhcml0eT1mdW5jdGlvbih0LGUpe2lmKHQ9dGhpcy5iZWF1dGlmeVNvbmdUaXRsZSh0KS50b0xvd2VyQ2FzZSgpLGU9dGhpcy5iZWF1dGlmeVNvbmdUaXRsZShlKS50b0xvd2VyQ2FzZSgpLCF0fHwhZSlyZXR1cm4gMDtjb25zdCBuPW8uY29tcGFyZVR3b1N0cmluZ3ModCxlKTtyZXR1cm4gdD10aGlzLmdldFNvbmdOYW1lKHQse2JlYXV0aWZ5OiExfSksZT10aGlzLmdldFNvbmdOYW1lKGUse2JlYXV0aWZ5OiExfSksKG4rby5jb21wYXJlVHdvU3RyaW5ncyh0LGUpKS8yfSxjLmNyZWF0ZVNvbmdUYWdzPWZ1bmN0aW9uKHQ9e30pe2NvbnN0IGU9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJmdWxsVGl0bGVcIix7ZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm5gJHt0aGlzLlRQRTF8fFwiXCJ9IC0gJHt0aGlzLlRJVDJ8fFwiXCJ9YH0sc2V0OmZ1bmN0aW9uKHQpe2NvbnN0IGU9Yy5iZWF1dGlmeVNvbmdUaXRsZSh0KTtpZighZSlyZXR1cm4gZGVsZXRlIHRoaXMuVFBFMSx2b2lkIGRlbGV0ZSB0aGlzLlRJVDI7Y29uc3Qgbj1lLnNwbGl0KFwiIC0gXCIpO3RoaXMuVFBFMT1uWzBdLHRoaXMuVElUMj1uWzFdfX0pO2ZvcihsZXQgbiBpbiB0KWVbbl09dFtuXTtyZXR1cm4gZX0sYy5tZXJnZVNvbmdUYWdzPWZ1bmN0aW9uKHQsZSl7dD10aGlzLmNyZWF0ZVNvbmdUYWdzKHQpLGU9dGhpcy5jcmVhdGVTb25nVGFncyhlKTtjb25zdCBuPXQuZnVsbFRpdGxlLGk9ZS5mdWxsVGl0bGUscj1PYmplY3QuYXNzaWduKHt9LHQse2Z1bGxUaXRsZTpufSksbz1PYmplY3QuYXNzaWduKHt9LGUse2Z1bGxUaXRsZTppfSkscz1PYmplY3QuYXNzaWduKHt9LGEocix0aGlzLmhlcml0YWJsZVNvbmdUYWdzKSxvKTtyZXR1cm4gdGhpcy5jcmVhdGVTb25nVGFncyhzKX0sYy5wcmVwYXJlU29uZ1RhZ3NUb0dldD1hc3luYyBmdW5jdGlvbih0KXtyZXR1cm4hKHQ9dGhpcy5jcmVhdGVTb25nVGFncyh0KSkuQVBJQ3x8XCJvYmplY3RcIiE9dHlwZW9mIHQuQVBJQ3x8dC5BUElDIGluc3RhbmNlb2YgZXx8KHQuQVBJQz10LkFQSUMuaW1hZ2VCdWZmZXIpLHR9LGMucHJlcGFyZVNvbmdUYWdzVG9TZXQ9YXN5bmMgZnVuY3Rpb24odCl7cmV0dXJuKHQ9dGhpcy5jcmVhdGVTb25nVGFncyh0KSkuaW1hZ2UmJih0LkFQSUM9dC5pbWFnZSxkZWxldGUgdC5pbWFnZSksdGhpcy5pc0ZpbGVSZWFkU3RyZWFtKHQuQVBJQykmJih0LkFQSUMuZGVzdHJveSgpLHQuQVBJQz10LkFQSUMucGF0aCksXCJmdW5jdGlvblwiPT10eXBlb2YgQmxvYiYmdC5BUElDIGluc3RhbmNlb2YgQmxvYiYmKHQuQVBJQz1hd2FpdCB0aGlzLmJsb2JUb0J1ZmZlcih0LkFQSUMpKSx0fSxjLnByZXBhcmVTb25nQmxvYkZpbGU9YXN5bmMgZnVuY3Rpb24odCxlKXtjb25zdCBuPXt0eXBlOmUudHlwZX07cmV0dXJuIGUgaW5zdGFuY2VvZiBGaWxlP25ldyBGaWxlKFt0XSxlLm5hbWUsbik6bmV3IEJsb2IoW3RdLG4pfSxjLmdldFNvbmdUYWdzPWFzeW5jIGZ1bmN0aW9uKHQpe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIEJsb2ImJnQgaW5zdGFuY2VvZiBCbG9iJiYodD1hd2FpdCB0aGlzLmJsb2JUb0J1ZmZlcih0KSksdCBpbnN0YW5jZW9mIGUpe2NvbnN0IGU9aS5yZWFkKHQpO3JldHVybiBhd2FpdCB0aGlzLnByZXBhcmVTb25nVGFnc1RvR2V0KGU/ZS5yYXc6e30pfXJldHVybiBuZXcgUHJvbWlzZSgoZSxuKT0+e2kucmVhZCh0LnBhdGh8fHQsYXN5bmModCxpKT0+e2lmKHQpcmV0dXJuIG4odCk7ZShhd2FpdCB0aGlzLnByZXBhcmVTb25nVGFnc1RvR2V0KGkucmF3fHx7fSkpfSl9KX0sYy5zZXRTb25nVGFncz1hc3luYyBmdW5jdGlvbih0LG4pe2lmKG49YXdhaXQgdGhpcy5wcmVwYXJlU29uZ1RhZ3NUb1NldChuKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBCbG9iJiZ0IGluc3RhbmNlb2YgQmxvYil7Y29uc3QgZT1pLndyaXRlKG4sYXdhaXQgdGhpcy5ibG9iVG9CdWZmZXIodCkpO3JldHVybiB0aGlzLnByZXBhcmVTb25nQmxvYkZpbGUoZSx0KX1yZXR1cm4gdCBpbnN0YW5jZW9mIGU/aS53cml0ZShuLHQpOm5ldyBQcm9taXNlKChlLGEpPT57aS53cml0ZShuLHQucGF0aHx8dCxuPT57aWYobilyZXR1cm4gYShuKTt0LnBhdGgmJih0LmRlc3Ryb3koKSx0PXIuY3JlYXRlUmVhZFN0cmVhbSh0LnBhdGgpKSxlKHQpfSl9KX0sYy5hZGRTb25nVGFncz1hc3luYyBmdW5jdGlvbih0LG4pe2lmKG49YXdhaXQgdGhpcy5wcmVwYXJlU29uZ1RhZ3NUb1NldChuKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBCbG9iJiZ0IGluc3RhbmNlb2YgQmxvYil7Y29uc3QgZT1pLnVwZGF0ZShuLGF3YWl0IHRoaXMuYmxvYlRvQnVmZmVyKHQpKTtyZXR1cm4gdGhpcy5wcmVwYXJlU29uZ0Jsb2JGaWxlKGUsdCl9cmV0dXJuIHQgaW5zdGFuY2VvZiBlP2kudXBkYXRlKG4sdCk6bmV3IFByb21pc2UoKGUsYSk9PntpLnVwZGF0ZShuLHQucGF0aHx8dCxuPT57aWYobilyZXR1cm4gYShuKTt0LnBhdGgmJih0LmRlc3Ryb3koKSx0PXIuY3JlYXRlUmVhZFN0cmVhbSh0LnBhdGgpKSxlKHQpfSl9KX0sYy5yZW1vdmVTb25nVGFncz1hc3luYyBmdW5jdGlvbih0KXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBCbG9iJiZ0IGluc3RhbmNlb2YgQmxvYil7Y29uc3QgZT1pLnJlbW92ZVRhZ3NGcm9tQnVmZmVyKGF3YWl0IHRoaXMuYmxvYlRvQnVmZmVyKHQpKTtyZXR1cm4gdGhpcy5wcmVwYXJlU29uZ0Jsb2JGaWxlKGUsdCl9cmV0dXJuIHQgaW5zdGFuY2VvZiBlP2kucmVtb3ZlVGFnc0Zyb21CdWZmZXIodCk6bmV3IFByb21pc2UoKGUsbik9PntpLnJlbW92ZVRhZ3ModC5wYXRofHx0LGk9PntpZihpKXJldHVybiBuKGkpO3QucGF0aCYmKHQuZGVzdHJveSgpLHQ9ci5jcmVhdGVSZWFkU3RyZWFtKHQucGF0aCkpLGUodCl9KX0pfSx0LmV4cG9ydHM9Y30pLmNhbGwodGhpcyxuKDEpLkJ1ZmZlcil9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7Y29uc3QgaT1uKDUpLHI9bigxOTYpO3QuZXhwb3J0cz1uZXcgbDtjb25zdCBhPXthbGJ1bTpcIlRBTEJcIixicG06XCJUQlBNXCIsY29tcG9zZXI6XCJUQ09NXCIsZ2VucmU6XCJUQ09OXCIsY29weXJpZ2h0OlwiVENPUFwiLGRhdGU6XCJUREFUXCIscGxheWxpc3REZWxheTpcIlRETFlcIixlbmNvZGVkQnk6XCJURU5DXCIsdGV4dFdyaXRlcjpcIlRFWFRcIixmaWxlVHlwZTpcIlRGTFRcIix0aW1lOlwiVElNRVwiLGNvbnRlbnRHcm91cDpcIlRJVDFcIix0aXRsZTpcIlRJVDJcIixzdWJ0aXRsZTpcIlRJVDNcIixpbml0aWFsS2V5OlwiVEtFWVwiLGxhbmd1YWdlOlwiVExBTlwiLGxlbmd0aDpcIlRMRU5cIixtZWRpYVR5cGU6XCJUTUVEXCIsb3JpZ2luYWxUaXRsZTpcIlRPQUxcIixvcmlnaW5hbEZpbGVuYW1lOlwiVE9GTlwiLG9yaWdpbmFsVGV4dHdyaXRlcjpcIlRPTFlcIixvcmlnaW5hbEFydGlzdDpcIlRPUEVcIixvcmlnaW5hbFllYXI6XCJUT1JZXCIsZmlsZU93bmVyOlwiVE9XTlwiLGFydGlzdDpcIlRQRTFcIixwZXJmb3JtZXJJbmZvOlwiVFBFMlwiLGNvbmR1Y3RvcjpcIlRQRTNcIixyZW1peEFydGlzdDpcIlRQRTRcIixwYXJ0T2ZTZXQ6XCJUUE9TXCIscHVibGlzaGVyOlwiVFBVQlwiLHRyYWNrTnVtYmVyOlwiVFJDS1wiLHJlY29yZGluZ0RhdGVzOlwiVFJEQVwiLGludGVybmV0UmFkaW9OYW1lOlwiVFJTTlwiLGludGVybmV0UmFkaW9Pd25lcjpcIlRSU09cIixzaXplOlwiVFNJWlwiLElTUkM6XCJUU1JDXCIsZW5jb2RpbmdUZWNobm9sb2d5OlwiVFNTRVwiLHllYXI6XCJUWUVSXCJ9LG89e2FsYnVtOlwiVEFMXCIsYnBtOlwiVEJQXCIsY29tcG9zZXI6XCJUQ01cIixnZW5yZTpcIlRDT1wiLGNvcHlyaWdodDpcIlRDUlwiLGRhdGU6XCJUREFcIixwbGF5bGlzdERlbGF5OlwiVERZXCIsZW5jb2RlZEJ5OlwiVEVOXCIsdGV4dFdyaXRlcjpcIlRFWFRcIixmaWxlVHlwZTpcIlRGVFwiLHRpbWU6XCJUSU1cIixjb250ZW50R3JvdXA6XCJUVDFcIix0aXRsZTpcIlRUMlwiLHN1YnRpdGxlOlwiVFQzXCIsaW5pdGlhbEtleTpcIlRLRVwiLGxhbmd1YWdlOlwiVExBXCIsbGVuZ3RoOlwiVExFXCIsbWVkaWFUeXBlOlwiVE1UXCIsb3JpZ2luYWxUaXRsZTpcIlRPVFwiLG9yaWdpbmFsRmlsZW5hbWU6XCJUT0ZcIixvcmlnaW5hbFRleHR3cml0ZXI6XCJUT0xcIixvcmlnaW5hbEFydGlzdDpcIlRPQVwiLG9yaWdpbmFsWWVhcjpcIlRPUlwiLGFydGlzdDpcIlRQMVwiLHBlcmZvcm1lckluZm86XCJUUDJcIixjb25kdWN0b3I6XCJUUDNcIixyZW1peEFydGlzdDpcIlRQNFwiLHBhcnRPZlNldDpcIlRQQVwiLHB1Ymxpc2hlcjpcIlRQQlwiLHRyYWNrTnVtYmVyOlwiVFJLXCIscmVjb3JkaW5nRGF0ZXM6XCJUUkRcIixzaXplOlwiVFNJXCIsSVNSQzpcIlRSQ1wiLGVuY29kaW5nVGVjaG5vbG9neTpcIlRTU1wiLHllYXI6XCJUWUVcIn0scz17Y29tbWVudDp7Y3JlYXRlOlwiY3JlYXRlQ29tbWVudEZyYW1lXCIscmVhZDpcInJlYWRDb21tZW50RnJhbWVcIixuYW1lOlwiQ09NTVwifSxpbWFnZTp7Y3JlYXRlOlwiY3JlYXRlUGljdHVyZUZyYW1lXCIscmVhZDpcInJlYWRQaWN0dXJlRnJhbWVcIixuYW1lOlwiQVBJQ1wifSx1bnN5bmNocm9uaXNlZEx5cmljczp7Y3JlYXRlOlwiY3JlYXRlVW5zeW5jaHJvbmlzZWRMeXJpY3NGcmFtZVwiLHJlYWQ6XCJyZWFkVW5zeW5jaHJvbmlzZWRMeXJpY3NGcmFtZVwiLG5hbWU6XCJVU0xUXCJ9LHVzZXJEZWZpbmVkVGV4dDp7Y3JlYXRlOlwiY3JlYXRlVXNlckRlZmluZWRUZXh0XCIscmVhZDpcInJlYWRVc2VyRGVmaW5lZFRleHRcIixuYW1lOlwiVFhYWFwiLG11bHRpcGxlOiEwLHVwZGF0ZUNvbXBhcmVLZXk6XCJkZXNjcmlwdGlvblwifSxwb3B1bGFyaW1ldGVyOntjcmVhdGU6XCJjcmVhdGVQb3B1bGFyaW1ldGVyRnJhbWVcIixyZWFkOlwicmVhZFBvcHVsYXJpbWV0ZXJGcmFtZVwiLG5hbWU6XCJQT1BNXCJ9fSxjPXtpbWFnZTp7Y3JlYXRlOlwiY3JlYXRlUGljdHVyZUZyYW1lXCIscmVhZDpcInJlYWRQaWN0dXJlRnJhbWVcIixuYW1lOlwiUElDXCJ9fSx1PVtcIm90aGVyXCIsXCJmaWxlIGljb25cIixcIm90aGVyIGZpbGUgaWNvblwiLFwiZnJvbnQgY292ZXJcIixcImJhY2sgY292ZXJcIixcImxlYWZsZXQgcGFnZVwiLFwibWVkaWFcIixcImxlYWQgYXJ0aXN0XCIsXCJhcnRpc3RcIixcImNvbmR1Y3RvclwiLFwiYmFuZFwiLFwiY29tcG9zZXJcIixcImx5cmljaXN0XCIsXCJyZWNvcmRpbmcgbG9jYXRpb25cIixcImR1cmluZyByZWNvcmRpbmdcIixcImR1cmluZyBwZXJmb3JtYW5jZVwiLFwidmlkZW8gc2NyZWVuIGNhcHR1cmVcIixcImEgYnJpZ2h0IGNvbG91cmVkIGZpc2hcIixcImlsbHVzdHJhdGlvblwiLFwiYmFuZCBsb2dvdHlwZVwiLFwicHVibGlzaGVyIGxvZ290eXBlXCJdO2Z1bmN0aW9uIGwoKXt9bC5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCxuLHIpe2xldCBhPXRoaXMuY3JlYXRlKHQpO2lmKG4gaW5zdGFuY2VvZiBlKXtuPXRoaXMucmVtb3ZlVGFnc0Zyb21CdWZmZXIobil8fG47bGV0IHQ9ZS5jb25jYXQoW2Esbl0pO3JldHVybiByJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByP3ZvaWQgcihudWxsLHQpOnR9aWYociYmXCJmdW5jdGlvblwiPT10eXBlb2Ygcil0cnl7aS5yZWFkRmlsZShuLGZ1bmN0aW9uKHQsbyl7aWYodClyZXR1cm4gdm9pZCByKHQpO289dGhpcy5yZW1vdmVUYWdzRnJvbUJ1ZmZlcihvKXx8bztsZXQgcz1lLmNvbmNhdChbYSxvXSk7aS53cml0ZUZpbGUobixzLFwiYmluYXJ5XCIsdD0+e3IodCl9KX0uYmluZCh0aGlzKSl9Y2F0Y2godCl7cih0KX1lbHNlIHRyeXtsZXQgdD1pLnJlYWRGaWxlU3luYyhuKTt0PXRoaXMucmVtb3ZlVGFnc0Zyb21CdWZmZXIodCl8fHQ7bGV0IHI9ZS5jb25jYXQoW2EsdF0pO3JldHVybiBpLndyaXRlRmlsZVN5bmMobixyLFwiYmluYXJ5XCIpLCEwfWNhdGNoKHQpe3JldHVybiB0fX0sbC5wcm90b3R5cGUuY3JlYXRlPWZ1bmN0aW9uKHQsbil7bGV0IGk9W107aS5wdXNoKHRoaXMuY3JlYXRlVGFnSGVhZGVyKCkpLE9iamVjdC5rZXlzKHQpLmZvckVhY2goZnVuY3Rpb24obixyKXtsZXQgbztpZihhW25dfHwtMSE9T2JqZWN0LmtleXMoYSkubWFwKHQ9PmFbdF0pLmluZGV4T2Yobikpe2xldCBlPWFbbl18fG47bz10aGlzLmNyZWF0ZVRleHRGcmFtZShlLHRbbl0pfWVsc2UgaWYoc1tuXSl7bz10aGlzW3Nbbl0uY3JlYXRlXSh0W25dKX1lbHNlIGlmKC0xIT1PYmplY3Qua2V5cyhzKS5tYXAodD0+c1t0XSkubWFwKHQ9PnQubmFtZSkuaW5kZXhPZihuKSl7bz10aGlzW3NbT2JqZWN0LmtleXMocylbT2JqZWN0LmtleXMocykubWFwKHQ9PnNbdF0pLm1hcCh0PT50Lm5hbWUpLmluZGV4T2YobildXS5jcmVhdGVdKHRbbl0pfW8gaW5zdGFuY2VvZiBlJiZpLnB1c2gobyl9LmJpbmQodGhpcykpO2xldCByPTA7aS5mb3JFYWNoKHQ9PntyKz10Lmxlbmd0aH0pLHItPTEwO2xldCBvPXRoaXMuZW5jb2RlU2l6ZShyKTtpZihpWzBdLndyaXRlVUludDgob1swXSw2KSxpWzBdLndyaXRlVUludDgob1sxXSw3KSxpWzBdLndyaXRlVUludDgob1syXSw4KSxpWzBdLndyaXRlVUludDgob1szXSw5KSwhbnx8XCJmdW5jdGlvblwiIT10eXBlb2YgbilyZXR1cm4gZS5jb25jYXQoaSk7bihlLmNvbmNhdChpKSl9LGwucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24odCxlLG4pe2lmKGUmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGV8fChuPW58fGUsZT17fSksIW58fFwiZnVuY3Rpb25cIiE9dHlwZW9mIG4pe3JldHVybihcInN0cmluZ1wiPT10eXBlb2YgdHx8dCBpbnN0YW5jZW9mIFN0cmluZykmJih0PWkucmVhZEZpbGVTeW5jKHQpKSx0aGlzLmdldFRhZ3NGcm9tQnVmZmVyKHQsZSl9KFwic3RyaW5nXCI9PXR5cGVvZiB0fHx0IGluc3RhbmNlb2YgU3RyaW5nKSYmaS5yZWFkRmlsZSh0LGZ1bmN0aW9uKHQsaSl7aWYodCluKHQsbnVsbCk7ZWxzZXtsZXQgdD10aGlzLmdldFRhZ3NGcm9tQnVmZmVyKGksZSk7bihudWxsLHQpfX0uYmluZCh0aGlzKSl9LGwucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0LGUsbil7bGV0IGk9e30scj17fTtpZihPYmplY3Qua2V5cyhzKS5tYXAoKHQsZSk9PntyW3NbdF0ubmFtZV09dH0pLE9iamVjdC5rZXlzKHQpLm1hcCgoZnVuY3Rpb24oZSl7YVtlXT9pW2FbZV1dPXRbZV06c1tlXT9pW3NbZV0ubmFtZV09dFtlXTotMSE9PU9iamVjdC5rZXlzKGEpLm1hcCh0PT5hW3RdKS5pbmRleE9mKGUpP2lbZV09dFtlXTotMSE9PU9iamVjdC5rZXlzKHMpLm1hcCh0PT5zW3RdKS5tYXAodD0+dC5uYW1lKS5pbmRleE9mKGUpJiYoaVtlXT10W2VdKX0pKSwhbnx8XCJmdW5jdGlvblwiIT10eXBlb2Ygbil7bGV0IHQ9dGhpcy5yZWFkKGUpO3JldHVybiB0PXQucmF3fHx7fSxPYmplY3Qua2V5cyhpKS5tYXAoKGZ1bmN0aW9uKGUpe3NbcltlXV0mJnNbcltlXV0ubXVsdGlwbGUmJnRbZV0mJmlbZV0/KGNDb21wYXJlPXt9LHRbZV0uZm9yRWFjaCgodCxuKT0+e2NDb21wYXJlW3Rbc1tyW2VdXS51cGRhdGVDb21wYXJlS2V5XV09bn0pLGlbZV1pbnN0YW5jZW9mIEFycmF5fHwoaVtlXT1baVtlXV0pLGlbZV0uZm9yRWFjaCgobixpKT0+e2xldCBhPWNDb21wYXJlW25bc1tyW2VdXS51cGRhdGVDb21wYXJlS2V5XV07dm9pZCAwIT09YT90W2VdW2FdPW46dFtlXS5wdXNoKG4pfSkpOnRbZV09aVtlXX0pKSx0aGlzLndyaXRlKHQsZSl9dGhpcy5yZWFkKGUsZnVuY3Rpb24odCxhKXt0P24odCk6KGE9YS5yYXd8fHt9LE9iamVjdC5rZXlzKGkpLm1hcCgoZnVuY3Rpb24odCl7c1tyW3RdXSYmc1tyW3RdXS5tdWx0aXBsZSYmYVt0XSYmaVt0XT8oY0NvbXBhcmU9e30sYVt0XS5mb3JFYWNoKChlLG4pPT57Y0NvbXBhcmVbZVtzW3JbdF1dLnVwZGF0ZUNvbXBhcmVLZXldXT1ufSksaVt0XWluc3RhbmNlb2YgQXJyYXl8fChpW3RdPVtpW3RdXSksaVt0XS5mb3JFYWNoKChlLG4pPT57bGV0IGk9Y0NvbXBhcmVbZVtzW3JbdF1dLnVwZGF0ZUNvbXBhcmVLZXldXTt2b2lkIDAhPT1pP2FbdF1baV09ZTphW3RdLnB1c2goZSl9KSk6YVt0XT1pW3RdfSkpLHRoaXMud3JpdGUoYSxlLG4pKX0uYmluZCh0aGlzKSl9LGwucHJvdG90eXBlLmdldFRhZ3NGcm9tQnVmZmVyPWZ1bmN0aW9uKHQsbil7bGV0IGk9dGhpcy5nZXRGcmFtZVBvc2l0aW9uKHQpO2lmKC0xPT09aSlyZXR1cm4hMTtsZXQgdT10aGlzLmdldFRhZ1NpemUoZS5mcm9tKHQudG9TdHJpbmcoXCJoZXhcIixpLGkrMTApLFwiaGV4XCIpKSsxMCxsPWUuYWxsb2ModSsxKSxwPWUuYWxsb2ModS0xMCsxKTt0LmNvcHkobCwwLGkpLHQuY29weShwLDAsaSsxMCk7bGV0IGY9bFszXSxkPTQsaD0xMDsyPT1mJiYoZD0zLGg9Nik7bGV0IG09W10sZz17cmF3Ont9fSx5PTA7Zm9yKDt5PHUtMTAmJjAhPT1wW3ldOyl7bGV0IHQ9ZS5hbGxvYyhoKTtwLmNvcHkodCwwLHkpO2xldCBuPSExOzQ9PWYmJihuPSEwKTtsZXQgaT10aGlzLmdldEZyYW1lU2l6ZSh0LG4sZik7aWYoaT51LXkpYnJlYWs7bGV0IHI9ZS5hbGxvYyhpKTtwLmNvcHkociwwLHkraCkseSs9aStoLG0ucHVzaCh7bmFtZTp0LnRvU3RyaW5nKFwidXRmOFwiLDAsZCksYm9keTpyfSl9cmV0dXJuIG0uZm9yRWFjaChmdW5jdGlvbih0LGUpe2lmKFwiVFwiPT09dC5uYW1lWzBdJiZcIlRYWFhcIiE9PXQubmFtZSl7bGV0IGU7ZT0xPT09dC5ib2R5WzBdP3IuZGVjb2RlKHQuYm9keS5zbGljZSgxKSxcInV0ZjE2XCIpLnJlcGxhY2UoL1xcMC9nLFwiXCIpOnIuZGVjb2RlKHQuYm9keS5zbGljZSgxKSxcIklTTy04ODU5LTFcIikucmVwbGFjZSgvXFwwL2csXCJcIiksZy5yYXdbdC5uYW1lXT1lO2xldCBuPWE7Mj09ZiYmKG49byksT2JqZWN0LmtleXMobikubWFwKChmdW5jdGlvbihpKXtuW2ldPT09dC5uYW1lJiYoZ1tpXT1lKX0pKX1lbHNle2xldCBlPXM7Mj09ZiYmKGU9YyksT2JqZWN0LmtleXMoZSkubWFwKGZ1bmN0aW9uKG4pe2lmKGVbbl0ubmFtZT09PXQubmFtZSl7bGV0IGk9dGhpc1tlW25dLnJlYWRdKHQuYm9keSxmKTtlW25dLm11bHRpcGxlPyhnW25dfHwoZ1tuXT1bXSksZy5yYXdbdC5uYW1lXXx8KGcucmF3W3QubmFtZV09W10pLGcucmF3W3QubmFtZV0ucHVzaChpKSxnW25dLnB1c2goaSkpOihnLnJhd1t0Lm5hbWVdPWksZ1tuXT1pKX19LmJpbmQodGhpcykpfX0uYmluZCh0aGlzKSksZ30sbC5wcm90b3R5cGUuZ2V0RnJhbWVQb3NpdGlvbj1mdW5jdGlvbih0KXtsZXQgZT10LmluZGV4T2YoXCJJRDNcIik7cmV0dXJuLTE9PWV8fGU+MjA/LTE6ZX0sbC5wcm90b3R5cGUuZ2V0VGFnU2l6ZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5kZWNvZGVTaXplKGUuZnJvbShbdFs2XSx0WzddLHRbOF0sdFs5XV0pKX0sbC5wcm90b3R5cGUuZ2V0RnJhbWVTaXplPWZ1bmN0aW9uKHQsbixpKXtsZXQgcjtyZXR1cm4gcj1pPjI/W3RbNF0sdFs1XSx0WzZdLHRbN11dOlt0WzNdLHRbNF0sdFs1XV0sbj90aGlzLmRlY29kZVNpemUoZS5mcm9tKHIpKTplLmZyb20ocikucmVhZFVJbnRCRSgwLHIubGVuZ3RoKX0sbC5wcm90b3R5cGUucmVtb3ZlVGFnc0Zyb21CdWZmZXI9ZnVuY3Rpb24odCl7bGV0IG49dGhpcy5nZXRGcmFtZVBvc2l0aW9uKHQpO2lmKC0xPT1uKXJldHVybiB0O2xldCBpPWUuZnJvbShbdFtuKzZdLHRbbis3XSx0W24rOF0sdFtuKzldXSk7aWYoMTI4JihpWzBdfGlbMV18aVsyXXxpWzNdKSlyZXR1cm4hMTtsZXQgcj10aGlzLmRlY29kZVNpemUoaSk7cmV0dXJuIHQuc2xpY2UobityKzEwKX0sbC5wcm90b3R5cGUucmVtb3ZlVGFncz1mdW5jdGlvbih0LGUpe2lmKCFlfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXtsZXQgZTt0cnl7ZT1pLnJlYWRGaWxlU3luYyh0KX1jYXRjaCh0KXtyZXR1cm4gdH1sZXQgbj10aGlzLnJlbW92ZVRhZ3NGcm9tQnVmZmVyKGUpO2lmKCFuKXJldHVybiExO3RyeXtpLndyaXRlRmlsZVN5bmModCxuLFwiYmluYXJ5XCIpfWNhdGNoKHQpe3JldHVybiB0fXJldHVybiEwfWkucmVhZEZpbGUodCxmdW5jdGlvbihuLHIpe24mJmUobik7bGV0IGE9dGhpcy5yZW1vdmVUYWdzRnJvbUJ1ZmZlcihyKTthP2kud3JpdGVGaWxlKHQsYSxcImJpbmFyeVwiLChmdW5jdGlvbih0KXtlKHR8fCExKX0pKTplKG4pfS5iaW5kKHRoaXMpKX0sbC5wcm90b3R5cGUuZW5jb2RlU2l6ZT1mdW5jdGlvbih0KXtyZXR1cm5bdD4+MjEmMTI3LHQ+PjE0JjEyNyx0Pj43JjEyNywxMjcmdF19LGwucHJvdG90eXBlLmRlY29kZVNpemU9ZnVuY3Rpb24odCl7cmV0dXJuKHRbMF08PDIxKSsodFsxXTw8MTQpKyh0WzJdPDw3KSt0WzNdfSxsLnByb3RvdHlwZS5jcmVhdGVUYWdIZWFkZXI9ZnVuY3Rpb24oKXtsZXQgdD1lLmFsbG9jKDEwKTtyZXR1cm4gdC5maWxsKDApLHQud3JpdGUoXCJJRDNcIiwwKSx0LndyaXRlVUludDE2QkUoNzY4LDMpLHQud3JpdGVVSW50MTZCRSgwLDUpLHR9LGwucHJvdG90eXBlLmNyZWF0ZVRleHRGcmFtZT1mdW5jdGlvbih0LG4pe2lmKCF0fHwhbilyZXR1cm4gbnVsbDtsZXQgaT1yLmVuY29kZShuLFwidXRmMTZcIiksYT1lLmFsbG9jKDEwKTthLmZpbGwoMCksYS53cml0ZSh0LDApLGEud3JpdGVVSW50MzJCRShpLmxlbmd0aCsxLDQpO2xldCBvPWUuYWxsb2MoMSk7by5maWxsKDEpO3ZhciBzPWUuZnJvbShpLFwiYmluYXJ5XCIpO3JldHVybiBlLmNvbmNhdChbYSxvLHNdKX0sbC5wcm90b3R5cGUuY3JlYXRlUGljdHVyZUZyYW1lPWZ1bmN0aW9uKHQpe3RyeXt0JiZ0LmltYWdlQnVmZmVyJiZ0LmltYWdlQnVmZmVyIGluc3RhbmNlb2YgZT09ITAmJih0PXQuaW1hZ2VCdWZmZXIpO2xldCBuPXQgaW5zdGFuY2VvZiBlPT0xP2UuZnJvbSh0KTplLmZyb20oaS5yZWFkRmlsZVN5bmModCxcImJpbmFyeVwiKSxcImJpbmFyeVwiKSxyPWUuYWxsb2MoMTApO3IuZmlsbCgwKSxyLndyaXRlKFwiQVBJQ1wiLDApO2xldCBhPVwiaW1hZ2UvcG5nXCI7MjU1PT1uWzBdJiYyMTY9PW5bMV0mJjI1NT09blsyXSYmKGE9XCJpbWFnZS9qcGVnXCIpO2xldCBvPWUuYWxsb2MoYS5sZW5ndGgrNCk7cmV0dXJuIG8uZmlsbCgwKSxvW2EubGVuZ3RoKzJdPTMsby53cml0ZShhLDEpLHIud3JpdGVVSW50MzJCRShuLmxlbmd0aCtvLmxlbmd0aCw0KSxlLmNvbmNhdChbcixvLG5dKX1jYXRjaCh0KXtyZXR1cm4gdH19LGwucHJvdG90eXBlLnJlYWRQaWN0dXJlRnJhbWU9ZnVuY3Rpb24odCxlKXtsZXQgbixpLGE9e307aWYobj0yPT1lP3QudG9TdHJpbmcoXCJhc2NpaVwiKS5zdWJzdHJpbmcoMSw0KTp0LnRvU3RyaW5nKFwiYXNjaWlcIikuc3Vic3RyaW5nKDEsdC5pbmRleE9mKDAsMSkpLGEubWltZT1cImltYWdlL2pwZWdcIj09bj9cImpwZWdcIjpcImltYWdlL3BuZ1wiPT1uP1wicG5nXCI6bixhLnR5cGU9e30sMj09ZSYmdS5sZW5ndGg8dFs0XT9hLnR5cGU9e2lkOnRbNF0sbmFtZTp1W3RbNF1dfTphLnR5cGU9e2lkOnRbdC5pbmRleE9mKDAsMSkrMV0sbmFtZTp1W3RbdC5pbmRleE9mKDAsMSkrMV1dfSwwPT10WzBdKTI9PWU/KGEuZGVzY3JpcHRpb249ci5kZWNvZGUodC5zbGljZSg1LHQuaW5kZXhPZigwLDUpKSxcIklTTy04ODU5LTFcIil8fHZvaWQgMCxpPXQuaW5kZXhPZigwLDUpKTooYS5kZXNjcmlwdGlvbj1yLmRlY29kZSh0LnNsaWNlKHQuaW5kZXhPZigwLDEpKzIsdC5pbmRleE9mKDAsdC5pbmRleE9mKDAsMSkrMikpLFwiSVNPLTg4NTktMVwiKXx8dm9pZCAwLGk9dC5pbmRleE9mKDAsdC5pbmRleE9mKDAsMSkrMikpO2Vsc2UgaWYoMT09dFswXSlpZigyPT1lKXtsZXQgZT01LG49dC5zbGljZShlKSxvPW4uaW5kZXhPZihcIjAwMDBcIiwwLFwiaGV4XCIpO2k9ZStvKzIsLTEhPW8mJihhLmRlc2NyaXB0aW9uPXIuZGVjb2RlKG4uc2xpY2UoMCxvKzIpLFwidXRmMTZcIil8fHZvaWQgMCl9ZWxzZXtsZXQgZT10LmluZGV4T2YoMCwxKSsyLG49dC5zbGljZShlKSxvPW4uaW5kZXhPZihcIjAwMDBcIiwwLFwiaGV4XCIpO2k9ZStvKzIsLTEhPW8mJihhLmRlc2NyaXB0aW9uPXIuZGVjb2RlKG4uc2xpY2UoMCxvKzIpLFwidXRmMTZcIil8fHZvaWQgMCl9cmV0dXJuIGEuaW1hZ2VCdWZmZXI9aT90LnNsaWNlKGkrMSk6dC5zbGljZSg1KSxhfSxsLnByb3RvdHlwZS5nZXRFbmNvZGluZ0J5dGU9ZnVuY3Rpb24odCl7cmV0dXJuIHQmJjAhPT10JiZcIklTTy04ODU5LTFcIiE9PXQ/MTowfSxsLnByb3RvdHlwZS5nZXRFbmNvZGluZ05hbWU9ZnVuY3Rpb24odCl7cmV0dXJuIDA9PT10aGlzLmdldEVuY29kaW5nQnl0ZSh0KT9cIklTTy04ODU5LTFcIjpcInV0ZjE2XCJ9LGwucHJvdG90eXBlLmdldFRlcm1pbmF0aW9uQ291bnQ9ZnVuY3Rpb24odCl7cmV0dXJuIDA9PT10PzE6Mn0sbC5wcm90b3R5cGUuY3JlYXRlVGV4dEVuY29kaW5nPWZ1bmN0aW9uKHQpe2xldCBuPWUuYWxsb2MoMSk7cmV0dXJuIG5bMF09dGhpcy5nZXRFbmNvZGluZ0J5dGUodCksbn0sbC5wcm90b3R5cGUuY3JlYXRlTGFuZ3VhZ2U9ZnVuY3Rpb24odCl7cmV0dXJuIHQ/dC5sZW5ndGg+MyYmKHQ9dC5zdWJzdHJpbmcoMCwzKSk6dD1cImVuZ1wiLGUuZnJvbSh0KX0sbC5wcm90b3R5cGUuY3JlYXRlQ29udGVudERlc2NyaXB0b3I9ZnVuY3Rpb24odCxuLGkpe3JldHVybiB0Pyh0PXIuZW5jb2RlKHQsdGhpcy5nZXRFbmNvZGluZ05hbWUobikpLGk/ZS5jb25jYXQoW3QsZS5hbGxvYyh0aGlzLmdldFRlcm1pbmF0aW9uQ291bnQobikpLmZpbGwoMCldKTp0KTp0PWk/ci5lbmNvZGUoXCJcXDBcIix0aGlzLmdldEVuY29kaW5nTmFtZShuKSk6ZS5hbGxvYygwKX0sbC5wcm90b3R5cGUuY3JlYXRlVGV4dD1mdW5jdGlvbih0LG4saSl7cmV0dXJuIHR8fCh0PVwiXCIpLHQ9ci5lbmNvZGUodCx0aGlzLmdldEVuY29kaW5nTmFtZShuKSksaT9lLmNvbmNhdChbdCxlLmZyb20odGhpcy5nZXRUZXJtaW5hdGlvbkNvdW50KG4pKS5maWxsKDApXSk6dH0sbC5wcm90b3R5cGUuY3JlYXRlQ29tbWVudEZyYW1lPWZ1bmN0aW9uKHQpe2lmKCEodD10fHx7fSkudGV4dClyZXR1cm4gbnVsbDtsZXQgbj1lLmFsbG9jKDEwKTtuLmZpbGwoMCksbi53cml0ZShcIkNPTU1cIiwwKTtsZXQgaT10aGlzLmNyZWF0ZVRleHRFbmNvZGluZygxKSxyPXRoaXMuY3JlYXRlTGFuZ3VhZ2UodC5sYW5ndWFnZSksYT10aGlzLmNyZWF0ZUNvbnRlbnREZXNjcmlwdG9yKHQuc2hvcnRUZXh0LDEsITApLG89dGhpcy5jcmVhdGVUZXh0KHQudGV4dCwxLCExKTtyZXR1cm4gbi53cml0ZVVJbnQzMkJFKGkubGVuZ3RoK3IubGVuZ3RoK2EubGVuZ3RoK28ubGVuZ3RoLDQpLGUuY29uY2F0KFtuLGkscixhLG9dKX0sbC5wcm90b3R5cGUucmVhZENvbW1lbnRGcmFtZT1mdW5jdGlvbih0KXtsZXQgZT17fTtpZighdClyZXR1cm4gZTtpZigwPT10WzBdKWU9e2xhbmd1YWdlOnIuZGVjb2RlKHQsXCJJU08tODg1OS0xXCIpLnN1YnN0cmluZygxLDQpLnJlcGxhY2UoL1xcMC9nLFwiXCIpLHNob3J0VGV4dDpyLmRlY29kZSh0LFwiSVNPLTg4NTktMVwiKS5zdWJzdHJpbmcoNCx0LmluZGV4T2YoMCwxKSkucmVwbGFjZSgvXFwwL2csXCJcIiksdGV4dDpyLmRlY29kZSh0LFwiSVNPLTg4NTktMVwiKS5zdWJzdHJpbmcodC5pbmRleE9mKDAsMSkrMSkucmVwbGFjZSgvXFwwL2csXCJcIil9O2Vsc2UgaWYoMT09dFswXSl7bGV0IG49MDtmb3IoO3ZvaWQgMCE9PXRbbl0mJjAhPT10W25dfHwwIT09dFtuKzFdfHwwPT09dFtuKzJdOyluKys7aWYodm9pZCAwPT09dFtuXSlyZXR1cm4gZTtsZXQgaT10LnNsaWNlKDQsbiksYT10LnNsaWNlKG4rMik7ZT17bGFuZ3VhZ2U6dC50b1N0cmluZygpLnN1YnN0cmluZygxLDQpLnJlcGxhY2UoL1xcMC9nLFwiXCIpLHNob3J0VGV4dDpyLmRlY29kZShpLFwidXRmMTZcIikucmVwbGFjZSgvXFwwL2csXCJcIiksdGV4dDpyLmRlY29kZShhLFwidXRmMTZcIikucmVwbGFjZSgvXFwwL2csXCJcIil9fXJldHVybiBlfSxsLnByb3RvdHlwZS5jcmVhdGVVbnN5bmNocm9uaXNlZEx5cmljc0ZyYW1lPWZ1bmN0aW9uKHQpe2lmKChcInN0cmluZ1wiPT10eXBlb2YodD10fHx7fSl8fHQgaW5zdGFuY2VvZiBTdHJpbmcpJiYodD17dGV4dDp0fSksIXQudGV4dClyZXR1cm4gbnVsbDtsZXQgbj1lLmFsbG9jKDEwKTtuLmZpbGwoMCksbi53cml0ZShcIlVTTFRcIiwwKTtsZXQgaT10aGlzLmNyZWF0ZVRleHRFbmNvZGluZygxKSxyPXRoaXMuY3JlYXRlTGFuZ3VhZ2UodC5sYW5ndWFnZSksYT10aGlzLmNyZWF0ZUNvbnRlbnREZXNjcmlwdG9yKHQuc2hvcnRUZXh0LDEsITApLG89dGhpcy5jcmVhdGVUZXh0KHQudGV4dCwxLCExKTtyZXR1cm4gbi53cml0ZVVJbnQzMkJFKGkubGVuZ3RoK3IubGVuZ3RoK2EubGVuZ3RoK28ubGVuZ3RoLDQpLGUuY29uY2F0KFtuLGkscixhLG9dKX0sbC5wcm90b3R5cGUucmVhZFVuc3luY2hyb25pc2VkTHlyaWNzRnJhbWU9ZnVuY3Rpb24odCl7bGV0IGU9e307aWYoIXQpcmV0dXJuIGU7aWYoMD09dFswXSllPXtsYW5ndWFnZTpyLmRlY29kZSh0LFwiSVNPLTg4NTktMVwiKS5zdWJzdHJpbmcoMSw0KS5yZXBsYWNlKC9cXDAvZyxcIlwiKSxzaG9ydFRleHQ6ci5kZWNvZGUodCxcIklTTy04ODU5LTFcIikuc3Vic3RyaW5nKDQsdC5pbmRleE9mKDAsMSkpLnJlcGxhY2UoL1xcMC9nLFwiXCIpLHRleHQ6ci5kZWNvZGUodCxcIklTTy04ODU5LTFcIikuc3Vic3RyaW5nKHQuaW5kZXhPZigwLDEpKzEpLnJlcGxhY2UoL1xcMC9nLFwiXCIpfTtlbHNlIGlmKDE9PXRbMF0pe2xldCBuPTA7Zm9yKDt2b2lkIDAhPT10W25dJiYwIT09dFtuXXx8MCE9PXRbbisxXXx8MD09PXRbbisyXTspbisrO2lmKHZvaWQgMD09PXRbbl0pcmV0dXJuIGU7bGV0IGk9dC5zbGljZSg0LG4pLGE9dC5zbGljZShuKzIpO2U9e2xhbmd1YWdlOnQudG9TdHJpbmcoKS5zdWJzdHJpbmcoMSw0KS5yZXBsYWNlKC9cXDAvZyxcIlwiKSxzaG9ydFRleHQ6ci5kZWNvZGUoaSxcInV0ZjE2XCIpLnJlcGxhY2UoL1xcMC9nLFwiXCIpLHRleHQ6ci5kZWNvZGUoYSxcInV0ZjE2XCIpLnJlcGxhY2UoL1xcMC9nLFwiXCIpfX1yZXR1cm4gZX0sbC5wcm90b3R5cGUuY3JlYXRlVXNlckRlZmluZWRUZXh0PWZ1bmN0aW9uKHQsbil7aWYodWR0PXR8fHt9LHVkdCBpbnN0YW5jZW9mIEFycmF5JiZ1ZHQubGVuZ3RoPjAmJihufHwodD10LnNsaWNlKDApKSx1ZHQ9dC5wb3AoKSksdWR0JiZ1ZHQuZGVzY3JpcHRpb24pe2xldCB0PWUuYWxsb2MoMTApO3QuZmlsbCgwKSx0LndyaXRlKFwiVFhYWFwiLDApO2xldCBpPXRoaXMuY3JlYXRlVGV4dEVuY29kaW5nKDEpLHI9dGhpcy5jcmVhdGVDb250ZW50RGVzY3JpcHRvcih1ZHQuZGVzY3JpcHRpb24sMSwhMCksYT10aGlzLmNyZWF0ZVRleHQodWR0LnZhbHVlLDEsITEpO3Qud3JpdGVVSW50MzJCRShpLmxlbmd0aCtyLmxlbmd0aCthLmxlbmd0aCw0KSxuPW4/ZS5jb25jYXQoW24sdCxpLHIsYV0pOmUuY29uY2F0KFt0LGkscixhXSl9cmV0dXJuIHQgaW5zdGFuY2VvZiBBcnJheSYmdC5sZW5ndGg+MD90aGlzLmNyZWF0ZVVzZXJEZWZpbmVkVGV4dCh0LG4pOm59LGwucHJvdG90eXBlLnJlYWRVc2VyRGVmaW5lZFRleHQ9ZnVuY3Rpb24odCl7bGV0IGU9e307aWYoIXQpcmV0dXJuIGU7aWYoMD09dFswXSllPXtkZXNjcmlwdGlvbjpyLmRlY29kZSh0LFwiSVNPLTg4NTktMVwiKS5zdWJzdHJpbmcoMSx0LmluZGV4T2YoMCwxKSkucmVwbGFjZSgvXFwwL2csXCJcIiksdmFsdWU6ci5kZWNvZGUodCxcIklTTy04ODU5LTFcIikuc3Vic3RyaW5nKHQuaW5kZXhPZigwLDEpKzEpLnJlcGxhY2UoL1xcMC9nLFwiXCIpfTtlbHNlIGlmKDE9PXRbMF0pe2xldCBuPTA7Zm9yKDt2b2lkIDAhPT10W25dJiYwIT09dFtuXXx8MCE9PXRbbisxXXx8MD09PXRbbisyXTspbisrO2lmKHZvaWQgMD09PXRbbl0pcmV0dXJuIGU7bGV0IGk9dC5zbGljZSgxLG4pLGE9dC5zbGljZShuKzIpO2U9e2Rlc2NyaXB0aW9uOnIuZGVjb2RlKGksXCJ1dGYxNlwiKS5yZXBsYWNlKC9cXDAvZyxcIlwiKSx2YWx1ZTpyLmRlY29kZShhLFwidXRmMTZcIikucmVwbGFjZSgvXFwwL2csXCJcIil9fXJldHVybiBlfSxsLnByb3RvdHlwZS5jcmVhdGVQb3B1bGFyaW1ldGVyRnJhbWU9ZnVuY3Rpb24odCl7bGV0IG49KHQ9dHx8e30pLmVtYWlsLGk9TWF0aC50cnVuYyh0LnJhdGluZykscj1NYXRoLnRydW5jKHQuY291bnRlcik7aWYoIW4pcmV0dXJuIG51bGw7KGlzTmFOKGkpfHxpPDB8fGk+MjU1KSYmKGk9MCksKGlzTmFOKHIpfHxyPDApJiYocj0wKTtsZXQgYT1lLmFsbG9jKDEwLDApO2Eud3JpdGUoXCJQT1BNXCIsMCk7bGV0IG89dGhpcy5jcmVhdGVUZXh0KG4sMSwhMSk7bz1lLmZyb20obitcIlxcMFwiLFwidXRmOFwiKTtsZXQgcz1lLmFsbG9jKDEsaSksYz1lLmFsbG9jKDQsMCk7cmV0dXJuIGMud3JpdGVVSW50MzJCRShyLDApLGEud3JpdGVVSW50MzJCRShvLmxlbmd0aCtzLmxlbmd0aCtjLmxlbmd0aCw0KSxlLmNvbmNhdChbYSxvLHMsY10pfSxsLnByb3RvdHlwZS5yZWFkUG9wdWxhcmltZXRlckZyYW1lPWZ1bmN0aW9uKHQpe2xldCBlPXt9O2lmKCF0KXJldHVybiBlO2xldCBuPXQuaW5kZXhPZigwLDEpO2lmKG4+LTEpe2UuZW1haWw9ci5kZWNvZGUodC5zbGljZSgwLG4pLFwiSVNPLTg4NTktMVwiKTtsZXQgaT1uKzE7aWYoaTx0Lmxlbmd0aCl7ZS5yYXRpbmc9dFtpXTtsZXQgbj1pKzE7aWYobjx0Lmxlbmd0aCl7bGV0IGk9dC5zbGljZShuLHQubGVuZ3RoKTtlLmNvdW50ZXI9aS5yZWFkVUludDMyQkUoKX19fXJldHVybiBlfX0pLmNhbGwodGhpcyxuKDEpLkJ1ZmZlcil9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjsoZnVuY3Rpb24oZSl7dmFyIGk9bigxNSkuQnVmZmVyLHI9bigxOTcpLGE9dC5leHBvcnRzO2EuZW5jb2RpbmdzPW51bGwsYS5kZWZhdWx0Q2hhclVuaWNvZGU9XCLvv71cIixhLmRlZmF1bHRDaGFyU2luZ2xlQnl0ZT1cIj9cIixhLmVuY29kZT1mdW5jdGlvbih0LGUsbil7dD1cIlwiKyh0fHxcIlwiKTt2YXIgcj1hLmdldEVuY29kZXIoZSxuKSxvPXIud3JpdGUodCkscz1yLmVuZCgpO3JldHVybiBzJiZzLmxlbmd0aD4wP2kuY29uY2F0KFtvLHNdKTpvfSxhLmRlY29kZT1mdW5jdGlvbih0LGUsbil7XCJzdHJpbmdcIj09dHlwZW9mIHQmJihhLnNraXBEZWNvZGVXYXJuaW5nfHwoY29uc29sZS5lcnJvcihcIkljb252LWxpdGUgd2FybmluZzogZGVjb2RlKCktaW5nIHN0cmluZ3MgaXMgZGVwcmVjYXRlZC4gUmVmZXIgdG8gaHR0cHM6Ly9naXRodWIuY29tL2FzaHR1Y2hraW4vaWNvbnYtbGl0ZS93aWtpL1VzZS1CdWZmZXJzLXdoZW4tZGVjb2RpbmdcIiksYS5za2lwRGVjb2RlV2FybmluZz0hMCksdD1pLmZyb20oXCJcIisodHx8XCJcIiksXCJiaW5hcnlcIikpO3ZhciByPWEuZ2V0RGVjb2RlcihlLG4pLG89ci53cml0ZSh0KSxzPXIuZW5kKCk7cmV0dXJuIHM/bytzOm99LGEuZW5jb2RpbmdFeGlzdHM9ZnVuY3Rpb24odCl7dHJ5e3JldHVybiBhLmdldENvZGVjKHQpLCEwfWNhdGNoKHQpe3JldHVybiExfX0sYS50b0VuY29kaW5nPWEuZW5jb2RlLGEuZnJvbUVuY29kaW5nPWEuZGVjb2RlLGEuX2NvZGVjRGF0YUNhY2hlPXt9LGEuZ2V0Q29kZWM9ZnVuY3Rpb24odCl7YS5lbmNvZGluZ3N8fChhLmVuY29kaW5ncz1uKDE5OCkpO2Zvcih2YXIgZT1hLl9jYW5vbmljYWxpemVFbmNvZGluZyh0KSxpPXt9Ozspe3ZhciByPWEuX2NvZGVjRGF0YUNhY2hlW2VdO2lmKHIpcmV0dXJuIHI7dmFyIG89YS5lbmNvZGluZ3NbZV07c3dpdGNoKHR5cGVvZiBvKXtjYXNlXCJzdHJpbmdcIjplPW87YnJlYWs7Y2FzZVwib2JqZWN0XCI6Zm9yKHZhciBzIGluIG8paVtzXT1vW3NdO2kuZW5jb2RpbmdOYW1lfHwoaS5lbmNvZGluZ05hbWU9ZSksZT1vLnR5cGU7YnJlYWs7Y2FzZVwiZnVuY3Rpb25cIjpyZXR1cm4gaS5lbmNvZGluZ05hbWV8fChpLmVuY29kaW5nTmFtZT1lKSxyPW5ldyBvKGksYSksYS5fY29kZWNEYXRhQ2FjaGVbaS5lbmNvZGluZ05hbWVdPXIscjtkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIkVuY29kaW5nIG5vdCByZWNvZ25pemVkOiAnXCIrdCtcIicgKHNlYXJjaGVkIGFzOiAnXCIrZStcIicpXCIpfX19LGEuX2Nhbm9uaWNhbGl6ZUVuY29kaW5nPWZ1bmN0aW9uKHQpe3JldHVybihcIlwiK3QpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvOlxcZHs0fSR8W14wLTlhLXpdL2csXCJcIil9LGEuZ2V0RW5jb2Rlcj1mdW5jdGlvbih0LGUpe3ZhciBuPWEuZ2V0Q29kZWModCksaT1uZXcgbi5lbmNvZGVyKGUsbik7cmV0dXJuIG4uYm9tQXdhcmUmJmUmJmUuYWRkQk9NJiYoaT1uZXcgci5QcmVwZW5kQk9NKGksZSkpLGl9LGEuZ2V0RGVjb2Rlcj1mdW5jdGlvbih0LGUpe3ZhciBuPWEuZ2V0Q29kZWModCksaT1uZXcgbi5kZWNvZGVyKGUsbik7cmV0dXJuIW4uYm9tQXdhcmV8fGUmJiExPT09ZS5zdHJpcEJPTXx8KGk9bmV3IHIuU3RyaXBCT00oaSxlKSksaX07dmFyIG89dm9pZCAwIT09ZSYmZS52ZXJzaW9ucyYmZS52ZXJzaW9ucy5ub2RlO2lmKG8pe3ZhciBzPW8uc3BsaXQoXCIuXCIpLm1hcChOdW1iZXIpOyhzWzBdPjB8fHNbMV0+PTEwKSYmbigyMTIpKGEpLG4oMjEzKShhKX19KS5jYWxsKHRoaXMsbigzKSl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBpKHQsZSl7dGhpcy5lbmNvZGVyPXQsdGhpcy5hZGRCT009ITB9ZnVuY3Rpb24gcih0LGUpe3RoaXMuZGVjb2Rlcj10LHRoaXMucGFzcz0hMSx0aGlzLm9wdGlvbnM9ZXx8e319ZS5QcmVwZW5kQk9NPWksaS5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYWRkQk9NJiYodD1cIlxcdWZlZmZcIit0LHRoaXMuYWRkQk9NPSExKSx0aGlzLmVuY29kZXIud3JpdGUodCl9LGkucHJvdG90eXBlLmVuZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVuY29kZXIuZW5kKCl9LGUuU3RyaXBCT009cixyLnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmRlY29kZXIud3JpdGUodCk7cmV0dXJuIHRoaXMucGFzc3x8IWU/ZTooXCJcXHVmZWZmXCI9PT1lWzBdJiYoZT1lLnNsaWNlKDEpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMub3B0aW9ucy5zdHJpcEJPTSYmdGhpcy5vcHRpb25zLnN0cmlwQk9NKCkpLHRoaXMucGFzcz0hMCxlKX0sci5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGVjb2Rlci5lbmQoKX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmb3IodmFyIGk9W24oMTk5KSxuKDIwMCksbigyMDEpLG4oMjAyKSxuKDIwMyksbigyMDQpLG4oMjA1KSxuKDIwNildLHI9MDtyPGkubGVuZ3RoO3IrKyl7dD1pW3JdO2Zvcih2YXIgYSBpbiB0KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGEpJiYoZVthXT10W2FdKX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDE1KS5CdWZmZXI7ZnVuY3Rpb24gcih0LGUpe3RoaXMuZW5jPXQuZW5jb2RpbmdOYW1lLHRoaXMuYm9tQXdhcmU9dC5ib21Bd2FyZSxcImJhc2U2NFwiPT09dGhpcy5lbmM/dGhpcy5lbmNvZGVyPWM6XCJjZXN1OFwiPT09dGhpcy5lbmMmJih0aGlzLmVuYz1cInV0ZjhcIix0aGlzLmVuY29kZXI9dSxcIvCfkqlcIiE9PWkuZnJvbShcImVkYTBiZGVkYjJhOVwiLFwiaGV4XCIpLnRvU3RyaW5nKCkmJih0aGlzLmRlY29kZXI9bCx0aGlzLmRlZmF1bHRDaGFyVW5pY29kZT1lLmRlZmF1bHRDaGFyVW5pY29kZSkpfXQuZXhwb3J0cz17dXRmODp7dHlwZTpcIl9pbnRlcm5hbFwiLGJvbUF3YXJlOiEwfSxjZXN1ODp7dHlwZTpcIl9pbnRlcm5hbFwiLGJvbUF3YXJlOiEwfSx1bmljb2RlMTF1dGY4OlwidXRmOFwiLHVjczI6e3R5cGU6XCJfaW50ZXJuYWxcIixib21Bd2FyZTohMH0sdXRmMTZsZTpcInVjczJcIixiaW5hcnk6e3R5cGU6XCJfaW50ZXJuYWxcIn0sYmFzZTY0Ont0eXBlOlwiX2ludGVybmFsXCJ9LGhleDp7dHlwZTpcIl9pbnRlcm5hbFwifSxfaW50ZXJuYWw6cn0sci5wcm90b3R5cGUuZW5jb2Rlcj1zLHIucHJvdG90eXBlLmRlY29kZXI9bzt2YXIgYT1uKDI4KS5TdHJpbmdEZWNvZGVyO2Z1bmN0aW9uIG8odCxlKXthLmNhbGwodGhpcyxlLmVuYyl9ZnVuY3Rpb24gcyh0LGUpe3RoaXMuZW5jPWUuZW5jfWZ1bmN0aW9uIGModCxlKXt0aGlzLnByZXZTdHI9XCJcIn1mdW5jdGlvbiB1KHQsZSl7fWZ1bmN0aW9uIGwodCxlKXt0aGlzLmFjYz0wLHRoaXMuY29udEJ5dGVzPTAsdGhpcy5hY2NCeXRlcz0wLHRoaXMuZGVmYXVsdENoYXJVbmljb2RlPWUuZGVmYXVsdENoYXJVbmljb2RlfWEucHJvdG90eXBlLmVuZHx8KGEucHJvdG90eXBlLmVuZD1mdW5jdGlvbigpe30pLG8ucHJvdG90eXBlPWEucHJvdG90eXBlLHMucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe3JldHVybiBpLmZyb20odCx0aGlzLmVuYyl9LHMucHJvdG90eXBlLmVuZD1mdW5jdGlvbigpe30sYy5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCl7dmFyIGU9KHQ9dGhpcy5wcmV2U3RyK3QpLmxlbmd0aC10Lmxlbmd0aCU0O3JldHVybiB0aGlzLnByZXZTdHI9dC5zbGljZShlKSx0PXQuc2xpY2UoMCxlKSxpLmZyb20odCxcImJhc2U2NFwiKX0sYy5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKCl7cmV0dXJuIGkuZnJvbSh0aGlzLnByZXZTdHIsXCJiYXNlNjRcIil9LHUucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1pLmFsbG9jKDMqdC5sZW5ndGgpLG49MCxyPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBhPXQuY2hhckNvZGVBdChyKTthPDEyOD9lW24rK109YTphPDIwNDg/KGVbbisrXT0xOTIrKGE+Pj42KSxlW24rK109MTI4Kyg2MyZhKSk6KGVbbisrXT0yMjQrKGE+Pj4xMiksZVtuKytdPTEyOCsoYT4+PjYmNjMpLGVbbisrXT0xMjgrKDYzJmEpKX1yZXR1cm4gZS5zbGljZSgwLG4pfSx1LnByb3RvdHlwZS5lbmQ9ZnVuY3Rpb24oKXt9LGwucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLmFjYyxuPXRoaXMuY29udEJ5dGVzLGk9dGhpcy5hY2NCeXRlcyxyPVwiXCIsYT0wO2E8dC5sZW5ndGg7YSsrKXt2YXIgbz10W2FdOzEyOCE9KDE5MiZvKT8obj4wJiYocis9dGhpcy5kZWZhdWx0Q2hhclVuaWNvZGUsbj0wKSxvPDEyOD9yKz1TdHJpbmcuZnJvbUNoYXJDb2RlKG8pOm88MjI0PyhlPTMxJm8sbj0xLGk9MSk6bzwyNDA/KGU9MTUmbyxuPTIsaT0xKTpyKz10aGlzLmRlZmF1bHRDaGFyVW5pY29kZSk6bj4wPyhlPWU8PDZ8NjMmbyxpKyssMD09PS0tbiYmKHIrPTI9PT1pJiZlPDEyOCYmZT4wP3RoaXMuZGVmYXVsdENoYXJVbmljb2RlOjM9PT1pJiZlPDIwNDg/dGhpcy5kZWZhdWx0Q2hhclVuaWNvZGU6U3RyaW5nLmZyb21DaGFyQ29kZShlKSkpOnIrPXRoaXMuZGVmYXVsdENoYXJVbmljb2RlfXJldHVybiB0aGlzLmFjYz1lLHRoaXMuY29udEJ5dGVzPW4sdGhpcy5hY2NCeXRlcz1pLHJ9LGwucHJvdG90eXBlLmVuZD1mdW5jdGlvbigpe3ZhciB0PTA7cmV0dXJuIHRoaXMuY29udEJ5dGVzPjAmJih0Kz10aGlzLmRlZmF1bHRDaGFyVW5pY29kZSksdH19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDE1KS5CdWZmZXI7ZnVuY3Rpb24gcigpe31mdW5jdGlvbiBhKCl7fWZ1bmN0aW9uIG8oKXt0aGlzLm92ZXJmbG93Qnl0ZT0tMX1mdW5jdGlvbiBzKHQsZSl7dGhpcy5pY29udj1lfWZ1bmN0aW9uIGModCxlKXt2b2lkIDA9PT0odD10fHx7fSkuYWRkQk9NJiYodC5hZGRCT009ITApLHRoaXMuZW5jb2Rlcj1lLmljb252LmdldEVuY29kZXIoXCJ1dGYtMTZsZVwiLHQpfWZ1bmN0aW9uIHUodCxlKXt0aGlzLmRlY29kZXI9bnVsbCx0aGlzLmluaXRpYWxCeXRlcz1bXSx0aGlzLmluaXRpYWxCeXRlc0xlbj0wLHRoaXMub3B0aW9ucz10fHx7fSx0aGlzLmljb252PWUuaWNvbnZ9ZnVuY3Rpb24gbCh0LGUpe3ZhciBuPWV8fFwidXRmLTE2bGVcIjtpZih0Lmxlbmd0aD49MilpZigyNTQ9PXRbMF0mJjI1NT09dFsxXSluPVwidXRmLTE2YmVcIjtlbHNlIGlmKDI1NT09dFswXSYmMjU0PT10WzFdKW49XCJ1dGYtMTZsZVwiO2Vsc2V7Zm9yKHZhciBpPTAscj0wLGE9TWF0aC5taW4odC5sZW5ndGgtdC5sZW5ndGglMiw2NCksbz0wO288YTtvKz0yKTA9PT10W29dJiYwIT09dFtvKzFdJiZyKyssMCE9PXRbb10mJjA9PT10W28rMV0mJmkrKztyPmk/bj1cInV0Zi0xNmJlXCI6cjxpJiYobj1cInV0Zi0xNmxlXCIpfXJldHVybiBufWUudXRmMTZiZT1yLHIucHJvdG90eXBlLmVuY29kZXI9YSxyLnByb3RvdHlwZS5kZWNvZGVyPW8sci5wcm90b3R5cGUuYm9tQXdhcmU9ITAsYS5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPWkuZnJvbSh0LFwidWNzMlwiKSxuPTA7bjxlLmxlbmd0aDtuKz0yKXt2YXIgcj1lW25dO2Vbbl09ZVtuKzFdLGVbbisxXT1yfXJldHVybiBlfSxhLnByb3RvdHlwZS5lbmQ9ZnVuY3Rpb24oKXt9LG8ucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe2lmKDA9PXQubGVuZ3RoKXJldHVyblwiXCI7dmFyIGU9aS5hbGxvYyh0Lmxlbmd0aCsxKSxuPTAscj0wO2ZvcigtMSE9PXRoaXMub3ZlcmZsb3dCeXRlJiYoZVswXT10WzBdLGVbMV09dGhpcy5vdmVyZmxvd0J5dGUsbj0xLHI9Mik7bjx0Lmxlbmd0aC0xO24rPTIscis9MillW3JdPXRbbisxXSxlW3IrMV09dFtuXTtyZXR1cm4gdGhpcy5vdmVyZmxvd0J5dGU9bj09dC5sZW5ndGgtMT90W3QubGVuZ3RoLTFdOi0xLGUuc2xpY2UoMCxyKS50b1N0cmluZyhcInVjczJcIil9LG8ucHJvdG90eXBlLmVuZD1mdW5jdGlvbigpe30sZS51dGYxNj1zLHMucHJvdG90eXBlLmVuY29kZXI9YyxzLnByb3RvdHlwZS5kZWNvZGVyPXUsYy5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZW5jb2Rlci53cml0ZSh0KX0sYy5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZW5jb2Rlci5lbmQoKX0sdS5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCl7aWYoIXRoaXMuZGVjb2Rlcil7aWYodGhpcy5pbml0aWFsQnl0ZXMucHVzaCh0KSx0aGlzLmluaXRpYWxCeXRlc0xlbis9dC5sZW5ndGgsdGhpcy5pbml0aWFsQnl0ZXNMZW48MTYpcmV0dXJuXCJcIjt2YXIgZT1sKHQ9aS5jb25jYXQodGhpcy5pbml0aWFsQnl0ZXMpLHRoaXMub3B0aW9ucy5kZWZhdWx0RW5jb2RpbmcpO3RoaXMuZGVjb2Rlcj10aGlzLmljb252LmdldERlY29kZXIoZSx0aGlzLm9wdGlvbnMpLHRoaXMuaW5pdGlhbEJ5dGVzLmxlbmd0aD10aGlzLmluaXRpYWxCeXRlc0xlbj0wfXJldHVybiB0aGlzLmRlY29kZXIud3JpdGUodCl9LHUucHJvdG90eXBlLmVuZD1mdW5jdGlvbigpe2lmKCF0aGlzLmRlY29kZXIpe3ZhciB0PWkuY29uY2F0KHRoaXMuaW5pdGlhbEJ5dGVzKSxlPWwodCx0aGlzLm9wdGlvbnMuZGVmYXVsdEVuY29kaW5nKTt0aGlzLmRlY29kZXI9dGhpcy5pY29udi5nZXREZWNvZGVyKGUsdGhpcy5vcHRpb25zKTt2YXIgbj10aGlzLmRlY29kZXIud3JpdGUodCkscj10aGlzLmRlY29kZXIuZW5kKCk7cmV0dXJuIHI/bityOm59cmV0dXJuIHRoaXMuZGVjb2Rlci5lbmQoKX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDE1KS5CdWZmZXI7ZnVuY3Rpb24gcih0LGUpe3RoaXMuaWNvbnY9ZX1lLnV0Zjc9cixlLnVuaWNvZGUxMXV0Zjc9XCJ1dGY3XCIsci5wcm90b3R5cGUuZW5jb2Rlcj1vLHIucHJvdG90eXBlLmRlY29kZXI9cyxyLnByb3RvdHlwZS5ib21Bd2FyZT0hMDt2YXIgYT0vW15BLVphLXowLTknXFwoXFwpLC1cXC5cXC86XFw/IFxcblxcclxcdF0rL2c7ZnVuY3Rpb24gbyh0LGUpe3RoaXMuaWNvbnY9ZS5pY29udn1mdW5jdGlvbiBzKHQsZSl7dGhpcy5pY29udj1lLmljb252LHRoaXMuaW5CYXNlNjQ9ITEsdGhpcy5iYXNlNjRBY2N1bT1cIlwifW8ucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe3JldHVybiBpLmZyb20odC5yZXBsYWNlKGEsZnVuY3Rpb24odCl7cmV0dXJuXCIrXCIrKFwiK1wiPT09dD9cIlwiOnRoaXMuaWNvbnYuZW5jb2RlKHQsXCJ1dGYxNi1iZVwiKS50b1N0cmluZyhcImJhc2U2NFwiKS5yZXBsYWNlKC89KyQvLFwiXCIpKStcIi1cIn0uYmluZCh0aGlzKSkpfSxvLnByb3RvdHlwZS5lbmQ9ZnVuY3Rpb24oKXt9O2Zvcih2YXIgYz0vW0EtWmEtejAtOVxcLytdLyx1PVtdLGw9MDtsPDI1NjtsKyspdVtsXT1jLnRlc3QoU3RyaW5nLmZyb21DaGFyQ29kZShsKSk7dmFyIHA9XCIrXCIuY2hhckNvZGVBdCgwKSxmPVwiLVwiLmNoYXJDb2RlQXQoMCksZD1cIiZcIi5jaGFyQ29kZUF0KDApO2Z1bmN0aW9uIGgodCxlKXt0aGlzLmljb252PWV9ZnVuY3Rpb24gbSh0LGUpe3RoaXMuaWNvbnY9ZS5pY29udix0aGlzLmluQmFzZTY0PSExLHRoaXMuYmFzZTY0QWNjdW09aS5hbGxvYyg2KSx0aGlzLmJhc2U2NEFjY3VtSWR4PTB9ZnVuY3Rpb24gZyh0LGUpe3RoaXMuaWNvbnY9ZS5pY29udix0aGlzLmluQmFzZTY0PSExLHRoaXMuYmFzZTY0QWNjdW09XCJcIn1zLnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0KXtmb3IodmFyIGU9XCJcIixuPTAscj10aGlzLmluQmFzZTY0LGE9dGhpcy5iYXNlNjRBY2N1bSxvPTA7bzx0Lmxlbmd0aDtvKyspaWYocil7aWYoIXVbdFtvXV0pe2lmKG89PW4mJnRbb109PWYpZSs9XCIrXCI7ZWxzZXt2YXIgcz1hK3Quc2xpY2UobixvKS50b1N0cmluZygpO2UrPXRoaXMuaWNvbnYuZGVjb2RlKGkuZnJvbShzLFwiYmFzZTY0XCIpLFwidXRmMTYtYmVcIil9dFtvXSE9ZiYmby0tLG49bysxLHI9ITEsYT1cIlwifX1lbHNlIHRbb109PXAmJihlKz10aGlzLmljb252LmRlY29kZSh0LnNsaWNlKG4sbyksXCJhc2NpaVwiKSxuPW8rMSxyPSEwKTtpZihyKXt2YXIgYz0ocz1hK3Quc2xpY2UobikudG9TdHJpbmcoKSkubGVuZ3RoLXMubGVuZ3RoJTg7YT1zLnNsaWNlKGMpLHM9cy5zbGljZSgwLGMpLGUrPXRoaXMuaWNvbnYuZGVjb2RlKGkuZnJvbShzLFwiYmFzZTY0XCIpLFwidXRmMTYtYmVcIil9ZWxzZSBlKz10aGlzLmljb252LmRlY29kZSh0LnNsaWNlKG4pLFwiYXNjaWlcIik7cmV0dXJuIHRoaXMuaW5CYXNlNjQ9cix0aGlzLmJhc2U2NEFjY3VtPWEsZX0scy5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKCl7dmFyIHQ9XCJcIjtyZXR1cm4gdGhpcy5pbkJhc2U2NCYmdGhpcy5iYXNlNjRBY2N1bS5sZW5ndGg+MCYmKHQ9dGhpcy5pY29udi5kZWNvZGUoaS5mcm9tKHRoaXMuYmFzZTY0QWNjdW0sXCJiYXNlNjRcIiksXCJ1dGYxNi1iZVwiKSksdGhpcy5pbkJhc2U2ND0hMSx0aGlzLmJhc2U2NEFjY3VtPVwiXCIsdH0sZS51dGY3aW1hcD1oLGgucHJvdG90eXBlLmVuY29kZXI9bSxoLnByb3RvdHlwZS5kZWNvZGVyPWcsaC5wcm90b3R5cGUuYm9tQXdhcmU9ITAsbS5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuaW5CYXNlNjQsbj10aGlzLmJhc2U2NEFjY3VtLHI9dGhpcy5iYXNlNjRBY2N1bUlkeCxhPWkuYWxsb2MoNSp0Lmxlbmd0aCsxMCksbz0wLHM9MDtzPHQubGVuZ3RoO3MrKyl7dmFyIGM9dC5jaGFyQ29kZUF0KHMpOzMyPD1jJiZjPD0xMjY/KGUmJihyPjAmJihvKz1hLndyaXRlKG4uc2xpY2UoMCxyKS50b1N0cmluZyhcImJhc2U2NFwiKS5yZXBsYWNlKC9cXC8vZyxcIixcIikucmVwbGFjZSgvPSskLyxcIlwiKSxvKSxyPTApLGFbbysrXT1mLGU9ITEpLGV8fChhW28rK109YyxjPT09ZCYmKGFbbysrXT1mKSkpOihlfHwoYVtvKytdPWQsZT0hMCksZSYmKG5bcisrXT1jPj44LG5bcisrXT0yNTUmYyxyPT1uLmxlbmd0aCYmKG8rPWEud3JpdGUobi50b1N0cmluZyhcImJhc2U2NFwiKS5yZXBsYWNlKC9cXC8vZyxcIixcIiksbykscj0wKSkpfXJldHVybiB0aGlzLmluQmFzZTY0PWUsdGhpcy5iYXNlNjRBY2N1bUlkeD1yLGEuc2xpY2UoMCxvKX0sbS5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKCl7dmFyIHQ9aS5hbGxvYygxMCksZT0wO3JldHVybiB0aGlzLmluQmFzZTY0JiYodGhpcy5iYXNlNjRBY2N1bUlkeD4wJiYoZSs9dC53cml0ZSh0aGlzLmJhc2U2NEFjY3VtLnNsaWNlKDAsdGhpcy5iYXNlNjRBY2N1bUlkeCkudG9TdHJpbmcoXCJiYXNlNjRcIikucmVwbGFjZSgvXFwvL2csXCIsXCIpLnJlcGxhY2UoLz0rJC8sXCJcIiksZSksdGhpcy5iYXNlNjRBY2N1bUlkeD0wKSx0W2UrK109Zix0aGlzLmluQmFzZTY0PSExKSx0LnNsaWNlKDAsZSl9O3ZhciB5PXUuc2xpY2UoKTt5W1wiLFwiLmNoYXJDb2RlQXQoMCldPSEwLGcucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1cIlwiLG49MCxyPXRoaXMuaW5CYXNlNjQsYT10aGlzLmJhc2U2NEFjY3VtLG89MDtvPHQubGVuZ3RoO28rKylpZihyKXtpZigheVt0W29dXSl7aWYobz09biYmdFtvXT09ZillKz1cIiZcIjtlbHNle3ZhciBzPWErdC5zbGljZShuLG8pLnRvU3RyaW5nKCkucmVwbGFjZSgvLC9nLFwiL1wiKTtlKz10aGlzLmljb252LmRlY29kZShpLmZyb20ocyxcImJhc2U2NFwiKSxcInV0ZjE2LWJlXCIpfXRbb10hPWYmJm8tLSxuPW8rMSxyPSExLGE9XCJcIn19ZWxzZSB0W29dPT1kJiYoZSs9dGhpcy5pY29udi5kZWNvZGUodC5zbGljZShuLG8pLFwiYXNjaWlcIiksbj1vKzEscj0hMCk7aWYocil7dmFyIGM9KHM9YSt0LnNsaWNlKG4pLnRvU3RyaW5nKCkucmVwbGFjZSgvLC9nLFwiL1wiKSkubGVuZ3RoLXMubGVuZ3RoJTg7YT1zLnNsaWNlKGMpLHM9cy5zbGljZSgwLGMpLGUrPXRoaXMuaWNvbnYuZGVjb2RlKGkuZnJvbShzLFwiYmFzZTY0XCIpLFwidXRmMTYtYmVcIil9ZWxzZSBlKz10aGlzLmljb252LmRlY29kZSh0LnNsaWNlKG4pLFwiYXNjaWlcIik7cmV0dXJuIHRoaXMuaW5CYXNlNjQ9cix0aGlzLmJhc2U2NEFjY3VtPWEsZX0sZy5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKCl7dmFyIHQ9XCJcIjtyZXR1cm4gdGhpcy5pbkJhc2U2NCYmdGhpcy5iYXNlNjRBY2N1bS5sZW5ndGg+MCYmKHQ9dGhpcy5pY29udi5kZWNvZGUoaS5mcm9tKHRoaXMuYmFzZTY0QWNjdW0sXCJiYXNlNjRcIiksXCJ1dGYxNi1iZVwiKSksdGhpcy5pbkJhc2U2ND0hMSx0aGlzLmJhc2U2NEFjY3VtPVwiXCIsdH19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDE1KS5CdWZmZXI7ZnVuY3Rpb24gcih0LGUpe2lmKCF0KXRocm93IG5ldyBFcnJvcihcIlNCQ1MgY29kZWMgaXMgY2FsbGVkIHdpdGhvdXQgdGhlIGRhdGEuXCIpO2lmKCF0LmNoYXJzfHwxMjghPT10LmNoYXJzLmxlbmd0aCYmMjU2IT09dC5jaGFycy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiRW5jb2RpbmcgJ1wiK3QudHlwZStcIicgaGFzIGluY29ycmVjdCAnY2hhcnMnIChtdXN0IGJlIG9mIGxlbiAxMjggb3IgMjU2KVwiKTtpZigxMjg9PT10LmNoYXJzLmxlbmd0aCl7Zm9yKHZhciBuPVwiXCIscj0wO3I8MTI4O3IrKyluKz1TdHJpbmcuZnJvbUNoYXJDb2RlKHIpO3QuY2hhcnM9bit0LmNoYXJzfXRoaXMuZGVjb2RlQnVmPWkuZnJvbSh0LmNoYXJzLFwidWNzMlwiKTt2YXIgYT1pLmFsbG9jKDY1NTM2LGUuZGVmYXVsdENoYXJTaW5nbGVCeXRlLmNoYXJDb2RlQXQoMCkpO2ZvcihyPTA7cjx0LmNoYXJzLmxlbmd0aDtyKyspYVt0LmNoYXJzLmNoYXJDb2RlQXQocildPXI7dGhpcy5lbmNvZGVCdWY9YX1mdW5jdGlvbiBhKHQsZSl7dGhpcy5lbmNvZGVCdWY9ZS5lbmNvZGVCdWZ9ZnVuY3Rpb24gbyh0LGUpe3RoaXMuZGVjb2RlQnVmPWUuZGVjb2RlQnVmfWUuX3NiY3M9cixyLnByb3RvdHlwZS5lbmNvZGVyPWEsci5wcm90b3R5cGUuZGVjb2Rlcj1vLGEucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1pLmFsbG9jKHQubGVuZ3RoKSxuPTA7bjx0Lmxlbmd0aDtuKyspZVtuXT10aGlzLmVuY29kZUJ1Zlt0LmNoYXJDb2RlQXQobildO3JldHVybiBlfSxhLnByb3RvdHlwZS5lbmQ9ZnVuY3Rpb24oKXt9LG8ucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLmRlY29kZUJ1ZixuPWkuYWxsb2MoMip0Lmxlbmd0aCkscj0wLGE9MCxvPTA7bzx0Lmxlbmd0aDtvKyspcj0yKnRbb10sblthPTIqb109ZVtyXSxuW2ErMV09ZVtyKzFdO3JldHVybiBuLnRvU3RyaW5nKFwidWNzMlwiKX0sby5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKCl7fX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3QuZXhwb3J0cz17MTAwMjk6XCJtYWNjZW50ZXVyb1wiLG1hY2NlbnRldXJvOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIsOExIDEgcOJxITDlsOcw6HEhcSMw6TEjcSGxIfDqcW5xbrEjsOtxI/EksSTxJbDs8SXw7TDtsO1w7rEmsSbw7zigKDCsMSYwqPCp+KAosK2w5/CrsKp4oSixJnCqOKJoMSjxK7Er8Sq4omk4omlxKvEtuKIguKIkcWCxLvEvMS9xL7EucS6xYXFhsWDwqziiJrFhMWH4oiGwqvCu+KApsKgxYjFkMOVxZHFjOKAk+KAlOKAnOKAneKAmOKAmcO34peKxY3FlMWVxZjigLnigLrFmcWWxZfFoOKAmuKAnsWhxZrFm8OBxaTFpcONxb3FvsWqw5PDlMWrxa7DmsWvxbDFscWyxbPDncO9xLfFu8WBxbzEosuHXCJ9LDgwODpcImNwODA4XCIsaWJtODA4OlwiY3A4MDhcIixjcDgwODp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLQkNCR0JLQk9CU0JXQltCX0JjQmdCa0JvQnNCd0J7Qn9Cg0KHQotCj0KTQpdCm0KfQqNCp0KrQq9Cs0K3QrtCv0LDQsdCy0LPQtNC10LbQt9C40LnQutC70LzQvdC+0L/ilpHilpLilpPilILilKTilaHilaLilZbilZXilaPilZHilZfilZ3ilZzilZvilJDilJTilLTilKzilJzilIDilLzilZ7ilZ/ilZrilZTilanilabilaDilZDilazilafilajilaTilaXilZnilZjilZLilZPilavilarilJjilIzilojiloTilozilpDiloDRgNGB0YLRg9GE0YXRhtGH0YjRidGK0YvRjNGN0Y7Rj9CB0ZHQhNGU0IfRl9CO0Z7CsOKImcK34oia4oSW4oKs4pagwqBcIn0sbWlrOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcItCQ0JHQktCT0JTQldCW0JfQmNCZ0JrQm9Cc0J3QntCf0KDQodCi0KPQpNCl0KbQp9Co0KnQqtCr0KzQrdCu0K/QsNCx0LLQs9C00LXQttC30LjQudC60LvQvNC90L7Qv9GA0YHRgtGD0YTRhdGG0YfRiNGJ0YrRi9GM0Y3RjtGP4pSU4pS04pSs4pSc4pSA4pS84pWj4pWR4pWa4pWU4pWp4pWm4pWg4pWQ4pWs4pSQ4paR4paS4paT4pSC4pSk4oSWwqfilZfilZ3ilJjilIzilojiloTilozilpDiloDOscOfzpPPgM6jz4PCtc+EzqbOmM6pzrTiiJ7Phs614oip4omhwrHiiaXiiaTijKDijKHDt+KJiMKw4oiZwrfiiJrigb/CsuKWoMKgXCJ9LGFzY2lpOGJpdDpcImFzY2lpXCIsdXNhc2NpaTpcImFzY2lpXCIsYW5zaXgzNDpcImFzY2lpXCIsYW5zaXgzNDE5Njg6XCJhc2NpaVwiLGFuc2l4MzQxOTg2OlwiYXNjaWlcIixjc2FzY2lpOlwiYXNjaWlcIixjcDM2NzpcImFzY2lpXCIsaWJtMzY3OlwiYXNjaWlcIixpc29pcjY6XCJhc2NpaVwiLGlzbzY0NnVzOlwiYXNjaWlcIixpc282NDZpcnY6XCJhc2NpaVwiLHVzOlwiYXNjaWlcIixsYXRpbjE6XCJpc284ODU5MVwiLGxhdGluMjpcImlzbzg4NTkyXCIsbGF0aW4zOlwiaXNvODg1OTNcIixsYXRpbjQ6XCJpc284ODU5NFwiLGxhdGluNTpcImlzbzg4NTk5XCIsbGF0aW42OlwiaXNvODg1OTEwXCIsbGF0aW43OlwiaXNvODg1OTEzXCIsbGF0aW44OlwiaXNvODg1OTE0XCIsbGF0aW45OlwiaXNvODg1OTE1XCIsbGF0aW4xMDpcImlzbzg4NTkxNlwiLGNzaXNvbGF0aW4xOlwiaXNvODg1OTFcIixjc2lzb2xhdGluMjpcImlzbzg4NTkyXCIsY3Npc29sYXRpbjM6XCJpc284ODU5M1wiLGNzaXNvbGF0aW40OlwiaXNvODg1OTRcIixjc2lzb2xhdGluY3lyaWxsaWM6XCJpc284ODU5NVwiLGNzaXNvbGF0aW5hcmFiaWM6XCJpc284ODU5NlwiLGNzaXNvbGF0aW5ncmVlazpcImlzbzg4NTk3XCIsY3Npc29sYXRpbmhlYnJldzpcImlzbzg4NTk4XCIsY3Npc29sYXRpbjU6XCJpc284ODU5OVwiLGNzaXNvbGF0aW42OlwiaXNvODg1OTEwXCIsbDE6XCJpc284ODU5MVwiLGwyOlwiaXNvODg1OTJcIixsMzpcImlzbzg4NTkzXCIsbDQ6XCJpc284ODU5NFwiLGw1OlwiaXNvODg1OTlcIixsNjpcImlzbzg4NTkxMFwiLGw3OlwiaXNvODg1OTEzXCIsbDg6XCJpc284ODU5MTRcIixsOTpcImlzbzg4NTkxNVwiLGwxMDpcImlzbzg4NTkxNlwiLGlzb2lyMTQ6XCJpc282NDZqcFwiLGlzb2lyNTc6XCJpc282NDZjblwiLGlzb2lyMTAwOlwiaXNvODg1OTFcIixpc29pcjEwMTpcImlzbzg4NTkyXCIsaXNvaXIxMDk6XCJpc284ODU5M1wiLGlzb2lyMTEwOlwiaXNvODg1OTRcIixpc29pcjE0NDpcImlzbzg4NTk1XCIsaXNvaXIxMjc6XCJpc284ODU5NlwiLGlzb2lyMTI2OlwiaXNvODg1OTdcIixpc29pcjEzODpcImlzbzg4NTk4XCIsaXNvaXIxNDg6XCJpc284ODU5OVwiLGlzb2lyMTU3OlwiaXNvODg1OTEwXCIsaXNvaXIxNjY6XCJ0aXM2MjBcIixpc29pcjE3OTpcImlzbzg4NTkxM1wiLGlzb2lyMTk5OlwiaXNvODg1OTE0XCIsaXNvaXIyMDM6XCJpc284ODU5MTVcIixpc29pcjIyNjpcImlzbzg4NTkxNlwiLGNwODE5OlwiaXNvODg1OTFcIixpYm04MTk6XCJpc284ODU5MVwiLGN5cmlsbGljOlwiaXNvODg1OTVcIixhcmFiaWM6XCJpc284ODU5NlwiLGFyYWJpYzg6XCJpc284ODU5NlwiLGVjbWExMTQ6XCJpc284ODU5NlwiLGFzbW83MDg6XCJpc284ODU5NlwiLGdyZWVrOlwiaXNvODg1OTdcIixncmVlazg6XCJpc284ODU5N1wiLGVjbWExMTg6XCJpc284ODU5N1wiLGVsb3Q5Mjg6XCJpc284ODU5N1wiLGhlYnJldzpcImlzbzg4NTk4XCIsaGVicmV3ODpcImlzbzg4NTk4XCIsdHVya2lzaDpcImlzbzg4NTk5XCIsdHVya2lzaDg6XCJpc284ODU5OVwiLHRoYWk6XCJpc284ODU5MTFcIix0aGFpODpcImlzbzg4NTkxMVwiLGNlbHRpYzpcImlzbzg4NTkxNFwiLGNlbHRpYzg6XCJpc284ODU5MTRcIixpc29jZWx0aWM6XCJpc284ODU5MTRcIix0aXM2MjAwOlwidGlzNjIwXCIsdGlzNjIwMjUyOTE6XCJ0aXM2MjBcIix0aXM2MjAyNTMzMDpcInRpczYyMFwiLDFlNDpcIm1hY3JvbWFuXCIsMTAwMDY6XCJtYWNncmVla1wiLDEwMDA3OlwibWFjY3lyaWxsaWNcIiwxMDA3OTpcIm1hY2ljZWxhbmRcIiwxMDA4MTpcIm1hY3R1cmtpc2hcIixjc3BjOGNvZGVwYWdlNDM3OlwiY3A0MzdcIixjc3BjNzc1YmFsdGljOlwiY3A3NzVcIixjc3BjODUwbXVsdGlsaW5ndWFsOlwiY3A4NTBcIixjc3BjcDg1MjpcImNwODUyXCIsY3NwYzg2MmxhdGluaGVicmV3OlwiY3A4NjJcIixjcGdyOlwiY3A4NjlcIixtc2VlOlwiY3AxMjUwXCIsbXNjeXJsOlwiY3AxMjUxXCIsbXNhbnNpOlwiY3AxMjUyXCIsbXNncmVlazpcImNwMTI1M1wiLG1zdHVyazpcImNwMTI1NFwiLG1zaGVicjpcImNwMTI1NVwiLG1zYXJhYjpcImNwMTI1NlwiLHdpbmJhbHRyaW06XCJjcDEyNTdcIixjcDIwODY2Olwia29pOHJcIiwyMDg2NjpcImtvaThyXCIsaWJtODc4Olwia29pOHJcIixjc2tvaThyOlwia29pOHJcIixjcDIxODY2Olwia29pOHVcIiwyMTg2NjpcImtvaTh1XCIsaWJtMTE2ODpcImtvaTh1XCIsc3RyazEwNDgyMDAyOlwicmsxMDQ4XCIsdGN2bjU3MTI6XCJ0Y3ZuXCIsdGN2bjU3MTIxOlwidGN2blwiLGdiMTk4ODgwOlwiaXNvNjQ2Y25cIixjbjpcImlzbzY0NmNuXCIsY3Npc28xNGppc2M2MjIwcm86XCJpc282NDZqcFwiLGppc2M2MjIwMTk2OXJvOlwiaXNvNjQ2anBcIixqcDpcImlzbzY0NmpwXCIsY3NocHJvbWFuODpcImhwcm9tYW44XCIscjg6XCJocHJvbWFuOFwiLHJvbWFuODpcImhwcm9tYW44XCIseHJvbWFuODpcImhwcm9tYW44XCIsaWJtMTA1MTpcImhwcm9tYW44XCIsbWFjOlwibWFjaW50b3NoXCIsY3NtYWNpbnRvc2g6XCJtYWNpbnRvc2hcIn19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt0LmV4cG9ydHM9ezQzNzpcImNwNDM3XCIsNzM3OlwiY3A3MzdcIiw3NzU6XCJjcDc3NVwiLDg1MDpcImNwODUwXCIsODUyOlwiY3A4NTJcIiw4NTU6XCJjcDg1NVwiLDg1NjpcImNwODU2XCIsODU3OlwiY3A4NTdcIiw4NTg6XCJjcDg1OFwiLDg2MDpcImNwODYwXCIsODYxOlwiY3A4NjFcIiw4NjI6XCJjcDg2MlwiLDg2MzpcImNwODYzXCIsODY0OlwiY3A4NjRcIiw4NjU6XCJjcDg2NVwiLDg2NjpcImNwODY2XCIsODY5OlwiY3A4NjlcIiw4NzQ6XCJ3aW5kb3dzODc0XCIsOTIyOlwiY3A5MjJcIiwxMDQ2OlwiY3AxMDQ2XCIsMTEyNDpcImNwMTEyNFwiLDExMjU6XCJjcDExMjVcIiwxMTI5OlwiY3AxMTI5XCIsMTEzMzpcImNwMTEzM1wiLDExNjE6XCJjcDExNjFcIiwxMTYyOlwiY3AxMTYyXCIsMTE2MzpcImNwMTE2M1wiLDEyNTA6XCJ3aW5kb3dzMTI1MFwiLDEyNTE6XCJ3aW5kb3dzMTI1MVwiLDEyNTI6XCJ3aW5kb3dzMTI1MlwiLDEyNTM6XCJ3aW5kb3dzMTI1M1wiLDEyNTQ6XCJ3aW5kb3dzMTI1NFwiLDEyNTU6XCJ3aW5kb3dzMTI1NVwiLDEyNTY6XCJ3aW5kb3dzMTI1NlwiLDEyNTc6XCJ3aW5kb3dzMTI1N1wiLDEyNTg6XCJ3aW5kb3dzMTI1OFwiLDI4NTkxOlwiaXNvODg1OTFcIiwyODU5MjpcImlzbzg4NTkyXCIsMjg1OTM6XCJpc284ODU5M1wiLDI4NTk0OlwiaXNvODg1OTRcIiwyODU5NTpcImlzbzg4NTk1XCIsMjg1OTY6XCJpc284ODU5NlwiLDI4NTk3OlwiaXNvODg1OTdcIiwyODU5ODpcImlzbzg4NTk4XCIsMjg1OTk6XCJpc284ODU5OVwiLDI4NjAwOlwiaXNvODg1OTEwXCIsMjg2MDE6XCJpc284ODU5MTFcIiwyODYwMzpcImlzbzg4NTkxM1wiLDI4NjA0OlwiaXNvODg1OTE0XCIsMjg2MDU6XCJpc284ODU5MTVcIiwyODYwNjpcImlzbzg4NTkxNlwiLHdpbmRvd3M4NzQ6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwi4oKs77+977+977+977+94oCm77+977+977+977+977+977+977+977+977+977+977+94oCY4oCZ4oCc4oCd4oCi4oCT4oCU77+977+977+977+977+977+977+977+9wqDguIHguILguIPguITguIXguIbguIfguIjguInguIrguIvguIzguI3guI7guI/guJDguJHguJLguJPguJTguJXguJbguJfguJjguJnguJrguJvguJzguJ3guJ7guJ/guKDguKHguKLguKPguKTguKXguKbguKfguKjguKnguKrguKvguKzguK3guK7guK/guLDguLHguLLguLPguLTguLXguLbguLfguLjguLnguLrvv73vv73vv73vv73guL/guYDguYHguYLguYPguYTguYXguYbguYfguYjguYnguYrguYvguYzguY3guY7guY/guZDguZHguZLguZPguZTguZXguZbguZfguZjguZnguZrguZvvv73vv73vv73vv71cIn0sd2luODc0Olwid2luZG93czg3NFwiLGNwODc0Olwid2luZG93czg3NFwiLHdpbmRvd3MxMjUwOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIuKCrO+/veKAmu+/veKAnuKApuKAoOKAoe+/veKAsMWg4oC5xZrFpMW9xbnvv73igJjigJnigJzigJ3igKLigJPigJTvv73ihKLFoeKAusWbxaXFvsW6wqDLh8uYxYHCpMSEwqbCp8KowqnFnsKrwqzCrcKuxbvCsMKxy5vFgsK0wrXCtsK3wrjEhcWfwrvEvcudxL7FvMWUw4HDgsSCw4TEucSGw4fEjMOJxJjDi8Saw43DjsSOxJDFg8WHw5PDlMWQw5bDl8WYxa7DmsWww5zDncWiw5/FlcOhw6LEg8OkxLrEh8OnxI3DqcSZw6vEm8Otw67Ej8SRxYTFiMOzw7TFkcO2w7fFmcWvw7rFscO8w73Fo8uZXCJ9LHdpbjEyNTA6XCJ3aW5kb3dzMTI1MFwiLGNwMTI1MDpcIndpbmRvd3MxMjUwXCIsd2luZG93czEyNTE6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwi0ILQg+KAmtGT4oCe4oCm4oCg4oCh4oKs4oCw0InigLnQitCM0IvQj9GS4oCY4oCZ4oCc4oCd4oCi4oCT4oCU77+94oSi0ZnigLrRmtGc0ZvRn8Kg0I7RntCIwqTSkMKmwqfQgcKp0ITCq8Kswq3CrtCHwrDCsdCG0ZbSkcK1wrbCt9GR4oSW0ZTCu9GY0IXRldGX0JDQkdCS0JPQlNCV0JbQl9CY0JnQmtCb0JzQndCe0J/QoNCh0KLQo9Ck0KXQptCn0KjQqdCq0KvQrNCt0K7Qr9Cw0LHQstCz0LTQtdC20LfQuNC50LrQu9C80L3QvtC/0YDRgdGC0YPRhNGF0YbRh9GI0YnRitGL0YzRjdGO0Y9cIn0sd2luMTI1MTpcIndpbmRvd3MxMjUxXCIsY3AxMjUxOlwid2luZG93czEyNTFcIix3aW5kb3dzMTI1Mjp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLigqzvv73igJrGkuKAnuKApuKAoOKAocuG4oCwxaDigLnFku+/vcW977+977+94oCY4oCZ4oCc4oCd4oCi4oCT4oCUy5zihKLFoeKAusWT77+9xb7FuMKgwqHCosKjwqTCpcKmwqfCqMKpwqrCq8Kswq3CrsKvwrDCscKywrPCtMK1wrbCt8K4wrnCusK7wrzCvcK+wr/DgMOBw4LDg8OEw4XDhsOHw4jDicOKw4vDjMONw47Dj8OQw5HDksOTw5TDlcOWw5fDmMOZw5rDm8Ocw53DnsOfw6DDocOiw6PDpMOlw6bDp8Oow6nDqsOrw6zDrcOuw6/DsMOxw7LDs8O0w7XDtsO3w7jDucO6w7vDvMO9w77Dv1wifSx3aW4xMjUyOlwid2luZG93czEyNTJcIixjcDEyNTI6XCJ3aW5kb3dzMTI1MlwiLHdpbmRvd3MxMjUzOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIuKCrO+/veKAmsaS4oCe4oCm4oCg4oCh77+94oCw77+94oC577+977+977+977+977+94oCY4oCZ4oCc4oCd4oCi4oCT4oCU77+94oSi77+94oC677+977+977+977+9wqDOhc6GwqPCpMKlwqbCp8Kowqnvv73Cq8Kswq3CruKAlcKwwrHCssKzzoTCtcK2wrfOiM6JzorCu86Mwr3Ojs6PzpDOkc6SzpPOlM6VzpbOl86YzpnOms6bzpzOnc6ezp/OoM6h77+9zqPOpM6lzqbOp86ozqnOqs6rzqzOrc6uzq/OsM6xzrLOs860zrXOts63zrjOuc66zrvOvM69zr7Ov8+Az4HPgs+Dz4TPhc+Gz4fPiM+Jz4rPi8+Mz43Pju+/vVwifSx3aW4xMjUzOlwid2luZG93czEyNTNcIixjcDEyNTM6XCJ3aW5kb3dzMTI1M1wiLHdpbmRvd3MxMjU0Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIuKCrO+/veKAmsaS4oCe4oCm4oCg4oChy4bigLDFoOKAucWS77+977+977+977+94oCY4oCZ4oCc4oCd4oCi4oCT4oCUy5zihKLFoeKAusWT77+977+9xbjCoMKhwqLCo8KkwqXCpsKnwqjCqcKqwqvCrMKtwq7Cr8KwwrHCssKzwrTCtcK2wrfCuMK5wrrCu8K8wr3CvsK/w4DDgcOCw4PDhMOFw4bDh8OIw4nDisOLw4zDjcOOw4/EnsORw5LDk8OUw5XDlsOXw5jDmcOaw5vDnMSwxZ7Dn8Ogw6HDosOjw6TDpcOmw6fDqMOpw6rDq8Osw63DrsOvxJ/DscOyw7PDtMO1w7bDt8O4w7nDusO7w7zEscWfw79cIn0sd2luMTI1NDpcIndpbmRvd3MxMjU0XCIsY3AxMjU0Olwid2luZG93czEyNTRcIix3aW5kb3dzMTI1NTp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLigqzvv73igJrGkuKAnuKApuKAoOKAocuG4oCw77+94oC577+977+977+977+977+94oCY4oCZ4oCc4oCd4oCi4oCT4oCUy5zihKLvv73igLrvv73vv73vv73vv73CoMKhwqLCo+KCqsKlwqbCp8KowqnDl8KrwqzCrcKuwq/CsMKxwrLCs8K0wrXCtsK3wrjCucO3wrvCvMK9wr7Cv9aw1rHWstaz1rTWtda21rfWuNa51rrWu9a81r3Wvta/14DXgdeC14PXsNex17LXs9e077+977+977+977+977+977+977+915DXkdeS15PXlNeV15bXl9eY15nXmteb15zXndee15/XoNeh16LXo9ek16XXpten16jXqdeq77+977+94oCO4oCP77+9XCJ9LHdpbjEyNTU6XCJ3aW5kb3dzMTI1NVwiLGNwMTI1NTpcIndpbmRvd3MxMjU1XCIsd2luZG93czEyNTY6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwi4oKs2b7igJrGkuKAnuKApuKAoOKAocuG4oCw2bnigLnFktqG2pjaiNqv4oCY4oCZ4oCc4oCd4oCi4oCT4oCU2qnihKLakeKAusWT4oCM4oCN2rrCoNiMwqLCo8KkwqXCpsKnwqjCqdq+wqvCrMKtwq7Cr8KwwrHCssKzwrTCtcK2wrfCuMK52JvCu8K8wr3Cvtif24HYodii2KPYpNil2KbYp9io2KnYqtir2KzYrdiu2K/YsNix2LLYs9i02LXYtsOX2LfYuNi52LrZgNmB2YLZg8Og2YTDotmF2YbZh9mIw6fDqMOpw6rDq9mJ2YrDrsOv2YvZjNmN2Y7DtNmP2ZDDt9mRw7nZksO7w7zigI7igI/bklwifSx3aW4xMjU2Olwid2luZG93czEyNTZcIixjcDEyNTY6XCJ3aW5kb3dzMTI1NlwiLHdpbmRvd3MxMjU3Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIuKCrO+/veKAmu+/veKAnuKApuKAoOKAoe+/veKAsO+/veKAue+/vcKoy4fCuO+/veKAmOKAmeKAnOKAneKAouKAk+KAlO+/veKEou+/veKAuu+/vcKvy5vvv73CoO+/vcKiwqPCpO+/vcKmwqfDmMKpxZbCq8Kswq3CrsOGwrDCscKywrPCtMK1wrbCt8O4wrnFl8K7wrzCvcK+w6bEhMSuxIDEhsOEw4XEmMSSxIzDicW5xJbEosS2xKrEu8WgxYPFhcOTxYzDlcOWw5fFssWBxZrFqsOcxbvFvcOfxIXEr8SBxIfDpMOlxJnEk8SNw6nFusSXxKPEt8SrxLzFocWExYbDs8WNw7XDtsO3xbPFgsWbxavDvMW8xb7LmVwifSx3aW4xMjU3Olwid2luZG93czEyNTdcIixjcDEyNTc6XCJ3aW5kb3dzMTI1N1wiLHdpbmRvd3MxMjU4Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIuKCrO+/veKAmsaS4oCe4oCm4oCg4oChy4bigLDvv73igLnFku+/ve+/ve+/ve+/veKAmOKAmeKAnOKAneKAouKAk+KAlMuc4oSi77+94oC6xZPvv73vv73FuMKgwqHCosKjwqTCpcKmwqfCqMKpwqrCq8Kswq3CrsKvwrDCscKywrPCtMK1wrbCt8K4wrnCusK7wrzCvcK+wr/DgMOBw4LEgsOEw4XDhsOHw4jDicOKw4vMgMONw47Dj8SQw5HMicOTw5TGoMOWw5fDmMOZw5rDm8Ocxq/Mg8Ofw6DDocOixIPDpMOlw6bDp8Oow6nDqsOrzIHDrcOuw6/EkcOxzKPDs8O0xqHDtsO3w7jDucO6w7vDvMaw4oKrw79cIn0sd2luMTI1ODpcIndpbmRvd3MxMjU4XCIsY3AxMjU4Olwid2luZG93czEyNThcIixpc284ODU5MTp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDCocKiwqPCpMKlwqbCp8KowqnCqsKrwqzCrcKuwq/CsMKxwrLCs8K0wrXCtsK3wrjCucK6wrvCvMK9wr7Cv8OAw4HDgsODw4TDhcOGw4fDiMOJw4rDi8OMw43DjsOPw5DDkcOSw5PDlMOVw5bDl8OYw5nDmsObw5zDncOew5/DoMOhw6LDo8Okw6XDpsOnw6jDqcOqw6vDrMOtw67Dr8Oww7HDssOzw7TDtcO2w7fDuMO5w7rDu8O8w73DvsO/XCJ9LGNwMjg1OTE6XCJpc284ODU5MVwiLGlzbzg4NTkyOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoMSEy5jFgcKkxL3FmsKnwqjFoMWexaTFucKtxb3Fu8KwxIXLm8WCwrTEvsWby4fCuMWhxZ/FpcW6y53FvsW8xZTDgcOCxILDhMS5xIbDh8SMw4nEmMOLxJrDjcOOxI7EkMWDxYfDk8OUxZDDlsOXxZjFrsOaxbDDnMOdxaLDn8WVw6HDosSDw6TEusSHw6fEjcOpxJnDq8Sbw63DrsSPxJHFhMWIw7PDtMWRw7bDt8WZxa/DusWxw7zDvcWjy5lcIn0sY3AyODU5MjpcImlzbzg4NTkyXCIsaXNvODg1OTM6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8KgxKbLmMKjwqTvv73EpMKnwqjEsMWexJ7EtMKt77+9xbvCsMSnwrLCs8K0wrXEpcK3wrjEscWfxJ/EtcK977+9xbzDgMOBw4Lvv73DhMSKxIjDh8OIw4nDisOLw4zDjcOOw4/vv73DkcOSw5PDlMSgw5bDl8Scw5nDmsObw5zFrMWcw5/DoMOhw6Lvv73DpMSLxInDp8Oow6nDqsOrw6zDrcOuw6/vv73DscOyw7PDtMShw7bDt8Sdw7nDusO7w7zFrcWdy5lcIn0sY3AyODU5MzpcImlzbzg4NTkzXCIsaXNvODg1OTQ6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8KgxITEuMWWwqTEqMS7wqfCqMWgxJLEosWmwq3FvcKvwrDEhcubxZfCtMSpxLzLh8K4xaHEk8SjxafFisW+xYvEgMOBw4LDg8OEw4XDhsSuxIzDicSYw4vElsONw47EqsSQxYXFjMS2w5TDlcOWw5fDmMWyw5rDm8OcxajFqsOfxIHDocOiw6PDpMOlw6bEr8SNw6nEmcOrxJfDrcOuxKvEkcWGxY3Et8O0w7XDtsO3w7jFs8O6w7vDvMWpxavLmVwifSxjcDI4NTk0OlwiaXNvODg1OTRcIixpc284ODU5NTp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDQgdCC0IPQhNCF0IbQh9CI0InQitCL0IzCrdCO0I/QkNCR0JLQk9CU0JXQltCX0JjQmdCa0JvQnNCd0J7Qn9Cg0KHQotCj0KTQpdCm0KfQqNCp0KrQq9Cs0K3QrtCv0LDQsdCy0LPQtNC10LbQt9C40LnQutC70LzQvdC+0L/RgNGB0YLRg9GE0YXRhtGH0YjRidGK0YvRjNGN0Y7Rj+KEltGR0ZLRk9GU0ZXRltGX0ZjRmdGa0ZvRnMKn0Z7Rn1wifSxjcDI4NTk1OlwiaXNvODg1OTVcIixpc284ODU5Njp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDvv73vv73vv73CpO+/ve+/ve+/ve+/ve+/ve+/ve+/vdiMwq3vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73Ym++/ve+/ve+/vdif77+92KHYotij2KTYpdim2KfYqNip2KrYq9is2K3Yrtiv2LDYsdiy2LPYtNi12LbYt9i42LnYuu+/ve+/ve+/ve+/ve+/vdmA2YHZgtmD2YTZhdmG2YfZiNmJ2YrZi9mM2Y3ZjtmP2ZDZkdmS77+977+977+977+977+977+977+977+977+977+977+977+977+9XCJ9LGNwMjg1OTY6XCJpc284ODU5NlwiLGlzbzg4NTk3Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoOKAmOKAmcKj4oKs4oKvwqbCp8KowqnNusKrwqzCre+/veKAlcKwwrHCssKzzoTOhc6GwrfOiM6JzorCu86Mwr3Ojs6PzpDOkc6SzpPOlM6VzpbOl86YzpnOms6bzpzOnc6ezp/OoM6h77+9zqPOpM6lzqbOp86ozqnOqs6rzqzOrc6uzq/OsM6xzrLOs860zrXOts63zrjOuc66zrvOvM69zr7Ov8+Az4HPgs+Dz4TPhc+Gz4fPiM+Jz4rPi8+Mz43Pju+/vVwifSxjcDI4NTk3OlwiaXNvODg1OTdcIixpc284ODU5ODp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDvv73CosKjwqTCpcKmwqfCqMKpw5fCq8Kswq3CrsKvwrDCscKywrPCtMK1wrbCt8K4wrnDt8K7wrzCvcK+77+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+94oCX15DXkdeS15PXlNeV15bXl9eY15nXmteb15zXndee15/XoNeh16LXo9ek16XXpten16jXqdeq77+977+94oCO4oCP77+9XCJ9LGNwMjg1OTg6XCJpc284ODU5OFwiLGlzbzg4NTk5Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoMKhwqLCo8KkwqXCpsKnwqjCqcKqwqvCrMKtwq7Cr8KwwrHCssKzwrTCtcK2wrfCuMK5wrrCu8K8wr3CvsK/w4DDgcOCw4PDhMOFw4bDh8OIw4nDisOLw4zDjcOOw4/EnsORw5LDk8OUw5XDlsOXw5jDmcOaw5vDnMSwxZ7Dn8Ogw6HDosOjw6TDpcOmw6fDqMOpw6rDq8Osw63DrsOvxJ/DscOyw7PDtMO1w7bDt8O4w7nDusO7w7zEscWfw79cIn0sY3AyODU5OTpcImlzbzg4NTk5XCIsaXNvODg1OTEwOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoMSExJLEosSqxKjEtsKnxLvEkMWgxabFvcKtxarFisKwxIXEk8SjxKvEqcS3wrfEvMSRxaHFp8W+4oCVxavFi8SAw4HDgsODw4TDhcOGxK7EjMOJxJjDi8SWw43DjsOPw5DFhcWMw5PDlMOVw5bFqMOYxbLDmsObw5zDncOew5/EgcOhw6LDo8Okw6XDpsSvxI3DqcSZw6vEl8Otw67Dr8OwxYbFjcOzw7TDtcO2xanDuMWzw7rDu8O8w73DvsS4XCJ9LGNwMjg2MDA6XCJpc284ODU5MTBcIixpc284ODU5MTE6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8Kg4LiB4LiC4LiD4LiE4LiF4LiG4LiH4LiI4LiJ4LiK4LiL4LiM4LiN4LiO4LiP4LiQ4LiR4LiS4LiT4LiU4LiV4LiW4LiX4LiY4LiZ4Lia4Lib4Lic4Lid4Lie4Lif4Lig4Lih4Lii4Lij4Lik4Lil4Lim4Lin4Lio4Lip4Liq4Lir4Lis4Lit4Liu4Liv4Liw4Lix4Liy4Liz4Li04Li14Li24Li34Li44Li54Li677+977+977+977+94Li/4LmA4LmB4LmC4LmD4LmE4LmF4LmG4LmH4LmI4LmJ4LmK4LmL4LmM4LmN4LmO4LmP4LmQ4LmR4LmS4LmT4LmU4LmV4LmW4LmX4LmY4LmZ4Lma4Lmb77+977+977+977+9XCJ9LGNwMjg2MDE6XCJpc284ODU5MTFcIixpc284ODU5MTM6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8Kg4oCdwqLCo8Kk4oCewqbCp8OYwqnFlsKrwqzCrcKuw4bCsMKxwrLCs+KAnMK1wrbCt8O4wrnFl8K7wrzCvcK+w6bEhMSuxIDEhsOEw4XEmMSSxIzDicW5xJbEosS2xKrEu8WgxYPFhcOTxYzDlcOWw5fFssWBxZrFqsOcxbvFvcOfxIXEr8SBxIfDpMOlxJnEk8SNw6nFusSXxKPEt8SrxLzFocWExYbDs8WNw7XDtsO3xbPFgsWbxavDvMW8xb7igJlcIn0sY3AyODYwMzpcImlzbzg4NTkxM1wiLGlzbzg4NTkxNDp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDhuILhuIPCo8SKxIvhuIrCp+G6gMKp4bqC4biL4buywq3CrsW44bie4bifxKDEoeG5gOG5gcK24bmW4bqB4bmX4bqD4bmg4buz4bqE4bqF4bmhw4DDgcOCw4PDhMOFw4bDh8OIw4nDisOLw4zDjcOOw4/FtMORw5LDk8OUw5XDluG5qsOYw5nDmsObw5zDncW2w5/DoMOhw6LDo8Okw6XDpsOnw6jDqcOqw6vDrMOtw67Dr8W1w7HDssOzw7TDtcO24bmrw7jDucO6w7vDvMO9xbfDv1wifSxjcDI4NjA0OlwiaXNvODg1OTE0XCIsaXNvODg1OTE1Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoMKhwqLCo+KCrMKlxaDCp8WhwqnCqsKrwqzCrcKuwq/CsMKxwrLCs8W9wrXCtsK3xb7CucK6wrvFksWTxbjCv8OAw4HDgsODw4TDhcOGw4fDiMOJw4rDi8OMw43DjsOPw5DDkcOSw5PDlMOVw5bDl8OYw5nDmsObw5zDncOew5/DoMOhw6LDo8Okw6XDpsOnw6jDqcOqw6vDrMOtw67Dr8Oww7HDssOzw7TDtcO2w7fDuMO5w7rDu8O8w73DvsO/XCJ9LGNwMjg2MDU6XCJpc284ODU5MTVcIixpc284ODU5MTY6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8KgxITEhcWB4oKs4oCexaDCp8WhwqnImMKrxbnCrcW6xbvCsMKxxIzFgsW94oCdwrbCt8W+xI3ImcK7xZLFk8W4xbzDgMOBw4LEgsOExIbDhsOHw4jDicOKw4vDjMONw47Dj8SQxYPDksOTw5TFkMOWxZrFsMOZw5rDm8OcxJjImsOfw6DDocOixIPDpMSHw6bDp8Oow6nDqsOrw6zDrcOuw6/EkcWEw7LDs8O0xZHDtsWbxbHDucO6w7vDvMSZyJvDv1wifSxjcDI4NjA2OlwiaXNvODg1OTE2XCIsY3A0Mzc6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiw4fDvMOpw6LDpMOgw6XDp8Oqw6vDqMOvw67DrMOEw4XDicOmw4bDtMO2w7LDu8O5w7/DlsOcwqLCo8Kl4oKnxpLDocOtw7PDusOxw5HCqsK6wr/ijJDCrMK9wrzCocKrwrvilpHilpLilpPilILilKTilaHilaLilZbilZXilaPilZHilZfilZ3ilZzilZvilJDilJTilLTilKzilJzilIDilLzilZ7ilZ/ilZrilZTilanilabilaDilZDilazilafilajilaTilaXilZnilZjilZLilZPilavilarilJjilIzilojiloTilozilpDiloDOscOfzpPPgM6jz4PCtc+EzqbOmM6pzrTiiJ7Phs614oip4omhwrHiiaXiiaTijKDijKHDt+KJiMKw4oiZwrfiiJrigb/CsuKWoMKgXCJ9LGlibTQzNzpcImNwNDM3XCIsY3NpYm00Mzc6XCJjcDQzN1wiLGNwNzM3Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIs6RzpLOk86UzpXOls6XzpjOmc6azpvOnM6dzp7On86gzqHOo86kzqXOps6nzqjOqc6xzrLOs860zrXOts63zrjOuc66zrvOvM69zr7Ov8+Az4HPg8+Cz4TPhc+Gz4fPiOKWkeKWkuKWk+KUguKUpOKVoeKVouKVluKVleKVo+KVkeKVl+KVneKVnOKVm+KUkOKUlOKUtOKUrOKUnOKUgOKUvOKVnuKVn+KVmuKVlOKVqeKVpuKVoOKVkOKVrOKVp+KVqOKVpOKVpeKVmeKVmOKVkuKVk+KVq+KVquKUmOKUjOKWiOKWhOKWjOKWkOKWgM+JzqzOrc6uz4rOr8+Mz43Pi8+OzobOiM6JzorOjM6Ozo/CseKJpeKJpM6qzqvDt+KJiMKw4oiZwrfiiJrigb/CsuKWoMKgXCJ9LGlibTczNzpcImNwNzM3XCIsY3NpYm03Mzc6XCJjcDczN1wiLGNwNzc1Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIsSGw7zDqcSBw6TEo8OlxIfFgsSTxZbFl8SrxbnDhMOFw4nDpsOGxY3DtsSiwqLFmsWbw5bDnMO4wqPDmMOXwqTEgMSqw7PFu8W8xbrigJ3CpsKpwq7CrMK9wrzFgcKrwrvilpHilpLilpPilILilKTEhMSMxJjEluKVo+KVkeKVl+KVncSuxaDilJDilJTilLTilKzilJzilIDilLzFssWq4pWa4pWU4pWp4pWm4pWg4pWQ4pWsxb3EhcSNxJnEl8SvxaHFs8Wrxb7ilJjilIzilojiloTilozilpDiloDDk8OfxYzFg8O1w5XCtcWExLbEt8S7xLzFhsSSxYXigJnCrcKx4oCcwr7CtsKnw7figJ7CsOKImcK3wrnCs8Ky4pagwqBcIn0saWJtNzc1OlwiY3A3NzVcIixjc2libTc3NTpcImNwNzc1XCIsY3A4NTA6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiw4fDvMOpw6LDpMOgw6XDp8Oqw6vDqMOvw67DrMOEw4XDicOmw4bDtMO2w7LDu8O5w7/DlsOcw7jCo8OYw5fGksOhw63Ds8O6w7HDkcKqwrrCv8KuwqzCvcK8wqHCq8K74paR4paS4paT4pSC4pSkw4HDgsOAwqnilaPilZHilZfilZ3CosKl4pSQ4pSU4pS04pSs4pSc4pSA4pS8w6PDg+KVmuKVlOKVqeKVpuKVoOKVkOKVrMKkw7DDkMOKw4vDiMSxw43DjsOP4pSY4pSM4paI4paEwqbDjOKWgMOTw5/DlMOSw7XDlcK1w77DnsOaw5vDmcO9w53Cr8K0wq3CseKAl8K+wrbCp8O3wrjCsMKowrfCucKzwrLilqDCoFwifSxpYm04NTA6XCJjcDg1MFwiLGNzaWJtODUwOlwiY3A4NTBcIixjcDg1Mjp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLDh8O8w6nDosOkxa/Eh8OnxYLDq8WQxZHDrsW5w4TEhsOJxLnEusO0w7bEvcS+xZrFm8OWw5zFpMWlxYHDl8SNw6HDrcOzw7rEhMSFxb3FvsSYxJnCrMW6xIzFn8KrwrvilpHilpLilpPilILilKTDgcOCxJrFnuKVo+KVkeKVl+KVncW7xbzilJDilJTilLTilKzilJzilIDilLzEgsSD4pWa4pWU4pWp4pWm4pWg4pWQ4pWswqTEkcSQxI7Di8SPxYfDjcOOxJvilJjilIzilojiloTFosWu4paAw5PDn8OUxYPFhMWIxaDFocWUw5rFlcWww73DncWjwrTCrcudy5vLh8uYwqfDt8K4wrDCqMuZxbHFmMWZ4pagwqBcIn0saWJtODUyOlwiY3A4NTJcIixjc2libTg1MjpcImNwODUyXCIsY3A4NTU6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwi0ZLQgtGT0IPRkdCB0ZTQhNGV0IXRltCG0ZfQh9GY0IjRmdCJ0ZrQitGb0IvRnNCM0Z7QjtGf0I/RjtCu0YrQqtCw0JDQsdCR0YbQptC00JTQtdCV0YTQpNCz0JPCq8K74paR4paS4paT4pSC4pSk0YXQpdC40JjilaPilZHilZfilZ3QudCZ4pSQ4pSU4pS04pSs4pSc4pSA4pS80LrQmuKVmuKVlOKVqeKVpuKVoOKVkOKVrMKk0LvQm9C80JzQvdCd0L7QntC/4pSY4pSM4paI4paE0J/Rj+KWgNCv0YDQoNGB0KHRgtCi0YPQo9C20JbQstCS0YzQrOKElsKt0YvQq9C30JfRiNCo0Y3QrdGJ0KnRh9CnwqfilqDCoFwifSxpYm04NTU6XCJjcDg1NVwiLGNzaWJtODU1OlwiY3A4NTVcIixjcDg1Njp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLXkNeR15LXk9eU15XXlteX15jXmdea15vXnNed157Xn9eg16HXotej16TXpdem16fXqNep16rvv73Co++/vcOX77+977+977+977+977+977+977+977+977+977+9wq7CrMK9wrzvv73Cq8K74paR4paS4paT4pSC4pSk77+977+977+9wqnilaPilZHilZfilZ3CosKl4pSQ4pSU4pS04pSs4pSc4pSA4pS877+977+94pWa4pWU4pWp4pWm4pWg4pWQ4pWswqTvv73vv73vv73vv73vv73vv73vv73vv73vv73ilJjilIzilojiloTCpu+/veKWgO+/ve+/ve+/ve+/ve+/ve+/vcK177+977+977+977+977+977+977+9wq/CtMKtwrHigJfCvsK2wqfDt8K4wrDCqMK3wrnCs8Ky4pagwqBcIn0saWJtODU2OlwiY3A4NTZcIixjc2libTg1NjpcImNwODU2XCIsY3A4NTc6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiw4fDvMOpw6LDpMOgw6XDp8Oqw6vDqMOvw67EscOEw4XDicOmw4bDtMO2w7LDu8O5xLDDlsOcw7jCo8OYxZ7Fn8Ohw63Ds8O6w7HDkcSexJ/Cv8KuwqzCvcK8wqHCq8K74paR4paS4paT4pSC4pSkw4HDgsOAwqnilaPilZHilZfilZ3CosKl4pSQ4pSU4pS04pSs4pSc4pSA4pS8w6PDg+KVmuKVlOKVqeKVpuKVoOKVkOKVrMKkwrrCqsOKw4vDiO+/vcONw47Dj+KUmOKUjOKWiOKWhMKmw4ziloDDk8Ofw5TDksO1w5XCte+/vcOXw5rDm8OZw6zDv8KvwrTCrcKx77+9wr7CtsKnw7fCuMKwwqjCt8K5wrPCsuKWoMKgXCJ9LGlibTg1NzpcImNwODU3XCIsY3NpYm04NTc6XCJjcDg1N1wiLGNwODU4Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIsOHw7zDqcOiw6TDoMOlw6fDqsOrw6jDr8Ouw6zDhMOFw4nDpsOGw7TDtsOyw7vDucO/w5bDnMO4wqPDmMOXxpLDocOtw7PDusOxw5HCqsK6wr/CrsKswr3CvMKhwqvCu+KWkeKWkuKWk+KUguKUpMOBw4LDgMKp4pWj4pWR4pWX4pWdwqLCpeKUkOKUlOKUtOKUrOKUnOKUgOKUvMOjw4PilZrilZTilanilabilaDilZDilazCpMOww5DDisOLw4jigqzDjcOOw4/ilJjilIzilojiloTCpsOM4paAw5PDn8OUw5LDtcOVwrXDvsOew5rDm8OZw73DncKvwrTCrcKx4oCXwr7CtsKnw7fCuMKwwqjCt8K5wrPCsuKWoMKgXCJ9LGlibTg1ODpcImNwODU4XCIsY3NpYm04NTg6XCJjcDg1OFwiLGNwODYwOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIsOHw7zDqcOiw6PDoMOBw6fDqsOKw6jDjcOUw6zDg8OCw4nDgMOIw7TDtcOyw5rDucOMw5XDnMKiwqPDmeKCp8OTw6HDrcOzw7rDscORwqrCusK/w5LCrMK9wrzCocKrwrvilpHilpLilpPilILilKTilaHilaLilZbilZXilaPilZHilZfilZ3ilZzilZvilJDilJTilLTilKzilJzilIDilLzilZ7ilZ/ilZrilZTilanilabilaDilZDilazilafilajilaTilaXilZnilZjilZLilZPilavilarilJjilIzilojiloTilozilpDiloDOscOfzpPPgM6jz4PCtc+EzqbOmM6pzrTiiJ7Phs614oip4omhwrHiiaXiiaTijKDijKHDt+KJiMKw4oiZwrfiiJrigb/CsuKWoMKgXCJ9LGlibTg2MDpcImNwODYwXCIsY3NpYm04NjA6XCJjcDg2MFwiLGNwODYxOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIsOHw7zDqcOiw6TDoMOlw6fDqsOrw6jDkMOww57DhMOFw4nDpsOGw7TDtsO+w7vDncO9w5bDnMO4wqPDmOKCp8aSw6HDrcOzw7rDgcONw5PDmsK/4oyQwqzCvcK8wqHCq8K74paR4paS4paT4pSC4pSk4pWh4pWi4pWW4pWV4pWj4pWR4pWX4pWd4pWc4pWb4pSQ4pSU4pS04pSs4pSc4pSA4pS84pWe4pWf4pWa4pWU4pWp4pWm4pWg4pWQ4pWs4pWn4pWo4pWk4pWl4pWZ4pWY4pWS4pWT4pWr4pWq4pSY4pSM4paI4paE4paM4paQ4paAzrHDn86Tz4DOo8+DwrXPhM6mzpjOqc604oiez4bOteKIqeKJocKx4oml4omk4oyg4oyhw7fiiYjCsOKImcK34oia4oG/wrLilqDCoFwifSxpYm04NjE6XCJjcDg2MVwiLGNzaWJtODYxOlwiY3A4NjFcIixjcDg2Mjp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLXkNeR15LXk9eU15XXlteX15jXmdea15vXnNed157Xn9eg16HXotej16TXpdem16fXqNep16rCosKjwqXigqfGksOhw63Ds8O6w7HDkcKqwrrCv+KMkMKswr3CvMKhwqvCu+KWkeKWkuKWk+KUguKUpOKVoeKVouKVluKVleKVo+KVkeKVl+KVneKVnOKVm+KUkOKUlOKUtOKUrOKUnOKUgOKUvOKVnuKVn+KVmuKVlOKVqeKVpuKVoOKVkOKVrOKVp+KVqOKVpOKVpeKVmeKVmOKVkuKVk+KVq+KVquKUmOKUjOKWiOKWhOKWjOKWkOKWgM6xw5/Ok8+AzqPPg8K1z4TOps6YzqnOtOKIns+GzrXiiKniiaHCseKJpeKJpOKMoOKMocO34omIwrDiiJnCt+KImuKBv8Ky4pagwqBcIn0saWJtODYyOlwiY3A4NjJcIixjc2libTg2MjpcImNwODYyXCIsY3A4NjM6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiw4fDvMOpw6LDgsOgwrbDp8Oqw6vDqMOvw67igJfDgMKnw4nDiMOKw7TDi8OPw7vDucKkw5TDnMKiwqPDmcObxpLCpsK0w7PDusKowrjCs8Kvw47ijJDCrMK9wrzCvsKrwrvilpHilpLilpPilILilKTilaHilaLilZbilZXilaPilZHilZfilZ3ilZzilZvilJDilJTilLTilKzilJzilIDilLzilZ7ilZ/ilZrilZTilanilabilaDilZDilazilafilajilaTilaXilZnilZjilZLilZPilavilarilJjilIzilojiloTilozilpDiloDOscOfzpPPgM6jz4PCtc+EzqbOmM6pzrTiiJ7Phs614oip4omhwrHiiaXiiaTijKDijKHDt+KJiMKw4oiZwrfiiJrigb/CsuKWoMKgXCJ9LGlibTg2MzpcImNwODYzXCIsY3NpYm04NjM6XCJjcDg2M1wiLGNwODY0Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIlxcMFx1MDAwMVx1MDAwMlx1MDAwM1x1MDAwNFx1MDAwNVx1MDAwNlx1MDAwN1xcYlxcdFxcblxcdlxcZlxcclx1MDAwZVx1MDAwZlx1MDAxMFx1MDAxMVx1MDAxMlx1MDAxM1x1MDAxNFx1MDAxNVx1MDAxNlx1MDAxN1x1MDAxOFx1MDAxOVx1MDAxYVx1MDAxYlx1MDAxY1x1MDAxZFx1MDAxZVx1MDAxZiAhXFxcIiMk2aomJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXFxcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn/CsMK34oiZ4oia4paS4pSA4pSC4pS84pSk4pSs4pSc4pS04pSQ4pSM4pSU4pSYzrLiiJ7PhsKxwr3CvOKJiMKrwrvvu7fvu7jvv73vv73vu7vvu7zvv73CoMKt77qCwqPCpO+6hO+/ve+/ve+6ju+6j++6le+6mdiM77qd77qh77ql2aDZodmi2aPZpNml2abZp9mo2anvu5HYm++6se+6te+6udifwqLvuoDvuoHvuoPvuoXvu4rvuovvuo3vupHvupPvupfvupvvup/vuqPvuqfvuqnvuqvvuq3vuq/vurPvurfvurvvur/vu4Hvu4Xvu4vvu4/CpsKsw7fDl++7idmA77uT77uX77ub77uf77uj77un77ur77ut77uv77uz77q977uM77uO77uN77uh77m92ZHvu6Xvu6nvu6zvu7Dvu7Lvu5Dvu5Xvu7Xvu7bvu53vu5nvu7HilqDvv71cIn0saWJtODY0OlwiY3A4NjRcIixjc2libTg2NDpcImNwODY0XCIsY3A4NjU6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiw4fDvMOpw6LDpMOgw6XDp8Oqw6vDqMOvw67DrMOEw4XDicOmw4bDtMO2w7LDu8O5w7/DlsOcw7jCo8OY4oKnxpLDocOtw7PDusOxw5HCqsK6wr/ijJDCrMK9wrzCocKrwqTilpHilpLilpPilILilKTilaHilaLilZbilZXilaPilZHilZfilZ3ilZzilZvilJDilJTilLTilKzilJzilIDilLzilZ7ilZ/ilZrilZTilanilabilaDilZDilazilafilajilaTilaXilZnilZjilZLilZPilavilarilJjilIzilojiloTilozilpDiloDOscOfzpPPgM6jz4PCtc+EzqbOmM6pzrTiiJ7Phs614oip4omhwrHiiaXiiaTijKDijKHDt+KJiMKw4oiZwrfiiJrigb/CsuKWoMKgXCJ9LGlibTg2NTpcImNwODY1XCIsY3NpYm04NjU6XCJjcDg2NVwiLGNwODY2Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcItCQ0JHQktCT0JTQldCW0JfQmNCZ0JrQm9Cc0J3QntCf0KDQodCi0KPQpNCl0KbQp9Co0KnQqtCr0KzQrdCu0K/QsNCx0LLQs9C00LXQttC30LjQudC60LvQvNC90L7Qv+KWkeKWkuKWk+KUguKUpOKVoeKVouKVluKVleKVo+KVkeKVl+KVneKVnOKVm+KUkOKUlOKUtOKUrOKUnOKUgOKUvOKVnuKVn+KVmuKVlOKVqeKVpuKVoOKVkOKVrOKVp+KVqOKVpOKVpeKVmeKVmOKVkuKVk+KVq+KVquKUmOKUjOKWiOKWhOKWjOKWkOKWgNGA0YHRgtGD0YTRhdGG0YfRiNGJ0YrRi9GM0Y3RjtGP0IHRkdCE0ZTQh9GX0I7RnsKw4oiZwrfiiJrihJbCpOKWoMKgXCJ9LGlibTg2NjpcImNwODY2XCIsY3NpYm04NjY6XCJjcDg2NlwiLGNwODY5Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIu+/ve+/ve+/ve+/ve+/ve+/vc6G77+9wrfCrMKm4oCY4oCZzojigJXOic6KzqrOjO+/ve+/vc6OzqvCqc6PwrLCs86swqPOrc6uzq/Pis6Qz4zPjc6RzpLOk86UzpXOls6Xwr3OmM6ZwqvCu+KWkeKWkuKWk+KUguKUpM6azpvOnM6d4pWj4pWR4pWX4pWdzp7On+KUkOKUlOKUtOKUrOKUnOKUgOKUvM6gzqHilZrilZTilanilabilaDilZDilazOo86kzqXOps6nzqjOqc6xzrLOs+KUmOKUjOKWiOKWhM60zrXiloDOts63zrjOuc66zrvOvM69zr7Ov8+Az4HPg8+Cz4TOhMKtwrHPhc+Gz4fCp8+IzoXCsMKoz4nPi86wz47ilqDCoFwifSxpYm04Njk6XCJjcDg2OVwiLGNzaWJtODY5OlwiY3A4NjlcIixjcDkyMjp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDCocKiwqPCpMKlwqbCp8KowqnCqsKrwqzCrcKu4oC+wrDCscKywrPCtMK1wrbCt8K4wrnCusK7wrzCvcK+wr/DgMOBw4LDg8OEw4XDhsOHw4jDicOKw4vDjMONw47Dj8Wgw5HDksOTw5TDlcOWw5fDmMOZw5rDm8Ocw53FvcOfw6DDocOiw6PDpMOlw6bDp8Oow6nDqsOrw6zDrcOuw6/FocOxw7LDs8O0w7XDtsO3w7jDucO6w7vDvMO9xb7Dv1wifSxpYm05MjI6XCJjcDkyMlwiLGNzaWJtOTIyOlwiY3A5MjJcIixjcDEwNDY6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwi77qIw5fDt++jtu+jte+jtO+jt++5scKI4pag4pSC4pSA4pSQ4pSM4pSU4pSY77m577m777m977m/77m377qK77uw77uz77uy77uO77uP77uQ77u277u477u677u8wqDvo7rvo7nvo7jCpO+ju++6i++6ke+6l++6m++6n++6o9iMwq3vuqfvurPZoNmh2aLZo9mk2aXZptmn2ajZqe+6t9ib77q777q/77uK2J/vu4vYodii2KPYpNil2KbYp9io2KnYqtir2KzYrdiu2K/YsNix2LLYs9i02LXYtti377uH2LnYuu+7jO+6gu+6hO+6ju+7k9mA2YHZgtmD2YTZhdmG2YfZiNmJ2YrZi9mM2Y3ZjtmP2ZDZkdmS77uX77ub77uf76O877u177u377u577u777uj77un77us77up77+9XCJ9LGlibTEwNDY6XCJjcDEwNDZcIixjc2libTEwNDY6XCJjcDEwNDZcIixjcDExMjQ6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8Kg0IHQgtKQ0ITQhdCG0IfQiNCJ0IrQi9CMwq3QjtCP0JDQkdCS0JPQlNCV0JbQl9CY0JnQmtCb0JzQndCe0J/QoNCh0KLQo9Ck0KXQptCn0KjQqdCq0KvQrNCt0K7Qr9Cw0LHQstCz0LTQtdC20LfQuNC50LrQu9C80L3QvtC/0YDRgdGC0YPRhNGF0YbRh9GI0YnRitGL0YzRjdGO0Y/ihJbRkdGS0pHRlNGV0ZbRl9GY0ZnRmtGb0ZzCp9Ge0Z9cIn0saWJtMTEyNDpcImNwMTEyNFwiLGNzaWJtMTEyNDpcImNwMTEyNFwiLGNwMTEyNTp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLQkNCR0JLQk9CU0JXQltCX0JjQmdCa0JvQnNCd0J7Qn9Cg0KHQotCj0KTQpdCm0KfQqNCp0KrQq9Cs0K3QrtCv0LDQsdCy0LPQtNC10LbQt9C40LnQutC70LzQvdC+0L/ilpHilpLilpPilILilKTilaHilaLilZbilZXilaPilZHilZfilZ3ilZzilZvilJDilJTilLTilKzilJzilIDilLzilZ7ilZ/ilZrilZTilanilabilaDilZDilazilafilajilaTilaXilZnilZjilZLilZPilavilarilJjilIzilojiloTilozilpDiloDRgNGB0YLRg9GE0YXRhtGH0YjRidGK0YvRjNGN0Y7Rj9CB0ZHSkNKR0ITRlNCG0ZbQh9GXwrfiiJrihJbCpOKWoMKgXCJ9LGlibTExMjU6XCJjcDExMjVcIixjc2libTExMjU6XCJjcDExMjVcIixjcDExMjk6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8KgwqHCosKjwqTCpcKmwqfFk8KpwqrCq8Kswq3CrsKvwrDCscKywrPFuMK1wrbCt8WSwrnCusK7wrzCvcK+wr/DgMOBw4LEgsOEw4XDhsOHw4jDicOKw4vMgMONw47Dj8SQw5HMicOTw5TGoMOWw5fDmMOZw5rDm8Ocxq/Mg8Ofw6DDocOixIPDpMOlw6bDp8Oow6nDqsOrzIHDrcOuw6/EkcOxzKPDs8O0xqHDtsO3w7jDucO6w7vDvMaw4oKrw79cIn0saWJtMTEyOTpcImNwMTEyOVwiLGNzaWJtMTEyOTpcImNwMTEyOVwiLGNwMTEzMzp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDguoHguoLguoTguofguojguqrguorguo3gupTgupXgupbgupfgupnguprgupvgupzgup3gup7gup/guqHguqLguqPguqXguqfguqvguq3guq7vv73vv73vv73guq/gurDgurLgurPgurTgurXgurbgurfgurjgurngurzgurHgurvgur3vv73vv73vv73gu4Dgu4Hgu4Lgu4Pgu4Tgu4jgu4ngu4rgu4vgu4zgu43gu4bvv73gu5zgu53igq3vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73gu5Dgu5Hgu5Lgu5Pgu5Tgu5Xgu5bgu5fgu5jgu5nvv73vv73CosKswqbvv71cIn0saWJtMTEzMzpcImNwMTEzM1wiLGNzaWJtMTEzMzpcImNwMTEzM1wiLGNwMTE2MTp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLvv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73guYjguIHguILguIPguITguIXguIbguIfguIjguInguIrguIvguIzguI3guI7guI/guJDguJHguJLguJPguJTguJXguJbguJfguJjguJnguJrguJvguJzguJ3guJ7guJ/guKDguKHguKLguKPguKTguKXguKbguKfguKjguKnguKrguKvguKzguK3guK7guK/guLDguLHguLLguLPguLTguLXguLbguLfguLjguLnguLrguYnguYrguYvigqzguL/guYDguYHguYLguYPguYTguYXguYbguYfguYjguYnguYrguYvguYzguY3guY7guY/guZDguZHguZLguZPguZTguZXguZbguZfguZjguZnguZrguZvCosKswqbCoFwifSxpYm0xMTYxOlwiY3AxMTYxXCIsY3NpYm0xMTYxOlwiY3AxMTYxXCIsY3AxMTYyOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIuKCrMKBwoLCg8KE4oCmwobCh8KIwonCisKLwozCjcKOwo/CkOKAmOKAmeKAnOKAneKAouKAk+KAlMKYwpnCmsKbwpzCncKewp/CoOC4geC4guC4g+C4hOC4heC4huC4h+C4iOC4ieC4iuC4i+C4jOC4jeC4juC4j+C4kOC4keC4kuC4k+C4lOC4leC4luC4l+C4mOC4meC4muC4m+C4nOC4neC4nuC4n+C4oOC4oeC4ouC4o+C4pOC4peC4puC4p+C4qOC4qeC4quC4q+C4rOC4reC4ruC4r+C4sOC4seC4suC4s+C4tOC4teC4tuC4t+C4uOC4ueC4uu+/ve+/ve+/ve+/veC4v+C5gOC5geC5guC5g+C5hOC5heC5huC5h+C5iOC5ieC5iuC5i+C5jOC5jeC5juC5j+C5kOC5keC5kuC5k+C5lOC5leC5luC5l+C5mOC5meC5muC5m++/ve+/ve+/ve+/vVwifSxpYm0xMTYyOlwiY3AxMTYyXCIsY3NpYm0xMTYyOlwiY3AxMTYyXCIsY3AxMTYzOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoMKhwqLCo+KCrMKlwqbCp8WTwqnCqsKrwqzCrcKuwq/CsMKxwrLCs8W4wrXCtsK3xZLCucK6wrvCvMK9wr7Cv8OAw4HDgsSCw4TDhcOGw4fDiMOJw4rDi8yAw43DjsOPxJDDkcyJw5PDlMagw5bDl8OYw5nDmsObw5zGr8yDw5/DoMOhw6LEg8Okw6XDpsOnw6jDqcOqw6vMgcOtw67Dr8SRw7HMo8Ozw7TGocO2w7fDuMO5w7rDu8O8xrDigqvDv1wifSxpYm0xMTYzOlwiY3AxMTYzXCIsY3NpYm0xMTYzOlwiY3AxMTYzXCIsbWFjY3JvYXRpYW46e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiw4TDhcOHw4nDkcOWw5zDocOgw6LDpMOjw6XDp8Opw6jDqsOrw63DrMOuw6/DscOzw7LDtMO2w7XDusO5w7vDvOKAoMKwwqLCo8Kn4oCiwrbDn8KuxaDihKLCtMKo4omgxb3DmOKInsKx4omk4oml4oiGwrXiiILiiJHiiI/FoeKIq8KqwrrihKbFvsO4wr/CocKs4oiaxpLiiYjEhsKrxIzigKbCoMOAw4PDlcWSxZPEkOKAlOKAnOKAneKAmOKAmcO34peK77+9wqnigYTCpOKAueKAusOGwrvigJPCt+KAmuKAnuKAsMOCxIfDgcSNw4jDjcOOw4/DjMOTw5TEkcOSw5rDm8OZxLHLhsucwq/PgMOLy5rCuMOKw6bLh1wifSxtYWNjeXJpbGxpYzp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLQkNCR0JLQk9CU0JXQltCX0JjQmdCa0JvQnNCd0J7Qn9Cg0KHQotCj0KTQpdCm0KfQqNCp0KrQq9Cs0K3QrtCv4oCgwrDCosKjwqfigKLCttCGwq7CqeKEotCC0ZLiiaDQg9GT4oiewrHiiaTiiaXRlsK14oiC0IjQhNGU0IfRl9CJ0ZnQitGa0ZjQhcKs4oiaxpLiiYjiiIbCq8K74oCmwqDQi9Gb0IzRnNGV4oCT4oCU4oCc4oCd4oCY4oCZw7figJ7QjtGe0I/Rn+KEltCB0ZHRj9Cw0LHQstCz0LTQtdC20LfQuNC50LrQu9C80L3QvtC/0YDRgdGC0YPRhNGF0YbRh9GI0YnRitGL0YzRjdGOwqRcIn0sbWFjZ3JlZWs6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiw4TCucKyw4nCs8OWw5zOhcOgw6LDpM6EwqjDp8Opw6jDqsOrwqPihKLDrsOv4oCiwr3igLDDtMO2wqbCrcO5w7vDvOKAoM6TzpTOmM6bzp7OoMOfwq7Cqc6jzqrCp+KJoMKwzofOkcKx4omk4omlwqXOks6VzpbOl86ZzprOnM6mzqvOqM6pzqzOncKszp/OoeKJiM6kwqvCu+KApsKgzqXOp86GzojFk+KAk+KAleKAnOKAneKAmOKAmcO3zonOis6Mzo7Orc6uzq/PjM6Pz43Osc6yz4jOtM61z4bOs863zrnOvs66zrvOvM69zr/PgM+Oz4HPg8+EzrjPic+Cz4fPhc62z4rPi86QzrDvv71cIn0sbWFjaWNlbGFuZDp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLDhMOFw4fDicORw5bDnMOhw6DDosOkw6PDpcOnw6nDqMOqw6vDrcOsw67Dr8Oxw7PDssO0w7bDtcO6w7nDu8O8w53CsMKiwqPCp+KAosK2w5/CrsKp4oSiwrTCqOKJoMOGw5jiiJ7CseKJpOKJpcKlwrXiiILiiJHiiI/PgOKIq8KqwrrihKbDpsO4wr/CocKs4oiaxpLiiYjiiIbCq8K74oCmwqDDgMODw5XFksWT4oCT4oCU4oCc4oCd4oCY4oCZw7fil4rDv8W44oGEwqTDkMOww57DvsO9wrfigJrigJ7igLDDgsOKw4HDi8OIw43DjsOPw4zDk8OU77+9w5LDmsObw5nEscuGy5zCr8uYy5nLmsK4y53Lm8uHXCJ9LG1hY3JvbWFuOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIsOEw4XDh8OJw5HDlsOcw6HDoMOiw6TDo8Olw6fDqcOow6rDq8Otw6zDrsOvw7HDs8Oyw7TDtsO1w7rDucO7w7zigKDCsMKiwqPCp+KAosK2w5/CrsKp4oSiwrTCqOKJoMOGw5jiiJ7CseKJpOKJpcKlwrXiiILiiJHiiI/PgOKIq8KqwrrihKbDpsO4wr/CocKs4oiaxpLiiYjiiIbCq8K74oCmwqDDgMODw5XFksWT4oCT4oCU4oCc4oCd4oCY4oCZw7fil4rDv8W44oGEwqTigLnigLrvrIHvrILigKHCt+KAmuKAnuKAsMOCw4rDgcOLw4jDjcOOw4/DjMOTw5Tvv73DksOaw5vDmcSxy4bLnMKvy5jLmcuawrjLncuby4dcIn0sbWFjcm9tYW5pYTp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLDhMOFw4fDicORw5bDnMOhw6DDosOkw6PDpcOnw6nDqMOqw6vDrcOsw67Dr8Oxw7PDssO0w7bDtcO6w7nDu8O84oCgwrDCosKjwqfigKLCtsOfwq7CqeKEosK0wqjiiaDEgsWe4oiewrHiiaTiiaXCpcK14oiC4oiR4oiPz4DiiKvCqsK64oSmxIPFn8K/wqHCrOKImsaS4omI4oiGwqvCu+KApsKgw4DDg8OVxZLFk+KAk+KAlOKAnOKAneKAmOKAmcO34peKw7/FuOKBhMKk4oC54oC6xaLFo+KAocK34oCa4oCe4oCww4LDisOBw4vDiMONw47Dj8OMw5PDlO+/vcOSw5rDm8OZxLHLhsucwq/LmMuZy5rCuMudy5vLh1wifSxtYWN0aGFpOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIsKrwrvigKbvoozvoo/vopLvopXvopjvoovvoo7vopHvopTvopfigJzigJ3vopnvv73igKLvooTvoonvooXvoobvoofvoojvoorvoo3vopDvopPvopbigJjigJnvv73CoOC4geC4guC4g+C4hOC4heC4huC4h+C4iOC4ieC4iuC4i+C4jOC4jeC4juC4j+C4kOC4keC4kuC4k+C4lOC4leC4luC4l+C4mOC4meC4muC4m+C4nOC4neC4nuC4n+C4oOC4oeC4ouC4o+C4pOC4peC4puC4p+C4qOC4qeC4quC4q+C4rOC4reC4ruC4r+C4sOC4seC4suC4s+C4tOC4teC4tuC4t+C4uOC4ueC4ulxcdWZlZmbigIvigJPigJTguL/guYDguYHguYLguYPguYTguYXguYbguYfguYjguYnguYrguYvguYzguY3ihKLguY/guZDguZHguZLguZPguZTguZXguZbguZfguZjguZnCrsKp77+977+977+977+9XCJ9LG1hY3R1cmtpc2g6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiw4TDhcOHw4nDkcOWw5zDocOgw6LDpMOjw6XDp8Opw6jDqsOrw63DrMOuw6/DscOzw7LDtMO2w7XDusO5w7vDvOKAoMKwwqLCo8Kn4oCiwrbDn8KuwqnihKLCtMKo4omgw4bDmOKInsKx4omk4omlwqXCteKIguKIkeKIj8+A4oirwqrCuuKEpsOmw7jCv8KhwqziiJrGkuKJiOKIhsKrwrvigKbCoMOAw4PDlcWSxZPigJPigJTigJzigJ3igJjigJnDt+KXisO/xbjEnsSfxLDEscWexZ/igKHCt+KAmuKAnuKAsMOCw4rDgcOLw4jDjcOOw4/DjMOTw5Tvv73DksOaw5vDme+/vcuGy5zCr8uYy5nLmsK4y53Lm8uHXCJ9LG1hY3VrcmFpbmU6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwi0JDQkdCS0JPQlNCV0JbQl9CY0JnQmtCb0JzQndCe0J/QoNCh0KLQo9Ck0KXQptCn0KjQqdCq0KvQrNCt0K7Qr+KAoMKw0pDCo8Kn4oCiwrbQhsKuwqnihKLQgtGS4omg0IPRk+KInsKx4omk4oml0ZbCtdKR0IjQhNGU0IfRl9CJ0ZnQitGa0ZjQhcKs4oiaxpLiiYjiiIbCq8K74oCmwqDQi9Gb0IzRnNGV4oCT4oCU4oCc4oCd4oCY4oCZw7figJ7QjtGe0I/Rn+KEltCB0ZHRj9Cw0LHQstCz0LTQtdC20LfQuNC50LrQu9C80L3QvtC/0YDRgdGC0YPRhNGF0YbRh9GI0YnRitGL0YzRjdGOwqRcIn0sa29pOHI6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwi4pSA4pSC4pSM4pSQ4pSU4pSY4pSc4pSk4pSs4pS04pS84paA4paE4paI4paM4paQ4paR4paS4paT4oyg4pag4oiZ4oia4omI4omk4omlwqDijKHCsMKywrfDt+KVkOKVkeKVktGR4pWT4pWU4pWV4pWW4pWX4pWY4pWZ4pWa4pWb4pWc4pWd4pWe4pWf4pWg4pWh0IHilaLilaPilaTilaXilabilafilajilanilarilavilazCqdGO0LDQsdGG0LTQtdGE0LPRhdC40LnQutC70LzQvdC+0L/Rj9GA0YHRgtGD0LbQstGM0YvQt9GI0Y3RidGH0YrQrtCQ0JHQptCU0JXQpNCT0KXQmNCZ0JrQm9Cc0J3QntCf0K/QoNCh0KLQo9CW0JLQrNCr0JfQqNCt0KnQp9CqXCJ9LGtvaTh1Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIuKUgOKUguKUjOKUkOKUlOKUmOKUnOKUpOKUrOKUtOKUvOKWgOKWhOKWiOKWjOKWkOKWkeKWkuKWk+KMoOKWoOKImeKImuKJiOKJpOKJpcKg4oyhwrDCssK3w7filZDilZHilZLRkdGU4pWU0ZbRl+KVl+KVmOKVmeKVmuKVm9KR4pWd4pWe4pWf4pWg4pWh0IHQhOKVo9CG0IfilabilafilajilanilarSkOKVrMKp0Y7QsNCx0YbQtNC10YTQs9GF0LjQudC60LvQvNC90L7Qv9GP0YDRgdGC0YPQttCy0YzRi9C30YjRjdGJ0YfRitCu0JDQkdCm0JTQldCk0JPQpdCY0JnQmtCb0JzQndCe0J/Qr9Cg0KHQotCj0JbQktCs0KvQl9Co0K3QqdCn0KpcIn0sa29pOHJ1Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIuKUgOKUguKUjOKUkOKUlOKUmOKUnOKUpOKUrOKUtOKUvOKWgOKWhOKWiOKWjOKWkOKWkeKWkuKWk+KMoOKWoOKImeKImuKJiOKJpOKJpcKg4oyhwrDCssK3w7filZDilZHilZLRkdGU4pWU0ZbRl+KVl+KVmOKVmeKVmuKVm9KR0Z7ilZ7ilZ/ilaDilaHQgdCE4pWj0IbQh+KVpuKVp+KVqOKVqeKVqtKQ0I7CqdGO0LDQsdGG0LTQtdGE0LPRhdC40LnQutC70LzQvdC+0L/Rj9GA0YHRgtGD0LbQstGM0YvQt9GI0Y3RidGH0YrQrtCQ0JHQptCU0JXQpNCT0KXQmNCZ0JrQm9Cc0J3QntCf0K/QoNCh0KLQo9CW0JLQrNCr0JfQqNCt0KnQp9CqXCJ9LGtvaTh0Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcItKb0pPigJrSkuKAnuKApuKAoOKAoe+/veKAsNKz4oC50rLSt9K277+90prigJjigJnigJzigJ3igKLigJPigJTvv73ihKLvv73igLrvv73vv73vv73vv73vv73Tr9Ou0ZHCpNOjwqbCp++/ve+/ve+/vcKrwqzCrcKu77+9wrDCscKy0IHvv73TosK2wrfvv73ihJbvv73Cu++/ve+/ve+/vcKp0Y7QsNCx0YbQtNC10YTQs9GF0LjQudC60LvQvNC90L7Qv9GP0YDRgdGC0YPQttCy0YzRi9C30YjRjdGJ0YfRitCu0JDQkdCm0JTQldCk0JPQpdCY0JnQmtCb0JzQndCe0J/Qr9Cg0KHQotCj0JbQktCs0KvQl9Co0K3QqdCn0KpcIn0sYXJtc2NpaTg6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8Kg77+91ofWiSkowrvCq+KAlC7VnSwt1origKbVnNWb1Z7UsdWh1LLVotSz1aPUtNWk1LXVpdS21abUt9Wn1LjVqNS51anUutWq1LvVq9S81azUvdWt1L7VrtS/1a/VgNWw1YHVsdWC1bLVg9Wz1YTVtNWF1bXVhtW21YfVt9WI1bjVidW51YrVutWL1bvVjNW81Y3VvdWO1b7Vj9W/1ZDWgNWR1oHVktaC1ZPWg9WU1oTVldaF1ZbWhtWa77+9XCJ9LHJrMTA0ODp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLQgtCD4oCa0ZPigJ7igKbigKDigKHigqzigLDQieKAudCK0prSutCP0ZLigJjigJnigJzigJ3igKLigJPigJTvv73ihKLRmeKAutGa0pvSu9GfwqDSsNKx05jCpNOowqbCp9CBwqnSksKrwqzCrcKu0q7CsMKx0IbRltOpwrXCtsK30ZHihJbSk8K705nSotKj0q/QkNCR0JLQk9CU0JXQltCX0JjQmdCa0JvQnNCd0J7Qn9Cg0KHQotCj0KTQpdCm0KfQqNCp0KrQq9Cs0K3QrtCv0LDQsdCy0LPQtNC10LbQt9C40LnQutC70LzQvdC+0L/RgNGB0YLRg9GE0YXRhtGH0YjRidGK0YvRjNGN0Y7Rj1wifSx0Y3ZuOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIlxcMMOa4bukXHUwMDAz4buq4bus4buuXHUwMDA3XFxiXFx0XFxuXFx2XFxmXFxyXHUwMDBlXHUwMDBmXHUwMDEw4buo4buw4buy4bu24bu4w53hu7RcdTAwMThcdTAwMTlcdTAwMWFcdTAwMWJcdTAwMWNcdTAwMWRcdTAwMWVcdTAwMWYgIVxcXCIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXFxcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn/DgOG6osODw4HhuqDhurbhuqzDiOG6uuG6vMOJ4bq44buGw4zhu4jEqMON4buKw5Lhu47DlcOT4buM4buY4buc4bue4bug4bua4buiw5nhu6bFqMKgxILDgsOKw5TGoMavxJDEg8Oiw6rDtMahxrDEkeG6sMyAzInMg8yBzKPDoOG6o8Ojw6HhuqHhurLhurHhurPhurXhuq/hurThuq7huqbhuqjhuqrhuqThu4DhurfhuqfhuqnhuqvhuqXhuq3DqOG7guG6u+G6vcOp4bq54buB4buD4buF4bq/4buHw6zhu4nhu4Thur7hu5LEqcOt4buLw7Lhu5Thu4/DtcOz4buN4buT4buV4buX4buR4buZ4bud4buf4buh4bub4bujw7nhu5bhu6fFqcO64bul4bur4but4buv4bup4bux4buz4bu34bu5w73hu7Xhu5BcIn0sZ2VvcmdpYW5hY2FkZW15Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIsKAwoHigJrGkuKAnuKApuKAoOKAocuG4oCwxaDigLnFksKNwo7Cj8KQ4oCY4oCZ4oCc4oCd4oCi4oCT4oCUy5zihKLFoeKAusWTwp3CnsW4wqDCocKiwqPCpMKlwqbCp8KowqnCqsKrwqzCrcKuwq/CsMKxwrLCs8K0wrXCtsK3wrjCucK6wrvCvMK9wr7Cv+GDkOGDkeGDkuGDk+GDlOGDleGDluGDl+GDmOGDmeGDmuGDm+GDnOGDneGDnuGDn+GDoOGDoeGDouGDo+GDpOGDpeGDpuGDp+GDqOGDqeGDquGDq+GDrOGDreGDruGDr+GDsOGDseGDsuGDs+GDtOGDteGDtsOnw6jDqcOqw6vDrMOtw67Dr8Oww7HDssOzw7TDtcO2w7fDuMO5w7rDu8O8w73DvsO/XCJ9LGdlb3JnaWFucHM6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiwoDCgeKAmsaS4oCe4oCm4oCg4oChy4bigLDFoOKAucWSwo3CjsKPwpDigJjigJnigJzigJ3igKLigJPigJTLnOKEosWh4oC6xZPCncKexbjCoMKhwqLCo8KkwqXCpsKnwqjCqcKqwqvCrMKtwq7Cr8KwwrHCssKzwrTCtcK2wrfCuMK5wrrCu8K8wr3CvsK/4YOQ4YOR4YOS4YOT4YOU4YOV4YOW4YOx4YOX4YOY4YOZ4YOa4YOb4YOc4YOy4YOd4YOe4YOf4YOg4YOh4YOi4YOz4YOj4YOk4YOl4YOm4YOn4YOo4YOp4YOq4YOr4YOs4YOt4YOu4YO04YOv4YOw4YO1w6bDp8Oow6nDqsOrw6zDrcOuw6/DsMOxw7LDs8O0w7XDtsO3w7jDucO6w7vDvMO9w77Dv1wifSxwdDE1NDp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLSltKS067Sk+KAnuKAptK20q7SstKv0qDTotKi0prSutK40pfigJjigJnigJzigJ3igKLigJPigJTSs9K30qHTo9Kj0pvSu9K5wqDQjtGe0IjTqNKY0rDCp9CBwqnTmMKrwqzTr8Ku0pzCsNKx0IbRltKZ06nCtsK30ZHihJbTmcK70ZjSqtKr0p3QkNCR0JLQk9CU0JXQltCX0JjQmdCa0JvQnNCd0J7Qn9Cg0KHQotCj0KTQpdCm0KfQqNCp0KrQq9Cs0K3QrtCv0LDQsdCy0LPQtNC10LbQt9C40LnQutC70LzQvdC+0L/RgNGB0YLRg9GE0YXRhtGH0YjRidGK0YvRjNGN0Y7Rj1wifSx2aXNjaWk6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiXFwwXHUwMDAx4bqyXHUwMDAzXHUwMDA04bq04bqqXHUwMDA3XFxiXFx0XFxuXFx2XFxmXFxyXHUwMDBlXHUwMDBmXHUwMDEwXHUwMDExXHUwMDEyXHUwMDEz4bu2XHUwMDE1XHUwMDE2XHUwMDE3XHUwMDE44bu4XHUwMDFhXHUwMDFiXHUwMDFjXHUwMDFk4bu0XHUwMDFmICFcXFwiIyQlJicoKSorLC0uLzAxMjM0NTY3ODk6Ozw9Pj9AQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpbXFxcXF1eX2BhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ent8fX5/4bqg4bqu4bqw4bq24bqk4bqm4bqo4bqs4bq84bq44bq+4buA4buC4buE4buG4buQ4buS4buU4buW4buY4bui4bua4buc4bue4buK4buO4buM4buI4bumxajhu6Thu7LDleG6r+G6seG6t+G6peG6p+G6qeG6reG6veG6ueG6v+G7geG7g+G7heG7h+G7keG7k+G7leG7l+G7oMag4buZ4bud4buf4buL4buw4buo4buq4busxqHhu5vGr8OAw4HDgsOD4bqixILhurPhurXDiMOJw4rhurrDjMONxKjhu7PEkOG7qcOSw5PDlOG6oeG7t+G7q+G7rcOZw5rhu7nhu7XDneG7ocaww6DDocOiw6PhuqPEg+G7r+G6q8Oow6nDquG6u8Osw63EqeG7icSR4buxw7LDs8O0w7Xhu4/hu43hu6XDucO6xanhu6fDveG7o+G7rlwifSxpc282NDZjbjp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCJcXDBcdTAwMDFcdTAwMDJcdTAwMDNcdTAwMDRcdTAwMDVcdTAwMDZcdTAwMDdcXGJcXHRcXG5cXHZcXGZcXHJcdTAwMGVcdTAwMGZcdTAwMTBcdTAwMTFcdTAwMTJcdTAwMTNcdTAwMTRcdTAwMTVcdTAwMTZcdTAwMTdcdTAwMThcdTAwMTlcdTAwMWFcdTAwMWJcdTAwMWNcdTAwMWRcdTAwMWVcdTAwMWYgIVxcXCIjwqUlJicoKSorLC0uLzAxMjM0NTY3ODk6Ozw9Pj9AQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpbXFxcXF1eX2BhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ent8feKAvn/vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv71cIn0saXNvNjQ2anA6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwiXFwwXHUwMDAxXHUwMDAyXHUwMDAzXHUwMDA0XHUwMDA1XHUwMDA2XHUwMDA3XFxiXFx0XFxuXFx2XFxmXFxyXHUwMDBlXHUwMDBmXHUwMDEwXHUwMDExXHUwMDEyXHUwMDEzXHUwMDE0XHUwMDE1XHUwMDE2XHUwMDE3XHUwMDE4XHUwMDE5XHUwMDFhXHUwMDFiXHUwMDFjXHUwMDFkXHUwMDFlXHUwMDFmICFcXFwiIyQlJicoKSorLC0uLzAxMjM0NTY3ODk6Ozw9Pj9AQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpbwqVdXl9gYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXp7fH3igL5/77+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+9XCJ9LGhwcm9tYW44Ont0eXBlOlwiX3NiY3NcIixjaGFyczpcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoMOAw4LDiMOKw4vDjsOPwrTLi8uGwqjLnMOZw5vigqTCr8Odw73CsMOHw6fDkcOxwqHCv8KkwqPCpcKnxpLCosOiw6rDtMO7w6HDqcOzw7rDoMOow7LDucOkw6vDtsO8w4XDrsOYw4bDpcOtw7jDpsOEw6zDlsOcw4nDr8Ofw5TDgcODw6PDkMOww43DjMOTw5LDlcO1xaDFocOaxbjDv8Oew77Ct8K1wrbCvuKAlMK8wr3CqsK6wqvilqDCu8Kx77+9XCJ9LG1hY2ludG9zaDp7dHlwZTpcIl9zYmNzXCIsY2hhcnM6XCLDhMOFw4fDicORw5bDnMOhw6DDosOkw6PDpcOnw6nDqMOqw6vDrcOsw67Dr8Oxw7PDssO0w7bDtcO6w7nDu8O84oCgwrDCosKjwqfigKLCtsOfwq7CqeKEosK0wqjiiaDDhsOY4oiewrHiiaTiiaXCpcK14oiC4oiR4oiPz4DiiKvCqsK64oSmw6bDuMK/wqHCrOKImsaS4omI4oiGwqvCu+KApsKgw4DDg8OVxZLFk+KAk+KAlOKAnOKAneKAmOKAmcO34peKw7/FuOKBhMKk4oC54oC676yB76yC4oChwrfigJrigJ7igLDDgsOKw4HDi8OIw43DjsOPw4zDk8OU77+9w5LDmsObw5nEscuGy5zCr8uYy5nLmsK4y53Lm8uHXCJ9LGFzY2lpOnt0eXBlOlwiX3NiY3NcIixjaGFyczpcIu+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/vVwifSx0aXM2MjA6e3R5cGU6XCJfc2Jjc1wiLGNoYXJzOlwi77+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+94LiB4LiC4LiD4LiE4LiF4LiG4LiH4LiI4LiJ4LiK4LiL4LiM4LiN4LiO4LiP4LiQ4LiR4LiS4LiT4LiU4LiV4LiW4LiX4LiY4LiZ4Lia4Lib4Lic4Lid4Lie4Lif4Lig4Lih4Lii4Lij4Lik4Lil4Lim4Lin4Lio4Lip4Liq4Lir4Lis4Lit4Liu4Liv4Liw4Lix4Liy4Liz4Li04Li14Li24Li34Li44Li54Li677+977+977+977+94Li/4LmA4LmB4LmC4LmD4LmE4LmF4LmG4LmH4LmI4LmJ4LmK4LmL4LmM4LmN4LmO4LmP4LmQ4LmR4LmS4LmT4LmU4LmV4LmW4LmX4LmY4LmZ4Lma4Lmb77+977+977+977+9XCJ9fX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPW4oMTUpLkJ1ZmZlcjtlLl9kYmNzPW87Zm9yKHZhciByPW5ldyBBcnJheSgyNTYpLGE9MDthPDI1NjthKyspclthXT0tMTtmdW5jdGlvbiBvKHQsZSl7aWYodGhpcy5lbmNvZGluZ05hbWU9dC5lbmNvZGluZ05hbWUsIXQpdGhyb3cgbmV3IEVycm9yKFwiREJDUyBjb2RlYyBpcyBjYWxsZWQgd2l0aG91dCB0aGUgZGF0YS5cIik7aWYoIXQudGFibGUpdGhyb3cgbmV3IEVycm9yKFwiRW5jb2RpbmcgJ1wiK3RoaXMuZW5jb2RpbmdOYW1lK1wiJyBoYXMgbm8gZGF0YS5cIik7dmFyIG49dC50YWJsZSgpO3RoaXMuZGVjb2RlVGFibGVzPVtdLHRoaXMuZGVjb2RlVGFibGVzWzBdPXIuc2xpY2UoMCksdGhpcy5kZWNvZGVUYWJsZVNlcT1bXTtmb3IodmFyIGk9MDtpPG4ubGVuZ3RoO2krKyl0aGlzLl9hZGREZWNvZGVDaHVuayhuW2ldKTt0aGlzLmRlZmF1bHRDaGFyVW5pY29kZT1lLmRlZmF1bHRDaGFyVW5pY29kZSx0aGlzLmVuY29kZVRhYmxlPVtdLHRoaXMuZW5jb2RlVGFibGVTZXE9W107dmFyIGE9e307aWYodC5lbmNvZGVTa2lwVmFscylmb3IoaT0wO2k8dC5lbmNvZGVTa2lwVmFscy5sZW5ndGg7aSsrKXt2YXIgbz10LmVuY29kZVNraXBWYWxzW2ldO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBvKWFbb109ITA7ZWxzZSBmb3IodmFyIHM9by5mcm9tO3M8PW8udG87cysrKWFbc109ITB9aWYodGhpcy5fZmlsbEVuY29kZVRhYmxlKDAsMCxhKSx0LmVuY29kZUFkZClmb3IodmFyIGMgaW4gdC5lbmNvZGVBZGQpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQuZW5jb2RlQWRkLGMpJiZ0aGlzLl9zZXRFbmNvZGVDaGFyKGMuY2hhckNvZGVBdCgwKSx0LmVuY29kZUFkZFtjXSk7aWYodGhpcy5kZWZDaGFyU0I9dGhpcy5lbmNvZGVUYWJsZVswXVtlLmRlZmF1bHRDaGFyU2luZ2xlQnl0ZS5jaGFyQ29kZUF0KDApXSwtMT09PXRoaXMuZGVmQ2hhclNCJiYodGhpcy5kZWZDaGFyU0I9dGhpcy5lbmNvZGVUYWJsZVswXVtcIj9cIl0pLC0xPT09dGhpcy5kZWZDaGFyU0ImJih0aGlzLmRlZkNoYXJTQj1cIj9cIi5jaGFyQ29kZUF0KDApKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmdiMTgwMzApe3RoaXMuZ2IxODAzMD10LmdiMTgwMzAoKTt2YXIgdT10aGlzLmRlY29kZVRhYmxlcy5sZW5ndGgsbD10aGlzLmRlY29kZVRhYmxlc1t1XT1yLnNsaWNlKDApLHA9dGhpcy5kZWNvZGVUYWJsZXMubGVuZ3RoLGY9dGhpcy5kZWNvZGVUYWJsZXNbcF09ci5zbGljZSgwKTtmb3IoaT0xMjk7aTw9MjU0O2krKyl7dmFyIGQ9LTFlMy10aGlzLmRlY29kZVRhYmxlc1swXVtpXSxoPXRoaXMuZGVjb2RlVGFibGVzW2RdO2ZvcihzPTQ4O3M8PTU3O3MrKyloW3NdPS0xZTMtdX1mb3IoaT0xMjk7aTw9MjU0O2krKylsW2ldPS0xZTMtcDtmb3IoaT00ODtpPD01NztpKyspZltpXT0tMn19ZnVuY3Rpb24gcyh0LGUpe3RoaXMubGVhZFN1cnJvZ2F0ZT0tMSx0aGlzLnNlcU9iaj12b2lkIDAsdGhpcy5lbmNvZGVUYWJsZT1lLmVuY29kZVRhYmxlLHRoaXMuZW5jb2RlVGFibGVTZXE9ZS5lbmNvZGVUYWJsZVNlcSx0aGlzLmRlZmF1bHRDaGFyU2luZ2xlQnl0ZT1lLmRlZkNoYXJTQix0aGlzLmdiMTgwMzA9ZS5nYjE4MDMwfWZ1bmN0aW9uIGModCxlKXt0aGlzLm5vZGVJZHg9MCx0aGlzLnByZXZCdWY9aS5hbGxvYygwKSx0aGlzLmRlY29kZVRhYmxlcz1lLmRlY29kZVRhYmxlcyx0aGlzLmRlY29kZVRhYmxlU2VxPWUuZGVjb2RlVGFibGVTZXEsdGhpcy5kZWZhdWx0Q2hhclVuaWNvZGU9ZS5kZWZhdWx0Q2hhclVuaWNvZGUsdGhpcy5nYjE4MDMwPWUuZ2IxODAzMH1mdW5jdGlvbiB1KHQsZSl7aWYodFswXT5lKXJldHVybi0xO2Zvcih2YXIgbj0wLGk9dC5sZW5ndGg7bjxpLTE7KXt2YXIgcj1uK01hdGguZmxvb3IoKGktbisxKS8yKTt0W3JdPD1lP249cjppPXJ9cmV0dXJuIG59by5wcm90b3R5cGUuZW5jb2Rlcj1zLG8ucHJvdG90eXBlLmRlY29kZXI9YyxvLnByb3RvdHlwZS5fZ2V0RGVjb2RlVHJpZU5vZGU9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdO3Q+MDt0Pj49OCllLnB1c2goMjU1JnQpOzA9PWUubGVuZ3RoJiZlLnB1c2goMCk7Zm9yKHZhciBuPXRoaXMuZGVjb2RlVGFibGVzWzBdLGk9ZS5sZW5ndGgtMTtpPjA7aS0tKXt2YXIgYT1uW2VbaV1dO2lmKC0xPT1hKW5bZVtpXV09LTFlMy10aGlzLmRlY29kZVRhYmxlcy5sZW5ndGgsdGhpcy5kZWNvZGVUYWJsZXMucHVzaChuPXIuc2xpY2UoMCkpO2Vsc2V7aWYoIShhPD0tMWUzKSl0aHJvdyBuZXcgRXJyb3IoXCJPdmVyd3JpdGUgYnl0ZSBpbiBcIit0aGlzLmVuY29kaW5nTmFtZStcIiwgYWRkcjogXCIrdC50b1N0cmluZygxNikpO249dGhpcy5kZWNvZGVUYWJsZXNbLTFlMy1hXX19cmV0dXJuIG59LG8ucHJvdG90eXBlLl9hZGREZWNvZGVDaHVuaz1mdW5jdGlvbih0KXt2YXIgZT1wYXJzZUludCh0WzBdLDE2KSxuPXRoaXMuX2dldERlY29kZVRyaWVOb2RlKGUpO2UmPTI1NTtmb3IodmFyIGk9MTtpPHQubGVuZ3RoO2krKyl7dmFyIHI9dFtpXTtpZihcInN0cmluZ1wiPT10eXBlb2Ygcilmb3IodmFyIGE9MDthPHIubGVuZ3RoOyl7dmFyIG89ci5jaGFyQ29kZUF0KGErKyk7aWYoNTUyOTY8PW8mJm88NTYzMjApe3ZhciBzPXIuY2hhckNvZGVBdChhKyspO2lmKCEoNTYzMjA8PXMmJnM8NTczNDQpKXRocm93IG5ldyBFcnJvcihcIkluY29ycmVjdCBzdXJyb2dhdGUgcGFpciBpbiBcIit0aGlzLmVuY29kaW5nTmFtZStcIiBhdCBjaHVuayBcIit0WzBdKTtuW2UrK109NjU1MzYrMTAyNCooby01NTI5NikrKHMtNTYzMjApfWVsc2UgaWYoNDA4MDxvJiZvPD00MDk1KXtmb3IodmFyIGM9NDA5NS1vKzIsdT1bXSxsPTA7bDxjO2wrKyl1LnB1c2goci5jaGFyQ29kZUF0KGErKykpO25bZSsrXT0tMTAtdGhpcy5kZWNvZGVUYWJsZVNlcS5sZW5ndGgsdGhpcy5kZWNvZGVUYWJsZVNlcS5wdXNoKHUpfWVsc2UgbltlKytdPW99ZWxzZXtpZihcIm51bWJlclwiIT10eXBlb2Ygcil0aHJvdyBuZXcgRXJyb3IoXCJJbmNvcnJlY3QgdHlwZSAnXCIrdHlwZW9mIHIrXCInIGdpdmVuIGluIFwiK3RoaXMuZW5jb2RpbmdOYW1lK1wiIGF0IGNodW5rIFwiK3RbMF0pO3ZhciBwPW5bZS0xXSsxO2ZvcihhPTA7YTxyO2ErKyluW2UrK109cCsrfX1pZihlPjI1NSl0aHJvdyBuZXcgRXJyb3IoXCJJbmNvcnJlY3QgY2h1bmsgaW4gXCIrdGhpcy5lbmNvZGluZ05hbWUrXCIgYXQgYWRkciBcIit0WzBdK1wiOiB0b28gbG9uZ1wiK2UpfSxvLnByb3RvdHlwZS5fZ2V0RW5jb2RlQnVja2V0PWZ1bmN0aW9uKHQpe3ZhciBlPXQ+Pjg7cmV0dXJuIHZvaWQgMD09PXRoaXMuZW5jb2RlVGFibGVbZV0mJih0aGlzLmVuY29kZVRhYmxlW2VdPXIuc2xpY2UoMCkpLHRoaXMuZW5jb2RlVGFibGVbZV19LG8ucHJvdG90eXBlLl9zZXRFbmNvZGVDaGFyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fZ2V0RW5jb2RlQnVja2V0KHQpLGk9MjU1JnQ7bltpXTw9LTEwP3RoaXMuZW5jb2RlVGFibGVTZXFbLTEwLW5baV1dWy0xXT1lOi0xPT1uW2ldJiYobltpXT1lKX0sby5wcm90b3R5cGUuX3NldEVuY29kZVNlcXVlbmNlPWZ1bmN0aW9uKHQsZSl7dmFyIG4saT10WzBdLHI9dGhpcy5fZ2V0RW5jb2RlQnVja2V0KGkpLGE9MjU1Jmk7clthXTw9LTEwP249dGhpcy5lbmNvZGVUYWJsZVNlcVstMTAtclthXV06KG49e30sLTEhPT1yW2FdJiYoblstMV09clthXSksclthXT0tMTAtdGhpcy5lbmNvZGVUYWJsZVNlcS5sZW5ndGgsdGhpcy5lbmNvZGVUYWJsZVNlcS5wdXNoKG4pKTtmb3IodmFyIG89MTtvPHQubGVuZ3RoLTE7bysrKXt2YXIgcz1uW2ldO1wib2JqZWN0XCI9PXR5cGVvZiBzP249czoobj1uW2ldPXt9LHZvaWQgMCE9PXMmJihuWy0xXT1zKSl9bltpPXRbdC5sZW5ndGgtMV1dPWV9LG8ucHJvdG90eXBlLl9maWxsRW5jb2RlVGFibGU9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgaT10aGlzLmRlY29kZVRhYmxlc1t0XSxyPTA7cjwyNTY7cisrKXt2YXIgYT1pW3JdLG89ZStyO25bb118fChhPj0wP3RoaXMuX3NldEVuY29kZUNoYXIoYSxvKTphPD0tMWUzP3RoaXMuX2ZpbGxFbmNvZGVUYWJsZSgtMWUzLWEsbzw8OCxuKTphPD0tMTAmJnRoaXMuX3NldEVuY29kZVNlcXVlbmNlKHRoaXMuZGVjb2RlVGFibGVTZXFbLTEwLWFdLG8pKX19LHMucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1pLmFsbG9jKHQubGVuZ3RoKih0aGlzLmdiMTgwMzA/NDozKSksbj10aGlzLmxlYWRTdXJyb2dhdGUscj10aGlzLnNlcU9iaixhPS0xLG89MCxzPTA7Oyl7aWYoLTE9PT1hKXtpZihvPT10Lmxlbmd0aClicmVhazt2YXIgYz10LmNoYXJDb2RlQXQobysrKX1lbHNle2M9YTthPS0xfWlmKDU1Mjk2PD1jJiZjPDU3MzQ0KWlmKGM8NTYzMjApe2lmKC0xPT09bil7bj1jO2NvbnRpbnVlfW49YyxjPS0xfWVsc2UtMSE9PW4/KGM9NjU1MzYrMTAyNCoobi01NTI5NikrKGMtNTYzMjApLG49LTEpOmM9LTE7ZWxzZS0xIT09biYmKGE9YyxjPS0xLG49LTEpO3ZhciBsPS0xO2lmKHZvaWQgMCE9PXImJi0xIT1jKXt2YXIgcD1yW2NdO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBwKXtyPXA7Y29udGludWV9XCJudW1iZXJcIj09dHlwZW9mIHA/bD1wOm51bGw9PXAmJnZvaWQgMCE9PShwPXJbLTFdKSYmKGw9cCxhPWMpLHI9dm9pZCAwfWVsc2UgaWYoYz49MCl7dmFyIGY9dGhpcy5lbmNvZGVUYWJsZVtjPj44XTtpZih2b2lkIDAhPT1mJiYobD1mWzI1NSZjXSksbDw9LTEwKXtyPXRoaXMuZW5jb2RlVGFibGVTZXFbLTEwLWxdO2NvbnRpbnVlfWlmKC0xPT1sJiZ0aGlzLmdiMTgwMzApe3ZhciBkPXUodGhpcy5nYjE4MDMwLnVDaGFycyxjKTtpZigtMSE9ZCl7bD10aGlzLmdiMTgwMzAuZ2JDaGFyc1tkXSsoYy10aGlzLmdiMTgwMzAudUNoYXJzW2RdKTtlW3MrK109MTI5K01hdGguZmxvb3IobC8xMjYwMCksbCU9MTI2MDAsZVtzKytdPTQ4K01hdGguZmxvb3IobC8xMjYwKSxsJT0xMjYwLGVbcysrXT0xMjkrTWF0aC5mbG9vcihsLzEwKSxsJT0xMCxlW3MrK109NDgrbDtjb250aW51ZX19fS0xPT09bCYmKGw9dGhpcy5kZWZhdWx0Q2hhclNpbmdsZUJ5dGUpLGw8MjU2P2VbcysrXT1sOmw8NjU1MzY/KGVbcysrXT1sPj44LGVbcysrXT0yNTUmbCk6KGVbcysrXT1sPj4xNixlW3MrK109bD4+OCYyNTUsZVtzKytdPTI1NSZsKX1yZXR1cm4gdGhpcy5zZXFPYmo9cix0aGlzLmxlYWRTdXJyb2dhdGU9bixlLnNsaWNlKDAscyl9LHMucHJvdG90eXBlLmVuZD1mdW5jdGlvbigpe2lmKC0xIT09dGhpcy5sZWFkU3Vycm9nYXRlfHx2b2lkIDAhPT10aGlzLnNlcU9iail7dmFyIHQ9aS5hbGxvYygxMCksZT0wO2lmKHRoaXMuc2VxT2JqKXt2YXIgbj10aGlzLnNlcU9ialstMV07dm9pZCAwIT09biYmKG48MjU2P3RbZSsrXT1uOih0W2UrK109bj4+OCx0W2UrK109MjU1Jm4pKSx0aGlzLnNlcU9iaj12b2lkIDB9cmV0dXJuLTEhPT10aGlzLmxlYWRTdXJyb2dhdGUmJih0W2UrK109dGhpcy5kZWZhdWx0Q2hhclNpbmdsZUJ5dGUsdGhpcy5sZWFkU3Vycm9nYXRlPS0xKSx0LnNsaWNlKDAsZSl9fSxzLnByb3RvdHlwZS5maW5kSWR4PXUsYy5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCl7dmFyIGU9aS5hbGxvYygyKnQubGVuZ3RoKSxuPXRoaXMubm9kZUlkeCxyPXRoaXMucHJldkJ1ZixhPXRoaXMucHJldkJ1Zi5sZW5ndGgsbz0tdGhpcy5wcmV2QnVmLmxlbmd0aDthPjAmJihyPWkuY29uY2F0KFtyLHQuc2xpY2UoMCwxMCldKSk7Zm9yKHZhciBzPTAsYz0wO3M8dC5sZW5ndGg7cysrKXt2YXIgbCxwPXM+PTA/dFtzXTpyW3MrYV07aWYoKGw9dGhpcy5kZWNvZGVUYWJsZXNbbl1bcF0pPj0wKTtlbHNlIGlmKC0xPT09bClzPW8sbD10aGlzLmRlZmF1bHRDaGFyVW5pY29kZS5jaGFyQ29kZUF0KDApO2Vsc2UgaWYoLTI9PT1sKXt2YXIgZj1vPj0wP3Quc2xpY2UobyxzKzEpOnIuc2xpY2UobythLHMrMSthKSxkPTEyNjAwKihmWzBdLTEyOSkrMTI2MCooZlsxXS00OCkrMTAqKGZbMl0tMTI5KSsoZlszXS00OCksaD11KHRoaXMuZ2IxODAzMC5nYkNoYXJzLGQpO2w9dGhpcy5nYjE4MDMwLnVDaGFyc1toXStkLXRoaXMuZ2IxODAzMC5nYkNoYXJzW2hdfWVsc2V7aWYobDw9LTFlMyl7bj0tMWUzLWw7Y29udGludWV9aWYoIShsPD0tMTApKXRocm93IG5ldyBFcnJvcihcImljb252LWxpdGUgaW50ZXJuYWwgZXJyb3I6IGludmFsaWQgZGVjb2RpbmcgdGFibGUgdmFsdWUgXCIrbCtcIiBhdCBcIituK1wiL1wiK3ApO2Zvcih2YXIgbT10aGlzLmRlY29kZVRhYmxlU2VxWy0xMC1sXSxnPTA7ZzxtLmxlbmd0aC0xO2crKylsPW1bZ10sZVtjKytdPTI1NSZsLGVbYysrXT1sPj44O2w9bVttLmxlbmd0aC0xXX1pZihsPjY1NTM1KXtsLT02NTUzNjt2YXIgeT01NTI5NitNYXRoLmZsb29yKGwvMTAyNCk7ZVtjKytdPTI1NSZ5LGVbYysrXT15Pj44LGw9NTYzMjArbCUxMDI0fWVbYysrXT0yNTUmbCxlW2MrK109bD4+OCxuPTAsbz1zKzF9cmV0dXJuIHRoaXMubm9kZUlkeD1uLHRoaXMucHJldkJ1Zj1vPj0wP3Quc2xpY2Uobyk6ci5zbGljZShvK2EpLGUuc2xpY2UoMCxjKS50b1N0cmluZyhcInVjczJcIil9LGMucHJvdG90eXBlLmVuZD1mdW5jdGlvbigpe2Zvcih2YXIgdD1cIlwiO3RoaXMucHJldkJ1Zi5sZW5ndGg+MDspe3QrPXRoaXMuZGVmYXVsdENoYXJVbmljb2RlO3ZhciBlPXRoaXMucHJldkJ1Zi5zbGljZSgxKTt0aGlzLnByZXZCdWY9aS5hbGxvYygwKSx0aGlzLm5vZGVJZHg9MCxlLmxlbmd0aD4wJiYodCs9dGhpcy53cml0ZShlKSl9cmV0dXJuIHRoaXMubm9kZUlkeD0wLHR9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dC5leHBvcnRzPXtzaGlmdGppczp7dHlwZTpcIl9kYmNzXCIsdGFibGU6ZnVuY3Rpb24oKXtyZXR1cm4gbigyMDcpfSxlbmNvZGVBZGQ6e1wiwqVcIjo5MixcIuKAvlwiOjEyNn0sZW5jb2RlU2tpcFZhbHM6W3tmcm9tOjYwNzM2LHRvOjYzODA4fV19LGNzc2hpZnRqaXM6XCJzaGlmdGppc1wiLG1za2Fuamk6XCJzaGlmdGppc1wiLHNqaXM6XCJzaGlmdGppc1wiLHdpbmRvd3MzMWo6XCJzaGlmdGppc1wiLG1zMzFqOlwic2hpZnRqaXNcIix4c2ppczpcInNoaWZ0amlzXCIsd2luZG93czkzMjpcInNoaWZ0amlzXCIsbXM5MzI6XCJzaGlmdGppc1wiLDkzMjpcInNoaWZ0amlzXCIsY3A5MzI6XCJzaGlmdGppc1wiLGV1Y2pwOnt0eXBlOlwiX2RiY3NcIix0YWJsZTpmdW5jdGlvbigpe3JldHVybiBuKDIwOCl9LGVuY29kZUFkZDp7XCLCpVwiOjkyLFwi4oC+XCI6MTI2fX0sZ2IyMzEyOlwiY3A5MzZcIixnYjIzMTI4MDpcImNwOTM2XCIsZ2IyMzEyMTk4MDpcImNwOTM2XCIsY3NnYjIzMTI6XCJjcDkzNlwiLGNzaXNvNThnYjIzMTI4MDpcImNwOTM2XCIsZXVjY246XCJjcDkzNlwiLHdpbmRvd3M5MzY6XCJjcDkzNlwiLG1zOTM2OlwiY3A5MzZcIiw5MzY6XCJjcDkzNlwiLGNwOTM2Ont0eXBlOlwiX2RiY3NcIix0YWJsZTpmdW5jdGlvbigpe3JldHVybiBuKDQ0KX19LGdiazp7dHlwZTpcIl9kYmNzXCIsdGFibGU6ZnVuY3Rpb24oKXtyZXR1cm4gbig0NCkuY29uY2F0KG4oNzcpKX19LHhnYms6XCJnYmtcIixpc29pcjU4OlwiZ2JrXCIsZ2IxODAzMDp7dHlwZTpcIl9kYmNzXCIsdGFibGU6ZnVuY3Rpb24oKXtyZXR1cm4gbig0NCkuY29uY2F0KG4oNzcpKX0sZ2IxODAzMDpmdW5jdGlvbigpe3JldHVybiBuKDIwOSl9LGVuY29kZVNraXBWYWxzOlsxMjhdLGVuY29kZUFkZDp7XCLigqxcIjo0MTY5OX19LGNoaW5lc2U6XCJnYjE4MDMwXCIsd2luZG93czk0OTpcImNwOTQ5XCIsbXM5NDk6XCJjcDk0OVwiLDk0OTpcImNwOTQ5XCIsY3A5NDk6e3R5cGU6XCJfZGJjc1wiLHRhYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIG4oMjEwKX19LGNzZXVja3I6XCJjcDk0OVwiLGNza3NjNTYwMTE5ODc6XCJjcDk0OVwiLGV1Y2tyOlwiY3A5NDlcIixpc29pcjE0OTpcImNwOTQ5XCIsa29yZWFuOlwiY3A5NDlcIixrc2M1NjAxMTk4NzpcImNwOTQ5XCIsa3NjNTYwMTE5ODk6XCJjcDk0OVwiLGtzYzU2MDE6XCJjcDk0OVwiLHdpbmRvd3M5NTA6XCJjcDk1MFwiLG1zOTUwOlwiY3A5NTBcIiw5NTA6XCJjcDk1MFwiLGNwOTUwOnt0eXBlOlwiX2RiY3NcIix0YWJsZTpmdW5jdGlvbigpe3JldHVybiBuKDc4KX19LGJpZzU6XCJiaWc1aGtzY3NcIixiaWc1aGtzY3M6e3R5cGU6XCJfZGJjc1wiLHRhYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIG4oNzgpLmNvbmNhdChuKDIxMSkpfSxlbmNvZGVTa2lwVmFsczpbNDE2NzZdfSxjbmJpZzU6XCJiaWc1aGtzY3NcIixjc2JpZzU6XCJiaWc1aGtzY3NcIix4eGJpZzU6XCJiaWc1aGtzY3NcIn19LGZ1bmN0aW9uKHQpe3QuZXhwb3J0cz1KU09OLnBhcnNlKCdbW1wiMFwiLFwiXFxcXHUwMDAwXCIsMTI4XSxbXCJhMVwiLFwi772hXCIsNjJdLFtcIjgxNDBcIixcIuOAgOOAgeOAgu+8jO+8juODu++8mu+8m++8n++8geOCm+OCnMK0772AwqjvvL7vv6PvvL/jg73jg77jgp3jgp7jgIPku53jgIXjgIbjgIfjg7zigJXigJDvvI/vvLzvvZ7iiKXvvZzigKbigKXigJjigJnigJzigJ3vvIjvvInjgJTjgJXvvLvvvL3vvZvvvZ3jgIhcIiw5LFwi77yL77yNwrHDl1wiXSxbXCI4MTgwXCIsXCLDt++8neKJoO+8nO+8nuKJpuKJp+KInuKItOKZguKZgMKw4oCy4oCz4oSD77+l77yE77+g77+h77yF77yD77yG77yK77ygwqfimIbimIXil4vil4/il47il4fil4bilqHilqDilrPilrLilr3ilrzigLvjgJLihpLihpDihpHihpPjgJNcIl0sW1wiODFiOFwiLFwi4oiI4oiL4oqG4oqH4oqC4oqD4oiq4oipXCJdLFtcIjgxYzhcIixcIuKIp+KIqO+/ouKHkuKHlOKIgOKIg1wiXSxbXCI4MWRhXCIsXCLiiKDiiqXijJLiiILiiIfiiaHiiZLiiariiaviiJriiL3iiJ3iiLXiiKviiKxcIl0sW1wiODFmMFwiLFwi4oSr4oCw4pmv4pmt4pmq4oCg4oChwrZcIl0sW1wiODFmY1wiLFwi4pevXCJdLFtcIjgyNGZcIixcIu+8kFwiLDldLFtcIjgyNjBcIixcIu+8oVwiLDI1XSxbXCI4MjgxXCIsXCLvvYFcIiwyNV0sW1wiODI5ZlwiLFwi44GBXCIsODJdLFtcIjgzNDBcIixcIuOCoVwiLDYyXSxbXCI4MzgwXCIsXCLjg6BcIiwyMl0sW1wiODM5ZlwiLFwizpFcIiwxNixcIs6jXCIsNl0sW1wiODNiZlwiLFwizrFcIiwxNixcIs+DXCIsNl0sW1wiODQ0MFwiLFwi0JBcIiw1LFwi0IHQllwiLDI1XSxbXCI4NDcwXCIsXCLQsFwiLDUsXCLRkdC2XCIsN10sW1wiODQ4MFwiLFwi0L5cIiwxN10sW1wiODQ5ZlwiLFwi4pSA4pSC4pSM4pSQ4pSY4pSU4pSc4pSs4pSk4pS04pS84pSB4pSD4pSP4pST4pSb4pSX4pSj4pSz4pSr4pS74pWL4pSg4pSv4pSo4pS34pS/4pSd4pSw4pSl4pS44pWCXCJdLFtcIjg3NDBcIixcIuKRoFwiLDE5LFwi4oWgXCIsOV0sW1wiODc1ZlwiLFwi442J44yU44yi442N44yY44yn44yD44y2442R442X44yN44ym44yj44yr442K44y7446c446d446e446O446P44+E446hXCJdLFtcIjg3N2VcIixcIuONu1wiXSxbXCI4NzgwXCIsXCLjgJ3jgJ/ihJbjj43ihKHjiqRcIiw0LFwi44ix44iy44i5442+442944284omS4omh4oir4oiu4oiR4oia4oql4oig4oif4oq/4oi14oip4oiqXCJdLFtcIjg4OWZcIixcIuS6nOWUluWog+mYv+WTgOaEm+aMqOWntumAouiRteiMnOepkOaCquaPoea4peaXreiRpuiKpumvteaik+Wcp+aWoeaJseWum+WnkOiZu+mjtOe1oue2vumujuaIlueyn+iit+WuieW6teaMieaal+ahiOmXh+mejeadj+S7peS8iuS9jeS+neWBieWbsuWkt+WnlOWogeWwieaDn+aEj+aFsOaYk+akheeCuueVj+eVsOenu+e2ree3r+iDg+iQjuiho+isgumBlemBuuWMu+S6leS6peWfn+iCsumDgeejr+S4gOWjsea6oumAuOeosuiMqOiKi+mwr+WFgeWNsOWSveWToeWboOWnu+W8lemjsua3q+iDpOiUrVwiXSxbXCI4OTQwXCIsXCLpmaLpmbDpmqDpn7vlkIvlj7Plrofng4/nvr3ov4Lpm6jlja/ptZznqrrkuJHnopPoh7zmuKblmJjllITmrJ3olJrpsLvlp6Xljqnmtabnk5zplo/lmYLkupHpgYvpm7LojY/ppIzlj6HllrblrLDlvbHmmKDmm7PmoITmsLjms7PmtKnnkZvnm4jnqY7poLToi7HooZvoqaDpi63mtrLnlqvnm4rpp4XmgqborIHotorplrLmpo7ljq3lhoZcIl0sW1wiODk4MFwiLFwi5ZyS5aCw5aWE5a605bu25oCo5o6p5o+05rK/5ryU54KO54SU54WZ54eV54y/57iB6Im26IuR6JaX6YGg6Ymb6bSb5aGp5pa85rGa55Sl5Ye55aSu5aWl5b6A5b+c5oq85pe65qiq5qyn5q60546L57+B6KWW6bSs6bSO6buE5bKh5rKW6I275YSE5bGL5oa26IeG5qG254mh5LmZ5L+65Y245oGp5rip56mP6Z+z5LiL5YyW5Luu5L2V5Ly95L6h5L2z5Yqg5Y+v5ZiJ5aSP5auB5a625a+h56eR5pqH5p6c5p625q2M5rKz54Gr54+C56aN56a+56i8566H6Iqx6Iub6IyE6I236I+v6I+T6J2m6Kqy5Zip6LKo6L+m6YGO6Zye6JqK5L+E5bOo5oiR54mZ55S76Iel6Iq96Ju+6LOA6ZuF6aST6aeV5LuL5Lya6Kej5Zue5aGK5aOK5bu75b+r5oCq5oKU5oGi5oeQ5oiS5ouQ5pS5XCJdLFtcIjhhNDBcIixcIumtgeaZpuaisOa1t+eBsOeVjOeahue1teiKpeifuemWi+majuiyneWHseWKvuWkluWSs+Wus+W0luaFqOamgua2r+eijeiTi+ihl+ipsumOp+mquOa1rOmmqOibmeWeo+afv+ibjumIjuWKg+Wah+WQhOW7k+aLoeaSueagvOaguOauu+eNsueiuuepq+immuinkui1q+i8g+mDremWo+malOmdqeWtpuWys+alvemhjemhjuaOm+esoOaoq1wiXSxbXCI4YTgwXCIsXCLmqb/morbpsI3mvZ/libLllp3mgbDmi6zmtLvmuIfmu5HokZvopJDovYTkuJTpsLnlj7bmpJvmqLrpnoTmoKrlhZznq4PokrLph5zpjozlmZvptKjmoKLojIXokLHnsqXliIjoi4Xnk6bkub7kvoPlhqDlr5LliIrli5jli6flt7vllprloKrlp6blrozlrpjlr5vlubLlubnmgqPmhJ/mhaPmhr7mj5vmlaLmn5HmoZPmo7rmrL7mrZPmsZfmvKLmvpfmvYXnkrDnlJjnm6PnnIvnq7/nrqHnsKHnt6nnvLbnv7Dogp3oiabojp7oprPoq4zosqvpgoTpkZHplpPplpHplqLpmaXpn5PppKjoiJjkuLjlkKvlsrjlt4znjqnnmYznnLzlsqnnv6votIvpm4HpoJHpoZTpoZjkvIHkvI7ljbHllpzlmajln7rlpYflrInlr4TlspDluIzlub7lv4zmj67mnLrml5fml6LmnJ/mo4vmo4RcIl0sW1wiOGI0MFwiLFwi5qmf5biw5q+F5rCX5rG955W/56WI5a2j56iA57SA5b696KaP6KiY6LK06LW36LuM6Lyd6aOi6aiO6ay85LqA5YG95YSA5aaT5a6c5oiv5oqA5pOs5qy654qg55aR56WH576p6J+76Kq86K2w5o6s6I+K6Z6g5ZCJ5ZCD5Zar5qGU5qmY6Kmw56Cn5p216buN5Y205a6i6ISa6JmQ6YCG5LiY5LmF5LuH5LyR5Y+K5ZC45a6u5byT5oCl5pWRXCJdLFtcIjhiODBcIixcIuacveaxguaxsuazo+eBuOeQg+eptueqruesiOe0muezvue1puaXp+eJm+WOu+WxheW3qOaLkuaLoOaMmea4oOiZmuiosei3nemLuOa8geempumtmuS6qOS6q+S6rOS+m+S+oOWDkeWFh+ertuWFseWHtuWNlOWMoeWNv+WPq+WWrOWig+WzoeW8t+W9iuaAr+aBkOaBreaMn+aVmeapi+azgeeLgueLreefr+iDuOiEheiIiOiVjumDt+mPoemfv+mll+mpmuS7sOWHneWwreaagealreWxgOabsualteeOieahkOeygeWDheWLpOWdh+W3vumMpuaWpOaso+asveeQtOemgeemveeti+e3iuiKueiPjOihv+iln+isuei/kemHkeWQn+mKgOS5neWAtuWPpeWMuueLl+eOluefqeiLpui6r+mnhumniOmnkuWFt+aEmuiZnuWWsOepuuWBtuWvk+mBh+maheS4suarm+mHp+WxkeWxiFwiXSxbXCI4YzQwXCIsXCLmjpjnqp/mspPpnbTovaHnqqrnhorpmojnsoLmoJfnubDmoZHpjazli7LlkJvolqvoqJPnvqTou43pg6HljabooojnpYHkv4Llgr7liJHlhYTllZPlnK3nj6rlnovlpZHlvaLlvoTmgbXmhbbmhafmhqnmjrLmkLrmlazmma/moYLmuJPnlabnqL3ns7vntYzntpnnuYvnvavojI7ojYrom43oqIjoqaPorabou73poJrpto/oirjov47pr6hcIl0sW1wiOGM4MFwiLFwi5YqH5oif5pKD5r+A6ZqZ5qGB5YKR5qyg5rG65r2U56m057WQ6KGA6Kij5pyI5Lu25YC55YCm5YGl5YW85Yi45Ymj5Zan5ZyP5aCF5auM5bu65oay5oe45ouz5o2y5qSc5qip54m954qs54yu56CU56Gv57W555yM6IKp6KaL6KyZ6LOi6LuS6YGj6Y216Zm66aGV6aiT6bm45YWD5Y6f5Y6z5bm75bym5rib5rqQ546E54++57WD6Ii36KiA6Ku66ZmQ5LmO5YCL5Y+k5ZG85Zu65aeR5a2k5bex5bqr5byn5oi45pWF5p6v5rmW54uQ57OK6KK06IKh6IOh6I+w6JmO6KqH6Leo6Yi36ZuH6aGn6byT5LqU5LqS5LyN5Y2I5ZGJ5ZC+5aiv5b6M5b6h5oKf5qKn5qqO55Ga56KB6Kqe6Kqk6K236YaQ5Lme6a+J5Lqk5L285L6v5YCZ5YCW5YWJ5YWs5Yqf5Yq55Yu+5Y6a5Y+j5ZCRXCJdLFtcIjhkNDBcIixcIuWQjuWWieWdkeWeouWlveWtlOWtneWuj+W3peW3p+W3t+W5uOW6g+W6muW6t+W8mOaBkuaFjOaKl+aLmOaOp+aUu+aYguaZg+abtOadreagoeail+ani+axn+a0qua1qea4r+a6neeUsueah+ehrOeov+ezoOe0hee0mOe1nue2seiAleiAg+iCr+iCseiFlOiGj+iIquiNkuihjOihoeism+iyouizvOmDiumFtemJseegv+mLvOmWpOmZjVwiXSxbXCI4ZDgwXCIsXCLpoIXpppnpq5jptLvliZvliqvlj7flkIjlo5Xmi7fmv6DosarovZ/purnlhYvliLvlkYrlm73nqYDphbfptaDpu5LnjYTmvInohbDnlJHlv73mg5rpqqjni5vovrzmraTpoIPku4rlm7DlnaTlor7lqZrmgajmh4fmmI/mmIbmoLnmorHmt7fnl5XntLroia7prYLkupvkvZDlj4nllIblta/lt6blt67mn7vmspnnkbPnoILoqZDpjpboo5/lnZDluqfmjKvlgrXlgqzlho3mnIDlk4nloZ7lprvlrrDlvanmiY3mjqHmoL3mrbPmuIjngb3ph4fnioDnoJXnoKbnpa3mlo7ntLDoj5zoo4HovInpmpvliaTlnKjmnZDnvarosqHlhrTlnYLpmKrloLrmporogrTlkrLltI7ln7znopXpt7rkvZzliYrlkovmkL7mmKjmnJTmn7XnqoTnrZbntKLpjK/moZzprq3nrLnljJnlhorliLdcIl0sW1wiOGU0MFwiLFwi5a+f5ou25pKu5pOm5pyt5q666Jap6ZuR55qQ6a+W5o2M6YyG6a6r55q/5pmS5LiJ5YKY5Y+C5bGx5oOo5pKS5pWj5qGf54em54+K55Sj566X57qC6JqV6K6D6LOb6YW46aSQ5pas5pqr5q6L5LuV5LuU5Ly65L2/5Yi65Y+45Y+y5Zej5Zub5aOr5aeL5aeJ5ae/5a2Q5bGN5biC5bir5b+X5oCd5oyH5pSv5a2c5pav5pa95peo5p6d5q2iXCJdLFtcIjhlODBcIixcIuatu+awj+eNheelieengeezuOe0mee0q+iCouiEguiHs+imluipnuipqeippuiqjOirruizh+iznOmbjOmjvOatr+S6i+S8vOS+jeWFkOWtl+WvuuaFiOaMgeaZguasoea7i+ayu+eIvueSveeXlOejgeekuuiAjOiAs+iHquiSlOi+nuaxkOm5v+W8j+itmOm0q+eruui7uOWujembq+S4g+WPseWft+WkseWrieWupOaCiea5v+a8hueWvuizquWun+iUgOevoOWBsuaftOiKneWxoeiViue4nuiIjuWGmeWwhOaNqOi1puaWnOeFruekvue0l+iAheisnei7iumBruibh+mCquWAn+WLuuWwuuadk+eBvOeItemFjOmHiOmMq+iLpeWvguW8seaDueS4u+WPluWuiOaJi+acseauiueLqeePoOeoruiFq+i2o+mFkummluWEkuWPl+WRquWvv+aOiOaouee2rOmcgOWbmuWPjuWRqFwiXSxbXCI4ZjQwXCIsXCLlrpflsLHlt57kv67mhIHmi77mtLLnp4Dnp4vntYLnuY3nv5Loh63oiJ/okpDooYbopbLorpDoubTovK/pgLHphYvphazpm4bphpzku4DkvY/lhYXljYHlvpPmiI7mn5TmsYHmuIvnjaPnuKbph43pioPlj5TlpJnlrr/mt5HnpZ3nuK7nspvlob7nhp/lh7rooZPov7Dkv4rls7vmmKXnnqznq6PoiJzpp7/lh4blvqrml6zmpa/mronmt7NcIl0sW1wiOGY4MFwiLFwi5rqW5r2k55u+57SU5beh6YG16YaH6aCG5Yem5Yid5omA5pqR5puZ5ria5bq257eS572y5pu46Jav6Je36Ku45Yqp5Y+Z5aWz5bqP5b6Q5oGV6Yuk6Zmk5YK35YSf5Yud5Yyg5Y2H5Y+s5ZOo5ZWG5ZSx5ZiX5aWo5aa+5ai85a615bCG5bCP5bCR5bCa5bqE5bqK5bug5b2w5om/5oqE5oub5o6M5o235piH5piM5pit5pm25p2+5qKi5qif5qi15rK85raI5riJ5rmY54S854Sm54Wn55eH55yB56Gd56SB56Wl56ew56ug56yR57Kn57S56IKW6I+W6JKL6JWJ6KGd6KOz6Kif6Ki86KmU6Kmz6LGh6LOe6Yak6Ymm6Y2+6ZCY6Zqc6Z6Y5LiK5LiI5Lie5LmX5YaX5Ymw5Z+O5aC05aOM5ayi5bi45oOF5pO+5p2h5p2W5rWE54q255Wz56mj6JK46K2y6Ya46Yyg5Zix5Z+06aO+XCJdLFtcIjkwNDBcIixcIuaLreakjeaulueHree5lOiBt+iJsuinpumjn+idlei+seWwu+S8uOS/oeS+teWUh+WooOWvneWvqeW/g+aFjuaMr+aWsOaZi+ajruamm+a1uOa3seeUs+eWueecn+elnuenpue0s+iHo+iKr+iWquimquiouui6q+i+m+mAsumHnemch+S6uuS7geWIg+WhteWjrOWwi+eUmuWwveiFjuioiui/hemZo+mdreespeirj+mgiOmFouWbs+WOqFwiXSxbXCI5MDgwXCIsXCLpgJflkLnlnoLluKXmjqjmsLTngornnaHnsovnv6DoobDpgYLphZTpjJDpjJjpmo/nkZ7pq4TltIfltanmlbDmnqLotqjpm5vmja7mnYnmpJnoj4XpoJfpm4Doo77mvoTmkbrlr7jkuJbngKznlZ3mmK/lh4TliLbli6Llp5PlvoHmgKfmiJDmlL/mlbTmmJ/mmbTmo7LmoJbmraPmuIXnibLnlJ/nm5vnsr7ogZblo7Doo73opb/oqqDoqpPoq4vpgJ3phpLpnZLpnZnmlonnqI7ohIbpmrvluK3mg5zmiJrmlqXmmJTmnpDnn7PnqY3nsY3nuL7ohIrosqzotaTot6HouZ/noqnliIfmi5nmjqXmkYLmipjoqK3nqoPnr4Doqqzpm6rntbboiIzonYnku5nlhYjljYPljaDlrqPlsILlsJblt53miKbmiYfmkrDmoJPmoLTms4nmtYXmtJfmn5PmvZznhY7nhb3ml4vnqb/nrq3nt5pcIl0sW1wiOTE0MFwiLFwi57mK576o6IW66Iib6Ii56Jam6Kmu6LOO6Le16YG46YG36Yqt6YqR6ZaD6a6u5YmN5ZaE5ry454S25YWo56aF57mV6Iaz57OO5ZmM5aGR5bKo5o6q5pu+5pu95qWa54uZ55aP55aO56SO56WW56ef57KX57Sg57WE6JiH6Ki06Zi76YGh6byg5YOn5Ym15Y+M5Y+i5YCJ5Zaq5aOu5aWP54i95a6L5bGk5Yyd5oOj5oOz5o2c5o6D5oy/5o67XCJdLFtcIjkxODBcIixcIuaTjeaXqeabueW3o+anjeanvea8leeHpeS6ieeXqeebuOeqk+ezn+e3j+e2nOiBoeiNieiNmOiRrOiSvOiXu+ijhei1sOmAgemBremOl+mcnOmokuWDj+Wil+aGjuiHk+iUtei0iOmAoOS/g+WBtOWJh+WNs+aBr+aNieadn+a4rOi2s+mAn+S/l+WxnuiziuaXj+e2muWNkuiiluWFtuaPg+WtmOWtq+WwiuaQjeadkemBnOS7luWkmuWkquaxsOipkeWUvuWgleWmpeaDsOaJk+afgeiIteallemZgOmnhOmoqOS9k+WghuWvvuiAkOWyseW4r+W+heaAoOaFi+aItOabv+azsOa7nuiDjuiFv+iLlOiii+iyuOmAgOmArumaium7m+mvm+S7o+WPsOWkp+esrOmGjemhjOm3uea7neeAp+WNk+WVhOWuheaJmOaKnuaLk+ayoua/r+eQouiol+mQuOa/geirvuiMuOWHp+ibuOWPqlwiXSxbXCI5MjQwXCIsXCLlj6nkvYbpgZTovrDlparohLHlt73nq6rovr/mo5rosLfni7jpsYjmqL3oqrDkuLnljZjlmIblnabmi4XmjqLml6bmrY7mt6HmuZvngq3nn63nq6/nrqrntrvogL3og4bom4voqpXpjZvlm6Plo4flvL7mlq3mmpbmqoDmrrXnlLfoq4flgKTnn6XlnLDlvJvmgaXmmbrmsaDnl7TnqJrnva7oh7TonJjpgYXpprPnr4nnlZznq7nnrZHok4RcIl0sW1wiOTI4MFwiLFwi6YCQ56ep56qS6Iy25auh552A5Lit5Luy5a6Z5b+g5oq95pi85p+x5rOo6Jmr6KG36Ki76YWO6Yuz6aeQ5qiX54Cm54yq6Iun6JGX6LKv5LiB5YWG5YeL5ZaL5a+15biW5biz5bqB5byU5by15b2r5b605oey5oyR5pqi5pyd5r2u54mS55S655y66IG06IS56IW46J226Kq/6Kuc6LaF6Lez6Yqa6ZW36aCC6bOl5YuF5o2X55u05pyV5rKI54+N6LOD6Y6u6Zmz5rSl5aKc5qSO5qeM6L+96Y6a55eb6YCa5aGa5qCC5o605qe75L2D5rys5p+Y6L676JSm57a06Y2U5qS/5r2w5Z2q5aO35ays57Ss54iq5ZCK6Yej6ba05Lqt5L2O5YGc5YG15YmD6LKe5ZGI5aCk5a6a5bid5bqV5bqt5bu35byf5oKM5oq15oy65o+Q5qKv5rGA56KH56aO56iL57eg6ImH6KiC6Kum6LmE6YCTXCJdLFtcIjkzNDBcIixcIumCuOmEremHmOm8juazpeaRmOaTouaVtea7tOeahOesm+mBqemPkea6uuWTsuW+ueaSpOi9jei/remJhOWFuOWhq+WkqeWxleW6l+a3u+e6j+eUnOiyvOi7oumhm+eCueS8neauv+a+seeUsOmbu+WFjuWQkOWgteWhl+WmrOWxoOW+kuaWl+adnOa4oeeZu+iPn+izremAlOmDvemNjeegpeeguuWKquW6puWcn+WltOaAkuWAkuWFmuWGrFwiXSxbXCI5MzgwXCIsXCLlh43liIDllJDloZTloZjlpZflrpXls7bltovmgrzmipXmkK3mnbHmoYPmorzmo5/nm5fmt5jmua/mtpvnga/nh4jlvZPnl5jnpbfnrYnnrZTnrZLns5bntbHliLDokaPolanol6ToqI7orITosYbouI/pgIPpgI/pkJnpmbbpoK3pqLDpl5jlg43li5XlkIzloILlsI7mhqfmkp7mtJ7nnrPnq6Xog7TokITpgZPpioXls6DptIfljL/lvpflvrPmtpznibnnnaPnpr/nr6Tmr5Lni6zoqq3moIPmqaHlh7jnqoHmpLTlsYrps7boi6vlr4XphYnngJ7lmbjlsa/mg4fmlabmsozosZrpgYHpoJPlkZHmm4fpiI3lpYjpgqPlhoXkuY3lh6rolpnorI7ngZjmjbrpjYvmpaLpprTnuITnlbfljZfmpaDou5/pm6PmsZ3kuozlsLzlvJDov6nljILos5Hogonombnlu7/ml6XkubPlhaVcIl0sW1wiOTQ0MFwiLFwi5aaC5bC/6Z+u5Lu75aaK5b+N6KqN5r+h56aw56Wi5a+n6JGx54yr54ax5bm05b+15o275pKa54eD57KY5LmD5bu85LmL5Z+c5Zqi5oKp5r+D57SN6IO96ISz6Ia/6L6y6KaX6Jqk5be05oqK5pKt6KaH5p235rOi5rS+55C256C05amG57216Iqt6aas5L+z5buD5oud5o6S5pWX5p2v55uD54mM6IOM6IK66Lyp6YWN5YCN5Z+55aqS5qKFXCJdLFtcIjk0ODBcIixcIuals+eFpOeLveiyt+WjsuizoOmZqumAmeidv+enpOefp+iQqeS8r+WJpeWNmuaLjeafj+aziueZveeulOeyleiItuiWhOi/q+abnea8oOeIhue4m+iOq+mngem6puWHveeuseehsueuuOiCh+etiOarqOW5oeiCjOeVkeeVoOWFq+mJoua6jOeZuumGl+mrquS8kOe9sOaKnOetj+mWpemzqeWZuuWhmeibpOmavOS8tOWIpOWNiuWPjeWPm+W4huaQrOaWkeadv+awvuaxjueJiOeKr+ePreeVlOe5geiIrOiXqeiyqeevhOmHhueFqemgkumjr+aMveaZqeeVquebpOejkOiVg+ibruWMquWNkeWQpuWmg+W6h+W9vOaCsuaJieaJueaKq+aWkOavlOazjOeWsuearueikeenmOe3i+e9t+iCpeiiq+iqueiyu+mBv+mdnumjm+aoi+ewuOWCmeWwvuW+ruaeh+avmOeQteeciee+jlwiXSxbXCI5NTQwXCIsXCLpvLvmn4rnqJfljLnnlovpq63lvabohp3oj7HogpjlvLzlv4XnlaLnrYbpgLzmoaflp6vlqpvntJDnmb7orKzkv7XlvarmqJnmsLfmvILnk6LnpajooajoqZXosbnlu5/mj4/nl4Xnp5Loi5fpjKjpi7Lokpzom63psK3lk4HlvazmlozmtZzngJXosqfos5PpoLvmlY/nk7bkuI3ku5jln6DlpKvlqablr4zlhqjluIPlupzmgJbmibbmlbdcIl0sW1wiOTU4MFwiLFwi5pan5pmu5rWu54i256ym6IWQ6Iaa6IqZ6K2c6LKg6LOm6LW06Zic6ZmE5L6u5pKr5q2m6Iie6JGh6JWq6YOo5bCB5qWT6aKo6JG66JWX5LyP5Ymv5b6p5bmF5pyN56aP6IW56KSH6KaG5re15byX5omV5rK45LuP54mp6a6S5YiG5ZC75Zm05aKz5oak5omu54Sa5aWu57KJ57Oe57Sb6Zuw5paH6IGe5LiZ5L215YW15aGA5bmj5bmz5byK5p+E5Lim6JS96ZaJ6Zmb57Gz6aCB5YO75aOB55mW56Kn5Yil556l6JSR566G5YGP5aSJ54mH56+H57eo6L666L+U6YGN5L6/5YuJ5aip5byB6Z6t5L+d6IiX6Yuq5ZyD5o2V5q2p55Sr6KOc6LyU56mC5Yuf5aKT5oWV5oiK5pqu5q+N57C/6I+p5YCj5L+45YyF5ZGG5aCx5aWJ5a6d5bOw5bOv5bSp5bqW5oqx5o2n5pS+5pa55pyLXCJdLFtcIjk2NDBcIixcIuazleazoeeDueegsue4q+iDnuiKs+iQjOiTrOicguikkuioquixiumCpumLkumjvemzs+m1rOS5j+S6oeWCjeWJluWdiuWmqOW4veW/mOW/meaIv+aatOacm+afkOajkuWGkue0oeiCquiGqOisgOiyjOiyv+mJvumYsuWQoOmgrOWMl+WDleWNnOWiqOaSsuactOeJp+edpuephumHpuWLg+ayoeauhuWggOW5jOWllOacrOe/u+WHoeebhlwiXSxbXCI5NjgwXCIsXCLmkanno6jprZTpurvln4vlprnmmKfmnprmr47lk6nmp5nluZXohpzmnpXprqrmn77psZLmoZ3kuqbkv6Plj4jmirnmnKvmsqvov4Tkvq3nua3pur/kuIfmhaLmuoDmvKvolJPlkbPmnKrprYXlt7PnrpXlsqzlr4bonJzmuYrok5HnqJTohIjlppnnso3msJHnnKDli5nlpKLnhKHniZ/nn5vpnKfptaHmpIvlqb/lqJjlhqXlkI3lkb3mmI7nm5/ov7fpipjps7Tlp6rniZ3mu4XlhY3mo4nntr/nt6zpnaLpurrmkbjmqKHojILlpoTlrZ/mr5vnjJvnm7LntrLogJfokpnlhLLmnKjpu5nnm67mnaLli7/ppIXlsKTmiLvnsb7osrDllY/mgrbntIvploDljIHkuZ/lhrblpJzniLrogLbph47lvKXnn6LljoTlvbnntITolqzoqLPouo3pnZbmn7Polq7pkZPmhInmhIjmsrnnmZJcIl0sW1wiOTc0MFwiLFwi6Kut6Ly45ZSv5L2R5YSq5YuH5Y+L5a6l5bm95oKg5oaC5o+W5pyJ5p+a5rmn5raM54y254y355Sx56WQ6KOV6KqY6YGK6YKR6YO16ZuE6J6N5aSV5LqI5L2Z5LiO6KqJ6Ly/6aCQ5YKt5bm85aaW5a655bq45o+a5o+65pOB5puc5qWK5qeY5rSL5rq254aU55So56qv576K6ICA6JGJ6JOJ6KaB6Kyh6LiK6YGl6Zm96aSK5oW+5oqR5qyyXCJdLFtcIjk3ODBcIixcIuayg+a1tOe/jOe/vOa3gOe+heieuuijuOadpeiOsemgvOmbt+a0m+e1oeiQvemFquS5seWNteW1kOashOa/q+iXjeiYreimp+WIqeWQj+WxpeadjuaiqOeQhueSg+eXouijj+ijoemHjOmboumZuOW+i+eOh+eri+iRjuaOoOeVpeWKiea1gea6nOeQieeVmeehq+eykumahuernOm+jeS+tuaFruaXheiZnOS6huS6ruWDmuS4oeWHjOWvruaWmeaigea2vOeMn+eZgueereeonOezp+iJr+irkumBvOmHj+mZtemgmOWKm+e3keWAq+WOmOael+a3i+eHkOeQs+iHqOi8qumao+mxl+m6n+eRoOWhgea2mee0r+mhnuS7pOS8tuS+i+WGt+WKseW2uuaAnOeOsuekvOiLk+mItOmat+mbtumcium6l+m9ouaapuattOWIl+WKo+eDiOijguW7ieaBi+aGkOa8o+eFieewvue3tOiBr1wiXSxbXCI5ODQwXCIsXCLok67pgKPpjKzlkYLpra/mq5Pngonos4Lot6/pnLLlirTlqYHlu4rlvITmnJfmpbzmppTmtarmvI/niaLni7znr63ogIHogb7onYvpg47lha3pupPnpoTogovpjLLoq5blgK3lkozoqbHmraros4TohIfmg5HmnqDpt7LkupnkupjpsJDoqavol4HolajmpIDmub7nopfohZVcIl0sW1wiOTg5ZlwiLFwi5byM5LiQ5LiV5Liq5Lix5Li25Li85Li/5LmC5LmW5LmY5LqC5LqF6LGr5LqK6IiS5byN5LqO5Lqe5Lqf5Lqg5Lqi5Lqw5Lqz5Lq25LuO5LuN5LuE5LuG5LuC5LuX5Lue5Lut5Luf5Lu35LyJ5L2a5Lyw5L2b5L2d5L2X5L2H5L225L6I5L6P5L6Y5L275L2p5L2w5L6R5L2v5L6G5L6W5YSY5L+U5L+f5L+O5L+Y5L+b5L+R5L+a5L+Q5L+k5L+l5YCa5YCo5YCU5YCq5YCl5YCF5Lyc5L+25YCh5YCp5YCs5L++5L+v5YCR5YCG5YGD5YGH5pyD5YGV5YGQ5YGI5YGa5YGW5YGs5YG45YKA5YKa5YKF5YK05YKyXCJdLFtcIjk5NDBcIixcIuWDieWDiuWCs+WDguWDluWDnuWDpeWDreWDo+WDruWDueWDteWEieWEgeWEguWEluWEleWElOWEmuWEoeWEuuWEt+WEvOWEu+WEv+WFgOWFkuWFjOWFlOWFoueruOWFqeWFquWFruWGgOWGguWbmOWGjOWGieWGj+WGkeWGk+WGleWGluWGpOWGpuWGouWGqeWGquWGq+WGs+WGseWGsuWGsOWGteWGveWHheWHieWHm+WHoOiZleWHqeWHrVwiXSxbXCI5OTgwXCIsXCLlh7Dlh7Xlh77liITliIvliJTliI7liKfliKrliK7liLPliLnliY/liYTliYvliYzliZ7liZTliarlibTlianlibPlib/lib3lio3lipTlipLlibHliojlipHovqjovqfliqzliq3lirzlirXli4Hli43li5fli57li6Pli6bpo63li6Dli7Pli7Xli7jli7nljIbljIjnlLjljI3ljJDljI/ljJXljJrljKPljK/ljLHljLPljLjljYDljYbljYXkuJfljYnljY3lh5bljZ7ljanlja7lpJjljbvljbfljoLljpbljqDljqbljqXljq7ljrDljrblj4PnsJLpm5nlj5/mm7znh67lj67lj6jlj63lj7rlkIHlkL3lkYDlkKzlkK3lkLzlkK7lkLblkKnlkJ3lkY7lko/lkbXlko7lkZ/lkbHlkbflkbDlkpLlkbvlkoDlkbblkoTlkpDlkoblk4flkqLlkrjlkqXlkqzlk4Tlk4jlkqhcIl0sW1wiOWE0MFwiLFwi5ZKr5ZOC5ZKk5ZK+5ZK85ZOY5ZOl5ZOm5ZSP5ZSU5ZO95ZOu5ZOt5ZO65ZOi5ZS55ZWA5ZWj5ZWM5ZSu5ZWc5ZWF5ZWW5ZWX5ZS45ZSz5ZWd5ZaZ5ZaA5ZKv5ZaK5Zaf5ZW75ZW+5ZaY5Zae5Zau5ZW85ZaD5Zap5ZaH5Zao5Zea5ZeF5Zef5ZeE5Zec5Zek5ZeU5ZiU5Ze35ZiW5Ze+5Ze95Zib5Ze55ZmO5ZmQ54ef5Zi05Zi25Ziy5Zi4XCJdLFtcIjlhODBcIixcIuWZq+WZpOWYr+WZrOWZquWahuWagOWaiuWaoOWalOWaj+WapeWaruWatuWatOWbguWavOWbgeWbg+WbgOWbiOWbjuWbkeWbk+Wbl+WbruWbueWcgOWbv+WchOWcieWciOWci+WcjeWck+WcmOWcluWXh+WcnOWcpuWct+WcuOWdjuWcu+WdgOWdj+WdqeWfgOWeiOWdoeWdv+WeieWek+WeoOWes+WepOWequWesOWfg+WfhuWflOWfkuWfk+WgiuWfluWfo+Wgi+WgmeWgneWhsuWgoeWhouWhi+WhsOavgOWhkuWgveWhueWiheWiueWin+Wiq+WiuuWjnuWiu+WiuOWiruWjheWjk+WjkeWjl+WjmeWjmOWjpeWjnOWjpOWjn+Wjr+WjuuWjueWju+WjvOWjveWkguWkiuWkkOWkm+aipuWkpeWkrOWkreWksuWkuOWkvuerkuWlleWlkOWljuWlmuWlmOWlouWloOWlp+WlrOWlqVwiXSxbXCI5YjQwXCIsXCLlpbjlpoHlpp3kvZ7kvqvlpqPlprLlp4blp6jlp5zlpo3lp5nlp5rlqKXlqJ/lqJHlqJzlqInlqJrlqYDlqazlqYnlqLXlqLblqaLlqarlqprlqrzlqr7lq4vlq4Llqr3lq6Plq5flq6blq6nlq5blq7rlq7vlrIzlrIvlrJblrLLlq5DlrKrlrLblrL7lrYPlrYXlrYDlrZHlrZXlrZrlrZvlraXlranlrbDlrbPlrbXlrbjmlojlrbrlroBcIl0sW1wiOWI4MFwiLFwi5a6D5a6m5a645a+D5a+H5a+J5a+U5a+Q5a+k5a+m5a+i5a+e5a+l5a+r5a+w5a+25a+z5bCF5bCH5bCI5bCN5bCT5bCg5bCi5bCo5bC45bC55bGB5bGG5bGO5bGT5bGQ5bGP5a2x5bGs5bGu5Lmi5bG25bG55bKM5bKR5bKU5aab5bKr5bK75bK25bK85bK35bOF5bK+5bOH5bOZ5bOp5bO95bO65bOt5baM5bOq5bSL5bSV5bSX5bWc5bSf5bSb5bSR5bSU5bSi5bSa5bSZ5bSY5bWM5bWS5bWO5bWL5bWs5bWz5bW25baH5baE5baC5bai5bad5bas5bau5ba95baQ5ba35ba85beJ5beN5beT5beS5beW5beb5ber5bey5be15biL5bia5biZ5biR5bib5bi25bi35bmE5bmD5bmA5bmO5bmX5bmU5bmf5bmi5bmk5bmH5bm15bm25bm66bq85bm/5bqg5buB5buC5buI5buQ5buPXCJdLFtcIjljNDBcIixcIuW7luW7o+W7neW7muW7m+W7ouW7oeW7qOW7qeW7rOW7seW7s+W7sOW7tOW7uOW7vuW8g+W8ieW9neW9nOW8i+W8keW8luW8qeW8reW8uOW9geW9iOW9jOW9juW8r+W9keW9luW9l+W9meW9oeW9reW9s+W9t+W+g+W+guW9v+W+iuW+iOW+keW+h+W+nuW+meW+mOW+oOW+qOW+reW+vOW/luW/u+W/pOW/uOW/seW/neaCs+W/v+aAoeaBoFwiXSxbXCI5YzgwXCIsXCLmgJnmgJDmgKnmgI7mgLHmgJvmgJXmgKvmgKbmgI/mgLrmgZrmgYHmgarmgbfmgZ/mgYrmgYbmgY3mgaPmgYPmgaTmgYLmgazmgavmgZnmgoHmgo3mg6fmgoPmgprmgoTmgpvmgpbmgpfmgpLmgqfmgovmg6Hmgrjmg6Dmg5PmgrTlv7Dmgr3mg4bmgrXmg5jmhY3mhJXmhIbmg7bmg7fmhIDmg7Tmg7rmhIPmhKHmg7vmg7HmhI3mhI7mhYfmhL7mhKjmhKfmhYrmhL/mhLzmhKzmhLTmhL3mhYLmhYTmhbPmhbfmhZjmhZnmhZrmhavmhbTmha/mhaXmhbHmhZ/mhZ3mhZPmhbXmhpnmhpbmhofmhqzmhpTmhprmhormhpHmhqvmhq7mh4zmh4rmh4nmh7fmh4jmh4Pmh4bmhrrmh4vnvbnmh43mh6bmh6Pmh7bmh7rmh7Tmh7/mh73mh7zmh77miIDmiIjmiInmiI3miIzmiJTmiJtcIl0sW1wiOWQ0MFwiLFwi5oie5oih5oiq5oiu5oiw5oiy5oiz5omB5omO5ome5omj5omb5omg5omo5om85oqC5oqJ5om+5oqS5oqT5oqW5ouU5oqD5oqU5ouX5ouR5oq75ouP5ou/5ouG5pOU5ouI5ouc5ouM5ouK5ouC5ouH5oqb5ouJ5oyM5ouu5oux5oyn5oyC5oyI5ouv5ou15o2Q5oy+5o2N5pCc5o2P5o6W5o6O5o6A5o6r5o225o6j5o6P5o6J5o6f5o615o2rXCJdLFtcIjlkODBcIixcIuaNqeaOvuaPqeaPgOaPhuaPo+aPieaPkuaPtuaPhOaQluaQtOaQhuaQk+aQpuaQtuaUneaQl+aQqOaQj+aRp+aRr+aRtuaRjuaUquaSleaSk+aSpeaSqeaSiOaSvOaTmuaTkuaTheaTh+aSu+aTmOaTguaTseaTp+iIieaToOaToeaKrOaTo+aTr+aUrOaTtuaTtOaTsuaTuuaUgOaTveaUmOaUnOaUheaUpOaUo+aUq+aUtOaUteaUt+aUtuaUuOeVi+aViOaVluaVleaVjeaVmOaVnuaVneaVsuaVuOaWguaWg+iuiuaWm+aWn+aWq+aWt+aXg+aXhuaXgeaXhOaXjOaXkuaXm+aXmeaXoOaXoeaXseadsuaYiuaYg+aXu+ads+aYteaYtuaYtOaYnOaZj+aZhOaZieaZgeaZnuaZneaZpOaZp+aZqOaZn+aZouaZsOaag+aaiOaajuaaieaahOaamOaaneabgeaaueabieaavuaavFwiXSxbXCI5ZTQwXCIsXCLmm4Tmmrjmm5bmm5rmm6DmmL/mm6bmm6nmm7Dmm7Xmm7fmnI/mnJbmnJ7mnKbmnKfpnLjmnK7mnL/mnLbmnYHmnLjmnLfmnYbmnZ7mnaDmnZnmnaPmnaTmnonmnbDmnqnmnbzmnarmnozmnovmnqbmnqHmnoXmnrfmn6/mnrTmn6zmnrPmn6nmnrjmn6Tmn57mn53mn6Lmn67mnrnmn47mn4bmn6fmqpzmoJ7moYbmoKnmoYDmoY3moLLmoY5cIl0sW1wiOWU4MFwiLFwi5qKz5qCr5qGZ5qGj5qG35qG/5qKf5qKP5qKt5qKU5qKd5qKb5qKD5qqu5qK55qG05qK15qKg5qK65qSP5qKN5qG+5qSB5qOK5qSI5qOY5qSi5qSm5qOh5qSM5qON5qOU5qOn5qOV5qS25qSS5qSE5qOX5qOj5qSl5qO55qOg5qOv5qSo5qSq5qSa5qSj5qSh5qOG5qW55qW35qWc5qW45qWr5qWU5qW+5qWu5qS55qW05qS95qWZ5qSw5qWh5qWe5qWd5qaB5qWq5qay5qau5qeQ5qa/5qeB5qeT5qa+5qeO5a+o5qeK5qed5qa75qeD5qan5qiu5qaR5qag5qac5qaV5qa05qee5qeo5qiC5qib5qe/5qyK5qe55qey5qen5qiF5qax5qie5qet5qiU5qer5qiK5qiS5quB5qij5qiT5qmE5qiM5qmy5qi25qm45qmH5qmi5qmZ5qmm5qmI5qi45qii5qqQ5qqN5qqg5qqE5qqi5qqjXCJdLFtcIjlmNDBcIixcIuaql+iYl+aqu+arg+arguaquOaqs+aqrOarnuarkearn+aqquarmuarquaru+asheiYluaruuaskuaslumsseasn+asuOast+ebnOasuemjruath+atg+atieatkOatmeatlOatm+atn+atoeatuOatueatv+augOauhOaug+aujeaumOauleaunuaupOauquauq+aur+ausuauseaus+aut+auvOavhuavi+avk+avn+avrOavq+avs+avr1wiXSxbXCI5ZjgwXCIsXCLpur7msIjmsJPmsJTmsJvmsKTmsKPmsZ7msZXmsaLmsarmsoLmso3msprmsoHmspvmsb7msajmsbPmspLmspDms4Tms7Hms5Pmsr3ms5fms4Xms53msq7msrHmsr7msrrms5vms6/ms5nms6rmtJ/ooY3mtLbmtKvmtL3mtLjmtJnmtLXmtLPmtJLmtIzmtaPmtpPmtaTmtZrmtbnmtZnmto7mtpXmv6TmtoXmt7nmuJXmuIrmtrXmt4fmt6bmtrjmt4bmt6zmt57mt4zmt6jmt5Lmt4Xmt7rmt5nmt6Tmt5Xmt6rmt67muK3mua7muK7muJnmubLmuZ/muL7muKPmuavmuKvmubbmuY3muJ/muYPmuLrmuY7muKTmu7/muJ3muLjmuoLmuqrmupjmu4nmurfmu5Pmur3muq/mu4TmurLmu5Tmu5Xmuo/muqXmu4Lmup/mvYHmvJHngYzmu6zmu7jmu77mvL/mu7LmvLHmu6/mvLLmu4xcIl0sW1wiZTA0MFwiLFwi5ry+5ryT5ru35r6G5r265r245r6B5r6A5r2v5r2b5r+z5r2t5r6C5r285r2Y5r6O5r6R5r+C5r2m5r6z5r6j5r6h5r6k5r655r+G5r6q5r+f5r+V5r+s5r+U5r+Y5r+x5r+u5r+b54CJ54CL5r+654CR54CB54CP5r++54Cb54Ca5r2054Cd54CY54Cf54Cw54C+54Cy54GR54Gj54KZ54KS54Kv54Ox54Ks54K454Kz54Ku54Of54OL54OdXCJdLFtcImUwODBcIixcIueDmeeEieeDveeEnOeEmeeFpeeFleeGiOeFpueFoueFjOeFlueFrOeGj+eHu+eGhOeGleeGqOeGrOeHl+eGueeGvueHkueHieeHlOeHjueHoOeHrOeHp+eHteeHvOeHueeHv+eIjeeIkOeIm+eIqOeIreeIrOeIsOeIsueIu+eIvOeIv+eJgOeJhueJi+eJmOeJtOeJvueKgueKgeeKh+eKkueKlueKoueKp+eKueeKsueLg+eLhueLhOeLjueLkueLoueLoOeLoeeLueeLt+WAj+eMl+eMiueMnOeMlueMneeMtOeMr+eMqeeMpeeMvueNjueNj+m7mOeNl+eNqueNqOeNsOeNuOeNteeNu+eNuuePiOeOs+ePjueOu+ePgOePpeePruePnueSoueQheeRr+eQpeePuOeQsueQuueRleeQv+eRn+eRmeeRgeeRnOeRqeeRsOeRo+eRqueRtueRvueSi+eSnueSp+eTiueTj+eTlOePsVwiXSxbXCJlMTQwXCIsXCLnk6Dnk6Pnk6fnk6nnk67nk7Lnk7Dnk7Hnk7jnk7fnlITnlIPnlIXnlIznlI7nlI3nlJXnlJPnlJ7nlKbnlKznlLznlYTnlY3nlYrnlYnnlZvnlYbnlZrnlannlaTnlafnlavnla3nlbjnlbbnlobnlofnlbTnlornlonnloLnlpTnlprnlp3nlqXnlqPnl4LnlrPnl4PnlrXnlr3nlrjnlrznlrHnl43nl4rnl5Lnl5nnl6Pnl57nl77nl79cIl0sW1wiZTE4MFwiLFwi55e855iB55ew55e655ey55ez55iL55iN55iJ55if55in55ig55ih55ii55ik55i055iw55i755mH55mI55mG55mc55mY55mh55mi55mo55mp55mq55mn55ms55mw55my55m255m455m855qA55qD55qI55qL55qO55qW55qT55qZ55qa55qw55q055q455q555q655uC55uN55uW55uS55ue55uh55ul55un55uq6Jiv55u755yI55yH55yE55yp55yk55ye55yl55ym55yb55y355y4552H552a552o552r552b552l552/552+5525556O556L556R556g556e556w55625565556/55685569556755+H55+N55+X55+a55+c55+j55+u55+856CM56CS56Sm56Cg56Sq56GF56KO56G056KG56G856Ka56KM56Kj56K156Kq56Kv56OR56OG56OL56OU56K+56K856OF56OK56OsXCJdLFtcImUyNDBcIixcIuejp+ejmuejveejtOekh+ekkuekkeekmeekrOekq+elgOeloOell+eln+elmuelleelk+eluuelv+emiuemneemp+m9i+emquemruems+emueemuuenieenleenp+enrOenoeeno+eoiOeojeeomOeomeeooOeon+emgOeoseeou+eovueot+epg+epl+epieepoeepouepqem+neepsOepueepveeqiOeql+eqleeqmOeqlueqqeeriOeqsFwiXSxbXCJlMjgwXCIsXCLnqrbnq4Xnq4Tnqr/pgoPnq4fnq4rnq43nq4/nq5Xnq5Pnq5nnq5rnq53nq6Hnq6Lnq6bnq63nq7DnrILnrI/nrIrnrIbnrLPnrJjnrJnnrJ7nrLXnrKjnrLbnrZDnrbrnrITnrY3nrIvnrYznrYXnrbXnraXnrbTnrafnrbDnrbHnraznra7nrp3nrpjnrp/nro3nrpznrprnrovnrpLnro/nrZ3nrpnnr4vnr4Hnr4znr4/nrrTnr4bnr53nr6nnsJHnsJTnr6bnr6XnsaDnsIDnsIfnsJPnr7Pnr7fnsJfnsI3nr7bnsKPnsKfnsKrnsJ/nsLfnsKvnsL3nsYznsYPnsZTnsY/nsYDnsZDnsZjnsZ/nsaTnsZbnsaXnsaznsbXnsoPnspDnsqTnsq3nsqLnsqvnsqHnsqjnsrPnsrLnsrHnsq7nsrnnsr3ns4Dns4Xns4Lns5jns5Lns5zns6LprLvns6/ns7Lns7Tns7bns7rntIZcIl0sW1wiZTM0MFwiLFwi57SC57Sc57SV57SK57WF57WL57Su57Sy57S/57S157WG57Wz57WW57WO57Wy57Wo57Wu57WP57Wj57aT57aJ57Wb57aP57W957ab57a657au57aj57a157eH57a957ar57i957ai57av57ec57a457af57aw57eY57ed57ek57ee57e757ey57eh57iF57iK57ij57ih57iS57ix57if57iJ57iL57ii57mG57mm57i757i157i557mD57i3XCJdLFtcImUzODBcIixcIue4sue4uue5p+e5nee5lue5nue5mee5mue5uee5que5qee5vOe5u+e6g+e3lee5vei+rue5v+e6iOe6iee6jOe6kue6kOe6k+e6lOe6lue6jue6m+e6nOe8uOe8uue9hee9jOe9jee9jue9kOe9kee9lee9lOe9mOe9n+e9oOe9qOe9qee9p+e9uOe+gue+hue+g+e+iOe+h+e+jOe+lOe+nue+nee+mue+o+e+r+e+sue+uee+rue+tue+uOitsee/hee/hue/iue/lee/lOe/oee/pue/qee/s+e/uemjnOiAhuiAhOiAi+iAkuiAmOiAmeiAnOiAoeiAqOiAv+iAu+iBiuiBhuiBkuiBmOiBmuiBn+iBouiBqOiBs+iBsuiBsOiBtuiBueiBveiBv+iChOiChuiCheiCm+iCk+iCmuiCreWGkOiCrOiDm+iDpeiDmeiDneiDhOiDmuiDluiEieiDr+iDseiEm+iEqeiEo+iEr+iFi1wiXSxbXCJlNDQwXCIsXCLpmovohYbohL7ohZPohZHog7zohbHoha7ohaXohabohbTohoPohojohorohoDohoLohqDohpXohqTohqPohZ/ohpPohqnohrDohrXohr7ohrjohr3oh4Doh4Lohrroh4noh43oh5Hoh5noh5joh4joh5roh5/oh6Doh6foh7roh7voh77oiIHoiILoiIXoiIfoiIroiI3oiJDoiJboiKnoiKvoiLjoiLPoiYDoiZnoiZjoiZ3oiZroiZ/oiaRcIl0sW1wiZTQ4MFwiLFwi6Imi6Imo6Imq6Imr6Iiu6Imx6Im36Im46Im+6IqN6IqS6Iqr6Iqf6Iq76Iqs6Iuh6Iuj6Iuf6IuS6Iu06Iuz6Iu66I6T6IyD6Iu76Iu56Iue6IyG6Iuc6IyJ6IuZ6Iy16Iy06IyW6Iyy6Iyx6I2A6Iy56I2Q6I2F6Iyv6Iyr6IyX6IyY6I6F6I6a6I6q6I6f6I6i6I6W6Iyj6I6O6I6H6I6K6I286I616I2z6I216I6g6I6J6I6o6I+06JCT6I+r6I+O6I+96JCD6I+Y6JCL6I+B6I+36JCH6I+g6I+y6JCN6JCi6JCg6I696JC46JSG6I+76JGt6JCq6JC86JWa6JKE6JG36JGr6JKt6JGu6JKC6JGp6JGG6JCs6JGv6JG56JC16JOK6JGi6JK56JK/6JKf6JOZ6JON6JK76JOa6JOQ6JOB6JOG6JOW6JKh6JSh6JO/6JO06JSX6JSY6JSs6JSf6JSV6JSU6JO86JWA6JWj6JWY6JWIXCJdLFtcImU1NDBcIixcIuiVgeiYguiVi+iVleiWgOiWpOiWiOiWkeiWiuiWqOiVreiWlOiWm+iXquiWh+iWnOiVt+iVvuiWkOiXieiWuuiXj+iWueiXkOiXleiXneiXpeiXnOiXueiYiuiYk+iYi+iXvuiXuuiYhuiYouiYmuiYsOiYv+iZjeS5leiZlOiZn+iZp+iZseiak+iao+iaqeiaquiai+iajOiatuiar+ibhOibhuiasOibieigo+iaq+iblOibnuibqeibrFwiXSxbXCJlNTgwXCIsXCLom5/om5vom6/onJLonIbonIjonIDonIPom7vonJHonInonI3om7nonIronLTonL/onLfonLvonKXonKnonJronaDonZ/onbjonYzonY7onbTonZfonajona7onZnonZPonaPonarooIXonqLonp/onoLonq/on4vonr3on4Don5Dpm5bonqvon4TonrPon4fon4bonrvon6/on7Lon6DooI/ooI3on77on7bon7fooI7on5LooJHooJbooJXooKLooKHooLHooLbooLnooKfooLvooYTooYLooZLooZnooZ7ooaLooavoooHoob7oop7oobXoob3oorXoobLoooLoopfoopLooq7oopnooqLooo3ooqToorDoor/oorHoo4Poo4Too5Too5joo5noo53oo7nopILoo7zoo7Too6joo7LopITopIzopIropJPopYPopJ7opKXopKropKvopYHopYTopLvopLbopLjopYzopJ3opaDopZ5cIl0sW1wiZTY0MFwiLFwi6KWm6KWk6KWt6KWq6KWv6KW06KW36KW+6KaD6KaI6KaK6KaT6KaY6Kah6Kap6Kam6Kas6Kav6Kay6Ka66Ka96Ka/6KeA6Kea6Kec6Ked6Ken6Ke06Ke46KiD6KiW6KiQ6KiM6Kib6Kid6Kil6Ki26KmB6Kmb6KmS6KmG6KmI6Km86Kmt6Kms6Kmi6KqF6KqC6KqE6Kqo6Kqh6KqR6Kql6Kqm6Kqa6Kqj6KuE6KuN6KuC6Kua6Kur6Kuz6KunXCJdLFtcImU2ODBcIixcIuirpOirseislOiroOirouirt+irnuirm+isjOish+ismuiroeisluiskOisl+isoOiss+meq+ispuisq+isvuisqOitgeitjOitj+itjuitieitluitm+itmuitq+itn+itrOitr+ittOitveiugOiujOiujuiukuiuk+iuluiumeiumuiwuuixgeiwv+ixiOixjOixjuixkOixleixouixrOixuOixuuiyguiyieiyheiyiuiyjeiyjuiylOixvOiymOaIneiyreiyquiyveiysuiys+iyruiytuiziOizgeizpOizo+izmuizveizuuizu+i0hOi0hei0iui0h+i0j+i0jei0kOm9jui0k+izjei0lOi0lui1p+i1rei1sei1s+i2gei2mei3gui2vui2uui3j+i3mui3lui3jOi3m+i3i+i3qui3q+i3n+i3o+i3vOi4iOi4iei3v+i4nei4nui4kOi4n+i5gui4tei4sOi4tOi5ilwiXSxbXCJlNzQwXCIsXCLouYfouYnouYzouZDouYjouZnouaTouaDouKrouaPouZXoubboubLoubzouoHouofouoXouoTouovouoroupPoupHoupToupnouqrouqHouqzourDou4bourHour7ou4Xou4jou4vou5vou6Pou7zou7vou6vou77ovIrovIXovJXovJLovJnovJPovJzovJ/ovJvovIzovKbovLPovLvovLnovYXovYLovL7ovYzovYnovYbovY7ovZfovZxcIl0sW1wiZTc4MFwiLFwi6L2i6L2j6L2k6L6c6L6f6L6j6L6t6L6v6L636L+a6L+l6L+i6L+q6L+v6YKH6L+06YCF6L+56L+66YCR6YCV6YCh6YCN6YCe6YCW6YCL6YCn6YC26YC16YC56L+46YGP6YGQ6YGR6YGS6YCO6YGJ6YC+6YGW6YGY6YGe6YGo6YGv6YG26Zqo6YGy6YKC6YG96YKB6YKA6YKK6YKJ6YKP6YKo6YKv6YKx6YK16YOi6YOk5omI6YOb6YSC6YSS6YSZ6YSy6YSw6YWK6YWW6YWY6YWj6YWl6YWp6YWz6YWy6YaL6YaJ6YaC6Yai6Yar6Yav6Yaq6Ya16Ya06Ya66YeA6YeB6YeJ6YeL6YeQ6YeW6Yef6Yeh6Yeb6Ye86Ye16Ye26Yie6Ye/6YiU6Yis6YiV6YiR6Yme6YmX6YmF6YmJ6Ymk6YmI6YqV6Yi/6YmL6YmQ6Yqc6YqW6YqT6Yqb6Yma6YuP6Yq56Yq36Yup6YyP6Yu66Y2E6YyuXCJdLFtcImU4NDBcIixcIumMmemMoumMmumMo+mMuumMtemMu+mNnOmNoOmNvOmNrumNlumOsOmOrOmOremOlOmOuemPlumPl+mPqOmPpemPmOmPg+mPnemPkOmPiOmPpOmQmumQlOmQk+mQg+mQh+mQkOmQtumQq+mQtemQoemQuumRgemRkumRhOmRm+mRoOmRoumRnumRqumIqemRsOmRtemRt+mRvemRmumRvOmRvumSgemRv+mWgumWh+mWiumWlOmWlumWmOmWmVwiXSxbXCJlODgwXCIsXCLplqDplqjplqfplq3plrzplrvplrnplr7pl4rmv7bpl4Ppl43pl4zpl5Xpl5Tpl5bpl5zpl6Hpl6Xpl6LpmKHpmKjpmK7pmK/pmYLpmYzpmY/pmYvpmbfpmZzpmZ7pmZ3pmZ/pmabpmbLpmazpmo3pmpjpmpXpmpfpmqrpmqfpmrHpmrLpmrDpmrTpmrbpmrjpmrnpm47pm4vpm4npm43opY3pm5zpnI3pm5Xpm7npnITpnIbpnIjpnJPpnI7pnJHpnI/pnJbpnJnpnKTpnKrpnLDpnLnpnL3pnL7pnYTpnYbpnYjpnYLpnYnpnZzpnaDpnaTpnabpnajli5LpnavpnbHpnbnpnoXpnbzpnoHpnbrpnobpnovpno/pnpDpnpzpnqjpnqbpnqPpnrPpnrTpn4Ppn4bpn4jpn4vpn5zpn63pvY/pn7Lnq5/pn7bpn7XpoI/poIzpoLjpoKTpoKHpoLfpoL3poYbpoY/poYvpoavpoa/pobBcIl0sW1wiZTk0MFwiLFwi6aGx6aG06aGz6aKq6aKv6aKx6aK26aOE6aOD6aOG6aOp6aOr6aSD6aSJ6aSS6aSU6aSY6aSh6aSd6aSe6aSk6aSg6aSs6aSu6aS96aS+6aWC6aWJ6aWF6aWQ6aWL6aWR6aWS6aWM6aWV6aaX6aaY6aal6aat6aau6aa86aef6aeb6aed6aeY6aeR6aet6aeu6aex6aey6ae76ae46aiB6aiP6aiF6aei6aiZ6air6ai36amF6amC6amA6amDXCJdLFtcImU5ODBcIixcIumovumplempjempm+mpl+mpn+mpoumppemppOmpqempq+mpqumqremqsOmqvOmrgOmrj+mrkemrk+mrlOmrnumrn+mroumro+mrpumrr+mrq+mrrumrtOmrsemrt+mru+mshumsmOmsmumsn+msoumso+mspemsp+msqOmsqemsqumsrumsr+mssumthOmtg+mtj+mtjemtjumtkemtmOmttOmuk+mug+mukemulumul+mun+muoOmuqOmutOmvgOmviumuuemvhumvj+mvkemvkumvo+mvoumvpOmvlOmvoemwuumvsumvsemvsOmwlemwlOmwiemwk+mwjOmwhumwiOmwkumwiumwhOmwrumwm+mwpemwpOmwoemwsOmxh+mwsumxhumwvumxmumxoOmxp+mxtumxuOmzp+mzrOmzsOm0iem0iOmzq+m0g+m0hum0qum0pum2r+m0o+m0n+m1hOm0lem0kum1gem0v+m0vum1hum1iFwiXSxbXCJlYTQwXCIsXCLptZ3ptZ7ptaTptZHptZDptZnptbLptonptofptqvpta/ptbrptprptqTptqnptrLpt4Tpt4Hptrvptrjptrrpt4bpt4/pt4Lpt5npt5Ppt7jpt6bpt63pt6/pt73puJrpuJvpuJ7pubXpubnpub3puoHpuojpuovpuozpupLpupXpupHpup3puqXpuqnpurjpuqrpuq3pnaHpu4zpu47pu4/pu5Dpu5Tpu5zpu57pu53pu6Dpu6Xpu6jpu69cIl0sW1wiZWE4MFwiLFwi6bu06bu26bu36bu56bu76bu86bu96byH6byI55q36byV6byh6bys6by+6b2K6b2S6b2U6b2j6b2f6b2g6b2h6b2m6b2n6b2s6b2q6b236b2y6b226b6V6b6c6b6g5aCv5qeH6YGZ55Gk5Yec54aZXCJdLFtcImVkNDBcIixcIue6iuiknOmNiOmKiOiTnOS/ieeCu+aYseajiOmLueabu+W9heS4qOS7oeS7vOS8gOS8g+S8ueS9luS+kuS+iuS+muS+lOS/jeWBgOWAouS/v+WAnuWBhuWBsOWBguWClOWDtOWDmOWFiuWFpOWGneWGvuWHrOWIleWKnOWKpuWLgOWLm+WMgOWMh+WMpOWNsuWOk+WOsuWPne+ojuWSnOWSiuWSqeWTv+WWhuWdmeWdpeWerOWfiOWfh++oj1wiXSxbXCJlZDgwXCIsXCLvqJDlop7lorLlpIvlpZPlpZvlpZ3lpaPlpqTlprrlrZblr4DnlK/lr5jlr6zlsJ7lsqblsrrls7XltKfltZPvqJHltYLlta3ltrjltrnlt5DlvKHlvLTlvaflvrflv57mgZ3mgoXmgormg57mg5XmhKDmg7LmhJHmhLfmhLDmhpjmiJPmiqbmj7XmkaDmkp3mk47mlY7mmIDmmJXmmLvmmInmmK7mmJ7mmKTmmaXmmZfmmZnvqJLmmbPmmpnmmqDmmrLmmr/mm7rmnI7vpKnmnabmnrvmoZLmn4DmoIHmoYTmo4/vqJPmpajvqJTmppjmp6LmqLDmqavmqYbmqbPmqb7mq6Lmq6Tmr5bmsL/msZzmsobmsa/ms5rmtITmtofmta/mtpbmtqzmt4/mt7jmt7Lmt7zmuLnmuZzmuKfmuLzmur/mvojmvrXmv7XngIXngIfngKjngoXngqvnhI/nhITnhZznhYbnhYfvqJXnh4Hnh77nirFcIl0sW1wiZWU0MFwiLFwi54q+54yk76iW5423546954+J54+W54+j54+S55CH54+155Cm55Cq55Cp55Cu55Gi55KJ55Kf55SB55Wv55qC55qc55qe55qb55qm76iX552G5Yqv56Ch56GO56Gk56G656Sw76iY76iZ76ia56aU76ib56ab56uR56un76ic56ur566e76id57WI57Wc57a357ag57eW57mS572H576h76ie6IyB6I2i6I2/6I+H6I+26JGI6JK06JWT6JWZXCJdLFtcImVlODBcIixcIuiVq++on+iWsO+ooO+ooeigh+ijteiokuiot+ipueiqp+iqvuirn++oouirtuitk+itv+izsOiztOi0kui1tu+oo+i7j++opO+opemBp+mDnu+opumElemEp+mHmumHl+mHnumHremHrumHpOmHpemIhumIkOmIiumIuumJgOmIvOmJjumJmemJkemIuemJp+mKp+mJt+mJuOmLp+mLl+mLmemLkO+op+mLlemLoOmLk+mMpemMoemLu++oqOmMnumLv+mMnemMgumNsOmNl+mOpOmPhumPnumPuOmQsemRhemRiOmWku+nnO+oqemanemar+mcs+mcu+mdg+mdjemdj+mdkemdlemhl+mhpe+oqu+oq+mkp++orOmmnumpjumrmemrnOmttemtsumuj+musemuu+mwgOm1sOm1q++orem4mem7kVwiXSxbXCJlZWVmXCIsXCLihbBcIiw5LFwi77+i77+k77yH77yCXCJdLFtcImYwNDBcIixcIu6AgFwiLDYyXSxbXCJmMDgwXCIsXCLugL9cIiwxMjRdLFtcImYxNDBcIixcIu6CvFwiLDYyXSxbXCJmMTgwXCIsXCLug7tcIiwxMjRdLFtcImYyNDBcIixcIu6FuFwiLDYyXSxbXCJmMjgwXCIsXCLuhrdcIiwxMjRdLFtcImYzNDBcIixcIu6ItFwiLDYyXSxbXCJmMzgwXCIsXCLuibNcIiwxMjRdLFtcImY0NDBcIixcIu6LsFwiLDYyXSxbXCJmNDgwXCIsXCLujK9cIiwxMjRdLFtcImY1NDBcIixcIu6OrFwiLDYyXSxbXCJmNTgwXCIsXCLuj6tcIiwxMjRdLFtcImY2NDBcIixcIu6RqFwiLDYyXSxbXCJmNjgwXCIsXCLukqdcIiwxMjRdLFtcImY3NDBcIixcIu6UpFwiLDYyXSxbXCJmNzgwXCIsXCLulaNcIiwxMjRdLFtcImY4NDBcIixcIu6XoFwiLDYyXSxbXCJmODgwXCIsXCLumJ9cIiwxMjRdLFtcImY5NDBcIixcIu6anFwiXSxbXCJmYTQwXCIsXCLihbBcIiw5LFwi4oWgXCIsOSxcIu+/ou+/pO+8h++8guOIseKEluKEoeKItee6iuiknOmNiOmKiOiTnOS/ieeCu+aYseajiOmLueabu+W9heS4qOS7oeS7vOS8gOS8g+S8ueS9luS+kuS+iuS+muS+lOS/jeWBgOWAouS/v+WAnuWBhuWBsOWBguWClOWDtOWDmOWFilwiXSxbXCJmYTgwXCIsXCLlhaTlhp3lhr7lh6zliJXlipzliqbli4Dli5vljIDljIfljKTljbLljpPljrLlj53vqI7lkpzlkorlkqnlk7/lloblnZnlnaXlnqzln4jln4fvqI/vqJDlop7lorLlpIvlpZPlpZvlpZ3lpaPlpqTlprrlrZblr4DnlK/lr5jlr6zlsJ7lsqblsrrls7XltKfltZPvqJHltYLlta3ltrjltrnlt5DlvKHlvLTlvaflvrflv57mgZ3mgoXmgormg57mg5XmhKDmg7LmhJHmhLfmhLDmhpjmiJPmiqbmj7XmkaDmkp3mk47mlY7mmIDmmJXmmLvmmInmmK7mmJ7mmKTmmaXmmZfmmZnvqJLmmbPmmpnmmqDmmrLmmr/mm7rmnI7vpKnmnabmnrvmoZLmn4DmoIHmoYTmo4/vqJPmpajvqJTmppjmp6LmqLDmqavmqYbmqbPmqb7mq6Lmq6Tmr5bmsL/msZzmsobmsa/ms5rmtITmtofmta9cIl0sW1wiZmI0MFwiLFwi5raW5ras5reP5re45rey5re85ri55rmc5rin5ri85rq/5r6I5r615r+154CF54CH54Co54KF54Kr54SP54SE54Wc54WG54WH76iV54eB54e+54qx54q+54yk76iW5423546954+J54+W54+j54+S55CH54+155Cm55Cq55Cp55Cu55Gi55KJ55Kf55SB55Wv55qC55qc55qe55qb55qm76iX552G5Yqv56Ch56GO56Gk56G656Sw76iY76iZXCJdLFtcImZiODBcIixcIu+omuemlO+om+emm+erkeerp++onOerq+eunu+onee1iOe1nOe2t+e2oOe3lue5kue9h+e+oe+onuiMgeiNouiNv+iPh+iPtuiRiOiStOiVk+iVmeiVq++on+iWsO+ooO+ooeigh+ijteiokuiot+ipueiqp+iqvuirn++oouirtuitk+itv+izsOiztOi0kui1tu+oo+i7j++opO+opemBp+mDnu+opumElemEp+mHmumHl+mHnumHremHrumHpOmHpemIhumIkOmIiumIuumJgOmIvOmJjumJmemJkemIuemJp+mKp+mJt+mJuOmLp+mLl+mLmemLkO+op+mLlemLoOmLk+mMpemMoemLu++oqOmMnumLv+mMnemMgumNsOmNl+mOpOmPhumPnumPuOmQsemRhemRiOmWku+nnO+oqemanemar+mcs+mcu+mdg+mdjemdj+mdkemdlemhl+mhpe+oqu+oq+mkp++orOmmnumpjumrmVwiXSxbXCJmYzQwXCIsXCLpq5zprbXprbLpro/prrHprrvpsIDptbDptavvqK3puJnpu5FcIl1dJyl9LGZ1bmN0aW9uKHQpe3QuZXhwb3J0cz1KU09OLnBhcnNlKCdbW1wiMFwiLFwiXFxcXHUwMDAwXCIsMTI3XSxbXCI4ZWExXCIsXCLvvaFcIiw2Ml0sW1wiYTFhMVwiLFwi44CA44CB44CC77yM77yO44O777ya77yb77yf77yB44Kb44KcwrTvvYDCqO+8vu+/o++8v+ODveODvuOCneOCnuOAg+S7neOAheOAhuOAh+ODvOKAleKAkO+8j++8vO+9nuKIpe+9nOKApuKApeKAmOKAmeKAnOKAne+8iO+8ieOAlOOAle+8u++8ve+9m++9neOAiFwiLDksXCLvvIvvvI3CscOXw7fvvJ3iiaDvvJzvvJ7iiabiiafiiJ7iiLTimYLimYDCsOKAsuKAs+KEg++/pe+8hO+/oO+/oe+8he+8g++8hu+8iu+8oMKn4piG4piF4peL4peP4peO4peHXCJdLFtcImEyYTFcIixcIuKXhuKWoeKWoOKWs+KWsuKWveKWvOKAu+OAkuKGkuKGkOKGkeKGk+OAk1wiXSxbXCJhMmJhXCIsXCLiiIjiiIviiobiiofiioLiioPiiKriiKlcIl0sW1wiYTJjYVwiLFwi4oin4oio77+i4oeS4oeU4oiA4oiDXCJdLFtcImEyZGNcIixcIuKIoOKKpeKMkuKIguKIh+KJoeKJkuKJquKJq+KImuKIveKIneKIteKIq+KIrFwiXSxbXCJhMmYyXCIsXCLihKvigLDima/ima3imarigKDigKHCtlwiXSxbXCJhMmZlXCIsXCLil69cIl0sW1wiYTNiMFwiLFwi77yQXCIsOV0sW1wiYTNjMVwiLFwi77yhXCIsMjVdLFtcImEzZTFcIixcIu+9gVwiLDI1XSxbXCJhNGExXCIsXCLjgYFcIiw4Ml0sW1wiYTVhMVwiLFwi44KhXCIsODVdLFtcImE2YTFcIixcIs6RXCIsMTYsXCLOo1wiLDZdLFtcImE2YzFcIixcIs6xXCIsMTYsXCLPg1wiLDZdLFtcImE3YTFcIixcItCQXCIsNSxcItCB0JZcIiwyNV0sW1wiYTdkMVwiLFwi0LBcIiw1LFwi0ZHQtlwiLDI1XSxbXCJhOGExXCIsXCLilIDilILilIzilJDilJjilJTilJzilKzilKTilLTilLzilIHilIPilI/ilJPilJvilJfilKPilLPilKvilLvilYvilKDilK/ilKjilLfilL/ilJ3ilLDilKXilLjilYJcIl0sW1wiYWRhMVwiLFwi4pGgXCIsMTksXCLihaBcIiw5XSxbXCJhZGMwXCIsXCLjjYnjjJTjjKLjjY3jjJjjjKfjjIPjjLbjjZHjjZfjjI3jjKbjjKPjjKvjjYrjjLvjjpzjjp3jjp7jjo7jjo/jj4TjjqFcIl0sW1wiYWRkZlwiLFwi442744Cd44Cf4oSW44+N4oSh44qkXCIsNCxcIuOIseOIsuOIueONvuONveONvOKJkuKJoeKIq+KIruKIkeKImuKKpeKIoOKIn+KKv+KIteKIqeKIqlwiXSxbXCJiMGExXCIsXCLkupzllJblqIPpmL/lk4DmhJvmjKjlp7bpgKLokbXojJznqZDmgqrmj6HmuKXml63okaboiqbpr7XmopPlnKfmlqHmibHlrpvlp5Dombvpo7TntaLntr7pro7miJbnsp/oorflronlurXmjInmmpfmoYjpl4fpno3mnY/ku6XkvIrkvY3kvp3lgYnlm7LlpLflp5TlqIHlsInmg5/mhI/mhbDmmJPmpIXngrrnlY/nlbDnp7vntq3nt6/og4PokI7ooaPorILpgZXpgbrljLvkupXkuqXln5/ogrLpg4Hno6/kuIDlo7HmuqLpgLjnqLLojKjoiovpsK/lhYHljbDlkr3lk6Hlm6Dlp7vlvJXpo7Lmt6vog6TolK1cIl0sW1wiYjFhMVwiLFwi6Zmi6Zmw6Zqg6Z+75ZCL5Y+z5a6H54OP57696L+C6Zuo5Y2v6bWc56q65LiR56KT6Ie85rim5ZiY5ZSE5qyd6JSa6bC75ael5Y6p5rWm55Oc6ZaP5ZmC5LqR6YGL6Zuy6I2P6aSM5Y+h5Za25ayw5b2x5pig5puz5qCE5rC45rOz5rSp55Gb55uI56mO6aC06Iux6KGb6Kmg6Yut5ray55ar55uK6aeF5oKm6KyB6LaK6Zay5qaO5Y6t5YaG5ZyS5aCw5aWE5a605bu25oCo5o6p5o+05rK/5ryU54KO54SU54WZ54eV54y/57iB6Im26IuR6JaX6YGg6Ymb6bSb5aGp5pa85rGa55Sl5Ye55aSu5aWl5b6A5b+cXCJdLFtcImIyYTFcIixcIuaKvOaXuuaoquasp+autOeOi+e/geillum0rOm0jum7hOWyoeayluiNu+WEhOWxi+aGtuiHhuahtueJoeS5meS/uuWNuOaBqea4qeepj+mfs+S4i+WMluS7ruS9leS8veS+oeS9s+WKoOWPr+WYieWkj+WrgeWutuWvoeenkeaah+aenOaetuatjOays+eBq+ePguemjeemvueovOeuh+iKseiLm+iMhOiNt+iPr+iPk+idpuiqsuWYqeiyqOi/pumBjumcnuiaiuS/hOWzqOaIkeeJmeeUu+iHpeiKveibvuizgOmbhemkk+mnleS7i+S8muino+WbnuWhiuWjiuW7u+W/q+aAquaClOaBouaHkOaIkuaLkOaUuVwiXSxbXCJiM2ExXCIsXCLprYHmmabmorDmtbfngbDnlYznmobntbXoiqXon7nplovpmo7osp3lh7Hlir7lpJblkrPlrrPltJbmhajmpoLmtq/noo3ok4vooZfoqbLpjqfpqrjmtazppqjom5nlnqPmn7/om47piI7lioPlmoflkITlu5Pmi6HmkrnmoLzmoLjmrrvnjbLnorrnqavopprop5LotavovIPpg63plqPpmpTpnanlrablsrPmpb3poY3poY7mjpvnrKDmqKvmqb/morbpsI3mvZ/libLllp3mgbDmi6zmtLvmuIfmu5HokZvopJDovYTkuJTpsLnlj7bmpJvmqLrpnoTmoKrlhZznq4PokrLph5zpjozlmZvptKjmoKLojIXokLFcIl0sW1wiYjRhMVwiLFwi57Kl5YiI6IuF55Om5Lm+5L6D5Yag5a+S5YiK5YuY5Yun5be75Zaa5aCq5aem5a6M5a6Y5a+b5bmy5bm55oKj5oSf5oWj5oa+5o+b5pWi5p+R5qGT5qO65qy+5q2T5rGX5ryi5r6X5r2F55Kw55SY55uj55yL56u/566h57Ch57ep57y257+w6IKd6Imm6I6e6Kaz6KuM6LKr6YKE6ZGR6ZaT6ZaR6Zai6Zml6Z+T6aSo6IiY5Li45ZCr5bK45beM546p55mM55y85bKp57+r6LSL6ZuB6aCR6aGU6aGY5LyB5LyO5Y2x5Zac5Zmo5Z+65aWH5ayJ5a+E5bKQ5biM5bm+5b+M5o+u5py65peX5pei5pyf5qOL5qOEXCJdLFtcImI1YTFcIixcIuapn+W4sOavheawl+axveeVv+eliOWto+eogOe0gOW+veimj+iomOiytOi1t+i7jOi8nemjoumojumsvOS6gOWBveWEgOWmk+WunOaIr+aKgOaTrOasuueKoOeWkeelh+e+qeifu+iqvOitsOaOrOiPiumeoOWQieWQg+WWq+ahlOapmOipsOegp+adtem7jeWNtOWuouiEmuiZkOmAhuS4mOS5heS7h+S8keWPiuWQuOWuruW8k+aApeaVkeacveaxguaxsuazo+eBuOeQg+eptueqruesiOe0muezvue1puaXp+eJm+WOu+WxheW3qOaLkuaLoOaMmea4oOiZmuiosei3nemLuOa8geempumtmuS6qOS6q+S6rFwiXSxbXCJiNmExXCIsXCLkvpvkvqDlg5HlhYfnq7blhbHlh7bljZTljKHljb/lj6vllqzlooPls6HlvLflvYrmgK/mgZDmga3mjJ/mlZnmqYvms4Hni4Lni63nn6/og7johIXoiIjolY7pg7fpj6Hpn7/ppZfpqZrku7Dlh53lsK3mmoHmpa3lsYDmm7LmpbXnjonmoZDnsoHlg4Xli6TlnYflt77pjKbmlqTmrKPmrL3nkLTnpoHnpr3nrYvnt4roirnoj4zoob/opZ/orLnov5Hph5HlkJ/pioDkuZ3lgLblj6XljLrni5fnjpbnn6noi6bouq/pp4bpp4jpp5LlhbfmhJromZ7llrDnqbrlgbblr5PpgYfpmoXkuLLmq5vph6flsZHlsYhcIl0sW1wiYjdhMVwiLFwi5o6Y56qf5rKT6Z206L2h56qq54aK6ZqI57KC5qCX57mw5qGR6Y2s5Yuy5ZCb6Jar6KiT576k6LuN6YOh5Y2m6KKI56WB5L+C5YK+5YiR5YWE5ZWT5Zyt54+q5Z6L5aWR5b2i5b6E5oG15oW25oWn5oap5o6y5pC65pWs5pmv5qGC5riT55Wm56i957O757WM57aZ57mL572r6IyO6I2K6JuN6KiI6Kmj6K2m6Lu96aCa6baP6Iq46L+O6a+o5YqH5oif5pKD5r+A6ZqZ5qGB5YKR5qyg5rG65r2U56m057WQ6KGA6Kij5pyI5Lu25YC55YCm5YGl5YW85Yi45Ymj5Zan5ZyP5aCF5auM5bu65oay5oe45ouz5o2yXCJdLFtcImI4YTFcIixcIuaknOaoqeeJveeKrOeMrueglOehr+e1ueecjOiCqeimi+ismeizoui7kumBo+mNtemZuumhlemok+m5uOWFg+WOn+WOs+W5u+W8pua4m+a6kOeOhOePvue1g+iIt+iogOiruumZkOS5juWAi+WPpOWRvOWbuuWnkeWtpOW3seW6q+W8p+aIuOaVheaer+a5lueLkOeziuiitOiCoeiDoeiPsOiZjuiqh+i3qOmIt+mbh+mhp+m8k+S6lOS6kuS8jeWNiOWRieWQvuWor+W+jOW+oeaCn+aip+aqjueRmueigeiqnuiqpOitt+mGkOS5numvieS6pOS9vOS+r+WAmeWAluWFieWFrOWKn+WKueWLvuWOmuWPo+WQkVwiXSxbXCJiOWExXCIsXCLlkI7llonlnZHlnqLlpb3lrZTlrZ3lro/lt6Xlt6flt7flubjluoPluprlurflvJjmgZLmhYzmipfmi5jmjqfmlLvmmILmmYPmm7Tmna3moKHmopfmp4vmsZ/mtKrmtanmuK/mup3nlLLnmofnoaznqL/ns6DntIXntJjntZ7ntrHogJXogIPogq/ogrHohZToho/oiKrojZLooYzooaHorJvosqLos7zpg4rphbXpibHnoL/pi7zplqTpmY3poIXpppnpq5jptLvliZvliqvlj7flkIjlo5Xmi7fmv6DosarovZ/purnlhYvliLvlkYrlm73nqYDphbfptaDpu5LnjYTmvInohbDnlJHlv73mg5rpqqjni5vovrxcIl0sW1wiYmFhMVwiLFwi5q2k6aCD5LuK5Zuw5Z2k5aK+5ama5oGo5oeH5piP5piG5qC55qKx5re355eV57S66Imu6a2C5Lqb5L2Q5Y+J5ZSG5bWv5bem5beu5p+75rKZ55Gz56CC6KmQ6Y6W6KOf5Z2Q5bqn5oyr5YK15YKs5YaN5pyA5ZOJ5aGe5aa75a6w5b2p5omN5o6h5qC95q2z5riI54G96YeH54qA56CV56Cm56Wt5paO57Sw6I+c6KOB6LyJ6Zqb5Ymk5Zyo5p2Q572q6LKh5Ya05Z2C6Ziq5aC65qaK6IK05ZKy5bSO5Z+856KV6be65L2c5YmK5ZKL5pC+5pio5pyU5p+156qE562W57Si6Yyv5qGc6a6t56y55YyZ5YaK5Yi3XCJdLFtcImJiYTFcIixcIuWvn+aLtuaSruaTpuacreauuuiWqembkeeakOmvluaNjOmMhumuq+eav+aZkuS4ieWCmOWPguWxseaDqOaSkuaVo+ahn+eHpuePiueUo+eul+e6guialeiug+izm+mFuOmkkOaWrOaaq+aui+S7leS7lOS8uuS9v+WIuuWPuOWPsuWXo+Wbm+Wjq+Wni+WnieWnv+WtkOWxjeW4guW4q+W/l+aAneaMh+aUr+WtnOaWr+aWveaXqOaeneatouatu+awj+eNheelieengeezuOe0mee0q+iCouiEguiHs+imluipnuipqeippuiqjOirruizh+iznOmbjOmjvOatr+S6i+S8vOS+jeWFkOWtl+WvuuaFiOaMgeaZglwiXSxbXCJiY2ExXCIsXCLmrKHmu4vmsrvniL7nkr3nl5Tno4HnpLrogIzogLPoh6rokpTovp7msZDpub/lvI/orZjptKvnq7rou7jlro3pm6vkuIPlj7Hln7flpLHlq4nlrqTmgonmub/mvIbnlr7os6rlrp/olIDnr6DlgbLmn7Toip3lsaHolYrnuJ7oiI7lhpnlsITmjajotabmlpznha7npL7ntJfogIXorJ3ou4rpga7om4fpgqrlgJ/li7rlsLrmnZPngbzniLXphYzph4jpjKvoi6Xlr4LlvLHmg7nkuLvlj5blrojmiYvmnLHmrorni6nnj6DnqK7ohavotqPphZLpppblhJLlj5flkarlr7/mjojmqLnntqzpnIDlm5rlj47lkahcIl0sW1wiYmRhMVwiLFwi5a6X5bCx5bee5L+u5oSB5ou+5rSy56eA56eL57WC57mN57+S6Iet6Iif6JKQ6KGG6KWy6K6Q6Lm06Lyv6YCx6YWL6YWs6ZuG6Yac5LuA5L2P5YWF5Y2B5b6T5oiO5p+U5rGB5riL542j57im6YeN6YqD5Y+U5aSZ5a6/5reR56Wd57iu57Kb5aG+54af5Ye66KGT6L+w5L+K5bO75pil556s56uj6Iic6ae/5YeG5b6q5pes5qWv5q6J5rez5rqW5r2k55u+57SU5beh6YG16YaH6aCG5Yem5Yid5omA5pqR5puZ5ria5bq257eS572y5pu46Jav6Je36Ku45Yqp5Y+Z5aWz5bqP5b6Q5oGV6Yuk6Zmk5YK35YSfXCJdLFtcImJlYTFcIixcIuWLneWMoOWNh+WPrOWTqOWVhuWUseWYl+WlqOWmvuWovOWuteWwhuWwj+WwkeWwmuW6hOW6iuW7oOW9sOaJv+aKhOaLm+aOjOaNt+aYh+aYjOaYreaZtuadvuaiouaon+aoteayvOa2iOa4iea5mOeEvOeEpueFp+eXh+ecgeehneekgeelpeensOeroOeskeeyp+e0ueiCluiPluiSi+iVieihneijs+ion+iovOiplOips+ixoeiznumGpOmJpumNvumQmOmanOmemOS4iuS4iOS4nuS5l+WGl+WJsOWfjuWgtOWjjOWsouW4uOaDheaTvuadoeadlua1hOeKtueVs+epo+iSuOitsumGuOmMoOWYseWftOmjvlwiXSxbXCJiZmExXCIsXCLmi63mpI3mrpbnh63nuZTogbfoibLop6bpo5/onZXovrHlsLvkvLjkv6HkvrXllIflqKDlr53lr6nlv4PmhY7mjK/mlrDmmYvmo67mppvmtbjmt7HnlLPnlrnnnJ/npZ7np6bntLPoh6Poiq/olqropqroqLrouqvovpvpgLLph53pnIfkurrku4HliIPlobXlo6zlsIvnlJrlsL3ohY7oqIrov4XpmaPpna3nrKXoq4/poIjphaLlm7PljqjpgJflkLnlnoLluKXmjqjmsLTngornnaHnsovnv6DoobDpgYLphZTpjJDpjJjpmo/nkZ7pq4TltIfltanmlbDmnqLotqjpm5vmja7mnYnmpJnoj4XpoJfpm4Doo75cIl0sW1wiYzBhMVwiLFwi5r6E5pG65a+45LiW54Cs55Wd5piv5YeE5Yi25Yui5aeT5b6B5oCn5oiQ5pS/5pW05pif5pm05qOy5qCW5q2j5riF54my55Sf55ub57K+6IGW5aOw6KO96KW/6Kqg6KqT6KuL6YCd6YaS6Z2S6Z2Z5paJ56iO6ISG6Zq75bit5oOc5oia5pal5piU5p6Q55+z56mN57GN57i+6ISK6LKs6LWk6Leh6Lmf56Kp5YiH5ouZ5o6l5pGC5oqY6Kit56qD56+A6Kqs6Zuq57W26IiM6J2J5LuZ5YWI5Y2D5Y2g5a6j5bCC5bCW5bed5oim5omH5pKw5qCT5qC05rOJ5rWF5rSX5p+T5r2c54WO54W95peL56m/566t57eaXCJdLFtcImMxYTFcIixcIue5iue+qOiFuuiIm+iIueiWpuipruizjui3temBuOmBt+mKremKkemWg+muruWJjeWWhOa8uOeEtuWFqOemhee5leiGs+ezjuWZjOWhkeWyqOaOquabvuabvealmueLmeeWj+eWjuekjuelluenn+eyl+e0oOe1hOiYh+iotOmYu+mBoem8oOWDp+WJteWPjOWPouWAieWWquWjruWlj+eIveWui+WxpOWMneaDo+aDs+aNnOaOg+aMv+aOu+aTjeaXqeabueW3o+anjeanvea8leeHpeS6ieeXqeebuOeqk+ezn+e3j+e2nOiBoeiNieiNmOiRrOiSvOiXu+ijhei1sOmAgemBremOl+mcnOmokuWDj+Wil+aGjlwiXSxbXCJjMmExXCIsXCLoh5PolLXotIjpgKDkv4PlgbTliYfljbPmga/mjYnmnZ/muKzotrPpgJ/kv5flsZ7os4rml4/ntprljZLoopblhbbmj4PlrZjlravlsIrmkI3mnZHpgZzku5blpJrlpKrmsbDoqZHllL7loJXlpqXmg7DmiZPmn4HoiLXmpZXpmYDpp4TpqKjkvZPloIblr77ogJDlsrHluK/lvoXmgKDmhYvmiLTmm7/ms7Dmu57og47ohb/oi5TooovosrjpgIDpgK7pmorpu5vpr5vku6Plj7DlpKfnrKzpho3poYzpt7nmu53ngKfljZPllYTlroXmiZjmip7mi5PmsqLmv6/nkKLoqJfpkLjmv4Hoq77ojLjlh6fom7jlj6pcIl0sW1wiYzNhMVwiLFwi5Y+p5L2G6YGU6L6w5aWq6ISx5be956uq6L6/5qOa6LC354u46bGI5qi96Kqw5Li55Y2Y5ZiG5Z2m5ouF5o6i5pem5q2O5reh5rmb54Kt55+t56uv566q57a76IC96IOG6JuL6KqV6Y2b5Zuj5aOH5by+5pat5pqW5qqA5q6155S36KuH5YCk55+l5Zyw5byb5oGl5pm65rGg55e056ia572u6Ie06JyY6YGF6aaz56+J55Wc56u5562R6JOE6YCQ56ep56qS6Iy25auh552A5Lit5Luy5a6Z5b+g5oq95pi85p+x5rOo6Jmr6KG36Ki76YWO6Yuz6aeQ5qiX54Cm54yq6Iun6JGX6LKv5LiB5YWG5YeL5ZaL5a+1XCJdLFtcImM0YTFcIixcIuW4luW4s+W6geW8lOW8teW9q+W+tOaHsuaMkeaaouacnea9rueJkueUuuecuuiBtOiEueiFuOidtuiqv+irnOi2hei3s+mKmumVt+mggumzpeWLheaNl+ebtOacleayiOePjeizg+mOrumZs+a0peWinOakjuanjOi/vemOmueXm+mAmuWhmuagguaOtOanu+S9g+a8rOafmOi+u+iUpue2tOmNlOakv+a9sOWdquWjt+WsrOe0rOeIquWQiumHo+m2tOS6reS9juWBnOWBteWJg+iynuWRiOWgpOWumuW4neW6leW6reW7t+W8n+aCjOaKteaMuuaPkOair+axgOeih+emjueoi+e3oOiJh+ioguirpui5hOmAk1wiXSxbXCJjNWExXCIsXCLpgrjphK3ph5jpvI7ms6XmkZjmk6LmlbXmu7TnmoTnrJvpganpj5Hmurrlk7LlvrnmkqTovY3ov63piYTlhbjloavlpKnlsZXlupfmt7vnuo/nlJzosrzou6LpoZvngrnkvJ3mrr/mvrHnlLDpm7vlhY7lkJDloLXloZflpqzlsaDlvpLmlpfmnZzmuKHnmbvoj5/os63pgJTpg73pjY3noKXnoLrliqrluqblnJ/lpbTmgJLlgJLlhZrlhqzlh43liIDllJDloZTloZjlpZflrpXls7bltovmgrzmipXmkK3mnbHmoYPmorzmo5/nm5fmt5jmua/mtpvnga/nh4jlvZPnl5jnpbfnrYnnrZTnrZLns5bntbHliLBcIl0sW1wiYzZhMVwiLFwi6JGj6JWp6Jek6KiO6KyE6LGG6LiP6YCD6YCP6ZCZ6Zm26aCt6aiw6ZeY5YON5YuV5ZCM5aCC5bCO5oan5pKe5rSe556z56ul6IO06JCE6YGT6YqF5bOg6bSH5Yy/5b6X5b6z5rac54m5552j56a/56+k5q+S54us6Kqt5qCD5qmh5Ye456qB5qS05bGK6bO26Iur5a+F6YWJ54Ce5Zm45bGv5oOH5pWm5rKM6LGa6YGB6aCT5ZGR5puH6YiN5aWI6YKj5YaF5LmN5Yeq6JaZ6KyO54GY5o266Y2L5qWi6aa057iE55W35Y2X5qWg6Luf6Zuj5rGd5LqM5bC85byQ6L+p5YyC6LOR6IKJ6Jm55bu/5pel5Lmz5YWlXCJdLFtcImM3YTFcIixcIuWmguWwv+mfruS7u+WmiuW/jeiqjea/oeemsOelouWvp+iRseeMq+eGseW5tOW/teaNu+aSmueHg+eymOS5g+W7vOS5i+WfnOWaouaCqea/g+e0jeiDveiEs+iGv+i+suiml+iapOW3tOaKiuaSreimh+adt+azoua0vueQtuegtOWphue9teiKremmrOS/s+W7g+aLneaOkuaVl+adr+ebg+eJjOiDjOiCuui8qemFjeWAjeWfueWqkuaiheals+eFpOeLveiyt+WjsuizoOmZqumAmeidv+enpOefp+iQqeS8r+WJpeWNmuaLjeafj+aziueZveeulOeyleiItuiWhOi/q+abnea8oOeIhue4m+iOq+mngem6plwiXSxbXCJjOGExXCIsXCLlh73nrrHnobLnrrjogofnrYjmq6jluaHogoznlZHnlaDlhavpiaLmuoznmbrphpfpq6rkvJDnvbDmipznrY/plqXps6nlmbrloZnom6TpmrzkvLTliKTljYrlj43lj5vluIbmkKzmlpHmnb/msL7msY7niYjniq/nj63nlZTnuYHoiKzol6nosqnnr4Tph4bnhanpoJLpo6/mjL3mmannlarnm6Tno5DolYPom67ljKrljZHlkKblpoPluoflvbzmgrLmiYnmibnmiqvmlpDmr5Tms4znlrLnmq7nopHnp5jnt4vnvbfogqXooqvoqrnosrvpgb/pnZ7po5vmqIvnsLjlgpnlsL7lvq7mnofmr5jnkLXnnInnvo5cIl0sW1wiYzlhMVwiLFwi6by75p+K56iX5Yy555aL6aut5b2m6Iad6I+x6IKY5by85b+F55Wi562G6YC85qGn5aer5aqb57SQ55m+6Kys5L+15b2q5qiZ5rC35ryC55Oi56Wo6KGo6KmV6LG55buf5o+P55eF56eS6IuX6Yyo6Yuy6JKc6Jut6bCt5ZOB5b2s5paM5rWc54CV6LKn6LOT6aC75pWP55O25LiN5LuY5Z+g5aSr5amm5a+M5Yao5biD5bqc5oCW5om25pW35pan5pmu5rWu54i256ym6IWQ6Iaa6IqZ6K2c6LKg6LOm6LW06Zic6ZmE5L6u5pKr5q2m6Iie6JGh6JWq6YOo5bCB5qWT6aKo6JG66JWX5LyP5Ymv5b6p5bmF5pyNXCJdLFtcImNhYTFcIixcIuemj+iFueikh+imhua3teW8l+aJleayuOS7j+eJqemukuWIhuWQu+WZtOWis+aGpOaJrueEmuWlrueyieeznue0m+mbsOaWh+iBnuS4meS9teWFteWhgOW5o+W5s+W8iuafhOS4puiUvemWiemZm+exs+mggeWDu+WjgeeZlueip+WIpeeepeiUkeeuhuWBj+WkieeJh+evh+e3qOi+uui/lOmBjeS+v+WLieWoqeW8gemereS/neiIl+mLquWcg+aNleatqeeUq+ijnOi8lOepguWLn+Wik+aFleaIiuaaruavjeewv+iPqeWAo+S/uOWMheWRhuWgseWlieWuneWzsOWzr+W0qeW6luaKseaNp+aUvuaWueaci1wiXSxbXCJjYmExXCIsXCLms5Xms6Hng7nnoLLnuKvog57oirPokIzok6zonILopJLoqKrosYrpgqbpi5Lpo73ps7PptazkuY/kuqHlgo3liZblnYrlpqjluL3lv5jlv5nmiL/mmrTmnJvmn5Dmo5LlhpLntKHogqrohqjorIDosozosr/pib7pmLLlkKDpoKzljJflg5XljZzloqjmkrLmnLTniafnnabnqYbph6bli4PmsqHmrobloIDluYzlpZTmnKznv7vlh6Hnm4bmkanno6jprZTpurvln4vlprnmmKfmnprmr47lk6nmp5nluZXohpzmnpXprqrmn77psZLmoZ3kuqbkv6Plj4jmirnmnKvmsqvov4Tkvq3nua3pur/kuIfmhaLmuoBcIl0sW1wiY2NhMVwiLFwi5ryr6JST5ZGz5pyq6a2F5bez566V5bKs5a+G6Jyc5rmK6JOR56iU6ISI5aaZ57KN5rCR55yg5YuZ5aSi54Sh54mf55+b6Zyn6bWh5qSL5am/5aiY5Yal5ZCN5ZG95piO55uf6L+36YqY6bO05aeq54md5ruF5YWN5qOJ57a/57es6Z2i6bq65pG45qih6IyC5aaE5a2f5q+b54yb55uy57ay6ICX6JKZ5YSy5pyo6buZ55uu5p2i5Yu/6aSF5bCk5oi757G+6LKw5ZWP5oK257SL6ZaA5YyB5Lmf5Ya25aSc54i66IC26YeO5byl55+i5Y6E5b2557SE6Jas6Kiz6LqN6Z2W5p+z6Jau6ZGT5oSJ5oSI5rK555mSXCJdLFtcImNkYTFcIixcIuirrei8uOWUr+S9keWEquWLh+WPi+WupeW5veaCoOaGguaPluacieafmua5p+a2jOeMtueMt+eUseelkOijleiqmOmBiumCkemDtembhOiejeWkleS6iOS9meS4juiqiei8v+mgkOWCreW5vOWmluWuueW6uOaPmuaPuuaTgeabnOaliuanmOa0i+a6tueGlOeUqOeqr+e+iuiAgOiRieiTieimgeisoei4iumBpemZvemkiuaFvuaKkeassuayg+a1tOe/jOe/vOa3gOe+heieuuijuOadpeiOsemgvOmbt+a0m+e1oeiQvemFquS5seWNteW1kOashOa/q+iXjeiYreimp+WIqeWQj+WxpeadjuaiqOeQhueSg1wiXSxbXCJjZWExXCIsXCLnl6Loo4/oo6Hph4zpm6Lpmbjlvovnjofnq4vokY7mjqDnlaXlionmtYHmupznkInnlZnnoavnspLpmobnq5zpvo3kvrbmha7ml4XomZzkuobkuq7lg5rkuKHlh4zlr67mlpnmooHmtrznjJ/nmYLnnq3nqJzns6foia/oq5Lpgbzph4/pmbXpoJjlipvnt5HlgKvljpjmnpfmt4vnh5DnkLPoh6jovKrpmqPpsZfpup/nkaDloYHmtpnntK/poZ7ku6TkvLbkvovlhrflirHltrrmgJznjrLnpLzoi5PpiLTpmrfpm7bpnIrpupfpvaLmmqbmrbTliJfliqPng4joo4Llu4nmgYvmhpDmvKPnhYnnsL7nt7Toga9cIl0sW1wiY2ZhMVwiLFwi6JOu6YCj6Yys5ZGC6a2v5quT54KJ6LOC6Lev6Zyy5Yq05amB5buK5byE5pyX5qW85qaU5rWq5ryP54mi54u856+t6ICB6IG+6J2L6YOO5YWt6bqT56aE6IKL6Yyy6KuW5YCt5ZKM6Kmx5q2q6LOE6ISH5oOR5p6g6bey5LqZ5LqY6bCQ6Kmr6JeB6JWo5qSA5rm+56KX6IWVXCJdLFtcImQwYTFcIixcIuW8jOS4kOS4leS4quS4seS4tuS4vOS4v+S5guS5luS5mOS6guS6heixq+S6iuiIkuW8jeS6juS6nuS6n+S6oOS6ouS6sOS6s+S6tuS7juS7jeS7hOS7huS7guS7l+S7nuS7reS7n+S7t+S8ieS9muS8sOS9m+S9neS9l+S9h+S9tuS+iOS+j+S+mOS9u+S9qeS9sOS+keS9r+S+huS+luWEmOS/lOS/n+S/juS/mOS/m+S/keS/muS/kOS/pOS/peWAmuWAqOWAlOWAquWApeWAheS8nOS/tuWAoeWAqeWArOS/vuS/r+WAkeWAhuWBg+WBh+acg+WBleWBkOWBiOWBmuWBluWBrOWBuOWCgOWCmuWCheWCtOWCslwiXSxbXCJkMWExXCIsXCLlg4nlg4rlgrPlg4Llg5blg57lg6Xlg63lg6Plg67lg7nlg7XlhInlhIHlhILlhJblhJXlhJTlhJrlhKHlhLrlhLflhLzlhLvlhL/lhYDlhZLlhYzlhZTlhaLnq7jlhanlharlha7lhoDlhoLlm5jlhozlhonlho/lhpHlhpPlhpXlhpblhqTlhqblhqLlhqnlhqrlhqvlhrPlhrHlhrLlhrDlhrXlhr3lh4Xlh4nlh5vlh6DomZXlh6nlh63lh7Dlh7Xlh77liITliIvliJTliI7liKfliKrliK7liLPliLnliY/liYTliYvliYzliZ7liZTliarlibTlianlibPlib/lib3lio3lipTlipLlibHliojlipHovqhcIl0sW1wiZDJhMVwiLFwi6L6n5Yqs5Yqt5Yq85Yq15YuB5YuN5YuX5Yue5Yuj5Yum6aOt5Yug5Yuz5Yu15Yu45Yu55YyG5YyI55S45YyN5YyQ5YyP5YyV5Yya5Yyj5Yyv5Yyx5Yyz5Yy45Y2A5Y2G5Y2F5LiX5Y2J5Y2N5YeW5Y2e5Y2p5Y2u5aSY5Y275Y235Y6C5Y6W5Y6g5Y6m5Y6l5Y6u5Y6w5Y625Y+D57CS6ZuZ5Y+f5pu854eu5Y+u5Y+o5Y+t5Y+65ZCB5ZC95ZGA5ZCs5ZCt5ZC85ZCu5ZC25ZCp5ZCd5ZGO5ZKP5ZG15ZKO5ZGf5ZGx5ZG35ZGw5ZKS5ZG75ZKA5ZG25ZKE5ZKQ5ZKG5ZOH5ZKi5ZK45ZKl5ZKs5ZOE5ZOI5ZKoXCJdLFtcImQzYTFcIixcIuWSq+WTguWSpOWSvuWSvOWTmOWTpeWTpuWUj+WUlOWTveWTruWTreWTuuWTouWUueWVgOWVo+WVjOWUruWVnOWVheWVluWVl+WUuOWUs+WVneWWmeWWgOWSr+WWiuWWn+WVu+WVvuWWmOWWnuWWruWVvOWWg+WWqeWWh+WWqOWXmuWXheWXn+WXhOWXnOWXpOWXlOWYlOWXt+WYluWXvuWXveWYm+WXueWZjuWZkOeHn+WYtOWYtuWYsuWYuOWZq+WZpOWYr+WZrOWZquWahuWagOWaiuWaoOWalOWaj+WapeWaruWatuWatOWbguWavOWbgeWbg+WbgOWbiOWbjuWbkeWbk+Wbl+WbruWbueWcgOWbv+WchOWciVwiXSxbXCJkNGExXCIsXCLlnIjlnIvlnI3lnJPlnJjlnJbll4flnJzlnKblnLflnLjlnY7lnLvlnYDlnY/lnanln4DlnojlnaHlnb/lnonlnpPlnqDlnrPlnqTlnqrlnrDln4Pln4bln5Tln5Lln5PloIrln5bln6PloIvloJnloJ3lobLloKHloaLloYvlobDmr4DloZLloL3lobnlooXlornlop/loqvlorrlo57lorvlorjloq7lo4Xlo5Plo5Hlo5flo5nlo5jlo6Xlo5zlo6Tlo5/lo6/lo7rlo7nlo7vlo7zlo73lpILlpIrlpJDlpJvmoqblpKXlpKzlpK3lpLLlpLjlpL7nq5LlpZXlpZDlpY7lpZrlpZjlpaLlpaDlpaflpazlpalcIl0sW1wiZDVhMVwiLFwi5aW45aaB5aad5L2e5L6r5aaj5aay5aeG5aeo5aec5aaN5aeZ5aea5ail5aif5aiR5aic5aiJ5aia5amA5ams5amJ5ai15ai25ami5amq5aqa5aq85aq+5auL5auC5aq95auj5auX5aum5aup5auW5au65au75ayM5ayL5ayW5ayy5auQ5ayq5ay25ay+5a2D5a2F5a2A5a2R5a2V5a2a5a2b5a2l5a2p5a2w5a2z5a215a245paI5a265a6A5a6D5a6m5a645a+D5a+H5a+J5a+U5a+Q5a+k5a+m5a+i5a+e5a+l5a+r5a+w5a+25a+z5bCF5bCH5bCI5bCN5bCT5bCg5bCi5bCo5bC45bC55bGB5bGG5bGO5bGTXCJdLFtcImQ2YTFcIixcIuWxkOWxj+WtseWxrOWxruS5ouWxtuWxueWyjOWykeWylOWmm+Wyq+Wyu+WytuWyvOWyt+WzheWyvuWzh+WzmeWzqeWzveWzuuWzreW2jOWzquW0i+W0leW0l+W1nOW0n+W0m+W0keW0lOW0ouW0muW0meW0mOW1jOW1kuW1juW1i+W1rOW1s+W1tuW2h+W2hOW2guW2ouW2neW2rOW2ruW2veW2kOW2t+W2vOW3ieW3jeW3k+W3kuW3luW3m+W3q+W3suW3teW4i+W4muW4meW4keW4m+W4tuW4t+W5hOW5g+W5gOW5juW5l+W5lOW5n+W5ouW5pOW5h+W5teW5tuW5uum6vOW5v+W6oOW7geW7guW7iOW7kOW7j1wiXSxbXCJkN2ExXCIsXCLlu5blu6Plu53lu5rlu5vlu6Llu6Hlu6jlu6nlu6zlu7Hlu7Plu7Dlu7Tlu7jlu77lvIPlvInlvZ3lvZzlvIvlvJHlvJblvKnlvK3lvLjlvYHlvYjlvYzlvY7lvK/lvZHlvZblvZflvZnlvaHlva3lvbPlvbflvoPlvoLlvb/lvorlvojlvpHlvoflvp7lvpnlvpjlvqDlvqjlvq3lvrzlv5blv7vlv6Tlv7jlv7Hlv53mgrPlv7/mgKHmgaDmgJnmgJDmgKnmgI7mgLHmgJvmgJXmgKvmgKbmgI/mgLrmgZrmgYHmgarmgbfmgZ/mgYrmgYbmgY3mgaPmgYPmgaTmgYLmgazmgavmgZnmgoHmgo3mg6fmgoPmgppcIl0sW1wiZDhhMVwiLFwi5oKE5oKb5oKW5oKX5oKS5oKn5oKL5oOh5oK45oOg5oOT5oK05b+w5oK95oOG5oK15oOY5oWN5oSV5oSG5oO25oO35oSA5oO05oO65oSD5oSh5oO75oOx5oSN5oSO5oWH5oS+5oSo5oSn5oWK5oS/5oS85oSs5oS05oS95oWC5oWE5oWz5oW35oWY5oWZ5oWa5oWr5oW05oWv5oWl5oWx5oWf5oWd5oWT5oW15oaZ5oaW5oaH5oas5oaU5oaa5oaK5oaR5oar5oau5oeM5oeK5oeJ5oe35oeI5oeD5oeG5oa65oeL57255oeN5oem5oej5oe25oe65oe05oe/5oe95oe85oe+5oiA5oiI5oiJ5oiN5oiM5oiU5oibXCJdLFtcImQ5YTFcIixcIuaInuaIoeaIquaIruaIsOaIsuaIs+aJgeaJjuaJnuaJo+aJm+aJoOaJqOaJvOaKguaKieaJvuaKkuaKk+aKluaLlOaKg+aKlOaLl+aLkeaKu+aLj+aLv+aLhuaTlOaLiOaLnOaLjOaLiuaLguaLh+aKm+aLieaMjOaLruaLseaMp+aMguaMiOaLr+aLteaNkOaMvuaNjeaQnOaNj+aOluaOjuaOgOaOq+aNtuaOo+aOj+aOieaOn+aOteaNq+aNqeaOvuaPqeaPgOaPhuaPo+aPieaPkuaPtuaPhOaQluaQtOaQhuaQk+aQpuaQtuaUneaQl+aQqOaQj+aRp+aRr+aRtuaRjuaUquaSleaSk+aSpeaSqeaSiOaSvFwiXSxbXCJkYWExXCIsXCLmk5rmk5Lmk4Xmk4fmkrvmk5jmk4Lmk7Hmk6foiInmk6Dmk6Hmiqzmk6Pmk6/mlKzmk7bmk7Tmk7Lmk7rmlIDmk73mlJjmlJzmlIXmlKTmlKPmlKvmlLTmlLXmlLfmlLbmlLjnlYvmlYjmlZbmlZXmlY3mlZjmlZ7mlZ3mlbLmlbjmloLmloPorormlpvmlp/mlqvmlrfml4Pml4bml4Hml4Tml4zml5Lml5vml5nml6Dml6Hml7HmnbLmmIrmmIPml7vmnbPmmLXmmLbmmLTmmJzmmY/mmYTmmYnmmYHmmZ7mmZ3mmaTmmafmmajmmZ/mmaLmmbDmmoPmmojmmo7mmonmmoTmmpjmmp3mm4Hmmrnmm4nmmr7mmrxcIl0sW1wiZGJhMVwiLFwi5puE5pq45puW5pua5pug5pi/5pum5pup5puw5pu15pu35pyP5pyW5pye5pym5pyn6Zy45pyu5py/5py25p2B5py45py35p2G5p2e5p2g5p2Z5p2j5p2k5p6J5p2w5p6p5p285p2q5p6M5p6L5p6m5p6h5p6F5p635p+v5p605p+s5p6z5p+p5p645p+k5p+e5p+d5p+i5p+u5p655p+O5p+G5p+n5qqc5qCe5qGG5qCp5qGA5qGN5qCy5qGO5qKz5qCr5qGZ5qGj5qG35qG/5qKf5qKP5qKt5qKU5qKd5qKb5qKD5qqu5qK55qG05qK15qKg5qK65qSP5qKN5qG+5qSB5qOK5qSI5qOY5qSi5qSm5qOh5qSM5qONXCJdLFtcImRjYTFcIixcIuajlOajp+ajleaktuakkuakhOajl+ajo+akpeajueajoOajr+akqOakquakmuako+akoeajhualuealt+alnOaluOalq+allOalvualruakuealtOakvealmeaksOaloealnualneamgealquamsuamruankOamv+angeank+amvuanjuWvqOaniuanneamu+ang+amp+aoruamkeamoOamnOamleamtOannuanqOaoguaom+anv+asiuanueansuanp+aoheamseaonuanreaolOanq+aoiuaokuargeaoo+aok+aphOaojOapsuaotuapuOaph+apouapmeappuapiOaouOaoouaqkOaqjeaqoOaqhOaqouaqo1wiXSxbXCJkZGExXCIsXCLmqpfomJfmqrvmq4Pmq4LmqrjmqrPmqqzmq57mq5Hmq5/mqqrmq5rmq6rmq7vmrIXomJbmq7rmrJLmrJbprLHmrJ/mrLjmrLfnm5zmrLnpo67mrYfmrYPmrYnmrZDmrZnmrZTmrZvmrZ/mraHmrbjmrbnmrb/mroDmroTmroPmro3mrpjmrpXmrp7mrqTmrqrmrqvmrq/mrrLmrrHmrrPmrrfmrrzmr4bmr4vmr5Pmr5/mr6zmr6vmr7Pmr6/pur7msIjmsJPmsJTmsJvmsKTmsKPmsZ7msZXmsaLmsarmsoLmso3msprmsoHmspvmsb7msajmsbPmspLmspDms4Tms7Hms5Pmsr3ms5fms4Xms53msq7msrHmsr5cIl0sW1wiZGVhMVwiLFwi5rK65rOb5rOv5rOZ5rOq5rSf6KGN5rS25rSr5rS95rS45rSZ5rS15rSz5rSS5rSM5rWj5raT5rWk5rWa5rW55rWZ5raO5raV5r+k5raF5re55riV5riK5ra15reH5rem5ra45reG5res5ree5reM5reo5reS5reF5re65reZ5rek5reV5req5reu5rit5rmu5riu5riZ5rmy5rmf5ri+5rij5rmr5rir5rm25rmN5rif5rmD5ri65rmO5rik5ru/5rid5ri45rqC5rqq5rqY5ruJ5rq35ruT5rq95rqv5ruE5rqy5ruU5ruV5rqP5rql5ruC5rqf5r2B5ryR54GM5rus5ru45ru+5ry/5ruy5ryx5ruv5ryy5ruMXCJdLFtcImRmYTFcIixcIua8vua8k+a7t+a+hua9uua9uOa+gea+gOa9r+a9m+a/s+a9rea+gua9vOa9mOa+jua+kea/gua9pua+s+a+o+a+oea+pOa+uea/hua+qua/n+a/lea/rOa/lOa/mOa/sea/rua/m+eAieeAi+a/uueAkeeAgeeAj+a/vueAm+eAmua9tOeAneeAmOeAn+eAsOeAvueAsueBkeeBo+eCmeeCkueCr+eDseeCrOeCuOeCs+eCrueDn+eDi+eDneeDmeeEieeDveeEnOeEmeeFpeeFleeGiOeFpueFoueFjOeFlueFrOeGj+eHu+eGhOeGleeGqOeGrOeHl+eGueeGvueHkueHieeHlOeHjueHoOeHrOeHp+eHteeHvFwiXSxbXCJlMGExXCIsXCLnh7nnh7/niI3niJDniJvniKjniK3niKzniLDniLLniLvniLzniL/niYDniYbniYvniZjnibTnib7nioLnioHniofnipLnipbniqLniqfnirnnirLni4Pni4bni4Tni47ni5Lni6Lni6Dni6Hni7nni7flgI/njJfnjIrnjJznjJbnjJ3njLTnjK/njKnnjKXnjL7njY7njY/pu5jnjZfnjarnjajnjbDnjbjnjbXnjbvnjbrnj4jnjrPnj47njrvnj4Dnj6Xnj67nj57nkqLnkIXnka/nkKXnj7jnkLLnkLrnkZXnkL/nkZ/nkZnnkYHnkZznkannkbDnkaPnkarnkbbnkb7nkovnkp7nkqfnk4rnk4/nk5Tnj7FcIl0sW1wiZTFhMVwiLFwi55Og55Oj55On55Op55Ou55Oy55Ow55Ox55O455O355SE55SD55SF55SM55SO55SN55SV55ST55Se55Sm55Ss55S855WE55WN55WK55WJ55Wb55WG55Wa55Wp55Wk55Wn55Wr55Wt55W455W255aG55aH55W055aK55aJ55aC55aU55aa55ad55al55aj55eC55az55eD55a155a955a455a855ax55eN55eK55eS55eZ55ej55ee55e+55e/55e855iB55ew55e655ey55ez55iL55iN55iJ55if55in55ig55ih55ii55ik55i055iw55i755mH55mI55mG55mc55mY55mh55mi55mo55mp55mq55mn55ms55mwXCJdLFtcImUyYTFcIixcIueZsueZtueZuOeZvOeagOeag+eaiOeai+eajuealueak+eameeamueasOeatOeauOeaueeauuebguebjeebluebkuebnueboeebpeebp+ebquiYr+ebu+eciOech+echOecqeecpOecnuecpeecpuecm+ect+ecuOedh+edmuedqOedq+edm+edpeedv+edvuedueeejueei+eekeeeoOeenueesOeetueeueeev+eevOeeveeeu+efh+efjeefl+efmuefnOefo+efruefvOegjOegkuekpuegoOekquehheeijuehtOeihuehvOeimueijOeio+eiteeiqueir+ejkeejhueji+ejlOeivueivOejheejiuejrFwiXSxbXCJlM2ExXCIsXCLno6fno5rno73no7TnpIfnpJLnpJHnpJnnpKznpKvnpYDnpaDnpZfnpZ/npZrnpZXnpZPnpbrnpb/npornpp3npqfpvYvnpqrnpq7nprPnprnnprrnp4nnp5Xnp6fnp6znp6Hnp6PnqIjnqI3nqJjnqJnnqKDnqJ/npoDnqLHnqLvnqL7nqLfnqYPnqZfnqYnnqaHnqaLnqanpvp3nqbDnqbnnqb3nqojnqpfnqpXnqpjnqpbnqqnnq4jnqrDnqrbnq4Xnq4Tnqr/pgoPnq4fnq4rnq43nq4/nq5Xnq5Pnq5nnq5rnq53nq6Hnq6Lnq6bnq63nq7DnrILnrI/nrIrnrIbnrLPnrJjnrJnnrJ7nrLXnrKjnrLbnrZBcIl0sW1wiZTRhMVwiLFwi562656yE562N56yL562M562F5621562l5620562n562w562x562s562u566d566Y566f566N566c566a566L566S566P562d566Z56+L56+B56+M56+P566056+G56+d56+p57CR57CU56+m56+l57Gg57CA57CH57CT56+z56+357CX57CN56+257Cj57Cn57Cq57Cf57C357Cr57C957GM57GD57GU57GP57GA57GQ57GY57Gf57Gk57GW57Gl57Gs57G157KD57KQ57Kk57Kt57Ki57Kr57Kh57Ko57Kz57Ky57Kx57Ku57K557K957OA57OF57OC57OY57OS57Oc57Oi6ay757Ov57Oy57O057O257O657SGXCJdLFtcImU1YTFcIixcIue0gue0nOe0lee0iue1hee1i+e0rue0sue0v+e0tee1hue1s+e1lue1jue1sue1qOe1rue1j+e1o+e2k+e2iee1m+e2j+e1vee2m+e2uue2rue2o+e2tee3h+e2vee2q+e4vee2oue2r+e3nOe2uOe2n+e2sOe3mOe3nee3pOe3nue3u+e3sue3oee4hee4iue4o+e4oee4kue4see4n+e4iee4i+e4oue5hue5pue4u+e4tee4uee5g+e4t+e4sue4uue5p+e5nee5lue5nue5mee5mue5uee5que5qee5vOe5u+e6g+e3lee5vei+rue5v+e6iOe6iee6jOe6kue6kOe6k+e6lOe6lue6jue6m+e6nOe8uOe8ulwiXSxbXCJlNmExXCIsXCLnvYXnvYznvY3nvY7nvZDnvZHnvZXnvZTnvZjnvZ/nvaDnvajnvannvafnvbjnvoLnvobnvoPnvojnvofnvoznvpTnvp7nvp3nvprnvqPnvq/nvrLnvrnnvq7nvrbnvrjorbHnv4Xnv4bnv4rnv5Xnv5Tnv6Hnv6bnv6nnv7Pnv7npo5zogIbogITogIvogJLogJjogJnogJzogKHogKjogL/ogLvogYrogYbogZLogZjogZrogZ/ogaLogajogbPogbLogbDogbbogbnogb3ogb/ogoTogobogoXogpvogpPogprogq3lhpDogqzog5vog6Xog5nog53og4Tog5rog5bohInog6/og7HohJvohKnohKPohK/ohYtcIl0sW1wiZTdhMVwiLFwi6ZqL6IWG6IS+6IWT6IWR6IO86IWx6IWu6IWl6IWm6IW06IaD6IaI6IaK6IaA6IaC6Iag6IaV6Iak6Iaj6IWf6IaT6Iap6Iaw6Ia16Ia+6Ia46Ia96IeA6IeC6Ia66IeJ6IeN6IeR6IeZ6IeY6IeI6Iea6Ief6Ieg6Ien6Ie66Ie76Ie+6IiB6IiC6IiF6IiH6IiK6IiN6IiQ6IiW6Iip6Iir6Ii46Iiz6ImA6ImZ6ImY6Imd6Ima6Imf6Imk6Imi6Imo6Imq6Imr6Iiu6Imx6Im36Im46Im+6IqN6IqS6Iqr6Iqf6Iq76Iqs6Iuh6Iuj6Iuf6IuS6Iu06Iuz6Iu66I6T6IyD6Iu76Iu56Iue6IyG6Iuc6IyJ6IuZXCJdLFtcImU4YTFcIixcIuiMteiMtOiMluiMsuiMseiNgOiMueiNkOiNheiMr+iMq+iMl+iMmOiOheiOmuiOquiOn+iOouiOluiMo+iOjuiOh+iOiuiNvOiOteiNs+iNteiOoOiOieiOqOiPtOiQk+iPq+iPjuiPveiQg+iPmOiQi+iPgeiPt+iQh+iPoOiPsuiQjeiQouiQoOiOveiQuOiUhuiPu+iRreiQquiQvOiVmuiShOiRt+iRq+iSreiRruiSguiRqeiRhuiQrOiRr+iRueiQteiTiuiRouiSueiSv+iSn+iTmeiTjeiSu+iTmuiTkOiTgeiThuiTluiSoeiUoeiTv+iTtOiUl+iUmOiUrOiUn+iUleiUlOiTvOiVgOiVo+iVmOiViFwiXSxbXCJlOWExXCIsXCLolYHomILolYvolZXoloDolqTolojolpHolorolqjola3olpTolpvol6rolofolpzolbfolb7olpDol4nolrrol4/olrnol5Dol5Xol53ol6Xol5zol7nomIromJPomIvol77ol7romIbomKLomJromLDomL/omY3kuZXomZTomZ/omafombHompPomqPomqnomqromovomozomrbomq/om4Tom4bomrDom4nooKPomqvom5Tom57om6nom6zom5/om5vom6/onJLonIbonIjonIDonIPom7vonJHonInonI3om7nonIronLTonL/onLfonLvonKXonKnonJronaDonZ/onbjonYzonY7onbTonZfonajona7onZlcIl0sW1wiZWFhMVwiLFwi6J2T6J2j6J2q6KCF6J6i6J6f6J6C6J6v6J+L6J696J+A6J+Q6ZuW6J6r6J+E6J6z6J+H6J+G6J676J+v6J+y6J+g6KCP6KCN6J++6J+26J+36KCO6J+S6KCR6KCW6KCV6KCi6KCh6KCx6KC26KC56KCn6KC76KGE6KGC6KGS6KGZ6KGe6KGi6KGr6KKB6KG+6KKe6KG16KG96KK16KGy6KKC6KKX6KKS6KKu6KKZ6KKi6KKN6KKk6KKw6KK/6KKx6KOD6KOE6KOU6KOY6KOZ6KOd6KO56KSC6KO86KO06KOo6KOy6KSE6KSM6KSK6KST6KWD6KSe6KSl6KSq6KSr6KWB6KWE6KS76KS26KS46KWM6KSd6KWg6KWeXCJdLFtcImViYTFcIixcIuilpuilpOilreilquilr+iltOilt+ilvuimg+imiOimiuimk+immOimoeimqeimpuimrOimr+imsuimuuimveimv+ingOinmuinnOinneinp+intOinuOiog+ioluiokOiojOiom+ioneiopeiotuipgeipm+ipkuiphuipiOipvOipreiprOipouiqheiqguiqhOiqqOiqoeiqkeiqpeiqpuiqmuiqo+irhOirjeirguirmuirq+irs+irp+irpOirseislOiroOirouirt+irnuirm+isjOish+ismuiroeisluiskOisl+isoOiss+meq+ispuisq+isvuisqOitgeitjOitj+itjuitieitluitm+itmuitq1wiXSxbXCJlY2ExXCIsXCLorZ/orazora/orbTorb3oroDorozoro7orpLorpPorpborpnorprosLrosYHosL/osYjosYzosY7osZDosZXosaLosazosbjosbrosoLosonosoXosoroso3oso7ospTosbzospjmiJ3osq3osqrosr3osrLosrPosq7osrbos4jos4Hos6Tos6Pos5ros73os7ros7votITotIXotIrotIfotI/otI3otJDpvY7otJPos43otJTotJbotafota3otbHotbPotoHotpnot4Lotr7otrrot4/ot5rot5bot4zot5vot4vot6rot6vot5/ot6Pot7zouIjouInot7/ouJ3ouJ7ouJDouJ/ouYLouLXouLDouLTouYpcIl0sW1wiZWRhMVwiLFwi6LmH6LmJ6LmM6LmQ6LmI6LmZ6Lmk6Lmg6Liq6Lmj6LmV6Lm26Lmy6Lm86LqB6LqH6LqF6LqE6LqL6LqK6LqT6LqR6LqU6LqZ6Lqq6Lqh6Lqs6Lqw6LuG6Lqx6Lq+6LuF6LuI6LuL6Lub6Luj6Lu86Lu76Lur6Lu+6LyK6LyF6LyV6LyS6LyZ6LyT6Lyc6Lyf6Lyb6LyM6Lym6Lyz6Ly76Ly56L2F6L2C6Ly+6L2M6L2J6L2G6L2O6L2X6L2c6L2i6L2j6L2k6L6c6L6f6L6j6L6t6L6v6L636L+a6L+l6L+i6L+q6L+v6YKH6L+06YCF6L+56L+66YCR6YCV6YCh6YCN6YCe6YCW6YCL6YCn6YC26YC16YC56L+4XCJdLFtcImVlYTFcIixcIumBj+mBkOmBkemBkumAjumBiemAvumBlumBmOmBnumBqOmBr+mBtumaqOmBsumCgumBvemCgemCgOmCiumCiemCj+mCqOmCr+mCsemCtemDoumDpOaJiOmDm+mEgumEkumEmemEsumEsOmFiumFlumFmOmFo+mFpemFqemFs+mFsumGi+mGiemGgumGoumGq+mGr+mGqumGtemGtOmGuumHgOmHgemHiemHi+mHkOmHlumHn+mHoemHm+mHvOmHtemHtumInumHv+mIlOmIrOmIlemIkemJnumJl+mJhemJiemJpOmJiOmKlemIv+mJi+mJkOmKnOmKlumKk+mKm+mJmumLj+mKuemKt+mLqemMj+mLuumNhOmMrlwiXSxbXCJlZmExXCIsXCLpjJnpjKLpjJrpjKPpjLrpjLXpjLvpjZzpjaDpjbzpja7pjZbpjrDpjqzpjq3pjpTpjrnpj5bpj5fpj6jpj6Xpj5jpj4Ppj53pj5Dpj4jpj6TpkJrpkJTpkJPpkIPpkIfpkJDpkLbpkKvpkLXpkKHpkLrpkYHpkZLpkYTpkZvpkaDpkaLpkZ7pkarpiKnpkbDpkbXpkbfpkb3pkZrpkbzpkb7pkoHpkb/ploLplofplorplpTplpbplpjplpnplqDplqjplqfplq3plrzplrvplrnplr7pl4rmv7bpl4Ppl43pl4zpl5Xpl5Tpl5bpl5zpl6Hpl6Xpl6LpmKHpmKjpmK7pmK/pmYLpmYzpmY/pmYvpmbfpmZzpmZ5cIl0sW1wiZjBhMVwiLFwi6Zmd6Zmf6Zmm6Zmy6Zms6ZqN6ZqY6ZqV6ZqX6Zqq6Zqn6Zqx6Zqy6Zqw6Zq06Zq26Zq46Zq56ZuO6ZuL6ZuJ6ZuN6KWN6Zuc6ZyN6ZuV6Zu56ZyE6ZyG6ZyI6ZyT6ZyO6ZyR6ZyP6ZyW6ZyZ6Zyk6Zyq6Zyw6Zy56Zy96Zy+6Z2E6Z2G6Z2I6Z2C6Z2J6Z2c6Z2g6Z2k6Z2m6Z2o5YuS6Z2r6Z2x6Z256Z6F6Z286Z6B6Z266Z6G6Z6L6Z6P6Z6Q6Z6c6Z6o6Z6m6Z6j6Z6z6Z606Z+D6Z+G6Z+I6Z+L6Z+c6Z+t6b2P6Z+y56uf6Z+26Z+16aCP6aCM6aC46aCk6aCh6aC36aC96aGG6aGP6aGL6aGr6aGv6aGwXCJdLFtcImYxYTFcIixcIumhsemhtOmhs+miqumir+misemitumjhOmjg+mjhumjqemjq+mkg+mkiemkkumklOmkmOmkoemknemknumkpOmkoOmkrOmkrumkvemkvumlgumliemlhemlkOmli+mlkemlkumljOmllemml+mmmOmmpemmremmrummvOmnn+mnm+mnnemnmOmnkemnremnrumnsemnsumnu+mnuOmogemoj+mohemnoumomemoq+mot+mphempgumpgOmpg+movumplempjempm+mpl+mpn+mpoumppemppOmpqempq+mpqumqremqsOmqvOmrgOmrj+mrkemrk+mrlOmrnumrn+mroumro+mrpumrr+mrq+mrrumrtOmrsemrt1wiXSxbXCJmMmExXCIsXCLpq7vprIbprJjprJrprJ/prKLprKPprKXprKfprKjprKnprKrprK7prK/prLLprYTprYPprY/prY3prY7prZHprZjprbTprpPproPprpHprpbprpfprp/prqDprqjprrTpr4Dpr4rprrnpr4bpr4/pr5Hpr5Lpr6Ppr6Lpr6Tpr5Tpr6HpsLrpr7Lpr7Hpr7DpsJXpsJTpsInpsJPpsIzpsIbpsIjpsJLpsIrpsITpsK7psJvpsKXpsKTpsKHpsLDpsYfpsLLpsYbpsL7psZrpsaDpsafpsbbpsbjps6fps6zps7DptInptIjps6vptIPptIbptKrptKbptq/ptKPptJ/ptYTptJXptJLptYHptL/ptL7ptYbptYhcIl0sW1wiZjNhMVwiLFwi6bWd6bWe6bWk6bWR6bWQ6bWZ6bWy6baJ6baH6bar6bWv6bW66baa6bak6bap6bay6beE6beB6ba76ba46ba66beG6beP6beC6beZ6beT6be46bem6bet6bev6be96bia6bib6bie6bm16bm56bm96bqB6bqI6bqL6bqM6bqS6bqV6bqR6bqd6bql6bqp6bq46bqq6bqt6Z2h6buM6buO6buP6buQ6buU6buc6bue6bud6bug6bul6buo6buv6bu06bu26bu36bu56bu76bu86bu96byH6byI55q36byV6byh6bys6by+6b2K6b2S6b2U6b2j6b2f6b2g6b2h6b2m6b2n6b2s6b2q6b236b2y6b226b6V6b6c6b6gXCJdLFtcImY0YTFcIixcIuWgr+anh+mBmeeRpOWHnOeGmVwiXSxbXCJmOWExXCIsXCLnuoropJzpjYjpiojok5zkv4nngrvmmLHmo4jpi7nmm7vlvYXkuKjku6Hku7zkvIDkvIPkvLnkvZbkvpLkvorkvprkvpTkv43lgYDlgKLkv7/lgJ7lgYblgbDlgYLlgpTlg7Tlg5jlhYrlhaTlhp3lhr7lh6zliJXlipzliqbli4Dli5vljIDljIfljKTljbLljpPljrLlj53vqI7lkpzlkorlkqnlk7/lloblnZnlnaXlnqzln4jln4fvqI/vqJDlop7lorLlpIvlpZPlpZvlpZ3lpaPlpqTlprrlrZblr4DnlK/lr5jlr6zlsJ7lsqblsrrls7XltKfltZPvqJHltYLlta3ltrjltrnlt5DlvKHlvLTlvaflvrdcIl0sW1wiZmFhMVwiLFwi5b+e5oGd5oKF5oKK5oOe5oOV5oSg5oOy5oSR5oS35oSw5oaY5oiT5oqm5o+15pGg5pKd5pOO5pWO5piA5piV5pi75piJ5piu5pie5pik5pml5pmX5pmZ76iS5pmz5pqZ5pqg5pqy5pq/5pu65pyO76Sp5p2m5p675qGS5p+A5qCB5qGE5qOP76iT5qWo76iU5qaY5qei5qiw5qmr5qmG5qmz5qm+5qui5quk5q+W5rC/5rGc5rKG5rGv5rOa5rSE5raH5rWv5raW5ras5reP5re45rey5re85ri55rmc5rin5ri85rq/5r6I5r615r+154CF54CH54Co54KF54Kr54SP54SE54Wc54WG54WH76iV54eB54e+54qxXCJdLFtcImZiYTFcIixcIueKvueMpO+olueNt+eOveePieePluePo+ePkueQh+ePteeQpueQqueQqeeQrueRoueSieeSn+eUgeeVr+eagueanOeanueam+eapu+ol+edhuWKr+egoeehjuehpOehuueksO+omO+ome+omuemlO+om+emm+erkeerp++onOerq+eunu+onee1iOe1nOe2t+e2oOe3lue5kue9h+e+oe+onuiMgeiNouiNv+iPh+iPtuiRiOiStOiVk+iVmeiVq++on+iWsO+ooO+ooeigh+ijteiokuiot+ipueiqp+iqvuirn++oouirtuitk+itv+izsOiztOi0kui1tu+oo+i7j++opO+opemBp+mDnu+opumElemEp+mHmlwiXSxbXCJmY2ExXCIsXCLph5fph57ph63ph67ph6Tph6XpiIbpiJDpiIrpiLrpiYDpiLzpiY7piZnpiZHpiLnpiafpiqfpibfpibjpi6fpi5fpi5npi5DvqKfpi5Xpi6Dpi5PpjKXpjKHpi7vvqKjpjJ7pi7/pjJ3pjILpjbDpjZfpjqTpj4bpj57pj7jpkLHpkYXpkYjplpLvp5zvqKnpmp3pmq/pnLPpnLvpnYPpnY3pnY/pnZHpnZXpoZfpoaXvqKrvqKvppKfvqKzppp7pqY7pq5npq5zprbXprbLpro/prrHprrvpsIDptbDptavvqK3puJnpu5FcIl0sW1wiZmNmMVwiLFwi4oWwXCIsOSxcIu+/ou+/pO+8h++8glwiXSxbXCI4ZmEyYWZcIixcIsuYy4fCuMuZy53Cr8uby5rvvZ7OhM6FXCJdLFtcIjhmYTJjMlwiLFwiwqHCpsK/XCJdLFtcIjhmYTJlYlwiLFwiwrrCqsKpwq7ihKLCpOKEllwiXSxbXCI4ZmE2ZTFcIixcIs6GzojOic6KzqpcIl0sW1wiOGZhNmU3XCIsXCLOjFwiXSxbXCI4ZmE2ZTlcIixcIs6OzqtcIl0sW1wiOGZhNmVjXCIsXCLOj1wiXSxbXCI4ZmE2ZjFcIixcIs6szq3Ors6vz4rOkM+Mz4LPjc+LzrDPjlwiXSxbXCI4ZmE3YzJcIixcItCCXCIsMTAsXCLQjtCPXCJdLFtcIjhmYTdmMlwiLFwi0ZJcIiwxMCxcItGe0Z9cIl0sW1wiOGZhOWExXCIsXCLDhsSQXCJdLFtcIjhmYTlhNFwiLFwixKZcIl0sW1wiOGZhOWE2XCIsXCLEslwiXSxbXCI4ZmE5YThcIixcIsWBxL9cIl0sW1wiOGZhOWFiXCIsXCLFisOYxZJcIl0sW1wiOGZhOWFmXCIsXCLFpsOeXCJdLFtcIjhmYTljMVwiLFwiw6bEkcOwxKfEscSzxLjFgsWAxYnFi8O4xZPDn8Wnw75cIl0sW1wiOGZhYWExXCIsXCLDgcOAw4TDgsSCx43EgMSEw4XDg8SGxIjEjMOHxIrEjsOJw4jDi8OKxJrElsSSxJhcIl0sW1wiOGZhYWJhXCIsXCLEnMSexKLEoMSkw43DjMOPw47Hj8SwxKrErsSoxLTEtsS5xL3Eu8WDxYfFhcORw5PDksOWw5THkcWQxYzDlcWUxZjFlsWaxZzFoMWexaTFosOaw5nDnMObxazHk8WwxarFssWuxajHl8ebx5nHlcW0w53FuMW2xbnFvcW7XCJdLFtcIjhmYWJhMVwiLFwiw6HDoMOkw6LEg8eOxIHEhcOlw6PEh8SJxI3Dp8SLxI/DqcOow6vDqsSbxJfEk8SZx7XEncSfXCJdLFtcIjhmYWJiZFwiLFwixKHEpcOtw6zDr8Oux5BcIl0sW1wiOGZhYmM1XCIsXCLEq8SvxKnEtcS3xLrEvsS8xYTFiMWGw7HDs8Oyw7bDtMeSxZHFjcO1xZXFmcWXxZvFncWhxZ/FpcWjw7rDucO8w7vFrceUxbHFq8Wzxa/FqceYx5zHmseWxbXDvcO/xbfFusW+xbxcIl0sW1wiOGZiMGExXCIsXCLkuILkuITkuIXkuIzkuJLkuJ/kuKPkuKTkuKjkuKvkuK7kuK/kuLDkuLXkuYDkuYHkuYTkuYfkuZHkuZrkuZzkuaPkuajkuankubTkubXkubnkub/kuo3kupbkupfkup3kuq/kurnku4Pku5Dku5rku5vku6Dku6Hku6Lku6jku6/ku7Hku7Pku7Xku73ku77ku7/kvIDkvILkvIPkvIjkvIvkvIzkvJLkvJXkvJbkvJfkvJnkvK7kvLHkvaDkvLPkvLXkvLfkvLnkvLvkvL7kvYDkvYLkvYjkvYnkvYvkvYzkvZLkvZTkvZbkvZjkvZ/kvaPkvarkvazkva7kvbHkvbfkvbjkvbnkvbrkvb3kvb7kvoHkvoLkvoRcIl0sW1wiOGZiMWExXCIsXCLkvoXkvonkvorkvozkvo7kvpDkvpLkvpPkvpTkvpfkvpnkvprkvp7kvp/kvrLkvrfkvrnkvrvkvrzkvr3kvr7kv4Dkv4Hkv4Xkv4bkv4jkv4nkv4vkv4zkv43kv4/kv5Lkv5zkv6Dkv6Lkv7Dkv7Lkv7zkv73kv7/lgIDlgIHlgITlgIflgIrlgIzlgI7lgJDlgJPlgJflgJjlgJvlgJzlgJ3lgJ7lgKLlgKflgK7lgLDlgLLlgLPlgLXlgYDlgYHlgYLlgYXlgYblgYrlgYzlgY7lgZHlgZLlgZPlgZflgZnlgZ/lgaDlgaLlgaPlgablgaflgarlga3lgbDlgbHlgLvlgoHlgoPlgoTlgoblgorlgo7lgo/lgpBcIl0sW1wiOGZiMmExXCIsXCLlgpLlgpPlgpTlgpblgpvlgpzlgp5cIiw0LFwi5YKq5YKv5YKw5YK55YK65YK95YOA5YOD5YOE5YOH5YOM5YOO5YOQ5YOT5YOU5YOY5YOc5YOd5YOf5YOi5YOk5YOm5YOo5YOp5YOv5YOx5YO25YO65YO+5YSD5YSG5YSH5YSI5YSL5YSM5YSN5YSO5YOy5YSQ5YSX5YSZ5YSb5YSc5YSd5YSe5YSj5YSn5YSo5YSs5YSt5YSv5YSx5YSz5YS05YS15YS45YS55YWC5YWK5YWP5YWT5YWV5YWX5YWY5YWf5YWk5YWm5YW+5YaD5YaE5YaL5YaO5YaY5Yad5Yah5Yaj5Yat5Ya45Ya65Ya85Ya+5Ya/5YeCXCJdLFtcIjhmYjNhMVwiLFwi5YeI5YeP5YeR5YeS5YeT5YeV5YeY5Yee5Yei5Yel5Yeu5Yey5Yez5Ye05Ye35YiB5YiC5YiF5YiS5YiT5YiV5YiW5YiY5Yii5Yio5Yix5Yiy5Yi15Yi85YmF5YmJ5YmV5YmX5YmY5Yma5Ymc5Ymf5Ymg5Ymh5Ymm5Ymu5Ym35Ym45Ym55YqA5YqC5YqF5YqK5YqM5YqT5YqV5YqW5YqX5YqY5Yqa5Yqc5Yqk5Yql5Yqm5Yqn5Yqv5Yqw5Yq25Yq35Yq45Yq65Yq75Yq95YuA5YuE5YuG5YuI5YuM5YuP5YuR5YuU5YuW5Yub5Yuc5Yuh5Yul5Yuo5Yup5Yuq5Yus5Yuw5Yux5Yu05Yu25Yu35YyA5YyD5YyK5YyLXCJdLFtcIjhmYjRhMVwiLFwi5YyM5YyR5YyT5YyY5Yyb5Yyc5Yye5Yyf5Yyl5Yyn5Yyo5Yyp5Yyr5Yys5Yyt5Yyw5Yyy5Yy15Yy85Yy95Yy+5Y2C5Y2M5Y2L5Y2Z5Y2b5Y2h5Y2j5Y2l5Y2s5Y2t5Y2y5Y255Y2+5Y6D5Y6H5Y6I5Y6O5Y6T5Y6U5Y6Z5Y6d5Y6h5Y6k5Y6q5Y6r5Y6v5Y6y5Y605Y615Y635Y645Y665Y695Y+A5Y+F5Y+P5Y+S5Y+T5Y+V5Y+a5Y+d5Y+e5Y+g5Y+m5Y+n5Y+15ZCC5ZCT5ZCa5ZCh5ZCn5ZCo5ZCq5ZCv5ZCx5ZC05ZC15ZGD5ZGE5ZGH5ZGN5ZGP5ZGe5ZGi5ZGk5ZGm5ZGn5ZGp5ZGr5ZGt5ZGu5ZG05ZG/XCJdLFtcIjhmYjVhMVwiLFwi5ZKB5ZKD5ZKF5ZKI5ZKJ5ZKN5ZKR5ZKV5ZKW5ZKc5ZKf5ZKh5ZKm5ZKn5ZKp5ZKq5ZKt5ZKu5ZKx5ZK35ZK55ZK65ZK75ZK/5ZOG5ZOK5ZON5ZOO5ZOg5ZOq5ZOs5ZOv5ZO25ZO85ZO+5ZO/5ZSA5ZSB5ZSF5ZSI5ZSJ5ZSM5ZSN5ZSO5ZSV5ZSq5ZSr5ZSy5ZS15ZS25ZS75ZS85ZS95ZWB5ZWH5ZWJ5ZWK5ZWN5ZWQ5ZWR5ZWY5ZWa5ZWb5ZWe5ZWg5ZWh5ZWk5ZWm5ZW/5ZaB5ZaC5ZaG5ZaI5ZaO5ZaP5ZaR5ZaS5ZaT5ZaU5ZaX5Zaj5Zak5Zat5Zay5Za/5ZeB5ZeD5ZeG5ZeJ5ZeL5ZeM5ZeO5ZeR5ZeSXCJdLFtcIjhmYjZhMVwiLFwi5ZeT5ZeX5ZeY5Zeb5Zee5Zei5Zep5Ze25Ze/5ZiF5ZiI5ZiK5ZiNXCIsNSxcIuWYmeWYrOWYsOWYs+WYteWYt+WYueWYu+WYvOWYveWYv+WZgOWZgeWZg+WZhOWZhuWZieWZi+WZjeWZj+WZlOWZnuWZoOWZoeWZouWZo+WZpuWZqeWZreWZr+WZseWZsuWZteWahOWaheWaiOWai+WajOWaleWameWamuWaneWanuWan+WapuWap+WaqOWaqeWaq+WarOWareWaseWas+Wat+WavuWbheWbieWbiuWbi+Wbj+WbkOWbjOWbjeWbmeWbnOWbneWbn+WboeWbpFwiLDQsXCLlm7Hlm6vlm61cIl0sW1wiOGZiN2ExXCIsXCLlm7blm7flnIHlnILlnIflnIrlnIzlnJHlnJXlnJrlnJvlnJ3lnKDlnKLlnKPlnKTlnKXlnKnlnKrlnKzlnK7lnK/lnLPlnLTlnL3lnL7lnL/lnYXlnYblnYzlnY3lnZLlnaLlnaXlnaflnajlnavlna1cIiw0LFwi5Z2z5Z205Z215Z235Z255Z265Z275Z285Z2+5Z6B5Z6D5Z6M5Z6U5Z6X5Z6Z5Z6a5Z6c5Z6d5Z6e5Z6f5Z6h5Z6V5Z6n5Z6o5Z6p5Z6s5Z645Z695Z+H5Z+I5Z+M5Z+P5Z+V5Z+d5Z+e5Z+k5Z+m5Z+n5Z+p5Z+t5Z+w5Z+15Z+25Z+45Z+95Z++5Z+/5aCD5aCE5aCI5aCJ5Z+hXCJdLFtcIjhmYjhhMVwiLFwi5aCM5aCN5aCb5aCe5aCf5aCg5aCm5aCn5aCt5aCy5aC55aC/5aGJ5aGM5aGN5aGP5aGQ5aGV5aGf5aGh5aGk5aGn5aGo5aG45aG85aG/5aKA5aKB5aKH5aKI5aKJ5aKK5aKM5aKN5aKP5aKQ5aKU5aKW5aKd5aKg5aKh5aKi5aKm5aKp5aKx5aKy5aOE5aK85aOC5aOI5aON5aOO5aOQ5aOS5aOU5aOW5aOa5aOd5aOh5aOi5aOp5aOz5aSF5aSG5aSL5aSM5aSS5aST5aSU6JmB5aSd5aSh5aSj5aSk5aSo5aSv5aSw5aSz5aS15aS25aS/5aWD5aWG5aWS5aWT5aWZ5aWb5aWd5aWe5aWf5aWh5aWj5aWr5aWtXCJdLFtcIjhmYjlhMVwiLFwi5aWv5aWy5aW15aW25aW55aW75aW85aaL5aaM5aaO5aaS5aaV5aaX5aaf5aak5aan5aat5aau5aav5aaw5aaz5aa35aa65aa85aeB5aeD5aeE5aeI5aeK5aeN5aeS5aed5aee5aef5aej5aek5aen5aeu5aev5aex5aey5ae05ae35aiA5aiE5aiM5aiN5aiO5aiS5aiT5aie5aij5aik5ain5aio5aiq5ait5aiw5amE5amF5amH5amI5amM5amQ5amV5ame5amj5aml5amn5amt5am35am65am75am+5aqL5aqQ5aqT5aqW5aqZ5aqc5aqe5aqf5aqg5aqi5aqn5aqs5aqx5aqy5aqz5aq15aq45aq65aq75aq/XCJdLFtcIjhmYmFhMVwiLFwi5auE5auG5auI5auP5aua5auc5aug5aul5auq5auu5au15au25au95ayA5ayB5ayI5ayX5ay05ayZ5ayb5ayd5ayh5ayl5ayt5ay45a2B5a2L5a2M5a2S5a2W5a2e5a2o5a2u5a2v5a285a295a2+5a2/5a6B5a6E5a6G5a6K5a6O5a6Q5a6R5a6T5a6U5a6W5a6o5a6p5a6s5a6t5a6v5a6x5a6y5a635a665a685a+A5a+B5a+N5a+P5a+WXCIsNCxcIuWvoOWvr+WvseWvtOWvveWwjOWwl+WwnuWwn+Wwo+WwpuWwqeWwq+WwrOWwruWwsOWwsuWwteWwtuWxmeWxmuWxnOWxouWxo+Wxp+WxqOWxqVwiXSxbXCI4ZmJiYTFcIixcIuWxreWxsOWxtOWxteWxuuWxu+WxvOWxveWyh+WyiOWyiuWyj+WykuWyneWyn+WyoOWyouWyo+WypuWyquWysuWytOWyteWyuuWzieWzi+WzkuWzneWzl+WzruWzseWzsuWztOW0geW0huW0jeW0kuW0q+W0o+W0pOW0puW0p+W0seW0tOW0ueW0veW0v+W1guW1g+W1huW1iOW1leW1keW1meW1iuW1n+W1oOW1oeW1ouW1pOW1quW1reW1sOW1ueW1uuW1vuW1v+W2geW2g+W2iOW2iuW2kuW2k+W2lOW2leW2meW2m+W2n+W2oOW2p+W2q+W2sOW2tOW2uOW2ueW3g+W3h+W3i+W3kOW3juW3mOW3meW3oOW3pFwiXSxbXCI4ZmJjYTFcIixcIuW3qeW3uOW3ueW4gOW4h+W4jeW4kuW4lOW4leW4mOW4n+W4oOW4ruW4qOW4suW4teW4vuW5i+W5kOW5ieW5keW5luW5mOW5m+W5nOW5nuW5qOW5qlwiLDQsXCLlubDluoDluovluo7luqLluqTluqXluqjluqrluqzlurHlurPlur3lur7lur/lu4blu4zlu4vlu47lu5Hlu5Llu5Tlu5Xlu5zlu57lu6Xlu6vlvILlvIblvIflvIjlvI7lvJnlvJzlvJ3lvKHlvKLlvKPlvKTlvKjlvKvlvKzlvK7lvLDlvLTlvLblvLvlvL3lvL/lvYDlvYTlvYXlvYflvY3lvZDlvZTlvZjlvZvlvaDlvaPlvaTlvadcIl0sW1wiOGZiZGExXCIsXCLlva/lvbLlvbTlvbXlvbjlvbrlvb3lvb7lvonlvo3lvo/lvpblvpzlvp3lvqLlvqflvqvlvqTlvqzlvq/lvrDlvrHlvrjlv4Tlv4flv4jlv4nlv4vlv5BcIiw0LFwi5b+e5b+h5b+i5b+o5b+p5b+q5b+s5b+t5b+u5b+v5b+y5b+z5b+25b+65b+85oCH5oCK5oCN5oCT5oCU5oCX5oCY5oCa5oCf5oCk5oCt5oCz5oC15oGA5oGH5oGI5oGJ5oGM5oGR5oGU5oGW5oGX5oGd5oGh5oGn5oGx5oG+5oG/5oKC5oKG5oKI5oKK5oKO5oKR5oKT5oKV5oKY5oKd5oKe5oKi5oKk5oKl5oKo5oKw5oKx5oK3XCJdLFtcIjhmYmVhMVwiLFwi5oK75oK+5oOC5oOE5oOI5oOJ5oOK5oOL5oOO5oOP5oOU5oOV5oOZ5oOb5oOd5oOe5oOi5oOl5oOy5oO15oO45oO85oO95oSC5oSH5oSK5oSM5oSQXCIsNCxcIuaEluaEl+aEmeaEnOaEnuaEouaEquaEq+aEsOaEseaEteaEtuaEt+aEueaFgeaFheaFhuaFieaFnuaFoOaFrOaFsuaFuOaFu+aFvOaFv+aGgOaGgeaGg+aGhOaGi+aGjeaGkuaGk+aGl+aGmOaGnOaGneaGn+aGoOaGpeaGqOaGquaGreaGuOaGueaGvOaHgOaHgeaHguaHjuaHj+aHleaHnOaHneaHnuaHn+aHoeaHouaHp+aHqeaHpVwiXSxbXCI4ZmJmYTFcIixcIuaHrOaHreaHr+aIgeaIg+aIhOaIh+aIk+aIleaInOaIoOaIouaIo+aIp+aIqeaIq+aIueaIveaJguaJg+aJhOaJhuaJjOaJkOaJkeaJkuaJlOaJluaJmuaJnOaJpOaJreaJr+aJs+aJuuaJveaKjeaKjuaKj+aKkOaKpuaKqOaKs+aKtuaKt+aKuuaKvuaKv+aLhOaLjuaLleaLluaLmuaLquaLsuaLtOaLvOaLveaMg+aMhOaMiuaMi+aMjeaMkOaMk+aMluaMmOaMqeaMquaMreaMteaMtuaMueaMvOaNgeaNguaNg+aNhOaNhuaNiuaNi+aNjuaNkuaNk+aNlOaNmOaNm+aNpeaNpuaNrOaNreaNseaNtOaNtVwiXSxbXCI4ZmMwYTFcIixcIuaNuOaNvOaNveaNv+aOguaOhOaOh+aOiuaOkOaOlOaOleaOmeaOmuaOnuaOpOaOpuaOreaOruaOr+aOveaPgeaPheaPiOaPjuaPkeaPk+aPlOaPleaPnOaPoOaPpeaPquaPrOaPsuaPs+aPteaPuOaPueaQieaQiuaQkOaQkuaQlOaQmOaQnuaQoOaQouaQpOaQpeaQqeaQquaQr+aQsOaQteaQveaQv+aRi+aRj+aRkeaRkuaRk+aRlOaRmuaRm+aRnOaRneaRn+aRoOaRoeaRo+aRreaRs+aRtOaRu+aRveaSheaSh+aSj+aSkOaSkeaSmOaSmeaSm+aSneaSn+aSoeaSo+aSpuaSqOaSrOaSs+aSveaSvuaSv1wiXSxbXCI4ZmMxYTFcIixcIuaThOaTieaTiuaTi+aTjOaTjuaTkOaTkeaTleaTl+aTpOaTpeaTqeaTquaTreaTsOaTteaTt+aTu+aTv+aUgeaUhOaUiOaUieaUiuaUj+aUk+aUlOaUluaUmeaUm+aUnuaUn+aUouaUpuaUqeaUruaUseaUuuaUvOaUveaVg+aVh+aVieaVkOaVkuaVlOaVn+aVoOaVp+aVq+aVuuaVveaWgeaWheaWiuaWkuaWleaWmOaWneaWoOaWo+aWpuaWruaWsuaWs+aWtOaWv+aXguaXiOaXieaXjuaXkOaXlOaXluaXmOaXn+aXsOaXsuaXtOaXteaXueaXvuaXv+aYgOaYhOaYiOaYieaYjeaYkeaYkuaYleaYluaYnVwiXSxbXCI4ZmMyYTFcIixcIuaYnuaYoeaYouaYo+aYpOaYpuaYqeaYquaYq+aYrOaYruaYsOaYseaYs+aYueaYt+aZgOaZheaZhuaZiuaZjOaZkeaZjuaZl+aZmOaZmeaZm+aZnOaZoOaZoeabu+aZquaZq+aZrOaZvuaZs+aZteaZv+aZt+aZuOaZueaZu+aagOaZvOaai+aajOaajeaakOaakuaameaamuaam+aanOaan+aaoOaapOaareaaseaasuaateaau+aav+abgOabguabg+abiOabjOabjuabj+ablOabm+abn+abqOabq+abrOabruabuuacheach+acjuack+acmeacnOacoOacouacs+acvuadheadh+adiOadjOadlOadleadnVwiXSxbXCI4ZmMzYTFcIixcIuadpuadrOadruadtOadtuadu+aegeaehOaejuaej+aekeaek+aeluaemOaemeaem+aesOaeseaesuaeteaeu+aevOaeveafueafgOafguafg+afheafiOafieafkuafl+afmeafnOafoeafpuafsOafsuaftuaft+ahkuaglOagmeagneagn+agqOagp+agrOagreagr+agsOagseags+agu+agv+ahhOahheahiuahjOahleahl+ahmOahm+ahq+ahrlwiLDQsXCLmobXmobnmobrmobvmobzmooLmooTmoobmoojmopbmopjmoprmopzmoqHmoqPmoqXmoqnmoqrmoq7morLmorvmo4Xmo4jmo4zmo49cIl0sW1wiOGZjNGExXCIsXCLmo5Dmo5Hmo5Pmo5bmo5nmo5zmo53mo6Xmo6jmo6rmo6vmo6zmo63mo7Dmo7Hmo7Xmo7bmo7vmo7zmo73mpIbmpInmpIrmpJDmpJHmpJPmpJbmpJfmpLHmpLPmpLXmpLjmpLvmpYLmpYXmpYnmpY7mpZfmpZvmpaPmpaTmpaXmpabmpajmpanmpazmpbDmpbHmpbLmpbrmpbvmpb/mpoDmpo3mppLmppbmppjmpqHmpqXmpqbmpqjmpqvmpq3mpq/mprfmprjmprrmprzmp4Xmp4jmp5Hmp5bmp5fmp6Lmp6Xmp67mp6/mp7Hmp7Pmp7Xmp77mqIDmqIHmqIPmqI/mqJHmqJXmqJrmqJ3mqKDmqKTmqKjmqLDmqLJcIl0sW1wiOGZjNWExXCIsXCLmqLTmqLfmqLvmqL7mqL/mqYXmqYbmqYnmqYrmqY7mqZDmqZHmqZLmqZXmqZbmqZvmqaTmqafmqarmqbHmqbPmqb7mqoHmqoPmqobmqofmqonmqovmqpHmqpvmqp3mqp7mqp/mqqXmqqvmqq/mqrDmqrHmqrTmqr3mqr7mqr/mq4bmq4nmq4jmq4zmq5Dmq5Tmq5Xmq5bmq5zmq53mq6Tmq6fmq6zmq7Dmq7Hmq7Lmq7zmq73mrILmrIPmrIbmrIfmrInmrI/mrJDmrJHmrJfmrJvmrJ7mrKTmrKjmrKvmrKzmrK/mrLXmrLbmrLvmrL/mrYbmrYrmrY3mrZLmrZbmrZjmrZ3mraDmrafmravmra7mrbDmrbXmrb1cIl0sW1wiOGZjNmExXCIsXCLmrb7mroLmroXmrpfmrpvmrp/mrqDmrqLmrqPmrqjmrqnmrqzmrq3mrq7mrrDmrrjmrrnmrr3mrr7mr4Pmr4Tmr4nmr4zmr5bmr5rmr6Hmr6Pmr6bmr6fmr67mr7Hmr7fmr7nmr7/msILmsITmsIXmsInmsI3msI7msJDmsJLmsJnmsJ/msKbmsKfmsKjmsKzmsK7msLPmsLXmsLbmsLrmsLvmsL/msYrmsYvmsY3msY/msZLmsZTmsZnmsZvmsZzmsavmsa3msa/msbTmsbbmsbjmsbnmsbvmsoXmsobmsofmsonmspTmspXmspfmspjmspzmsp/msrDmsrLmsrTms4Lms4bms43ms4/ms5Dms5Hms5Lms5Tms5ZcIl0sW1wiOGZjN2ExXCIsXCLms5rms5zms6Dms6fms6nms6vms6zms67ms7Lms7TmtITmtIfmtIrmtI7mtI/mtJHmtJPmtJrmtKbmtKfmtKjmsafmtK7mtK/mtLHmtLnmtLzmtL/mtZfmtZ7mtZ/mtaHmtaXmtafmta/mtbDmtbzmtoLmtofmtpHmtpLmtpTmtpbmtpfmtpjmtqrmtqzmtrTmtrfmtrnmtr3mtr/mt4Tmt4jmt4rmt47mt4/mt5bmt5vmt53mt5/mt6Dmt6Lmt6Xmt6nmt6/mt7Dmt7Tmt7bmt7zmuIDmuITmuJ7muKLmuKfmuLLmuLbmuLnmuLvmuLzmuYTmuYXmuYjmuYnmuYvmuY/muZHmuZLmuZPmuZTmuZfmuZzmuZ3muZ5cIl0sW1wiOGZjOGExXCIsXCLmuaLmuaPmuajmubPmubvmub3muo3mupPmupnmuqDmuqfmuq3muq7murHmurPmurvmur/mu4Dmu4Hmu4Pmu4fmu4jmu4rmu43mu47mu4/mu6vmu63mu67mu7nmu7vmu73mvITmvIjmvIrmvIzmvI3mvJbmvJjmvJrmvJvmvKbmvKnmvKrmvK/mvLDmvLPmvLbmvLvmvLzmvK3mvY/mvZHmvZLmvZPmvZfmvZnmvZrmvZ3mvZ7mvaHmvaLmvajmvazmvb3mvb7mvoPmvofmvojmvovmvozmvo3mvpDmvpLmvpPmvpTmvpbmvprmvp/mvqDmvqXmvqbmvqfmvqjmvq7mvq/mvrDmvrXmvrbmvrzmv4Xmv4fmv4jmv4pcIl0sW1wiOGZjOWExXCIsXCLmv5rmv57mv6jmv6nmv7Dmv7Xmv7nmv7zmv73ngIDngIXngIbngIfngI3ngJfngKDngKPngK/ngLTngLfngLnngLzngYPngYTngYjngYnngYrngYvngZTngZXngZ3ngZ7ngY7ngaTngaXngaznga7ngbXngbbngb7ngoHngoXngobngpRcIiw0LFwi54Kb54Kk54Kr54Kw54Kx54K054K354OK54OR54OT54OU54OV54OW54OY54Oc54Ok54O654SDXCIsNCxcIueEi+eEjOeEj+eEnueEoOeEq+eEreeEr+eEsOeEseeEuOeFgeeFheeFhueFh+eFiueFi+eFkOeFkueFl+eFmueFnOeFnueFoFwiXSxbXCI4ZmNhYTFcIixcIueFqOeFueeGgOeGheeGh+eGjOeGkueGmueGm+eGoOeGoueGr+eGsOeGsueGs+eGuueGv+eHgOeHgeeHhOeHi+eHjOeHk+eHlueHmeeHmueHnOeHuOeHvueIgOeIh+eIiOeIieeIk+eIl+eImueIneeIn+eIpOeIq+eIr+eItOeIuOeIueeJgeeJgueJg+eJheeJjueJj+eJkOeJk+eJleeJlueJmueJnOeJnueJoOeJo+eJqOeJq+eJrueJr+eJseeJt+eJuOeJu+eJvOeJv+eKhOeKieeKjeeKjueKk+eKm+eKqOeKreeKrueKseeKtOeKvueLgeeLh+eLieeLjOeLleeLlueLmOeLn+eLpeeLs+eLtOeLuueLu1wiXSxbXCI4ZmNiYTFcIixcIueLvueMgueMhOeMheeMh+eMi+eMjeeMkueMk+eMmOeMmeeMnueMoueMpOeMp+eMqOeMrOeMseeMsueMteeMuueMu+eMveeNg+eNjeeNkOeNkueNlueNmOeNneeNnueNn+eNoOeNpueNp+eNqeeNq+eNrOeNrueNr+eNseeNt+eNueeNvOeOgOeOgeeOg+eOheeOhueOjueOkOeOk+eOleeOl+eOmOeOnOeOnueOn+eOoOeOoueOpeeOpueOqueOq+eOreeOteeOt+eOueeOvOeOveeOv+ePheePhuePieePi+ePjOePj+ePkuePk+ePluePmeePneePoeePo+ePpuePp+ePqeePtOePteePt+ePueePuuePu+ePvVwiXSxbXCI4ZmNjYTFcIixcIuePv+eQgOeQgeeQhOeQh+eQiueQkeeQmueQm+eQpOeQpueQqFwiLDksXCLnkLnnkYDnkYPnkYTnkYbnkYfnkYvnkY3nkZHnkZLnkZfnkZ3nkaLnkabnkafnkajnkavnka3nka7nkbHnkbLnkoDnkoHnkoXnkobnkofnkonnko/nkpDnkpHnkpLnkpjnkpnnkprnkpznkp/nkqDnkqHnkqPnkqbnkqjnkqnnkqrnkqvnkq7nkq/nkrHnkrLnkrXnkrnnkrvnkr/nk4jnk4nnk4znk5Dnk5Pnk5jnk5rnk5vnk57nk5/nk6Tnk6jnk6rnk6vnk6/nk7Tnk7rnk7vnk7znk7/nlIZcIl0sW1wiOGZjZGExXCIsXCLnlJLnlJbnlJfnlKDnlKHnlKTnlKfnlKnnlKrnlK/nlLbnlLnnlL3nlL7nlL/nlYDnlYPnlYfnlYjnlY7nlZDnlZLnlZfnlZ7nlZ/nlaHnla/nlbHnlblcIiw1LFwi55aB55aF55aQ55aS55aT55aV55aZ55ac55ai55ak55a055a655a/55eA55eB55eE55eG55eM55eO55eP55eX55ec55ef55eg55eh55ek55en55es55eu55ev55ex55e555iA55iC55iD55iE55iH55iI55iK55iM55iP55iS55iT55iV55iW55iZ55ib55ic55id55ie55ij55il55im55ip55it55iy55iz55i155i455i5XCJdLFtcIjhmY2VhMVwiLFwi55i655i855mK55mA55mB55mD55mE55mF55mJ55mL55mV55mZ55mf55mk55ml55mt55mu55mv55mx55m055qB55qF55qM55qN55qV55qb55qc55qd55qf55qg55qiXCIsNixcIueaqueareeaveebgeebheebieebi+ebjOebjueblOebmeeboOebpuebqOebrOebsOebseebtuebueebvOecgOechueciuecjueckueclOecleecl+ecmeecmuecnOecouecqOecreecruecr+ectOecteectuecueecveecvuedguedheedhuediuedjeedjuedj+edkuedluedl+ednOednuedn+edoOedolwiXSxbXCI4ZmNmYTFcIixcIuedpOedp+edquedrOedsOedsueds+edtOeduuedveeegOeehOeejOeejeeelOeeleeelueemueen+eeoueep+eequeerueer+eeseeeteeevuefg+efieefkeefkuefleefmeefnuefn+efoOefpOefpuefquefrOefsOefseeftOefuOefu+egheeghuegieegjeegjuegkeegneegoeegouego+egreegruegsOegteegt+ehg+ehhOehh+ehiOehjOehjuehkuehnOehnuehoOehoeeho+ehpOehqOehquehruehuuehvueiiueij+eilOeimOeioeeineeinuein+eipOeiqOeirOeireeisOeiseeisueis1wiXSxbXCI4ZmQwYTFcIixcIueiu+eiveeiv+ejh+ejiOejieejjOejjuejkuejk+ejleejluejpOejm+ejn+ejoOejoeejpuejquejsuejs+ekgOejtuejt+ejuueju+ejv+ekhuekjOekkOekmueknOeknuekn+ekoOekpeekp+ekqeekreekseektOekteeku+ekveekv+elhOelheelhueliueli+elj+elkeellOelmOelm+elnOelp+elqeelq+elsuelueelu+elvOelvuemi+emjOemkeemk+emlOemleemluemmOemm+emnOemoeemqOemqeemq+emr+emseemtOemuOemu+enguenhOenh+eniOeniuenj+enlOenluenmuenneennlwiXSxbXCI4ZmQxYTFcIixcIuenoOenouenpeenquenq+enreenseenuOenvOeogueog+eoh+eoieeoiueojOeokeeoleeom+eonueooeeop+eoq+eoreeor+eosOeotOeoteeouOeoueeouuephOepheeph+epiOepjOepleepluepmeepnOepneepn+epoOeppeepp+epquepreepteepuOepvueqgOeqgueqheeqhueqiueqi+eqkOeqkeeqlOeqnueqoOeqo+eqrOeqs+eqteequeequ+eqvOerhuerieerjOerjuerkeerm+erqOerqeerq+errOerseertOeru+erveervuesh+eslOesn+eso+esp+esqeesquesq+esreesruesr+essFwiXSxbXCI4ZmQyYTFcIixcIuesseestOesveesv+etgOetgeeth+etjuetleetoOetpOetpuetqeetquetreetr+etsuets+ett+euhOeuieeujueukOeukeeulueum+eunueuoOeupeeurOeur+eusOeusueuteeutueuuueuu+euvOeuveevguevheeviOeviuevlOevluevl+evmeevmuevm+evqOevquevsuevtOevteevuOevueevuuevvOevvuewgeewguewg+ewhOewhuewieewi+ewjOewjuewj+ewmeewm+ewoOewpeewpuewqOewrOewseews+ewtOewtuewueewuuexhuexiuexleexkeexkuexk+exmVwiLDVdLFtcIjhmZDNhMVwiLFwi57Gh57Gj57Gn57Gp57Gt57Gu57Gw57Gy57G557G857G957KG57KH57KP57KU57Ke57Kg57Km57Kw57K257K357K657K757K857K/57OE57OH57OI57OJ57ON57OP57OT57OU57OV57OX57OZ57Oa57Od57Om57Op57Or57O157SD57SH57SI57SJ57SP57SR57SS57ST57SW57Sd57Se57Sj57Sm57Sq57St57Sx57S857S957S+57WA57WB57WH57WI57WN57WR57WT57WX57WZ57Wa57Wc57Wd57Wl57Wn57Wq57Ww57W457W657W757W/57aB57aC57aD57aF57aG57aI57aL57aM57aN57aR57aW57aX57adXCJdLFtcIjhmZDRhMVwiLFwi57ae57am57an57aq57az57a257a357a557eCXCIsNCxcIue3jOe3jee3jue3l+e3mee4gOe3oue3pee3pue3que3q+e3ree3see3tee3tue3uee3uue4iOe4kOe4kee4lee4l+e4nOe4nee4oOe4p+e4qOe4rOe4ree4r+e4s+e4tue4v+e5hOe5hee5h+e5jue5kOe5kue5mOe5n+e5oee5oue5pee5q+e5rue5r+e5s+e5uOe5vue6gee6hue6h+e6iue6jee6kee6lee6mOe6mue6nee6nue8vOe8u+e8vee8vue8v+e9g+e9hOe9h+e9j+e9kue9k+e9m+e9nOe9nee9oee9o+e9pOe9pee9pue9rVwiXSxbXCI4ZmQ1YTFcIixcIue9see9vee9vue9v+e+gOe+i+e+jee+j+e+kOe+kee+lue+l+e+nOe+oee+oue+pue+que+ree+tOe+vOe+v+e/gOe/g+e/iOe/jue/j+e/m+e/n+e/o+e/pee/qOe/rOe/rue/r+e/sue/uue/vee/vue/v+iAh+iAiOiAiuiAjeiAjuiAj+iAkeiAk+iAlOiAluiAneiAnuiAn+iAoOiApOiApuiArOiAruiAsOiAtOiAteiAt+iAueiAuuiAvOiAvuiBgOiBhOiBoOiBpOiBpuiBreiBseiBteiCgeiCiOiCjuiCnOiCnuiCpuiCp+iCq+iCuOiCueiDiOiDjeiDj+iDkuiDlOiDleiDl+iDmOiDoOiDreiDrlwiXSxbXCI4ZmQ2YTFcIixcIuiDsOiDsuiDs+iDtuiDueiDuuiDvuiEg+iEi+iEluiEl+iEmOiEnOiEnuiEoOiEpOiEp+iErOiEsOiEteiEuuiEvOiFheiFh+iFiuiFjOiFkuiFl+iFoOiFoeiFp+iFqOiFqeiFreiFr+iFt+iGgeiGkOiGhOiGheiGhuiGi+iGjuiGluiGmOiGm+iGnuiGouiGruiGsuiGtOiGu+iHi+iHg+iHheiHiuiHjuiHj+iHleiHl+iHm+iHneiHnuiHoeiHpOiHq+iHrOiHsOiHseiHsuiHteiHtuiHuOiHueiHveiHv+iIgOiIg+iIj+iIk+iIlOiImeiImuiIneiIoeiIouiIqOiIsuiItOiIuuiJg+iJhOiJheiJhlwiXSxbXCI4ZmQ3YTFcIixcIuiJi+iJjuiJj+iJkeiJluiJnOiJoOiJo+iJp+iJreiJtOiJu+iJveiJv+iKgOiKgeiKg+iKhOiKh+iKieiKiuiKjuiKkeiKlOiKluiKmOiKmuiKm+iKoOiKoeiKo+iKpOiKp+iKqOiKqeiKquiKruiKsOiKsuiKtOiKt+iKuuiKvOiKvuiKv+iLhuiLkOiLleiLmuiLoOiLouiLpOiLqOiLquiLreiLr+iLtuiLt+iLveiLvuiMgOiMgeiMh+iMiOiMiuiMi+iNlOiMm+iMneiMnuiMn+iMoeiMouiMrOiMreiMruiMsOiMs+iMt+iMuuiMvOiMveiNguiNg+iNhOiNh+iNjeiNjuiNkeiNleiNluiNl+iNsOiNuFwiXSxbXCI4ZmQ4YTFcIixcIuiNveiNv+iOgOiOguiOhOiOhuiOjeiOkuiOlOiOleiOmOiOmeiOm+iOnOiOneiOpuiOp+iOqeiOrOiOvuiOv+iPgOiPh+iPieiPj+iPkOiPkeiPlOiPneiNk+iPqOiPquiPtuiPuOiPueiPvOiQgeiQhuiQiuiQj+iQkeiQleiQmeiOreiQr+iQueiRheiRh+iRiOiRiuiRjeiRj+iRkeiRkuiRluiRmOiRmeiRmuiRnOiRoOiRpOiRpeiRp+iRquiRsOiRs+iRtOiRtuiRuOiRvOiRveiSgeiSheiSkuiSk+iSleiSnuiSpuiSqOiSqeiSquiSr+iSseiStOiSuuiSveiSvuiTgOiTguiTh+iTiOiTjOiTj+iTk1wiXSxbXCI4ZmQ5YTFcIixcIuiTnOiTp+iTquiTr+iTsOiTseiTsuiTt+iUsuiTuuiTu+iTveiUguiUg+iUh+iUjOiUjuiUkOiUnOiUnuiUouiUo+iUpOiUpeiUp+iUquiUq+iUr+iUs+iUtOiUtuiUv+iVhuiVj1wiLDQsXCLolZbolZnolZxcIiw2LFwi6JWk6JWr6JWv6JW56JW66JW76JW96JW/6JaB6JaF6JaG6JaJ6JaL6JaM6JaP6JaT6JaY6Jad6Jaf6Jag6Jai6Jal6Jan6Ja06Ja26Ja36Ja46Ja86Ja96Ja+6Ja/6JeC6JeH6JeK6JeL6JeO6Jat6JeY6Jea6Jef6Jeg6Jem6Jeo6Jet6Jez6Je26Je8XCJdLFtcIjhmZGFhMVwiLFwi6Je/6JiA6JiE6JiF6JiN6JiO6JiQ6JiR6JiS6JiY6JiZ6Jib6Jie6Jih6Jin6Jip6Ji26Ji46Ji66Ji86Ji96JmA6JmC6JmG6JmS6JmT6JmW6JmX6JmY6JmZ6Jmd6JmgXCIsNCxcIuiZqeiZrOiZr+iZteiZtuiZt+iZuuiajeiakeialuiamOiamuianOiaoeiapuiap+iaqOiareiaseias+iatOiateiat+iauOiaueiav+ibgOibgeibg+ibheibkeibkuibleibl+ibmuibnOiboOibo+ibpeibp+iaiOibuuibvOibveichOicheich+ici+icjuicj+ickOick+iclOicmeicnuicn+icoeico1wiXSxbXCI4ZmRiYTFcIixcIuicqOicruicr+icseicsuicueicuuicvOicveicvuidgOidg+idheidjeidmOidneidoeidpOidpeidr+idseidsuidu+ieg1wiLDYsXCLonovonozonpDonpPonpXonpfonpjonpnonp7onqDonqPonqfonqzonq3onq7onrHonrXonr7onr/on4Hon4jon4non4ron47on5Xon5bon5non5ron5zon5/on6Lon6Pon6Ton6ron6von63on7Hon7Pon7jon7ron7/ooIHooIPooIbooInooIrooIvooJDooJnooJLooJPooJTooJjooJrooJvooJzooJ7ooJ/ooKjooK3ooK7ooLDooLLooLVcIl0sW1wiOGZkY2ExXCIsXCLooLrooLzooYHooYPooYXooYjooYnooYrooYvooY7ooZHooZXooZbooZjooZrooZzooZ/ooaDooaTooanoobHoobnoobvoooDoopjooproopvoopzoop/ooqDooqjooqroorroor3oor7oo4Doo4pcIiw0LFwi6KOR6KOS6KOT6KOb6KOe6KOn6KOv6KOw6KOx6KO16KO36KSB6KSG6KSN6KSO6KSP6KSV6KSW6KSY6KSZ6KSa6KSc6KSg6KSm6KSn6KSo6KSw6KSx6KSy6KS16KS56KS66KS+6KWA6KWC6KWF6KWG6KWJ6KWP6KWS6KWX6KWa6KWb6KWc6KWh6KWi6KWj6KWr6KWu6KWw6KWz6KW16KW6XCJdLFtcIjhmZGRhMVwiLFwi6KW76KW86KW96KaJ6KaN6KaQ6KaU6KaV6Kab6Kac6Kaf6Kag6Kal6Kaw6Ka06Ka16Ka26Ka36Ka86KeUXCIsNCxcIuinpeinqeinq+inreinseins+intuinueinveinv+iohOioheioh+ioj+iokeiokuiolOioleionuiooOioouiopOiopuioq+iorOior+ioteiot+ioveiovuipgOipg+ipheiph+ipieipjeipjuipk+ipluipl+ipmOipnOipneipoeippeipp+ipteiptuipt+ipueipuuipu+ipvuipv+iqgOiqg+iqhuiqi+iqj+iqkOiqkuiqluiql+iqmeiqn+iqp+iqqeiqruiqr+iqs1wiXSxbXCI4ZmRlYTFcIixcIuiqtuiqt+iqu+iqvuirg+irhuiriOirieiriuirkeirk+irlOirleirl+irneirn+irrOirsOirtOirteirtuirvOirv+isheishuisi+iskeisnOisnuisn+isiuisreissOist+isvOitglwiLDQsXCLorYjorZLorZPorZTorZnorY3orZ7oraPora3orbborbjorbnorbzorb7oroHoroToroXorovoro3oro/orpTorpXorpzorp7orp/osLjosLnosL3osL7osYXosYfosYnosYvosY/osZHosZPosZTosZfosZjosZvosZ3osZnosaPosaTosabosajosanosa3osbPosbXosbbosbvosb7osoZcIl0sW1wiOGZkZmExXCIsXCLosofosovospDospLospPospnospvospzosqTosrnosrros4Xos4bos4nos4vos4/os5bos5Xos5nos53os6Hos6jos6zos6/os7Dos7Los7Xos7fos7jos77os7/otIHotIPotInotJLotJfotJvotaXotanotazota7otb/otoLotoTotojoto3otpDotpHotpXotp7otp/otqDotqbotqvotqzotq/otrLotrXotrfotrnotrvot4Dot4Xot4bot4fot4jot4rot47ot5Hot5Tot5Xot5fot5not6Tot6Xot6fot6zot7Dotrzot7Hot7Lot7Tot73ouIHouITouIXouIbouIvouJHouJTouJbouKDouKHouKJcIl0sW1wiOGZlMGExXCIsXCLouKPouKbouKfouLHouLPouLbouLfouLjouLnouL3ouYDouYHouYvouY3ouY7ouY/ouZTouZvouZzouZ3ouZ7ouaHouaLouanouazoua3oua/oubDoubHoubnoubroubvouoLouoPouonoupDoupLoupXouproupvoup3oup7ouqLouqfouqnouq3ouq7ourPourXourrourvou4Dou4Hou4Pou4Tou4fou4/ou5Hou5Tou5zou6jou67ou7Dou7Hou7fou7nou7rou63ovIDovILovIfovIjovI/ovJDovJbovJfovJjovJ7ovKDovKHovKPovKXovKfovKjovKzovK3ovK7ovLTovLXovLbovLfovLrovYDovYFcIl0sW1wiOGZlMWExXCIsXCLovYPovYfovY/ovZFcIiw0LFwi6L2Y6L2d6L2e6L2l6L6d6L6g6L6h6L6k6L6l6L6m6L616L626L646L6+6L+A6L+B6L+G6L+K6L+L6L+N6L+Q6L+S6L+T6L+V6L+g6L+j6L+k6L+o6L+u6L+x6L+16L+26L+76L++6YCC6YCE6YCI6YCM6YCY6YCb6YCo6YCp6YCv6YCq6YCs6YCt6YCz6YC06YC36YC/6YGD6YGE6YGM6YGb6YGd6YGi6YGm6YGn6YGs6YGw6YG06YG56YKF6YKI6YKL6YKM6YKO6YKQ6YKV6YKX6YKY6YKZ6YKb6YKg6YKh6YKi6YKl6YKw6YKy6YKz6YK06YK26YK96YOM6YK+6YODXCJdLFtcIjhmZTJhMVwiLFwi6YOE6YOF6YOH6YOI6YOV6YOX6YOY6YOZ6YOc6YOd6YOf6YOl6YOS6YO26YOr6YOv6YOw6YO06YO+6YO/6YSA6YSE6YSF6YSG6YSI6YSN6YSQ6YSU6YSW6YSX6YSY6YSa6YSc6YSe6YSg6YSl6YSi6YSj6YSn6YSp6YSu6YSv6YSx6YS06YS26YS36YS56YS66YS86YS96YWD6YWH6YWI6YWP6YWT6YWX6YWZ6YWa6YWb6YWh6YWk6YWn6YWt6YW06YW56YW66YW76YaB6YaD6YaF6YaG6YaK6YaO6YaR6YaT6YaU6YaV6YaY6Yae6Yah6Yam6Yao6Yas6Yat6Yau6Yaw6Yax6Yay6Yaz6Ya26Ya76Ya86Ya96Ya/XCJdLFtcIjhmZTNhMVwiLFwi6YeC6YeD6YeF6YeT6YeU6YeX6YeZ6Yea6Yee6Yek6Yel6Yep6Yeq6YesXCIsNSxcIumHt+mHuemHu+mHvemIgOmIgemIhOmIhemIhumIh+mIiemIiumIjOmIkOmIkumIk+mIlumImOmInOmInemIo+mIpOmIpemIpumIqOmIrumIr+mIsOmIs+mItemItumIuOmIuemIuumIvOmIvumJgOmJgumJg+mJhumJh+mJiumJjemJjumJj+mJkemJmOmJmemJnOmJnemJoOmJoemJpemJp+mJqOmJqemJrumJr+mJsOmJtVwiLDQsXCLpibvpibzpib3pib/piojpionpiorpio3pio7pipLpipdcIl0sW1wiOGZlNGExXCIsXCLpipnpip/piqDpiqTpiqXpiqfpiqjpiqvpiq/pirLpirbpirjpirrpirvpirzpir3pir9cIiw0LFwi6YuF6YuG6YuH6YuI6YuL6YuM6YuN6YuO6YuQ6YuT6YuV6YuX6YuY6YuZ6Yuc6Yud6Yuf6Yug6Yuh6Yuj6Yul6Yun6Yuo6Yus6Yuu6Yuw6Yu56Yu76Yu/6YyA6YyC6YyI6YyN6YyR6YyU6YyV6Yyc6Yyd6Yye6Yyf6Yyh6Yyk6Yyl6Yyn6Yyp6Yyq6Yyz6Yy06Yy26Yy36Y2H6Y2I6Y2J6Y2Q6Y2R6Y2S6Y2V6Y2X6Y2Y6Y2a6Y2e6Y2k6Y2l6Y2n6Y2p6Y2q6Y2t6Y2v6Y2w6Y2x6Y2z6Y206Y22XCJdLFtcIjhmZTVhMVwiLFwi6Y266Y296Y2/6Y6A6Y6B6Y6C6Y6I6Y6K6Y6L6Y6N6Y6P6Y6S6Y6V6Y6Y6Y6b6Y6e6Y6h6Y6j6Y6k6Y6m6Y6o6Y6r6Y606Y616Y626Y666Y6p6Y+B6Y+E6Y+F6Y+G6Y+H6Y+JXCIsNCxcIumPk+mPmemPnOmPnumPn+mPoumPpumPp+mPuemPt+mPuOmPuumPu+mPvemQgemQgumQhOmQiOmQiemQjemQjumQj+mQlemQlumQl+mQn+mQrumQr+mQsemQsumQs+mQtOmQu+mQv+mQvemRg+mRhemRiOmRiumRjOmRlemRmemRnOmRn+mRoemRo+mRqOmRq+mRremRrumRr+mRsemRsumShOmSg+mVuOmVuVwiXSxbXCI4ZmU2YTFcIixcIumVvumWhOmWiOmWjOmWjemWjumWnemWnumWn+mWoemWpumWqemWq+mWrOmWtOmWtumWuumWvemWv+mXhumXiOmXiemXi+mXkOmXkemXkumXk+mXmemXmumXnemXnumXn+mXoOmXpOmXpumYnemYnumYoumYpOmYpemYpumYrOmYsemYs+mYt+mYuOmYuemYuumYvOmYvemZgemZkumZlOmZlumZl+mZmOmZoemZrumZtOmZu+mZvOmZvumZv+magemagumag+mahOmaiemakemalumamumaneman+mapOmapemapumaqemarumar+mas+mauumbiumbkuW2sumbmOmbmumbnembnumbn+mbqembr+mbsembuumcglwiXSxbXCI4ZmU3YTFcIixcIumcg+mchemciemcmumcm+mcnemcoemcoumco+mcqOmcsemcs+mdgemdg+mdiumdjumdj+mdlemdl+mdmOmdmumdm+mdo+mdp+mdqumdrumds+mdtumdt+mduOmdu+mdvemdv+megOmeiemelemelumel+memememumenumen+meoumerOmerumesemesumetemetumeuOmeuemeuumevOmevumev+mfgemfhOmfhemfh+mfiemfiumfjOmfjemfjumfkOmfkemflOmfl+mfmOmfmemfnemfnumfoOmfm+mfoemfpOmfr+mfsemftOmft+mfuOmfuumgh+mgiumgmemgjemgjumglOmglumgnOmgnumgoOmgo+mgplwiXSxbXCI4ZmU4YTFcIixcIumgq+mgrumgr+mgsOmgsumgs+mgtemgpemgvumhhOmhh+mhiumhkemhkumhk+mhlumhl+mhmemhmumhoumho+mhpemhpumhqumhrOmiq+miremirumisOmitOmit+miuOmiuumiu+miv+mjgumjhemjiOmjjOmjoemjo+mjpemjpumjp+mjqumjs+mjtumkgumkh+mkiOmkkemklemklumkl+mkmumkm+mknOmkn+mkoumkpumkp+mkq+mksVwiLDQsXCLppLnppLrppLvppLzppYDppYHppYbppYfppYjppY3ppY7ppZTppZjppZnppZvppZzppZ7ppZ/ppaDpppvppp3ppp/ppqbpprDpprHpprLpprVcIl0sW1wiOGZlOWExXCIsXCLpprnpprrppr3ppr/pp4Ppp4npp5Ppp5Tpp5npp5rpp5zpp57pp6fpp6rpp6vpp6zpp7Dpp7Tpp7Xpp7npp73pp77pqILpqIPpqITpqIvpqIzpqJDpqJHpqJbpqJ7pqKDpqKLpqKPpqKTpqKfpqK3pqK7pqLPpqLXpqLbpqLjpqYfpqYHpqYTpqYrpqYvpqYzpqY7pqZHpqZTpqZbpqZ3pqqrpqqzpqq7pqq/pqrLpqrTpqrXpqrbpqrnpqrvpqr7pqr/pq4Hpq4Ppq4bpq4jpq47pq5Dpq5Lpq5Xpq5bpq5fpq5vpq5zpq6Dpq6Tpq6Xpq6fpq6npq6zpq7Lpq7Ppq7Xpq7npq7rpq73pq79cIiw0XSxbXCI4ZmVhYTFcIixcIumshOmshemsiOmsiemsi+msjOmsjemsjumskOmskumslumsmemsm+msnOmsoOmspumsq+msremss+mstOmstemst+msuemsuumsvemtiOmti+mtjOmtlemtlumtl+mtm+mtnumtoemto+mtpemtpumtqOmtqlwiLDQsXCLprbPprbXprbfprbjprbnprb/proDproTproXprobprofpronprorprovpro3pro/prpDprpTprprprp3prp7prqbprqfprqnprqzprrDprrHprrLprrfprrjprrvprrzprr7prr/pr4Hpr4fpr4jpr47pr5Dpr5fpr5jpr53pr5/pr6Xpr6fpr6rpr6vpr6/pr7Ppr7fpr7hcIl0sW1wiOGZlYmExXCIsXCLpr7npr7rpr73pr7/psIDpsILpsIvpsI/psJHpsJbpsJjpsJnpsJrpsJzpsJ7psKLpsKPpsKZcIiw0LFwi6bCx6bC16bC26bC36bC96bGB6bGD6bGE6bGF6bGJ6bGK6bGO6bGP6bGQ6bGT6bGU6bGW6bGY6bGb6bGd6bGe6bGf6bGj6bGp6bGq6bGc6bGr6bGo6bGu6bGw6bGy6bG16bG36bG76bOm6bOy6bO36bO56bSL6bSC6bSR6bSX6bSY6bSc6bSd6bSe6bSv6bSw6bSy6bSz6bS06bS66bS86bWF6bS96bWC6bWD6bWH6bWK6bWT6bWU6bWf6bWj6bWi6bWl6bWp6bWq6bWr6bWw6bW26bW36bW7XCJdLFtcIjhmZWNhMVwiLFwi6bW86bW+6baD6baE6baG6baK6baN6baO6baS6baT6baV6baW6baX6baY6bah6baq6bas6bau6bax6ba16ba56ba86ba/6beD6beH6beJ6beK6beU6beV6beW6beX6bea6bee6bef6beg6bel6ben6bep6ber6beu6bew6bez6be06be+6biK6biC6biH6biO6biQ6biR6biS6biV6biW6biZ6bic6bid6bm66bm76bm86bqA6bqC6bqD6bqE6bqF6bqH6bqO6bqP6bqW6bqY6bqb6bqe6bqk6bqo6bqs6bqu6bqv6bqw6bqz6bq06bq16buG6buI6buL6buV6buf6buk6bun6bus6but6buu6buw6bux6buy6bu1XCJdLFtcIjhmZWRhMVwiLFwi6bu46bu/6byC6byD6byJ6byP6byQ6byR6byS6byU6byW6byX6byZ6bya6byb6byf6byi6bym6byq6byr6byv6byx6byy6by06by36by56by66by86by96by/6b2B6b2DXCIsNCxcIum9k+m9lem9lum9l+m9mOm9mum9nem9num9qOm9qem9rVwiLDQsXCLpvbPpvbXpvbrpvb3pvo/pvpDpvpHpvpLpvpTpvpbpvpfpvp7pvqHpvqLpvqPpvqVcIl1dJyl9LGZ1bmN0aW9uKHQpe3QuZXhwb3J0cz1KU09OLnBhcnNlKCd7XCJ1Q2hhcnNcIjpbMTI4LDE2NSwxNjksMTc4LDE4NCwyMTYsMjI2LDIzNSwyMzgsMjQ0LDI0OCwyNTEsMjUzLDI1OCwyNzYsMjg0LDMwMCwzMjUsMzI5LDMzNCwzNjQsNDYzLDQ2NSw0NjcsNDY5LDQ3MSw0NzMsNDc1LDQ3Nyw1MDYsNTk0LDYxMCw3MTIsNzE2LDczMCw5MzAsOTM4LDk2Miw5NzAsMTAyNiwxMTA0LDExMDYsODIwOSw4MjE1LDgyMTgsODIyMiw4MjMxLDgyNDEsODI0NCw4MjQ2LDgyNTIsODM2NSw4NDUyLDg0NTQsODQ1OCw4NDcxLDg0ODIsODU1Niw4NTcwLDg1OTYsODYwMiw4NzEzLDg3MjAsODcyMiw4NzI2LDg3MzEsODczNyw4NzQwLDg3NDIsODc0OCw4NzUxLDg3NjAsODc2Niw4Nzc3LDg3ODEsODc4Nyw4ODAyLDg4MDgsODgxNiw4ODU0LDg4NTgsODg3MCw4ODk2LDg5NzksOTMyMiw5MzcyLDk1NDgsOTU4OCw5NjE2LDk2MjIsOTYzNCw5NjUyLDk2NjIsOTY3Miw5Njc2LDk2ODAsOTcwMiw5NzM1LDk3MzgsOTc5Myw5Nzk1LDExOTA2LDExOTA5LDExOTEzLDExOTE3LDExOTI4LDExOTQ0LDExOTQ3LDExOTUxLDExOTU2LDExOTYwLDExOTY0LDExOTc5LDEyMjg0LDEyMjkyLDEyMzEyLDEyMzE5LDEyMzMwLDEyMzUxLDEyNDM2LDEyNDQ3LDEyNTM1LDEyNTQzLDEyNTg2LDEyODQyLDEyODUwLDEyOTY0LDEzMjAwLDEzMjE1LDEzMjE4LDEzMjUzLDEzMjYzLDEzMjY3LDEzMjcwLDEzMzg0LDEzNDI4LDEzNzI3LDEzODM5LDEzODUxLDE0NjE3LDE0NzAzLDE0ODAxLDE0ODE2LDE0OTY0LDE1MTgzLDE1NDcxLDE1NTg1LDE2NDcxLDE2NzM2LDE3MjA4LDE3MzI1LDE3MzMwLDE3Mzc0LDE3NjIzLDE3OTk3LDE4MDE4LDE4MjEyLDE4MjE4LDE4MzAxLDE4MzE4LDE4NzYwLDE4ODExLDE4ODE0LDE4ODIwLDE4ODIzLDE4ODQ0LDE4ODQ4LDE4ODcyLDE5NTc2LDE5NjIwLDE5NzM4LDE5ODg3LDQwODcwLDU5MjQ0LDU5MzM2LDU5MzY3LDU5NDEzLDU5NDE3LDU5NDIzLDU5NDMxLDU5NDM3LDU5NDQzLDU5NDUyLDU5NDYwLDU5NDc4LDU5NDkzLDYzNzg5LDYzODY2LDYzODk0LDYzOTc2LDYzOTg2LDY0MDE2LDY0MDE4LDY0MDIxLDY0MDI1LDY0MDM0LDY0MDM3LDY0MDQyLDY1MDc0LDY1MDkzLDY1MTA3LDY1MTEyLDY1MTI3LDY1MTMyLDY1Mzc1LDY1NTEwLDY1NTM2XSxcImdiQ2hhcnNcIjpbMCwzNiwzOCw0NSw1MCw4MSw4OSw5NSw5NiwxMDAsMTAzLDEwNCwxMDUsMTA5LDEyNiwxMzMsMTQ4LDE3MiwxNzUsMTc5LDIwOCwzMDYsMzA3LDMwOCwzMDksMzEwLDMxMSwzMTIsMzEzLDM0MSw0MjgsNDQzLDU0NCw1NDUsNTU4LDc0MSw3NDIsNzQ5LDc1MCw4MDUsODE5LDgyMCw3OTIyLDc5MjQsNzkyNSw3OTI3LDc5MzQsNzk0Myw3OTQ0LDc5NDUsNzk1MCw4MDYyLDgxNDgsODE0OSw4MTUyLDgxNjQsODE3NCw4MjM2LDgyNDAsODI2Miw4MjY0LDgzNzQsODM4MCw4MzgxLDgzODQsODM4OCw4MzkwLDgzOTIsODM5Myw4Mzk0LDgzOTYsODQwMSw4NDA2LDg0MTYsODQxOSw4NDI0LDg0MzcsODQzOSw4NDQ1LDg0ODIsODQ4NSw4NDk2LDg1MjEsODYwMyw4OTM2LDg5NDYsOTA0Niw5MDUwLDkwNjMsOTA2Niw5MDc2LDkwOTIsOTEwMCw5MTA4LDkxMTEsOTExMyw5MTMxLDkxNjIsOTE2NCw5MjE4LDkyMTksMTEzMjksMTEzMzEsMTEzMzQsMTEzMzYsMTEzNDYsMTEzNjEsMTEzNjMsMTEzNjYsMTEzNzAsMTEzNzIsMTEzNzUsMTEzODksMTE2ODIsMTE2ODYsMTE2ODcsMTE2OTIsMTE2OTQsMTE3MTQsMTE3MTYsMTE3MjMsMTE3MjUsMTE3MzAsMTE3MzYsMTE5ODIsMTE5ODksMTIxMDIsMTIzMzYsMTIzNDgsMTIzNTAsMTIzODQsMTIzOTMsMTIzOTUsMTIzOTcsMTI1MTAsMTI1NTMsMTI4NTEsMTI5NjIsMTI5NzMsMTM3MzgsMTM4MjMsMTM5MTksMTM5MzMsMTQwODAsMTQyOTgsMTQ1ODUsMTQ2OTgsMTU1ODMsMTU4NDcsMTYzMTgsMTY0MzQsMTY0MzgsMTY0ODEsMTY3MjksMTcxMDIsMTcxMjIsMTczMTUsMTczMjAsMTc0MDIsMTc0MTgsMTc4NTksMTc5MDksMTc5MTEsMTc5MTUsMTc5MTYsMTc5MzYsMTc5MzksMTc5NjEsMTg2NjQsMTg3MDMsMTg4MTQsMTg5NjIsMTkwNDMsMzM0NjksMzM0NzAsMzM0NzEsMzM0ODQsMzM0ODUsMzM0OTAsMzM0OTcsMzM1MDEsMzM1MDUsMzM1MTMsMzM1MjAsMzM1MzYsMzM1NTAsMzc4NDUsMzc5MjEsMzc5NDgsMzgwMjksMzgwMzgsMzgwNjQsMzgwNjUsMzgwNjYsMzgwNjksMzgwNzUsMzgwNzYsMzgwNzgsMzkxMDgsMzkxMDksMzkxMTMsMzkxMTQsMzkxMTUsMzkxMTYsMzkyNjUsMzkzOTQsMTg5MDAwXX0nKX0sZnVuY3Rpb24odCl7dC5leHBvcnRzPUpTT04ucGFyc2UoJ1tbXCIwXCIsXCJcXFxcdTAwMDBcIiwxMjddLFtcIjgxNDFcIixcIuqwguqwg+qwheqwhuqwi1wiLDQsXCLqsJjqsJ7qsJ/qsKHqsKLqsKPqsKVcIiw2LFwi6rCu6rCy6rCz6rC0XCJdLFtcIjgxNjFcIixcIuqwteqwtuqwt+qwuuqwu+qwveqwvuqwv+qxgVwiLDksXCLqsYzqsY5cIiw1LFwi6rGVXCJdLFtcIjgxODFcIixcIuqxluqxl+qxmeqxmuqxm+qxnVwiLDE4LFwi6rGy6rGz6rG16rG26rG56rG7XCIsNCxcIuqyguqyh+qyiOqyjeqyjuqyj+qykeqykuqyk+qylVwiLDYsXCLqsp7qsqJcIiw1LFwi6rKr6rKt6rKu6rKxXCIsNixcIuqyuuqyvuqyv+qzgOqzguqzg+qzheqzhuqzh+qzieqziuqzi+qzjVwiLDcsXCLqs5bqs5hcIiw3LFwi6rOi6rOj6rOl6rOm6rOp6rOr6rOt6rOu6rOy6rO06rO3XCIsNCxcIuqzvuqzv+q0geq0guq0g+q0heq0h1wiLDQsXCLqtI7qtJDqtJLqtJNcIl0sW1wiODI0MVwiLFwi6rSU6rSV6rSW6rSX6rSZ6rSa6rSb6rSd6rSe6rSf6rShXCIsNyxcIuq0quq0q+q0rlwiLDVdLFtcIjgyNjFcIixcIuq0tuq0t+q0ueq0uuq0u+q0vVwiLDYsXCLqtYbqtYjqtYpcIiw1LFwi6rWR6rWS6rWT6rWV6rWW6rWXXCJdLFtcIjgyODFcIixcIuq1mVwiLDcsXCLqtaLqtaRcIiw3LFwi6rWu6rWv6rWx6rWy6rW36rW46rW56rW66rW+6raA6raDXCIsNCxcIuq2iuq2i+q2jeq2juq2j+q2kVwiLDEwLFwi6raeXCIsNSxcIuq2pVwiLDE3LFwi6ra4XCIsNyxcIuq3guq3g+q3heq3huq3h+q3iVwiLDYsXCLqt5Lqt5RcIiw3LFwi6red6ree6ref6reh6rei6rej6relXCIsMThdLFtcIjgzNDFcIixcIuq3uuq3u+q3veq3vuq4glwiLDUsXCLquIrquIzquI5cIiw1LFwi6riVXCIsN10sW1wiODM2MVwiLFwi6ridXCIsMTgsXCLquLLquLPquLXquLbquLnquLvquLxcIl0sW1wiODM4MVwiLFwi6ri96ri+6ri/6rmC6rmE6rmH6rmI6rmJ6rmL6rmP6rmR6rmS6rmT6rmV6rmXXCIsNCxcIuq5nuq5ouq5o+q5pOq5puq5p+q5quq5q+q5req5ruq5r+q5sVwiLDYsXCLqubrqub5cIiw1LFwi6rqGXCIsNSxcIuq6jVwiLDQ2LFwi6rq/6ruB6ruC6ruD6ruFXCIsNixcIuq7juq7klwiLDUsXCLqu5rqu5vqu51cIiw4XSxbXCI4NDQxXCIsXCLqu6bqu6fqu6nqu6rqu6zqu65cIiw1LFwi6ru16ru26ru36ru56ru66ru76ru9XCIsOF0sW1wiODQ2MVwiLFwi6ryG6ryJ6ryK6ryL6ryM6ryO6ryP6ryRXCIsMThdLFtcIjg0ODFcIixcIuq8pFwiLDcsXCLqvK7qvK/qvLHqvLPqvLVcIiw2LFwi6ry+6r2A6r2E6r2F6r2G6r2H6r2KXCIsNSxcIuq9kVwiLDEwLFwi6r2eXCIsNSxcIuq9plwiLDE4LFwi6r26XCIsNSxcIuq+geq+guq+g+q+heq+huq+h+q+iVwiLDYsXCLqvpLqvpPqvpTqvpZcIiw1LFwi6r6dXCIsMjYsXCLqvrrqvrvqvr3qvr5cIl0sW1wiODU0MVwiLFwi6r6/6r+BXCIsNSxcIuq/iuq/jOq/j1wiLDQsXCLqv5VcIiw2LFwi6r+dXCIsNF0sW1wiODU2MVwiLFwi6r+iXCIsNSxcIuq/qlwiLDUsXCLqv7Lqv7Pqv7Xqv7bqv7fqv7lcIiw2LFwi64CC64CDXCJdLFtcIjg1ODFcIixcIuuAhVwiLDYsXCLrgI3rgI7rgI/rgJHrgJLrgJPrgJVcIiw2LFwi64CeXCIsOSxcIuuAqVwiLDI2LFwi64GG64GH64GJ64GL64GN64GP64GQ64GR64GS64GW64GY64Ga64Gb64Gc64GeXCIsMjksXCLrgb7rgb/rgoHrgoLrgoPrgoVcIiw2LFwi64KO64KQ64KSXCIsNSxcIuuCm+uCneuCnuuCo+uCpFwiXSxbXCI4NjQxXCIsXCLrgqXrgqbrgqfrgqrrgrDrgrLrgrbrgrfrgrnrgrrrgrvrgr1cIiw2LFwi64OG64OKXCIsNSxcIuuDklwiXSxbXCI4NjYxXCIsXCLrg5Prg5Xrg5brg5frg5lcIiw2LFwi64Oh64Oi64Oj64Ok64OmXCIsMTBdLFtcIjg2ODFcIixcIuuDsVwiLDIyLFwi64SK64SN64SO64SP64SR64SU64SV64SW64SX64Sa64SeXCIsNCxcIuuEpuuEp+uEqeuEquuEq+uErVwiLDYsXCLrhLbrhLpcIiw1LFwi64WC64WD64WF64WG64WH64WJXCIsNixcIuuFkuuFk+uFluuFl+uFmeuFmuuFm+uFneuFnuuFn+uFoVwiLDIyLFwi64W664W764W964W+64W/64aB64aDXCIsNCxcIuuGiuuGjOuGjuuGj+uGkOuGkeuGleuGluuGl+uGmeuGmuuGm+uGnVwiXSxbXCI4NzQxXCIsXCLrhp5cIiw5LFwi64apXCIsMTVdLFtcIjg3NjFcIixcIuuGuVwiLDE4LFwi64eN64eO64eP64eR64eS64eT64eVXCJdLFtcIjg3ODFcIixcIuuHllwiLDUsXCLrh57rh6BcIiw3LFwi64eq64er64et64eu64ev64exXCIsNyxcIuuHuuuHvOuHvlwiLDUsXCLriIbriIfriInriIrriI1cIiw2LFwi64iW64iY64iaXCIsNSxcIuuIoVwiLDE4LFwi64i1XCIsNixcIuuIvVwiLDI2LFwi64mZ64ma64mb64md64me64mf64mhXCIsNixcIuuJqlwiLDRdLFtcIjg4NDFcIixcIuuJr1wiLDQsXCLribZcIiw1LFwi64m9XCIsNixcIuuKhuuKh+uKiOuKilwiLDRdLFtcIjg4NjFcIixcIuuKj+uKkuuKk+uKleuKluuKl+uKm1wiLDQsXCLriqLriqTriqfriqjriqnriqvriq3riq7riq/rirHrirLrirPrirXrirbrirdcIl0sW1wiODg4MVwiLFwi64q4XCIsMTUsXCLri4rri4vri43ri47ri4/ri5Hri5NcIiw0LFwi64ua64uc64ue64uf64ug64uh64uj64un64up64uq64uw64ux64uy64u264u864u964u+64yC64yD64yF64yG64yH64yJXCIsNixcIuuMkuuMllwiLDUsXCLrjJ1cIiw1NCxcIuuNl+uNmeuNmuuNneuNoOuNoeuNouuNo1wiXSxbXCI4OTQxXCIsXCLrjabrjajrjarrjazrja3rja/rjbLrjbPrjbXrjbbrjbfrjblcIiw2LFwi646C646GXCIsNSxcIuuOjVwiXSxbXCI4OTYxXCIsXCLrjo7rjo/rjpHrjpLrjpPrjpVcIiwxMCxcIuuOolwiLDUsXCLrjqnrjqrrjqvrjq1cIl0sW1wiODk4MVwiLFwi646uXCIsMjEsXCLrj4brj4frj4nrj4rrj43rj4/rj5Hrj5Lrj5Prj5brj5jrj5rrj5zrj57rj5/rj6Hrj6Lrj6Prj6Xrj6brj6frj6lcIiwxOCxcIuuPvVwiLDE4LFwi65CRXCIsNixcIuuQmeuQmuuQm+uQneuQnuuQn+uQoVwiLDYsXCLrkKrrkKxcIiw3LFwi65C1XCIsMTVdLFtcIjhhNDFcIixcIuuRhVwiLDEwLFwi65GS65GT65GV65GW65GX65GZXCIsNixcIuuRouuRpOuRplwiXSxbXCI4YTYxXCIsXCLrkadcIiw0LFwi65GtXCIsMTgsXCLrkoHrkoJcIl0sW1wiOGE4MVwiLFwi65KDXCIsNCxcIuuSiVwiLDE5LFwi65KeXCIsNSxcIuuSpeuSpuuSp+uSqeuSquuSq+uSrVwiLDcsXCLrkrbrkrjrkrpcIiw1LFwi65OB65OC65OD65OF65OG65OH65OJXCIsNixcIuuTkeuTkuuTk+uTlOuTllwiLDUsXCLrk57rk5/rk6Hrk6Lrk6Xrk6dcIiw0LFwi65Ou65Ow65OyXCIsNSxcIuuTuVwiLDI2LFwi65SW65SX65SZ65Sa65SdXCJdLFtcIjhiNDFcIixcIuuUnlwiLDUsXCLrlKbrlKtcIiw0LFwi65Sy65Sz65S165S265S365S5XCIsNixcIuuVguuVhlwiXSxbXCI4YjYxXCIsXCLrlYfrlYjrlYnrlYrrlY7rlY/rlZHrlZLrlZPrlZVcIiw2LFwi65We65WiXCIsOF0sW1wiOGI4MVwiLFwi65WrXCIsNTIsXCLrlqLrlqPrlqXrlqbrlqfrlqnrlqzrlq3rlq7rlq/rlrLrlrZcIiw0LFwi65a+65a/65eB65eC65eD65eFXCIsNixcIuuXjuuXklwiLDUsXCLrl5lcIiwxOCxcIuuXrVwiLDE4XSxbXCI4YzQxXCIsXCLrmIBcIiwxNSxcIuuYkuuYk+uYleuYluuYl+uYmVwiLDRdLFtcIjhjNjFcIixcIuuYnlwiLDYsXCLrmKZcIiw1LFwi65itXCIsNixcIuuYtVwiLDVdLFtcIjhjODFcIixcIuuYu1wiLDEyLFwi65mJXCIsMjYsXCLrmaXrmabrmafrmalcIiw1MCxcIuuanuuan+uaoeuaouuao+uapVwiLDUsXCLrmq3rmq7rmq/rmrDrmrJcIiwxNl0sW1wiOGQ0MVwiLFwi65uDXCIsMTYsXCLrm5VcIiw4XSxbXCI4ZDYxXCIsXCLrm55cIiwxNyxcIuubseubsuubs+ubteubtuubt+ubueubulwiXSxbXCI4ZDgxXCIsXCLrm7tcIiw0LFwi65yC65yD65yE65yGXCIsMzMsXCLrnKrrnKvrnK3rnK7rnLFcIiw2LFwi65y665y8XCIsNyxcIuudheudhuudh+udieudiuudi+udjVwiLDYsXCLrnZZcIiw5LFwi652h652i652j652l652m652n652pXCIsNixcIuudsuudtOudtlwiLDUsXCLrnb7rnb/rnoHrnoLrnoPrnoVcIiw2LFwi656O656T656U656V656a656b656d656eXCJdLFtcIjhlNDFcIixcIuuen+ueoVwiLDYsXCLrnqrrnq5cIiw1LFwi656265636565XCIsOF0sW1wiOGU2MVwiLFwi65+CXCIsNCxcIuufiOufilwiLDE5XSxbXCI4ZTgxXCIsXCLrn55cIiwxMyxcIuufruufr+ufseufsuufs+uftVwiLDYsXCLrn77roIJcIiw0LFwi66CK66CL66CN66CO66CP66CRXCIsNixcIuugmuugnOugnlwiLDUsXCLroKbroKfroKnroKrroKvroK1cIiw2LFwi66C266C6XCIsNSxcIuuhgeuhguuhg+uhhVwiLDExLFwi66GS66GUXCIsNyxcIuuhnuuhn+uhoeuhouuho+uhpVwiLDYsXCLroa7robDrobJcIiw1LFwi66G566G666G766G9XCIsN10sW1wiOGY0MVwiLFwi66KFXCIsNyxcIuuijlwiLDE3XSxbXCI4ZjYxXCIsXCLroqBcIiw3LFwi66KpXCIsNixcIuuiseuisuuis+uiteuituuit+uiuVwiLDRdLFtcIjhmODFcIixcIuuivuuiv+ujguujhOujhlwiLDUsXCLro43ro47ro4/ro5Hro5Lro5Pro5VcIiw3LFwi66Oe66Og66OiXCIsNSxcIuujquujq+ujreujruujr+ujsVwiLDYsXCLro7rro7zro75cIiw1LFwi66SFXCIsMTgsXCLrpJlcIiw2LFwi66ShXCIsMjYsXCLrpL7rpL/rpYHrpYLrpYPrpYVcIiw2LFwi66WN66WO66WQ66WSXCIsNV0sW1wiOTA0MVwiLFwi66Wa66Wb66Wd66We66Wf66WhXCIsNixcIuulquulrOulrlwiLDUsXCLrpbbrpbfrpbnrpbrrpbvrpb1cIl0sW1wiOTA2MVwiLFwi66W+XCIsNSxcIuumhuumiOumi+umjOumj1wiLDE1XSxbXCI5MDgxXCIsXCLrpp9cIiwxMixcIuumruumr+umseumsuums+umtVwiLDYsXCLrpr7rp4Drp4JcIiw1LFwi66eK66eL66eN66eTXCIsNCxcIuunmuunnOunn+unoOunouunpuunp+unqeunquunq+unrVwiLDYsXCLrp7brp7tcIiw0LFwi66iCXCIsNSxcIuuoiVwiLDExLFwi66iWXCIsMzMsXCLrqLrrqLvrqL3rqL7rqL/rqYHrqYPrqYTrqYXrqYZcIl0sW1wiOTE0MVwiLFwi66mH66mK66mM66mP66mQ66mR66mS66mW66mX66mZ66ma66mb66mdXCIsNixcIuuppuupqlwiLDVdLFtcIjkxNjFcIixcIuupsuups+upteuptuupt+upuVwiLDksXCLrqobrqojrqonrqorrqovrqo1cIiw1XSxbXCI5MTgxXCIsXCLrqpNcIiwyMCxcIuuqquuqreuqruuqr+uqseuqs1wiLDQsXCLrqrrrqrzrqr5cIiw1LFwi66uF66uG66uH66uJXCIsMTQsXCLrq5pcIiwzMyxcIuurveurvuurv+usgeusguusg+ushVwiLDcsXCLrrI7rrJDrrJJcIiw1LFwi66yZ66ya66yb66yd66ye66yf66yhXCIsNl0sW1wiOTI0MVwiLFwi66yo66yq66ysXCIsNyxcIuust+usueusuuusv1wiLDQsXCLrrYbrrYjrrYrrrYvrrYzrrY7rrZHrrZJcIl0sW1wiOTI2MVwiLFwi662T662V662W662X662ZXCIsNyxcIuutouutpFwiLDcsXCLrra1cIiw0XSxbXCI5MjgxXCIsXCLrrbJcIiwyMSxcIuuuieuuiuuui+uujeuujuuuj+uukVwiLDE4LFwi666l666m666n666p666q666r666tXCIsNixcIuuuteuutuuuuFwiLDcsXCLrr4Hrr4Lrr4Prr4Xrr4brr4frr4lcIiw2LFwi66+R66+S66+UXCIsMzUsXCLrr7rrr7vrr73rr77rsIFcIl0sW1wiOTM0MVwiLFwi67CDXCIsNCxcIuuwiuuwjuuwkOuwkuuwk+uwmeuwmuuwoOuwoeuwouuwo+uwpuuwqOuwquuwq+uwrOuwruuwr+uwsuuws+uwtVwiXSxbXCI5MzYxXCIsXCLrsLbrsLfrsLlcIiw2LFwi67GC67GG67GH67GI67GK67GL67GO67GP67GRXCIsOF0sW1wiOTM4MVwiLFwi67Ga67Gb67Gc67GeXCIsMzcsXCLrsobrsofrsonrsorrso3rso9cIiw0LFwi67KW67KY67KbXCIsNCxcIuuyouuyo+uypeuypuuyqVwiLDYsXCLrsrLrsrZcIiw1LFwi67K+67K/67OB67OC67OD67OFXCIsNyxcIuuzjuuzkuuzk+uzlOuzluuzl+uzmeuzmuuzm+uznVwiLDIyLFwi67O367O567O667O767O9XCJdLFtcIjk0NDFcIixcIuuzvlwiLDUsXCLrtIbrtIjrtIpcIiw1LFwi67SR67SS67ST67SVXCIsOF0sW1wiOTQ2MVwiLFwi67SeXCIsNSxcIuu0pVwiLDYsXCLrtK1cIiwxMl0sW1wiOTQ4MVwiLFwi67S6XCIsNSxcIuu1gVwiLDYsXCLrtYrrtYvrtY3rtY7rtY/rtZFcIiw2LFwi67WaXCIsOSxcIuu1peu1puu1p+u1qVwiLDIyLFwi67aC67aD67aF67aG67aLXCIsNCxcIuu2kuu2lOu2luu2l+u2mOu2m+u2nVwiLDYsXCLrtqVcIiwxMCxcIuu2sVwiLDYsXCLrtrlcIiwyNF0sW1wiOTU0MVwiLFwi67eS67eT67eW67eX67eZ67ea67eb67edXCIsMTEsXCLrt6pcIiw1LFwi67exXCJdLFtcIjk1NjFcIixcIuu3suu3s+u3teu3tuu3t+u3uVwiLDYsXCLruIHruILruITruIZcIiw1LFwi67iO67iP67iR67iS67iTXCJdLFtcIjk1ODFcIixcIuu4lVwiLDYsXCLruJ7ruKBcIiwzNSxcIuu5huu5h+u5ieu5iuu5i+u5jeu5j1wiLDQsXCLruZbruZjruZzruZ3ruZ7ruZ/ruaLruaPruaXruabruafruanruatcIiw0LFwi67my67m2XCIsNCxcIuu5vuu5v+u6geu6guu6g+u6hVwiLDYsXCLruo7rupJcIiw1LFwi67qaXCIsMTMsXCLruqlcIiwxNF0sW1wiOTY0MVwiLFwi67q4XCIsMjMsXCLru5Lru5NcIl0sW1wiOTY2MVwiLFwi67uV67uW67uZXCIsNixcIuu7oeu7ouu7plwiLDUsXCLru61cIiw4XSxbXCI5NjgxXCIsXCLru7ZcIiwxMCxcIuu8glwiLDUsXCLrvIpcIiwxMyxcIuu8muu8nlwiLDMzLFwi672C672D672F672G672H672JXCIsNixcIuu9kuu9k+u9lOu9llwiLDQ0XSxbXCI5NzQxXCIsXCLrvoNcIiwxNixcIuu+lVwiLDhdLFtcIjk3NjFcIixcIuu+nlwiLDE3LFwi676xXCIsN10sW1wiOTc4MVwiLFwi6765XCIsMTEsXCLrv4ZcIiw1LFwi67+O67+P67+R67+S67+T67+VXCIsNixcIuu/neu/nuu/oOu/olwiLDg5LFwi7IC97IC+7IC/XCJdLFtcIjk4NDFcIixcIuyBgFwiLDE2LFwi7IGSXCIsNSxcIuyBmeyBmuyBm1wiXSxbXCI5ODYxXCIsXCLsgZ3sgZ7sgZ/sgaFcIiw2LFwi7IGqXCIsMTVdLFtcIjk4ODFcIixcIuyBulwiLDIxLFwi7IKS7IKT7IKV7IKW7IKX7IKZXCIsNixcIuyCouyCpOyCplwiLDUsXCLsgq7sgrHsgrLsgrdcIiw0LFwi7IK+7IOC7IOD7IOE7IOG7IOH7IOK7IOL7ION7IOO7IOP7IORXCIsNixcIuyDmuyDnlwiLDUsXCLsg6bsg6fsg6nsg6rsg6vsg61cIiw2LFwi7IO27IO47IO6XCIsNSxcIuyEgeyEguyEg+yEheyEhuyEh+yEiVwiLDYsXCLshJHshJLshJPshJTshJZcIiw1LFwi7ISh7ISi7ISl7ISo7ISp7ISq7ISr7ISuXCJdLFtcIjk5NDFcIixcIuyEsuyEs+yEtOyEteyEt+yEuuyEu+yEveyEvuyEv+yFgVwiLDYsXCLshYrshY5cIiw1LFwi7IWW7IWXXCJdLFtcIjk5NjFcIixcIuyFmeyFmuyFm+yFnVwiLDYsXCLshabshapcIiw1LFwi7IWx7IWy7IWz7IW17IW27IW37IW57IW67IW7XCJdLFtcIjk5ODFcIixcIuyFvFwiLDgsXCLshoZcIiw1LFwi7IaP7IaR7IaS7IaT7IaV7IaXXCIsNCxcIuyGnuyGoOyGouyGo+yGpOyGpuyGp+yGquyGq+yGreyGruyGr+yGsVwiLDExLFwi7Ia+XCIsNSxcIuyHheyHhuyHh+yHieyHiuyHi+yHjVwiLDYsXCLsh5Xsh5bsh5lcIiw2LFwi7Ieh7Iei7Iej7Iel7Iem7Ien7IepXCIsNixcIuyHsuyHtFwiLDcsXCLsh77sh7/siIHsiILsiIPsiIVcIiw2LFwi7IiO7IiQ7IiSXCIsNSxcIuyImuyIm+yIneyInuyIoeyIouyIo1wiXSxbXCI5YTQxXCIsXCLsiKTsiKXsiKbsiKfsiKrsiKzsiK7siLDsiLPsiLVcIiwxNl0sW1wiOWE2MVwiLFwi7ImG7ImH7ImJXCIsNixcIuyJkuyJk+yJleyJluyJl+yJmVwiLDYsXCLsiaHsiaLsiaPsiaTsiaZcIl0sW1wiOWE4MVwiLFwi7ImnXCIsNCxcIuyJruyJr+yJseyJsuyJs+yJtVwiLDYsXCLsib7sioDsioJcIiw1LFwi7IqKXCIsNSxcIuyKkVwiLDYsXCLsipnsiprsipzsip5cIiw1LFwi7Iqm7Iqn7Iqp7Iqq7Iqr7IquXCIsNSxcIuyKtuyKuOyKulwiLDMzLFwi7Iue7Iuf7Iuh7Iui7IulXCIsNSxcIuyLruyLsOyLsuyLs+yLtOyLteyLt+yLuuyLveyLvuyLv+yMgVwiLDYsXCLsjIrsjIvsjI7sjI9cIl0sW1wiOWI0MVwiLFwi7IyQ7IyR7IyS7IyW7IyX7IyZ7Iya7Iyb7IydXCIsNixcIuyMpuyMp+yMqlwiLDhdLFtcIjliNjFcIixcIuyMs1wiLDE3LFwi7I2GXCIsN10sW1wiOWI4MVwiLFwi7I2OXCIsMjUsXCLsjarsjavsja3sja7sja/sjbHsjbNcIiw0LFwi7I267I277I2+XCIsNSxcIuyOheyOhuyOh+yOieyOiuyOi+yOjVwiLDUwLFwi7I+BXCIsMjIsXCLsj5pcIl0sW1wiOWM0MVwiLFwi7I+b7I+d7I+e7I+h7I+jXCIsNCxcIuyPquyPq+yPrOyPrlwiLDUsXCLsj7bsj7fsj7lcIiw1XSxbXCI5YzYxXCIsXCLsj79cIiw4LFwi7JCJXCIsNixcIuyQkVwiLDldLFtcIjljODFcIixcIuyQm1wiLDgsXCLskKVcIiw2LFwi7JCt7JCu7JCv7JCx7JCy7JCz7JC1XCIsNixcIuyQvlwiLDksXCLskYlcIiwyNixcIuyRpuyRp+yRqeyRquyRq+yRrVwiLDYsXCLskbbskbfskbjskbpcIiw1LFwi7JKBXCIsMTgsXCLskpVcIiw2LFwi7JKdXCIsMTJdLFtcIjlkNDFcIixcIuySqlwiLDEzLFwi7JK57JK67JK77JK9XCIsOF0sW1wiOWQ2MVwiLFwi7JOGXCIsMjVdLFtcIjlkODFcIixcIuyToFwiLDgsXCLsk6pcIiw1LFwi7JOy7JOz7JO17JO27JO37JO57JO77JO87JO97JO+7JSCXCIsOSxcIuyUjeyUjuyUj+yUkeyUkuyUk+yUlVwiLDYsXCLslJ1cIiwxMCxcIuyUquyUq+yUreyUruyUr+yUsVwiLDYsXCLslLrslLzslL5cIiw1LFwi7JWG7JWH7JWL7JWP7JWQ7JWR7JWS7JWW7JWa7JWb7JWc7JWf7JWi7JWj7JWl7JWm7JWn7JWpXCIsNixcIuyVsuyVtlwiLDUsXCLslb7slb/sloHsloLsloPsloXslobslojslonslorslovslo7slpDslpLslpPslpRcIl0sW1wiOWU0MVwiLFwi7JaW7JaZ7Jaa7Jab7Jad7Jae7Jaf7JahXCIsNyxcIuyWqlwiLDksXCLslrZcIl0sW1wiOWU2MVwiLFwi7Ja37Ja67Ja/XCIsNCxcIuyXi+yXjeyXj+yXkuyXk+yXleyXluyXl+yXmVwiLDYsXCLsl6Lsl6Tsl6bsl6dcIl0sW1wiOWU4MVwiLFwi7Jeo7Jep7Jeq7Jer7Jev7Jex7Jey7Jez7Je17Je47Je57Je67Je77JiC7JiD7JiE7JiJ7JiK7JiL7JiN7JiO7JiP7JiRXCIsNixcIuyYmuyYnVwiLDYsXCLsmKbsmKfsmKnsmKrsmKvsmK/smLHsmLLsmLbsmLjsmLrsmLzsmL3smL7smL/smYLsmYPsmYXsmYbsmYfsmYlcIiw2LFwi7JmS7JmWXCIsNSxcIuyZnuyZn+yZoVwiLDEwLFwi7Jmt7Jmu7Jmw7JmyXCIsNSxcIuyZuuyZu+yZveyZvuyZv+yagVwiLDYsXCLsmorsmozsmo5cIiw1LFwi7JqW7JqX7JqZ7Jqa7Jqb7JqdXCIsNixcIuyaplwiXSxbXCI5ZjQxXCIsXCLsmqjsmqpcIiw1LFwi7Jqy7Jqz7Jq17Jq27Jq37Jq7XCIsNCxcIuybguybhOybhlwiLDUsXCLsm45cIl0sW1wiOWY2MVwiLFwi7JuP7JuR7JuS7JuT7JuVXCIsNixcIuybnuybn+ybolwiLDUsXCLsm6rsm6vsm63sm67sm6/sm7Hsm7JcIl0sW1wiOWY4MVwiLFwi7JuzXCIsNCxcIuybuuybu+ybvOybvlwiLDUsXCLsnIbsnIfsnInsnIrsnIvsnI1cIiw2LFwi7JyW7JyY7JyaXCIsNSxcIuycouyco+ycpeycpuycp+ycqVwiLDYsXCLsnLLsnLTsnLbsnLjsnLnsnLrsnLvsnL7snL/snYHsnYLsnYPsnYVcIiw0LFwi7J2L7J2O7J2Q7J2Z7J2a7J2b7J2d7J2e7J2f7J2hXCIsNixcIuydqeydquydrFwiLDcsXCLsnbbsnbfsnbnsnbrsnbvsnb/snoDsnoHsnoLsnobsnovsnozsno3sno/snpLsnpPsnpXsnpnsnptcIiw0LFwi7J6i7J6nXCIsNCxcIuyeruyer+yeseyesuyes+yeteyetuyet1wiXSxbXCJhMDQxXCIsXCLsnrjsnrnsnrrsnrvsnr7sn4JcIiw1LFwi7J+K7J+L7J+N7J+P7J+RXCIsNixcIuyfmeyfmuyfm+yfnFwiXSxbXCJhMDYxXCIsXCLsn55cIiw1LFwi7J+l7J+m7J+n7J+p7J+q7J+r7J+tXCIsMTNdLFtcImEwODFcIixcIuyfu1wiLDQsXCLsoILsoIPsoIXsoIbsoIfsoInsoItcIiw0LFwi7KCS7KCU7KCXXCIsNCxcIuygnuygn+ygoeygouygo+ygpVwiLDYsXCLsoK7soLDsoLJcIiw1LFwi7KC57KC67KC77KC97KC+7KC/7KGBXCIsNixcIuyhiuyhi+yhjlwiLDUsXCLsoZVcIiwyNixcIuyhsuyhs+yhteyhtuyht+yhueyhu1wiLDQsXCLsooLsooTsoojsoonsoorsoo5cIiw1LFwi7KKVXCIsNyxcIuyinuyioOyiouyio+yipFwiXSxbXCJhMTQxXCIsXCLsoqXsoqbsoqfsoqlcIiwxOCxcIuyivuyiv+yjgOyjgVwiXSxbXCJhMTYxXCIsXCLso4Lso4Pso4Xso4bso4fso4nso4rso4vso41cIiw2LFwi7KOW7KOY7KOaXCIsNSxcIuyjouyjo+yjpVwiXSxbXCJhMTgxXCIsXCLso6ZcIiwxNCxcIuyjtlwiLDUsXCLso77so7/spIHspILspIPspIdcIiw0LFwi7KSO44CA44CB44CCwrfigKXigKbCqOOAg8Kt4oCV4oil77y84oi84oCY4oCZ4oCc4oCd44CU44CV44CIXCIsOSxcIsKxw5fDt+KJoOKJpOKJpeKInuKItMKw4oCy4oCz4oSD4oSr77+g77+h77+l4pmC4pmA4oig4oql4oyS4oiC4oiH4omh4omSwqfigLvimIbimIXil4vil4/il47il4fil4bilqHilqDilrPilrLilr3ilrzihpLihpDihpHihpPihpTjgJPiiariiaviiJriiL3iiJ3iiLXiiKviiKziiIjiiIviiobiiofiioLiioPiiKriiKniiKfiiKjvv6JcIl0sW1wiYTI0MVwiLFwi7KSQ7KSSXCIsNSxcIuykmVwiLDE4XSxbXCJhMjYxXCIsXCLspK1cIiw2LFwi7KS1XCIsMThdLFtcImEyODFcIixcIuyliFwiLDcsXCLspZLspZPspZXspZbspZfspZlcIiw2LFwi7KWi7KWkXCIsNyxcIuylreylruylr+KHkuKHlOKIgOKIg8K0772ey4fLmMudy5rLmcK4y5vCocK/y5DiiK7iiJHiiI/CpOKEieKAsOKXgeKXgOKWt+KWtuKZpOKZoOKZoeKZpeKZp+KZo+KKmeKXiOKWo+KXkOKXkeKWkuKWpOKWpeKWqOKWp+KWpuKWqeKZqOKYj+KYjuKYnOKYnsK24oCg4oCh4oaV4oaX4oaZ4oaW4oaY4pmt4pmp4pmq4pms44m/44ic4oSW44+H4oSi44+C44+Y4oSh4oKswq5cIl0sW1wiYTM0MVwiLFwi7KWx7KWy7KWz7KW1XCIsNixcIuylvVwiLDEwLFwi7KaK7KaL7KaN7KaO7KaPXCJdLFtcImEzNjFcIixcIuymkVwiLDYsXCLspprsppzspp5cIiwxNl0sW1wiYTM4MVwiLFwi7KavXCIsMTYsXCLsp4Lsp4Psp4Xsp4bsp4nsp4tcIiw0LFwi7KeS7KeU7KeX7KeY7Keb77yBXCIsNTgsXCLvv6bvvL1cIiwzMixcIu+/o1wiXSxbXCJhNDQxXCIsXCLsp57sp5/sp6Hsp6Psp6Xsp6bsp6jsp6nsp6rsp6vsp67sp7JcIiw1LFwi7Ke67Ke77Ke97Ke+7Ke/7KiB7KiC7KiD7KiEXCJdLFtcImE0NjFcIixcIuyoheyohuyoh+yoiuyojlwiLDUsXCLsqJXsqJbsqJfsqJlcIiwxMl0sW1wiYTQ4MVwiLFwi7Kim7Kin7Kio7KiqXCIsMjgsXCLjhLFcIiw5M10sW1wiYTU0MVwiLFwi7KmHXCIsNCxcIuypjuypj+ypkeypkuypk+yplVwiLDYsXCLsqZ7sqaJcIiw1LFwi7Kmp7KmqXCJdLFtcImE1NjFcIixcIuypq1wiLDE3LFwi7Km+XCIsNSxcIuyqheyqhlwiXSxbXCJhNTgxXCIsXCLsqodcIiwxNixcIuyqmVwiLDE0LFwi4oWwXCIsOV0sW1wiYTViMFwiLFwi4oWgXCIsOV0sW1wiYTVjMVwiLFwizpFcIiwxNixcIs6jXCIsNl0sW1wiYTVlMVwiLFwizrFcIiwxNixcIs+DXCIsNl0sW1wiYTY0MVwiLFwi7KqoXCIsMTksXCLsqr7sqr/sq4Hsq4Lsq4Psq4VcIl0sW1wiYTY2MVwiLFwi7KuGXCIsNSxcIuyrjuyrkOyrkuyrlOyrleyrluyrl+yrmlwiLDUsXCLsq6FcIiw2XSxbXCJhNjgxXCIsXCLsq6jsq6nsq6rsq6vsq61cIiw2LFwi7Ku1XCIsMTgsXCLsrInsrIrilIDilILilIzilJDilJjilJTilJzilKzilKTilLTilLzilIHilIPilI/ilJPilJvilJfilKPilLPilKvilLvilYvilKDilK/ilKjilLfilL/ilJ3ilLDilKXilLjilYLilJLilJHilJrilJnilJbilJXilI7ilI3ilJ7ilJ/ilKHilKLilKbilKfilKnilKrilK3ilK7ilLHilLLilLXilLbilLnilLrilL3ilL7ilYDilYHilYNcIiw3XSxbXCJhNzQxXCIsXCLsrItcIiw0LFwi7KyR7KyS7KyT7KyV7KyW7KyX7KyZXCIsNixcIuysolwiLDddLFtcImE3NjFcIixcIuysqlwiLDIyLFwi7K2C7K2D7K2EXCJdLFtcImE3ODFcIixcIuytheythuyth+ytiuyti+ytjeytjuytj+ytkVwiLDYsXCLsrZrsrZvsrZzsrZ5cIiw1LFwi7K2lXCIsNyxcIuOOleOOluOOl+KEk+OOmOOPhOOOo+OOpOOOpeOOpuOOmVwiLDksXCLjj4rjjo3jjo7jjo/jj4/jjojjjonjj4jjjqfjjqjjjrBcIiw5LFwi446AXCIsNCxcIuOOulwiLDUsXCLjjpBcIiw0LFwi4oSm44+A44+B446K446L446M44+W44+F446t446u446v44+b446p446q446r446s44+d44+Q44+T44+D44+J44+c44+GXCJdLFtcImE4NDFcIixcIuytrVwiLDEwLFwi7K26XCIsMTRdLFtcImE4NjFcIixcIuyuiVwiLDE4LFwi7K6dXCIsNl0sW1wiYTg4MVwiLFwi7K6kXCIsMTksXCLsrrlcIiwxMSxcIsOGw5DCqsSmXCJdLFtcImE4YTZcIixcIsSyXCJdLFtcImE4YThcIixcIsS/xYHDmMWSwrrDnsWmxYpcIl0sW1wiYThiMVwiLFwi44mgXCIsMjcsXCLik5BcIiwyNSxcIuKRoFwiLDE0LFwiwr3ihZPihZTCvMK+4oWb4oWc4oWd4oWeXCJdLFtcImE5NDFcIixcIuyvhVwiLDE0LFwi7K+VXCIsMTBdLFtcImE5NjFcIixcIuyvoOyvoeyvouyvo+yvpeyvpuyvqOyvqlwiLDE4XSxbXCJhOTgxXCIsXCLsr71cIiwxNCxcIuywjuywj+ywkeywkuywk+ywlVwiLDYsXCLssJ7ssJ/ssKDssKPssKTDpsSRw7DEp8SxxLPEuMWAxYLDuMWTw5/DvsWnxYvFieOIgFwiLDI3LFwi4pKcXCIsMjUsXCLikbRcIiwxNCxcIsK5wrLCs+KBtOKBv+KCgeKCguKCg+KChFwiXSxbXCJhYTQxXCIsXCLssKXssKbssKrssKvssK3ssK/ssLFcIiw2LFwi7LC67LC/XCIsNCxcIuyxhuyxh+yxieyxiuyxi+yxjeyxjlwiXSxbXCJhYTYxXCIsXCLssY9cIiw0LFwi7LGW7LGaXCIsNSxcIuyxoeyxouyxo+yxpeyxp+yxqVwiLDYsXCLssbHssbJcIl0sW1wiYWE4MVwiLFwi7LGz7LG07LG2XCIsMjksXCLjgYFcIiw4Ml0sW1wiYWI0MVwiLFwi7LKU7LKV7LKW7LKX7LKa7LKb7LKd7LKe7LKf7LKhXCIsNixcIuyyquyyrlwiLDUsXCLssrbssrfssrlcIl0sW1wiYWI2MVwiLFwi7LK67LK77LK9XCIsNixcIuyzhuyziOyzilwiLDUsXCLss5Hss5Lss5Pss5VcIiw1XSxbXCJhYjgxXCIsXCLss5tcIiw4LFwi7LOlXCIsNixcIuyzreyzruyzr+yzsVwiLDEyLFwi44KhXCIsODVdLFtcImFjNDFcIixcIuyzvuyzv+y0gOy0glwiLDUsXCLstIrstIvstI3stI7stI/stJFcIiw2LFwi7LSa7LSc7LSe7LSf7LSgXCJdLFtcImFjNjFcIixcIuy0oey0ouy0o+y0pey0puy0p+y0qey0quy0q+y0rVwiLDExLFwi7LS6XCIsNF0sW1wiYWM4MVwiLFwi7LS/XCIsMjgsXCLstZ3stZ7stZ/QkFwiLDUsXCLQgdCWXCIsMjVdLFtcImFjZDFcIixcItCwXCIsNSxcItGR0LZcIiwyNV0sW1wiYWQ0MVwiLFwi7LWh7LWi7LWj7LWlXCIsNixcIuy1ruy1sOy1slwiLDUsXCLstblcIiw3XSxbXCJhZDYxXCIsXCLstoFcIiw2LFwi7LaJXCIsMTAsXCLstpbstpfstpnstprstpvstp3stp7stp9cIl0sW1wiYWQ4MVwiLFwi7Lag7Lah7Lai7Laj7Lam7Lao7LaqXCIsNSxcIuy2sVwiLDE4LFwi7LeFXCJdLFtcImFlNDFcIixcIuy3hlwiLDUsXCLst43st47st4/st5FcIiwxNl0sW1wiYWU2MVwiLFwi7LeiXCIsNSxcIuy3qey3quy3q+y3rey3ruy3r+y3sVwiLDYsXCLst7rst7zst75cIiw0XSxbXCJhZTgxXCIsXCLsuIPsuIXsuIbsuIfsuInsuIrsuIvsuI1cIiw2LFwi7LiV7LiW7LiX7LiY7LiaXCIsNSxcIuy4ouy4o+y4pey4puy4p+y4qey4quy4q1wiXSxbXCJhZjQxXCIsXCLsuKzsuK3suK7suK/suLLsuLTsuLZcIiwxOV0sW1wiYWY2MVwiLFwi7LmKXCIsMTMsXCLsuZrsuZvsuZ3suZ7suaJcIiw1LFwi7Lmq7LmsXCJdLFtcImFmODFcIixcIuy5rlwiLDUsXCLsubbsubfsubnsubrsubvsub1cIiw2LFwi7LqG7LqI7LqKXCIsNSxcIuy6kuy6k+y6ley6luy6l+y6mVwiXSxbXCJiMDQxXCIsXCLsuppcIiw1LFwi7Lqi7LqmXCIsNSxcIuy6rlwiLDEyXSxbXCJiMDYxXCIsXCLsurtcIiw1LFwi7LuCXCIsMTldLFtcImIwODFcIixcIuy7llwiLDEzLFwi7Lum7Lun7Lup7Luq7LutXCIsNixcIuy7tuy7ulwiLDUsXCLqsIDqsIHqsITqsIfqsIjqsInqsIrqsJBcIiw3LFwi6rCZXCIsNCxcIuqwoOqwpOqwrOqwreqwr+qwsOqwseqwuOqwueqwvOqxgOqxi+qxjeqxlOqxmOqxnOqxsOqxseqxtOqxt+qxuOqxuuqygOqygeqyg+qyhOqyheqyhuqyieqyiuqyi+qyjOqykOqylOqynOqyneqyn+qyoOqyoeqyqOqyqeqyquqyrOqyr+qysOqyuOqyueqyu+qyvOqyveqzgeqzhOqziOqzjOqzleqzl+qzoOqzoeqzpOqzp+qzqOqzquqzrOqzr+qzsOqzseqzs+qzteqztuqzvOqzveq0gOq0hOq0hlwiXSxbXCJiMTQxXCIsXCLsvILsvIPsvIXsvIbsvIfsvIlcIiw2LFwi7LyS7LyU7LyWXCIsNSxcIuy8ney8nuy8n+y8oey8ouy8o1wiXSxbXCJiMTYxXCIsXCLsvKVcIiw2LFwi7Lyu7LyyXCIsNSxcIuy8uVwiLDExXSxbXCJiMTgxXCIsXCLsvYVcIiwxNCxcIuy9luy9l+y9mey9muy9m+y9nVwiLDYsXCLsvabsvajsvarsvavsvazqtIzqtI3qtI/qtJHqtJjqtJzqtKDqtKnqtKzqtK3qtLTqtLXqtLjqtLzqtYTqtYXqtYfqtYnqtZDqtZTqtZjqtaHqtaPqtazqta3qtbDqtbPqtbTqtbXqtbbqtbvqtbzqtb3qtb/qtoHqtoLqtojqtonqtozqtpDqtpzqtp3qtqTqtrfqt4Dqt4Hqt4Tqt4jqt5Dqt5Hqt5Pqt5zqt6Dqt6Tqt7jqt7nqt7zqt7/quIDquIHquIjquInquIvquI3quJTquLDquLHquLTquLfquLjquLrquYDquYHquYPquYXquYbquYrquYzquY3quY7quZDquZTquZbquZzquZ3quZ/quaDquaHquaXquajquanquazqubDqubhcIl0sW1wiYjI0MVwiLFwi7L2t7L2u7L2v7L2y7L2z7L217L227L237L25XCIsNixcIuy+gey+guy+g+y+hOy+hlwiLDUsXCLsvo1cIl0sW1wiYjI2MVwiLFwi7L6OXCIsMTgsXCLsvqJcIiw1LFwi7L6pXCJdLFtcImIyODFcIixcIuy+qlwiLDUsXCLsvrFcIiwxOCxcIuy/hVwiLDYsXCLqubnqubvqubzqub3quoTquoXquozqurzqur3qur7qu4Dqu4Tqu4zqu43qu4/qu5Dqu5Hqu5jqu5nqu5zqu6jqu6vqu63qu7Tqu7jqu7zqvIfqvIjqvI3qvJDqvKzqvK3qvLDqvLLqvLTqvLzqvL3qvL/qvYHqvYLqvYPqvYjqvYnqvZDqvZzqvZ3qvaTqvaXqvbnqvoDqvoTqvojqvpDqvpHqvpXqvpzqvrjqvrnqvrzqv4Dqv4fqv4jqv4nqv4vqv43qv47qv5Tqv5zqv6jqv6nqv7Dqv7Hqv7Tqv7jrgIDrgIHrgITrgIzrgJDrgJTrgJzrgJ3rgKjrgYTrgYXrgYjrgYrrgYzrgY7rgZPrgZTrgZXrgZfrgZlcIl0sW1wiYjM0MVwiLFwi7L+MXCIsMTksXCLsv6Lsv6Psv6Xsv6bsv6fsv6lcIl0sW1wiYjM2MVwiLFwi7L+qXCIsNSxcIuy/suy/tOy/tlwiLDUsXCLsv73sv77sv7/tgIHtgILtgIPtgIVcIiw1XSxbXCJiMzgxXCIsXCLtgItcIiw1LFwi7YCSXCIsNSxcIu2AmVwiLDE5LFwi64Gd64G864G964KA64KE64KM64KN64KP64KR64KY64KZ64Ka64Kc64Kf64Kg64Kh64Ki64Ko64Kp64KrXCIsNCxcIuuCseuCs+uCtOuCteuCuOuCvOuDhOuDheuDh+uDiOuDieuDkOuDkeuDlOuDmOuDoOuDpeuEiOuEieuEi+uEjOuEkOuEkuuEk+uEmOuEmeuEm+uEnOuEneuEo+uEpOuEpeuEqOuErOuEtOuEteuEt+uEuOuEueuFgOuFgeuFhOuFiOuFkOuFkeuFlOuFleuFmOuFnOuFoOuFuOuFueuFvOuGgOuGguuGiOuGieuGi+uGjeuGkuuGk+uGlOuGmOuGnOuGqOuHjOuHkOuHlOuHnOuHnVwiXSxbXCJiNDQxXCIsXCLtgK5cIiw1LFwi7YC27YC37YC57YC67YC77YC9XCIsNixcIu2Bhu2BiO2BilwiLDVdLFtcImI0NjFcIixcIu2Bke2Bku2Bk+2Ble2Blu2Bl+2BmVwiLDYsXCLtgaFcIiwxMCxcIu2Bru2Br1wiXSxbXCJiNDgxXCIsXCLtgbHtgbLtgbPtgbVcIiw2LFwi7YG+7YG/7YKA7YKCXCIsMTgsXCLrh5/rh6jrh6nrh6zrh7Drh7nrh7vrh73riITriIXriIjriIvriIzriJTriJXriJfriJnriKDriLTriLzriZjriZzriaDriajrianribTribXribzrioTrioXrionripDripHripTripjripnriprriqDriqHriqPriqXriqbriqrriqzrirDrirTri4jri4nri4zri5Dri5Lri5jri5nri5vri53ri6Lri6Tri6Xri6bri6jri6tcIiw0LFwi64uz64u064u164u3XCIsNCxcIuuLv+uMgOuMgeuMhOuMiOuMkOuMkeuMk+uMlOuMleuMnOuNlOuNleuNluuNmOuNm+uNnOuNnuuNn+uNpOuNpVwiXSxbXCJiNTQxXCIsXCLtgpVcIiwxNCxcIu2Cpu2Cp+2Cqe2Cqu2Cq+2CrVwiLDVdLFtcImI1NjFcIixcIu2Cs+2Ctu2CuO2CulwiLDUsXCLtg4Ltg4Ptg4Xtg4btg4ftg4pcIiw1LFwi7YOS7YOWXCIsNF0sW1wiYjU4MVwiLFwi7YOb7YOe7YOf7YOh7YOi7YOj7YOlXCIsNixcIu2Dru2DslwiLDUsXCLtg7lcIiwxMSxcIuuNp+uNqeuNq+uNruuNsOuNseuNtOuNuOuOgOuOgeuOg+uOhOuOheuOjOuOkOuOlOuOoOuOoeuOqOuOrOuPhOuPheuPiOuPi+uPjOuPjuuPkOuPlOuPleuPl+uPmeuPm+uPneuPoOuPpOuPqOuPvOuQkOuQmOuQnOuQoOuQqOuQqeuQq+uQtOuRkOuRkeuRlOuRmOuRoOuRoeuRo+uRpeuRrOuSgOuSiOuSneuSpOuSqOuSrOuSteuSt+uSueuTgOuThOuTiOuTkOuTleuTnOuTneuToOuTo+uTpOuTpuuTrOuTreuTr+uTseuTuOuUlOuUleuUmOuUm+uUnOuUpOuUpeuUp+uUqOuUqeuUquuUsOuUseuUtOuUuFwiXSxbXCJiNjQxXCIsXCLthIVcIiw3LFwi7YSOXCIsMTddLFtcImI2NjFcIixcIu2EoFwiLDE1LFwi7YSy7YSz7YS17YS27YS37YS57YS77YS87YS97YS+XCJdLFtcImI2ODFcIixcIu2Ev+2Fgu2FhlwiLDUsXCLthY7thY/thZHthZLthZPthZVcIiw2LFwi7YWe7YWg7YWiXCIsNSxcIu2Fqe2Fqu2Fq+2FreuVgOuVgeuVg+uVhOuVheuVi+uVjOuVjeuVkOuVlOuVnOuVneuVn+uVoOuVoeuWoOuWoeuWpOuWqOuWquuWq+uWsOuWseuWs+uWtOuWteuWu+uWvOuWveuXgOuXhOuXjOuXjeuXj+uXkOuXkeuXmOuXrOuYkOuYkeuYlOuYmOuYpeuYrOuYtOuZiOuZpOuZqOuanOuaneuaoOuapOuaq+uarOuaseublOubsOubtOubuOucgOucgeucheucqOucqeucrOucr+ucsOucuOucueucu+udhOudiOudjOudlOudleudoOudpOudqOudsOudseuds+udteudvOudveuegOuehOuejOuejeuej+uekOuekeuekuueluuel1wiXSxbXCJiNzQxXCIsXCLtha5cIiwxMyxcIu2FvVwiLDYsXCLthoXthobthofthonthopcIl0sW1wiYjc2MVwiLFwi7YaLXCIsMjAsXCLthqLthqPthqXthqbthqdcIl0sW1wiYjc4MVwiLFwi7YapXCIsNixcIu2Gsu2GtO2Gtu2Gt+2GuO2Gue2Gu+2Gve2Gvu2Gv+2HgVwiLDE0LFwi656Y656Z656c656g656o656p656r656s656t65606561656465+H65+J65+s65+t65+w65+065+865+965+/66CA66CB66CH66CI66CJ66CM66CQ66CY66CZ66Cb66Cd66Ck66Cl66Co66Cs66C066C166C366C466C566GA66GE66GR66GT66Gc66Gd66Gg66Gk66Gs66Gt66Gv66Gx66G466G866KN66Ko66Kw66K066K466OA66OB66OD66OF66OM66OQ66OU66Od66Of66Oh66Oo66Op66Os66Ow66O466O566O766O966SE66SY66Sg66S866S966WA66WE66WM66WP66WR66WY66WZ66Wc66Wg66Wo66WpXCJdLFtcImI4NDFcIixcIu2HkFwiLDcsXCLth5lcIiwxN10sW1wiYjg2MVwiLFwi7YerXCIsOCxcIu2Hte2Htu2Ht+2HuVwiLDEzXSxbXCJiODgxXCIsXCLtiIjtiIpcIiw1LFwi7YiRXCIsMjQsXCLrpavrpa3rpbTrpbXrpbjrpbzrpoTrpoXrpofrponrporrpo3rpo7rpqzrpq3rprDrprTrprzrpr3rpr/rp4Hrp4jrp4nrp4zrp45cIiw0LFwi66eY66eZ66eb66ed66ee66eh66ej66ek66el66eo66es66e066e166e366e466e566e666iA66iB66iI66iV66i466i566i866mA66mC66mI66mJ66mL66mN66mO66mT66mU66mV66mY66mc66mk66ml66mn66mo66mp66mw66mx66m066m466qD66qE66qF66qH66qM66qo66qp66qr66qs66qw66qy66q466q566q766q966uE66uI66uY66uZ66u8XCJdLFtcImI5NDFcIixcIu2Iqu2Iq+2Iru2Ir+2Ise2Isu2Is+2ItVwiLDYsXCLtiL7tiYDtiYJcIiw1LFwi7YmJ7YmK7YmL7YmMXCJdLFtcImI5NjFcIixcIu2JjVwiLDE0LFwi7YmdXCIsNixcIu2Jpe2Jpu2Jp+2JqFwiXSxbXCJiOTgxXCIsXCLtialcIiwyMixcIu2Kgu2Kg+2Khe2Khu2Kh+2Kie2Kiu2Ki+2KjOusgOushOusjeusj+uskeusmOusnOusoOusqeusq+ustOusteustuusuOusu+usvOusveusvuuthOutheuth+utieutjeutj+utkOutlOutmOutoeuto+utrOuuiOuujOuukOuupOuuqOuurOuutOuut+uvgOuvhOuviOuvkOuvk+uvuOuvueuvvOuvv+uwgOuwguuwiOuwieuwi+uwjOuwjeuwj+uwkeuwlFwiLDQsXCLrsJtcIiw0LFwi67Ck67Cl67Cn67Cp67Ct67Cw67Cx67C067C467GA67GB67GD67GE67GF67GJ67GM67GN67GQ67Gd67KE67KF67KI67KL67KM67KO67KU67KV67KXXCJdLFtcImJhNDFcIixcIu2Kje2Kju2Kj+2Kku2Kk+2KlO2KllwiLDUsXCLtip3tip7tip/tiqHtiqLtiqPtiqVcIiw2LFwi7YqtXCJdLFtcImJhNjFcIixcIu2Kru2Kr+2KsO2KslwiLDUsXCLtirrtirvtir3tir7ti4Hti4NcIiw0LFwi7YuK7YuMXCIsNV0sW1wiYmE4MVwiLFwi7YuS7YuT7YuV7YuW7YuX7YuZ7Yua7Yub7YudXCIsNixcIu2LplwiLDksXCLti7Lti7Pti7Xti7bti7fti7nti7rrspnrsprrsqDrsqHrsqTrsqfrsqjrsrDrsrHrsrPrsrTrsrXrsrzrsr3rs4Drs4Trs43rs4/rs5Drs5Hrs5Xrs5jrs5zrs7Trs7Xrs7brs7jrs7zrtITrtIXrtIfrtInrtJDrtJTrtKTrtKzrtYDrtYjrtYnrtYzrtZDrtZjrtZnrtaTrtajrtoDrtoHrtoTrtofrtojrtonrtorrtpDrtpHrtpPrtpXrtpnrtprrtpzrtqTrtrDrtrjrt5Trt5Xrt5jrt5zrt6nrt7Drt7Trt7jruIDruIPruIXruIzruI3ruJDruJTruJzruJ3ruJ/ruYTruYXruYjruYzruY7ruZTruZXruZfruZnruZrruZvruaDruaHruaRcIl0sW1wiYmI0MVwiLFwi7Yu7XCIsNCxcIu2Mgu2MhO2MhlwiLDUsXCLtjI/tjJHtjJLtjJPtjJXtjJdcIiw0LFwi7Yye7Yyi7YyjXCJdLFtcImJiNjFcIixcIu2MpO2Mpu2Mp+2Mqu2Mq+2Mre2Mru2Mr+2MsVwiLDYsXCLtjLrtjL5cIiw1LFwi7Y2G7Y2H7Y2I7Y2JXCJdLFtcImJiODFcIixcIu2NilwiLDMxLFwi67mo67mq67mw67mx67mz67m067m167m767m867m967qA67qE67qM67qN67qP67qQ67qR67qY67qZ67qo67uQ67uR67uU67uX67uY67ug67uj67uk67ul67us67yB67yI67yJ67yY67yZ67yb67yc67yd672A672B672E672I672Q672R672V676U676w67+F67+M67+N67+Q67+U67+c67+f67+h7IC87IGR7IGY7IGc7IGg7IGo7IGp7IKQ7IKR7IKU7IKY7IKg7IKh7IKj7IKl7IKs7IKt7IKv7IKw7IKz7IK07IK17IK27IK87IK97IK/7IOA7IOB7IOF7IOI7IOJ7IOM7IOQ7IOY7IOZ7IOb7IOc7IOd7IOkXCJdLFtcImJjNDFcIixcIu2NqlwiLDE3LFwi7Y2+7Y2/7Y6B7Y6C7Y6D7Y6F7Y6G7Y6HXCJdLFtcImJjNjFcIixcIu2OiO2Oie2Oiu2Oi+2Oju2OklwiLDUsXCLtjprtjpvtjp3tjp7tjp/tjqFcIiw2LFwi7Y6q7Y6s7Y6uXCJdLFtcImJjODFcIixcIu2Or1wiLDQsXCLtjrXtjrbtjrftjrntjrrtjrvtjr1cIiw2LFwi7Y+G7Y+H7Y+KXCIsNSxcIu2PkVwiLDUsXCLsg6Xsg6jsg6zsg7Tsg7Xsg7fsg7nshIDshITshIjshJDshJXshJxcIiw0LFwi7ISj7ISk7ISm7ISn7ISs7ISt7ISv7ISw7ISx7IS27IS47IS57IS87IWA7IWI7IWJ7IWL7IWM7IWN7IWU7IWV7IWY7IWc7IWk7IWl7IWn7IWo7IWp7IWw7IW07IW47IaF7IaM7IaN7IaO7IaQ7IaU7IaW7Iac7Iad7Iaf7Iah7Ial7Iao7Iap7Ias7Iaw7Ia97IeE7IeI7IeM7IeU7IeX7IeY7Ieg7Iek7Ieo7Iew7Iex7Iez7Ie87Ie97IiA7IiE7IiM7IiN7IiP7IiR7IiY7IiZ7Iic7Iif7Iig7Iio7Iip7Iir7IitXCJdLFtcImJkNDFcIixcIu2Pl+2PmVwiLDcsXCLtj6Ltj6RcIiw3LFwi7Y+u7Y+v7Y+x7Y+y7Y+z7Y+17Y+27Y+3XCJdLFtcImJkNjFcIixcIu2PuO2Pue2Puu2Pu+2Pvu2QgO2QglwiLDUsXCLtkIlcIiwxM10sW1wiYmQ4MVwiLFwi7ZCXXCIsNSxcIu2QnlwiLDI1LFwi7Iiv7Iix7Iiy7Ii07ImI7ImQ7ImR7ImU7ImY7Img7Iml7Ims7Imt7Imw7Im07Im87Im97Im/7IqB7IqI7IqJ7IqQ7IqY7Iqb7Iqd7Iqk7Iql7Iqo7Iqs7Iqt7Iq07Iq17Iq37Iq57Iuc7Iud7Iug7Iuj7Iuk7Iur7Ius7Iut7Iuv7Iux7Iu27Iu47Iu57Iu77Iu87IyA7IyI7IyJ7IyM7IyN7IyT7IyU7IyV7IyY7Iyc7Iyk7Iyl7Iyo7Iyp7I2F7I2o7I2p7I2s7I2w7I2y7I247I257I287I297I6E7I6I7I6M7I+A7I+Y7I+Z7I+c7I+f7I+g7I+i7I+o7I+p7I+t7I+07I+17I+47JCI7JCQ7JCk7JCs7JCwXCJdLFtcImJlNDFcIixcIu2QuFwiLDcsXCLtkYHtkYLtkYPtkYVcIiwxNF0sW1wiYmU2MVwiLFwi7ZGUXCIsNyxcIu2Rne2Rnu2Rn+2Roe2Rou2Ro+2RpVwiLDcsXCLtka7tkbDtkbHtkbJcIl0sW1wiYmU4MVwiLFwi7ZGzXCIsNCxcIu2Ruu2Ru+2Rve2Rvu2Sge2Sg1wiLDQsXCLtkortkoztko5cIiw1LFwi7ZKVXCIsOCxcIuyQtOyQvOyQveyRiOyRpOyRpeyRqOyRrOyRtOyRteyRueySgOySlOySnOySuOySvOyTqeyTsOyTseyTtOyTuOyTuuyTv+yUgOyUgeyUjOyUkOyUlOyUnOyUqOyUqeyUrOyUsOyUuOyUueyUu+yUveyVhOyVheyViOyVieyViuyVjOyVjeyVjuyVk+yVlOyVleyVl+yVmOyVmeyVneyVnuyVoOyVoeyVpOyVqOyVsOyVseyVs+yVtOyVteyVvOyVveyWgOyWhOyWh+yWjOyWjeyWj+yWkeyWleyWl+yWmOyWnOyWoOyWqeyWtOyWteyWuOyWueyWu+yWvOyWveyWvuyXhFwiLDYsXCLsl4zsl45cIl0sW1wiYmY0MVwiLFwi7ZKeXCIsMTAsXCLtkqpcIiwxNF0sW1wiYmY2MVwiLFwi7ZK5XCIsMTgsXCLtk43tk47tk4/tk5Htk5Ltk5Ptk5VcIl0sW1wiYmY4MVwiLFwi7ZOWXCIsNSxcIu2Tne2Tnu2ToFwiLDcsXCLtk6ntk6rtk6vtk63tk67tk6/tk7FcIiw2LFwi7ZO57ZO67ZO87JeQ7JeR7JeU7JeY7Jeg7Jeh7Jej7Jel7Jes7Jet7Jeu7Jew7Je07Je27Je37Je8XCIsNSxcIuyYheyYhuyYh+yYiOyYjOyYkOyYmOyYmeyYm+yYnOyYpOyYpeyYqOyYrOyYreyYruyYsOyYs+yYtOyYteyYt+yYueyYu+yZgOyZgeyZhOyZiOyZkOyZkeyZk+yZlOyZleyZnOyZneyZoOyZrOyZr+yZseyZuOyZueyZvOyagOyaiOyaieyai+yajeyalOyaleyamOyanOyapOyapeyap+yaqeyasOyaseyatOyauOyaueyauuybgOybgeybg+ybheybjOybjeybkOyblOybnOybneyboOyboeybqFwiXSxbXCJjMDQxXCIsXCLtk75cIiw1LFwi7ZSF7ZSG7ZSH7ZSJ7ZSK7ZSL7ZSNXCIsNixcIu2Ulu2UmFwiLDVdLFtcImMwNjFcIixcIu2UnlwiLDI1XSxbXCJjMDgxXCIsXCLtlLjtlLntlLrtlLvtlL7tlL/tlYHtlYLtlYPtlYVcIiw2LFwi7ZWO7ZWQ7ZWSXCIsNSxcIu2Vmu2Vm+2Vne2Vnu2Vn+2Voe2Vou2Vo+ybqeybrOybsOybuOybueybveychOycheyciOycjOyclOycleycl+ycmeycoOycoeycpOycqOycsOycseycs+ycteyct+ycvOycveydgOydhOydiuydjOydjeydj+ydkVwiLDcsXCLsnZzsnaDsnajsnavsnbTsnbXsnbjsnbzsnb3snb7snoPsnoTsnoXsnofsnojsnonsnorsno7snpDsnpHsnpTsnpbsnpfsnpjsnprsnqDsnqHsnqPsnqTsnqXsnqbsnqzsnq3snrDsnrTsnrzsnr3snr/sn4Dsn4Hsn4jsn4nsn4zsn47sn5Dsn5jsn53sn6Tsn6jsn6zsoIDsoIHsoITsoIjsoIpcIl0sW1wiYzE0MVwiLFwi7ZWk7ZWm7ZWn7ZWq7ZWs7ZWuXCIsNSxcIu2Vtu2Vt+2Vue2Vuu2Vu+2VvVwiLDYsXCLtlobtlortlotcIl0sW1wiYzE2MVwiLFwi7ZaM7ZaN7ZaO7ZaP7ZaRXCIsMTksXCLtlqbtlqdcIl0sW1wiYzE4MVwiLFwi7ZaoXCIsMzEsXCLsoJDsoJHsoJPsoJXsoJbsoJzsoJ3soKDsoKTsoKzsoK3soK/soLHsoLjsoLzsoYDsoYjsoYnsoYzsoY3soZTsobDsobHsobTsobjsobrsooDsooHsooPsooXsoobsoofsoovsoozsoo3sopTsop3sop/soqHsoqjsorzsor3so4Tso4jso4zso5Tso5Xso5fso5nso6Dso6Hso6Tso7Xso7zso73spIDspITspIXspIbspIzspI3spI/spJHspJjspKzspLTspZDspZHspZTspZjspaDspaHspaPspazspbDspbTspbzspojsponspozsppDsppjsppnsppvspp3sp4Dsp4Hsp4Tsp4fsp4jsp4rsp5Dsp5Hsp5NcIl0sW1wiYzI0MVwiLFwi7ZeK7ZeL7ZeN7ZeO7ZeP7ZeR7ZeTXCIsNCxcIu2Xmu2XnO2XnlwiLDUsXCLtl6btl6ftl6ntl6rtl6vtl63tl65cIl0sW1wiYzI2MVwiLFwi7ZevXCIsNCxcIu2Xtu2XuO2XulwiLDUsXCLtmILtmIPtmIXtmIbtmIftmIlcIiw2LFwi7ZiSXCJdLFtcImMyODFcIixcIu2YllwiLDUsXCLtmJ3tmJ7tmJ/tmKHtmKLtmKPtmKVcIiw3LFwi7ZiuXCIsOSxcIu2Yuu2Yu+ynleynluynmeynmuynnOynneynoOynouynpOynp+ynrOynreynr+ynsOynseynuOynueynvOyogOyoiOyoieyoi+yojOyojeyolOyomOyoqeypjOypjeypkOyplOypnOypneypn+ypoOypoeypqOypveyqhOyqmOyqvOyqveyrgOyrhOyrjOyrjeyrj+yrkeyrk+yrmOyrmeyroOyrrOyrtOysiOyskOyslOysmOysoOysoeytgeytiOytieytjOytkOytmOytmeytneytpOytuOytueyunOyuuOyvlOyvpOyvp+yvqeywjOywjeywkOywlOywnOywneywoeywouywp+ywqOywqeywrOywruywsOywuOywueywu1wiXSxbXCJjMzQxXCIsXCLtmL3tmL7tmL/tmYHtmYLtmYPtmYTtmYbtmYftmYrtmYztmY7tmY/tmZDtmZLtmZPtmZbtmZftmZntmZrtmZvtmZ1cIiw0XSxbXCJjMzYxXCIsXCLtmaJcIiw0LFwi7Zmo7ZmqXCIsNSxcIu2Zsu2Zs+2ZtVwiLDExXSxbXCJjMzgxXCIsXCLtmoHtmoLtmoTtmoZcIiw1LFwi7ZqO7ZqP7ZqR7ZqS7ZqT7ZqVXCIsNyxcIu2anu2aoO2aolwiLDUsXCLtmqntmqrssLzssL3ssL7ssYTssYXssYjssYzssZTssZXssZfssZjssZnssaDssaTssabssajssbDssbXsspjsspnsspzssqDssqjssqnssqvssqzssq3ssrTssrXssrjssrzss4Tss4Xss4fss4nss5Dss5Tss6Tss6zss7DstIHstIjstInstIzstJDstJjstJnstJvstJ3stKTstKjstKzstLnstZzstaDstaTstazsta3sta/stbHstbjstojstpTstpXstpjstpzstqTstqXstqfstqnstrDst4Tst4zst5Dst6jst6zst7Dst7jst7nst7vst73suITsuIjsuIzsuJTsuJnsuKDsuKHsuKTsuKjsuLDsuLHsuLPsuLVcIl0sW1wiYzQ0MVwiLFwi7Zqr7Zqt7Zqu7Zqv7ZqxXCIsNyxcIu2auu2avFwiLDcsXCLtm4btm4ftm4ntm4rtm4tcIl0sW1wiYzQ2MVwiLFwi7ZuN7ZuO7ZuP7ZuQ7ZuS7ZuT7ZuV7ZuW7ZuY7ZuaXCIsNSxcIu2boe2bou2bo+2bpe2bpu2bp+2bqVwiLDRdLFtcImM0ODFcIixcIu2bru2br+2bse2bsu2bs+2btO2btlwiLDUsXCLtm77tm7/tnIHtnILtnIPtnIVcIiwxMSxcIu2cku2ck+2clOy5mOy5mey5nOy5n+y5oOy5oey5qOy5qey5q+y5rey5tOy5tey5uOy5vOy6hOy6hey6h+y6iey6kOy6key6lOy6mOy6oOy6oey6o+y6pOy6pey6rOy6rey7gey7pOy7pey7qOy7q+y7rOy7tOy7tey7t+y7uOy7uey8gOy8gey8hOy8iOy8kOy8key8k+y8ley8nOy8oOy8pOy8rOy8rey8r+y8sOy8sey8uOy9lOy9ley9mOy9nOy9pOy9pey9p+y9qey9sOy9sey9tOy9uOy+gOy+hey+jOy+oey+qOy+sOy/hOy/oOy/oey/pOy/qOy/sOy/sey/s+y/tey/vO2AgO2AhO2Ake2AmO2Are2AtO2Ate2AuO2AvFwiXSxbXCJjNTQxXCIsXCLtnJXtnJbtnJftnJrtnJvtnJ3tnJ7tnJ/tnKFcIiw2LFwi7Zyq7Zys7ZyuXCIsNSxcIu2ctu2ct+2cuVwiXSxbXCJjNTYxXCIsXCLtnLrtnLvtnL1cIiw2LFwi7Z2F7Z2G7Z2I7Z2KXCIsNSxcIu2dku2dk+2dle2dmlwiLDRdLFtcImM1ODFcIixcIu2dn+2dou2dpO2dpu2dp+2dqO2dqu2dq+2dre2dru2dr+2dse2dsu2ds+2dtVwiLDYsXCLtnb7tnb/tnoDtnoJcIiw1LFwi7Z6K7Z6L7YGE7YGF7YGH7YGJ7YGQ7YGU7YGY7YGg7YGs7YGt7YGw7YG07YG87YG97YKB7YKk7YKl7YKo7YKs7YK07YK17YK37YK57YOA7YOB7YOE7YOI7YOJ7YOQ7YOR7YOT7YOU7YOV7YOc7YOd7YOg7YOk7YOs7YOt7YOv7YOw7YOx7YO47YSN7YSw7YSx7YS07YS47YS67YWA7YWB7YWD7YWE7YWF7YWM7YWN7YWQ7YWU7YWc7YWd7YWf7YWh7YWo7YWs7YW87YaE7YaI7Yag7Yah7Yak7Yao7Yaw7Yax7Yaz7Ya17Ya67Ya87YeA7YeY7Ye07Ye47YiH7YiJ7YiQ7Yis7Yit7Yiw7Yi07Yi87Yi97Yi/7YmB7YmI7YmcXCJdLFtcImM2NDFcIixcIu2eje2eju2ej+2ekVwiLDYsXCLtnprtnpztnp5cIiw1XSxbXCJjNmExXCIsXCLtiaTtioDtioHtioTtiojtipDtipHtipXtipztiqDtiqTtiqztirHtirjtirntirztir/ti4Dti4Lti4jti4nti4vti5Tti5jti5zti6Tti6Xti7Dti7Hti7Tti7jtjIDtjIHtjIPtjIXtjIztjI3tjI7tjJDtjJTtjJbtjJztjJ3tjJ/tjKDtjKHtjKXtjKjtjKntjKztjLDtjLjtjLntjLvtjLztjL3tjYTtjYXtjbztjb3tjoDtjoTtjoztjo3tjo/tjpDtjpHtjpjtjpntjpztjqDtjqjtjqntjqvtjq3tjrTtjrjtjrztj4Ttj4Xtj4jtj4ntj5Dtj5jtj6Htj6Ptj6ztj63tj7Dtj7Ttj7ztj73tj7/tkIFcIl0sW1wiYzdhMVwiLFwi7ZCI7ZCd7ZGA7ZGE7ZGc7ZGg7ZGk7ZGt7ZGv7ZG47ZG57ZG87ZG/7ZKA7ZKC7ZKI7ZKJ7ZKL7ZKN7ZKU7ZKp7ZOM7ZOQ7ZOU7ZOc7ZOf7ZOo7ZOs7ZOw7ZO47ZO77ZO97ZSE7ZSI7ZSM7ZSU7ZSV7ZSX7ZS87ZS97ZWA7ZWE7ZWM7ZWN7ZWP7ZWR7ZWY7ZWZ7ZWc7ZWg7ZWl7ZWo7ZWp7ZWr7ZWt7ZW07ZW17ZW47ZW87ZaE7ZaF7ZaH7ZaI7ZaJ7ZaQ7Zal7ZeI7ZeJ7ZeM7ZeQ7ZeS7ZeY7ZeZ7Zeb7Zed7Zek7Zel7Zeo7Zes7Ze07Ze17Ze37Ze57ZiA7ZiB7ZiE7ZiI7ZiQ7ZiR7ZiT7ZiU7ZiV7Zic7ZigXCJdLFtcImM4YTFcIixcIu2YpO2Yre2YuO2Yue2YvO2ZgO2Zhe2ZiO2Zie2Zi+2Zje2Zke2ZlO2Zle2ZmO2ZnO2Zp+2Zqe2ZsO2Zse2ZtO2ag+2ahe2ajO2aje2akO2alO2ane2an+2aoe2aqO2arO2asO2aue2au+2bhO2bhe2biO2bjO2bke2blO2bl+2bme2boO2bpO2bqO2bsO2bte2bvO2bve2cgO2chO2cke2cmO2cme2cnO2coO2cqO2cqe2cq+2cre2ctO2cte2cuO2cvO2dhO2dh+2die2dkO2dke2dlO2dlu2dl+2dmO2dme2doO2doe2do+2dpe2dqe2drO2dsO2dtO2dvO2dve2ege2eiO2eie2ejO2ekO2emO2eme2em+2enVwiXSxbXCJjYWExXCIsXCLkvL3kvbPlgYflg7nliqDlj6/lkbXlk6XlmInlq4Hlrrbmmofmnrbmnrfmn6/mrYznj4Lnl4LnqLzoi5vojITooZfooojoqLbos4jot4/ou7vov6bpp5XliLvljbTlkITmgarmhaTmrrznj4/ohJroprrop5LplqPkvoPliIrlor7lpbjlp6blubLlubnmh4fmj4DmnYbmn6zmob/mvpfnmY7nnIvno7XnqIjnq7/nsKHogp3oia7oibHoq6vplpPkuavllp3mm7fmuLTnoqPnq63okZvopJDonY7pnqjli5jlnY7loKrltYzmhJ/mhr7miKHmlaLmn5HmqYTmuJvnlJjnlrPnm6PnnrDntLrpgq/pkZHpkZLpvpVcIl0sW1wiY2JhMVwiLFwi5Yyj5bKs55Sy6IOb6YmA6ZaY5Ymb5aCI5aec5bKh5bSX5bq35by65b2K5oW35rGf55W655aG57Og57Wz57ax576M6IWU6Iih6JaR6KWB6Kyb6Yu86ZmN6bGH5LuL5Lu35YCL5Yex5aGP5oS35oS+5oWo5pS55qeq5ryR55al55qG55uW566H6Iql6JOL76SA6Y6n6ZaL5ZaA5a6i5Z2R76SB57Kz57656Ya15YCo5Y675bGF5beo5ouS5o2u5pOa5pOn5rig54Ks56Wb6Led6Lie76SC6YG96YmF6Yu45Lm+5Lu25YGl5be+5bu65oSG5qWX6IWx6JmU6LmH6Y216air5Lme5YKR5p2w5qGA5YSJ5YqN5YqS5qqiXCJdLFtcImNjYTFcIixcIueevOmIkOm7lOWKq+aAr+i/suWBiOaGqeaPreaTiuagvOaqhOa/gOiGiOimoemalOWgheeJveeKrOeUhOe1uee5reiCqeimi+ittOmBo+m1keaKieaxuua9lOe1kOe8uuioo+WFvOaFiueuneismemJl+mOjOS6rOS/k+WAnuWCvuWEhuWLgeWLjeWNv+WdsOWig+W6muW+keaFtuaGrOaTjuaVrOaZr+aau+abtOail+a2h+eCheeDseeSn+eSpeeTiueXmeehrOejrOern+ertue1hee2k+iAleiAv+iEm+iOluitpui8lemAlemPoemgg+mguOmpmumvqOS/guWVk+WguuWlkeWto+WxhuaCuOaIkuahguaisFwiXSxbXCJjZGExXCIsXCLmo6jmuqrnlYznmbjno47nqL3ns7vnuavnubzoqIjoqqHosL/pmo7pt4Tlj6Tlj6nlkYrlkbHlm7rlp5HlraTlsLvluqvmi7fmlLfmlYXmlbLmmqDmnq/mp4Hmsr3nl7znmpDnnb7nqL/nvpTogIPogqHoho/oi6boi73oj7Dol4HooLHoorToqqXvpIPovpzpjK7pm4fpoafpq5jpvJPlk63mlpvmm7Lmoo/nqYDosLfptaDlm7DlnaTltJHmmIbmorHmo43mu77nkKjoop7pr6TmsajvpITpqqjkvpvlhazlhbHlip/lrZTlt6XmgZDmga3mi7HmjqfmlLvnj5nnqbromqPosqLpno/kuLLlr6HmiIjmnpznk5xcIl0sW1wiY2VhMVwiLFwi56eR6I+T6KqH6Kqy6Leo6YGO6Y2L6aGG5buT5qeo6Je/6YOt76SF5Yag5a6Y5a+s5oWj5qO65qy+54GM55Cv55OY566h572Q6I+F6KeA6LKr6Zec6aSo5Yiu5oGd5ous6YCC5L6K5YWJ5Yyh5aOZ5buj5pug5rS454Ka54uC54+W562Q6IOx6ZGb5Y2m5o6b572r5LmW5YKA5aGK5aOe5oCq5oSn5ouQ5qeQ6a2B5a6P57SY6IKx6L2f5Lqk5YOR5ZKs5Zas5ayM5bag5ben5pSq5pWO5qCh5qmL54uh55qO55+v57We57+56Iag6JWO6Juf6LyD6L2O6YOK6aSD6amV6a6r5LiY5LmF5Lmd5LuH5L+x5YW35Yu+XCJdLFtcImNmYTFcIixcIuWNgOWPo+WPpeWSjuWYlOWdteWeouWvh+W2h+W7kOaHvOaLmOaVkeaeuOafqeani+atkOavhuavrOaxgua6neeBuOeLl+eOlueQg+eev+efqeeptue1v+iAieiHvOiIheiIiuiLn+ihouiss+izvOi7gOmAkemCsemJpOmKtumnkumphemzqem3l+m+nOWci+WxgOiPiumeoOmeq+m6tOWQm+eqmOe+pOijmei7jemDoeWggOWxiOaOmOeqn+WuruW8k+epueeqruiKjui6rOWApuWIuOWLuOWNt+WciOaLs+aNsuasiua3g+ect+WOpeeNl+iVqOi5tumXleacuuarg+a9sOiprei7jOmli++khuaZt+atuOiytFwiXSxbXCJkMGExXCIsXCLprLzvpIflj6vlnK3lpY7mj4bmp7vnj6rnoYXnqrrnq4Xns77okbXopo/otbPpgLXplqjli7vlnYfnlYfnraDoj4zpiJ7vpIjmqZjlhYvliYvliofmiJ/mo5jmpbXpmpnlg4XliqTli6Tmh4PmlqTmoLnmp7/nkb7nrYvoirnoj6voprLorLnov5HppYnvpInku4rlppfmk5LmmJHmqo7nkLTnpoHnpr3oiqnoob7oob/opZ/vpIrpjKbkvIvlj4rmgKXmibHmsbLntJrntabkupjlhaLnn5zogq/kvIHkvI7lhbblhoDll5zlmajlnLvln7rln7zlpJTlpYflppPlr4TlspDltI7lt7Hlub7lv4zmioDml5fml6NcIl0sW1wiZDFhMVwiLFwi5pye5pyf5p2e5qOL5qOE5qmf5qy65rCj5rG95rKC5reH546Y55Cm55Cq55KC55Kj55W455W/56KB56Ov56WB56WH56WI56W6566V57SA57a6576I6ICG6ICt6IKM6KiY6K2P6LGI6LW36Yyh6Yyk6aOi6aWR6aiO6aiP6aml6bqS57eK5L225ZCJ5ouu5qGU6YeR5Zar5YS676SL76SM5aic5oem76SN5ouP5ou/76SOXCIsNSxcIumCo++klFwiLDQsXCLoq77vpJnvpJrvpJvvpJzmmpbvpJ3nhZbvpJ7vpJ/pm6PvpKDmjY/mjbrljZfvpKHmno/mpaDmubPvpKLnlLfvpKPvpKTvpKVcIl0sW1wiZDJhMVwiLFwi57SN76Sm76Sn6KGy5ZuK5aiY76SoXCIsNCxcIuS5g++kreWFp+WliOafsOiAkO+kruWls+W5tOaSmueniuW/teaBrOaLiOaNu+Wvp+Wvl+WKqu+kr+WltOW8qeaAku+ksO+kse+ksueRme+ks1wiLDUsXCLpp5HvpLlcIiwxMCxcIua/g++lhO+lheiGv+i+suaDse+lhu+lh+iFpu+liO+lieWwv++lilwiLDcsXCLlq6noqKXmnbvntJDvpZJcIiw1LFwi6IO976WY76WZ5bC85rOl5Yy/5rq65aSa6Iy2XCJdLFtcImQzYTFcIixcIuS4ueS6tuS9huWWruWcmOWjh+W9luaWt+aXpuaqgOautea5jeefreerr+ewnue3nuibi+iikumEsumNm+aSu+a+vueNuueWuOmBlOWVluWdjeaGuuaTlOabh+a3oea5m+a9rea+ueeXsOiBg+iGveiVgeimg+irh+itmumMn+ayk+eVk+etlOi4j+mBneWUkOWgguWhmOW5ouaIh+aSnuajoOeVtuezluies+m7qOS7o+WeiOWdruWkp+WwjeWyseW4tuW+heaItOaToeeOs+iHuuiii+iyuOmaium7m+WuheW+t+aCs+WAkuWIgOWIsOWcluWgteWhl+WwjuWxoOWztuW2i+W6puW+kuaCvOaMkeaOieaQl+ahg1wiXSxbXCJkNGExXCIsXCLmo7nmq4Lmt5jmuKHmu5Tmv6Tnh77nm5znnbnnprHnqLvokITopqnos63ot7PouYjpgIPpgJTpgZPpg73pjY3pmbbpn5zmr5LngIbniZjniqLnjajnnaPnpr/nr6TnupvoroDloqnmg4fmlabml73mmr7msoznhJ7nh4nosZrpoJPkua3nqoHku53lhqzlh43li5XlkIzmhqfmnbHmoZDmo5/mtJ7mvbznlrznnrPnq6Xog7TokaPpioXlhZzmlpfmnZzmnpPnl5jnq4fojbPvpZrosYbpgJfpoK3lsa/oh4DoiprpgYHpga/piI3lvpfltp3mqZnnh4jnmbvnrYnol6TorITphKfpqLDllofmh7bvpZvnmannvoVcIl0sW1wiZDVhMVwiLFwi6Ji/6J666KO46YKP76Wc5rSb54OZ54+e57Wh6JC976Wd6YWq6aex76We5LqC5Y215qyE5qyS54C+54ib6Jit6bie5YmM6L6j5bWQ5pOl5pSs5qyW5r+r57GD57qc6JeN6KWk6Ka95ouJ6IeY6KCf5buK5pyX5rWq54u855CF55Gv6J6C6YOe5L6G5bSN5b6g6JCK5Ya35o6g55Wl5Lqu5YCG5YWp5YeJ5qKB5qiR57Ku57Kx57On6Imv6KuS6Lyb6YeP5L625YS35Yu15ZGC5bus5oWu5oi+5peF5qua5r++56Sq6Jec6KCj6Zat6ami6amq6bqX6buO5Yqb5puG5q2354Cd56Sr6L2i6Z2C5oaQ5oiA5pSj5ryjXCJdLFtcImQ2YTFcIixcIueFieeSiee3tOiBr+iTrui8pumAo+mNiuWGveWIl+WKo+a0jOeDiOijguW7ieaWguaurua/guewvueNteS7pOS8tuWbue+ln+WyuuW2uuaAnOeOsuesree+mue/juiBhumAnumItOmbtumdiOmgmOm9oeS+i+a+p+emrumGtOmat+WLnu+loOaSiOaThOark+a9nueAmOeIkOebp+iAgeiYhuiZnOi3r+i8hemcsumtr+m3uum5teeijOelv+e2oOiPiemMhOm5v+m6k+irluWjn+W8hOacp+eAp+eTj+exoOiBvuWEoeeAqOeJouejiuizguizmuiztOmbt+S6huWDmuWvruW7luaWmeeHjueZgueereiBiuiTvFwiXSxbXCJkN2ExXCIsXCLpgbzprKfpvo3lo5jlqYHlsaLmqJPmt5rmvI/nmLvntK/nuLfolJ7opLjpj6TpmYvlionml5Lmn7PmprTmtYHmupzngI/nkInnkaDnlZnnmKTnoavorKzpoZ7lha3miK7pmbjkvpblgKvltJnmt6rntrjovKrlvovmhYTmoJfvpaHpmobli5Logovlh5zlh4zmpZ7nqJzntr7oj7HpmbXkv5rliKnljpjlkI/llI7lsaXmgqfmnY7moqjmtaznioHni7jnkIbnkoPvpaLnl6Lnsaznvbnnvrjojonoo4/oo6Hph4zph5Dpm6Lpr4nlkJ3mvb7nh5Dnkpjol7rouqrpmqPpsZfpup/mnpfmt4vnkLPoh6jpnJbnoKxcIl0sW1wiZDhhMVwiLFwi56uL56yg57KS5pGp55Gq55ey56K856Oo6aas6a2U6bq75a+e5bmV5ryg6Iac6I6r6YKI5LiH5Y2N5aip5beS5b2O5oWi5oy95pmp5pu85ru/5ryr54Gj556e6JCs6JST6KC76LyT6aWF6bC75ZSc5oq55pyr5rKr6IyJ6KWq6Z265Lqh5aaE5b+Y5b+Z5pyb57ay572U6IqS6Iyr6I696Lye6YKZ5Z+L5aa55aqS5a+Q5pin5p6a5qKF5q+P54Wk57216LK36LOj6YKB6a2F6ISI6LKK6ZmM6amA6bql5a2f5rCT54yb55uy55uf6JCM5Yaq6KaT5YWN5YaV5YuJ5qOJ5rKU55yE55yg57a/57es6Z2i6bq15ruFXCJdLFtcImQ5YTFcIixcIuiUkeWGpeWQjeWRveaYjuaaneakp+a6n+eav+eekeiMl+iTguien+mFqemKmOmztOiiguS+ruWGkuWLn+WnhuW4veaFleaRuOaRueaaruafkOaooeavjeavm+eJn+eJoeeRgeecuOefm+iAl+iKvOiMheisgOisqOiyjOacqOaykOeJp+ebruedpuephum2qeatv+aykuWkouacpuiSmeWNr+Wik+WmmeW7n+aPj+aYtOads+a4uueMq+erl+iLl+mMqOWLmeW3q+aGruaHi+aIiuaLh+aSq+aXoOalmeatpuavi+eEoeePt+eVnee5huiInuiMguiVquiqo+iyv+mcp+m1oeWiqOm7mOWAkeWIjuWQu+WVj+aWh1wiXSxbXCJkYWExXCIsXCLmsbbntIrntIvogZ7omorploDpm6/li7/mspXnianlkbPlqprlsL7ltYvlvYzlvq7mnKrmorbmpaPmuLzmuYTnnInnsbPnvo7oloforI7ov7fpnaHpu7TlsrfmgrbmhI3mhqvmlY/ml7vml7zmsJHms6/njp/nj4nnt6HplpTlr4bonJzorJDliZ3ljZrmi43mkI/mkrLmnLTmqLjms4rnj4Dnkp7nrpTnspXnuJvohoroiLboloTov6vpm7npp4HkvLTljYrlj43lj5vmi4zmkKzmlIDmlpHmp4Pms67mvZjnj63nlZTnmKLnm6Tnm7zno5Dno7vnpKzntYboiKzon6Dov5TpoJLpo6/li4Pmi5TmkqXmuKTmvZFcIl0sW1wiZGJhMVwiLFwi55m86LeL6Yax6Ymi6auu6a2D5YCj5YKN5Z2K5aao5bCo5bmH5b235oi/5pS+5pa55peB5piJ5p6L5qac5ruC56OF57Sh6IKq6IaA6Iir6Iqz6JKh6JqM6Kiq6KyX6YKm6Ziy6b6Q5YCN5L+z76Wj5Z+55b6Y5ouc5o6S5p2v5rmD54SZ55uD6IOM6IOa6KO06KO16KSZ6LOg6Lyp6YWN6Zmq5Lyv5L2w5bib5p+P5qCi55m955m+6a2E5bmh5qiK54Wp54eU55Wq76Wk57mB6JWD6Jep6aOc5LyQ562P572w6Zal5Yeh5biG5qK15rC+5rGO5rOb54qv56+E6IyD5rOV55C65YO75YqI5aOB5pOY5qqX55Kn55mWXCJdLFtcImRjYTFcIixcIueip+iYl+mXoumcue+lpeWNnuW8geiuiui+qOi+r+mCiuWIpeeepemxiem8iOS4meWAguWFteWxm+W5t+aYnuaYuuafhOajheeCs+eUgeeXheenieernei8p+mkoOmoiOS/neWgoeWgseWvtuaZruatpea0kea5uua9veePpOeUq+iPqeijnOikk+itnOi8lOS8j+WDleWMkOWNnOWuk+W+qeacjeemj+iFueiMr+iUlOikh+imhui8uei8u+mmpemwkuacrOS5tuS/uOWlieWwgeWzr+WzsOaNp+ajkueDveeGoueQq+e4q+iTrOicgumAoumLkumzs+S4jeS7mOS/r+WCheWJluWJr+WQpuWSkOWfoOWkq+WpplwiXSxbXCJkZGExXCIsXCLlrZrlrbXlr4zlupzvpabmibbmlbfmlqfmta7muqXniLbnrKbnsL/nvLbohZDohZHohproiYDoipnojqnoqIPosqDos6bos7votbTotrrpg6jph5zpmJzpmYTpp5nps6fljJfliIblkKnlmbTlorPlpZTlpa7lv7/mhqTmia7mmJDmsb7nhJrnm4bnsonns57ntJvoiqzos4Hpm7DvpafkvZvlvJflvb/mi4LltKnmnIvmo5rnobznuYPptazkuJXlgpnljJXljKrljZHlpoPlqaLluofmgrLmhormiYnmibnmlpDmnofmpqfmr5Tmr5bmr5fmr5jmsrjvpajnkLXnl7rnoJLnopHnp5Xnp5jnsoPnt4vnv6HogqVcIl0sW1wiZGVhMVwiLFwi6IS+6IeC6I+y6Jya6KOo6Kq56K2s6LK76YSZ6Z2e6aOb6by75Zqs5ayq5b2s5paM5qqz5q6v5rWc5r+x54CV54md546t6LKn6LOT6aC75oaR5rC36IGY6aiB5LmN5LqL5Lqb5LuV5Ly65Ly85L2/5L+f5YO/5Y+y5Y+45ZSG5Zej5Zub5aOr5aWi5aiR5a+r5a+65bCE5bez5bir5b6Z5oCd5o2o5pac5pav5p+25p+75qKt5q275rKZ5rOX5rij54CJ542F56CC56S+56WA56Wg56eB56+p57SX57Wy6IKG6IiN6I6O6JOR6JuH6KOf6KmQ6Kme6Kyd6LOc6LWm6L6t6YKq6aO86aef6bqd5YmK76Wp5pyU76WqXCJdLFtcImRmYTFcIixcIuWCmOWIquWxseaVo+axleePiueUo+eWneeul+iSnOmFuOmcsOS5t+aSkuauuueFnuiWqeS4ie+lq+adieajrua4l+iKn+iUmOihq+aPt+a+gemIkumir+S4iuWCt+WDj+WEn+WVhuWWquWYl+WtgOWwmeWzoOW4uOW6iuW6oOW7guaDs+ahkeapoea5mOeIveeJgOeLgOebuOelpeeusee/lOijs+intOips+ixoeiznumcnOWhnueSveizveWXh++lrOepoee0ouiJsueJsueUn+eUpe+lreesmeWiheWju+W2vOW6j+W6tuW+kOaBleaKkuaNv+aVjeaakeabmeabuOagluajsueKgOeRnuetrue1rue3lue9slwiXSxbXCJlMGExXCIsXCLog6XoiJLolq/opb/oqpPpgJ3pi6Tpu43pvKDlpJXlpa3luK3mg5zmmJTmmbPmnpDmsZDmt4XmvZ/nn7Pnoqnok4bph4vpjKvku5nlg4rlhYjlloTlrIvlrqPmiYfmlb7ml4vmuLLnhb3nkIHnkYTnkofnkr/nmaznpqrnt5rnuZXnvqjohbrohrPoiLnomJron6zoqbXot6PpgbjpipHpkKXppY3prq7ljajlsZHmpZTms4TmtKnmuKvoiIzolpvopLvoqK3oqqrpm6rpvafliaHmmrnmrrLnupbon77otI3ploPpmZ3mlJ3mtonnh67vpa7ln47lp5PlrqzmgKfmg7rmiJDmmJ/mmZ/njKnnj7nnm5vnnIHnraxcIl0sW1wiZTFhMVwiLFwi6IGW6IGy6IWl6Kqg6YaS5LiW5Yui5q2y5rSX56iF56y557Sw76Wv6LKw5Y+s5Ziv5aGR5a615bCP5bCR5bei5omA5o6D5pCU5pit5qKz5rK85raI5rqv54Cf54Kk54eS55Sm55aP55aO55iZ56yR56+g57Cr57Sg57S56JSs6JWt6JiH6Ki06YCN6YGh6YK16Yq36Z+26ai35L+X5bGs5p2f5raR57Kf57qM6KyW6LSW6YCf5a2r5be95pCN6JOA6YGc6aOh546H5a6L5oKa5p2+5ree6Kif6Kqm6YCB6aCM5Yi376Ww54GR56KO6Y6W6KGw6YeX5L+u5Y+X5Ze95Zua5Z6C5aO95auC5a6I5bKr5bOA5bil5oSBXCJdLFtcImUyYTFcIixcIuaIjeaJi+aOiOaQnOaUtuaVuOaoueauiuawtOa0mea8seeHp+eLqeeNuOeQh+eSsueYpuedoeengOepl+erqueyuee2j+e2rOe5oee+nuiEqeiMseiSkOiTmuiXquiiluiqsOiukOi8uOmBgumCg+mFrOmKlumKuemai+map+maqOmblumcgOmgiOmmlumrk+msmuWPlOWhvuWkmeWtsOWuv+a3kea9mueGn+eQoeeSueiCheiPveW3oeW+h+W+quaBguaXrOagkualr+apk+auiea0tea3s+ePo+ebvueerOetjee0lOiEo+iInOiNgOiTtOiVo+ipouirhOmGh+mMnumghummtOaIjOihk+i/sOmJpeW0h+W0p1wiXSxbXCJlM2ExXCIsXCLltannkZ/ohp3onajmv5Xmi77nv5LopLbopbLkuJ7kuZjlg6fli53ljYfmib/mmIfnuanooIXpmZ7kvo3ljJnlmLblp4vlqqTlsLjlsY7lsY3luILlvJHmgYPmlr3mmK/mmYLmnr7mn7TnjJznn6LnpLrnv4XokpTok43oppboqaboqanoq6HosZXosbrln7Tlr5TlvI/mga/mi63mpI3mrpbmuZznhoTnr5LonZXorZjou77po5/po77kvLjkvoHkv6HlkbvlqKDlrrjmhLzmlrDmmajnh7znlLPnpZ7ntLPohY7oh6Pojpjolqrol47onIPoqIrouqvovpvvpbHov4XlpLHlrqTlr6bmgonlr6nlsIvlv4PmsoFcIl0sW1wiZTRhMVwiLFwi76Wy5rex54CL55Sa6Iqv6Ku25LuA5Y2B76Wz6ZuZ5rCP5Lqe5L+E5YWS5ZWe5ail5bOo5oiR54mZ6Iq96I6q6Ju+6KGZ6Kid6Zi/6ZuF6aST6bSJ6bWd5aCK5bKz5ba95bmE5oOh5oSV5o+h5qiC5ril6YSC6Y2U6aGO6bCQ6b235a6J5bK45oyJ5pmP5qGI55y86ZuB6Z6N6aGU6a6f5pah6KyB6LuL6Za85ZS15bKp5beW5bq15pqX55mM6I+06ZeH5aOT5oq854uO6bSo5Luw5aSu5oCP5pi75q6D56en6bSm5Y6T5ZOA5Z+D5bSW5oSb5puW5rav56KN6Im+6ZqY6Z2E5Y6E5om85o6W5ray57iK6IWL6aGNXCJdLFtcImU1YTFcIixcIuaru+e9jOm2r+m4muS5n+WAu+WGtuWknOaDueaPtuaksOeIuuiAtu+ltOmHjuW8se+lte+ltue0hOiLpeiRr+iSu+iXpei6je+lt+S9r++luO+lueWjpOWtg+aBmeaPmuaUmOaVreaamO+luualiuaoo+a0i+eAgeeFrOeXkueYjeems+epsO+lu+e+iu+lvOilhO+lveiuk+mHgOmZve+lvumkiuWchOW+oeaWvOa8geeYgOempuiqnummremtmum9rOWEhOaGtuaKkeaqjeiHhuWBg+WgsOW9pueEieiogOiruuWtvOiYluS/uuWEvOWatOWlhOaOqea3ueW2qualreWGhuS6iOS9me+lv++mgO+mgeWmgu+mglwiXSxbXCJlNmExXCIsXCLvpoPmrZ/msZ3vpoTnkrXnpJbvpoXoiIfoiYXojLnovL/ovZ3vpobppJjvpofvpojvponkuqbvporln5/lvbnmmJPvpovvpoznlqvnubnora/vpo3pgIbpqZvlmqXloKflp7jlqJ/lrrTvpo7lu7bvpo/vppDmjZDmjLvvppHmpL3msofmsr/mto7mtpPmt7XmvJTvppLng5/nhLbnhZnvppPnh4Pnh5XvppTnoY/noa/vppXnrbXnt6PvppbnuK/vppfooY3ou5/vppjvppnvpprpiZvvppvps7bvppzvpp3vpp7mgoXmtoXvpp/nhrHvpqDvpqHplrHljq3vpqLvpqPvpqTmn5PvpqXngo7nhLDnkLDoibboi5JcIl0sW1wiZTdhMVwiLFwi76am6Za76aul6bm95puE76an54eB6JGJ76ao76ap5aGL76aq76ar5ba45b2x76as5pig5pqO5qW55qau5rC45rOz5ri25r2B5r+a54Cb54Cv54WQ54ef542w76at55Gb76au55OU55uI56mO57qT76av76aw6Iux6Kmg6L+O76ax6Y2I76ay6ZyZ76az76a05LmC5YCq76a15YiI5Y+h5puz5rGt5r+K54yK552/56mi6Iqu6Jed6JiC76a26KOU6Kmj6K296LGr76a36Yqz76a46ZyT6aCQ5LqU5LyN5L+J5YKy5Y2I5ZC+5ZCz5Zea5aGi5aK65aWn5aib5a+k5oKf76a55oeK5pWW5pe/5pmk5qKn5rGa5r6zXCJdLFtcImU4YTFcIixcIueDj+eGrOeNkuetveiciOiqpOmwsum8h+Wxi+ayg+eNhOeOiemIuua6q+eRpeeYn+epqee4leiYiuWFgOWjheaTgeeTrueUleeZsOe/gemClembjemllOa4pueTpueqqeeqquiHpeibmeiduOiom+WpieWujOWum+aioeakgOa1o+eOqeeQk+eQrOeil+e3qee/q+iEmOiFleiOnuixjOmYrumgkeabsOW+gOaXuuaeieaxqueOi+WAreWog+atquefruWkluW1rOW3jeeMpeeVj++muu+mu+WDpeWHueWgr+WkreWmluWnmuWvpe+mvO+mveW2ouaLl+aQluaSk+aTvu+mvuabnO+mv+apiO+ngOeHv+eRpO+ngVwiXSxbXCJlOWExXCIsXCLnqojnqq/nuYfnuZ7ogIDohbDvp4Lon6/opoHorKDpgZnvp4PpgoDppZLmhb7mrLLmtbTnuJ/opKXovrHkv5Hlgq3lhpfli4fln4floonlrrnlurjmhYLmppXmtozmuafmurbnhpTnkaLnlKjnlKzogbPojLjok4nouIrpjpTpj57vp4Tkuo7kvZHlgbblhKrlj4jlj4vlj7Plroflr5PlsKTmhJrmhoLml7TniZvnjpfnkYDnm4LnpZDnppHnprnntIbnvr3oiovol5XomZ7ov4LpgYfpg7Xph6rpmoXpm6jpm6nli5blvafml63mmLHmoK/nhZznqLbpg4HpoIrkupHvp4XmqZLmrp7mvpDnhonogJjoirjolZNcIl0sW1wiZWFhMVwiLFwi6YGL6ZqV6Zuy6Z+76JSa6ayx5LqQ54aK6ZuE5YWD5Y6f5ZOh5ZyT5ZyS5Z6j5aqb5auE5a+D5oCo5oS/5o+05rKF5rS55rmy5rqQ54iw54y/55GX6IuR6KKB6L2F6YGg76eG6Zmi6aGY6bSb5pyI6LaK6Yme5L2N5YGJ5YOe5Y2x5ZyN5aeU5aiB5bCJ5oWw5pqQ5rit54iy55GL57ev6IOD6JCO6JGm6JS/6J2f6KGb6KSY6KyC6YGV6Z+L6a2P5Lmz5L6R5YSS5YWq76eH5ZSv5Zap5a265a6l5bm85bm95bq+5oKg5oOf5oSI5oSJ5o+E5pS45pyJ76eI5p+U5p+a76eJ5qWh5qWi5rK55rSn76eK5ri476eLXCJdLFtcImViYTFcIixcIua/oeeMtueMt++njOeRnOeUse+njeeZku+nju+nj+e2reiHvuiQuOijleiqmOirm+irrei4sOi5gumBiumAvumBuumFiemHiemNru+nkO+nkeWgie+nkuavk+iCieiCsu+nk++nlOWFgeWlq+Wwue+nle+nlua9pOeOp+iDpOi0h++nl+mIl+mWj++nmO+nme+nmu+nm+iBv+aIjueAnOe1qOieje+nnOWeoOaBqeaFh+aut+iqvumKgOmaseS5meWQn+a3q+iUremZsOmfs+mjruaPluazo+mCkeWHneaHieiGuum3ueS+neWAmuWEgOWunOaEj+aHv+aTrOakheavheeWkeefo+e+qeiJpOiWj+ifu+iho+iqvFwiXSxbXCJlY2ExXCIsXCLorbDphqvkuozku6XkvIrvp53vp57lpLflp6jvp5/lt7LlvJvlvZvmgKHvp6Dvp6Hvp6Lvp6PniL7nj6Xvp6TnlbDnl43vp6Xnp7vvp6bogIzogLPogoToi6HojZHvp6fvp6josr3osrPpgofvp6nvp6rpo7TppIzvp6vvp6zngLfnm4rnv4rnv4znv7zorJrkurrku4HliIPljbDvp63lkr3lm6Dlp7vlr4XlvJXlv43mua7vp67vp6/ntarojLXvp7DompPoqo3vp7Hpna3pnbfvp7Lvp7PkuIDkvZrkvb7lo7nml6XmuqLpgLjpjrDpprnku7vlo6zlporlp5nmgYHvp7Tvp7XnqJTvp7bojY/os4PlhaXljYRcIl0sW1wiZWRhMVwiLFwi76e376e476e55LuN5Ymp5a2V6Iq/5LuU5Yi65ZKo5aeJ5ae/5a2Q5a2X5a2c5oGj5oWI5ruL54KZ54Wu546G55O355a156OB57Sr6ICF6Ieq6Iyo6JSX6JeJ6Kuu6LOH6ZuM5L2c5Yu65Zq85par5pio54G854K454i157a96IqN6YWM6ZuA6bWy5a2x5qOn5q6Y5r2655ue5bKR5pqr5r2b566057Cq6KC26Zuc5LiI5LuX5Yyg5aC05aK75aOv5aWs5bCH5biz5bqE5by15o6M5pqy5p2W5qif5qqj5qyM5ry/54mG76e6542Q55KL56ug57Kn6IW46Ief6Ien6I6K6JGs6JSj6JaU6JeP6KOd6LST6Yas6ZW3XCJdLFtcImVlYTFcIixcIumanOWGjeWTieWcqOWusOaJjeadkOagveaik+a4vea7k+eBvee4oeijgeiyoei8iem9i+m9jueIreeuj+irjemMmuS9h+S9juWEsuWSgOWnkOW6leaKteadtealruaol+ayrua4mueLmeeMqueWveeuuOe0teiLp+iPueiRl+iXt+ipm+iyr+i6h+mAmemCuOmbjum9n+WLo+WQiuWroeWvguaRmOaVtea7tOeLhO+nu+eahOepjeesm+exjee4vue/n+iNu+isq+iziui1pOi3oei5n+i/qui/uemBqemPkeS9g+S9uuWCs+WFqOWFuOWJjeWJquWhoeWhvOWloOWwiOWxleW7m+aCm+aIsOagk+auv+awiOa+sVwiXSxbXCJlZmExXCIsXCLnhY7nkKDnlLDnlLjnlZHnmbLnrYznrovnrq3nr4bnuo/oqa7ovL7ovYnpiL/pipPpjKLpkKvpm7vpoZrpoavppJ7liIfmiKrmipjmtZnnmaTnq4rnr4DntbbljaDlsr7lupfmvLjngrnnspjpnJHpro7pu57mjqXmkbronbbkuIHkupXkuq3lgZzlgbXlkYjlp4PlrprluYDluq3lu7flvoHmg4XmjLrmlL/mlbTml4zmmbbmmbjmn77mpajmqonmraPmsYDmt4Dmt6jmuJ/muZ7ngJ7ngqHnjo7nj73nlLrnnZvnoofnpo7nqIvnqb3nsr7nto7oiYfoqILoq6rosp7phK3phYrph5jpiabpi4zpjKDpnIbpnZZcIl0sW1wiZjBhMVwiLFwi6Z2c6aCC6byO5Yi25YqR5ZW85aCk5bid5byf5oKM5o+Q5qKv5r+f56Wt56ys6IeN6Ja66KO96Ku46LmE6YaN6Zmk6Zqb6Zy96aGM6b2K5L+O5YWG5YeL5Yqp5Ziy5byU5b2r5o6q5pON5pep5pmB5pu65pu55pyd5qKd5qOX5qe95ryV5r2u54Wn54el54iq55Kq55y656WW56Wa56ef56ig56qV57KX57Of57WE57mw6IKH6Je76Jqk6KmU6Kq/6LaZ6LqB6YCg6YGt6Yej6Zi76ZuV6bOl5peP57CH6Laz6Y+D5a2Y5bCK5Y2S5ouZ54yd5YCn5a6X5b6e5oKw5oWr5qOV5reZ55Cu56iu57WC57ac57ix6IWrXCJdLFtcImYxYTFcIixcIui4qui4temNvumQmOS9kOWdkOW3puW6p+aMq+e9quS4u+S9j+S+j+WBmuWnneiDhOWRquWRqOWXvuWlj+WumeW3nuW7muaZneacseafseagquazqOa0sua5iua+jeeCt+ePoOeWh+exjOe0gue0rOe2ouiIn+ibm+iou+iqhei1sOi6iui8s+mAsemFjumFkumRhOmnkOerueeypeS/iuWEgeWHhuWfiOWvr+Wzu+aZmeaovea1mua6lua/rOeEjOeVr+ero+igoumAoemBtembi+mnv+iMgeS4reS7suihhumHjeWNvearm+alq+axgeiRuuWinuaGjuabvuaLr+eDneeUkeeXh+e5kuiSuOitiei0iOS5i+WPqlwiXSxbXCJmMmExXCIsXCLlkqvlnLDlnYDlv5fmjIHmjIfmka/mlK/ml6jmmbrmnp3mnrPmraLmsaDmsprmvKznn6XnoKXnpYnnpZfntJnogqLohILoh7Poip3oirfonJjoqozvp7zotITotr7pgbLnm7TnqJnnqLfnuZTogbfllIfll5TlobXmjK/mkKLmmYnmmYvmoa3mppvmroTmtKXmurHnj43nkajnkqHnlZvnlrnnm6HnnJ7nnovnp6bnuInnuJ3oh7volK/oopfoqLros5Hou6vovrDpgLLpjq3pmaPpmbPpnIfkvoTlj7Hlp6rlq4nluJnmoY7nk4bnlr7np6nnqpLohqPom63os6rot4zov63mlp/mnJXvp73ln7fmvZfnt53ovK9cIl0sW1wiZjNhMVwiLFwi6Y+26ZuG5b615oey5r6E5LiU5L6Y5YCf5Y+J5Zef5bWv5beu5qyh5q2k56OL566a76e+6LmJ6LuK6YGu5o2J5pC+552A56qE6Yyv6ZG/6b2q5pKw5r6v54em55Ko55Oa56uE57CS57qC57Ky57qY6K6a6LSK6ZG96aSQ6aWM5Yi55a+f5pOm5pyt57Su5YOt5Y+D5aG55oWY5oWZ5oe65pas56uZ6K6S6K6W5YCJ5YCh5Ym15ZSx5ai85bug5b2w5oS05pWe5piM5pi25pqi5qeN5ruE5ryy54yW55ih56qT6IS56ImZ6I+W6JK85YK15Z+w5a+A5a+o5b2p5o6h56Cm57a16I+c6JSh6YeH6Ye15YaK5p+1562WXCJdLFtcImY0YTFcIixcIuiyrOWHhOWmu+aCveiZleWAnO+nv+WJlOWwuuaFveaImuaLk+aTsuaWpea7jOeYoOiEiui5oOmZn+mau+S7n+WNg+WWmOWkqeW3neaTheaziea3uueOlOepv+iIm+iWpuizpOi4kOmBt+mHp+mXoemYoemfhuWHuOWTsuWWhuW+ueaSpOa+iOe2tOi8n+i9jemQteWDieWwluayvua3u+eUm+eeu+ewveexpOipueirguWgnuWmvuW4luaNt+eJkueWiuedq+irnOiyvOi8kuW7s+aZtOa3uOiBveiPgeiri+mdkemvlu+ogOWJg+abv+a2lea7r+e3oOirpumArumBnumrlOWIneWJv+WTqOaGlOaKhOaLm+aiolwiXSxbXCJmNWExXCIsXCLmpJLmpZrmqLXngpLnhKbnoZ3npIHnpI7np5LnqI3ogpboibjoi5XojYnolYnosoLotoXphaLphovphq7kv4Plm5Hnh63nn5fonIDop7jlr7jlv5bmnZHpgqjlj6LloZrlr7XmgqTmhoHmkaDnuL3ogbDolKXpioPmkq7lgqzltJTmnIDlopzmir3mjqjmpI7mpbjmqJ7muavnmrrnp4voirvokKnoq4/otqjov73phJLphYvphpzpjJDpjJjpjprpm5vpqLbpsI3kuJHnlZznpZ3nq7rnrZHnr4nnuK7ok4TouZnoubTou7jpgJDmmKXmpL/nkYPlh7rmnK7pu5zlhYXlv6Dmspbon7LooZ3oobfmgrTohrXokINcIl0sW1wiZjZhMVwiLFwi6LSF5Y+W5ZC55Zi05ai25bCx54KK57+g6IGa6ISG6Iet6Laj6YaJ6amf6bey5YG05LuE5Y6g5oO75ris5bGk5L6I5YCk5Zek5bOZ5bmf5oGl5qKU5rK75reE54a+55eU55e055mh56ia56mJ57eH57e7572u6Ie06Jqp6Lyc6ZuJ6aaz6b2S5YmH5YuF6aOt6Kaq5LiD5p+S5ryG5L615a+i5p6V5rKI5rW455Cb56Cn6Yed6Y286J+E56ek56ix5b+r5LuW5ZKk5ZS+5aKu5aal5oOw5omT5ouW5py25qWV6Ii16ZmA6aax6aed5YCs5Y2T5ZWE5Z2876iB5omY76iC5pOi5pmr5p+d5r+B5r+v55Ci55C46KiXXCJdLFtcImY3YTFcIixcIumQuOWRkeWYhuWdpuW9iOaGmuatjueBmOeCree2u+iqleWlquiEq+aOoueciOiAveiyquWhlOaQreamu+WuleW4kea5r++og+iVqeWFjOWPsOWkquaAoOaFi+auhuaxsOazsOesnuiDjuiLlOi3humCsOmise+ohOaTh+a+pOaSkeaUhOWFjuWQkOWcn+iojuaFn+ahtu+oheeXm+etkue1semAmuWghuanjOiFv+ikqumAgOmgueWBuOWll+WmrOaKlemAj+msquaFneeJuemXluWdoeWphuW3tOaKiuaSreaTuuadt+azoua0vueIrOeQtuegtOe9t+iKrei3m+mgl+WIpOWdguadv+eJiOeTo+iyqei+pumIkVwiXSxbXCJmOGExXCIsXCLpmKrlhavlj63mjYzkvanllITmgpbmlZfmspvmtb/niYzni73nqJfopofosp3lva3mvo7ng7nohqjmhI7kvr/lgY/miYHniYfnr4fnt6jnv6npgY3pnq3pqJnosrblnarlubPmnrDokI3oqZXlkKDlrJbluaPlu6LlvIrmloPogrrolL3plonpmZvkvYjljIXljI3ljI/lkoblk7rlnIPluIPmgJbmipvmirHmjZXvqIbms6HmtabnlrHnoLLog57ohK/oi57okaHokrLooo3opJLpgIvpi6rpo73prpHluYXmmrTmm53ngJHniIbvqIfkv7Xlib3lvarmhZPmnZPmqJnmvILnk6Lnpajooajosbnpo4fpo4TpqYNcIl0sW1wiZjlhMVwiLFwi5ZOB56if5qWT6Ku36LGK6aKo6aau5b285oqr55ay55qu6KKr6YG/6ZmC5Yy55by85b+F5rOM54+M55Wi55aL562G6Iu+6aad5LmP6YC85LiL5L2V5Y6m5aSP5buI5piw5rKz55GV6I236J2m6LOA6YGQ6Zye6bCV5aOR5a246JmQ6KyU6ba05a+S5oGo5oKN5pex5rGX5ryi5r6j54Ca572V57+w6ZaR6ZaS6ZmQ6Z+T5Ymy6L2E5Ye95ZCr5ZK45ZWj5ZaK5qq75ra157eY6Imm6Yqc6Zm36bm55ZCI5ZOI55uS6Juk6Zak6ZeU6Zmc5Lqi5LyJ5aeu5aum5be35oGS5oqX5p2t5qGB5rKG5riv57y46IKb6IiqXCJdLFtcImZhYTFcIixcIu+oiO+oiemgheS6peWBleWSs+Wek+WlmuWtqeWus+aHiOalt+a1t+eAo+ifueino+ipsuirp+mCgumnremquOWKvuaguOWAluW5uOadj+iNh+ihjOS6q+WQkeWaruePpumElemfv+mkiemll+mmmeWZk+Win+iZm+ioseaGsuartueNu+i7kuath+maqumpl+WlleeIgOi1q+mdqeS/lOWztOW8puaHuOaZm+azq+eCq+eOhOeOueePvuecqeedjee1g+e1oue4o+iIt+ihku+oiuizoumJiemhr+WtkeeptOihgOmggeWrjOS/oOWNlOWkvuWzveaMvua1ueeLueiEheiEh+iOoumLj+mgsOS6qOWFhOWIkeWei1wiXSxbXCJmYmExXCIsXCLlvaLms4Lmu47ngIXngZDngq/nhpLnj6nnkanojYronqLooaHpgIjpgqLpjqPppqjlha7lvZfmg6DmhafmmrPolZnouYrphq/pnovkuY7kupLlkbzlo5Xlo7rlpb3lsrXlvKfmiLbmiYjmmIrmmafmr6vmtanmt4/muZbmu7jmvpTmv6Dmv6nngZ3ni5DnkKXnkZrnk6DnmpPnpZzns4rnuJ7og6Hoiqbokavokr/omY7omZ/onbTorbfosarpjqzpoIDpoaXmg5HmiJbphbflqZrmmI/mt7fmuL7nkL/prYLlv73mg5rnrI/lk4TlvJjmsZ7ms5PmtKrng5jntIXombnoqIzptLvljJblkozlrIXmqLrngavnlbVcIl0sW1wiZmNhMVwiLFwi56aN56a+6Iqx6I+v6Kmx6K2B6LKo6Z2076iL5pO05pSr56K656K756mr5Li45Zaa5aWQ5a6m5bm75oKj5o+b5q2h5pml5qGT5riZ54Wl55Kw57SI6YKE6amp6bCl5rS75ruR54y+6LGB6ZeK5Yew5bmM5b6o5oGN5oO25oSw5oWM5pmD5pmE5qal5rOB5rmf5ruJ5r2i54WM55Kc55qH56+B57Cn6I2S6J2X6YGR6ZqN6buD5Yyv5Zue5bu75b6K5oGi5oKU5oe35pmm5pyD5qqc5reu5r6u54Gw542q57mq6Ia+6Iy06JuU6Kqo6LOE5YqD542y5a6W5qmr6ZCE5ZOu5ZqG5a2d5pWI5paF5puJ5qKf5raN5reGXCJdLFtcImZkYTFcIixcIueIu+iCtOmFtempjeS+r+WAmeWOmuWQjuWQvOWWieWXheW4v+W+jOacveeFpuePnemAheWLm+WLs+WhpOWjjueEhOeGj+eHu+iWsOiok+aaiOiWqOWWp+aahOeFiuiQseWNieWWmeavgeW9meW+veaPruaaieeFh+irsei8nem6vuS8keaQuueDi+eVpuiZp+aBpOitjum3uOWFh+WHtuWMiOa0tuiDuOm7keaYleaso+eCmOeXleWQg+Wxuee0h+ioluasoOasveathuWQuOaBsOa0vee/leiIiOWDluWHnuWWnOWZq+WbjeWnrOWsieW4jOaGmeaGmOaIseaZnuabpueGmeeGueeGuueKp+emp+eogOe+suipsFwiXV0nKX0sZnVuY3Rpb24odCl7dC5leHBvcnRzPUpTT04ucGFyc2UoJ1tbXCI4NzQwXCIsXCLkj7DksLLkmIPklqbklbjwp4mn5LW35Jaz8KeyseSzovCns4XjrpXknLbknYTksYfksYDwpIq/8KOYl/CnjZLwprqL8KeDkuSxl/CqjZHknY/kl5rksoXwp7Gs5LSH5Kqk5Jqh8Kaso+eIpfClqZTwoamj8KO4hvCjvaHmmY3lm7tcIl0sW1wiODc2N1wiLFwi57aV5aSd8KiuueO3tOmctPCnr6/lr5vwobWe5aqk45il8Km6sOWrkeWut+WzvOadruiWk/CppYXnkaHnkp3jobXwobWT8KOanvCmgKHju6xcIl0sW1wiODdhMVwiLFwi8KWjnuOrteervOm+l/CkhaHwqKSN8KOHqvCgqorwo4me5IyK6JKE6b6W6ZCv5KSw6JiT5aKW6Z2K6YiY56eQ56iy5pmg5qip6KKd55GM56+F5p6C56is5YmP6YGG45Om54+E8KW2ueeThum/h+Wes+Skr+WRjOSEsfCjmo7loJjnqbLwp62l6K6P5Jqu8Ka6iOSGgfCltpnnrq7wopK86b+I8KKTgfCik4nwopOM6b+J6JSE8KOWu+SCtOm/iuSTofCqt7/mi4Hnga7pv4tcIl0sW1wiODg0MFwiLFwi44eAXCIsNCxcIvCghIzjh4XwoIOR8KCDjeOHhuOHh/Cgg4vwob+o44eI8KCDiuOHieOHiuOHi+OHjPCghI7jh43jh47EgMOBx43DgMSSw4nEmsOIxYzDk8eRw5Lgv7/DisyE4bq+4L+/w4rMjOG7gMOKxIHDoceOw6DJkcSTw6nEm8OoxKvDrceQw6zFjcOzx5LDssWrw7rHlMO5x5bHmMeaXCJdLFtcIjg4YTFcIixcIsecw7zgv7/DqsyE4bq/4L+/w6rMjOG7gcOqyaHij5rij5tcIl0sW1wiODk0MFwiLFwi8KqOqfChhYVcIl0sW1wiODk0M1wiLFwi5pSKXCJdLFtcIjg5NDZcIixcIuS4vea7nem1jumHn1wiXSxbXCI4OTRjXCIsXCLwp5y15pKR5Lya5Lyo5L6o5YWW5YW05Yac5Yek5Yqh5Yqo5Yy75Y2O5Y+R5Y+Y5Zui5aOw5aSE5aSH5aSy5aS05a2m5a6e5a6f5bKa5bqG5oC75paJ5p++5qCE5qGl5rWO54K855S157qk57qs57q657uH57uP57uf57yG57y36Im66IuP6I2v6KeG6K6+6K+i6L2m6L2n6L2uXCJdLFtcIjg5YTFcIixcIueQkeezvOe3jealhuerieWIp1wiXSxbXCI4OWFiXCIsXCLphoznorjphZ7ogrxcIl0sW1wiODliMFwiLFwi6LSL6IO28KCnp1wiXSxbXCI4OWI1XCIsXCLogp/pu4fks43pt4npuIzksL7wqbe28KeAjum4ivCqhLPjl4FcIl0sW1wiODljMVwiLFwi5rqa6Ii+55SZXCJdLFtcIjg5YzVcIixcIuSkkemprOmqj+m+meemh/CokazwobeK8KCXkPCiq6bkuKTkuoHkuoDkuofkur/ku6vkvLfjkYzkvr3juYjlgIPlgojjkb3jkpPjkqXlhoblpIXlh5vlh7zliIXkuonlibnlipDljKfjl4fljqnjlZHljrDjlZPlj4LlkKPjla3jlbLjmoHlkpPlkqPlkrTlkrnlk5Dlk6/llJjllKPllKjjlpjllL/jlqXjlr/ll5fjl4VcIl0sW1wiOGE0MFwiLFwi8Ke2hOWUpVwiXSxbXCI4YTQzXCIsXCLwoLGC8KC0lfClhKvllpDworOG46es8KCNgei5hvCktrjwqZOl5IGT8KiCvueduvCisLjjqLTkn5XwqIWd8KansvCkt6rmk53woLW88KC+tPCgs5XwoYO05pKN6Lm+8KC6lvCgsIvwoL2k8KKyqfCoiZbwpJOTXCJdLFtcIjhhNjRcIixcIvCgtYbwqamN8KiDqeSftPCkuqfworOC6aqy46mn8KmXtOO/reOUhvCli4fwqZ+U8KejiPCitYTpta7poJVcIl0sW1wiOGE3NlwiLFwi5I+Z8KaCpeaStOWTo/CitYzwoq+K8KGBt+Onu/Chga9cIl0sW1wiOGFhMVwiLFwi8KabmvCmnJbwp6ag5pOq8KWBkvCgsYPouajwooah8KitjPCgnLFcIl0sW1wiOGFhY1wiLFwi5KCL8KCGqeO/uuWhs/Cito1cIl0sW1wiOGFiMlwiLFwi8KSXiPCgk7zwpoKX8KC9jPCgtpbllbnkgrvkjrpcIl0sW1wiOGFiYlwiLFwi5Kq08KKppvChgp3ohqrpo7XwoLac5o2546e+8KKdtei3gOWaoeaRvOO5g1wiXSxbXCI4YWM5XCIsXCLwqpiB8KC4ifCiq4/worOJXCJdLFtcIjhhY2VcIixcIvChg4jwo6eC46aS46iG8KiKm+OVuPCluYnwooOH5ZmS8KC8sfCisrLwqZyg45K85rC98KS4u1wiXSxbXCI4YWRmXCIsXCLwp5W08KK6i/CiiIjwqpmb8KizjfCgubrwoLC08KagnOe+k/Chg4/woqCD8KKkueOXu/Clh6PwoLqM8KC+jfCguqrjvpPwoLyw8KC1h/ChhY/woLmMXCJdLFtcIjhhZjZcIixcIvCguqvwoK6p8KC1iPChg4DwoYS947+58KKaluaQsvCgvq1cIl0sW1wiOGI0MFwiLFwi8KOPtPCnmLnwoq+O8KC1vvCgtb/worGR8KKxleOomPCgupjwoYOH8KC8rvCqmLLwpq2Q8KizkvCotpnwqLOK6Zaq5ZOM6IuE5Za5XCJdLFtcIjhiNTVcIixcIvCpu4PpsKbpqrbwp52e8KK3rueFgOiFreiDrOWwnPCmlbLohLTjnpfljZ/wqIK96Ya28KC7uvCguI/woLm38KC7u+OXnfCkt6vjmInwoLOW5Zqv8KKetfChg4nwoLiQ8KC5uPChgbjwoYWI8KiIh/ChkZXwoLm58KS5kPCitqTlqZTwoYCd8KGAnvChg7XwoYO25Z6c8KC4kVwiXSxbXCI4YmExXCIsXCLwp5qU8KiLjfCgvrXwoLm78KWFvuOcg/CgvrbwoYaA8KWLmPCqir3wpKea8KGguvCkhbfwqIm85aKZ5Ymo45ia8KWcveeusuWtqOSggOSsrOm8p+Snp+mwn+mujfClrbTwo4S95Ze745ey5ZqJ5Lio5aSC8KGvgfCvobjpnZHwoIKG5Lmb5Lq745S+5bCj5b2R5b+E46O65omM5pS15q265rC15rC654Gs54ir5Lis54qt8KSjqee9kueku+ezuee9k/Cmiarjk4FcIl0sW1wiOGJkZVwiLFwi8KaNi+iAguiCgPCmmJLwpqWR5Y2d6KGk6KeB8KeisuiuoOi0nemShemVuOmVv+mXqPCouI/pn6bpobXpo47po57ppaPwqaCQ6bG86bif6buE5q2v76SH5Li38KCCh+mYneaIt+mSolwiXSxbXCI4YzQwXCIsXCLlgLvmt77wqbGz6b6m47eJ6KKP8KSFjueBt+WzteSsoPClh43jlZnwpbSw5oSi8Kiosui+p+mHtueGkeacmeeOuvCjioHwqoSH47KL8KGmgOSskOejpOeQguWGrvConI/kgInmqaPwqoq65Iij6JiP8KCpr+eoqvCppYfwqKuq6Z2V54GN5Yyk8KKBvumPtOebmfCop6Ppvqfnn53kuqPkv7DlgrzkuK/kvJfpvqjlkLTntovlopLlo5Dwoba25bqS5bqZ5b+C8KKckuaWi1wiXSxbXCI4Y2ExXCIsXCLwo4+55qSZ5qmD8KOxo+azv1wiXSxbXCI4Y2E3XCIsXCLniIDwpJSF546M47ub8KSok+WsleeSueiug/ClsqTwpZqV56qT56+s57OD57ms6Iu46JaX6b6p6KKQ6b6q6Lq56b6r6L+P6JWf6aeg6Yih6b6s8Ki2ufChkL/kgbHkiqLlqJpcIl0sW1wiOGNjOVwiLFwi6aGo5p2r5Im25Zy9XCJdLFtcIjhjY2VcIixcIuiXlvCkpbvoir/wp4SN5LKB8Ka1tOW1u/CmrJXwpr6+6b6t6b6u5a6W6b6v5pun57mb5rmX56eK47aI5JOD8KOJlvCinpbkjprklLZcIl0sW1wiOGNlNlwiLFwi5bOV8KOsmuirueWxuOO0kvCjlZHltbjpvrLnhZfklZjwpIOs8KG4o+Sxt+OluOORivCghqTwprGB6KuM5L608KCIueWmv+iFrOmhlvCpo7rlvLtcIl0sW1wiOGQ0MFwiLFwi8KCun1wiXSxbXCI4ZDQyXCIsXCLwooeB8KilreSEguSau/CpgbnjvIfpvrPwqoa15IO445+W5Ju38KaxhuSFvPComrLwp4+/5JWt46OU8KWSmuSVoeSUm+S2ieSxu+S1tuSXquO/iPCkrI/jmaHkk57kkr3kh63ltL7ltYjltZbjt7zjoI/ltqTltrnjoKDjoLjluYLlur3lvKXlvoPjpIjjpJTjpL/jpY3mg5fmhL3ls6Xjponmhrfmhrnmh4/jprjmiKzmipDmi6XmjJjjp7jlmrFcIl0sW1wiOGRhMVwiLFwi46iD5o+i5o+75pCH5pGa46mL5pOA5bSV5Zih6b6f46qX5paG46q95pe/5pmT46uy5pqS46yi5pyW462C5p6k5qCA462Y5qGK5qKE462y462x46275qSJ5qWD54mc5qWk5qaf5qaF46685qeW46+d5qml5qm05qmx5qqC46+s5qqZ46+y5qqr5qq15quU5qu25q6B5q+B5q+q5rG15rKq47OL5rSC5rSG5rSm5raB47Ov5rak5rax5riV5riY5rip5rqG8KingOa6u+a7oua7mum9v+a7qOa7qea8pOa8tOO1hvCjvYHmvoHmvr7jtarjtbXnhrflspnjtorngKzjtpHngZDngZTnga/ngb/ngonwoIyl5I+B45ex8KC7mFwiXSxbXCI4ZTQwXCIsXCLwo7uX5Z6+8Ka7k+eEvvCln6DjmY7mpqLwqK+p5a2056mJ8KWjofCpk5nnqaXnqb3wpaas56q756qw56uC56uD54eR8KaSjeSHiuermuerneerquSHr+WSsvClsIHnrIvnrZXnrKnwpYyO8KWzvueuouetr+iOnPClrrTwprG/56+Q6JCh566S56648KW0oOO2rfClsaXokpLnr7rnsIbnsLXwpbOB57GE57KD8KSigueypuaZvfCklbjns4nns4fns6bnsbTns7Pns7Xns45cIl0sW1wiOGVhMVwiLFwi57mn5JSd8Ka5hOe1nfCmu5bnko3ntonntqvnhLXntrPnt5LwpIGX8KaAqee3pOO0k+e3tfChn7nnt6XwqI2t57id8KaEofCmhZrnua7nupLkjKvpkaznuKfnvYDnvYHnvYfnpLbwpouQ6aeh576X8KaNkee+o/ChmaHwoIGo5JWc8KOdpuSUg/CojLrnv7rwppKJ6ICF6ICI6ICd6ICo6ICv8KqCh/Cms4PogLvogLzogaHwopyU5KaJ8KaYpvCjt6Pwppuo5pyl6IKn8KipiOiEh+iEmuWisPCim7bmsb/wppKY8KS+uOaTp/ChkoroiJjwoaGe5qmT8KSppfCkqpXkkbroiKnwoKyN8KapkvCjtb7kv7nwoZO96JOi6I2i8KasivCkpqfwo5Sw8KGds/Cjt7joiqrmpJvwr6aU5IebXCJdLFtcIjhmNDBcIixcIuiVi+iLkOiMmvCguJbwoZ6045uB8KOFvfCjlZroibvoi6LojJjwo7qL8Ka2o/CmrIXwpq6X8KOXjuO2v+iMneWXrOiOheSUi/CmtqXojqzoj4Hoj5Pjkb7wpruU5qmX6JWa45KW8Ka5gvCiu6/okZjwpa+k6JGx47eT5JOk5qqn6JGK8KOyteelmOiSqPCmrpbwprm38Ka5g+iTnuiQj+iOkeSSoOiSk+iTpPClspHkiYDwpbOA5JWD6JS05auy8Ka6meSUp+iVs+SUluaev+iYllwiXSxbXCI4ZmExXCIsXCLwqJil8KiYu+iXgfCngojomILwoZaC8KeDjfCvprLklaromKjjmYjwoaKi5Y+38KeOmuiZvuidsfCqg7jon67worCn6J6x6J+a6KCP5Zmh6Jms5qGW5JiP6KGF6KGG8KeXoPCjtrnwp5ek6KGe6KKc5Jmb6KK06KK15o+B6KOF55238Kecj+imh+imiuimpuimqeimp+imvPCoqKXop6fwp6Sk8KeqveiqnOeek+mHvuiqkPCnqZnnq6nwp6y68KO+j+Sck/CnrLjnhbzorIzorJ/wpZCw8KWVpeisv+itjOitjeiqqfCkqbrorpDorpvoqq/woZuf5JiV6KGP6LKb8Ke1lPCnto/wr6eU45yl8Ke1k+izlvCntpjwp7a96LSS6LSD8KGkkOizm+eBnOi0kfCks4nju5DotbdcIl0sW1wiOTA0MFwiLFwi6Lap8KiAgvChgJTwpKaK46288KiGvPCnhIznq6fouq3ourbou4Ppi5TovJnovK3wqI2l8KiQkui+pemMg/Cqip/woKmQ6L6z5KSq8KinnvColL3wo7a75bu48KOJoui/ufCqgJTwqJq88KiUgfCijKXjpoDwpruX6YC38KiUvPCnqr7pgaHwqJWs8KiYi+mCqPConJPpg4TwqJum6YKu6YO96YWn46uw6Yap6YeE57Ks8Kiks/ChuonpiI7msp/piYHpiaLwpZa56Yq58KirhvCjspvwqKyM8KWXm1wiXSxbXCI5MGExXCIsXCLwoLSx6Yys6Y2r8KirofCor6vngo/lq4PwqKui8KirpeSlpemJhPCor6zwqLC58Kivv+mNs+mRm+i6vOmWhemWpumQpumWoOa/tuSKufCimbrwqJuY8KGJvPCjuK7kp5/msJzpmbvpmpbkhazpmqPwpruV5oea6Zq256O18KiroOmaveWPjOSmofCmsrjwoIm08KaQkPCpgq/wqYOl8KSrkfChpJXwo4yK6Zyx6JmC6Zy25KiP5JS95JaF8KSrqeeBteWtgemcm+mdnPCph5XpnZflrYrwqYer6Z2f6ZCl5YOQ8KOCt/Cjgrzpnonpnp/pnrHpnr7pn4Dpn5Lpn6DwpZGs6Z+u55Cc8KmQs+mfv+mftfCpkJ3wp6W65KuR6aC06aCz6aGL6aGm46yO8KeFteO1kfCgmLDwpIWcXCJdLFtcIjkxNDBcIixcIvClnIbpo4rporfpo4jpo4fkq7/wprSn8KGbk+WWsOmjoemjpumjrOmNuOmkufCkqKnkrbLwqaGX8KmkhemntemojOmou+mokOmpmPClnKXjm4TwqYKx8KmvlemroOmrovCprIXpq7TksI7prJTprK3wqJiA5YC06ay08KamqOOjg/Cjgb3prZDprYDwqbS+5amF8KGho+mujvCkiYvpsILpr7/psIzwqbmo6beU8Km+t/CqhpLwqoar8KqDofCqhKPwqoef6bW+6baD8KqEtOm4juaiiFwiXSxbXCI5MWExXCIsXCLpt4TwooWb8KqGk/CqiKDwoaS78KqIs+m0ufCqgrnwqoq06bqQ6bqV6bqe6bqi5LS06bqq6bqv8KSNpOm7geOtoOOnpeO0neS8suOevvCosKvpvILpvIjkrpbpkKTwprai6byX6byW6by55Zqf5ZqK6b2F6aa48KmCi+mfsuiRv+m9oum9qeernOm+jueIluSuvvCkpbXwpKa754W38KSnuPCkjYjwpKmR546e8KivmvCho7rnpp/wqKW+8Ki4tumNqemPs/CoqYTpi6zpjoHpj4vwqKWs8KSSueeIl+O7q+edsuepg+eDkPCkkbPwpI+454W+8KGfr+eCo/Chor7wo5aZ47uH8KGihfClkK/woZ+445yi8KGbu/ChoLnjm6HwoZ208KGjkfClvYvjnKPwoZuA5Z2b8KSopfChj77woYqoXCJdLFtcIjkyNDBcIixcIvChj4bwoZK26JSD8KOapuiUg+iRlfCkppTwp4Wl8KO4sfCllZzwo7u78KeBkuSTtPCjm67wqaad8Ka8puafueOcs+OwleO3p+WhrPChpKLmoJDkgZfwo5y/8KSDofCkgovwpISP8KawoeWTi+WanvCmmrHlmpLwoL+f8KCuqPCguI3pj4bwqKyT6Y6c5Lu45YSr46CZ8KSQtuS6vPCgkaXwoI2/5L2L5L6K8KWZkeWpqPCghqvwoI+L46aZ8KCMivCgkJTjkLXkvKnwoIuA8Ki6s/CgibXoq5rwoIiM5LqYXCJdLFtcIjkyYTFcIixcIuWDjeWEjeS+ouS8g/CkqI7wo7qK5L2C5YCu5YGs5YKB5L+M5L+l5YGY5YO85YWZ5YWb5YWd5YWe5rm28KOWlfCjuLnwo7q/5rWy8KGihPCjuonlhqjlh4PwoJeg5JOd8KCSo/CgkpLwoJKR6LW68KiqnPCgnI7liZnliqTwoKGz5Yuh6Y2u5Jm654aM8KSOjPCgsKDwpKas8KGDpOankfCguJ3nkbnju57nkpnnkJTnkZbnjpjkro7wpKq88KSCjeWPkOOWhOeIj/Ckg4nllrTwoI2F5ZON8KCvhuWcnemJnembtOmNpuWfneWejeWdv+OYvuWji+WqmfCoqYbwoZu68KGdr/ChnJDlqKzlprjpio/lqb7lq4/lqJLwpaWG8KGns/ChoaHwpIqV45u15rSF55GD5aih8KW6g1wiXSxbXCI5MzQwXCIsXCLlqoHwqK+X8KCQk+mPoOeSjPChjIPnhIXkpbLpkIjwqKe76Y69456g5bCe5bKe5bme5bmI8KGmlvChpbzwo6uu5buN5a2P8KGkg/ChpITjnIHwoaKg45ud8KGbvuObk+iEqvCoqYfwoba68KORsvCopqjlvIzlvI7woaSn8KGeq+Wpq/ChnLvlrYTomJTwp5e96KGg5oG+8KKhoPCimKvlv5vjurjwopav8KKWvvCpgojwpr2z5oeA8KCAvvCggYbwopib5oaZ5oaY5oG18KKym/CitIfwpJuU8KmFjVwiXSxbXCI5M2ExXCIsXCLmkbHwpJml8KKtquOoqfCirKLwo5GQ8KmjqvCiubjmjLfwqpGb5pK25oyx5o+R8KSno/CitafmiqTworKh5pC75pWr5qWy46+08KOCjvCjiq3wpKaJ8KOKq+WUjfCji6DwoaOZ8KmQv+abjvCjionwo4az46ug5IaQ8KWWhPCorKLwpZaP8KGbvPCllZvwpZCl56Ou8KOEg/ChoKrwo4i045Gk8KOIj/CjhoLwpIuJ5pqO8Ka0pOaZq+Suk+aYsPCnobDwober5pmj8KOLkvCji6HmmJ7wpaGy46OR8KOguvCjnrzjrpnwo56i8KOPvueTkOOuluaej/CkmKrmorbmoJ7jr4Tmqr7joaPwo5+V8KSSh+aos+apkuarieashfChpJLmlJHmopjmqYzjr5fmqbrmrZfwo7+A8KOymumOoOmLsvCor6rwqKuLXCJdLFtcIjk0NDBcIixcIumKifCogJ7wqKec6ZGn5ral5ryL8KSnrOa1p/Cjvb/jto/muITwpIC85ai95riK5aGH5rSk56GC54S78KSMmvCkibbng7HniZDniofnipTwpJ6P8KScpeWFufCkqqTwoJer55G68KO7uPCjmZ/wpKmK8KSkl/Clv6HjvIbjurHwpKuf8Kiwo/CjvLXmgqfju7Pnk4znkLzpjofnkLfkkp/wpreq5JWR55aD472j8KSzmfCktIbjvZjnlZXnmbPwqpeG46yZ55Go8KirjPCkpqvwpKaO46u7XCJdLFtcIjk0YTFcIixcIuO3jfCkqY7ju7/wpKeF8KSjs+mHuuWcsumNgvCoq6PwoaGk5YOf8KWIofClh6fnnbjwo4iy55yO55yP55278KSal/CjnoHjqZ7wpKOw55C455Kb47q/8KSquvCkq4fkg4jwpKqW8KaGrumMh/ClloHnoJ7noo3noojno5Lnj5DnpZnwp52B8KWbo+SEjuemm+iSluempeaorfCju7rnqLrnp7Tkha7woZum5ISy6Yi156ex8KC1jPCkpozwoIqZ8KO2uvChna7jlpfllavjlbDjmqrwoIeU8KCwjeerouWpmfCim7Xwpaqv8KWqnOWojfCgiZvno7DlqKrwpa+G56u+5Ie557Gd57Gt5IiR8KWus/Clurzwpbqm57ON8KSnufChnrDnso7nsbznsq7mqrLnt5znuIfnt5PnvY7wpomhXCJdLFtcIjk1NDBcIixcIvCmhZzwp62I57aX8KW6guSJqvCmrbXwoKSW5p+W8KCBjvCjl4/ln4TwppCS8KaPuPCkpaLnv53nrKfwoKCs8KWrqfCltYPnrIzwpbiO6aem6JmF6amj5qic8KOQv+OnovCkp7fwppat6aif8KaWoOiSgPCnhKfwprOR5JOq6IS35JCC6IOG6ISJ6IWC8KaetOmjg/CmqYLoiaLoiaXwpqmR6JGT8Ka2p+iYkPCniJvlqobkhb/woaGA5ayr8KGioeWrpPCho5jomqDwr6a88KO2j+igrfCnkKLlqIJcIl0sW1wiOTVhMVwiLFwi6KGu5L2F6KKH6KK/6KOm6KWl6KWN8KWag+illPCnnoXwp56E8KivtfCor5nwqK6c8KinueO6reiSo+SbteSbj+OfsuioveionPCpkYjlvY3piKvwpIqE5peU54Sp54OE8KGhhem1reiyn+izqfCnt5zlpprnn4Plp7Dkja7jm5TouKrouqfwpLCJ6Lyw6L2K5Iu05rGY5r678KKMoeSim+a9uea6i/Chn5rpr6njmrXwpKSv6YK76YKX5ZWx5KSG6Ya76ZCE8Kipi+SBovCoq7zpkKfwqLCd8Kiwu+iTpeioq+mWmemWp+mWl+mWlvCotLTnkYXju4LwpKO/8KSpgvCkj6rju6fwo4il6ZqP8Ki7p/CouabwqLml47uM8KSnrfCkqbjwo7+u55CS55Gr47u86Z2B8KmCsFwiXSxbXCI5NjQwXCIsXCLmoYfkqJ3wqYKT8KWfn+mdnemNqPCoponwqLCm8Kisr/Cmjr7pirrlrJHorankpLznj7nwpIib6Z6b6Z2x6aS48KC8puW3gfCor4XwpKqy6aCf8KmTmumLtvCpl5fph6Xkk4DwqK2Q8KSpp/CoraTpo5zwqKmF47yA6Yiq5KSl6JCU6aS76aWN8KeshuO3vemmm+Str+mmqumpnPCoraXwpaOI5qqP6aih5au+6aiv8KmjseSukPCppYjpprzkrr3krpfpjb3lobLwoYyC5aCi8KSmuFwiXSxbXCI5NmExXCIsXCLwoZOo56GE8KKcn/Cjtrjmo4Xjtb3pkZjjpKfmhZDwop6B8KKlq+aEh+mxj+mxk+mxu+mwtemwkOmtv+mvj/CpuK3prp/wqoe18KqDvum0oeSyrvCkhITpuJjksrDptIzwqoa08KqDrfCqg7PwqaSv6bal6JK98Ka4kvCmv5/wpq6C6Je85JSz8Ka2pPCmuoTwprew6JCg6Jeu8Ka4gPCjn5fwpoGk56ei8KOWnPCjmYDkpK3wpKee47Wi6Y+b6Yq+6Y2I8KCKv+eiuemJt+mRjeS/pOORgOmBpPCllZ3noL3noZTnorbnoYvwoZ2X8KOHifCkpYHjmprkvbLmv5rmv5nngJ7ngJ7lkJTwpIa15Z675aOz5Z6K6bSW5Z+X54S045Kv8KSGrOeHq/CmsYDwpL6X5ayo8KGetfCoqYlcIl0sW1wiOTc0MFwiLFwi5oSM5auO5aiL5Iq88KSSiOOcrOStu/Cop7zpjrvpjrjwoaOW8KC8neiRsvCms4DwoZCT8KSLuvCisKbwpI+B5aaU8KO2t/CmnYHntqjwpoWb8KaCpPCkprnwpKaL8KinuumLpeePouO7qeeStPCoraPwoaKf47uh8KSqs+armOePs+ePu+O7lvCkqL7wpKqU8KGfmfCkqabwoI6n8KGQpPCkp6XnkYjwpKSW54Kl8KSltumKhOePpumNn/Cgk77pjLHwqKuO8KiolumOhvCor6fwpZeV5KS18KiqgueFq1wiXSxbXCI5N2ExXCIsXCLwpKWD8KCzv+WapPCgmJrwoK+r8KCyuOWUguenhPChn7rnt77woZuC8KSpkPChoZLklK7pkIHjnIrwqKuA8KSmreWmsPChor/woaKD8KeShOWqoeObovCjtZvjmrDpiZ/lqbnwqKqB8KGhoumNtOOzjfCgqrTkqpbjporlg7TjtanjtYzwoY6c54W15Iu78KiImOa4j/Cpg6Tkk6vmtZfwp7mP54Gn5rKv47OW8KO/rfCjuK3muILmvIzjta/woI+155WR45q845OI5JqA47ua5KGx5aeE6Ymu5KS+6L2B8KiwnPCmr4DloJLln4jjm5bwoZGS54O+8KSNovCkqbHwor+j8KGKsPCijr3mornmpafwoY6Y8KOTpfCnr7Two5uf8Kiqg/Cjn5bwo4+68KSyn+aomvCjmq3wprK36JC+5JOf5JOOXCJdLFtcIjk4NDBcIixcIvCmtKbwprWR8KaygvCmv57mvJfwp4SJ6Iy98KGcuuiPrfCmsoDwp4GT8KGfm+WmieWqgvChnrPlqaHlqbHwoaSF8KSHvOOcreWnr/ChnLzjm4fnho7pjpDmmprwpIql5amu5air8KSKk+aoq/Cju7nwp5y28KSRm/Cki4rnhJ3wpImZ8KinoeS+sPCmtKjls4LwpJOO8Ke5jfCkjr3mqIzwpImW8KGMhOeCpueEs/Ckj6njtqXms5/wr6Cl8KSpj+e5peWnq+W0r+O3s+W9nPCkqZ3woZ+f57ak6JCmXCJdLFtcIjk4YTFcIixcIuWShfCjq7rwo4yA8KCIlOWdvvCgo5XwoJiZ47+l8KG+nvCqirbngIPwqYWb5bWw546P57OT8KipmfCpkKDkv4jnv6fni43njJDwp6u054y454y58KWbtueNgeeNiOO6qfCnrJjpgaznh7XwpKOy54+h6Ie247uK55yM47uR5rKi5Zu955CZ55Ce55Cf47ui47uw47u047u655OT47yO472T55WC55Wt55Wy55aN472855eI55ec47+A55mN47+X55m047+c55m68KS9nOeGiOWYo+imgOWhqeSAneedg+SAueadoeSBheOXm+eemOSBquSBr+Wxnueevuefi+WjsuegmOeCueegnOSCqOegueehh+ehkeehpuiRiPCllLXnpLPmoIPnpLLkhINcIl0sW1wiOTk0MFwiLFwi5ISJ56aR56aZ6L6756iG6L685IWn56qR5Iay56q86Im55IeE56uP56ub5IeP5Lih562i562s562757CS57Cb5Img5Im657G757Kc5IqM57K45IqU57Ot6L6T54OA8KCzj+e3j+e3lOe3kOe3vee+rue+tOeKn+SOl+iAoOiApeesueiAruiAseiBlOO3jOWetOeCoOiCt+iDqeSPreiEjOeMquiEjuiEkueVoOiElOSQgeOsueiFluiFmeiFmlwiXSxbXCI5OWExXCIsXCLkkJPloLrohbzohoTkkKXohpPkkK3ohqXln6/oh4Hoh6ToiZTkko/oiqboibboi4roi5joi7/kkrDojZfpmanmporokIXng7XokaTmg6PokojklITokr7ok6Hok7jolJDolLjolZLklLvola/olbDol6DklbfombLompLomrLom6/pmYXonovkmIbkmJfooq7oo7/opKTopYfoppHwp6Wn6Kip6Ki46KqU6Kq06LGR6LOU6LOy6LSc5J6Y5aGf6LeD5J+t5Luu6Li65ZeY5Z2U6Lmx5Ze16Lqw5KC36LuO6Lui6Luk6Lut6Luy6L636L+B6L+K6L+M6YCz6aeE5KKt6aOg6YiT5KSe6Yio6YmY6Ymr6Yqx6Yqu6Yq/XCJdLFtcIjlhNDBcIixcIumLo+mLq+mLs+mLtOmLvemNg+mOhOmOreSlheSlkem6v+mQl+WMgemQnemQremQvuSlqumRlOmRuemUremWouSmp+mXtOmYs+SnpeaeoOSopOmdgOSotemesumfguWZlOSrpOaDqOmiueSsmemjseWhhOmkjumkmeWGtOmknOmkt+mlgumlnemlouStsOmnheSunemovOmsj+eqg+mtqemugemvnemvsemvtOSxremwoOOdr/Chr4LptYnpsLpcIl0sW1wiOWFhMVwiLFwi6bu+5ZmQ6baT6ba96beA6be86ZO26L626bm76bqs6bqx6bq96buG6ZOc6bui6bux6bu456uI6b2E8KCClPCgirfwoI6g5qSa6ZOD5aas8KCTl+WhgOmTgeOeufCgl5XwoJiV8KCZtvChmrrlnZfnhbPwoKuC8KCrjfCgrr/lkarwr6C78KCvi+WSnvCgr7vwoLC78KCxk/CgsaXwoLG85oOn8KCyjeWZuvCgsrXwoLOd8KCzrfCgta/woLay8KC3iOallemwr+iepfCguITwoLiO8KC7l/CgvpDwoLyt8KC5s+WwoPCgvrzluIvwoYGc8KGBj/ChgbbmnJ7woYG78KGCiPChgpbjmYfwoYK/8KGDk/ChhK/woYS75Y2k6JKt8KGLo/ChjbXwoYy26K6B8KGVt/ChmJnwoZ+D8KGfh+S5uOeCu/ChoK3woaWqXCJdLFtcIjliNDBcIixcIvChqK3woamF8KGwqvChsbDwobKs8KG7iOaLg/Chu5XwobyV54aY5qGV8KKBheanqeObiPCiibzwoo+X8KKPuvCinKrwoqGx8KKlj+iLvfCipafwoqaT8KKrleimpfCiq6jovqDwoqyO6Z648KKsv+mhh+mqvfCisYxcIl0sW1wiOWI2MlwiLFwi8KKyiPCisrfwpa+o8KK0iPCitJLwora38KK2lfCiuYLwor208KK/jPCjgLPwo4Gm8KOMn/Cjj57lvrHmmYjmmr/wp6m58KOVp/Cjl7PniIHwpKa655+X8KOYmvCjnJbnuofwoI2G5aK15pyOXCJdLFtcIjliYTFcIixcIuakmPCjqqfwp5mX8KW/ovCjuJHwo7q58KeXvvCigprko5DkqrjwpISZ8KiqmvCki67wpIyN8KSAu/CkjLTwpI6W8KSphfCgl4rlh5LwoJiR5aaf8KG6qOOuvvCjs7/wpJCE8KSTluWeiPCkmbTjppvwpJyv8KiXqPCpp4njnaLwooeD6K2e8KitjumnlvCkoJLwpKO78KSoleeIifCkq4DwoLG45aWl8KS6pfCkvobwoJ256Lua8KWArOWKj+Wcv+eFsfClipnwpZCZ8KO9ivCkqqfllrzwpZGG8KWRrvCmrZLph5TjkbPwpZS/8KeYsvCllZ7knJjwpZWi8KWVpvCln4fwpKS/8KWhneWBpuOTu/Cjj4zmg57wpaSD5J288KiliPClqq7wpa6J8KWwhvChtpDlnqHnhZHmvrbwpoSC8KewkumBlvCmhrLwpL6a6K2i8KaQgvCmkYpcIl0sW1wiOWM0MFwiLFwi5bWb8Kavt+i8tvCmkoTwoaSc6Kuq8KSntvCmkojwo7+v8KaUkuSvgPCmlr/wppq18KKcm+mRpfCln6HmhpXlqKfwr6ON5L675Zq58KSUofCmm7zkuarwpKS06ZmW5raP8KayveOYmOilt/CmnpnwpqGu8KaQkfCmoZ7nh5/wpqOH562C8KmDgPCgqJHwpqSm6YSE8Kakueephem3sPCmp7rpqKbwpqit45mf8KaRqfCggKHnpoPwpqi08Katm+W0rPCjlJnoj4/wpq6d5JuQ8KaypOeUu+ihpfCmtq7lorZcIl0sW1wiOWNhMVwiLFwi45yc8KKWjfCngYvwp4eN47GU8KeKgPCnioXpioHwooW68KeKi+mMsPCni6bwpKeQ5rC56ZKf8KeRkPCgu7jooKfoo7XwoqSm8KiRs/ChnrHmurjwpKiq8KGgoOOmpOOaueWwkOeno+SUv+aatvCpsq3wqaKk6KWD8KefjPCnoZjlm5bkg5/woZiK46ah8KOcr/Cog6jwoY+F54at6I2m8KennfCphqjlqafksrfwp4Kv8Kimq/Cnp73wp6iK8Kesi/CntabwpIW6562D56W+8KiAiea+tfCqi5/mqIPwqIyY5Y6i8Ka4h+mOv+agtumdnfCoha/wqICj8KamtfChj63wo4iv8KiBiOW2hfCosLDwqIKD5ZyV6aCj8KilieW2q/Ckpojmlr7mp5Xlj5LwpKql8KO+geOwkeactvCogpDwqIO08KiErvChvqHwqIWPXCJdLFtcIjlkNDBcIixcIvCohonwqIav8KiImvCojIbwqIyv8KiOiuOXivCokajwqJqq5KO65o+m8KilluegiOmJlfCoprjkj7LwqKen5I+f8KinqPCorYbwqK+U5ae48Kiwiei8i/Cov4XwqYOs562R8KmEkPCphLzjt7fwqYWe8KSriui/kOeKj+Wai/Cpk6fwqZep8KmWsPCplrjwqZyy8KmjkfCppYnwqaWq8Kmng/CpqKjwqayO8Km1mvCptpvnup/wqbu48Km8o+SypOmVh/CqipPnhqLwqou/5LaR6YCS8KqXi+S2nPCgspzovr7ll4FcIl0sW1wiOWRhMVwiLFwi6L668KKSsOi+ufCkqpPklInnub/mvZbmqrHku6rjk6TwqKys8KeineOcuui6gPChn7XwqICk8KitrPCorpnwp6i+8Kaar+O3q/CnmZXwo7K38KWYtfClpZbkuprwpbqB8KaJmOWav/Cgua3ouI7lra3wo7qI8KSynuaPnuaLkPChn7bwoaG75pSw5Zit8KWxiuWQmvCljJHjt4bwqbaY5LG95Zii5Zie572J8KW7mOWltfCjtYDonbDkuJzwoL+q8KC1ifCjmrrohJfptZ7otJjnmLvpsYXnmY7nnrnpjYXlkLLohYjoi7flmKXohLLokJjogr3ll6rnpaLlmYPlkJbwoLqd45eO5ZiF5Zex5pux8KiLouOYreeUtOWXsOWWuuWSl+WVsvCgsYHwoLKW5buQ8KWFiPCgubbworGiXCJdLFtcIjllNDBcIixcIvCguqLpuqvntZrll57woYG15oqd6Z2t5ZKU6LON54e26YW25o+85o655o++5ZWp8KKtg+mxsvCiurPlhprjk5/woLan5Yan5ZGN5ZSe5ZST55mm6Lit8KaiiueWseiCtuighOiehuijh+iGtuiQnPChg4Hkk6znjITwpJyG5a6Q6IyL8Kaik+WZu/Cim7Twp7Sv8KSGo/CntbPwpruQ8KeKtumFsPChh5npiIjwo7O88KqaqfCguqzwoLu554mm8KGyouSdjvCkv4Lwp7+58KC/q+SDulwiXSxbXCI5ZWExXCIsXCLpsZ3mlJ/worag5KOz8KSfoPCptbzwoL+s8KC4iuaBovCnlqPwoL+tXCJdLFtcIjllYWRcIixcIvCmgYjwoYaH54aj57qO6bWQ5Lia5LiE45W35ayN5rKy5Y2n45qs46ec5Y2945ql8KSYmOWimvCkra7oiK3lkYvlnqrwpaqV8KCluVwiXSxbXCI5ZWM1XCIsXCLjqZLwopGl54208Km6rOS0iemvrfCjs77wqbyw5LGb8KS+qfCplp7wqb+e6JGc8KO2tvCnirLwpp6z8KOcoOaMrue0pfCju7fwo7is46iq6YCI5YuM47m045m65Jep8KCSjueZgOWrsPCgurbnobrwp7yu5aKn5IK/5Zm86a6L5bW055mU8KqQtOm6heSzoeeXueOfu+aEmfCjg5rwpI+yXCJdLFtcIjllZjVcIixcIuWZnfChiqnlnqfwpKWj8Km4huWItPCngq7jlq3msYrptbxcIl0sW1wiOWY0MFwiLFwi57GW6ay55Z+e8KGdrOWxk+aTk/Cpk5Dwpoy18KeFpOiarfCgtKjwprSi8KSrovCgtbFcIl0sW1wiOWY0ZlwiLFwi5Ye+8KG8j+W2jumcg/Cht5HpuoHpgYznrJ/prILls5HnrqPmiajmjLXpq7/nr4/prKrnsb7prK7nsYLnsobpsJXnr7zprInpvJfpsJvwpKS+6b2a5ZWz5a+D5L+96bqY5L+y5Ymg47iG5YuR5Z2n5YGW5aa35biS6Z+I6bar6L2c5ZGp6Z606aWA6Z665Yys5oSwXCJdLFtcIjlmYTFcIixcIuakrOWPmumwium0guSwu+mZgeamgOWCpueVhvChna3pp5rlibNcIl0sW1wiOWZhZVwiLFwi6YWZ6ZqB6YWcXCJdLFtcIjlmYjJcIixcIumFkfCoupfmjb/wprSj5quK5ZiR6YaO55W65oqF8KCPvOeNj+exsPClsKHwo7O9XCJdLFtcIjlmYzFcIixcIvCkpJnnm5bprp3kuKrwoLOU6I6+6KGCXCJdLFtcIjlmYzlcIixcIuWxiuangOWDreWduuWIn+W3teS7juawsfCgh7LkvLnlkpzlk5rliprotoLjl77lvIzjl7NcIl0sW1wiOWZkYlwiLFwi5q2S6YW86b6l6a6X6aCu6aK06aq66bqo6bqE54W656yUXCJdLFtcIjlmZTdcIixcIuavuuigmOe9uFwiXSxbXCI5ZmViXCIsXCLlmKDwqpmK6Lm36b2TXCJdLFtcIjlmZjBcIixcIui3lOi5j+m4nOi4geaKgvCojb3ouKjoubXnq5PwpKm356i+56OY5rOq6Kmn55iHXCJdLFtcImEwNDBcIixcIvCoqZrpvKbms47on5bnl4Pwqoqy56GT8K+hgOi0jOeLoueNseisreeMgueTseizq/CkqrvomK/lvrrooqDkkrdcIl0sW1wiYTA1NVwiLFwi8KGgu/CmuIVcIl0sW1wiYTA1OFwiLFwi6Km+8KKUm1wiXSxbXCJhMDViXCIsXCLmg73nmafpq5fptYTpja7pro/on7VcIl0sW1wiYTA2M1wiLFwi6KCP6LO354ys6Zyh6a6w45eW54qy5LCH57GR6aWK8KaFmeaFmeSwhOm6luaFvVwiXSxbXCJhMDczXCIsXCLlnZ/mha/miqbmiLnmi47jqZzmh6Lljqrwo4+15o2k5qCC45eSXCJdLFtcImEwYTFcIixcIuW1l/Cor4Lov5rwqLi5XCJdLFtcImEwYTZcIixcIuWDmfChtYbnpIbljLLpmLjwoLy75IGlXCJdLFtcImEwYWVcIixcIuefvlwiXSxbXCJhMGIwXCIsXCLns4Lwpbya57Oa56it6IGm6IGj57WN55SF55Oy6KaU6Iia5pyM6IGi8KeShuiBm+eTsOiEg+ecpOimifCmn4znlZPwpruR6J6p6J+O6IeI6J6M6KmJ6LKt6K2D55yr55O46JOa45i15qay6LamXCJdLFtcImEwZDRcIixcIuimqeeRqOa2ueifgfCkgJHnk6fjt5vnhbbmgqTmhpzjs5HnhaLmgbdcIl0sW1wiYTBlMlwiLFwi572x8KisreeJkOaDqeStvuWIoOOwmPCjs4fwpbuX8KeZlvCllLHwoaWE8KGLvvCppIPwprec8KeCreWzgfCmhq3wqKiP8KOZt/Cgg67wpqGG8KS8juSVouWsn/CmjYzpvZDpuqbwpomrXCJdLFtcImEzYzBcIixcIuKQgFwiLDMxLFwi4pChXCJdLFtcImM2YTFcIixcIuKRoFwiLDksXCLikbRcIiw5LFwi4oWwXCIsOSxcIuS4tuS4v+S6heS6oOWGguWGluWGq+WLueWMuOWNqeWOtuWkiuWugOW3m+K8s+W5v+W7tOW9kOW9oeaUtOaXoOeWkueZtui+tematsKoy4bjg73jg77jgp3jgp7jgIPku53jgIXjgIbjgIfjg7zvvLvvvL3inL3jgYFcIiwyM10sW1wiYzc0MFwiLFwi44GZXCIsNTgsXCLjgqHjgqLjgqPjgqRcIl0sW1wiYzdhMVwiLFwi44KlXCIsODEsXCLQkFwiLDUsXCLQgdCWXCIsNF0sW1wiYzg0MFwiLFwi0JtcIiwyNixcItGR0LZcIiwyNSxcIuKHp+KGuOKGueOHj/Cgg4zkuZrwoIKK5YiC5JKRXCJdLFtcImM4YTFcIixcIum+sOWGiOm+sfCnmIdcIl0sW1wiYzhjZFwiLFwi77+i77+k77yH77yC44ix4oSW4oSh44Kb44Kc4rqA4rqE4rqG4rqH4rqI4rqK4rqM4rqN4rqV4rqc4rqd4rql4rqn4rqq4rqs4rqu4rq24rq84rq+4ruG4ruK4ruM4ruN4ruP4ruW4ruX4rue4rujXCJdLFtcImM4ZjVcIixcIsqDyZDJm8mUybXFk8O4xYvKismqXCJdLFtcImY5ZmVcIixcIu+/rVwiXSxbXCJmYTQwXCIsXCLwoJWH6Yub8KCXn/Cjv4XolYzkirXnj6/lhrXjmYnwpKWC8KinpOmNhPChp5voi67wo7OI56C85p2E5ouf8KSks/CopqrwoIqg8Kaus/ChjIXkvqvwopOt5YCI8Ka0qfCnqoTwo5iA8KSqsfCilJPlgKnwoI2+5b6k8KCOgPCgjYfmu5vwoJCf5YG95YSB45G65YSO6aGs452D6JCW8KSmpPCgkoflhaDwo4605YWq8KCvv/Cig7zwoIul8KKUsPCglo7wo4iz8KGmg+WuguidvfCglrPwo7KZ5Yay5Ya4XCJdLFtcImZhYTFcIixcIum0tOWHieWHj+WHkeOznOWHk/CkqqblhrPlh6LljYLlh63oj43mpL7wo5yt5b275YiL5Yim5Yi85Yq15YmX5YqU5Yq55YuF57CV6JWC5Yug6JiN8Kask+WMhfCoq57llYnmu5nwo76A8KCllPCjv6zljLPljYTwoK+i5rOL8KGcpuagm+ePleaBiuO6quOjjPChm6jnh53kkqLlja3ljbTwqJqr5Y2+5Y2/8KGWlvChmJPnn6bljpPwqKqb5Y6g5Y6r5Y6u546n8KWdsuO9meeOnOWPgeWPheaxieS5ieWfvuWPmeOqq/Cgro/lj6Dwo7+r8KK2o+WPtvCgsbflkJPngbnllKvmmZfmtZvlka3wpq2T8KC1tOWVneWSj+WSpOSepvChnI3woLud47a08KC1jVwiXSxbXCJmYjQwXCIsXCLwqKa88KKamOWVh+SzreWQr+eQl+WWhuWWqeWYhfCho5fwpIC65JWS8KSQteaas/ChgrTlmLfmm43wo4qK5pqk5pqt5ZmN5ZmP56Ox5Zux6Z6H5Y++5ZyA5Zuv5Zut8KitpuOYo/ChiY/lnYbwpIal5rGu54KL5Z2C45qx8KaxvuWfpvChkJbloIPwoZGU8KSNo+WgpvCkr7XloZzloqrjlaHlo6Dlo5zwoYi85aO75a+/5Z2D8KqFkPCkibjpj5PjlqHlpJ/moqbjm4PmuZlcIl0sW1wiZmJhMVwiLFwi8KGYvuWopOWVk/ChmpLolIXlp4nwoLWO8KaygfCmtKrwoZ+c5aeZ8KGfu/ChnrLwpram5rWx8KGgqPChm5Xlp7nwprmF5aqr5amj45um8KSmqeWpt+OciOWqlueRpeWrk/CmvqHwopWU47aF8KGkkeOcsvChmrjluoPli5Dlrbbmlojlrbzwp6iO5ICE5KGd8KCIhOWvleaFoPChqLTwpaeM8KCWpeWvs+WuneS0kOWwhfChrYTlsJPnj47lsJTwobKl8KasqOWxieSjneWyheWzqeWzr+W2i/Cht7nwobi35bSQ5bSY5bWG8KG6pOWyuuW3l+iLvOOgrfCkpIHwooGJ8KKFs+iKh+OgtuOvguW4ruaqiuW5teW5uvCkkrzwoLOT5Y6m5Lq35buQ5Y6o8KGdseW4ieW7tPCokoJcIl0sW1wiZmM0MFwiLFwi5bu55bu746Kg5bu85qC+6ZCb5byN8KCHgfCvopTjq57koq7woYy65by68KaiiPCij5DlvZjwopGx5b2j6Z698Ka5ruW9sumNgPCoqLblvqfltrbjtZ/wpYmQ8KG9qvCng7jwopmo6YeW8KCKnvCoqKnmgLHmmoXwoaG346Wj47eH45i55Z6Q8KKetOelseO5gOaCnuaCpOaCs/CkpoLwpKaP8Kepk+eSpOWDoeWqoOaFpOiQpOaFgvCvoqbwpruS5oaB5Ye08KCZluaGh+WuqvCjvrdcIl0sW1wiZmNhMVwiLFwi8KKhn+aHk/Corp3wqaWd5oeQ46Sy8KKmgPCio4HmgKPmhZzmlJ7mjovwoISY5ouF8KGdsOaLlfCiuI3mjazwpKef46iX5pC45o+48KGOjvChn7zmkpDmvorwori26aCU8KSCjPClnJ3mk6Hmk6XpkbvjqabmkLrjqZfmlY3mvJbwpKio8KSoo+aWheaVreaVn/Cjgb7mlrXwpKWA5Ky35peR5IOY8KGgqeaXoOaXo+W/n/CjkIDmmJjwo4e38KOHuOaZhPCjhqTwo4al5pmL8KC5teaZp/Clh6bmmbPmmbTwobi98KOIsfCol7Two4eI8KWMk+efhfCio7fppqTmnILwpI6c8KSooeOsq+anuvCjn4LmnZ7mnafmnaLwpIeN8KmDreafl+STqeagoua5kOmIvOaggfCjj6bwprag5qGdXCJdLFtcImZkNDBcIixcIvCjka/mp6HmqIvwqKuf5qWz5qOD8KOXjeakgeakgOO0suOogfCjmLzjroDmnqzmpaHwqKmK5Iu85qS25qaY466h8KCPieiNo+WCkOanufCjmZnwooSq5qmF8KOcg+aqneOvs+aeseariPCphpzjsI3mrJ3woKSj5oOe5qy15q208KKfjea6tfCjq5vwoI618KGlmOOdgOWQofCjrZrmr6Hwo7u85q+c5rC38KKSi/Cko7Hwpq2R5rGa6Iim5rG58KO2vOSThfCjtr3wpIak8KSkjPCkpIBcIl0sW1wiZmRhMVwiLFwi8KOzieObpeOzq/CgtLLproPwo4e58KKSkee+j+agt/CmtKXwprah8Ka3q+a2lua1nOa5vOa8hPCkpb/wpIKF8Ka5suiUs/CmvbTlh4fmspzmuJ3okK7wqKyh5riv8KO4r+eRk/CjvoLnp4zmuY/lqpHwo4GL5r+445yN5r6d8KO4sOa7uvChkpfwpIC95JWV6Y+w5r2E5r2c47WO5r208KmFsOO0u+a+n/CkhYTmv5PwpIKR8KSFlfCkgLnwo7+w8KO+tPCkhL/lh5/wpIWW8KSFl/CkhYDwpoed54GL54G+54Kn54KB54OM54OV54OW54Of5ISE47eo54a054aW8KSJt+eEq+eFheWqiOeFiueFruWynPCkjaXnhY/pjaLwpIuB54Ss8KSRmvCkqKfwpKii54a68KivqOeCveeIjlwiXSxbXCJmZTQwXCIsXCLpkYLniJXlpJHpkYPniKTpjYHwpZiF54iu54mA8KSltOaiveeJleeJl+O5lfCjgYTmoI3mvL3nioLnjKrnjKvwpKCj8Kigq+SjrfCooITnjKjnjK7nj4/njqrwoLC68KaoruePieeRifCkh6LwoZun8KSopOaYo+ObhfCkprfwpKaN8KSnu+ePt+eQleakg/CkqKbnkLnwoJeD47uX55Gc8KKireeRoPCourLnkYfnj6TnkbbojrnnkazjnLDnkbTpj7HmqKznkoLkpZPwpKqMXCJdLFtcImZlYTFcIixcIvCkhZ/wpKm58Kiuj+WthvCosIPwoaKe55OI8KGmiOeUjueTqeeUnvCou5nwoamL5a+X8Ki6rOmOheeVjeeViueVp+eVrvCkvoLjvITwpLST55aO55Gd55ae55a055iC55is55mR55mP55mv55m28KaPteeakOiHr+OfuPCmpJHwpqSO55qh55ql55q355uM8Ka+n+iRovClgp3wpYW98KG4nOecnuecpuedgOaSr/CliKDnnZjwo4qs556v8KilpPCopajwoZuB55+056CJ8KGNtvCkqJLmo4rnoq/no4fno5PpmqXnpK7wpZeg56OX56S056Kx8KeYjOi+uOiihPCorKvwpoKD8KKYnOemhuikgOakguemgPCloZfnpp3wp6y556S856ap5riq8KeEpuO6qOenhvCphI3np5RcIl1dJyl9LGZ1bmN0aW9uKHQsZSl7fSxmdW5jdGlvbih0LGUpe30sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMjE1KSxyPW4oMjI5KSgoZnVuY3Rpb24odCxlKXtyZXR1cm4gbnVsbD09dD97fTppKHQsZSl9KSk7dC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIxNikscj1uKDIyNik7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGkodCxlLChmdW5jdGlvbihlLG4pe3JldHVybiByKHQsbil9KSl9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMTcpLHI9bigyMjUpLGE9bigzMik7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIG89LTEscz1lLmxlbmd0aCxjPXt9OysrbzxzOyl7dmFyIHU9ZVtvXSxsPWkodCx1KTtuKGwsdSkmJnIoYyxhKHUsdCksbCl9cmV0dXJuIGN9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigzMikscj1uKDQ2KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MCxhPShlPWkoZSx0KSkubGVuZ3RoO251bGwhPXQmJm48YTspdD10W3IoZVtuKytdKV07cmV0dXJuIG4mJm49PWE/dDp2b2lkIDB9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big3KSxyPW4oNDUpLGE9L1xcLnxcXFsoPzpbXltcXF1dKnwoW1wiJ10pKD86KD8hXFwxKVteXFxcXF18XFxcXC4pKj9cXDEpXFxdLyxvPS9eXFx3KiQvO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe2lmKGkodCkpcmV0dXJuITE7dmFyIG49dHlwZW9mIHQ7cmV0dXJuIShcIm51bWJlclwiIT1uJiZcInN5bWJvbFwiIT1uJiZcImJvb2xlYW5cIiE9biYmbnVsbCE9dCYmIXIodCkpfHwoby50ZXN0KHQpfHwhYS50ZXN0KHQpfHxudWxsIT1lJiZ0IGluIE9iamVjdChlKSl9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMjApLHI9L1teLltcXF1dK3xcXFsoPzooLT9cXGQrKD86XFwuXFxkKyk/KXwoW1wiJ10pKCg/Oig/IVxcMilbXlxcXFxdfFxcXFwuKSo/KVxcMilcXF18KD89KD86XFwufFxcW1xcXSkoPzpcXC58XFxbXFxdfCQpKS9nLGE9L1xcXFwoXFxcXCk/L2csbz1pKChmdW5jdGlvbih0KXt2YXIgZT1bXTtyZXR1cm4gNDY9PT10LmNoYXJDb2RlQXQoMCkmJmUucHVzaChcIlwiKSx0LnJlcGxhY2UociwoZnVuY3Rpb24odCxuLGkscil7ZS5wdXNoKGk/ci5yZXBsYWNlKGEsXCIkMVwiKTpufHx0KX0pKSxlfSkpO3QuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMjEpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgZT1pKHQsKGZ1bmN0aW9uKHQpe3JldHVybiA1MDA9PT1uLnNpemUmJm4uY2xlYXIoKSx0fSkpLG49ZS5jYWNoZTtyZXR1cm4gZX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDUwKTtmdW5jdGlvbiByKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdHx8bnVsbCE9ZSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiRXhwZWN0ZWQgYSBmdW5jdGlvblwiKTt2YXIgbj1mdW5jdGlvbigpe3ZhciBpPWFyZ3VtZW50cyxyPWU/ZS5hcHBseSh0aGlzLGkpOmlbMF0sYT1uLmNhY2hlO2lmKGEuaGFzKHIpKXJldHVybiBhLmdldChyKTt2YXIgbz10LmFwcGx5KHRoaXMsaSk7cmV0dXJuIG4uY2FjaGU9YS5zZXQocixvKXx8YSxvfTtyZXR1cm4gbi5jYWNoZT1uZXcoci5DYWNoZXx8aSksbn1yLkNhY2hlPWksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIyMyk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10P1wiXCI6aSh0KX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIyKSxyPW4oMjI0KSxhPW4oNyksbz1uKDQ1KSxzPWk/aS5wcm90b3R5cGU6dm9pZCAwLGM9cz9zLnRvU3RyaW5nOnZvaWQgMDt0LmV4cG9ydHM9ZnVuY3Rpb24gdChlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gZTtpZihhKGUpKXJldHVybiByKGUsdCkrXCJcIjtpZihvKGUpKXJldHVybiBjP2MuY2FsbChlKTpcIlwiO3ZhciBuPWUrXCJcIjtyZXR1cm5cIjBcIj09biYmMS9lPT0tMS8wP1wiLTBcIjpufX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49LTEsaT1udWxsPT10PzA6dC5sZW5ndGgscj1BcnJheShpKTsrK248aTspcltuXT1lKHRbbl0sbix0KTtyZXR1cm4gcn19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDU4KSxyPW4oMzIpLGE9bigyNiksbz1uKDYpLHM9big0Nik7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuLGMpe2lmKCFvKHQpKXJldHVybiB0O2Zvcih2YXIgdT0tMSxsPShlPXIoZSx0KSkubGVuZ3RoLHA9bC0xLGY9dDtudWxsIT1mJiYrK3U8bDspe3ZhciBkPXMoZVt1XSksaD1uO2lmKHUhPXApe3ZhciBtPWZbZF07dm9pZCAwPT09KGg9Yz9jKG0sZCxmKTp2b2lkIDApJiYoaD1vKG0pP206YShlW3UrMV0pP1tdOnt9KX1pKGYsZCxoKSxmPWZbZF19cmV0dXJuIHR9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMjcpLHI9bigyMjgpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3JldHVybiBudWxsIT10JiZyKHQsZSxpKX19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGwhPXQmJmUgaW4gT2JqZWN0KHQpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzIpLHI9bigyNSksYT1uKDcpLG89bigyNikscz1uKDM4KSxjPW4oNDYpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUsbil7Zm9yKHZhciB1PS0xLGw9KGU9aShlLHQpKS5sZW5ndGgscD0hMTsrK3U8bDspe3ZhciBmPWMoZVt1XSk7aWYoIShwPW51bGwhPXQmJm4odCxmKSkpYnJlYWs7dD10W2ZdfXJldHVybiBwfHwrK3UhPWw/cDohIShsPW51bGw9PXQ/MDp0Lmxlbmd0aCkmJnMobCkmJm8oZixsKSYmKGEodCl8fHIodCkpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMjMwKSxyPW4oNjEpLGE9big2Mik7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBhKHIodCx2b2lkIDAsaSksdCtcIlwiKX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIzMSk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybihudWxsPT10PzA6dC5sZW5ndGgpP2kodCwxKTpbXX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIzMikscj1uKDIzMyk7dC5leHBvcnRzPWZ1bmN0aW9uIHQoZSxuLGEsbyxzKXt2YXIgYz0tMSx1PWUubGVuZ3RoO2ZvcihhfHwoYT1yKSxzfHwocz1bXSk7KytjPHU7KXt2YXIgbD1lW2NdO24+MCYmYShsKT9uPjE/dChsLG4tMSxhLG8scyk6aShzLGwpOm98fChzW3MubGVuZ3RoXT1sKX1yZXR1cm4gc319LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPS0xLGk9ZS5sZW5ndGgscj10Lmxlbmd0aDsrK248aTspdFtyK25dPWVbbl07cmV0dXJuIHR9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMikscj1uKDI1KSxhPW4oNyksbz1pP2kuaXNDb25jYXRTcHJlYWRhYmxlOnZvaWQgMDt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIGEodCl8fHIodCl8fCEhKG8mJnQmJnRbb10pfX0sZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKHQsZSl7aWYodD10LnJlcGxhY2UoL1xccysvZyxcIlwiKSxlPWUucmVwbGFjZSgvXFxzKy9nLFwiXCIpLCF0Lmxlbmd0aCYmIWUubGVuZ3RoKXJldHVybiAxO2lmKCF0Lmxlbmd0aHx8IWUubGVuZ3RoKXJldHVybiAwO2lmKHQ9PT1lKXJldHVybiAxO2lmKDE9PT10Lmxlbmd0aCYmMT09PWUubGVuZ3RoKXJldHVybiAwO2lmKHQubGVuZ3RoPDJ8fGUubGVuZ3RoPDIpcmV0dXJuIDA7bGV0IG49bmV3IE1hcDtmb3IobGV0IGU9MDtlPHQubGVuZ3RoLTE7ZSsrKXtjb25zdCBpPXQuc3Vic3RyKGUsMikscj1uLmhhcyhpKT9uLmdldChpKSsxOjE7bi5zZXQoaSxyKX1sZXQgaT0wO2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGgtMTt0Kyspe2NvbnN0IHI9ZS5zdWJzdHIodCwyKSxhPW4uaGFzKHIpP24uZ2V0KHIpOjA7YT4wJiYobi5zZXQocixhLTEpLGkrKyl9cmV0dXJuIDIqaS8odC5sZW5ndGgrZS5sZW5ndGgtMil9dC5leHBvcnRzPXtjb21wYXJlVHdvU3RyaW5nczpuLGZpbmRCZXN0TWF0Y2g6ZnVuY3Rpb24odCxlKXtpZighZnVuY3Rpb24odCxlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdCYmKCEhQXJyYXkuaXNBcnJheShlKSYmKCEhZS5sZW5ndGgmJiFlLmZpbmQodD0+XCJzdHJpbmdcIiE9dHlwZW9mIHQpKSl9KHQsZSkpdGhyb3cgbmV3IEVycm9yKFwiQmFkIGFyZ3VtZW50czogRmlyc3QgYXJndW1lbnQgc2hvdWxkIGJlIGEgc3RyaW5nLCBzZWNvbmQgc2hvdWxkIGJlIGFuIGFycmF5IG9mIHN0cmluZ3NcIik7Y29uc3QgaT1bXTtsZXQgcj0wO2ZvcihsZXQgYT0wO2E8ZS5sZW5ndGg7YSsrKXtjb25zdCBvPWVbYV0scz1uKHQsbyk7aS5wdXNoKHt0YXJnZXQ6byxyYXRpbmc6c30pLHM+aVtyXS5yYXRpbmcmJihyPWEpfWNvbnN0IGE9aVtyXTtyZXR1cm57cmF0aW5nczppLGJlc3RNYXRjaDphLGJlc3RNYXRjaEluZGV4OnJ9fX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIzNikoKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZShpLFwiXCIpfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3QuZXhwb3J0cz1mdW5jdGlvbigpe3JldHVybi9cXHVEODNDXFx1REZGNFxcdURCNDBcXHVEQzY3XFx1REI0MFxcdURDNjIoPzpcXHVEQjQwXFx1REM2NVxcdURCNDBcXHVEQzZFXFx1REI0MFxcdURDNjd8XFx1REI0MFxcdURDNzdcXHVEQjQwXFx1REM2Q1xcdURCNDBcXHVEQzczfFxcdURCNDBcXHVEQzczXFx1REI0MFxcdURDNjNcXHVEQjQwXFx1REM3NClcXHVEQjQwXFx1REM3RnxcXHVEODNEXFx1REM2OVxcdTIwMERcXHVEODNEXFx1REM2OVxcdTIwMEQoPzpcXHVEODNEXFx1REM2NlxcdTIwMERcXHVEODNEXFx1REM2NnxcXHVEODNEXFx1REM2N1xcdTIwMEQoPzpcXHVEODNEW1xcdURDNjZcXHVEQzY3XSkpfFxcdUQ4M0RcXHVEQzY4KD86XFx1MjAwRCg/OlxcdTI3NjRcXHVGRTBGXFx1MjAwRCg/OlxcdUQ4M0RcXHVEQzhCXFx1MjAwRCk/XFx1RDgzRFxcdURDNjh8KD86XFx1RDgzRFtcXHVEQzY4XFx1REM2OV0pXFx1MjAwRCg/OlxcdUQ4M0RcXHVEQzY2XFx1MjAwRFxcdUQ4M0RcXHVEQzY2fFxcdUQ4M0RcXHVEQzY3XFx1MjAwRCg/OlxcdUQ4M0RbXFx1REM2NlxcdURDNjddKSl8XFx1RDgzRFxcdURDNjZcXHUyMDBEXFx1RDgzRFxcdURDNjZ8XFx1RDgzRFxcdURDNjdcXHUyMDBEKD86XFx1RDgzRFtcXHVEQzY2XFx1REM2N10pfFtcXHUyNjk1XFx1MjY5NlxcdTI3MDhdXFx1RkUwRnxcXHVEODNDW1xcdURGM0VcXHVERjczXFx1REY5M1xcdURGQTRcXHVERkE4XFx1REZFQlxcdURGRURdfFxcdUQ4M0RbXFx1RENCQlxcdURDQkNcXHVERDI3XFx1REQyQ1xcdURFODBcXHVERTkyXSl8KD86XFx1RDgzQ1tcXHVERkZCLVxcdURGRkZdKVxcdTIwMERbXFx1MjY5NVxcdTI2OTZcXHUyNzA4XVxcdUZFMEZ8KD86XFx1RDgzQ1tcXHVERkZCLVxcdURGRkZdKVxcdTIwMEQoPzpcXHVEODNDW1xcdURGM0VcXHVERjczXFx1REY5M1xcdURGQTRcXHVERkE4XFx1REZFQlxcdURGRURdfFxcdUQ4M0RbXFx1RENCQlxcdURDQkNcXHVERDI3XFx1REQyQ1xcdURFODBcXHVERTkyXSkpfFxcdUQ4M0RcXHVEQzY5XFx1MjAwRCg/OlxcdTI3NjRcXHVGRTBGXFx1MjAwRCg/OlxcdUQ4M0RcXHVEQzhCXFx1MjAwRCg/OlxcdUQ4M0RbXFx1REM2OFxcdURDNjldKXxcXHVEODNEW1xcdURDNjhcXHVEQzY5XSl8XFx1RDgzQ1tcXHVERjNFXFx1REY3M1xcdURGOTNcXHVERkE0XFx1REZBOFxcdURGRUJcXHVERkVEXXxcXHVEODNEW1xcdURDQkJcXHVEQ0JDXFx1REQyN1xcdUREMkNcXHVERTgwXFx1REU5Ml0pfFxcdUQ4M0RcXHVEQzY5XFx1MjAwRFxcdUQ4M0RcXHVEQzY2XFx1MjAwRFxcdUQ4M0RcXHVEQzY2fCg/OlxcdUQ4M0RcXHVEQzQxXFx1RkUwRlxcdTIwMERcXHVEODNEXFx1RERFOHxcXHVEODNEXFx1REM2OSg/OlxcdUQ4M0NbXFx1REZGQi1cXHVERkZGXSlcXHUyMDBEW1xcdTI2OTVcXHUyNjk2XFx1MjcwOF18KD86KD86XFx1MjZGOXxcXHVEODNDW1xcdURGQ0JcXHVERkNDXXxcXHVEODNEXFx1REQ3NSlcXHVGRTBGfFxcdUQ4M0RcXHVEQzZGfFxcdUQ4M0VbXFx1REQzQ1xcdUREREVcXHVERERGXSlcXHUyMDBEW1xcdTI2NDBcXHUyNjQyXXwoPzpcXHUyNkY5fFxcdUQ4M0NbXFx1REZDQlxcdURGQ0NdfFxcdUQ4M0RcXHVERDc1KSg/OlxcdUQ4M0NbXFx1REZGQi1cXHVERkZGXSlcXHUyMDBEW1xcdTI2NDBcXHUyNjQyXXwoPzpcXHVEODNDW1xcdURGQzNcXHVERkM0XFx1REZDQV18XFx1RDgzRFtcXHVEQzZFXFx1REM3MVxcdURDNzNcXHVEQzc3XFx1REM4MVxcdURDODJcXHVEQzg2XFx1REM4N1xcdURFNDUtXFx1REU0N1xcdURFNEJcXHVERTREXFx1REU0RVxcdURFQTNcXHVERUI0LVxcdURFQjZdfFxcdUQ4M0VbXFx1REQyNlxcdUREMzctXFx1REQzOVxcdUREM0RcXHVERDNFXFx1RERENi1cXHVEREREXSkoPzooPzpcXHVEODNDW1xcdURGRkItXFx1REZGRl0pXFx1MjAwRFtcXHUyNjQwXFx1MjY0Ml18XFx1MjAwRFtcXHUyNjQwXFx1MjY0Ml0pfFxcdUQ4M0RcXHVEQzY5XFx1MjAwRFtcXHUyNjk1XFx1MjY5NlxcdTI3MDhdKVxcdUZFMEZ8XFx1RDgzRFxcdURDNjlcXHUyMDBEXFx1RDgzRFxcdURDNjdcXHUyMDBEKD86XFx1RDgzRFtcXHVEQzY2XFx1REM2N10pfFxcdUQ4M0RcXHVEQzY5XFx1MjAwRFxcdUQ4M0RcXHVEQzY5XFx1MjAwRCg/OlxcdUQ4M0RbXFx1REM2NlxcdURDNjddKXxcXHVEODNEXFx1REM2OCg/OlxcdTIwMEQoPzooPzpcXHVEODNEW1xcdURDNjhcXHVEQzY5XSlcXHUyMDBEKD86XFx1RDgzRFtcXHVEQzY2XFx1REM2N10pfFxcdUQ4M0RbXFx1REM2NlxcdURDNjddKXxcXHVEODNDW1xcdURGRkItXFx1REZGRl0pfFxcdUQ4M0NcXHVERkYzXFx1RkUwRlxcdTIwMERcXHVEODNDXFx1REYwOHxcXHVEODNEXFx1REM2OVxcdTIwMERcXHVEODNEXFx1REM2N3xcXHVEODNEXFx1REM2OSg/OlxcdUQ4M0NbXFx1REZGQi1cXHVERkZGXSlcXHUyMDBEKD86XFx1RDgzQ1tcXHVERjNFXFx1REY3M1xcdURGOTNcXHVERkE0XFx1REZBOFxcdURGRUJcXHVERkVEXXxcXHVEODNEW1xcdURDQkJcXHVEQ0JDXFx1REQyN1xcdUREMkNcXHVERTgwXFx1REU5Ml0pfFxcdUQ4M0RcXHVEQzY5XFx1MjAwRFxcdUQ4M0RcXHVEQzY2fFxcdUQ4M0NcXHVEREY0XFx1RDgzQ1xcdURERjJ8XFx1RDgzQ1xcdURERkRcXHVEODNDXFx1RERGMHxcXHVEODNDXFx1RERGNlxcdUQ4M0NcXHVEREU2fFxcdUQ4M0RcXHVEQzY5KD86XFx1RDgzQ1tcXHVERkZCLVxcdURGRkZdKXxcXHVEODNDXFx1RERGQyg/OlxcdUQ4M0NbXFx1RERFQlxcdURERjhdKXxcXHVEODNDXFx1RERFQig/OlxcdUQ4M0NbXFx1RERFRS1cXHVEREYwXFx1RERGMlxcdURERjRcXHVEREY3XSl8XFx1RDgzQ1xcdURERTkoPzpcXHVEODNDW1xcdURERUFcXHVEREVDXFx1RERFRlxcdURERjBcXHVEREYyXFx1RERGNFxcdURERkZdKXxcXHVEODNDXFx1RERFNyg/OlxcdUQ4M0NbXFx1RERFNlxcdURERTdcXHVEREU5LVxcdURERUZcXHVEREYxLVxcdURERjRcXHVEREY2LVxcdURERjlcXHVEREZCXFx1RERGQ1xcdURERkVcXHVEREZGXSl8XFx1RDgzQ1xcdURERjEoPzpcXHVEODNDW1xcdURERTYtXFx1RERFOFxcdURERUVcXHVEREYwXFx1RERGNy1cXHVEREZCXFx1RERGRV0pfFxcdUQ4M0NcXHVEREZFKD86XFx1RDgzQ1tcXHVEREVBXFx1RERGOV0pfFxcdUQ4M0NcXHVEREY5KD86XFx1RDgzQ1tcXHVEREU2XFx1RERFOFxcdURERTlcXHVEREVCLVxcdURERURcXHVEREVGLVxcdURERjRcXHVEREY3XFx1RERGOVxcdURERkJcXHVEREZDXFx1RERGRl0pfFxcdUQ4M0NcXHVEREY1KD86XFx1RDgzQ1tcXHVEREU2XFx1RERFQS1cXHVEREVEXFx1RERGMC1cXHVEREYzXFx1RERGNy1cXHVEREY5XFx1RERGQ1xcdURERkVdKXxcXHVEODNDXFx1RERFRig/OlxcdUQ4M0NbXFx1RERFQVxcdURERjJcXHVEREY0XFx1RERGNV0pfFxcdUQ4M0NcXHVEREVEKD86XFx1RDgzQ1tcXHVEREYwXFx1RERGMlxcdURERjNcXHVEREY3XFx1RERGOVxcdURERkFdKXxcXHVEODNDXFx1RERFRSg/OlxcdUQ4M0NbXFx1RERFOC1cXHVEREVBXFx1RERGMS1cXHVEREY0XFx1RERGNi1cXHVEREY5XSl8XFx1RDgzQ1xcdURERkIoPzpcXHVEODNDW1xcdURERTZcXHVEREU4XFx1RERFQVxcdURERUNcXHVEREVFXFx1RERGM1xcdURERkFdKXxcXHVEODNDXFx1RERFQyg/OlxcdUQ4M0NbXFx1RERFNlxcdURERTdcXHVEREU5LVxcdURERUVcXHVEREYxLVxcdURERjNcXHVEREY1LVxcdURERkFcXHVEREZDXFx1RERGRV0pfFxcdUQ4M0NcXHVEREY3KD86XFx1RDgzQ1tcXHVEREVBXFx1RERGNFxcdURERjhcXHVEREZBXFx1RERGQ10pfFxcdUQ4M0NcXHVEREVBKD86XFx1RDgzQ1tcXHVEREU2XFx1RERFOFxcdURERUFcXHVEREVDXFx1RERFRFxcdURERjctXFx1RERGQV0pfFxcdUQ4M0NcXHVEREZBKD86XFx1RDgzQ1tcXHVEREU2XFx1RERFQ1xcdURERjJcXHVEREYzXFx1RERGOFxcdURERkVcXHVEREZGXSl8XFx1RDgzQ1xcdURERTgoPzpcXHVEODNDW1xcdURERTZcXHVEREU4XFx1RERFOVxcdURERUItXFx1RERFRVxcdURERjAtXFx1RERGNVxcdURERjdcXHVEREZBLVxcdURERkZdKXxcXHVEODNDXFx1RERFNig/OlxcdUQ4M0NbXFx1RERFOC1cXHVEREVDXFx1RERFRVxcdURERjFcXHVEREYyXFx1RERGNFxcdURERjYtXFx1RERGQVxcdURERkNcXHVEREZEXFx1RERGRl0pfFsjXFwqMC05XVxcdUZFMEZcXHUyMEUzfFxcdUQ4M0NcXHVEREY4KD86XFx1RDgzQ1tcXHVEREU2LVxcdURERUFcXHVEREVDLVxcdURERjRcXHVEREY3LVxcdURERjlcXHVEREZCXFx1RERGRC1cXHVEREZGXSl8XFx1RDgzQ1xcdURERkYoPzpcXHVEODNDW1xcdURERTZcXHVEREYyXFx1RERGQ10pfFxcdUQ4M0NcXHVEREYwKD86XFx1RDgzQ1tcXHVEREVBXFx1RERFQy1cXHVEREVFXFx1RERGMlxcdURERjNcXHVEREY1XFx1RERGN1xcdURERkNcXHVEREZFXFx1RERGRl0pfFxcdUQ4M0NcXHVEREYzKD86XFx1RDgzQ1tcXHVEREU2XFx1RERFOFxcdURERUEtXFx1RERFQ1xcdURERUVcXHVEREYxXFx1RERGNFxcdURERjVcXHVEREY3XFx1RERGQVxcdURERkZdKXxcXHVEODNDXFx1RERGMig/OlxcdUQ4M0NbXFx1RERFNlxcdURERTgtXFx1RERFRFxcdURERjAtXFx1RERGRl0pfCg/OlxcdUQ4M0NbXFx1REZDM1xcdURGQzRcXHVERkNBXXxcXHVEODNEW1xcdURDNkVcXHVEQzcxXFx1REM3M1xcdURDNzdcXHVEQzgxXFx1REM4MlxcdURDODZcXHVEQzg3XFx1REU0NS1cXHVERTQ3XFx1REU0QlxcdURFNERcXHVERTRFXFx1REVBM1xcdURFQjQtXFx1REVCNl18XFx1RDgzRVtcXHVERDI2XFx1REQzNy1cXHVERDM5XFx1REQzRFxcdUREM0VcXHVEREQ2LVxcdURERERdKSg/OlxcdUQ4M0NbXFx1REZGQi1cXHVERkZGXSl8KD86XFx1MjZGOXxcXHVEODNDW1xcdURGQ0JcXHVERkNDXXxcXHVEODNEXFx1REQ3NSkoPzpcXHVEODNDW1xcdURGRkItXFx1REZGRl0pfCg/OltcXHUyNjFEXFx1MjcwQS1cXHUyNzBEXXxcXHVEODNDW1xcdURGODVcXHVERkMyXFx1REZDN118XFx1RDgzRFtcXHVEQzQyXFx1REM0M1xcdURDNDYtXFx1REM1MFxcdURDNjZcXHVEQzY3XFx1REM3MFxcdURDNzJcXHVEQzc0LVxcdURDNzZcXHVEQzc4XFx1REM3Q1xcdURDODNcXHVEQzg1XFx1RENBQVxcdURENzRcXHVERDdBXFx1REQ5MFxcdUREOTVcXHVERDk2XFx1REU0Q1xcdURFNEZcXHVERUMwXFx1REVDQ118XFx1RDgzRVtcXHVERDE4LVxcdUREMUNcXHVERDFFXFx1REQxRlxcdUREMzAtXFx1REQzNlxcdURERDEtXFx1RERENV0pKD86XFx1RDgzQ1tcXHVERkZCLVxcdURGRkZdKXwoPzpbXFx1MjYxRFxcdTI2RjlcXHUyNzBBLVxcdTI3MERdfFxcdUQ4M0NbXFx1REY4NVxcdURGQzItXFx1REZDNFxcdURGQzdcXHVERkNBLVxcdURGQ0NdfFxcdUQ4M0RbXFx1REM0MlxcdURDNDNcXHVEQzQ2LVxcdURDNTBcXHVEQzY2LVxcdURDNjlcXHVEQzZFXFx1REM3MC1cXHVEQzc4XFx1REM3Q1xcdURDODEtXFx1REM4M1xcdURDODUtXFx1REM4N1xcdURDQUFcXHVERDc0XFx1REQ3NVxcdUREN0FcXHVERDkwXFx1REQ5NVxcdUREOTZcXHVERTQ1LVxcdURFNDdcXHVERTRCLVxcdURFNEZcXHVERUEzXFx1REVCNC1cXHVERUI2XFx1REVDMFxcdURFQ0NdfFxcdUQ4M0VbXFx1REQxOC1cXHVERDFDXFx1REQxRVxcdUREMUZcXHVERDI2XFx1REQzMC1cXHVERDM5XFx1REQzRFxcdUREM0VcXHVEREQxLVxcdURERERdKSg/OlxcdUQ4M0NbXFx1REZGQi1cXHVERkZGXSk/fCg/OltcXHUyMzFBXFx1MjMxQlxcdTIzRTktXFx1MjNFQ1xcdTIzRjBcXHUyM0YzXFx1MjVGRFxcdTI1RkVcXHUyNjE0XFx1MjYxNVxcdTI2NDgtXFx1MjY1M1xcdTI2N0ZcXHUyNjkzXFx1MjZBMVxcdTI2QUFcXHUyNkFCXFx1MjZCRFxcdTI2QkVcXHUyNkM0XFx1MjZDNVxcdTI2Q0VcXHUyNkQ0XFx1MjZFQVxcdTI2RjJcXHUyNkYzXFx1MjZGNVxcdTI2RkFcXHUyNkZEXFx1MjcwNVxcdTI3MEFcXHUyNzBCXFx1MjcyOFxcdTI3NENcXHUyNzRFXFx1Mjc1My1cXHUyNzU1XFx1Mjc1N1xcdTI3OTUtXFx1Mjc5N1xcdTI3QjBcXHUyN0JGXFx1MkIxQlxcdTJCMUNcXHUyQjUwXFx1MkI1NV18XFx1RDgzQ1tcXHVEQzA0XFx1RENDRlxcdUREOEVcXHVERDkxLVxcdUREOUFcXHVEREU2LVxcdURERkZcXHVERTAxXFx1REUxQVxcdURFMkZcXHVERTMyLVxcdURFMzZcXHVERTM4LVxcdURFM0FcXHVERTUwXFx1REU1MVxcdURGMDAtXFx1REYyMFxcdURGMkQtXFx1REYzNVxcdURGMzctXFx1REY3Q1xcdURGN0UtXFx1REY5M1xcdURGQTAtXFx1REZDQVxcdURGQ0YtXFx1REZEM1xcdURGRTAtXFx1REZGMFxcdURGRjRcXHVERkY4LVxcdURGRkZdfFxcdUQ4M0RbXFx1REMwMC1cXHVEQzNFXFx1REM0MFxcdURDNDItXFx1RENGQ1xcdURDRkYtXFx1REQzRFxcdURENEItXFx1REQ0RVxcdURENTAtXFx1REQ2N1xcdUREN0FcXHVERDk1XFx1REQ5NlxcdUREQTRcXHVEREZCLVxcdURFNEZcXHVERTgwLVxcdURFQzVcXHVERUNDXFx1REVEMC1cXHVERUQyXFx1REVFQlxcdURFRUNcXHVERUY0LVxcdURFRjhdfFxcdUQ4M0VbXFx1REQxMC1cXHVERDNBXFx1REQzQy1cXHVERDNFXFx1REQ0MC1cXHVERDQ1XFx1REQ0Ny1cXHVERDRDXFx1REQ1MC1cXHVERDZCXFx1REQ4MC1cXHVERDk3XFx1RERDMFxcdURERDAtXFx1RERFNl0pfCg/OlsjXFwqMC05XFx4QTlcXHhBRVxcdTIwM0NcXHUyMDQ5XFx1MjEyMlxcdTIxMzlcXHUyMTk0LVxcdTIxOTlcXHUyMUE5XFx1MjFBQVxcdTIzMUFcXHUyMzFCXFx1MjMyOFxcdTIzQ0ZcXHUyM0U5LVxcdTIzRjNcXHUyM0Y4LVxcdTIzRkFcXHUyNEMyXFx1MjVBQVxcdTI1QUJcXHUyNUI2XFx1MjVDMFxcdTI1RkItXFx1MjVGRVxcdTI2MDAtXFx1MjYwNFxcdTI2MEVcXHUyNjExXFx1MjYxNFxcdTI2MTVcXHUyNjE4XFx1MjYxRFxcdTI2MjBcXHUyNjIyXFx1MjYyM1xcdTI2MjZcXHUyNjJBXFx1MjYyRVxcdTI2MkZcXHUyNjM4LVxcdTI2M0FcXHUyNjQwXFx1MjY0MlxcdTI2NDgtXFx1MjY1M1xcdTI2NjBcXHUyNjYzXFx1MjY2NVxcdTI2NjZcXHUyNjY4XFx1MjY3QlxcdTI2N0ZcXHUyNjkyLVxcdTI2OTdcXHUyNjk5XFx1MjY5QlxcdTI2OUNcXHUyNkEwXFx1MjZBMVxcdTI2QUFcXHUyNkFCXFx1MjZCMFxcdTI2QjFcXHUyNkJEXFx1MjZCRVxcdTI2QzRcXHUyNkM1XFx1MjZDOFxcdTI2Q0VcXHUyNkNGXFx1MjZEMVxcdTI2RDNcXHUyNkQ0XFx1MjZFOVxcdTI2RUFcXHUyNkYwLVxcdTI2RjVcXHUyNkY3LVxcdTI2RkFcXHUyNkZEXFx1MjcwMlxcdTI3MDVcXHUyNzA4LVxcdTI3MERcXHUyNzBGXFx1MjcxMlxcdTI3MTRcXHUyNzE2XFx1MjcxRFxcdTI3MjFcXHUyNzI4XFx1MjczM1xcdTI3MzRcXHUyNzQ0XFx1Mjc0N1xcdTI3NENcXHUyNzRFXFx1Mjc1My1cXHUyNzU1XFx1Mjc1N1xcdTI3NjNcXHUyNzY0XFx1Mjc5NS1cXHUyNzk3XFx1MjdBMVxcdTI3QjBcXHUyN0JGXFx1MjkzNFxcdTI5MzVcXHUyQjA1LVxcdTJCMDdcXHUyQjFCXFx1MkIxQ1xcdTJCNTBcXHUyQjU1XFx1MzAzMFxcdTMwM0RcXHUzMjk3XFx1MzI5OV18XFx1RDgzQ1tcXHVEQzA0XFx1RENDRlxcdURENzBcXHVERDcxXFx1REQ3RVxcdUREN0ZcXHVERDhFXFx1REQ5MS1cXHVERDlBXFx1RERFNi1cXHVEREZGXFx1REUwMVxcdURFMDJcXHVERTFBXFx1REUyRlxcdURFMzItXFx1REUzQVxcdURFNTBcXHVERTUxXFx1REYwMC1cXHVERjIxXFx1REYyNC1cXHVERjkzXFx1REY5NlxcdURGOTdcXHVERjk5LVxcdURGOUJcXHVERjlFLVxcdURGRjBcXHVERkYzLVxcdURGRjVcXHVERkY3LVxcdURGRkZdfFxcdUQ4M0RbXFx1REMwMC1cXHVEQ0ZEXFx1RENGRi1cXHVERDNEXFx1REQ0OS1cXHVERDRFXFx1REQ1MC1cXHVERDY3XFx1REQ2RlxcdURENzBcXHVERDczLVxcdUREN0FcXHVERDg3XFx1REQ4QS1cXHVERDhEXFx1REQ5MFxcdUREOTVcXHVERDk2XFx1RERBNFxcdUREQTVcXHVEREE4XFx1RERCMVxcdUREQjJcXHVEREJDXFx1RERDMi1cXHVEREM0XFx1REREMS1cXHVEREQzXFx1REREQy1cXHVERERFXFx1RERFMVxcdURERTNcXHVEREU4XFx1RERFRlxcdURERjNcXHVEREZBLVxcdURFNEZcXHVERTgwLVxcdURFQzVcXHVERUNCLVxcdURFRDJcXHVERUUwLVxcdURFRTVcXHVERUU5XFx1REVFQlxcdURFRUNcXHVERUYwXFx1REVGMy1cXHVERUY4XXxcXHVEODNFW1xcdUREMTAtXFx1REQzQVxcdUREM0MtXFx1REQzRVxcdURENDAtXFx1REQ0NVxcdURENDctXFx1REQ0Q1xcdURENTAtXFx1REQ2QlxcdUREODAtXFx1REQ5N1xcdUREQzBcXHVEREQwLVxcdURERTZdKVxcdUZFMEYvZ319LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtjb25zdCBpPW4oMjM4KSxyPW4oMjM5KTt0LmV4cG9ydHM9dD0+e2NvbnN0IGU9YCg/OiR7YCg/Oig/OlthLXpdKzopPy8vKSR7KHQ9e3N0cmljdDohMCwuLi50fSkuc3RyaWN0P1wiXCI6XCI/XCJ9YH18d3d3XFxcXC4pKD86XFxcXFMrKD86OlxcXFxTKik/QCk/KD86bG9jYWxob3N0fCR7aS52NCgpLnNvdXJjZX18KD86KD86W2EtelxcXFx1MDBhMS1cXFxcdWZmZmYwLTldWy1fXSopKlthLXpcXFxcdTAwYTEtXFxcXHVmZmZmMC05XSspKD86XFxcXC4oPzpbYS16XFxcXHUwMGExLVxcXFx1ZmZmZjAtOV0tKikqW2EtelxcXFx1MDBhMS1cXFxcdWZmZmYwLTldKykqJHtgKD86XFxcXC4ke3Quc3RyaWN0P1wiKD86W2EtelxcXFx1MDBhMS1cXFxcdWZmZmZdezIsfSlcIjpgKD86JHtyLnNvcnQoKHQsZSk9PmUubGVuZ3RoLXQubGVuZ3RoKS5qb2luKFwifFwiKX0pYH0pXFxcXC4/YH0pKD86OlxcXFxkezIsNX0pPyg/OlsvPyNdW15cXFxcc1wiXSopP2A7cmV0dXJuIHQuZXhhY3Q/bmV3IFJlZ0V4cChgKD86XiR7ZX0kKWAsXCJpXCIpOm5ldyBSZWdFeHAoZSxcImlnXCIpfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2NvbnN0IGk9dD0+dCYmdC5pbmNsdWRlQm91bmRhcmllcz9cIig/Oig/PD1cXFxcc3xeKSg/PVthLWZBLUZcXFxcZDpdKXwoPzw9W2EtZkEtRlxcXFxkOl0pKD89XFxcXHN8JCkpXCI6XCJcIixyPVwiKD86MjVbMC01XXwyWzAtNF1cXFxcZHwxXFxcXGRcXFxcZHxbMS05XVxcXFxkfFxcXFxkKSg/OlxcXFwuKD86MjVbMC01XXwyWzAtNF1cXFxcZHwxXFxcXGRcXFxcZHxbMS05XVxcXFxkfFxcXFxkKSl7M31cIixhPVwiW2EtZkEtRlxcXFxkXXsxLDR9XCIsbz1gXFxuKFxcbig/OiR7YX06KXs3fSg/OiR7YX18Oil8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAxOjI6Mzo0OjU6Njo3OjogIDE6MjozOjQ6NTo2Ojc6OFxcbig/OiR7YX06KXs2fSg/OiR7cn18OiR7YX18Oil8ICAgICAgICAgICAgICAgICAgICAgICAgIC8vIDE6MjozOjQ6NTo2OjogICAgMToyOjM6NDo1OjY6OjggICAxOjI6Mzo0OjU6Njo6OCAgMToyOjM6NDo1OjY6OjEuMi4zLjRcXG4oPzoke2F9Oil7NX0oPzo6JHtyfXwoOiR7YX0pezEsMn18Oil8ICAgICAgICAgICAgICAgICAvLyAxOjI6Mzo0OjU6OiAgICAgIDE6MjozOjQ6NTo6Nzo4ICAgMToyOjM6NDo1Ojo4ICAgIDE6MjozOjQ6NTo6NzoxLjIuMy40XFxuKD86JHthfTopezR9KD86KDoke2F9KXswLDF9OiR7cn18KDoke2F9KXsxLDN9fDopfCAvLyAxOjI6Mzo0OjogICAgICAgIDE6MjozOjQ6OjY6Nzo4ICAgMToyOjM6NDo6OCAgICAgIDE6MjozOjQ6OjY6NzoxLjIuMy40XFxuKD86JHthfTopezN9KD86KDoke2F9KXswLDJ9OiR7cn18KDoke2F9KXsxLDR9fDopfCAvLyAxOjI6Mzo6ICAgICAgICAgIDE6MjozOjo1OjY6Nzo4ICAgMToyOjM6OjggICAgICAgIDE6MjozOjo1OjY6NzoxLjIuMy40XFxuKD86JHthfTopezJ9KD86KDoke2F9KXswLDN9OiR7cn18KDoke2F9KXsxLDV9fDopfCAvLyAxOjI6OiAgICAgICAgICAgIDE6Mjo6NDo1OjY6Nzo4ICAgMToyOjo4ICAgICAgICAgIDE6Mjo6NDo1OjY6NzoxLjIuMy40XFxuKD86JHthfTopezF9KD86KDoke2F9KXswLDR9OiR7cn18KDoke2F9KXsxLDZ9fDopfCAvLyAxOjogICAgICAgICAgICAgIDE6OjM6NDo1OjY6Nzo4ICAgMTo6OCAgICAgICAgICAgIDE6OjM6NDo1OjY6NzoxLjIuMy40XFxuKD86OigoPzo6JHthfSl7MCw1fToke3J9fCg/Ojoke2F9KXsxLDd9fDopKSAgICAgICAgICAgLy8gOjoyOjM6NDo1OjY6Nzo4ICA6OjI6Mzo0OjU6Njo3OjggIDo6OCAgICAgICAgICAgICA6OjEuMi4zLjRcXG4pKCVbMC05YS16QS1aXXsxLH0pPyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAlZXRoMCAgICAgICAgICAgICUxXFxuYC5yZXBsYWNlKC9cXHMqXFwvXFwvLiokL2dtLFwiXCIpLnJlcGxhY2UoL1xcbi9nLFwiXCIpLnRyaW0oKSxzPXQ9PnQmJnQuZXhhY3Q/bmV3IFJlZ0V4cChgKD86XiR7cn0kKXwoPzpeJHtvfSQpYCk6bmV3IFJlZ0V4cChgKD86JHtpKHQpfSR7cn0ke2kodCl9KXwoPzoke2kodCl9JHtvfSR7aSh0KX0pYCxcImdcIik7cy52ND10PT50JiZ0LmV4YWN0P25ldyBSZWdFeHAoYF4ke3J9JGApOm5ldyBSZWdFeHAoYCR7aSh0KX0ke3J9JHtpKHQpfWAsXCJnXCIpLHMudjY9dD0+dCYmdC5leGFjdD9uZXcgUmVnRXhwKGBeJHtvfSRgKTpuZXcgUmVnRXhwKGAke2kodCl9JHtvfSR7aSh0KX1gLFwiZ1wiKSx0LmV4cG9ydHM9c30sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9W1wiYWFhXCIsXCJhYXJwXCIsXCJhYmFydGhcIixcImFiYlwiLFwiYWJib3R0XCIsXCJhYmJ2aWVcIixcImFiY1wiLFwiYWJsZVwiLFwiYWJvZ2Fkb1wiLFwiYWJ1ZGhhYmlcIixcImFjXCIsXCJhY2FkZW15XCIsXCJhY2NlbnR1cmVcIixcImFjY291bnRhbnRcIixcImFjY291bnRhbnRzXCIsXCJhY29cIixcImFjdG9yXCIsXCJhZFwiLFwiYWRhY1wiLFwiYWRzXCIsXCJhZHVsdFwiLFwiYWVcIixcImFlZ1wiLFwiYWVyb1wiLFwiYWV0bmFcIixcImFmXCIsXCJhZmFtaWx5Y29tcGFueVwiLFwiYWZsXCIsXCJhZnJpY2FcIixcImFnXCIsXCJhZ2FraGFuXCIsXCJhZ2VuY3lcIixcImFpXCIsXCJhaWdcIixcImFpZ29cIixcImFpcmJ1c1wiLFwiYWlyZm9yY2VcIixcImFpcnRlbFwiLFwiYWtkblwiLFwiYWxcIixcImFsZmFyb21lb1wiLFwiYWxpYmFiYVwiLFwiYWxpcGF5XCIsXCJhbGxmaW5hbnpcIixcImFsbHN0YXRlXCIsXCJhbGx5XCIsXCJhbHNhY2VcIixcImFsc3RvbVwiLFwiYW1cIixcImFtZXJpY2FuZXhwcmVzc1wiLFwiYW1lcmljYW5mYW1pbHlcIixcImFtZXhcIixcImFtZmFtXCIsXCJhbWljYVwiLFwiYW1zdGVyZGFtXCIsXCJhbmFseXRpY3NcIixcImFuZHJvaWRcIixcImFucXVhblwiLFwiYW56XCIsXCJhb1wiLFwiYW9sXCIsXCJhcGFydG1lbnRzXCIsXCJhcHBcIixcImFwcGxlXCIsXCJhcVwiLFwiYXF1YXJlbGxlXCIsXCJhclwiLFwiYXJhYlwiLFwiYXJhbWNvXCIsXCJhcmNoaVwiLFwiYXJteVwiLFwiYXJwYVwiLFwiYXJ0XCIsXCJhcnRlXCIsXCJhc1wiLFwiYXNkYVwiLFwiYXNpYVwiLFwiYXNzb2NpYXRlc1wiLFwiYXRcIixcImF0aGxldGFcIixcImF0dG9ybmV5XCIsXCJhdVwiLFwiYXVjdGlvblwiLFwiYXVkaVwiLFwiYXVkaWJsZVwiLFwiYXVkaW9cIixcImF1c3Bvc3RcIixcImF1dGhvclwiLFwiYXV0b1wiLFwiYXV0b3NcIixcImF2aWFuY2FcIixcImF3XCIsXCJhd3NcIixcImF4XCIsXCJheGFcIixcImF6XCIsXCJhenVyZVwiLFwiYmFcIixcImJhYnlcIixcImJhaWR1XCIsXCJiYW5hbWV4XCIsXCJiYW5hbmFyZXB1YmxpY1wiLFwiYmFuZFwiLFwiYmFua1wiLFwiYmFyXCIsXCJiYXJjZWxvbmFcIixcImJhcmNsYXljYXJkXCIsXCJiYXJjbGF5c1wiLFwiYmFyZWZvb3RcIixcImJhcmdhaW5zXCIsXCJiYXNlYmFsbFwiLFwiYmFza2V0YmFsbFwiLFwiYmF1aGF1c1wiLFwiYmF5ZXJuXCIsXCJiYlwiLFwiYmJjXCIsXCJiYnRcIixcImJidmFcIixcImJjZ1wiLFwiYmNuXCIsXCJiZFwiLFwiYmVcIixcImJlYXRzXCIsXCJiZWF1dHlcIixcImJlZXJcIixcImJlbnRsZXlcIixcImJlcmxpblwiLFwiYmVzdFwiLFwiYmVzdGJ1eVwiLFwiYmV0XCIsXCJiZlwiLFwiYmdcIixcImJoXCIsXCJiaGFydGlcIixcImJpXCIsXCJiaWJsZVwiLFwiYmlkXCIsXCJiaWtlXCIsXCJiaW5nXCIsXCJiaW5nb1wiLFwiYmlvXCIsXCJiaXpcIixcImJqXCIsXCJibGFja1wiLFwiYmxhY2tmcmlkYXlcIixcImJsb2NrYnVzdGVyXCIsXCJibG9nXCIsXCJibG9vbWJlcmdcIixcImJsdWVcIixcImJtXCIsXCJibXNcIixcImJtd1wiLFwiYm5cIixcImJucHBhcmliYXNcIixcImJvXCIsXCJib2F0c1wiLFwiYm9laHJpbmdlclwiLFwiYm9mYVwiLFwiYm9tXCIsXCJib25kXCIsXCJib29cIixcImJvb2tcIixcImJvb2tpbmdcIixcImJvc2NoXCIsXCJib3N0aWtcIixcImJvc3RvblwiLFwiYm90XCIsXCJib3V0aXF1ZVwiLFwiYm94XCIsXCJiclwiLFwiYnJhZGVzY29cIixcImJyaWRnZXN0b25lXCIsXCJicm9hZHdheVwiLFwiYnJva2VyXCIsXCJicm90aGVyXCIsXCJicnVzc2Vsc1wiLFwiYnNcIixcImJ0XCIsXCJidWRhcGVzdFwiLFwiYnVnYXR0aVwiLFwiYnVpbGRcIixcImJ1aWxkZXJzXCIsXCJidXNpbmVzc1wiLFwiYnV5XCIsXCJidXp6XCIsXCJidlwiLFwiYndcIixcImJ5XCIsXCJielwiLFwiYnpoXCIsXCJjYVwiLFwiY2FiXCIsXCJjYWZlXCIsXCJjYWxcIixcImNhbGxcIixcImNhbHZpbmtsZWluXCIsXCJjYW1cIixcImNhbWVyYVwiLFwiY2FtcFwiLFwiY2FuY2VycmVzZWFyY2hcIixcImNhbm9uXCIsXCJjYXBldG93blwiLFwiY2FwaXRhbFwiLFwiY2FwaXRhbG9uZVwiLFwiY2FyXCIsXCJjYXJhdmFuXCIsXCJjYXJkc1wiLFwiY2FyZVwiLFwiY2FyZWVyXCIsXCJjYXJlZXJzXCIsXCJjYXJzXCIsXCJjYXNhXCIsXCJjYXNlXCIsXCJjYXNlaWhcIixcImNhc2hcIixcImNhc2lub1wiLFwiY2F0XCIsXCJjYXRlcmluZ1wiLFwiY2F0aG9saWNcIixcImNiYVwiLFwiY2JuXCIsXCJjYnJlXCIsXCJjYnNcIixcImNjXCIsXCJjZFwiLFwiY2ViXCIsXCJjZW50ZXJcIixcImNlb1wiLFwiY2VyblwiLFwiY2ZcIixcImNmYVwiLFwiY2ZkXCIsXCJjZ1wiLFwiY2hcIixcImNoYW5lbFwiLFwiY2hhbm5lbFwiLFwiY2hhcml0eVwiLFwiY2hhc2VcIixcImNoYXRcIixcImNoZWFwXCIsXCJjaGludGFpXCIsXCJjaHJpc3RtYXNcIixcImNocm9tZVwiLFwiY2h1cmNoXCIsXCJjaVwiLFwiY2lwcmlhbmlcIixcImNpcmNsZVwiLFwiY2lzY29cIixcImNpdGFkZWxcIixcImNpdGlcIixcImNpdGljXCIsXCJjaXR5XCIsXCJjaXR5ZWF0c1wiLFwiY2tcIixcImNsXCIsXCJjbGFpbXNcIixcImNsZWFuaW5nXCIsXCJjbGlja1wiLFwiY2xpbmljXCIsXCJjbGluaXF1ZVwiLFwiY2xvdGhpbmdcIixcImNsb3VkXCIsXCJjbHViXCIsXCJjbHVibWVkXCIsXCJjbVwiLFwiY25cIixcImNvXCIsXCJjb2FjaFwiLFwiY29kZXNcIixcImNvZmZlZVwiLFwiY29sbGVnZVwiLFwiY29sb2duZVwiLFwiY29tXCIsXCJjb21jYXN0XCIsXCJjb21tYmFua1wiLFwiY29tbXVuaXR5XCIsXCJjb21wYW55XCIsXCJjb21wYXJlXCIsXCJjb21wdXRlclwiLFwiY29tc2VjXCIsXCJjb25kb3NcIixcImNvbnN0cnVjdGlvblwiLFwiY29uc3VsdGluZ1wiLFwiY29udGFjdFwiLFwiY29udHJhY3RvcnNcIixcImNvb2tpbmdcIixcImNvb2tpbmdjaGFubmVsXCIsXCJjb29sXCIsXCJjb29wXCIsXCJjb3JzaWNhXCIsXCJjb3VudHJ5XCIsXCJjb3Vwb25cIixcImNvdXBvbnNcIixcImNvdXJzZXNcIixcImNwYVwiLFwiY3JcIixcImNyZWRpdFwiLFwiY3JlZGl0Y2FyZFwiLFwiY3JlZGl0dW5pb25cIixcImNyaWNrZXRcIixcImNyb3duXCIsXCJjcnNcIixcImNydWlzZVwiLFwiY3J1aXNlc1wiLFwiY3NjXCIsXCJjdVwiLFwiY3Vpc2luZWxsYVwiLFwiY3ZcIixcImN3XCIsXCJjeFwiLFwiY3lcIixcImN5bXJ1XCIsXCJjeW91XCIsXCJjelwiLFwiZGFidXJcIixcImRhZFwiLFwiZGFuY2VcIixcImRhdGFcIixcImRhdGVcIixcImRhdGluZ1wiLFwiZGF0c3VuXCIsXCJkYXlcIixcImRjbGtcIixcImRkc1wiLFwiZGVcIixcImRlYWxcIixcImRlYWxlclwiLFwiZGVhbHNcIixcImRlZ3JlZVwiLFwiZGVsaXZlcnlcIixcImRlbGxcIixcImRlbG9pdHRlXCIsXCJkZWx0YVwiLFwiZGVtb2NyYXRcIixcImRlbnRhbFwiLFwiZGVudGlzdFwiLFwiZGVzaVwiLFwiZGVzaWduXCIsXCJkZXZcIixcImRobFwiLFwiZGlhbW9uZHNcIixcImRpZXRcIixcImRpZ2l0YWxcIixcImRpcmVjdFwiLFwiZGlyZWN0b3J5XCIsXCJkaXNjb3VudFwiLFwiZGlzY292ZXJcIixcImRpc2hcIixcImRpeVwiLFwiZGpcIixcImRrXCIsXCJkbVwiLFwiZG5wXCIsXCJkb1wiLFwiZG9jc1wiLFwiZG9jdG9yXCIsXCJkb2dcIixcImRvbWFpbnNcIixcImRvdFwiLFwiZG93bmxvYWRcIixcImRyaXZlXCIsXCJkdHZcIixcImR1YmFpXCIsXCJkdWNrXCIsXCJkdW5sb3BcIixcImR1cG9udFwiLFwiZHVyYmFuXCIsXCJkdmFnXCIsXCJkdnJcIixcImR6XCIsXCJlYXJ0aFwiLFwiZWF0XCIsXCJlY1wiLFwiZWNvXCIsXCJlZGVrYVwiLFwiZWR1XCIsXCJlZHVjYXRpb25cIixcImVlXCIsXCJlZ1wiLFwiZW1haWxcIixcImVtZXJja1wiLFwiZW5lcmd5XCIsXCJlbmdpbmVlclwiLFwiZW5naW5lZXJpbmdcIixcImVudGVycHJpc2VzXCIsXCJlcHNvblwiLFwiZXF1aXBtZW50XCIsXCJlclwiLFwiZXJpY3Nzb25cIixcImVybmlcIixcImVzXCIsXCJlc3FcIixcImVzdGF0ZVwiLFwiZXN1cmFuY2VcIixcImV0XCIsXCJldGlzYWxhdFwiLFwiZXVcIixcImV1cm92aXNpb25cIixcImV1c1wiLFwiZXZlbnRzXCIsXCJleGNoYW5nZVwiLFwiZXhwZXJ0XCIsXCJleHBvc2VkXCIsXCJleHByZXNzXCIsXCJleHRyYXNwYWNlXCIsXCJmYWdlXCIsXCJmYWlsXCIsXCJmYWlyd2luZHNcIixcImZhaXRoXCIsXCJmYW1pbHlcIixcImZhblwiLFwiZmFuc1wiLFwiZmFybVwiLFwiZmFybWVyc1wiLFwiZmFzaGlvblwiLFwiZmFzdFwiLFwiZmVkZXhcIixcImZlZWRiYWNrXCIsXCJmZXJyYXJpXCIsXCJmZXJyZXJvXCIsXCJmaVwiLFwiZmlhdFwiLFwiZmlkZWxpdHlcIixcImZpZG9cIixcImZpbG1cIixcImZpbmFsXCIsXCJmaW5hbmNlXCIsXCJmaW5hbmNpYWxcIixcImZpcmVcIixcImZpcmVzdG9uZVwiLFwiZmlybWRhbGVcIixcImZpc2hcIixcImZpc2hpbmdcIixcImZpdFwiLFwiZml0bmVzc1wiLFwiZmpcIixcImZrXCIsXCJmbGlja3JcIixcImZsaWdodHNcIixcImZsaXJcIixcImZsb3Jpc3RcIixcImZsb3dlcnNcIixcImZseVwiLFwiZm1cIixcImZvXCIsXCJmb29cIixcImZvb2RcIixcImZvb2RuZXR3b3JrXCIsXCJmb290YmFsbFwiLFwiZm9yZFwiLFwiZm9yZXhcIixcImZvcnNhbGVcIixcImZvcnVtXCIsXCJmb3VuZGF0aW9uXCIsXCJmb3hcIixcImZyXCIsXCJmcmVlXCIsXCJmcmVzZW5pdXNcIixcImZybFwiLFwiZnJvZ2Fuc1wiLFwiZnJvbnRkb29yXCIsXCJmcm9udGllclwiLFwiZnRyXCIsXCJmdWppdHN1XCIsXCJmdWppeGVyb3hcIixcImZ1blwiLFwiZnVuZFwiLFwiZnVybml0dXJlXCIsXCJmdXRib2xcIixcImZ5aVwiLFwiZ2FcIixcImdhbFwiLFwiZ2FsbGVyeVwiLFwiZ2FsbG9cIixcImdhbGx1cFwiLFwiZ2FtZVwiLFwiZ2FtZXNcIixcImdhcFwiLFwiZ2FyZGVuXCIsXCJnYXlcIixcImdiXCIsXCJnYml6XCIsXCJnZFwiLFwiZ2RuXCIsXCJnZVwiLFwiZ2VhXCIsXCJnZW50XCIsXCJnZW50aW5nXCIsXCJnZW9yZ2VcIixcImdmXCIsXCJnZ1wiLFwiZ2dlZVwiLFwiZ2hcIixcImdpXCIsXCJnaWZ0XCIsXCJnaWZ0c1wiLFwiZ2l2ZXNcIixcImdpdmluZ1wiLFwiZ2xcIixcImdsYWRlXCIsXCJnbGFzc1wiLFwiZ2xlXCIsXCJnbG9iYWxcIixcImdsb2JvXCIsXCJnbVwiLFwiZ21haWxcIixcImdtYmhcIixcImdtb1wiLFwiZ214XCIsXCJnblwiLFwiZ29kYWRkeVwiLFwiZ29sZFwiLFwiZ29sZHBvaW50XCIsXCJnb2xmXCIsXCJnb29cIixcImdvb2R5ZWFyXCIsXCJnb29nXCIsXCJnb29nbGVcIixcImdvcFwiLFwiZ290XCIsXCJnb3ZcIixcImdwXCIsXCJncVwiLFwiZ3JcIixcImdyYWluZ2VyXCIsXCJncmFwaGljc1wiLFwiZ3JhdGlzXCIsXCJncmVlblwiLFwiZ3JpcGVcIixcImdyb2NlcnlcIixcImdyb3VwXCIsXCJnc1wiLFwiZ3RcIixcImd1XCIsXCJndWFyZGlhblwiLFwiZ3VjY2lcIixcImd1Z2VcIixcImd1aWRlXCIsXCJndWl0YXJzXCIsXCJndXJ1XCIsXCJnd1wiLFwiZ3lcIixcImhhaXJcIixcImhhbWJ1cmdcIixcImhhbmdvdXRcIixcImhhdXNcIixcImhib1wiLFwiaGRmY1wiLFwiaGRmY2JhbmtcIixcImhlYWx0aFwiLFwiaGVhbHRoY2FyZVwiLFwiaGVscFwiLFwiaGVsc2lua2lcIixcImhlcmVcIixcImhlcm1lc1wiLFwiaGd0dlwiLFwiaGlwaG9wXCIsXCJoaXNhbWl0c3VcIixcImhpdGFjaGlcIixcImhpdlwiLFwiaGtcIixcImhrdFwiLFwiaG1cIixcImhuXCIsXCJob2NrZXlcIixcImhvbGRpbmdzXCIsXCJob2xpZGF5XCIsXCJob21lZGVwb3RcIixcImhvbWVnb29kc1wiLFwiaG9tZXNcIixcImhvbWVzZW5zZVwiLFwiaG9uZGFcIixcImhvcnNlXCIsXCJob3NwaXRhbFwiLFwiaG9zdFwiLFwiaG9zdGluZ1wiLFwiaG90XCIsXCJob3RlbGVzXCIsXCJob3RlbHNcIixcImhvdG1haWxcIixcImhvdXNlXCIsXCJob3dcIixcImhyXCIsXCJoc2JjXCIsXCJodFwiLFwiaHVcIixcImh1Z2hlc1wiLFwiaHlhdHRcIixcImh5dW5kYWlcIixcImlibVwiLFwiaWNiY1wiLFwiaWNlXCIsXCJpY3VcIixcImlkXCIsXCJpZVwiLFwiaWVlZVwiLFwiaWZtXCIsXCJpa2Fub1wiLFwiaWxcIixcImltXCIsXCJpbWFtYXRcIixcImltZGJcIixcImltbW9cIixcImltbW9iaWxpZW5cIixcImluXCIsXCJpbmNcIixcImluZHVzdHJpZXNcIixcImluZmluaXRpXCIsXCJpbmZvXCIsXCJpbmdcIixcImlua1wiLFwiaW5zdGl0dXRlXCIsXCJpbnN1cmFuY2VcIixcImluc3VyZVwiLFwiaW50XCIsXCJpbnRlbFwiLFwiaW50ZXJuYXRpb25hbFwiLFwiaW50dWl0XCIsXCJpbnZlc3RtZW50c1wiLFwiaW9cIixcImlwaXJhbmdhXCIsXCJpcVwiLFwiaXJcIixcImlyaXNoXCIsXCJpc1wiLFwiaXNtYWlsaVwiLFwiaXN0XCIsXCJpc3RhbmJ1bFwiLFwiaXRcIixcIml0YXVcIixcIml0dlwiLFwiaXZlY29cIixcImphZ3VhclwiLFwiamF2YVwiLFwiamNiXCIsXCJqY3BcIixcImplXCIsXCJqZWVwXCIsXCJqZXR6dFwiLFwiamV3ZWxyeVwiLFwiamlvXCIsXCJqbGxcIixcImptXCIsXCJqbXBcIixcImpualwiLFwiam9cIixcImpvYnNcIixcImpvYnVyZ1wiLFwiam90XCIsXCJqb3lcIixcImpwXCIsXCJqcG1vcmdhblwiLFwianByc1wiLFwianVlZ29zXCIsXCJqdW5pcGVyXCIsXCJrYXVmZW5cIixcImtkZGlcIixcImtlXCIsXCJrZXJyeWhvdGVsc1wiLFwia2Vycnlsb2dpc3RpY3NcIixcImtlcnJ5cHJvcGVydGllc1wiLFwia2ZoXCIsXCJrZ1wiLFwia2hcIixcImtpXCIsXCJraWFcIixcImtpbVwiLFwia2luZGVyXCIsXCJraW5kbGVcIixcImtpdGNoZW5cIixcImtpd2lcIixcImttXCIsXCJrblwiLFwia29lbG5cIixcImtvbWF0c3VcIixcImtvc2hlclwiLFwia3BcIixcImtwbWdcIixcImtwblwiLFwia3JcIixcImtyZFwiLFwia3JlZFwiLFwia3Vva2dyb3VwXCIsXCJrd1wiLFwia3lcIixcImt5b3RvXCIsXCJrelwiLFwibGFcIixcImxhY2FpeGFcIixcImxhbWJvcmdoaW5pXCIsXCJsYW1lclwiLFwibGFuY2FzdGVyXCIsXCJsYW5jaWFcIixcImxhbmRcIixcImxhbmRyb3ZlclwiLFwibGFueGVzc1wiLFwibGFzYWxsZVwiLFwibGF0XCIsXCJsYXRpbm9cIixcImxhdHJvYmVcIixcImxhd1wiLFwibGF3eWVyXCIsXCJsYlwiLFwibGNcIixcImxkc1wiLFwibGVhc2VcIixcImxlY2xlcmNcIixcImxlZnJha1wiLFwibGVnYWxcIixcImxlZ29cIixcImxleHVzXCIsXCJsZ2J0XCIsXCJsaVwiLFwibGlhaXNvblwiLFwibGlkbFwiLFwibGlmZVwiLFwibGlmZWluc3VyYW5jZVwiLFwibGlmZXN0eWxlXCIsXCJsaWdodGluZ1wiLFwibGlrZVwiLFwibGlsbHlcIixcImxpbWl0ZWRcIixcImxpbW9cIixcImxpbmNvbG5cIixcImxpbmRlXCIsXCJsaW5rXCIsXCJsaXBzeVwiLFwibGl2ZVwiLFwibGl2aW5nXCIsXCJsaXhpbFwiLFwibGtcIixcImxsY1wiLFwibG9hblwiLFwibG9hbnNcIixcImxvY2tlclwiLFwibG9jdXNcIixcImxvZnRcIixcImxvbFwiLFwibG9uZG9uXCIsXCJsb3R0ZVwiLFwibG90dG9cIixcImxvdmVcIixcImxwbFwiLFwibHBsZmluYW5jaWFsXCIsXCJsclwiLFwibHNcIixcImx0XCIsXCJsdGRcIixcImx0ZGFcIixcImx1XCIsXCJsdW5kYmVja1wiLFwibHVwaW5cIixcImx1eGVcIixcImx1eHVyeVwiLFwibHZcIixcImx5XCIsXCJtYVwiLFwibWFjeXNcIixcIm1hZHJpZFwiLFwibWFpZlwiLFwibWFpc29uXCIsXCJtYWtldXBcIixcIm1hblwiLFwibWFuYWdlbWVudFwiLFwibWFuZ29cIixcIm1hcFwiLFwibWFya2V0XCIsXCJtYXJrZXRpbmdcIixcIm1hcmtldHNcIixcIm1hcnJpb3R0XCIsXCJtYXJzaGFsbHNcIixcIm1hc2VyYXRpXCIsXCJtYXR0ZWxcIixcIm1iYVwiLFwibWNcIixcIm1ja2luc2V5XCIsXCJtZFwiLFwibWVcIixcIm1lZFwiLFwibWVkaWFcIixcIm1lZXRcIixcIm1lbGJvdXJuZVwiLFwibWVtZVwiLFwibWVtb3JpYWxcIixcIm1lblwiLFwibWVudVwiLFwibWVyY2ttc2RcIixcIm1ldGxpZmVcIixcIm1nXCIsXCJtaFwiLFwibWlhbWlcIixcIm1pY3Jvc29mdFwiLFwibWlsXCIsXCJtaW5pXCIsXCJtaW50XCIsXCJtaXRcIixcIm1pdHN1YmlzaGlcIixcIm1rXCIsXCJtbFwiLFwibWxiXCIsXCJtbHNcIixcIm1tXCIsXCJtbWFcIixcIm1uXCIsXCJtb1wiLFwibW9iaVwiLFwibW9iaWxlXCIsXCJtb2RhXCIsXCJtb2VcIixcIm1vaVwiLFwibW9tXCIsXCJtb25hc2hcIixcIm1vbmV5XCIsXCJtb25zdGVyXCIsXCJtb3Jtb25cIixcIm1vcnRnYWdlXCIsXCJtb3Njb3dcIixcIm1vdG9cIixcIm1vdG9yY3ljbGVzXCIsXCJtb3ZcIixcIm1vdmllXCIsXCJtb3Zpc3RhclwiLFwibXBcIixcIm1xXCIsXCJtclwiLFwibXNcIixcIm1zZFwiLFwibXRcIixcIm10blwiLFwibXRyXCIsXCJtdVwiLFwibXVzZXVtXCIsXCJtdXR1YWxcIixcIm12XCIsXCJtd1wiLFwibXhcIixcIm15XCIsXCJtelwiLFwibmFcIixcIm5hYlwiLFwibmFkZXhcIixcIm5hZ295YVwiLFwibmFtZVwiLFwibmF0aW9ud2lkZVwiLFwibmF0dXJhXCIsXCJuYXZ5XCIsXCJuYmFcIixcIm5jXCIsXCJuZVwiLFwibmVjXCIsXCJuZXRcIixcIm5ldGJhbmtcIixcIm5ldGZsaXhcIixcIm5ldHdvcmtcIixcIm5ldXN0YXJcIixcIm5ld1wiLFwibmV3aG9sbGFuZFwiLFwibmV3c1wiLFwibmV4dFwiLFwibmV4dGRpcmVjdFwiLFwibmV4dXNcIixcIm5mXCIsXCJuZmxcIixcIm5nXCIsXCJuZ29cIixcIm5oa1wiLFwibmlcIixcIm5pY29cIixcIm5pa2VcIixcIm5pa29uXCIsXCJuaW5qYVwiLFwibmlzc2FuXCIsXCJuaXNzYXlcIixcIm5sXCIsXCJub1wiLFwibm9raWFcIixcIm5vcnRod2VzdGVybm11dHVhbFwiLFwibm9ydG9uXCIsXCJub3dcIixcIm5vd3J1elwiLFwibm93dHZcIixcIm5wXCIsXCJuclwiLFwibnJhXCIsXCJucndcIixcIm50dFwiLFwibnVcIixcIm55Y1wiLFwibnpcIixcIm9iaVwiLFwib2JzZXJ2ZXJcIixcIm9mZlwiLFwib2ZmaWNlXCIsXCJva2luYXdhXCIsXCJvbGF5YW5cIixcIm9sYXlhbmdyb3VwXCIsXCJvbGRuYXZ5XCIsXCJvbGxvXCIsXCJvbVwiLFwib21lZ2FcIixcIm9uZVwiLFwib25nXCIsXCJvbmxcIixcIm9ubGluZVwiLFwib255b3Vyc2lkZVwiLFwib29vXCIsXCJvcGVuXCIsXCJvcmFjbGVcIixcIm9yYW5nZVwiLFwib3JnXCIsXCJvcmdhbmljXCIsXCJvcmlnaW5zXCIsXCJvc2FrYVwiLFwib3RzdWthXCIsXCJvdHRcIixcIm92aFwiLFwicGFcIixcInBhZ2VcIixcInBhbmFzb25pY1wiLFwicGFyaXNcIixcInBhcnNcIixcInBhcnRuZXJzXCIsXCJwYXJ0c1wiLFwicGFydHlcIixcInBhc3NhZ2Vuc1wiLFwicGF5XCIsXCJwY2N3XCIsXCJwZVwiLFwicGV0XCIsXCJwZlwiLFwicGZpemVyXCIsXCJwZ1wiLFwicGhcIixcInBoYXJtYWN5XCIsXCJwaGRcIixcInBoaWxpcHNcIixcInBob25lXCIsXCJwaG90b1wiLFwicGhvdG9ncmFwaHlcIixcInBob3Rvc1wiLFwicGh5c2lvXCIsXCJwaWNzXCIsXCJwaWN0ZXRcIixcInBpY3R1cmVzXCIsXCJwaWRcIixcInBpblwiLFwicGluZ1wiLFwicGlua1wiLFwicGlvbmVlclwiLFwicGl6emFcIixcInBrXCIsXCJwbFwiLFwicGxhY2VcIixcInBsYXlcIixcInBsYXlzdGF0aW9uXCIsXCJwbHVtYmluZ1wiLFwicGx1c1wiLFwicG1cIixcInBuXCIsXCJwbmNcIixcInBvaGxcIixcInBva2VyXCIsXCJwb2xpdGllXCIsXCJwb3JuXCIsXCJwb3N0XCIsXCJwclwiLFwicHJhbWVyaWNhXCIsXCJwcmF4aVwiLFwicHJlc3NcIixcInByaW1lXCIsXCJwcm9cIixcInByb2RcIixcInByb2R1Y3Rpb25zXCIsXCJwcm9mXCIsXCJwcm9ncmVzc2l2ZVwiLFwicHJvbW9cIixcInByb3BlcnRpZXNcIixcInByb3BlcnR5XCIsXCJwcm90ZWN0aW9uXCIsXCJwcnVcIixcInBydWRlbnRpYWxcIixcInBzXCIsXCJwdFwiLFwicHViXCIsXCJwd1wiLFwicHdjXCIsXCJweVwiLFwicWFcIixcInFwb25cIixcInF1ZWJlY1wiLFwicXVlc3RcIixcInF2Y1wiLFwicmFjaW5nXCIsXCJyYWRpb1wiLFwicmFpZFwiLFwicmVcIixcInJlYWRcIixcInJlYWxlc3RhdGVcIixcInJlYWx0b3JcIixcInJlYWx0eVwiLFwicmVjaXBlc1wiLFwicmVkXCIsXCJyZWRzdG9uZVwiLFwicmVkdW1icmVsbGFcIixcInJlaGFiXCIsXCJyZWlzZVwiLFwicmVpc2VuXCIsXCJyZWl0XCIsXCJyZWxpYW5jZVwiLFwicmVuXCIsXCJyZW50XCIsXCJyZW50YWxzXCIsXCJyZXBhaXJcIixcInJlcG9ydFwiLFwicmVwdWJsaWNhblwiLFwicmVzdFwiLFwicmVzdGF1cmFudFwiLFwicmV2aWV3XCIsXCJyZXZpZXdzXCIsXCJyZXhyb3RoXCIsXCJyaWNoXCIsXCJyaWNoYXJkbGlcIixcInJpY29oXCIsXCJyaWdodGF0aG9tZVwiLFwicmlsXCIsXCJyaW9cIixcInJpcFwiLFwicm1pdFwiLFwicm9cIixcInJvY2hlclwiLFwicm9ja3NcIixcInJvZGVvXCIsXCJyb2dlcnNcIixcInJvb21cIixcInJzXCIsXCJyc3ZwXCIsXCJydVwiLFwicnVnYnlcIixcInJ1aHJcIixcInJ1blwiLFwicndcIixcInJ3ZVwiLFwicnl1a3l1XCIsXCJzYVwiLFwic2FhcmxhbmRcIixcInNhZmVcIixcInNhZmV0eVwiLFwic2FrdXJhXCIsXCJzYWxlXCIsXCJzYWxvblwiLFwic2Ftc2NsdWJcIixcInNhbXN1bmdcIixcInNhbmR2aWtcIixcInNhbmR2aWtjb3JvbWFudFwiLFwic2Fub2ZpXCIsXCJzYXBcIixcInNhcmxcIixcInNhc1wiLFwic2F2ZVwiLFwic2F4b1wiLFwic2JcIixcInNiaVwiLFwic2JzXCIsXCJzY1wiLFwic2NhXCIsXCJzY2JcIixcInNjaGFlZmZsZXJcIixcInNjaG1pZHRcIixcInNjaG9sYXJzaGlwc1wiLFwic2Nob29sXCIsXCJzY2h1bGVcIixcInNjaHdhcnpcIixcInNjaWVuY2VcIixcInNjam9obnNvblwiLFwic2NvclwiLFwic2NvdFwiLFwic2RcIixcInNlXCIsXCJzZWFyY2hcIixcInNlYXRcIixcInNlY3VyZVwiLFwic2VjdXJpdHlcIixcInNlZWtcIixcInNlbGVjdFwiLFwic2VuZXJcIixcInNlcnZpY2VzXCIsXCJzZXNcIixcInNldmVuXCIsXCJzZXdcIixcInNleFwiLFwic2V4eVwiLFwic2ZyXCIsXCJzZ1wiLFwic2hcIixcInNoYW5ncmlsYVwiLFwic2hhcnBcIixcInNoYXdcIixcInNoZWxsXCIsXCJzaGlhXCIsXCJzaGlrc2hhXCIsXCJzaG9lc1wiLFwic2hvcFwiLFwic2hvcHBpbmdcIixcInNob3VqaVwiLFwic2hvd1wiLFwic2hvd3RpbWVcIixcInNocmlyYW1cIixcInNpXCIsXCJzaWxrXCIsXCJzaW5hXCIsXCJzaW5nbGVzXCIsXCJzaXRlXCIsXCJzalwiLFwic2tcIixcInNraVwiLFwic2tpblwiLFwic2t5XCIsXCJza3lwZVwiLFwic2xcIixcInNsaW5nXCIsXCJzbVwiLFwic21hcnRcIixcInNtaWxlXCIsXCJzblwiLFwic25jZlwiLFwic29cIixcInNvY2NlclwiLFwic29jaWFsXCIsXCJzb2Z0YmFua1wiLFwic29mdHdhcmVcIixcInNvaHVcIixcInNvbGFyXCIsXCJzb2x1dGlvbnNcIixcInNvbmdcIixcInNvbnlcIixcInNveVwiLFwic3BhY2VcIixcInNwb3J0XCIsXCJzcG90XCIsXCJzcHJlYWRiZXR0aW5nXCIsXCJzclwiLFwic3JsXCIsXCJzc1wiLFwic3RcIixcInN0YWRhXCIsXCJzdGFwbGVzXCIsXCJzdGFyXCIsXCJzdGF0ZWJhbmtcIixcInN0YXRlZmFybVwiLFwic3RjXCIsXCJzdGNncm91cFwiLFwic3RvY2tob2xtXCIsXCJzdG9yYWdlXCIsXCJzdG9yZVwiLFwic3RyZWFtXCIsXCJzdHVkaW9cIixcInN0dWR5XCIsXCJzdHlsZVwiLFwic3VcIixcInN1Y2tzXCIsXCJzdXBwbGllc1wiLFwic3VwcGx5XCIsXCJzdXBwb3J0XCIsXCJzdXJmXCIsXCJzdXJnZXJ5XCIsXCJzdXp1a2lcIixcInN2XCIsXCJzd2F0Y2hcIixcInN3aWZ0Y292ZXJcIixcInN3aXNzXCIsXCJzeFwiLFwic3lcIixcInN5ZG5leVwiLFwic3ltYW50ZWNcIixcInN5c3RlbXNcIixcInN6XCIsXCJ0YWJcIixcInRhaXBlaVwiLFwidGFsa1wiLFwidGFvYmFvXCIsXCJ0YXJnZXRcIixcInRhdGFtb3RvcnNcIixcInRhdGFyXCIsXCJ0YXR0b29cIixcInRheFwiLFwidGF4aVwiLFwidGNcIixcInRjaVwiLFwidGRcIixcInRka1wiLFwidGVhbVwiLFwidGVjaFwiLFwidGVjaG5vbG9neVwiLFwidGVsXCIsXCJ0ZWxlZm9uaWNhXCIsXCJ0ZW1hc2VrXCIsXCJ0ZW5uaXNcIixcInRldmFcIixcInRmXCIsXCJ0Z1wiLFwidGhcIixcInRoZFwiLFwidGhlYXRlclwiLFwidGhlYXRyZVwiLFwidGlhYVwiLFwidGlja2V0c1wiLFwidGllbmRhXCIsXCJ0aWZmYW55XCIsXCJ0aXBzXCIsXCJ0aXJlc1wiLFwidGlyb2xcIixcInRqXCIsXCJ0am1heHhcIixcInRqeFwiLFwidGtcIixcInRrbWF4eFwiLFwidGxcIixcInRtXCIsXCJ0bWFsbFwiLFwidG5cIixcInRvXCIsXCJ0b2RheVwiLFwidG9reW9cIixcInRvb2xzXCIsXCJ0b3BcIixcInRvcmF5XCIsXCJ0b3NoaWJhXCIsXCJ0b3RhbFwiLFwidG91cnNcIixcInRvd25cIixcInRveW90YVwiLFwidG95c1wiLFwidHJcIixcInRyYWRlXCIsXCJ0cmFkaW5nXCIsXCJ0cmFpbmluZ1wiLFwidHJhdmVsXCIsXCJ0cmF2ZWxjaGFubmVsXCIsXCJ0cmF2ZWxlcnNcIixcInRyYXZlbGVyc2luc3VyYW5jZVwiLFwidHJ1c3RcIixcInRydlwiLFwidHRcIixcInR1YmVcIixcInR1aVwiLFwidHVuZXNcIixcInR1c2h1XCIsXCJ0dlwiLFwidHZzXCIsXCJ0d1wiLFwidHpcIixcInVhXCIsXCJ1YmFua1wiLFwidWJzXCIsXCJ1Z1wiLFwidWtcIixcInVuaWNvbVwiLFwidW5pdmVyc2l0eVwiLFwidW5vXCIsXCJ1b2xcIixcInVwc1wiLFwidXNcIixcInV5XCIsXCJ1elwiLFwidmFcIixcInZhY2F0aW9uc1wiLFwidmFuYVwiLFwidmFuZ3VhcmRcIixcInZjXCIsXCJ2ZVwiLFwidmVnYXNcIixcInZlbnR1cmVzXCIsXCJ2ZXJpc2lnblwiLFwidmVyc2ljaGVydW5nXCIsXCJ2ZXRcIixcInZnXCIsXCJ2aVwiLFwidmlhamVzXCIsXCJ2aWRlb1wiLFwidmlnXCIsXCJ2aWtpbmdcIixcInZpbGxhc1wiLFwidmluXCIsXCJ2aXBcIixcInZpcmdpblwiLFwidmlzYVwiLFwidmlzaW9uXCIsXCJ2aXN0YXByaW50XCIsXCJ2aXZhXCIsXCJ2aXZvXCIsXCJ2bGFhbmRlcmVuXCIsXCJ2blwiLFwidm9ka2FcIixcInZvbGtzd2FnZW5cIixcInZvbHZvXCIsXCJ2b3RlXCIsXCJ2b3RpbmdcIixcInZvdG9cIixcInZveWFnZVwiLFwidnVcIixcInZ1ZWxvc1wiLFwid2FsZXNcIixcIndhbG1hcnRcIixcIndhbHRlclwiLFwid2FuZ1wiLFwid2FuZ2dvdVwiLFwid2F0Y2hcIixcIndhdGNoZXNcIixcIndlYXRoZXJcIixcIndlYXRoZXJjaGFubmVsXCIsXCJ3ZWJjYW1cIixcIndlYmVyXCIsXCJ3ZWJzaXRlXCIsXCJ3ZWRcIixcIndlZGRpbmdcIixcIndlaWJvXCIsXCJ3ZWlyXCIsXCJ3ZlwiLFwid2hvc3dob1wiLFwid2llblwiLFwid2lraVwiLFwid2lsbGlhbWhpbGxcIixcIndpblwiLFwid2luZG93c1wiLFwid2luZVwiLFwid2lubmVyc1wiLFwid21lXCIsXCJ3b2x0ZXJza2x1d2VyXCIsXCJ3b29kc2lkZVwiLFwid29ya1wiLFwid29ya3NcIixcIndvcmxkXCIsXCJ3b3dcIixcIndzXCIsXCJ3dGNcIixcInd0ZlwiLFwieGJveFwiLFwieGVyb3hcIixcInhmaW5pdHlcIixcInhpaHVhblwiLFwieGluXCIsXCLgpJXgpYngpK5cIixcIuOCu+ODvOODq1wiLFwi5L2b5bGxXCIsXCLgsq3gsr7gsrDgsqRcIixcIuaFiOWWhFwiLFwi6ZuG5ZuiXCIsXCLlnKjnur9cIixcIu2VnOq1rVwiLFwi4Kyt4Ky+4Kyw4KykXCIsXCLlpKfkvJfmsb3ovaZcIixcIueCueeci1wiLFwi4LiE4Lit4LihXCIsXCLgpq3gpr7gp7DgpqRcIixcIuCmreCmvuCmsOCmpFwiLFwi5YWr5Y2mXCIsXCLZhdmI2YLYuVwiLFwi4Kas4Ka+4KaC4Kay4Ka+XCIsXCLlhaznm4pcIixcIuWFrOWPuFwiLFwi6aaZ5qC86YeM5ouJXCIsXCLnvZHnq5lcIixcIuenu+WKqFwiLFwi5oiR54ix5L2gXCIsXCLQvNC+0YHQutCy0LBcIixcItKb0LDQt1wiLFwi0LrQsNGC0L7Qu9C40LpcIixcItC+0L3Qu9Cw0LnQvVwiLFwi0YHQsNC50YJcIixcIuiBlOmAmlwiLFwi0YHRgNCxXCIsXCLQsdCzXCIsXCLQsdC10LtcIixcIten15XXnVwiLFwi5pe25bCaXCIsXCLlvq7ljZpcIixcIua3oemprOmUoVwiLFwi44OV44Kh44OD44K344On44OzXCIsXCLQvtGA0LNcIixcIuCkqOClh+Ckn1wiLFwi44K544OI44KiXCIsXCLsgrzshLFcIixcIuCumuCuv+CumeCvjeCuleCuquCvjeCuquCvguCusOCvjVwiLFwi5ZWG5qCHXCIsXCLllYblupdcIixcIuWVhuWfjlwiLFwi0LTQtdGC0LhcIixcItC80LrQtFwiLFwi0LXRjlwiLFwi44Od44Kk44Oz44OIXCIsXCLmlrDpl7tcIixcIuW3peihjFwiLFwi5a626Zu7XCIsXCLZg9mI2YVcIixcIuS4reaWh+e9kVwiLFwi5Lit5L+hXCIsXCLkuK3lm71cIixcIuS4reWci1wiLFwi5aix5LmQXCIsXCLosLfmrYxcIixcIuCwreCwvuCwsOCwpOCxjVwiLFwi4La94LaC4Laa4LePXCIsXCLpm7voqIrnm4jnp5FcIixcIui0reeJqVwiLFwi44Kv44Op44Km44OJXCIsXCLgqq3gqr7gqrDgqqRcIixcIumAmuiyqVwiLFwi4KSt4KS+4KSw4KSk4KSu4KWNXCIsXCLgpK3gpL7gpLDgpKRcIixcIuCkreCkvuCksOCli+CkpFwiLFwi572R5bqXXCIsXCLgpLjgpILgpJfgpKDgpKhcIixcIumkkOWOhVwiLFwi572R57ucXCIsXCLQutC+0LxcIixcItGD0LrRgFwiLFwi6aaZ5rivXCIsXCLor7rln7rkuppcIixcIumjn+WTgVwiLFwi6aOe5Yip5rWmXCIsXCLlj7Dmub5cIixcIuWPsOeBo1wiLFwi5omL6KGoXCIsXCLmiYvmnLpcIixcItC80L7QvVwiLFwi2KfZhNis2LLYp9im2LFcIixcIti52YXYp9mGXCIsXCLYp9ix2KfZhdmD2YhcIixcItin24zYsdin2YZcIixcItin2YTYudmE2YrYp9mGXCIsXCLYp9iq2LXYp9mE2KfYqlwiLFwi2KfZhdin2LHYp9iqXCIsXCLYqNin2LLYp9ixXCIsXCLZhdmI2LHZitiq2KfZhtmK2KdcIixcItm+2Kfaqdiz2KrYp9mGXCIsXCLYp9mE2KfYsdiv2YZcIixcItio2KfYsdiqXCIsXCLYqNq+2KfYsdiqXCIsXCLYp9mE2YXYutix2KhcIixcItin2KjZiNi42KjZilwiLFwi2KfZhNiz2LnZiNiv2YrYqVwiLFwi2oDYp9ix2KpcIixcItmD2KfYq9mI2YTZitmDXCIsXCLYs9mI2K/Yp9mGXCIsXCLZh9mF2LHYp9mHXCIsXCLYudix2KfZglwiLFwi2YXZhNmK2LPZitinXCIsXCLmvrPploBcIixcIuuLt+y7tFwiLFwi5pS/5bqcXCIsXCLYtNio2YPYqVwiLFwi2KjZitiq2YNcIixcIti52LHYqFwiLFwi4YOS4YOUXCIsXCLmnLrmnoRcIixcIue7hOe7h+acuuaehFwiLFwi5YGl5bq3XCIsXCLguYTguJfguKJcIixcItiz2YjYsdmK2KlcIixcIuaLm+iBmFwiLFwi0YDRg9GBXCIsXCLRgNGEXCIsXCLnj6Dlrp1cIixcItiq2YjZhtizXCIsXCLlpKfmi79cIixcIuOBv+OCk+OBqlwiLFwi44Kw44O844Kw44OrXCIsXCLOtc+FXCIsXCLOtc67XCIsXCLkuJbnlYxcIixcIuabuOexjVwiLFwi4LSt4LS+4LSw4LSk4LSCXCIsXCLgqK3gqL7gqLDgqKRcIixcIue9keWdgFwiLFwi64u364S3XCIsXCLjgrPjg6BcIixcIuWkqeS4u+aVmVwiLFwi5ri45oiPXCIsXCJ2ZXJtw7ZnZW5zYmVyYXRlclwiLFwidmVybcO2Z2Vuc2JlcmF0dW5nXCIsXCLkvIHkuJpcIixcIuS/oeaBr1wiLFwi5ZiJ6YeM5aSn6YWS5bqXXCIsXCLlmInph4xcIixcItmF2LXYsVwiLFwi2YLYt9ixXCIsXCLlub/kuJxcIixcIuCuh+CusuCumeCvjeCuleCviFwiLFwi4K6H4K6o4K+N4K6k4K6/4K6v4K6+XCIsXCLVsNWh1bVcIixcIuaWsOWKoOWdoVwiLFwi2YHZhNiz2LfZitmGXCIsXCLmlL/liqFcIixcInh4eFwiLFwieHl6XCIsXCJ5YWNodHNcIixcInlhaG9vXCIsXCJ5YW1heHVuXCIsXCJ5YW5kZXhcIixcInllXCIsXCJ5b2RvYmFzaGlcIixcInlvZ2FcIixcInlva29oYW1hXCIsXCJ5b3VcIixcInlvdXR1YmVcIixcInl0XCIsXCJ5dW5cIixcInphXCIsXCJ6YXBwb3NcIixcInphcmFcIixcInplcm9cIixcInppcFwiLFwiem1cIixcInpvbmVcIixcInp1ZXJpY2hcIixcInp3XCJdfSxmdW5jdGlvbih0LGUsbil7dC5leHBvcnRzPU9iamVjdC5hc3NpZ24oe30sbigzMSkpfV0pfSkpOyIsIi8qKlxuICogSmF2YXNjcmlwdCBmcmFtZXdvcmtcbiAqXG4gKiBjb25zdCBBa2lsaSA9IG1ha2VJdEVhc3koanMgKyBodG1sKTtcbiAqXG4gKiBAYXV0aG9yIEFsZXhhbmRyIEJhbGFzeWFuIDxteXdlYnN0cmVldEBnbWFpbC5jb20+XG4gKiBAbGluayBodHRwOi8vYWtpbGlqcy5jb21cbiAqL1xuXG5pbXBvcnQgQ29tcG9uZW50IGZyb20gJy4vY29tcG9uZW50LmpzJztcbmltcG9ydCBJZiBmcm9tICcuL2NvbXBvbmVudHMvaWYuanMnO1xuaW1wb3J0IEZvciBmcm9tICcuL2NvbXBvbmVudHMvZm9yLmpzJztcbmltcG9ydCBTZWxlY3QgZnJvbSAnLi9jb21wb25lbnRzL3NlbGVjdC5qcyc7XG5pbXBvcnQgSW5wdXQgZnJvbSAnLi9jb21wb25lbnRzL2lucHV0LmpzJztcbmltcG9ydCBSYWRpbyBmcm9tICcuL2NvbXBvbmVudHMvcmFkaW8uanMnO1xuaW1wb3J0IFRleHQgZnJvbSAnLi9jb21wb25lbnRzL3RleHQuanMnO1xuaW1wb3J0IFRleHRhcmVhIGZyb20gJy4vY29tcG9uZW50cy90ZXh0YXJlYS5qcyc7XG5pbXBvcnQgQ29udGVudCBmcm9tICcuL2NvbXBvbmVudHMvY29udGVudC5qcyc7XG5pbXBvcnQgSW5jbHVkZSBmcm9tICcuL2NvbXBvbmVudHMvaW5jbHVkZS5qcyc7XG5pbXBvcnQgSWZyYW1lIGZyb20gJy4vY29tcG9uZW50cy9pZnJhbWUuanMnO1xuaW1wb3J0IEltYWdlIGZyb20gJy4vY29tcG9uZW50cy9pbWFnZS5qcyc7XG5pbXBvcnQgRW1iZWQgZnJvbSAnLi9jb21wb25lbnRzL2VtYmVkLmpzJztcbmltcG9ydCBBdWRpbyBmcm9tICcuL2NvbXBvbmVudHMvYXVkaW8uanMnO1xuaW1wb3J0IFZpZGVvIGZyb20gJy4vY29tcG9uZW50cy92aWRlby5qcyc7XG5pbXBvcnQgVHJhY2sgZnJvbSAnLi9jb21wb25lbnRzL3RyYWNrLmpzJztcbmltcG9ydCBTb3VyY2UgZnJvbSAnLi9jb21wb25lbnRzL3NvdXJjZS5qcyc7XG5pbXBvcnQgT2JqZWN0cyBmcm9tICcuL2NvbXBvbmVudHMvb2JqZWN0LmpzJztcbmltcG9ydCBSb3V0ZSBmcm9tICcuL2NvbXBvbmVudHMvcm91dGUuanMnO1xuaW1wb3J0IFVybCBmcm9tICcuL2NvbXBvbmVudHMvdXJsLmpzJztcbmltcG9ydCBBIGZyb20gJy4vY29tcG9uZW50cy9hLmpzJztcbmltcG9ydCBTY29wZSBmcm9tICcuL3Njb3BlLmpzJztcbmltcG9ydCBFdmVudEVtaXR0ZXIgZnJvbSAnLi9ldmVudC1lbWl0dGVyLmpzJztcbmltcG9ydCByZXF1ZXN0IGZyb20gJy4vc2VydmljZXMvcmVxdWVzdC5qcyc7XG5pbXBvcnQgcm91dGVyIGZyb20gJy4vc2VydmljZXMvcm91dGVyLmpzJztcbmltcG9ydCBzdG9yZSBmcm9tICcuL3NlcnZpY2VzL3N0b3JlLmpzJztcbmltcG9ydCB1dGlscyBmcm9tICcuL3V0aWxzLmpzJztcbmltcG9ydCBnbG9iYWxzIGZyb20gJy4vZ2xvYmFscy5qcyc7XG5cbi8qKlxuICogVGhlIGZyYW1ld29yayBtYWluIG9iamVjdFxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2dldHRpbmctc3RhcnRlZH1cbiAqL1xuY29uc3QgQWtpbGkgPSB7fTtcblxuQWtpbGkub3B0aW9ucyA9IHtcbiAgZGVidWc6IHRydWVcbn07XG5cbkFraWxpLl9faW5pdCA9IG51bGw7XG5Ba2lsaS5fX3Jvb3QgPSBudWxsO1xuQWtpbGkuX19jb21wb25lbnRzID0ge307XG5Ba2lsaS5fX2FsaWFzZXMgPSB7fTtcbkFraWxpLl9fc2NvcGVzID0ge307XG5Ba2lsaS5fX3N0b3JlTGlua3MgPSB7fTtcbkFraWxpLl9fd2luZG93ID0ge307XG5Ba2lsaS5fX3RhZ3MgPSB7fTtcbkFraWxpLl9faXNvbGF0aW9uID0gbnVsbDtcbkFraWxpLl9fZXZhbHVhdGlvbiA9IG51bGw7XG5Ba2lsaS5fX3dyYXBwaW5nID0gZmFsc2U7ICBcbkFraWxpLl9fcm9vdE91dGVySFRNTCA9ICcnO1xuQWtpbGkuX19vbkVycm9yID0gKCkgPT4gQWtpbGkudHJpZ2dlckluaXQoZmFsc2UpO1xuXG5Ba2lsaS5odG1sQm9vbGVhbkF0dHJpYnV0ZXMgPSBbXG4gICdkaXNhYmxlZCcsICdjb250ZW50ZWRpdGFibGUnLCAnaGlkZGVuJ1xuXTtcblxuQWtpbGkuY29tcG9uZW50cyA9IHt9O1xuQWtpbGkuc2VydmljZXMgPSB7fTtcbkFraWxpLkNvbXBvbmVudCA9IENvbXBvbmVudDtcbkFraWxpLkV2ZW50RW1pdHRlciA9IEV2ZW50RW1pdHRlcjtcbkFraWxpLlNjb3BlID0gU2NvcGU7XG5Ba2lsaS51dGlscyA9IHV0aWxzO1xuQWtpbGkuZ2xvYmFscyA9IGdsb2JhbHM7XG5Ba2lsaS5jb21wb25lbnRzLkEgPSBBO1xuQWtpbGkuY29tcG9uZW50cy5BdWRpbyA9IEF1ZGlvO1xuQWtpbGkuY29tcG9uZW50cy5Db250ZW50ID0gQ29udGVudDtcbkFraWxpLmNvbXBvbmVudHMuRm9yID0gRm9yO1xuQWtpbGkuY29tcG9uZW50cy5FbWJlZCA9IEVtYmVkO1xuQWtpbGkuY29tcG9uZW50cy5JZiA9IElmO1xuQWtpbGkuY29tcG9uZW50cy5JbmNsdWRlID0gSW5jbHVkZTtcbkFraWxpLmNvbXBvbmVudHMuSW5wdXQgPSBJbnB1dDtcbkFraWxpLmNvbXBvbmVudHMuSWZyYW1lID0gSWZyYW1lO1xuQWtpbGkuY29tcG9uZW50cy5JbWFnZSA9IEltYWdlO1xuQWtpbGkuY29tcG9uZW50cy5PYmplY3QgPSBPYmplY3RzO1xuQWtpbGkuY29tcG9uZW50cy5SYWRpbyA9IFJhZGlvO1xuQWtpbGkuY29tcG9uZW50cy5Sb3V0ZSA9IFJvdXRlO1xuQWtpbGkuY29tcG9uZW50cy5TZWxlY3QgPSBTZWxlY3Q7XG5Ba2lsaS5jb21wb25lbnRzLlNvdXJjZSA9IFNvdXJjZTtcbkFraWxpLmNvbXBvbmVudHMuVGV4dCA9IFRleHQ7XG5Ba2lsaS5jb21wb25lbnRzLlRleHRhcmVhID0gVGV4dGFyZWE7XG5Ba2lsaS5jb21wb25lbnRzLlRyYWNrID0gVHJhY2s7XG5Ba2lsaS5jb21wb25lbnRzLlVybCA9IFVybDtcbkFraWxpLmNvbXBvbmVudHMuVmlkZW8gPSBWaWRlbztcbkFraWxpLnNlcnZpY2VzLnJlcXVlc3QgPSByZXF1ZXN0O1xuQWtpbGkuc2VydmljZXMucm91dGVyID0gcm91dGVyO1xuQWtpbGkuc2VydmljZXMuc3RvcmUgPSBzdG9yZTtcblxuLyoqXG4gKiBEZWZpbmUgdGhlIGRlZmF1bHQgY29tcG9uZW50c1xuICovXG5Ba2lsaS5kZWZpbmUgPSBmdW5jdGlvbiAoKSB7XG4gIEEuZGVmaW5lKCk7XG4gIEF1ZGlvLmRlZmluZSgpO1xuICBDb250ZW50LmRlZmluZSgpO1xuICBDb21wb25lbnQuZGVmaW5lKCk7XG4gIEVtYmVkLmRlZmluZSgpO1xuICBGb3IuZGVmaW5lKCk7XG4gIEluY2x1ZGUuZGVmaW5lKCk7XG4gIElmcmFtZS5kZWZpbmUoKTtcbiAgSW1hZ2UuZGVmaW5lKCk7XG4gIElucHV0LmRlZmluZSgpO1xuICBJZi5kZWZpbmUoKTtcbiAgT2JqZWN0cy5kZWZpbmUoKTtcbiAgUmFkaW8uZGVmaW5lKCk7XG4gIFJvdXRlLmRlZmluZSgpO1xuICBTZWxlY3QuZGVmaW5lKCk7XG4gIFNvdXJjZS5kZWZpbmUoKTtcbiAgVGV4dGFyZWEuZGVmaW5lKCk7XG4gIFRyYWNrLmRlZmluZSgpO1xuICBWaWRlby5kZWZpbmUoKTtcbn07XG5cbi8qKlxuICogQ2xlYXIgdGhlIGdsb2JhbCBjb250ZXh0XG4gKi9cbkFraWxpLmNsZWFyR2xvYmFscyA9IGZ1bmN0aW9uICgpIHtcbiAgZm9yKGxldCBrZXkgaW4gZ2xvYmFscykge1xuICAgIGRlbGV0ZSBnbG9iYWxzW2tleV07XG4gIH1cblxuICBmb3IgKGxldCBrZXkgaW4gdGhpcy5fX3dpbmRvdy5FbGVtZW50LnByb3RvdHlwZSkge1xuICAgIEVsZW1lbnQucHJvdG90eXBlW2tleV0gPSB0aGlzLl9fd2luZG93LkVsZW1lbnQucHJvdG90eXBlW2tleV07XG4gIH1cblxuICBmb3IgKGxldCBrZXkgaW4gdGhpcy5fX3dpbmRvdy5BcnJheS5wcm90b3R5cGUpIHtcbiAgICBBcnJheS5wcm90b3R5cGVba2V5XSA9IHRoaXMuX193aW5kb3cuQXJyYXkucHJvdG90eXBlW2tleV07XG4gIH1cblxuICBmb3IobGV0IGtleSBpbiB0aGlzLm9wdGlvbnMuZ2xvYmFscykge1xuICAgIHRoaXMub3B0aW9ucy5nbG9iYWxzW2tleV0gPSB0aGlzLnVud3JhcCh0aGlzLm9wdGlvbnMuZ2xvYmFsc1trZXldKTtcbiAgfVxuXG4gIHdpbmRvdy5zZXRUaW1lb3V0ID0gdGhpcy5fX3dpbmRvdy5zZXRUaW1lb3V0O1xuICB3aW5kb3cuc2V0SW50ZXJ2YWwgPSB0aGlzLl9fd2luZG93LnNldEludGVydmFsO1xuICB3aW5kb3cuUHJvbWlzZSA9IHRoaXMuX193aW5kb3cuUHJvbWlzZTtcbiAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgdGhpcy5fX29uRXJyb3IpO1xufTtcblxuLyoqXG4gKiBKb2luIHRoZSBiaW5kaW5nIGtleXNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBrZXlzIGJpbmRpbmcga2V5c1xuICovXG5Ba2lsaS5qb2luQmluZGluZ0tleXMgPSBmdW5jdGlvbiAoa2V5cykge1xuICByZXR1cm4ga2V5cy5tYXAoZWwgPT4gZWwudG9TdHJpbmcoKSkuam9pbignLicpO1xufTtcblxuLyoqXG4gKiBBZGQgdGhlIHNjb3BlXG4gKlxuICogQHBhcmFtIHNjb3BlXG4gKi9cbkFraWxpLmFkZFNjb3BlID0gZnVuY3Rpb24gKHNjb3BlKSB7XG4gIGlmICh0aGlzLl9fc2NvcGVzW3Njb3BlLl9fbmFtZV0pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFNjb3BlIG5hbWUgJHtzY29wZS5fX25hbWV9IGFscmVhZHkgZXhpc3RzYCk7XG4gIH1cblxuICB0aGlzLl9fc2NvcGVzW3Njb3BlLl9fbmFtZV0gPSBzY29wZTtcbn07XG5cbi8qKlxuICogR2V0IHRoZSBzY29wZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gc2NvcGUgbmFtZVxuICogQHJldHVybnMge1Njb3BlfVxuICovXG5Ba2lsaS5nZXRTY29wZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiB0aGlzLl9fc2NvcGVzW25hbWVdO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgdGhlIHNjb3BlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBzY29wZSBuYW1lXG4gKi9cbkFraWxpLnJlbW92ZVNjb3BlID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgZGVsZXRlIHRoaXMuX19zY29wZXNbbmFtZV07XG59O1xuXG4vKipcbiAqIEdldCBhbGwgZWxlbWVudHMgdGhhdCBpcyB3cmFwcGVkIGluIHRoZSBBa2lsaSBjb21wb25lbnRcbiAqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFt0cmVlPXRydWVdIC0gcmV0dXJuIGFycmF5IG9mIHRoZSBwYXJlbnRzIGlmIHRydWUsIGNsb3Nlc3QgcGFyZW50IGlmIGZhbHNlXG4gKiBAcmV0dXJucyB7QXJyYXl8RWxlbWVudHxudWxsfVxuICovXG5Ba2lsaS5nZXRBa2lsaVBhcmVudHMgPSBmdW5jdGlvbiAoZWwsIHRyZWUgPSB0cnVlKSB7XG4gIGxldCBhcnIgPSBbXTtcblxuICBmdW5jdGlvbiBjaGVjayhub2RlKSB7XG4gICAgaWYgKCFub2RlLnBhcmVudE5vZGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAobm9kZS5wYXJlbnROb2RlLl9fYWtpbGkpIHtcbiAgICAgIGFyci5wdXNoKG5vZGUucGFyZW50Tm9kZSk7XG5cbiAgICAgIGlmICghdHJlZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgY2hlY2sobm9kZS5wYXJlbnROb2RlKTtcbiAgfVxuXG4gIGNoZWNrKGVsKTtcbiAgcmV0dXJuIHRyZWU/IGFycjogYXJyWzBdO1xufTtcblxuLyoqXG4gKiBDcmVhdGUgdGhlIHRlbXBsYXRlXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMgXCI8aT5IZWxsbzwvaT48Yj5Xb3JsZDwvYj5cIlxuICogZWwuaW5uZXJIVE1MID0gXCI8Yj5Xb3JsZDwvYj5cIjtcbiAqIEFraWxpLnNldFRlbXBsYXRlKGVsLCBcIjxpPkhlbGxvPC9pPiR7dGhpcy5fX2NoaWxkcmVufVwiKTtcbiAqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsXG4gKiBAcGFyYW0ge3N0cmluZ30gdGVtcGxhdGVcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbkFraWxpLnNldFRlbXBsYXRlID0gZnVuY3Rpb24gKGVsLCB0ZW1wbGF0ZSkge1xuICB0ZW1wbGF0ZSA9IHRlbXBsYXRlLnJlcGxhY2UoL1xcJHsoKCg/IVxcJHspXFxzKnRoaXNcXC5fX2NvbnRlbnRcXHMqKSopfS8sIGVsLmlubmVySFRNTCk7XG4gIGVsLmlubmVySFRNTCA9IHRlbXBsYXRlO1xuICByZXR1cm4gZWwuaW5uZXJIVE1MO1xufTtcblxuLyoqXG4gKiBHZW5lcmF0ZSB0aGUgdW5pcXVlIHNjb3BlIG5hbWVcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5Ba2lsaS5jcmVhdGVTY29wZU5hbWUgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB1dGlscy5jcmVhdGVSYW5kb21TdHJpbmcoMTYsIHN0ciA9PiAhIXRoaXMuX19zY29wZXNbc3RyXSk7XG59O1xuXG4vKipcbiAqIElzb2xhdGUgdGhlIHNjb3BlIGNoYW5nZXNcbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBmblxuICogQHJldHVybnMgeyp9XG4gKi9cbkFraWxpLmlzb2xhdGUgPSBmdW5jdGlvbiAoZm4pIHsgXG4gIGxldCBpc29sYXRpb24gPSB0aGlzLl9faXNvbGF0aW9uO1xuICAhaXNvbGF0aW9uICYmICh0aGlzLl9faXNvbGF0aW9uID0ge30pO1xuICBsZXQgcmVzO1xuXG4gIHRyeSB7XG4gICAgcmVzID0gZm4oKTtcblxuICAgIGlmKGlzb2xhdGlvbikge1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gIH1cbiAgY2F0Y2goZXJyKSB7XG4gICAgdGhpcy5fX2lzb2xhdGlvbiA9IG51bGw7XG4gICAgdGhyb3cgZXJyO1xuICB9XG4gIFxuICBsZXQgcHJvcHMgPSBbXTtcblxuICBmb3IgKGxldCBrIGluIHRoaXMuX19pc29sYXRpb24pIHtcbiAgICBwcm9wcy5wdXNoKHRoaXMuX19pc29sYXRpb25ba10pO1xuICB9XG5cbiAgdGhpcy5fX2lzb2xhdGlvbiA9IG51bGw7XG5cbiAgZm9yIChsZXQgaSA9IDAsIGwgPSBwcm9wcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsgICAgXG4gICAgY29uc3QgcHJvcCA9IHByb3BzW2ldO1xuXG4gICAgaWYocHJvcC5jb21wb25lbnQuX19pc1JlbW92ZWQpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICAgXG4gICAgcHJvcC5jb21wb25lbnQuX19pc1Jlc29sdmVkICYmIHByb3AuY29tcG9uZW50Ll9fdHJpZ2dlclN0b3JlQW5kQXR0cihwcm9wLmtleXMpO1xuICAgIHByb3AuY29tcG9uZW50Ll9fZXZhbHVhdGVCeUtleXMocHJvcC5rZXlzKTtcbiAgfVxuXG4gIHJldHVybiByZXM7XG59O1xuXG4vKipcbiAqIFN0b3AgdGhlIGV2YWx1YXRpb24gaW5zaWRlIHRoZSBmdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGZuXG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xuQWtpbGkudW5ldmFsdWF0ZSA9IGZ1bmN0aW9uIChmbikge1xuICBsZXQgZXZhbHVhdGlvbiA9IHRoaXMuX19ldmFsdWF0aW9uOyAgXG4gIHRoaXMuX19ldmFsdWF0aW9uID0gbnVsbDtcbiAgbGV0IHJlcztcblxuICB0cnkge1xuICAgIHJlcyA9IGZuKCk7XG4gIH1cbiAgY2F0Y2goZXJyKSB7XG4gICAgdGhpcy5fX2V2YWx1YXRpb24gPSBldmFsdWF0aW9uO1xuICAgIHRocm93IGVycjtcbiAgfVxuXG4gIHRoaXMuX19ldmFsdWF0aW9uID0gZXZhbHVhdGlvbjsgXG4gIHJldHVybiByZXM7XG59O1xuXG4vKipcbiAqIEV2YWx1YXRlIG9ubHkgdGhlIHJvb3QgcHJvcGVydGllc1xuICpcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGZuXG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xuQWtpbGkud3JhcHBpbmcgPSBmdW5jdGlvbiAoZm4pIHtcbiAgbGV0IHdyYXBwaW5nID0gdGhpcy5fX3dyYXBwaW5nO1xuICAhd3JhcHBpbmcgJiYgKHRoaXMuX193cmFwcGluZyA9IHRydWUpO1xuICBsZXQgcmVzO1xuXG4gIHRyeSB7XG4gICAgcmVzID0gZm4oKTtcblxuICAgIGlmKHdyYXBwaW5nKSB7XG4gICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgfVxuICBjYXRjaChlcnIpIHtcbiAgICB0aGlzLl9fd3JhcHBpbmcgPSBmYWxzZTtcbiAgICB0aHJvdyBlcnI7XG4gIH1cblxuICB0aGlzLl9fd3JhcHBpbmcgPSBmYWxzZTsgXG4gIHJldHVybiByZXM7ICAgXG59XG5cbi8qKlxuICogU3RvcCB0aGUgaXNvbGF0aW9uIGluc2lkZSB0aGUgZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBmblxuICogQHJldHVybnMgeyp9XG4gKi9cbkFraWxpLnVuaXNvbGF0ZSA9IGZ1bmN0aW9uIChmbikge1xuICBsZXQgaXNvbGF0aW9uID0gdGhpcy5fX2lzb2xhdGlvbjtcbiAgdGhpcy5fX2lzb2xhdGlvbiA9IG51bGw7XG4gIGxldCByZXM7XG5cbiAgdHJ5IHtcbiAgICByZXMgPSBmbigpO1xuICB9XG4gIGNhdGNoKGVycikge1xuICAgIHRoaXMuX19pc29sYXRpb24gPSBpc29sYXRpb247XG4gICAgdGhyb3cgZXJyO1xuICB9XG5cbiAgdGhpcy5fX2lzb2xhdGlvbiA9IGlzb2xhdGlvbjtcbiAgcmV0dXJuIHJlcztcbn07XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgZWxlbWVudFxuICpcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9ucz17fV1cbiAqIEByZXR1cm5zIHsqfVxuICovXG5Ba2lsaS5pbml0aWFsaXplID0gZnVuY3Rpb24gKGVsLCBvcHRpb25zID0ge30pIHtcbiAgbGV0IHJlY29tcGlsZSA9IG9wdGlvbnMucmVjb21waWxlO1xuICBsZXQgY29tcG9uZW50ID0gZWwuX19ha2lsaTtcblxuICBpZiAoY29tcG9uZW50KSB7XG4gICAgaWYgKHJlY29tcGlsZSkge1xuICAgICAgY29tcG9uZW50Ll9fcmVjb21waWxlKHJlY29tcGlsZSA9PT0gdHJ1ZT8ge306IHJlY29tcGlsZSk7XG4gICAgICByZXR1cm4gY29tcG9uZW50O1xuICAgIH1cblxuICAgIHJldHVybjtcbiAgfVxuXG4gIGxldCBpc1Jvb3QgPSBlbCA9PT0gdGhpcy5fX3Jvb3Q7XG4gIGxldCBjb21wb25lbnROYW1lID0gdXRpbHMudG9EYXNoQ2FzZShlbC5nZXRBdHRyaWJ1dGUoJ2NvbXBvbmVudCcpIHx8IGVsLnRhZ05hbWUudG9Mb3dlckNhc2UoKSk7XG4gIGxldCBfQ29tcG9uZW50ID0gdGhpcy5fX2NvbXBvbmVudHNbY29tcG9uZW50TmFtZV07XG5cbiAgQ0hFQ0tfQUxJQVNFUzogaWYgKCFfQ29tcG9uZW50KSB7XG4gICAgbGV0IHNlbGVjdG9ycyA9IE9iamVjdC5rZXlzKHRoaXMuX19hbGlhc2VzKTtcblxuICAgIGlmICghc2VsZWN0b3JzLmxlbmd0aCkge1xuICAgICAgYnJlYWsgQ0hFQ0tfQUxJQVNFUztcbiAgICB9XG5cbiAgICBsZXQgc2VsZWN0b3JBbGwgPSBzZWxlY3RvcnMuam9pbignLCcpO1xuXG4gICAgaWYgKCFlbC5tYXRjaGVzKHNlbGVjdG9yQWxsKSkge1xuICAgICAgYnJlYWsgQ0hFQ0tfQUxJQVNFUztcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IHNlbGVjdG9ycy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGxldCBzZWxlY3RvciA9IHNlbGVjdG9yc1tpXTtcblxuICAgICAgaWYgKGVsLm1hdGNoZXMoc2VsZWN0b3IpKSB7XG4gICAgICAgIF9Db21wb25lbnQgPSB0aGlzLl9fY29tcG9uZW50c1t0aGlzLl9fYWxpYXNlc1tzZWxlY3Rvcl1dO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAoIV9Db21wb25lbnQgJiYgIWlzUm9vdCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICghX0NvbXBvbmVudCkge1xuICAgIF9Db21wb25lbnQgPSB0aGlzLkNvbXBvbmVudDtcbiAgfVxuXG4gIGlmIChfQ29tcG9uZW50Lm1hdGNoZXMgJiYgIWVsLm1hdGNoZXMoX0NvbXBvbmVudC5tYXRjaGVzKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbXBvbmVudCA9IG5ldyBfQ29tcG9uZW50KGVsLCB7fSk7ICBcbiAgXG4gIGlmIChjb21wb25lbnQuX19jYW5jZWxsZWQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZihBa2lsaS5nZXRBa2lsaVBhcmVudHMoZWwpLmZpbmQocCA9PiBwLl9fYWtpbGkuX19wcmV2ZW50KSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbXBvbmVudC5fX2NyZWF0ZSgpO1xuICByZXR1cm4gY29tcG9uZW50O1xufTtcblxuLyoqXG4gKiBDb21waWxlIHRoZSBlbGVtZW50XG4gKlxuICogQHBhcmFtIHtFbGVtZW50fSByb290XG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAqL1xuQWtpbGkuY29tcGlsZSA9IGZ1bmN0aW9uIChyb290LCBvcHRpb25zID0geyByZWNvbXBpbGU6IGZhbHNlIH0pIHsgIFxuICBsZXQgZWxlbWVudHMgPSBbXTtcblxuICBpZih3aW5kb3cuQUtJTElfU1NSKSB7XG4gICAgY29uc3QgYXJyID0gcm9vdC5xdWVyeVNlbGVjdG9yQWxsKCdbbm8tc3NyXScpO1xuXG4gICAgZm9yKGxldCBpID0gMCwgbCA9IGFyci5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGFycltpXS5yZW1vdmUoKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBuZXN0ZWRJbml0aWFsaXppbmcgPSBlbCA9PiB7XG4gICAgbGV0IGNvbXBvbmVudCA9IHRoaXMuaW5pdGlhbGl6ZShlbCwgb3B0aW9ucyk7XG4gICAgbGV0IGNoaWxkcmVuID0gZWwuY2hpbGRyZW47XG4gICAgY29tcG9uZW50ICYmIGVsZW1lbnRzLnB1c2goY29tcG9uZW50KTtcblxuICAgIGZvciAobGV0IGkgPSAwLCBsID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBsZXQgY2hpbGQgPSBjaGlsZHJlbltpXTtcbiAgICAgIG5lc3RlZEluaXRpYWxpemluZyhjaGlsZCk7XG4gICAgfVxuICB9O1xuICBcbiAgbmVzdGVkSW5pdGlhbGl6aW5nKHJvb3QpO1xuICBsZXQgcCA9IFtdO1xuXG4gIGZvciAobGV0IGkgPSAwLCBsID0gZWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgbGV0IGNvbXBvbmVudCA9IGVsZW1lbnRzW2ldOyAgICBcbiAgICBwLnB1c2goY29tcG9uZW50Ll9fY29tcGlsZSgpKTsgICAgXG4gIH1cblxuICByZXR1cm4gUHJvbWlzZS5hbGwocCkudGhlbigoKSA9PiB7XG4gICAgbGV0IHIgPSBbXTtcblxuICAgIGZvciAobGV0IGkgPSBlbGVtZW50cy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgbGV0IGNvbXBvbmVudCA9IGVsZW1lbnRzW2ldO1xuICAgICAgci5wdXNoKGNvbXBvbmVudC5fX3Jlc29sdmUoKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKHIpO1xuICB9KTtcbn07XG5cbi8qKlxuICogUmVnaXN0ZXIgdGhlIGNvbXBvbmVudC5cbiAqIE9yIGdldCBpdCBpZiB0aGUgZnVuY3Rpb24gaXMgbm90IHBhc3NlZFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gKiBAcGFyYW0ge0NvbXBvbmVudH0gW2ZuXVxuICovXG5Ba2lsaS5jb21wb25lbnQgPSBmdW5jdGlvbiAobmFtZSwgZm4pIHtcbiAgbmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcblxuICBpZiAoIWZuKSB7XG4gICAgcmV0dXJuIHRoaXMuX19jb21wb25lbnRzW25hbWVdIHx8IG51bGw7XG4gIH1cbiAgXG4gIGlmICh0aGlzLl9fY29tcG9uZW50c1tuYW1lXSAmJiBBa2lsaS5vcHRpb25zLmRlYnVnKSB7ICBcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUud2FybihgQ29tcG9uZW50ICR7bmFtZX0gYWxyZWFkeSB3YXMgYWRkZWRgKTtcbiAgfVxuXG4gIHRoaXMuX19jb21wb25lbnRzW25hbWVdID0gZm47XG59O1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgY29tcG9uZW50XG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqL1xuQWtpbGkucmVtb3ZlQ29tcG9uZW50ID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgZGVsZXRlIHRoaXMuX19jb21wb25lbnRzW25hbWVdO1xufTtcblxuLyoqXG4gKiBSZWdpc3RlciB0aGUgc2VsZWN0b3IgYWxpYXMuXG4gKiBPciBnZXQgaXQgaWYgdGhlIGNvbXBvbmVudCBuYW1lIGlzIG5vdCBwYXNzZWRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3IgLSBET00gc2VsZWN0b3JcbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29tcG9uZW50TmFtZV1cbiAqL1xuQWtpbGkuYWxpYXMgPSBmdW5jdGlvbiAoc2VsZWN0b3IsIGNvbXBvbmVudE5hbWUgPSAnJykge1xuICBjb21wb25lbnROYW1lID0gY29tcG9uZW50TmFtZS50b0xvd2VyQ2FzZSgpO1xuXG4gIGlmICghY29tcG9uZW50TmFtZSkge1xuICAgIHJldHVybiB0aGlzLl9fYWxpYXNlc1tzZWxlY3Rvcl0gfHwgbnVsbDtcbiAgfVxuXG4gIGlmICh0aGlzLl9fYWxpYXNlc1tzZWxlY3Rvcl0gJiYgQWtpbGkub3B0aW9ucy5kZWJ1Zykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgY29uc29sZS53YXJuKGBBbGlhcyB3aXRoIHNlbGVjdG9yICR7c2VsZWN0b3J9IGFscmVhZHkgd2FzIGFkZGVkYCk7XG4gIH1cblxuICB0aGlzLl9fYWxpYXNlc1tzZWxlY3Rvcl0gPSBjb21wb25lbnROYW1lO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgdGhlIHNlbGVjdG9yIGFsaWFzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHNlbGVjdG9yXG4gKi9cbkFraWxpLnJlbW92ZUFsaWFzID0gZnVuY3Rpb24gKHNlbGVjdG9yKSB7XG4gIGRlbGV0ZSB0aGlzLl9fYWxpYXNlc1tzZWxlY3Rvcl07XG59O1xuXG4vKipcbiAqIElzb2xhdGUgdGhlIGFycmF5IHByb3RvdHlwZSBmdW5jdGlvbnNcbiAqL1xuQWtpbGkuaXNvbGF0ZUFycmF5UHJvdG90eXBlID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl9fd2luZG93LkFycmF5ID0geyBwcm90b3R5cGU6IHt9IH07XG4gIGxldCBrZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoQXJyYXkucHJvdG90eXBlKTtcblxuICBmb3IgKGxldCBpID0gMCwgbCA9IGtleXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgbGV0IGtleSA9IGtleXNbaV07XG4gICAgbGV0IG9sZCA9IEFycmF5LnByb3RvdHlwZVtrZXldO1xuXG4gICAgaWYgKHR5cGVvZiBvbGQgIT0gJ2Z1bmN0aW9uJyB8fCBrZXkgPT0gJ2NvbnN0cnVjdG9yJykge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgdGhpcy5fX3dpbmRvdy5BcnJheS5wcm90b3R5cGVba2V5XSA9IG9sZDtcblxuICAgIEFycmF5LnByb3RvdHlwZVtrZXldID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIEFraWxpLnVuZXZhbHVhdGUoKCkgPT4ge1xuICAgICAgICBpZiAoIXRoaXMuX19pc1Byb3h5KSB7XG4gICAgICAgICAgcmV0dXJuIG9sZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gQWtpbGkuaXNvbGF0ZSgoKSA9PiBvbGQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG59O1xuXG4vKipcbiAqIElzb2xhdGUgdGhlIHdpbmRvdyBmdW5jdGlvbnNcbiAqL1xuQWtpbGkuaXNvbGF0ZVdpbmRvd0Z1bmN0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fX3dpbmRvdy5zZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgdGhpcy5fX3dpbmRvdy5zZXRJbnRlcnZhbCA9IHNldEludGVydmFsO1xuICB0aGlzLl9fd2luZG93LlByb21pc2UgPSB3aW5kb3cuUHJvbWlzZTtcbiAgd2luZG93LnNldFRpbWVvdXQgPSB0aGlzLmNyZWF0ZUNhbGxiYWNrSXNvbGF0aW9uKHdpbmRvdy5zZXRUaW1lb3V0LCAwKTtcbiAgd2luZG93LnNldEludGVydmFsID0gdGhpcy5jcmVhdGVDYWxsYmFja0lzb2xhdGlvbih3aW5kb3cuc2V0SW50ZXJ2YWwsIDApO1xuICBcbiAgaWYoIXdpbmRvdy5BS0lMSV9TU1IpIHtcbiAgICB3aW5kb3cuUHJvbWlzZS5jb25zdHJ1Y3RvciA9IHRoaXMuY3JlYXRlQ2FsbGJhY2tJc29sYXRpb24od2luZG93LlByb21pc2UuY29uc3RydWN0b3IpO1xuICAgIHdpbmRvdy5Qcm9taXNlLnByb3RvdHlwZS50aGVuID0gdGhpcy5jcmVhdGVDYWxsYmFja0lzb2xhdGlvbih3aW5kb3cuUHJvbWlzZS5wcm90b3R5cGUudGhlbiwgWzAsICdsYXN0J10pO1xuICAgIHdpbmRvdy5Qcm9taXNlLnByb3RvdHlwZS5jYXRjaCA9IHRoaXMuY3JlYXRlQ2FsbGJhY2tJc29sYXRpb24od2luZG93LlByb21pc2UucHJvdG90eXBlLmNhdGNoKTtcbiAgfSAgXG59O1xuXG4vKipcbiAqIElzb2xhdGUgdGhlIGdsb2JhbHNcbiAqL1xuQWtpbGkuaXNvbGF0ZUdsb2JhbHMgPSBmdW5jdGlvbiAoKSB7ICBcbiAgZ2xvYmFscy5fX3RhcmdldC51dGlscyA9IHRoaXMud3JhcCh1dGlscyk7IFxuICB0aGlzLmlzb2xhdGVFdmVudHMoKTtcbiAgdGhpcy5pc29sYXRlQXJyYXlQcm90b3R5cGUoKTtcbiAgdGhpcy5pc29sYXRlV2luZG93RnVuY3Rpb25zKCk7XG59O1xuXG4vKipcbiAqIElzb2xhdGUgdGhlIGV2ZW50IGxpc3RlbmVyc1xuICovXG5Ba2lsaS5pc29sYXRlRXZlbnRzID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl9fd2luZG93LkVsZW1lbnQgPSB7IHByb3RvdHlwZToge30gfTtcblxuICBpZih3aW5kb3cuQUtJTElfU1NSKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIFxuICB0aGlzLl9fd2luZG93LkVsZW1lbnQucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXIgPSBFbGVtZW50LnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyO1xuICB0aGlzLl9fd2luZG93LkVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSBFbGVtZW50LnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyO1xuICB0aGlzLl9fd2luZG93LkVsZW1lbnQucHJvdG90eXBlLnJlbW92ZSA9IEVsZW1lbnQucHJvdG90eXBlLnJlbW92ZTtcblxuICBFbGVtZW50LnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgZGVsZXRlIHRoaXMuX19ha2lsaUxpc3RlbmVycztcbiAgICByZXR1cm4gQWtpbGkuX193aW5kb3cuRWxlbWVudC5wcm90b3R5cGUucmVtb3ZlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH07XG5cbiAgRWxlbWVudC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIChuYW1lLCBmbikge1xuICAgIGxldCBhcmdzID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuXG4gICAgaWYgKCF0aGlzLl9fYWtpbGlMaXN0ZW5lcnMpIHtcbiAgICAgIHRoaXMuX19ha2lsaUxpc3RlbmVycyA9IHt9O1xuICAgIH1cblxuICAgIGlmICghdGhpcy5fX2FraWxpTGlzdGVuZXJzW25hbWVdKSB7XG4gICAgICB0aGlzLl9fYWtpbGlMaXN0ZW5lcnNbbmFtZV0gPSBbXTtcbiAgICB9XG4gICAgXG4gICAgaWYodHlwZW9mIGZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBhcmdzWzFdID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gQWtpbGkuaXNvbGF0ZSgoKSA9PiBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgICAgIH07XG4gICAgfSAgICBcblxuICAgIHRoaXMuX19ha2lsaUxpc3RlbmVyc1tuYW1lXS5wdXNoKHtcbiAgICAgIGxpbms6IGZuLFxuICAgICAgZm46IGFyZ3NbMV1cbiAgICB9KTtcblxuICAgIHJldHVybiBBa2lsaS5fX3dpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICB9O1xuXG4gIEVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiAobmFtZSwgZm4pIHtcbiAgICBsZXQgYXJncyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcblxuICAgIGlmICghdGhpcy5fX2FraWxpTGlzdGVuZXJzKSB7XG4gICAgICB0aGlzLl9fYWtpbGlMaXN0ZW5lcnMgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMuX19ha2lsaUxpc3RlbmVyc1tuYW1lXSkge1xuICAgICAgdGhpcy5fX2FraWxpTGlzdGVuZXJzW25hbWVdID0gW107XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSB0aGlzLl9fYWtpbGlMaXN0ZW5lcnNbbmFtZV0ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBsZXQgbGlzdGVuZXIgPSB0aGlzLl9fYWtpbGlMaXN0ZW5lcnNbbmFtZV1baV07XG5cbiAgICAgIGlmIChsaXN0ZW5lci5saW5rID09PSBmbikge1xuICAgICAgICB0aGlzLl9fYWtpbGlMaXN0ZW5lcnNbbmFtZV0uc3BsaWNlKGksIDEpO1xuICAgICAgICBhcmdzWzFdID0gbGlzdGVuZXIuZm47XG4gICAgICAgIGktLTtcbiAgICAgICAgbC0tO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIXRoaXMuX19ha2lsaUxpc3RlbmVyc1tuYW1lXS5sZW5ndGgpIHtcbiAgICAgIGRlbGV0ZSB0aGlzLl9fYWtpbGlMaXN0ZW5lcnNbbmFtZV07XG4gICAgfVxuXG4gICAgcmV0dXJuIEFraWxpLl9fd2luZG93LkVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUV2ZW50TGlzdGVuZXIuYXBwbHkodGhpcywgYXJncyk7XG4gIH07XG59O1xuXG4vKipcbiAqIFdyYXAgdGhlIGZ1bmN0aW9uIGNhbGxiYWNrIHdpdGggdGhlIGlzb2xhdGlvbiBjb250ZXh0XG4gKlxuICogQHBhcmFtIHtmdW5jdGlvbn0gZm5cbiAqIEBwYXJhbSB7bnVtYmVyfHN0cmluZ3xudW1iZXJbXXxzdHJpbmdbXX0gW3Bvcz1cImxhc3RcIl1cbiAqIEByZXR1cm5zIHtmdW5jdGlvbn1cbiAqL1xuQWtpbGkuY3JlYXRlQ2FsbGJhY2tJc29sYXRpb24gPSBmdW5jdGlvbiAoZm4sIHBvcyA9ICdsYXN0Jykge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIGxldCBhcmdzID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuICAgICFBcnJheS5pc0FycmF5KHBvcykgJiYgKHBvcyA9IFtwb3NdKTtcbiAgICBcbiAgICBmb3IobGV0IGkgPSAwLCBsID0gcG9zLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgbGV0IG51bSA9IHBvc1tpXTtcbiAgICAgIGxldCBpbmRleCA9IG51bTtcbiAgICAgIGxldCBjYWxsYmFjayA9IGFyZ3NbbnVtXTtcblxuICAgICAgaWYobnVtID09ICdsYXN0Jykge1xuICAgICAgICBpbmRleCA9IGFyZ3MubGVuZ3RoIC0gMTtcbiAgICAgICAgY2FsbGJhY2sgPSBhcmdzW2luZGV4XTtcbiAgICAgIH1cblxuICAgICAgaWYodHlwZW9mIGNhbGxiYWNrICE9ICdmdW5jdGlvbicpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmKCFjYWxsYmFjay5fX2lzb2xhdGVkKSB7XG4gICAgICAgIGFyZ3NbaW5kZXhdID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBBa2lsaS5pc29sYXRlKCgpID0+IGNhbGxiYWNrLmFwcGx5KGNhbGxiYWNrLCBhcmd1bWVudHMpKTtcbiAgICAgICAgfTtcblxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYXJnc1tpbmRleF0sICdfX2lzb2xhdGVkJywge1xuICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgIHZhbHVlOiBjYWxsYmFja1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpcywgYXJncyk7XG4gIH07XG59O1xuXG4vKipcbiAqIFdyYXAgdGhlIG9iamVjdC9mdW5jdGlvbiB0byBpc29sYXRlIGFuZCB1bmV2YWx1YXRlIGRhdGFcbiAqXG4gKiBAcGFyYW0ge29iamVjdHxmdW5jdGlvbn0gb2JqXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdIFxuICovXG5Ba2lsaS53cmFwID0gZnVuY3Rpb24gKG9iaiwgb3B0aW9ucyA9IHt9KSB7XG4gIGxldCBjdXJyZW50ID0gb2JqO1xuXG4gIGlmKHR5cGVvZiBvYmogPT0gJ2Z1bmN0aW9uJykge1xuICAgIG9iaiA9IHRoaXMud3JhcEZ1bmN0aW9uKG9iaiwgb3B0aW9ucyk7XG5cbiAgICBpZihvYmogPT09IGN1cnJlbnQpIHtcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICB9XG4gIGVsc2UgaWYoIW9iaiB8fCB0eXBlb2Ygb2JqICE9ICdvYmplY3QnIHx8IEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICBsZXQga2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaik7XG5cbiAgZm9yKGxldCBrID0gMCwgYyA9IGtleXMubGVuZ3RoOyBrIDwgYzsgaysrKSB7XG4gICAgbGV0IGtleSA9IGtleXNba107XG4gICAgbGV0IGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KTtcblxuICAgIGlmKCFkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSB8fCAhZGVzY3JpcHRvci53cml0YWJsZSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYob3B0aW9ucy5yZXZlcnNlKSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsuLi5kZXNjcmlwdG9yLCB2YWx1ZTogb2JqW2tleV0uX19ha2lsaSB8fCBvYmpba2V5XSB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsuLi5kZXNjcmlwdG9yLCB2YWx1ZTogdGhpcy53cmFwKG9ialtrZXldLCBvcHRpb25zKSB9KTtcbiAgfSBcbiAgXG4gIHJldHVybiBvYmo7XG59O1xuXG4vKipcbiAqIFVud3JhcCB0aGUgb2JqZWN0L2Z1bmN0aW9uXG4gKlxuICogQHBhcmFtIHtvYmplY3R8ZnVuY3Rpb259IG9ialxuICovXG5Ba2lsaS51bndyYXAgPSBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiB0aGlzLndyYXAob2JqLCB7IHJldmVyc2U6IHRydWUgfSk7XG59XG5cbi8qKlxuICogSXNvbGF0ZSB0aGUgZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBmblxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXSBcbiAqIEByZXR1cm5zIHtmdW5jdGlvbn1cbiAqL1xuQWtpbGkud3JhcEZ1bmN0aW9uID0gZnVuY3Rpb24gKGZuLCBvcHRpb25zID0ge30pIHtcbiAgaWYgKGZuLl9fYWtpbGkpIHtcbiAgICByZXR1cm4gZm47XG4gIH1cblxuICBjb25zdCBha2lsaVdyYXBwZWRGdW5jdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZihvcHRpb25zLnRhZyAmJiBBa2lsaS5fX2V2YWx1YXRpb24pIHtcbiAgICAgIEFraWxpLmFkZFRhZyhvcHRpb25zLnRhZywgQWtpbGkuX19ldmFsdWF0aW9uLm5vZGUpO1xuICAgIH1cblxuICAgIHJldHVybiBBa2lsaS53cmFwcGluZygoKSA9PiBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfTtcblxuICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKGZuKTtcbiAgYWtpbGlXcmFwcGVkRnVuY3Rpb24ucHJvdG90eXBlID0gZm4ucHJvdG90eXBlO1xuXG4gIGZvcihsZXQgaSA9IDAsIGwgPSBrZXlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGxldCBrZXkgPSBrZXlzW2ldO1xuICAgIGFraWxpV3JhcHBlZEZ1bmN0aW9uW2tleV0gPSBmbltrZXldO1xuICB9XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGFraWxpV3JhcHBlZEZ1bmN0aW9uLCAnX19ha2lsaScsIHtcbiAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICB2YWx1ZTogZm5cbiAgfSk7XG5cbiAgcmV0dXJuIGFraWxpV3JhcHBlZEZ1bmN0aW9uO1xufTtcblxuLyoqXG4gKiBBZGQgdGhlIHRhZ1xuICogXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFnXG4gKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAqL1xuQWtpbGkuYWRkVGFnID0gZnVuY3Rpb24gKHRhZywgbm9kZSkge1xuICBpZih0aGlzLmhhc1RhZyh0YWcsIG5vZGUpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYoIXRoaXMuX190YWdzW25vZGUuX19uYW1lXSkge1xuICAgIHRoaXMuX190YWdzW25vZGUuX19uYW1lXSA9IHt9OyAgICBcbiAgfVxuXG4gIGlmKCF0aGlzLl9fdGFnc1tub2RlLl9fbmFtZV1bdGFnXSkge1xuICAgIHRoaXMuX190YWdzW25vZGUuX19uYW1lXVt0YWddID0gW107ICAgIFxuICB9XG5cbiAgdGhpcy5fX3RhZ3Nbbm9kZS5fX25hbWVdW3RhZ10ucHVzaCh7IG5vZGUgfSk7XG59XG5cbi8qKlxuICogQ2hlY2sgdGhlIHRhZyBleGlzdHNcbiAqIFxuICogQHBhcmFtIHtzdHJpbmd9IHRhZ1xuICogQHBhcmFtIHtOb2RlfSBbbm9kZV1cbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5Ba2lsaS5oYXNUYWcgPSBmdW5jdGlvbih0YWcsIG5vZGUpIHtcbiAgaWYoIW5vZGUpe1xuICAgIGZvcihsZXQga2V5IGluIHRoaXMuX190YWdzKSB7XG4gICAgICBmb3IobGV0IGsgaW4gdGhpcy5fX3RhZ3Nba2V5XSkge1xuICAgICAgICBpZihrID09IHRhZykge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYoIXRoaXMuX190YWdzW25vZGUuX19uYW1lXSkge1xuICAgIHJldHVybiBmYWxzZTsgICAgXG4gIH1cblxuICBpZighdGhpcy5fX3RhZ3Nbbm9kZS5fX25hbWVdW3RhZ10pIHtcbiAgICByZXR1cm4gZmFsc2U7ICAgIFxuICB9IFxuXG4gIHJldHVybiB0cnVlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgdGFnXG4gKiBcbiAqIEBwYXJhbSB7c3RyaW5nfSBbdGFnXVxuICogQHBhcmFtIHtOb2RlfSBbbm9kZV1cbiAqL1xuQWtpbGkucmVtb3ZlVGFnID0gZnVuY3Rpb24gKHRhZywgbm9kZSkge1xuICBpZih0eXBlb2YgdGFnID09ICdvYmplY3QnKSB7XG4gICAgbm9kZSA9IHRhZztcbiAgICB0YWcgPSB1bmRlZmluZWQ7XG4gIH1cblxuICBpZighdGFnKSB7IFxuICAgIGRlbGV0ZSB0aGlzLl9fdGFnc1tub2RlLl9fbmFtZV07XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYoIW5vZGUpIHtcbiAgICBmb3IobGV0IGtleSBpbiB0aGlzLl9fdGFncykge1xuICAgICAgZm9yKGxldCBrIGluIHRoaXMuX190YWdzW2tleV0pIHtcbiAgICAgICAgaWYoayA9PSB0YWcpIHtcbiAgICAgICAgICBkZWxldGUgdGhpcy5fX3RhZ3Nba2V5XVtrXVxuICAgICAgICB9XG4gICAgICB9XG4gIFxuICAgICAgaWYoIU9iamVjdC5rZXlzKHRoaXMuX190YWdzW2tleV0pLmxlbmd0aCkge1xuICAgICAgICBkZWxldGUgdGhpcy5fX3RhZ3Nba2V5XTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm47ICAgIFxuICB9XG5cbiAgZm9yKGxldCBrZXkgaW4gdGhpcy5fX3RhZ3Nbbm9kZS5fX25hbWVdKSB7XG4gICAgaWYoa2V5ID09IHRhZykge1xuICAgICAgZGVsZXRlIHRoaXMuX190YWdzW25vZGUuX19uYW1lXVtrZXldO1xuICAgIH1cbiAgfVxuXG4gIGlmKCFPYmplY3Qua2V5cyh0aGlzLl9fdGFnc1tub2RlLl9fbmFtZV0pLmxlbmd0aCkge1xuICAgIGRlbGV0ZSB0aGlzLl9fdGFnc1tub2RlLl9fbmFtZV07XG4gIH1cbn1cblxuLyoqXG4gKiBFdmFsdWF0ZSB0aGUgdGFnIGV4cHJlc3Npb25zXG4gKiBcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YWdcbiAqL1xuQWtpbGkudHJpZ2dlclRhZyA9IGZ1bmN0aW9uICh0YWcpIHtcbiAgZm9yKGxldCBrZXkgaW4gdGhpcy5fX3RhZ3MpIHtcbiAgICBmb3IobGV0IGsgaW4gdGhpcy5fX3RhZ3Nba2V5XSkge1xuICAgICAgaWYoayA9PSB0YWcpIHtcbiAgICAgICAgY29uc3QgYXJyID0gdGhpcy5fX3RhZ3Nba2V5XVtrXTtcblxuICAgICAgICBmb3IobGV0IGkgPSAwLCBsID0gYXJyLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgIGNvbnN0IG9iaiA9IGFycltpXTtcbiAgICAgICAgICBvYmoubm9kZS5fX2NvbXBvbmVudC5fX2V2YWx1YXRlTm9kZShvYmoubm9kZSwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogSGFuZGxlIHRoZSBlcnJvcnNcbiAqL1xuQWtpbGkuaGFuZGxlRXJyb3JzID0gZnVuY3Rpb24gKCkge1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCB0aGlzLl9fb25FcnJvcik7XG59O1xuXG4vKipcbiAqIFRyaWdnZXIgdGhlIGluaXRpYWxpemF0aW9uIHN0YXR1c1xuICpcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gc3RhdHVzXG4gKi9cbkFraWxpLnRyaWdnZXJJbml0ID0gZnVuY3Rpb24gKHN0YXR1cykge1xuICBBa2lsaS5fX2luaXQgPSBzdGF0dXM7XG4gIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnYWtpbGktaW5pdCcsIHsgZGV0YWlsOiBzdGF0dXMgfSkpO1xufTtcblxuLyoqXG4gKiBJbml0aWFsaXplIHRoZSBhcHBsaWNhdGlvblxuICpcbiAqIEBwYXJhbSB7RWxlbWVudH0gW3Jvb3RdXG4gKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAqL1xuQWtpbGkuaW5pdCA9IGZ1bmN0aW9uIChyb290KSB7IFxuICByb290ID0gcm9vdCB8fCBkb2N1bWVudC5ib2R5O1xuICB0aGlzLl9fcm9vdE91dGVySFRNTCA9IHJvb3Qub3V0ZXJIVE1MO1xuXG4gIGlmKCEocm9vdCBpbnN0YW5jZW9mIEVsZW1lbnQpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBSb290IGVsZW1lbnQgbXVzdCBiZSBhbiBodG1sIGVsZW1lbnRgKTtcbiAgfVxuXG4gIGlmKHJvb3QgPT09IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcihgXCJodG1sXCIgY2FuJ3QgYmUgdGhlIHJvb3QgZWxlbWVudGApO1xuICB9XG5cbiAgdGhpcy5fX3Jvb3QgPSByb290O1xuICBcbiAgaWYod2luZG93LkFLSUxJX1NFUlZFUikgeyAgICBcbiAgICBBa2lsaS5pbml0U2VydmVyU2lkZUh0bWwod2luZG93LkFLSUxJX1NFUlZFUi5odG1sKTtcbiAgICBBa2lsaS5pbml0U2VydmVyU2lkZVJlcXVlc3RDYWNoZSh3aW5kb3cuQUtJTElfU0VSVkVSLnJlcXVlc3RDYWNoZSk7XG4gIH1cbiAgZWxzZSB7XG4gICAgd2luZG93LkFLSUxJX0NMSUVOVCA9IHtcbiAgICAgIGh0bWw6IHRoaXMucHJlcGFyZVNlcnZlclNpZGVIdG1sKClcbiAgICB9XG4gIH1cbiAgXG4gIHJldHVybiB0aGlzLmNvbXBpbGUodGhpcy5fX3Jvb3QpLnRoZW4oKCkgPT4ge1xuICAgIGlmIChyb3V0ZXIuX19pbml0KSB7XG4gICAgICByZXR1cm4gcm91dGVyLmNoYW5nZVN0YXRlKHsgaW5pdDogdHJ1ZSB9KTtcbiAgICB9XG4gIH0pLnRoZW4oKCkgPT4geyAgICBcbiAgICB3aW5kb3cuQUtJTElfQ0xJRU5UICYmICh3aW5kb3cuQUtJTElfQ0xJRU5ULnJlcXVlc3RDYWNoZSA9IHRoaXMucHJlcGFyZVNlcnZlclNpZGVSZXF1ZXN0Q2FjaGUoKSk7XG4gICAgdGhpcy50cmlnZ2VySW5pdCh0cnVlKTtcbiAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICB0aGlzLnRyaWdnZXJJbml0KGZhbHNlKTtcbiAgICB0aHJvdyBlcnI7XG4gIH0pO1xufTtcblxuLyoqXG4gKiBEZWluaXRpYWxpemUgdGhlIGFwcGxpY2F0aW9uXG4gKi9cbkFraWxpLmRlaW5pdCA9IGZ1bmN0aW9uICgpIHsgXG4gIHRoaXMuX19yb290ICYmICh0aGlzLl9fcm9vdC5vdXRlckhUTUwgPSB0aGlzLl9fcm9vdE91dGVySFRNTCk7XG5cbiAgZm9yKGxldCBrZXkgaW4gdGhpcy5fX3Njb3Blcykge1xuICAgIGNvbnN0IGNvbXBvbmVudCA9IHRoaXMuX19zY29wZXNba2V5XS5fX2NvbXBvbmVudDtcbiAgICBjb21wb25lbnQgJiYgY29tcG9uZW50LnJlbW92ZSgpO1xuICB9XG5cbiAgdGhpcy5fX3Jvb3RPdXRlckhUTUwgPSAnJztcbiAgdGhpcy5fX2luaXQgPSBudWxsO1xuICB0aGlzLl9fcm9vdCA9IG51bGw7XG4gIHRoaXMuX19zY29wZXMgPSB7fTtcbiAgdGhpcy5fX3N0b3JlTGlua3MgPSB7fTtcbiAgdGhpcy5fX3RhZ3MgPSB7fTtcbn07XG5cbi8qKlxuICogRGVzdHJveSB0aGUgZnJhbWV3b3JrXG4gKi9cbkFraWxpLmRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuZGVpbml0KCk7ICBcbiAgdGhpcy5jbGVhckdsb2JhbHMoKTtcblxuICBsZXQgc3RvcmVLZXlzID0gT2JqZWN0LmtleXMoc3RvcmUuX190YXJnZXQpO1xuICBcbiAgZm9yKGxldCBpID0gMCwgbCA9IHN0b3JlS2V5cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBkZWxldGUgc3RvcmUuX190YXJnZXRbc3RvcmVLZXlzW2ldXTtcbiAgfVxuXG4gIHJvdXRlci5fX2luaXQgJiYgcm91dGVyLmRlaW5pdCgpO1xuICBkZWxldGUgd2luZG93LkFLSUxJX1NFUlZFUjtcbiAgZGVsZXRlIHdpbmRvdy5BS0lMSV9DTElFTlQ7XG4gIGRlbGV0ZSB3aW5kb3cuQUtJTElfU1NSO1xuXG4gIGZvcihsZXQga2V5IGluIEFraWxpKSB7XG4gICAgZGVsZXRlIEFraWxpW2tleV07XG4gIH1cblxuICBkZWxldGUgd2luZG93LkFraWxpO1xufVxuXG4vKipcbiAqIEluaXRpYWxpemUgdGhlIFNTUiBodG1sXG4gKiBcbiAqIEBwYXJhbSB7c3RyaW5nfSBodG1sXG4gKi9cbkFraWxpLmluaXRTZXJ2ZXJTaWRlSHRtbCA9IGZ1bmN0aW9uIChodG1sKSB7XG4gIGZvciAobGV0IGkgPSB0aGlzLl9fcm9vdC5hdHRyaWJ1dGVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKXtcbiAgICB0aGlzLl9fcm9vdC5yZW1vdmVBdHRyaWJ1dGUodGhpcy5fX3Jvb3QuYXR0cmlidXRlc1tpXS5uYW1lKTtcbiAgfVxuXG4gIGxldCBwYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG4gIGxldCBkb2MgPSBwYXJzZXIucGFyc2VGcm9tU3RyaW5nKGh0bWwsIFwidGV4dC9odG1sXCIpO1xuICBsZXQgZWwgPSBkb2MucXVlcnlTZWxlY3Rvcih0aGlzLl9fcm9vdCA9PT0gZG9jdW1lbnQuYm9keT8gJ2JvZHknOiAnYm9keSA+IConKTsgICAgXG4gIHRoaXMuX19yb290LmlubmVySFRNTCA9IGVsLmlubmVySFRNTDtcblxuICBmb3IgKGxldCBpID0gZWwuYXR0cmlidXRlcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIGxldCBhdHRyID0gZWwuYXR0cmlidXRlc1tpXTtcbiAgICB0aGlzLl9fcm9vdC5zZXRBdHRyaWJ1dGUoYXR0ci5uYW1lLCBhdHRyLnZhbHVlKTtcbiAgfSAgXG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgU1NSIGNhY2hlXG4gKiBcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmpcbiAqL1xuQWtpbGkuaW5pdFNlcnZlclNpZGVSZXF1ZXN0Q2FjaGUgPSBmdW5jdGlvbiAob2JqKSB7XG4gIGNvbnN0IGluaXQgPSAoaW5zdGFuY2UsIG9iaikgPT4ge1xuICAgIGZvcihsZXQga2V5IGluIG9iaikge1xuICAgICAgaW5zdGFuY2UuX19jYWNoZVtrZXldID0gb2JqW2tleV07XG4gICAgfVxuICB9XG4gIFxuICBmb3IgKGxldCBrZXkgaW4gb2JqKSB7XG4gICAgbGV0IGluc3RhbmNlID0ga2V5ID09PSAnX19tYWluJz8gcmVxdWVzdDogcmVxdWVzdC5fX2luc3RhbmNlc1trZXldO1xuICAgIGluaXQoaW5zdGFuY2UsIG9ialtrZXldKTtcbiAgfVxufVxuXG4vKipcbiAqIFByZXBhcmUgdGhlIFNTUiBodG1sXG4gKi9cbkFraWxpLnByZXBhcmVTZXJ2ZXJTaWRlSHRtbCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuX19yb290Lm91dGVySFRNTDtcbn1cblxuLyoqXG4gKiBQcmVwYXJlIHRoZSBTU1IgY2FjaGVcbiAqL1xuQWtpbGkucHJlcGFyZVNlcnZlclNpZGVSZXF1ZXN0Q2FjaGUgPSBmdW5jdGlvbiAoKSB7XG4gIGxldCBjYWNoZSA9IHsgX19tYWluOiByZXF1ZXN0Ll9fY2FjaGUgfTtcblxuICBmb3IobGV0IGtleSBpbiByZXF1ZXN0Ll9faW5zdGFuY2VzKSB7XG4gICAgY2FjaGVba2V5XSA9IHJlcXVlc3QuX19pbnN0YW5jZXNba2V5XS5fX2NhY2hlO1xuICB9XG5cbiAgcmV0dXJuIGNhY2hlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBBa2lsaTtcbndpbmRvdy5Ba2lsaSA9IEFraWxpO1xuQWtpbGkuZGVmaW5lKCk7XG5Ba2lsaS5oYW5kbGVFcnJvcnMoKTtcbkFraWxpLmlzb2xhdGVHbG9iYWxzKCk7IiwiaW1wb3J0IEFraWxpIGZyb20gJy4vYWtpbGkuanMnO1xuaW1wb3J0IFNjb3BlIGZyb20gJy4vc2NvcGUuanMnO1xuaW1wb3J0IHJlcXVlc3QgZnJvbSAnLi9zZXJ2aWNlcy9yZXF1ZXN0LmpzJztcbmltcG9ydCBzdG9yZSBmcm9tICcuL3NlcnZpY2VzL3N0b3JlLmpzJztcbmltcG9ydCBnbG9iYWxzIGZyb20gJy4vZ2xvYmFscy5qcyc7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi91dGlscy5qcyc7XG5cbmV4cG9ydCBjb25zdCBldmFsdWF0aW9uUmVnZXggPSAvXFwkeygoKD8hXFwkeykuKSopfS87XG5leHBvcnQgY29uc3QgZXZhbHVhdGlvblJlZ2V4R2xvYmFsID0gbmV3IFJlZ0V4cChldmFsdWF0aW9uUmVnZXguc291cmNlLCBcImdcIik7XG5leHBvcnQgY29uc3Qgc3lzdGVtQXR0cmlidXRlcyA9IFsnY29tcG9uZW50JywgJ3Njb3BlJywgJ25vLXNzciddO1xuXG4vKipcbiAqIEJhc2UgY2xhc3MgZnJvbSB3aGljaCBhbGwgY29tcG9uZW50cyBhcmUgaW5oZXJpdGVkXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBtYXRjaGVzID0gJyc7XG4gIHN0YXRpYyBib29sZWFuQXR0cmlidXRlcyA9IFtdO1xuICBzdGF0aWMgZXZlbnRzID0gW107XG4gIHN0YXRpYyBjb250cm9sQXR0cmlidXRlcyA9IGZhbHNlO1xuICBzdGF0aWMgdHJhbnNwYXJlbnQgPSBmYWxzZTtcbiAgc3RhdGljIHRlbXBsYXRlID0gJyc7XG4gIHN0YXRpYyB0ZW1wbGF0ZVVybCA9ICcnO1xuICBzdGF0aWMgc2NvcGUgPSBudWxsOyAgXG5cbiAgLyoqXG4gICAqIERlZmluZSB0aGUgY29tcG9uZW50XG4gICAqL1xuICBzdGF0aWMgZGVmaW5lKCkge1xuICAgIEFraWxpLmNvbXBvbmVudCgnY29tcG9uZW50JywgQ29tcG9uZW50KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQYXJzZSB0aGUgZXhwcmVzc2lvblxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gY29udGV4dFxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXhwcmVzc2lvblxuICAgKiBAcGFyYW0ge29iamVjdH0gW3ZhcnNdXG4gICAqL1xuICBzdGF0aWMgcGFyc2UoY29udGV4dCwgZXhwcmVzc2lvbiwgdmFyaWFibGVzID0ge30pIHtcbiAgICBjb25zdCBrZXlzID0gW107XG4gICAgY29uc3QgdmFycyA9IFtdO1xuICAgIGNvbnN0IGV4cHMgPSB1dGlscy5zcGxpdChleHByZXNzaW9uLCAnOycsIFsnXCInLCBcIidcIiwgJ2AnXSk7ICBcbiAgICBleHBzW2V4cHMubGVuZ3RoIC0gMV0gPSBgcmV0dXJuICR7ZXhwc1tleHBzLmxlbmd0aCAtIDFdfWA7XG5cbiAgICBmb3IgKGxldCBrZXkgaW4gdmFyaWFibGVzKSB7XG4gICAgICBrZXlzLnB1c2goa2V5KTtcbiAgICAgIHZhcnMucHVzaCh2YXJpYWJsZXNba2V5XSk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBuZXcgRnVuY3Rpb24oLi4ua2V5cywgYCR7ZXhwcy5qb2luKCc7ICcpfWApLmFwcGx5KGNvbnRleHQsIHZhcnMpO1xuICB9XG5cbiAgLyoqIFxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsIFxuICAgKiBAcGFyYW0ge29iamVjdH0gW3Njb3BlXSBcbiAgICovXG4gIGNvbnN0cnVjdG9yKGVsLCBzY29wZSA9IHt9KSB7XG4gICAgaWYgKCEoZWwgaW5zdGFuY2VvZiBFbGVtZW50KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBZb3UgbXVzdCBwYXNzIGFuIGh0bWwgZWxlbWVudCB0byB0aGUgY29tcG9uZW50IGNvbnN0cnVjdG9yYCk7XG4gICAgfVxuXG4gICAgdGhpcy5fX2lzTW91bnRlZCA9IGZhbHNlO1xuICAgIHRoaXMuX19pc0NvbXBpbGVkID0gZmFsc2U7XG4gICAgdGhpcy5fX2lzUmVzb2x2ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9faXNSZW1vdmVkID0gZmFsc2U7XG4gICAgdGhpcy5fX2NhbmNlbGxlZCA9IGZhbHNlO1xuICAgIHRoaXMuX19wcmV2ZW50ID0gZmFsc2U7XG4gICAgdGhpcy5fX2JpbmRpbmdzID0ge307XG4gICAgdGhpcy5fX2V2YWx1YXRpbmdFdmVudCA9IG51bGw7XG4gICAgdGhpcy5fX3JlY29tcGlsaW5nID0gbnVsbDtcbiAgICB0aGlzLl9fY29tcGlsaW5nID0gbnVsbDtcbiAgICB0aGlzLl9fZGlzYWJsZVByb3h5ID0ge307XG4gICAgdGhpcy5fX2Rpc2FibGVTdG9yZUtleXMgPSB7fTtcbiAgICB0aGlzLl9fZGlzYWJsZUF0dHJLZXlzID0ge307XG4gICAgdGhpcy5fX2NoaWxkcmVuID0gW107XG4gICAgdGhpcy5fX3BhcmVudCA9IG51bGw7XG4gICAgdGhpcy5fX3BhcmVudHMgPSBbXTtcbiAgICB0aGlzLl9fY29udGVudCA9ICcnO1xuICAgIHRoaXMuX19hdHRycyA9IHt9O1xuICAgIHRoaXMuX19hdHRyTGlua3MgPSB7fTtcbiAgICB0aGlzLl9fc3RvcmVMaW5rcyA9IHt9O1xuICAgIHRoaXMuX19hdHRyaWJ1dGVPZiA9IG51bGw7XG4gICAgdGhpcy5fX2V2YWx1YXRpb25Db21wb25lbnQgPSB0aGlzO1xuICAgIHRoaXMuc2NvcGUgPSBzY29wZTtcbiAgICB0aGlzLmVsID0gZWw7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIHRoZSBjb21waWxhdGlvbiBvcHRpb25zIFxuICAgKiBcbiAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2NyZWF0ZUNvbXBpbGF0aW9uT3B0aW9ucyhvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4geyBcbiAgICAgIGNoZWNrQ2hhbmdlczogZmFsc2UsIFxuICAgICAgc2V0RXZlbnRzOiB0cnVlLFxuICAgICAgc2V0UGFyZW50czogdHJ1ZSxcbiAgICAgIHNldEJvb2xlYW5BdHRyaWJ1dGVzOiB0cnVlLFxuICAgICAgZGVmaW5lQXR0cmlidXRlczogdHJ1ZSxcbiAgICAgIC4uLm9wdGlvbnMgXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgdGhlIHJlY29tcGlsYXRpb24gb3B0aW9ucyBcbiAgICogXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19jcmVhdGVSZWNvbXBpbGF0aW9uT3B0aW9ucyhvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4geyBcbiAgICAgIC4uLnRoaXMuX19jcmVhdGVDb21waWxhdGlvbk9wdGlvbnMoKSxcbiAgICAgIHNldEV2ZW50czogZmFsc2UsXG4gICAgICBzZXRQYXJlbnRzOiBmYWxzZSxcbiAgICAgIGRlZmluZUF0dHJpYnV0ZXM6IGZhbHNlLFxuICAgICAgLi4ub3B0aW9ucyBcbiAgICB9O1xuICB9XG4gXG4gIC8qKlxuICAgKiBSZWNvbXBpbGUgdGhlIGNvbXBvbmVudFxuICAgKiBcbiAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX3JlY29tcGlsZShvcHRpb25zID0ge30pIHtcbiAgICB0aGlzLl9faXNNb3VudGVkID0gZmFsc2U7XG4gICAgdGhpcy5fX3JlY29tcGlsaW5nID0gdHJ1ZTsgXG4gICAgdGhpcy5fX2V2YWx1YXRpb25Db21wb25lbnQuX19kaXNhYmxlUHJveHkgPSB7fTsgIFxuICAgIHRoaXMuX19jb21waWxpbmcgPSB0aGlzLl9fY3JlYXRlUmVjb21waWxhdGlvbk9wdGlvbnMob3B0aW9ucyk7ICAgIFxuICAgIHRoaXMuX19jb21waWxpbmcuc2V0RXZlbnRzICYmIHRoaXMuX19zZXRFdmVudHMoKTtcbiAgICB0aGlzLl9fY29tcGlsaW5nLnNldFBhcmVudHMgJiYgdGhpcy5fX3NldFBhcmVudHMoKTtcbiAgICB0aGlzLl9fY29tcGlsaW5nLnNldEJvb2xlYW5BdHRyaWJ1dGVzICYmIHRoaXMuX19zZXRCb29sZWFuQXR0cmlidXRlcygpO1xuICAgIHRoaXMuX19jb21waWxpbmcuZGVmaW5lQXR0cmlidXRlcyAmJiB0aGlzLl9fZGVmaW5lQXR0cmlidXRlcygpO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSB0aGUgY29tcG9uZW50XG4gICAqXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fY3JlYXRlKCkge1xuICAgIHRoaXMuX19jb21waWxpbmcgPSB0aGlzLl9fY3JlYXRlQ29tcGlsYXRpb25PcHRpb25zKCk7IFxuICAgIHRoaXMuX19pbml0aWFsaXplKCk7XG4gICAgdGhpcy5fX3NldEV2ZW50cygpO1xuICAgIHRoaXMuX19zZXRQYXJlbnRzKCk7XG4gICAgdGhpcy5fX3NldEJvb2xlYW5BdHRyaWJ1dGVzKCk7XG4gICAgdGhpcy5fX2RlZmluZUF0dHJpYnV0ZXMoKTsgXG4gICAgQWtpbGkuaXNvbGF0ZSgoKSA9PiB0aGlzLmNyZWF0ZWQodGhpcy5hdHRycykpOyAgXG4gIH1cblxuICAvKipcbiAgICogQ29tcGlsZSB0aGUgbm9kZVxuICAgKlxuICAgKiBAcHJvdGVjdGVkXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxuICAgKi9cbiAgX19jb21waWxlKCkge1xuICAgIGxldCBjb250cm9sID0gdGhpcy5fX2NvbnRyb2xBdHRyaWJ1dGVzIHx8ICF0aGlzLl9fZXZhbHVhdGlvblBhcmVudDtcbiAgICBsZXQgcCA9IFByb21pc2UucmVzb2x2ZSgpO1xuICAgIHRoaXMuX19hdHRyaWJ1dGVPZiA9IGNvbnRyb2w/IHRoaXM6IHRoaXMuX19ldmFsdWF0aW9uUGFyZW50Ll9fYWtpbGk7XG4gICAgXG4gICAgaWYgKCF0aGlzLl9fcmVjb21waWxpbmcgfHwgdGhpcy5fX2NvbXBpbGluZy5uZXdQYXJlbnQgfHwgdGhpcy5fX2NvbnRyb2xBdHRyaWJ1dGVzKSB7XG4gICAgICB0aGlzLl9faW50ZXJwb2xhdGVBdHRyaWJ1dGVzKHRoaXMuZWwsIHRoaXMuX19hdHRyaWJ1dGVPZik7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGludGVycG9sYXRlID0gKGNoaWxkcmVuLCBwYXJlbnQpID0+IHtcbiAgICAgIGZvciAobGV0IGkgPSAwLCBsID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGxldCBjaGlsZCA9IGNoaWxkcmVuW2ldO1xuXG4gICAgICAgIGlmIChjaGlsZC5ub2RlVHlwZSA9PSAzICYmIHRoaXMuX19pbml0aWFsaXplTm9kZShjaGlsZCwgcGFyZW50KSkgeyAgICAgICAgICBcbiAgICAgICAgICB0aGlzLl9fZXZhbHVhdGVOb2RlKGNoaWxkLCB0aGlzLl9fY29tcGlsaW5nPyB0aGlzLl9fY29tcGlsaW5nLmNoZWNrQ2hhbmdlczogZmFsc2UpOyAgXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY2hpbGQubm9kZVR5cGUgPT0gMSAmJiAhY2hpbGQuX19ha2lsaSkge1xuICAgICAgICAgIHRoaXMuX19pbnRlcnBvbGF0ZUF0dHJpYnV0ZXMoY2hpbGQpO1xuICAgICAgICAgIGludGVycG9sYXRlKGNoaWxkLmNoaWxkTm9kZXMsIGNoaWxkKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07ICAgIFxuXG4gICAgaW50ZXJwb2xhdGUodGhpcy5lbC5jaGlsZE5vZGVzLCB0aGlzLmVsKTtcbiAgICB0aGlzLl9faXNNb3VudGVkID0gdHJ1ZTtcbiAgICBsZXQgcmVzO1xuXG4gICAgaWYgKCF0aGlzLl9fcmVjb21waWxpbmcpIHtcbiAgICAgIHJlcyA9IEFraWxpLmlzb2xhdGUoKCkgPT4ge1xuICAgICAgICB0aGlzLmF0dHJzLm9uQ29tcGlsZWQgJiYgdGhpcy5hdHRycy5vbkNvbXBpbGVkLnRyaWdnZXIodW5kZWZpbmVkLCB7IGJ1YmJsZXM6IGZhbHNlIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlZCgpO1xuICAgICAgfSk7XG5cbiAgICAgIGlmICh0aGlzLmNvbnN0cnVjdG9yLnRlbXBsYXRlVXJsKSB7XG4gICAgICAgIHAgPSByZXF1ZXN0LmdldCh0aGlzLmNvbnN0cnVjdG9yLnRlbXBsYXRlVXJsLCB7IGNhY2hlOiB0aGlzLmNvbnN0cnVjdG9yLnRlbXBsYXRlQ2FjaGUgfSkudGhlbihyZXMgPT4ge1xuICAgICAgICAgIHRoaXMuZWwuaW5uZXJIVE1MID0gdGhpcy5fX2NvbnRlbnQ7XG4gICAgICAgICAgQWtpbGkuc2V0VGVtcGxhdGUodGhpcy5lbCwgcmVzLmRhdGEpO1xuICAgICAgICAgIGRlbGV0ZSB0aGlzLl9fY29udGVudDsgICAgICAgICAgXG4gICAgICAgICAgcmV0dXJuIEFraWxpLmNvbXBpbGUodGhpcy5lbCwgeyByZWNvbXBpbGU6IHRydWUgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHJlcyA9IEFraWxpLmlzb2xhdGUoKCkgPT4ge1xuICAgICAgICB0aGlzLmF0dHJzLm9uUmVjb21waWxlZCAmJiB0aGlzLmF0dHJzLm9uUmVjb21waWxlZC50cmlnZ2VyKHVuZGVmaW5lZCwgeyBidWJibGVzOiBmYWxzZSB9KTtcbiAgICAgICAgdGhpcy5yZWNvbXBpbGVkKCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgdGhpcy5fX3JlY29tcGlsaW5nID0gbnVsbDtcbiAgICB0aGlzLl9fY29tcGlsaW5nID0gbnVsbDtcblxuICAgIHJldHVybiBwLnRoZW4oKCkgPT4ge1xuICAgICAgdGhpcy5fX2lzQ29tcGlsZWQgPSB0cnVlO1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXNvbHZlIHRoZSBjb21wb25lbnRcbiAgICpcbiAgICogQHByb3RlY3RlZFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAgICovXG4gIF9fcmVzb2x2ZSgpIHtcbiAgICBpZiAodGhpcy5fX2lzUmVzb2x2ZWQpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG4gICAgXG4gICAgdGhpcy5hdHRycy5vblJlc29sdmVkICYmIHRoaXMuYXR0cnMub25SZXNvbHZlZC50cmlnZ2VyKHVuZGVmaW5lZCwgeyBidWJibGVzOiBmYWxzZSB9KTtcblxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoQWtpbGkuaXNvbGF0ZSgoKSA9PiB0aGlzLnJlc29sdmVkKCkpKS50aGVuKHJlcyA9PiB7XG4gICAgICB0aGlzLl9faXNSZXNvbHZlZCA9IHRydWU7XG4gICAgICByZXR1cm4gcmVzO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEluaXRpYWxpemUgdGhlIGNvbXBvbmVudFxuICAgKlxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2luaXRpYWxpemUoKSB7ICAgIFxuICAgIGxldCBwYXJlbnQgPSBBa2lsaS5nZXRBa2lsaVBhcmVudHModGhpcy5lbCwgZmFsc2UpOyAgICAgXG4gICAgbGV0IFNjb3BlID0gdGhpcy5jb25zdHJ1Y3Rvci5zY29wZSB8fCBBa2lsaS5TY29wZTtcbiAgICBsZXQgc2NvcGU7XG4gICAgbGV0IGlzUm9vdCA9IEFraWxpLl9fcm9vdCA9PT0gdGhpcy5lbDtcbiAgICB0aGlzLmVsLl9fYWtpbGkgPSB0aGlzO1xuXG4gICAgaWYgKHBhcmVudCkge1xuICAgICAgc2NvcGUgPSBuZXcgU2NvcGUodGhpcy5lbC5nZXRBdHRyaWJ1dGUoJ3Njb3BlJykgfHwgQWtpbGkuY3JlYXRlU2NvcGVOYW1lKCksIHRoaXMuZWwsIHRoaXMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHNjb3BlID0gbmV3IFNjb3BlKGlzUm9vdD8gJ3Jvb3QnOiBBa2lsaS5jcmVhdGVTY29wZU5hbWUoKSwgdGhpcy5lbCwgdGhpcyk7XG4gICAgICBpc1Jvb3QgJiYgKEFraWxpLnJvb3QgPSB0aGlzKTtcbiAgICB9XG5cbiAgICBsZXQgX19zY29wZSA9IHNjb3BlO1xuICAgIGxldCBfc2NvcGUgPSBPYmplY3QuYXNzaWduKHNjb3BlLCB0aGlzLnNjb3BlKTtcbiAgICBsZXQgY29udHJvbEF0dHJpYnV0ZXMgPSB0aGlzLmNvbnN0cnVjdG9yLmNvbnRyb2xBdHRyaWJ1dGVzO1xuICAgIGxldCBldmVudHMgPSB0aGlzLmNvbnN0cnVjdG9yLmV2ZW50cztcblxuICAgIGlmICh0aGlzLmNvbnN0cnVjdG9yLnRlbXBsYXRlKSB7XG4gICAgICBBa2lsaS5zZXRUZW1wbGF0ZSh0aGlzLmVsLCB0aGlzLmNvbnN0cnVjdG9yLnRlbXBsYXRlKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5jb25zdHJ1Y3Rvci50ZW1wbGF0ZVVybCkge1xuICAgICAgdGhpcy5fX2NvbnRlbnQgPSB0aGlzLmVsLmlubmVySFRNTDtcbiAgICAgIHRoaXMuZWwuaW5uZXJIVE1MID0gJyc7XG4gICAgfVxuXG4gICAgdGhpcy5fX3Njb3BlID0gX19zY29wZTtcbiAgICB0aGlzLl9fZXZlbnRzID0gZXZlbnRzO1xuICAgIHRoaXMuX19jb250cm9sQXR0cmlidXRlcyA9IGNvbnRyb2xBdHRyaWJ1dGVzO1xuICAgIEFraWxpLmFkZFNjb3BlKHNjb3BlKTsgICAgXG4gICAgdGhpcy5zY29wZSA9IHRoaXMuX19uZXN0ZWRPYnNlcnZlKF9zY29wZSwgW10pO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgYm9vbGVhbiBhdHRyaWJ1dGVzXG4gICAqXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fc2V0Qm9vbGVhbkF0dHJpYnV0ZXMoKSB7XG4gICAgdGhpcy5ib29sZWFuQXR0cmlidXRlcyA9IFtdLmNvbmNhdChBa2lsaS5odG1sQm9vbGVhbkF0dHJpYnV0ZXMsIHRoaXMuY29uc3RydWN0b3IuYm9vbGVhbkF0dHJpYnV0ZXMpO1xuXG4gICAgY29uc3Qgc2V0QXR0ciA9IGVsID0+IHtcbiAgICAgIGZvciAobGV0IGkgPSAwLCBhdHRycyA9IGVsLmF0dHJpYnV0ZXMsIGwgPSBhdHRycy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgbGV0IG5vZGUgPSBhdHRyc1tpXTtcblxuICAgICAgICBpZiAodGhpcy5ib29sZWFuQXR0cmlidXRlcy5pbmRleE9mKG5vZGUubm9kZU5hbWUpICE9IC0xKSB7XG4gICAgICAgICAgaWYgKGVsLmhhc0F0dHJpYnV0ZShgYm9vbGVhbi0ke25vZGUubm9kZU5hbWV9YCkpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGVsLnNldEF0dHJpYnV0ZShgYm9vbGVhbi0ke25vZGUubm9kZU5hbWV9YCwgZWwuZ2V0QXR0cmlidXRlKG5vZGUubm9kZU5hbWUpIHx8IG5vZGUubm9kZU5hbWUpO1xuICAgICAgICAgIGVsLnJlbW92ZUF0dHJpYnV0ZShub2RlLm5vZGVOYW1lKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmb3IgKGxldCBpID0gMCwgbCA9IGVsLmNoaWxkcmVuLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICBsZXQgY2hpbGQgPSBlbC5jaGlsZHJlbltpXTtcblxuICAgICAgICBpZiAoIWNoaWxkLl9fYWtpbGkpIHtcbiAgICAgICAgICBzZXRBdHRyKGNoaWxkKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBzZXRBdHRyKHRoaXMuZWwpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgZXZlbnRzXG4gICAqXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fc2V0RXZlbnRzKCkge1xuICAgIGZvciAobGV0IGkgPSAwLCBsID0gdGhpcy5fX2V2ZW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGxldCBldiA9IHRoaXMuX19ldmVudHNbaV07XG4gICAgICAhL15vbi0vaS50ZXN0KGV2KSAmJiAoZXYgPSAnb24tJyArIGV2KTtcblxuICAgICAgaWYgKCF0aGlzLmVsLmhhc0F0dHJpYnV0ZShldikpIHtcbiAgICAgICAgdGhpcy5lbC5zZXRBdHRyaWJ1dGUoZXYsICcnKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU2V0IHRoZSBjb21wb25lbnQgcGFyZW50c1xuICAgKlxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX3NldFBhcmVudHMoKSB7XG4gICAgbGV0IHBhcmVudHMgPSBBa2lsaS5nZXRBa2lsaVBhcmVudHModGhpcy5lbCk7XG5cbiAgICBpZiAoIXBhcmVudHMubGVuZ3RoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IG5ld1BhcmVudCA9IHRoaXMuX19wYXJlbnQgIT09IHBhcmVudHNbMF07XG4gICAgbGV0IGV2YWx1YXRpb25QYXJlbnQgPSBudWxsO1xuXG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBwYXJlbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgbGV0IHBhcmVudCA9IHBhcmVudHNbaV07XG5cbiAgICAgIGlmICghcGFyZW50Ll9fYWtpbGkuY29uc3RydWN0b3IudHJhbnNwYXJlbnQpIHtcbiAgICAgICAgZXZhbHVhdGlvblBhcmVudCA9IHBhcmVudDtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5fX2NvbXBpbGluZy5uZXdQYXJlbnQgPSBuZXdQYXJlbnQ7XG4gICAgbmV3UGFyZW50ICYmIHRoaXMuX19kZXRhY2goKTtcblxuICAgIGlmICh0aGlzLmNvbnN0cnVjdG9yLnRyYW5zcGFyZW50KSB7XG4gICAgICB0aGlzLl9fZXZhbHVhdGlvbkNvbXBvbmVudCA9IGV2YWx1YXRpb25QYXJlbnQuX19ha2lsaTtcbiAgICB9XG5cbiAgICB0aGlzLl9fZXZhbHVhdGlvblBhcmVudCA9IGV2YWx1YXRpb25QYXJlbnQ7XG4gICAgdGhpcy5fX3BhcmVudCA9IHBhcmVudHNbMF07XG4gICAgdGhpcy5fX3BhcmVudHMgPSBwYXJlbnRzO1xuICAgIHRoaXMuc2NvcGUuX19wYXJlbnQgPSB0aGlzLl9fZXZhbHVhdGlvblBhcmVudC5fX2FraWxpLnNjb3BlO1xuICAgICF0aGlzLl9fcmVjb21waWxpbmcgJiYgdGhpcy5fX3BhcmVudC5fX2FraWxpLl9fYWRkQ2hpbGQodGhpcy5lbCk7XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMuc2NvcGUsIHRoaXMuX19wYXJlbnQuX19ha2lsaS5fX3Njb3BlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgdGhlIGNoaWxkIGVsZW1lbnQgdG8gdGhlIGxpc3RcbiAgICpcbiAgICogQHBhcmFtIHtFbGVtZW50fSBlbFxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2FkZENoaWxkKGVsKSB7XG4gICAgdGhpcy5fX2NoaWxkcmVuLnB1c2goZWwpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNwbGljZSB0aGUgY2hpbGQgZnJvbSB0aGUgbGlzdFxuICAgKlxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fc3BsaWNlQ2hpbGQoZWwpIHtcbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IHRoaXMuX19jaGlsZHJlbi5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGxldCBjaGlsZCA9IHRoaXMuX19jaGlsZHJlbltpXTtcblxuICAgICAgaWYgKGNoaWxkID09PSBlbCkge1xuICAgICAgICB0aGlzLl9fY2hpbGRyZW4uc3BsaWNlKGksIDEpO1xuICAgICAgICBpLS07XG4gICAgICAgIGwtLTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBwYXJzZWQgZXhwcmVzc2lvblxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXhwcmVzc2lvblxuICAgKiBAcmV0dXJucyB7Kn1cbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19nZXRQYXJzZWRFeHByZXNzaW9uKGV4cHJlc3Npb24pIHtcbiAgICByZXR1cm4gZXhwcmVzc2lvbjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayB0aGUgbmVlZCBvZiB0aGUgYXZhbHVhdGlvblxuICAgKlxuICAgKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fY2hlY2tFdmFsdWF0aW9uKG5vZGUpIHtcbiAgICBpZiAoIU9iamVjdC5rZXlzKG5vZGUuX19wcm9wZXJ0aWVzKS5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGZvciAobGV0IGsgaW4gbm9kZS5fX3Byb3BlcnRpZXMpIHtcbiAgICAgIGlmICghbm9kZS5fX3Byb3BlcnRpZXMuaGFzT3duUHJvcGVydHkoaykpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGxldCBwcm9wID0gbm9kZS5fX3Byb3BlcnRpZXNba107XG4gICAgICBsZXQgdmFsdWUgPSB1dGlscy5nZXRQcm9wZXJ0eUJ5S2V5cyhwcm9wLmtleXMsIHByb3AuY29tcG9uZW50Ll9fc2NvcGUpO1xuXG4gICAgICBpZiAoIW5vZGUuX19jb21wb25lbnQuX19jb21wYXJlTm9kZVByb3BlcnR5VmFsdWUocHJvcCwgdmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayB0aGUgbm9kZSBwcm9wZXJ0aWVzIGNoYW5nZVxuICAgKlxuICAgKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0ga2V5c1xuICAgKiBAcGFyYW0geyp9IHZhbHVlXG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2NoZWNrTm9kZVByb3BlcnR5Q2hhbmdlKG5vZGUsIGtleXMsIHZhbHVlKSB7XG4gICAgbGV0IHByb3AgPSB0aGlzLl9fZ2V0Tm9kZVByb3BlcnR5KG5vZGUsIGtleXMpO1xuICAgIFxuICAgIGlmICghcHJvcCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuICFub2RlLl9fY29tcG9uZW50Ll9fY29tcGFyZU5vZGVQcm9wZXJ0eVZhbHVlKHByb3AsIHZhbHVlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb21wYXJlIHRoZSBub2RlIHByb3BlcnR5IHZhbHVlXG4gICAqIFxuICAgKiBAcGFyYW0ge29iamVjdH0gcHJvcCBcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSBcbiAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXSBcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19jb21wYXJlTm9kZVByb3BlcnR5VmFsdWUocHJvcCwgdmFsdWUsIG9wdGlvbnMgPSB7fSkgeyAgXG4gICAgcmV0dXJuIHV0aWxzLmNvbXBhcmUodXRpbHMuY3JlYXRlSGFzaCh2YWx1ZSksIHByb3AuaGFzaCwgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIGFuIGV4Y2VwdGlvbiBtZXNzYWdlXG4gICAqIFxuICAgKiBAcGFyYW0ge05vZGV9IG5vZGUgXG4gICAqIEBwYXJhbSB7RXJyb3J9IGVyciBcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19jcmVhdGVFeGNlcHRpb25NZXNzYWdlKG5vZGUsIGVycikge1xuICAgIGxldCB0YWdOYW1lID0gbm9kZS5fX2NvbXBvbmVudC5lbC50YWdOYW1lO1xuICAgIGxldCBhdHRyTmFtZSA9IG5vZGUuX19jb21wb25lbnQuZWwuZ2V0QXR0cmlidXRlKCdjb21wb25lbnQnKTtcbiAgICBsZXQgY29tcG9uZW50TmFtZSA9IChhdHRyTmFtZSB8fCB0YWdOYW1lKS50b0xvd2VyQ2FzZSgpO1xuICAgIGxldCBlbGVtZW50TmFtZSA9IG5vZGUuX19lbGVtZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKTtcbiAgICBsZXQgYXR0cmlidXRlTmFtZSA9IChub2RlIGluc3RhbmNlb2Ygd2luZG93LkF0dHIpPyBub2RlLm5hbWUudG9Mb3dlckNhc2UoKTogJyc7ICAgICAgICBcbiAgICBsZXQgbWVzc2FnZXMgPSBbIGVyci5tZXNzYWdlLCBub2RlLl9fZXhwcmVzc2lvbi50cmltKCkgXTtcbiAgICBhdHRyaWJ1dGVOYW1lICYmIG1lc3NhZ2VzLnB1c2goYFthdHRyaWJ1dGUgJHthdHRyaWJ1dGVOYW1lfV1gKTtcbiAgICBtZXNzYWdlcyA9IG1lc3NhZ2VzLmNvbmNhdChbYFtlbGVtZW50ICR7ZWxlbWVudE5hbWV9XWAsIGBbY29tcG9uZW50ICR7Y29tcG9uZW50TmFtZX1dYF0pO1xuICAgIHJldHVybiBgRXhwcmVzc2lvbiBlcnJvcjogYCArIG1lc3NhZ2VzLmpvaW4oJ1xcblxcdGF0ICcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEV2YWx1YXRlIHRoZSBub2RlIGV4cHJlc3Npb25cbiAgICpcbiAgICogQHBhcmFtIHtOb2RlfSBub2RlXG4gICAqIEByZXR1cm5zIHsqfVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2V2YWx1YXRlKG5vZGUpIHtcbiAgICBsZXQgY291bnRlciA9IDA7XG4gICAgbGV0IGF0dHJpYnV0ZVZhbHVlO1xuICAgIGxldCBleHByZXNzaW9uO1xuICAgIGNvbnN0IGV2YWxDb21wb25lbnQgPSBub2RlLl9fYXR0cmlidXRlT2YgfHwgbm9kZS5fX2NvbXBvbmVudDtcblxuICAgIGlmIChub2RlLl9fY29tcG9uZW50LnBhcmVudHMoY29tID0+IGNvbS5fX3ByZXZlbnQpLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIHsgcmVzOiBub2RlLl9fZXhwcmVzc2lvbiB9O1xuICAgIH1cblxuICAgIGlmICghKG5vZGUgaW5zdGFuY2VvZiB3aW5kb3cuQXR0cikgJiYgbm9kZS5fX2NvbXBvbmVudC5fX3ByZXZlbnQpIHtcbiAgICAgIHJldHVybiB7IHJlczogbm9kZS5fX2V4cHJlc3Npb24gfTtcbiAgICB9XG4gICAgXG4gICAgbGV0IHJlcyA9IG5vZGUuX19leHByZXNzaW9uLnJlcGxhY2UoZXZhbHVhdGlvblJlZ2V4R2xvYmFsLCAobSwgZCkgPT4geyAgICAgXG4gICAgICBjb3VudGVyKys7XG4gICAgICBsZXQgZXZhbHVhdGU7XG4gICAgICBsZXQgZXZhbHVhdGlvbiA9IFtdO1xuICAgICAgbGV0IGV4aXN0aW5nQmluZGluZ3MgPSB7fTtcbiAgICAgIGxldCBwYXJlbnRCaW5kaW5ncyA9IHt9O1xuICAgICAgbGV0IHBhcnNlVmFsdWUgPSBub2RlLl9fY29tcG9uZW50Ll9fZ2V0UGFyc2VkRXhwcmVzc2lvbihkKTtcbiAgICAgIEFraWxpLl9fZXZhbHVhdGlvbiA9IHsgbm9kZTogbm9kZSwgbGlzdDogW10sIGNvbXBvbmVudDogbm9kZS5fX2NvbXBvbmVudCB9O1xuICAgICAgXG4gICAgICB0cnkgeyAgICAgICAgXG4gICAgICAgIGV2YWx1YXRlID0gdGhpcy5jb25zdHJ1Y3Rvci5wYXJzZShldmFsQ29tcG9uZW50Ll9fZXZhbHVhdGlvbkNvbXBvbmVudC5zY29wZSwgcGFyc2VWYWx1ZSwgeyAuLi5nbG9iYWxzIH0pO1xuICAgICAgfVxuICAgICAgY2F0Y2ggKGVycikgeyAgICAgICAgXG4gICAgICAgIHRocm93IHRoaXMuX19jcmVhdGVFeGNlcHRpb25NZXNzYWdlKG5vZGUsIGVycik7XG4gICAgICB9XG5cbiAgICAgIGlmKEFraWxpLl9fZXZhbHVhdGlvbikge1xuICAgICAgICBldmFsdWF0aW9uID0gQWtpbGkuX19ldmFsdWF0aW9uLmxpc3Q7XG4gICAgICAgIEFraWxpLl9fZXZhbHVhdGlvbi5saXN0ID0gbnVsbDtcbiAgICAgICAgQWtpbGkuX19ldmFsdWF0aW9uID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgZm9yIChsZXQgaSA9IGV2YWx1YXRpb24ubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgbGV0IGRhdGEgPSBldmFsdWF0aW9uW2ldO1xuICAgICAgICBsZXQgaGFzaCA9IGRhdGEuY29tcG9uZW50Ll9fY3JlYXRlS2V5c0hhc2goZGF0YS5rZXlzKTtcbiAgICAgICAgbGV0IHBhcmVudHNIYXNoID0gZGF0YS5jb21wb25lbnQuX19jcmVhdGVLZXlzSGFzaChkYXRhLnBhcmVudHMpO1xuICAgICAgIFxuICAgICAgICBpZiAoZGF0YS5ub3RCaW5kaW5nKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZXhpc3RpbmdCaW5kaW5nc1toYXNoXSkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHBhcmVudFZhbHVlID0gdXRpbHMuZ2V0UHJvcGVydHlCeUtleXMoZGF0YS5wYXJlbnRzLCBkYXRhLmNvbXBvbmVudC5fX3Njb3BlKTsgICAgICAgIFxuXG4gICAgICAgIGlmIChwYXJlbnRWYWx1ZSAmJiB0eXBlb2YgcGFyZW50VmFsdWUgPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICBpZiAoQWtpbGkub3B0aW9ucy5kZWJ1ZyAmJiBwYXJlbnRCaW5kaW5nc1twYXJlbnRzSGFzaF0gPT0gNTApIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oW1xuICAgICAgICAgICAgICBgRm9yIGhpZ2hlciBwZXJmb3JtYW5jZSwgZG9uJ3QgbG9vcCBQcm94eSBhcnJheXMvb2JqZWN0cyBpbnNpZGUgZXhwcmVzc2lvbiBmdW5jdGlvbnMsIG9yIHVzZSBBa2lsaS51bmV2YWx1YXRlKCkgdG8gd3JhcCB5b3UgY29kZS5gLFxuICAgICAgICAgICAgICBgJHsgbm9kZS5fX2V4cHJlc3Npb24udHJpbSgpIH1gLFxuICAgICAgICAgICAgICBgc2NvcGUgcHJvcGVydHkgXCIkeyBkYXRhLnBhcmVudHMuam9pbignLicpIH1cImBcbiAgICAgICAgICAgIF0uam9pbignXFxuXFx0YXQgJykpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAhcGFyZW50QmluZGluZ3NbcGFyZW50c0hhc2hdPyBwYXJlbnRCaW5kaW5nc1twYXJlbnRzSGFzaF0gPSAxOiBwYXJlbnRCaW5kaW5nc1twYXJlbnRzSGFzaF0rKztcbiAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICBpZiAoXG4gICAgICAgICAgdXRpbHMuaXNTY29wZVByb3h5KHBhcmVudFZhbHVlKSAmJiBcbiAgICAgICAgICBkYXRhLmNvbXBvbmVudCAhPT0gZXZhbENvbXBvbmVudC5fX2V2YWx1YXRpb25Db21wb25lbnQgJiYgXG4gICAgICAgICAgZGF0YS5jb21wb25lbnQgPT09IGRhdGEucmVhbENvbXBvbmVudFxuICAgICAgICApIHtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfSAgXG5cbiAgICAgICAgZGF0YS5jb21wb25lbnQuX19iaW5kQW5kU2V0UHJvcGVydHkobm9kZSwgZGF0YS5rZXlzLCBkYXRhLmV2YWx1YXRlZCk7XG4gICAgICAgIGV4aXN0aW5nQmluZGluZ3NbaGFzaF0gPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobm9kZSBpbnN0YW5jZW9mIHdpbmRvdy5BdHRyKSB7XG4gICAgICAgIGV4cHJlc3Npb24gPSBtO1xuICAgICAgICBhdHRyaWJ1dGVWYWx1ZSA9IGV2YWx1YXRlO1xuICAgICAgICByZXR1cm4gdXRpbHMubWFrZUF0dHJpYnV0ZVZhbHVlKGV2YWx1YXRlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBldmFsdWF0ZSA9PSAnb2JqZWN0Jykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShldmFsdWF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2goZSkge1xuICAgICAgICAgIHJldHVybiBldmFsdWF0ZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZXZhbHVhdGU7XG4gICAgfSk7XG5cbiAgICByZXR1cm4geyByZXMsIGNvdW50ZXIsIGV4cHJlc3Npb24sIGF0dHJpYnV0ZVZhbHVlIH07XG4gIH1cblxuICAvKipcbiAgICogQmluZCB0aGUgbm9kZSBhbmQgc2V0IHRoZSBwcm9wZXJ0eVxuICAgKlxuICAgKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0ga2V5c1xuICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtldmFsdWF0ZWRdXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fYmluZEFuZFNldFByb3BlcnR5KG5vZGUsIGtleXMsIGV2YWx1YXRlZCkge1xuICAgIGxldCBiaW5kID0gdGhpcy5fX2dldEJvdW5kTm9kZShrZXlzLCBub2RlKTtcbiAgICBsZXQgdmFsdWUgPSB1dGlscy5nZXRQcm9wZXJ0eUJ5S2V5cyhrZXlzLCB0aGlzLl9fc2NvcGUpO1xuXG4gICAgaWYgKCFiaW5kKSB7XG4gICAgICB0aGlzLl9fYmluZChrZXlzLCB7IG5vZGUgfSk7XG4gICAgfSAgIFxuXG4gICAgdGhpcy5fX3NldE5vZGVQcm9wZXJ0eShub2RlLCBrZXlzLCB2YWx1ZSwgZXZhbHVhdGVkKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBOZXN0ZWQgZXZhbHVhdGlvbiBieSB0aGUga2V5c1xuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBrZXlzXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW3dpdGhvdXRQYXJlbnRzPWZhbHNlXSAtIGlmIHRydWUgZXZhbHVhdGlvbiB3aWxsIGJlIG9ubHkgZm9yIHRoZSBjdXJyZW50IGtleXNcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19ldmFsdWF0ZU5lc3RlZChrZXlzLCB3aXRob3V0UGFyZW50cyA9IGZhbHNlKSB7XG4gICAgbGV0IHNjb3BlID0gdGhpcy5fX3Njb3BlO1xuICAgIGxldCBwcm9wcyA9IFtdOyAgXG4gICAgXG4gICAgaWYgKCF3aXRob3V0UGFyZW50cykge1xuICAgICAgbGV0IGxhc3RQcm9wcyA9IFtdO1xuXG4gICAgICBmb3IgKGxldCBpID0gMCwgbCA9IGtleXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGxldCBrZXkgPSBrZXlzW2ldO1xuICAgICAgICBsZXQgdmFsdWU7XG5cbiAgICAgICAgbGFzdFByb3BzID0gWy4uLmxhc3RQcm9wcywga2V5XTtcbiAgICAgICAgdmFsdWUgPSB1dGlscy5nZXRQcm9wZXJ0eUJ5S2V5cyhsYXN0UHJvcHMsIHNjb3BlKTtcbiAgICAgICAgcHJvcHMucHVzaCh7IGtleXM6IGxhc3RQcm9wcywgdmFsdWU6IHZhbHVlfSk7XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgcHJvcHMucHVzaCh7IGtleXM6IGtleXMsIHZhbHVlOiB1dGlscy5nZXRQcm9wZXJ0eUJ5S2V5cyhrZXlzLCBzY29wZSl9KTtcbiAgICB9XG5cbiAgICBsZXQgcHJvcHNMZW5ndGggPSBwcm9wcy5sZW5ndGg7XG5cbiAgICBjb25zdCBlbEV2YWx1YXRlID0gZWxlbWVudCA9PiB7XG4gICAgICBjb25zdCBjb21wb25lbnQgPSBlbGVtZW50Ll9fYWtpbGk7ICAgICBcblxuICAgICAgZm9yIChsZXQgbSA9IDA7IG0gPCBwcm9wc0xlbmd0aDsgbSsrKSB7XG4gICAgICAgIGxldCBwcm9wID0gcHJvcHNbbV07XG4gICAgICAgIGxldCBkYXRhO1xuICAgICAgICBcbiAgICAgICAgaWYgKGNvbXBvbmVudCA9PT0gdGhpcykge1xuICAgICAgICAgIGxldCBiaW5kID0gY29tcG9uZW50Ll9fZ2V0QmluZChwcm9wLmtleXMpO1xuICAgICAgICAgIGRhdGEgPSBiaW5kPyAoYmluZC5fX2RhdGEgfHwgW10pOiBbXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBkYXRhID0gY29tcG9uZW50Ll9fZ2V0QWxsQmluZHMocHJvcC5rZXlzKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKCFkYXRhIHx8ICFkYXRhLmxlbmd0aCkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgICBcbiAgICAgICAgZm9yIChsZXQgayA9IDAsIGMgPSBkYXRhLmxlbmd0aDsgayA8IGM7IGsrKykge1xuICAgICAgICAgIGNvbnN0IGJpbmQgPSBkYXRhW2tdOyAgIFxuXG4gICAgICAgICAgaWYoIWJpbmQgfHwgIWJpbmQubm9kZSB8fCAhYmluZC5ub2RlLl9faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoY29tcG9uZW50Ll9fY2hlY2tOb2RlUHJvcGVydHlDaGFuZ2UoYmluZC5ub2RlLCBwcm9wLmtleXMsIHByb3AudmFsdWUpKSB7ICBcbiAgICAgICAgICAgIGNvbXBvbmVudC5fX2Rpc2FibGVLZXlzKHByb3Aua2V5cyk7ICAgICBcbiAgICAgICAgICAgIGNvbnN0IGNoZWNrUHJvcCA9IGNvbXBvbmVudC5fX2dldE5vZGVQcm9wZXJ0eShiaW5kLm5vZGUsIHByb3Aua2V5cyk7XG4gICAgICAgICAgICBjaGVja1Byb3AgJiYgY2hlY2tQcm9wLmV2YWx1YXRlZCAmJiBjb21wb25lbnQuc2NvcGUuX19zZXQocHJvcC5rZXlzLCBwcm9wLnZhbHVlLCB7IHNpbGVudDogdHJ1ZSB9KTsgXG4gICAgICAgICAgICBjb21wb25lbnQuX19ldmFsdWF0ZU5vZGUoYmluZC5ub2RlLCBmYWxzZSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGZvciAobGV0IF9rIGluIGJpbmQubm9kZS5fX3Byb3BlcnRpZXMpIHtcbiAgICAgICAgICAgICAgaWYgKCFiaW5kLm5vZGUuX19wcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KF9rKSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBsZXQgX3Byb3AgPSBiaW5kLm5vZGUuX19wcm9wZXJ0aWVzW19rXTtcbiAgICAgICAgICAgICAgbGV0IHZhbHVlID0gdXRpbHMuZ2V0UHJvcGVydHlCeUtleXMoX3Byb3Aua2V5cywgX3Byb3AuY29tcG9uZW50Ll9fc2NvcGUpO1xuICAgICAgICAgICAgICBfcHJvcC5jb21wb25lbnQuX19zZXROb2RlUHJvcGVydHkoYmluZC5ub2RlLCBfcHJvcC5rZXlzLCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbXBvbmVudC5fX2VuYWJsZUtleXMocHJvcC5rZXlzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbXBvbmVudDtcbiAgICB9O1xuXG4gICAgY29uc3QgZXZhbHVhdGUgPSBlbGVtZW50cyA9PiB7XG4gICAgICBmb3IgKGxldCBpID0gMCwgbCA9IGVsZW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICBsZXQgY29tcG9uZW50ID0gZWxFdmFsdWF0ZShlbGVtZW50c1tpXSk7XG4gICAgICAgIGV2YWx1YXRlKGNvbXBvbmVudC5fX2NoaWxkcmVuKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZWxFdmFsdWF0ZSh0aGlzLmVsKTtcbiAgICBldmFsdWF0ZSh0aGlzLl9fY2hpbGRyZW4pO1xuICB9XG5cbiAgIC8qKlxuICAgKiBFdmFsdWF0ZSB0aGUgdmFsdWUgYnkgdGhlIGtleXNcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0ga2V5c1xuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2V2YWx1YXRlQnlLZXlzIChrZXlzKSB7ICBcbiAgICBjb25zdCBkYXRhID0gdGhpcy5fX2dldEJpbmQoa2V5cyk7XG4gICAgXG4gICAgY29uc3QgZXZhbHVhdGUgPSAodmFsLCBrZXlzKSA9PiB7ICAgXG4gICAgICB0aGlzLl9fZXZhbHVhdGVOZXN0ZWQoa2V5cywgdHJ1ZSk7XG5cbiAgICAgIGlmKCF2YWwpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGxldCBrIGluIHZhbCkge1xuICAgICAgICBpZighdmFsLmhhc093blByb3BlcnR5KGspIHx8IHRoaXMuX19pc1N5c3RlbUJpbmRpbmdLZXkoaykpIHtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGV2YWx1YXRlKHZhbFtrXSwga2V5cy5jb25jYXQoW2tdKSk7ICAgICAgICBcbiAgICAgIH0gICAgICBcbiAgICB9XG4gICAgXG4gICAgZXZhbHVhdGUoZGF0YSwga2V5cyk7XG4gIH1cblxuICAvKipcbiAgICogRXZhbHVhdGUgdGhlIGV2ZW50IGV4cHJlc3Npb25cbiAgICpcbiAgICogQHBhcmFtIHtOb2RlfSBub2RlXG4gICAqIEBwYXJhbSB7RWxlbWVudH0gZWxcbiAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2V2YWx1YXRlRXZlbnQobm9kZSwgZWwsIGUpIHtcbiAgICBsZXQgZXhwcmVzc2lvbiA9IGV2YWx1YXRpb25SZWdleC5leGVjKG5vZGUuX19leHByZXNzaW9uKTtcbiAgICBsZXQgZXZhbHVhdGU7XG5cbiAgICBpZiAoIWV4cHJlc3Npb24pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9fZXZhbHVhdGluZ0V2ZW50ID0ge1xuICAgICAgZWw6IGVsLFxuICAgICAgY29tcG9uZW50OiB0aGlzLFxuICAgICAgZXZlbnQ6IGUsXG4gICAgICBub2RlXG4gICAgfTtcblxuICAgIHRoaXMuX19kaXNhYmxlUHJveHkgPSB7fTtcblxuICAgIHRyeSB7XG4gICAgICBldmFsdWF0ZSA9IHRoaXMuY29uc3RydWN0b3IucGFyc2UodGhpcy5fX2V2YWx1YXRpb25Db21wb25lbnQuc2NvcGUsIGV4cHJlc3Npb25bMV0sIHsgLi4uZ2xvYmFscywgIGV2ZW50OiBlIH0pO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7ICAgICAgICBcbiAgICAgIHRocm93IHRoaXMuX19jcmVhdGVFeGNlcHRpb25NZXNzYWdlKG5vZGUsIGVycik7XG4gICAgfVxuICAgIFxuICAgIHRoaXMuX19ldmFsdWF0aW5nRXZlbnQgPSBudWxsO1xuICAgIHJldHVybiBldmFsdWF0ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFdmFsdWF0ZSB0aGUgbm9kZSBleHByZXNzaW9uIHdpdGggY2hlY2tcbiAgICpcbiAgICogQHBhcmFtIHtOb2RlfSBub2RlXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2NoZWNrXVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2V2YWx1YXRlTm9kZShub2RlLCBjaGVjayA9IHRydWUpIHtcbiAgICBjb25zdCBrZXkgPSBub2RlIGluc3RhbmNlb2Ygd2luZG93LkF0dHI/ICd2YWx1ZSc6ICdub2RlVmFsdWUnOyAgXG5cbiAgICBpZiAoY2hlY2s/IHRoaXMuX19jaGVja0V2YWx1YXRpb24obm9kZSk6IHRydWUpIHsgXG4gICAgICBjb25zdCB7IHJlcywgYXR0cmlidXRlVmFsdWUsIGV4cHJlc3Npb24sIGNvdW50ZXIgfSA9IHRoaXMuX19ldmFsdWF0ZShub2RlKTsgIFxuICAgICAgbm9kZVtrZXldICE9IHJlcyAmJiAobm9kZVtrZXldID0gcmVzKTtcblxuICAgICAgaWYgKG5vZGUgaW5zdGFuY2VvZiB3aW5kb3cuQXR0cikge1xuICAgICAgICBsZXQgdmFsdWUgPSByZXM7XG4gICAgICAgIGxldCBpc0Jvb2xlYW5BdHRyaWJ1dGUgPSBmYWxzZTtcbiAgXG4gICAgICAgIGlmIChjb3VudGVyID09IDEgJiYgZXhwcmVzc2lvbiAmJiBub2RlLl9fZXhwcmVzc2lvbiA9PSBleHByZXNzaW9uKSB7XG4gICAgICAgICAgdmFsdWUgPSBhdHRyaWJ1dGVWYWx1ZTtcbiAgICAgICAgfVxuICBcbiAgICAgICAgY29uc3QgY2xlYXJBdHRyaWJ1dGUgPSBub2RlLm5vZGVOYW1lLnJlcGxhY2UoL15ib29sZWFuLSguKykvaSwgJyQxJyk7XG4gICAgICAgIGNvbnN0IGNhbWVsQXR0cmlidXRlID0gdXRpbHMudG9DYW1lbENhc2UoY2xlYXJBdHRyaWJ1dGUpO1xuICBcbiAgICAgICAgaWYgKGNsZWFyQXR0cmlidXRlICE9IG5vZGUubm9kZU5hbWUpIHtcbiAgICAgICAgICBpc0Jvb2xlYW5BdHRyaWJ1dGUgPSB0cnVlO1xuICAgICAgICAgIHZhbHVlID0gISF2YWx1ZTtcbiAgICAgICAgfSAgICAgICAgICBcbiAgXG4gICAgICAgIGlmIChub2RlLl9fYXR0cmlidXRlT24pIHsgICAgICAgIFxuICAgICAgICAgIGNvbnN0IGNvbXBvbmVudCA9IG5vZGUuX19hdHRyaWJ1dGVPbjtcbiAgICAgICAgICB2YWx1ZSA9IGNvbXBvbmVudC5fX3ByZXBhcmVBdHRyaWJ1dGVJbihub2RlLCB2YWx1ZSk7XG4gICAgICAgICAgY29tcG9uZW50Ll9fZGlzYWJsZUF0dHJpYnV0ZVNldHRlciA9IHRydWU7XG4gICAgICAgICAgY29tcG9uZW50LmF0dHJzW2NhbWVsQXR0cmlidXRlXSA9IHZhbHVlO1xuICAgICAgICAgIGNvbXBvbmVudC5fX2Rpc2FibGVBdHRyaWJ1dGVTZXR0ZXIgPSBmYWxzZTtcbiAgXG4gICAgICAgICAgaWYgKGNvbXBvbmVudC5fX2lzTW91bnRlZCkge1xuICAgICAgICAgICAgY29tcG9uZW50Ll9fYXR0clRyaWdnZXJCeU5hbWUoY2FtZWxBdHRyaWJ1dGUsIHZhbHVlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNCb29sZWFuQXR0cmlidXRlKSB7XG4gICAgICAgICAgY29uc3QgZWxlbWVudCA9IG5vZGUuX19lbGVtZW50O1xuICAgICAgICAgIHZhbHVlPyBlbGVtZW50LnNldEF0dHJpYnV0ZShjYW1lbEF0dHJpYnV0ZSwgJ3RydWUnKTogZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoY2FtZWxBdHRyaWJ1dGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5vZGVba2V5XTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQcmVwYXJlIHRoZSBhdHRyaWJ1dGUgdmFsdWUgZm9yIHJlY2VpdmluZ1xuICAgKiBcbiAgICogQHBhcmFtIHtOb2RlfSBub2RlXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWVcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19wcmVwYXJlQXR0cmlidXRlSW4obm9kZSwgdmFsdWUpIHsgICAgXG4gICAgcmV0dXJuIHV0aWxzLmNvcHkodmFsdWUsIHsgcGxhaW46IHRydWUgfSk7XG4gIH1cblxuICAvKipcbiAgICogUHJlcGFyZSB0aGUgYXR0cmlidXRlIHZhbHVlIGZvciBzZW5kaW5nXG4gICAqIFxuICAgKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAgICogQHBhcmFtIHsqfSB2YWx1ZVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX3ByZXBhcmVBdHRyaWJ1dGVPdXQobm9kZSwgdmFsdWUpIHsgICAgXG4gICAgcmV0dXJuIHV0aWxzLmNvcHkodmFsdWUsIHsgcGxhaW46IHRydWUgfSk7XG4gIH1cblxuICAvKipcbiAgICogSW5pdGlhbGl6ZSB0aGUgYXR0cmlidXRlc1xuICAgKlxuICAgKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAgICogQHBhcmFtIHtFbGVtZW50fSBlbFxuICAgKiBAcGFyYW0ge0NvbXBvbmVudH0gYXR0cmlidXRlT2YgLSBpZiBub2RlIGlzIGxpbmtlZCB3aXRoIHBhcmVudCBzY29wZVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2luaXRpYWxpemVBdHRyaWJ1dGUobm9kZSwgZWwsIGF0dHJpYnV0ZU9mKSB7XG4gICAgaWYgKCFub2RlIHx8IHN5c3RlbUF0dHJpYnV0ZXMuaW5kZXhPZihub2RlLm5vZGVOYW1lKSAhPSAtMSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmKCF0aGlzLl9faW5pdGlhbGl6ZU5vZGUobm9kZSwgZWwpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IGV2ZW50TmFtZSA9IG5vZGUubm9kZU5hbWUucmVwbGFjZSgvXm9uLSguKykvaSwgJyQxJyk7ICAgIFxuICAgIGxldCBjb21wb25lbnQgPSBhdHRyaWJ1dGVPZj8gYXR0cmlidXRlT2Y6IHRoaXM7XG5cbiAgICBpZiAobm9kZS5fX2lzRXZlbnQpIHtcbiAgICAgIGlmIChub2RlLl9fZXZlbnQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBlbWl0dGVyID0gbmV3IEFraWxpLkV2ZW50RW1pdHRlcihldmVudE5hbWUsIG5vZGUsIGVsLCBjb21wb25lbnQpO1xuXG4gICAgICBpZiAobm9kZS5fX2hhc0JpbmRpbmdzKSB7XG4gICAgICAgIGVtaXR0ZXIuYmluZChlID0+IGNvbXBvbmVudC5fX2V2YWx1YXRlRXZlbnQobm9kZSwgZWwsIGUpKTtcbiAgICAgIH1cblxuICAgICAgbm9kZS5fX2V2ZW50ID0gZW1pdHRlcjtcbiAgICAgIGVsLnNldEF0dHJpYnV0ZShub2RlLm5vZGVOYW1lLCB1dGlscy5tYWtlQXR0cmlidXRlVmFsdWUoZW1pdHRlcikpO1xuXG4gICAgICBpZiAoYXR0cmlidXRlT2YpIHtcbiAgICAgICAgdGhpcy5fX2Rpc2FibGVBdHRyaWJ1dGVTZXR0ZXIgPSB0cnVlO1xuICAgICAgICB0aGlzLmF0dHJzW3V0aWxzLnRvQ2FtZWxDYXNlKG5vZGUubm9kZU5hbWUpXSA9IGVtaXR0ZXI7XG4gICAgICAgIHRoaXMuX19kaXNhYmxlQXR0cmlidXRlU2V0dGVyID0gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoYXR0cmlidXRlT2YpIHtcbiAgICAgIG5vZGUuX19hdHRyaWJ1dGVPbiA9IHRoaXM7XG4gICAgICBub2RlLl9fYXR0cmlidXRlT2YgPSBjb21wb25lbnQ7XG4gICAgfVxuICAgIFxuICAgIGxldCBjaGVjayA9IHRoaXMuX19jb21waWxpbmc/IHRoaXMuX19jb21waWxpbmcuY2hlY2tDaGFuZ2VzOiBmYWxzZTtcbiAgICBjb21wb25lbnQuX19ldmFsdWF0ZU5vZGUobm9kZSwgY2hlY2spO1xuICB9XG5cbiAgLyoqXG4gICAqIEluaXRpYWxpemUgdGhlIG5vZGVcbiAgICpcbiAgICogQHBhcmFtIHtOb2RlfSBub2RlXG4gICAqIEBwYXJhbSB7RWxlbWVudH0gZWxcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9faW5pdGlhbGl6ZU5vZGUobm9kZSwgZWwpIHtcbiAgICBpZiAobm9kZS5fX2luaXRpYWxpemVkKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBjb25zdCBpc0F0dHIgPSBub2RlIGluc3RhbmNlb2Ygd2luZG93LkF0dHI7XG4gICAgY29uc3QgdmFsID0gbm9kZVtpc0F0dHI/ICd2YWx1ZSc6ICdub2RlVmFsdWUnXTtcbiAgICBjb25zdCBoYXNCaW5kaW5ncyA9IGV2YWx1YXRpb25SZWdleC50ZXN0KHZhbC50cmltKCkpO1xuICAgIGNvbnN0IGlzQm9vbGVhbiA9IGlzQXR0cj8gL15ib29sZWFuLS9pLnRlc3Qobm9kZS5ub2RlTmFtZSk6IGZhbHNlO1xuICAgIGNvbnN0IGlzRXZlbnQgPSBpc0F0dHI/IC9eb24tKC4rKS9pLnRlc3Qobm9kZS5ub2RlTmFtZSk6IGZhbHNlO1xuXG4gICAgaWYoIWVsLl9fYWtpbGkgJiYgIWhhc0JpbmRpbmdzICYmICFpc0Jvb2xlYW4gJiYgIWlzRXZlbnQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBub2RlLl9fbmFtZSA9IHRoaXMuX19zY29wZS5fX25hbWUgKyB1dGlscy5jcmVhdGVSYW5kb21TdHJpbmcoMTYpO1xuICAgIG5vZGUuX19pc0V2ZW50ID0gaXNFdmVudDtcbiAgICBub2RlLl9faGFzQmluZGluZ3MgPSBoYXNCaW5kaW5ncztcbiAgICBub2RlLl9faXNCb29sZWFuID0gaXNCb29sZWFuO1xuICAgIG5vZGUuX19leHByZXNzaW9uID0gdmFsO1xuICAgIG5vZGUuX19wcm9wZXJ0aWVzID0ge307XG4gICAgbm9kZS5fX2F0dHJpYnV0ZU9mID0gbnVsbDtcbiAgICBub2RlLl9fYXR0cmlidXRlT24gPSBudWxsO1xuICAgIG5vZGUuX19ldmVudCA9IG51bGw7ICAgIFxuICAgIG5vZGUuX19pbml0aWFsaXplZCA9IHRydWU7XG4gICAgbm9kZS5fX2NvbXBvbmVudCA9IHRoaXM7XG4gICAgbm9kZS5fX2VsZW1lbnQgPSBlbDtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZWluaXRpYWxpemUgdGhlIG5vZGVcbiAgICpcbiAgICogQHBhcmFtIHtOb2RlfSBub2RlXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19kZWluaXRpYWxpemVOb2RlKG5vZGUsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmKCFub2RlLl9faW5pdGlhbGl6ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgaWYgKG5vZGUuX19ldmVudCkge1xuICAgICAgbm9kZS5fX2V2ZW50LnJlbW92ZSgpO1xuICAgIH1cblxuICAgIGlmIChub2RlLl9faGFzQmluZGluZ3MgJiYgIW9wdGlvbnMuc2F2ZUJpbmRpbmdzKSB7IFxuICAgICAgdGhpcy5fX3VuYmluZEJ5Tm9kZXMobm9kZSk7ICAgICBcbiAgICAgIHRoaXMuX191bmJpbmRQYXJlbnRzQnlOb2Rlcyhub2RlKTsgICAgXG4gICAgfVxuICAgIFxuICAgIEFraWxpLnJlbW92ZVRhZyhub2RlKTsgICAgXG4gICAgZGVsZXRlIG5vZGUuX19uYW1lO1xuICAgIGRlbGV0ZSBub2RlLl9faGFzQmluZGluZ3M7XG4gICAgZGVsZXRlIG5vZGUuX19pc0Jvb2xlYW47XG4gICAgZGVsZXRlIG5vZGUuX19pc0V2ZW50O1xuICAgIGRlbGV0ZSBub2RlLl9fZXhwcmVzc2lvbjtcbiAgICBkZWxldGUgbm9kZS5fX3Byb3BlcnRpZXM7XG4gICAgZGVsZXRlIG5vZGUuX19hdHRyaWJ1dGVPZjtcbiAgICBkZWxldGUgbm9kZS5fX2F0dHJpYnV0ZU9uO1xuICAgIGRlbGV0ZSBub2RlLl9fZXZlbnQ7ICAgIFxuICAgIGRlbGV0ZSBub2RlLl9faW5pdGlhbGl6ZWQ7XG4gICAgZGVsZXRlIG5vZGUuX19jb21wb25lbnQ7XG4gICAgZGVsZXRlIG5vZGUuX19lbGVtZW50OyAgICBcbiAgfVxuXG4gIC8qKlxuICAgKiBJbnRlcnBvbGF0ZSB0aGUgZWxlbWVudCBhdHRyaWJ1dGVzXG4gICAqXG4gICAqIEBwYXJhbSB7RWxlbWVudH0gZWxcbiAgICogQHBhcmFtIHtDb21wb25lbnR9IFthdHRyaWJ1dGVPZj1udWxsXSAtIGlmIHRoZSBub2RlIGhhcyBsaW5rIHdpdGggdGhlIHBhcmVudCBzY29wZVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2ludGVycG9sYXRlQXR0cmlidXRlcyhlbCwgYXR0cmlidXRlT2YgPSBudWxsKSB7XG4gICAgZm9yIChsZXQgaSA9IDAsIGF0dHJzID0gZWwuYXR0cmlidXRlcywgbCA9IGF0dHJzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgdGhpcy5fX2luaXRpYWxpemVBdHRyaWJ1dGUoYXR0cnNbaV0sIGVsLCBhdHRyaWJ1dGVPZik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIERlZmluZSB0aGUgYXR0cmlidXRlcyBhcyBhIHByb3h5XG4gICAqXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fZGVmaW5lQXR0cmlidXRlcygpIHtcbiAgICBjb25zdCBjaGFuZ2VBdHRyaWJ1dGUgPSAoa2V5LCB2YWx1ZSwgaXNEZWxldGVkID0gZmFsc2UpID0+IHtcbiAgICAgIGlmICh0aGlzLl9fZGlzYWJsZUF0dHJpYnV0ZVNldHRlcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxldCBub2RlID0gdGhpcy5lbC5nZXRBdHRyaWJ1dGVOb2RlKGtleSk7XG5cbiAgICAgIGlmIChpc0RlbGV0ZWQpIHtcbiAgICAgICAgbm9kZSAmJiB0aGlzLl9fZGVpbml0aWFsaXplTm9kZShub2RlKTtcbiAgICAgICAgdGhpcy5lbC5yZW1vdmVBdHRyaWJ1dGUoa2V5KTtcbiAgICAgICAgcmV0dXJuIFxuICAgICAgfVxuICAgICAgZWxzZSBpZiAoIW5vZGUpIHtcbiAgICAgICAgdGhpcy5lbC5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgICAgIG5vZGUgPSB0aGlzLmVsLmdldEF0dHJpYnV0ZU5vZGUoa2V5KTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICBub2RlLnZhbHVlID0gdmFsdWU7XG4gICAgICAgIHRoaXMuX19kZWluaXRpYWxpemVOb2RlKG5vZGUpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9faW5pdGlhbGl6ZUF0dHJpYnV0ZShub2RlLCB0aGlzLmVsLCB0aGlzLl9fYXR0cmlidXRlT2YpO1xuICAgIH07XG5cbiAgICB0aGlzLmF0dHJzID0gbmV3IFByb3h5KHRoaXMuX19hdHRycywge1xuICAgICAgZ2V0OiAodGFyZ2V0LCBrZXkpID0+IHtcbiAgICAgICAgaWYgKGtleSA9PSAnX19pc1Byb3h5Jykge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRhcmdldFtrZXldO1xuICAgICAgfSxcbiAgICAgIHNldDogKHRhcmdldCwga2V5LCB2YWx1ZSkgPT4ge1xuICAgICAgICBsZXQgYXR0cktleSA9IHV0aWxzLnRvRGFzaENhc2Uoa2V5KTtcblxuICAgICAgICBpZiAodGhpcy5ib29sZWFuQXR0cmlidXRlcy5pbmRleE9mKGF0dHJLZXkpICE9IC0xKSB7XG4gICAgICAgICAgYXR0cktleSA9IGBib29sZWFuLSR7YXR0cktleX1gO1xuICAgICAgICAgIHZhbHVlPyB0aGlzLmVsLnNldEF0dHJpYnV0ZShrZXksIHZhbHVlKTogdGhpcy5lbC5yZW1vdmVBdHRyaWJ1dGUoa2V5KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdGFyZ2V0W2tleV0gPSB2YWx1ZTtcbiAgICAgICAgY2hhbmdlQXR0cmlidXRlKGF0dHJLZXksIHV0aWxzLm1ha2VBdHRyaWJ1dGVWYWx1ZSh2YWx1ZSkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH0sXG4gICAgICBkZWxldGVQcm9wZXJ0eTogKHRhcmdldCwga2V5LCB2YWx1ZSkgPT4ge1xuICAgICAgICBsZXQgYXR0cktleSA9IHV0aWxzLnRvRGFzaENhc2Uoa2V5KTtcbiAgICAgICAgY2hhbmdlQXR0cmlidXRlKGF0dHJLZXksIHV0aWxzLm1ha2VBdHRyaWJ1dGVWYWx1ZSh2YWx1ZSksIHRydWUpO1xuICAgICAgICBkZWxldGUgdGFyZ2V0W2tleV07XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbnZlcnQgdGhlIG9iamVjdCB0byBhIHByb3h5XG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvYmpcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0gcGFyZW50c1xuICAgKiBAcmV0dXJucyB7UHJveHl9XG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fb2JzZXJ2ZShvYmosIHBhcmVudHMpIHtcbiAgICByZXR1cm4gbmV3IFByb3h5KG9iaiwge1xuICAgICAgZ2V0OiAodGFyZ2V0LCBrZXkpID0+IHsgXG4gICAgICAgIGlmIChrZXkgPT0gXCJfX2lzUHJveHlcIikge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGtleSA9PSBcIl9fdGFyZ2V0XCIpIHtcbiAgICAgICAgICByZXR1cm4gb2JqO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGtleSA9PSBcIl9fY29tcG9uZW50XCIpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChrZXkgPT0gXCJfX2tleXNcIikge1xuICAgICAgICAgIHJldHVybiBwYXJlbnRzO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZiAodGhpcy5fX2lzU3lzdGVtS2V5KGtleSkpIHtcbiAgICAgICAgICByZXR1cm4gdGFyZ2V0W2tleV07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQWtpbGkuX19ldmFsdWF0aW9uKSB7ICBcbiAgICAgICAgICBsZXQga2V5cyA9IFtdLmNvbmNhdChwYXJlbnRzLCBba2V5XSk7XG4gICAgICAgICAgbGV0IG5vdEJpbmRpbmcgPSBmYWxzZTtcbiAgICAgICAgICBsZXQgZXZhbHVhdGVkID0gIXV0aWxzLmhhc1Byb3BlcnR5QnlLZXlzKGtleXMsIHRoaXMuX19zY29wZSk7IFxuICAgICAgICAgIGxldCBjb21wb25lbnQgPSB0aGlzO1xuICAgICAgICAgIGxldCBleGNBcnIgPSBrZXlzLnNsaWNlKCk7XG5cbiAgICAgICAgICBpZiAodGFyZ2V0IGluc3RhbmNlb2YgU2NvcGUpIHtcbiAgICAgICAgICAgIGxldCByZWFsVGFyZ2V0ID0gdXRpbHMuZ2V0T3duUHJvcGVydHlUYXJnZXQodGFyZ2V0LCBrZXkpO1xuICAgICAgICAgICAgcmVhbFRhcmdldCAmJiAocmVhbFRhcmdldCBpbnN0YW5jZW9mIFNjb3BlKSAmJiAoY29tcG9uZW50ID0gIHJlYWxUYXJnZXQuX19jb21wb25lbnQpO1xuICAgICAgICAgIH0gXG5cbiAgICAgICAgICBpZiAoQWtpbGkuX193cmFwcGluZyAmJiBrZXlzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgIHJldHVybiB0YXJnZXRba2V5XTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb25zdCBmb3JQYXJlbnRzID0gQWtpbGkuX19ldmFsdWF0aW9uLmNvbXBvbmVudC5wYXJlbnRzKGMgPT4gYyBpbnN0YW5jZW9mIEFraWxpLmNvbXBvbmVudHMuRm9yKTtcblxuICAgICAgICAgIGZvciAobGV0IGkgPSAwLCBsID0gZm9yUGFyZW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgIGZvciAobGV0IGsgPSAwLCBjID0ga2V5cy5sZW5ndGg7IGsgPCBjOyBrKyspIHsgXG4gICAgICAgICAgICAgIGNvbnN0IGZvckRhdGEgPSBmb3JQYXJlbnRzW2ldLmRhdGE7XG4gICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB1dGlscy5nZXRQcm9wZXJ0eUJ5S2V5cyhleGNBcnIsIGNvbXBvbmVudC5fX3Njb3BlKTtcblxuICAgICAgICAgICAgICBpZiAoZGF0YSAmJiB0eXBlb2YgZGF0YSA9PSAnb2JqZWN0JyAmJiBmb3JEYXRhID09PSBkYXRhKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldFtrZXldO1xuICAgICAgICAgICAgICB9XG4gIFxuICAgICAgICAgICAgICBleGNBcnIucG9wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgaWYgKCEoa2V5IGluIHRhcmdldCkpIHtcbiAgICAgICAgICAgIHRhcmdldFtrZXldID0gdW5kZWZpbmVkO1xuICAgICAgICAgIH0gICAgICAgICAgXG4gICAgICAgICAgZWxzZSBpZiAoIXV0aWxzLmdldEVudW1lcmFibGVQcm9wZXJ0eVRhcmdldCh0YXJnZXQsIGtleSkpIHtcbiAgICAgICAgICAgIG5vdEJpbmRpbmcgPSB0cnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoaXMuX19iaW5kTm9kZShBa2lsaS5fX2V2YWx1YXRpb24ubGlzdCwgY29tcG9uZW50LCBrZXlzLCBwYXJlbnRzLCB0YXJnZXRba2V5XSwgbm90QmluZGluZywgZXZhbHVhdGVkKTtcbiAgICAgICAgICByZXR1cm4gdGFyZ2V0W2tleV07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGFyZ2V0W2tleV07XG4gICAgICB9LFxuICAgICAgc2V0OiAodGFyZ2V0LCBrZXksIHZhbHVlKSA9PiB7IFxuICAgICAgICBpZiAodGhpcy5fX2lzU3lzdGVtS2V5KGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHZhbHVlO1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXRba2V5XSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIHZhbHVlID0gQWtpbGkud3JhcEZ1bmN0aW9uKHZhbHVlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBrZXlzID0gW10uY29uY2F0KHBhcmVudHMsIFtrZXldKTtcblxuICAgICAgICBpZiAodGhpcy5fX2NoZWNrRGlzYWJsZW1lbnQoa2V5cykpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHZhbHVlO1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgQ0hFQ0tfRVhJU1RFTkNFOiBpZiAocGFyZW50cy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgbGV0IHRhcmdldFBhcmVudFZhbHVlID0gcGFyZW50cy5sZW5ndGggPiAxPyB1dGlscy5nZXRQcm9wZXJ0eUJ5S2V5cyhwYXJlbnRzLnNsaWNlKDAsIC0xKSwgdGhpcy5fX3Njb3BlKTogdGhpcy5fX3Njb3BlO1xuICAgICAgICAgIFxuICAgICAgICAgIGZvciAobGV0IGsgaW4gdGFyZ2V0UGFyZW50VmFsdWUpIHtcbiAgICAgICAgICAgIGlmICghdGFyZ2V0UGFyZW50VmFsdWUuaGFzT3duUHJvcGVydHkoaykpIHtcbiAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0YXJnZXRQYXJlbnRWYWx1ZVtrXSAmJiB0YXJnZXRQYXJlbnRWYWx1ZVtrXS5fX3RhcmdldCA9PT0gdGFyZ2V0KSB7XG4gICAgICAgICAgICAgIGJyZWFrIENIRUNLX0VYSVNURU5DRTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHZhbHVlO1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgdGFyZ2V0W2tleV0gPSB0aGlzLl9fbmVzdGVkT2JzZXJ2ZSh2YWx1ZSwga2V5cyk7XG5cbiAgICAgICAgaWYoIXRoaXMuX19pc1Jlc29sdmVkKSB7XG4gICAgICAgICAgdGhpcy5fX3RyaWdnZXJTdG9yZUFuZEF0dHIoa2V5cyk7XG4gICAgICAgIH1cbiAgICAgICBcbiAgICAgICAgaWYgKEFraWxpLl9faXNvbGF0aW9uKSB7IFxuICAgICAgICAgIHRoaXMuX19jcmVhdGVJc29sYXRpb25PYmplY3QocGFyZW50cywga2V5KTtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKHRoaXMuX19pc1Jlc29sdmVkKSB7XG4gICAgICAgICAgdGhpcy5fX3RyaWdnZXJTdG9yZUFuZEF0dHIoa2V5cyk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGlmICh0aGlzLl9faXNNb3VudGVkKSB7ICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgIHRoaXMuX19ldmFsdWF0ZUJ5S2V5cyhrZXlzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSxcbiAgICAgIGRlbGV0ZVByb3BlcnR5OiAodGFyZ2V0LCBrZXkpID0+IHtcbiAgICAgICAgY29uc3Qga2V5cyA9IFtdLmNvbmNhdChwYXJlbnRzLCBba2V5XSk7XG5cbiAgICAgICAgaWYgKHRoaXMuX19jaGVja0Rpc2FibGVtZW50KGtleXMpKSB7XG4gICAgICAgICAgZGVsZXRlIHRhcmdldFtrZXldO1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuX19pc1N5c3RlbUtleShrZXkpKSB7XG4gICAgICAgICAgZGVsZXRlIHRhcmdldFtrZXldO1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgZGVsZXRlIHRhcmdldFtrZXldO1xuXG4gICAgICAgIGlmKCF0aGlzLl9faXNSZXNvbHZlZCkge1xuICAgICAgICAgIHRoaXMuX190cmlnZ2VyU3RvcmVBbmRBdHRyKGtleXMpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZiAoQWtpbGkuX19pc29sYXRpb24pIHtcbiAgICAgICAgICB0aGlzLl9fY3JlYXRlSXNvbGF0aW9uT2JqZWN0KHBhcmVudHMsIGtleSk7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZih0aGlzLl9faXNSZXNvbHZlZCkge1xuICAgICAgICAgIHRoaXMuX190cmlnZ2VyU3RvcmVBbmRBdHRyKGtleXMpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fX2V2YWx1YXRlQnlLZXlzKGtleXMpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmlnZ2VyIHRoZSBzdG9yZSBhbmQgdGhlIGF0dHJpYnV0ZXMgY2hhbmdlXG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBrZXlzIFxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX3RyaWdnZXJTdG9yZUFuZEF0dHIoa2V5cykge1xuICAgIGZvcihsZXQgaSA9IDAsIGwgPSBrZXlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgY29uc3QgY3VycmVudEtleXMgPSBrZXlzLnNsaWNlKDAsIGwgLSBpKTtcbiAgICAgIGNvbnN0IGN1cnJlbnRLZXlTdHJpbmcgPSBBa2lsaS5qb2luQmluZGluZ0tleXMoY3VycmVudEtleXMpO1xuICAgICAgY29uc3QgdmFsID0gdXRpbHMuZ2V0UHJvcGVydHlCeUtleXMoY3VycmVudEtleXMsIHRoaXMuX19zY29wZSk7XG5cbiAgICAgIGlmICh0aGlzLl9fc3RvcmVMaW5rc1tjdXJyZW50S2V5U3RyaW5nXSkgeyAgXG4gICAgICAgIHRoaXMuX19zdG9yZVRyaWdnZXJCeUtleXMoY3VycmVudEtleXMsIHZhbCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLl9fYXR0ckxpbmtzW2N1cnJlbnRLZXlTdHJpbmddKSB7XG4gICAgICAgIHRoaXMuX19hdHRyVHJpZ2dlckJ5S2V5cyhjdXJyZW50S2V5cywgdmFsKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIHRoZSBoYXNoIGZvciB0aGUga2V5c1xuICAgKiBcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0ga2V5cyBcbiAgICogQHJldHVybnMge3N0cmluZ30gICAgXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fY3JlYXRlS2V5c0hhc2goa2V5cykge1xuICAgIHJldHVybiBgJHt0aGlzLl9fc2NvcGUuX19uYW1lfS4ke0FraWxpLmpvaW5CaW5kaW5nS2V5cyhrZXlzKX1gOyAgICBcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIHN0b3JlIG9mIHRoZSBkaXNhYmxlbWVudCB0eXBlXG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZSBcbiAgICogQHJldHVybnMge29iamVjdH1cbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19nZXREaXNhYmxlbWVudFR5cGVTdG9yZSh0eXBlKSB7XG4gICAgcmV0dXJuICh7XG4gICAgICBwcm94eTogJ19fZGlzYWJsZVByb3h5JyxcbiAgICAgIHN0b3JlOiAnX19kaXNhYmxlU3RvcmVLZXlzJyxcbiAgICAgIGF0dHI6ICdfX2Rpc2FibGVBdHRyS2V5cydcbiAgICB9KVt0eXBlXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEaXNhYmxlIHRoZSBrZXlzIHNldHRlclxuICAgKiBcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0ga2V5cyAgXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbdHlwZV0gIFxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2Rpc2FibGVLZXlzKGtleXMsIHR5cGUgPSAncHJveHknKSB7ICAgIFxuICAgIHRoaXNbdGhpcy5fX2dldERpc2FibGVtZW50VHlwZVN0b3JlKHR5cGUpXVtrZXlzPyB0aGlzLl9fY3JlYXRlS2V5c0hhc2goa2V5cyk6ICdfX2FsbCddID0gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFbmFibGUgdGhlIGtleXMgc2V0dGVyXG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBrZXlzIFxuICAgKiBAcGFyYW0ge3N0cmluZ30gW3R5cGVdICAgXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fZW5hYmxlS2V5cyhrZXlzLCB0eXBlID0gJ3Byb3h5Jykge1xuICAgIGRlbGV0ZSB0aGlzW3RoaXMuX19nZXREaXNhYmxlbWVudFR5cGVTdG9yZSh0eXBlKV1ba2V5cz8gdGhpcy5fX2NyZWF0ZUtleXNIYXNoKGtleXMpOiAnX19hbGwnXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayB0aGUga2V5cyBzZXR0ZXIgZGlzYWJsZW1hbnRcbiAgICogXG4gICAqIEBwYXJhbSB7c3RyaW5nW119IGtleXMgXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbdHlwZV0gICBcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19jaGVja0Rpc2FibGVtZW50KGtleXMsIHR5cGUgPSAncHJveHknKSB7XG4gICAgY29uc3Qgc3RvcmUgPSB0aGlzLl9fZ2V0RGlzYWJsZW1lbnRUeXBlU3RvcmUodHlwZSk7XG4gICAgcmV0dXJuIHRoaXNbc3RvcmVdLl9fYWxsPyB0cnVlOiB0aGlzW3N0b3JlXVt0aGlzLl9fY3JlYXRlS2V5c0hhc2goa2V5cyldO1xuICB9XG5cbiAgLyoqXG4gICAqIFNhdmUgdGhlIHZhbHVlIHRvIHRoZSBzdG9yZSBieSB0aGUga2V5c1xuICAgKiBcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0ga2V5cyBcbiAgICogQHBhcmFtIHsqfSB2YWx1ZSAgICBcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19zdG9yZVRyaWdnZXJCeUtleXMoa2V5cywgdmFsdWUpIHsgXG4gICAgaWYgKHRoaXMuX19jaGVja0Rpc2FibGVtZW50KGtleXMsICdzdG9yZScpKSB7ICAgICAgXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgbGlua3MgPSB0aGlzLl9fc3RvcmVMaW5rc1tBa2lsaS5qb2luQmluZGluZ0tleXMoa2V5cyldO1xuXG4gICAgaWYgKCFsaW5rcyB8fCAhbGlua3MubGVuZ3RoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIHZhbHVlID0gdXRpbHMuY29weSh2YWx1ZSwgeyBwbGFpbjogdHJ1ZSB9KTtcbiAgICBjb25zdCBwID0gW107XG5cbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IGxpbmtzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgY29uc3QgbGluayA9IGxpbmtzW2ldOyAgIFxuICAgICAgXG4gICAgICBpZiAoIWxpbmsuc2V0KSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBwLnB1c2godGhpcy5fX3N0b3JlVHJpZ2dlckJ5TmFtZShsaW5rLm5hbWUsIHZhbHVlKSk7ICAgICAgXG4gICAgfVxuICAgIFxuICAgIHJldHVybiBQcm9taXNlLmFsbChwKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTYXZlIHRoZSB2YWx1ZSB0byB0aGUgc3RvcmUgYnkgdGhlIG5hbWVcbiAgICogXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIFxuICAgKiBAcGFyYW0geyp9IHZhbHVlIFxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX3N0b3JlVHJpZ2dlckJ5TmFtZShuYW1lLCB2YWx1ZSkgeyAgXG4gICAgc3RvcmUuX190YXJnZXRbbmFtZV0gPSB2YWx1ZTtcbiAgICBsZXQgbGlua3MgPSAoQWtpbGkuX19zdG9yZUxpbmtzW25hbWVdIHx8IFtdKS5jb25jYXQoQWtpbGkuX19zdG9yZUxpbmtzWycqJ10gfHwgW10pO1xuXG4gICAgaWYgKCFsaW5rcyB8fCAhbGlua3MubGVuZ3RoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGlua3MgPSB1dGlscy5zb3J0KGxpbmtzLCBbJ2RhdGUnXSwgdHJ1ZSk7XG5cbiAgICByZXR1cm4gQWtpbGkuaXNvbGF0ZSgoKSA9PiB7XG4gICAgICBmb3IgKGxldCBpID0gMCwgbCA9IGxpbmtzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICBjb25zdCBsaW5rID0gbGlua3NbaV07XG4gICAgICAgIGNvbnN0IGNvbXBvbmVudCA9IGxpbmsuY29tcG9uZW50O1xuXG4gICAgICAgIGlmIChjb21wb25lbnQgPT09IHRoaXMpIHtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKGxpbmsuZm4pIHtcbiAgICAgICAgICBBa2lsaS51bmlzb2xhdGUoKCkgPT4gbGluay5mbi5jYWxsKGNvbXBvbmVudCwgdmFsdWUsIG5hbWUpKTtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWxpbmsuZ2V0KSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBjb21wb25lbnQuX19kaXNhYmxlS2V5cyhsaW5rLmtleXMsICdzdG9yZScpO1xuICAgICAgICBsZXQgY3VycmVudCA9IHV0aWxzLmdldFByb3BlcnR5QnlLZXlzKGxpbmsua2V5cywgY29tcG9uZW50Ll9fc2NvcGUpO1xuICAgICAgICAhdXRpbHMuY29tcGFyZShjdXJyZW50LCB2YWx1ZSkgJiYgY29tcG9uZW50LnNjb3BlLl9fc2V0KGxpbmsua2V5cywgdmFsdWUpOyAgIFxuICAgICAgICBjb21wb25lbnQuX19lbmFibGVLZXlzKGxpbmsua2V5cywgJ3N0b3JlJyk7XG4gICAgICB9ICBcbiAgICB9KTsgICBcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgdGhlIHN0b3JlIGxpbmsgd2l0aCB0aGUgc2NvcGUgcHJvcGVydHlcbiAgICogXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIFxuICAgKiBAcGFyYW0ge3N0cmluZ3xzdHJpbmdbXX0ga2V5c1xuICAgKiBAcGFyYW0ge29iaGVjdH0gW29wdGlvbnNdXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fc3RvcmVCeUtleXMobmFtZSwga2V5cywgb3B0aW9ucyA9IHt9KSB7XG4gICAgb3B0aW9ucyA9IHsgZ2V0OiB0cnVlLCBzZXQ6IHRydWUsIC4uLm9wdGlvbnMgfTtcblxuICAgIGlmICgha2V5cykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBTdG9yZSBsaW5rIFwiJHtuYW1lfVwiIG11c3QgaGF2ZSB0aGUgc2NvcGUgcHJvcGVydHkgbmFtZWApO1xuICAgIH1cblxuICAgIGlmICghb3B0aW9ucy5nZXQgJiYgIW9wdGlvbnMuc2V0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFN0b3JlIGxpbmsgXCIke25hbWV9XCIgbXVzdCBoYXZlIGF0IGxlYXN0IFwiZ2V0XCIgb3IgXCJzZXRcIiBvcHRpb24gYXMgdHJ1ZWApO1xuICAgIH1cblxuICAgIGlmICghQXJyYXkuaXNBcnJheShrZXlzKSkge1xuICAgICAga2V5cyA9IFtrZXlzXTtcbiAgICB9XG4gICAgXG4gICAgdGhpcy5fX2Rpc2FibGVLZXlzKGtleXMsICdzdG9yZScpO1xuICAgIChzdG9yZS5oYXNPd25Qcm9wZXJ0eShuYW1lKSB8fCAhdXRpbHMuaGFzUHJvcGVydHlCeUtleXMoa2V5cywgdGhpcy5fX3Njb3BlKSkgJiYgdGhpcy5zY29wZS5fX3NldChrZXlzLCBzdG9yZVtuYW1lXSk7XG4gICAgdGhpcy5fX2VuYWJsZUtleXMoa2V5cywgJ3N0b3JlJyk7XG4gICAgbGV0IGtleVN0cmluZyA9IEFraWxpLmpvaW5CaW5kaW5nS2V5cyhrZXlzKTtcbiAgICBsZXQgaW5mbztcblxuICAgIGlmICghdGhpcy5fX3N0b3JlTGlua3Nba2V5U3RyaW5nXSkge1xuICAgICAgdGhpcy5fX3N0b3JlTGlua3Nba2V5U3RyaW5nXSA9IFtdO1xuICAgIH1cblxuICAgIGxldCBhcnIgPSB0aGlzLl9fc3RvcmVMaW5rc1trZXlTdHJpbmddO1xuICAgIFxuICAgIGZvciAobGV0IGkgPSBhcnIubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIGxldCByZXMgPSBhcnJbaV07XG5cbiAgICAgIGlmIChyZXMuY29tcG9uZW50ID09PSB0aGlzICYmIHJlcy5uYW1lID09IG5hbWUgJiYgcmVzLmtleVN0cmluZyA9PSBrZXlTdHJpbmcpIHtcbiAgICAgICAgcmVzLnNldCA9IG9wdGlvbnMuc2V0O1xuICAgICAgICByZXMuZ2V0ID0gb3B0aW9ucy5nZXQ7XG4gICAgICAgIHJlcy5kYXRlID0gRGF0ZS5ub3coKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghQWtpbGkuX19zdG9yZUxpbmtzW25hbWVdKSB7XG4gICAgICBBa2lsaS5fX3N0b3JlTGlua3NbbmFtZV0gPSBbXTtcbiAgICB9XG5cbiAgICBpbmZvID0geyBjb21wb25lbnQ6IHRoaXMsIG5hbWUsIGtleXMsIGtleVN0cmluZywgZGF0ZTogRGF0ZS5ub3coKSwgc2V0OiBvcHRpb25zLnNldCwgZ2V0OiBvcHRpb25zLmdldCB9O1xuICAgIHRoaXMuX19zdG9yZUxpbmtzW2tleVN0cmluZ10ucHVzaChpbmZvKTtcbiAgICBBa2lsaS5fX3N0b3JlTGlua3NbbmFtZV0ucHVzaChpbmZvKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgdGhlIHN0b3JlIGxpbmsgd2l0aCB0aGUgZnVuY3Rpb25cbiAgICogXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIFxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBmbiAgIFxuICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gICAqIEBwcm90ZWN0ZWRcbiAgICogQHJldHVybnMgeyp9XG4gICAqL1xuICBfX3N0b3JlQnlGdW5jdGlvbihuYW1lLCBmbiwgb3B0aW9ucyA9IHt9KSB7IFxuICAgIGxldCBjYWxsID0gb3B0aW9ucy5jYWxsT25TdGFydCA9PT0gdW5kZWZpbmVkPyBzdG9yZS5fX3RhcmdldC5oYXNPd25Qcm9wZXJ0eShuYW1lKTogb3B0aW9ucy5jYWxsT25TdGFydDtcblxuICAgIGlmICghQWtpbGkuX19zdG9yZUxpbmtzW25hbWVdKSB7XG4gICAgICBBa2lsaS5fX3N0b3JlTGlua3NbbmFtZV0gPSBbXTtcbiAgICB9XG5cbiAgICBsZXQgbGlua3MgPSBBa2lsaS5fX3N0b3JlTGlua3NbbmFtZV07XG4gICAgXG4gICAgZm9yIChsZXQgaSA9IGxpbmtzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICBsZXQgcmVzID0gbGlua3NbaV07XG5cbiAgICAgIGlmIChyZXMuY29tcG9uZW50ID09PSB0aGlzICYmIHJlcy5uYW1lID09IG5hbWUgJiYgcmVzLmZuID09PSBmbikge1xuICAgICAgICByZXMuZGF0ZSA9IERhdGUubm93KCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBBa2lsaS5fX3N0b3JlTGlua3NbbmFtZV0ucHVzaCh7IGNvbXBvbmVudDogdGhpcywgbmFtZSwgZm4sIGRhdGU6IERhdGUubm93KCkgfSk7XG5cbiAgICBpZiAobmFtZSA9PSAnKicgJiYgb3B0aW9ucy5jYWxsT25TdGFydCAhPT0gZmFsc2UpIHtcbiAgICAgIGxldCBzdG9yZUtleXMgPSBPYmplY3Qua2V5cyhzdG9yZS5fX3RhcmdldCk7XG4gICAgICBsZXQgcCA9IFtdO1xuXG4gICAgICBmb3IgKGxldCBpID0gMCwgbCA9IHN0b3JlS2V5cy5sZW5ndGggOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGxldCBrZXkgPSBzdG9yZUtleXNbaV07XG4gICAgICAgIGxldCB2YWwgPSBzdG9yZS5fX3RhcmdldFtrZXldO1xuICAgICAgICBwLnB1c2goQWtpbGkudW5pc29sYXRlKCgpID0+IGZuLmNhbGwodGhpcywgdmFsLCBrZXkpKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBQcm9taXNlLmFsbChwKTtcbiAgICB9XG5cbiAgICBpZiAoY2FsbCkge1xuICAgICAgcmV0dXJuIEFraWxpLnVuaXNvbGF0ZSgoKSA9PiBmbi5jYWxsKHRoaXMsIHN0b3JlW25hbWVdKSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgc3RvcmUgbGluayB3aXRoIHRoZSBzY29wZSBwcm9wZXJ0eVxuICAgKiBcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAgICogQHBhcmFtIHtzdHJpbmd8c3RyaW5nW119IGtleXNcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX191bnN0b3JlQnlLZXlzKG5hbWUsIGtleXMpIHtcbiAgICBpZiAoIWtleXMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgWW91IGhhdmUgdG8gcGFzcyB0aGUgc2NvcGUgcHJvcGVydHkgbmFtZSBmb3Igc3RvcmUgbGluayBcIiR7bmFtZX1cImApO1xuICAgIH1cblxuICAgIGlmICghQXJyYXkuaXNBcnJheShrZXlzKSkge1xuICAgICAga2V5cyA9IFtrZXlzXTtcbiAgICB9XG5cbiAgICBsZXQga2V5U3RyaW5nID0gQWtpbGkuam9pbkJpbmRpbmdLZXlzKGtleXMpO1xuICAgIGxldCBhcnIgPSB0aGlzLl9fc3RvcmVMaW5rc1trZXlTdHJpbmddO1xuXG4gICAgaWYgKCFhcnIubGVuZ3RoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIGZvciAobGV0IGkgPSBhcnIubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIGxldCByZXMgPSBhcnJbaV07XG4gICAgICBsZXQgbGlua3MgPSBBa2lsaS5fX3N0b3JlTGlua3NbcmVzLm5hbWVdO1xuXG4gICAgICBpZiAocmVzLmNvbXBvbmVudCAhPT0gdGhpcyB8fCByZXMubmFtZSAhPSBuYW1lIHx8IHJlcy5rZXlTdHJpbmcgIT0ga2V5U3RyaW5nKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBhcnIuc3BsaWNlKGksIDEpO1xuXG4gICAgICBpZiAoIWxpbmtzIHx8ICFsaW5rcy5sZW5ndGgpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGZvciAobGV0IGsgPSBsaW5rcy5sZW5ndGggLSAxOyBrID49IDA7IGstLSkge1xuICAgICAgICBsZXQgbGluayA9IGxpbmtzW2tdO1xuXG4gICAgICAgIGlmIChsaW5rLmNvbXBvbmVudCA9PT0gdGhpcyAmJiBsaW5rLmtleVN0cmluZyA9PSBrZXlTdHJpbmcpIHtcbiAgICAgICAgICBsaW5rcy5zcGxpY2UoaywgMSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCFsaW5rcy5sZW5ndGgpIHtcbiAgICAgICAgZGVsZXRlIEFraWxpLl9fc3RvcmVMaW5rc1tuYW1lXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIWFyci5sZW5ndGgpIHtcbiAgICAgIGRlbGV0ZSB0aGlzLl9fc3RvcmVMaW5rc1trZXlTdHJpbmddO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgdGhlIHN0b3JlIGxpbmsgd2l0aCB0aGUgZnVuY3Rpb25cbiAgICogXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIFxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBmbiBcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX191bnN0b3JlQnlGdW5jdGlvbihuYW1lLCBmbikge1xuICAgIGlmICghQWtpbGkuX19zdG9yZUxpbmtzW25hbWVdKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IGxpbmtzID0gQWtpbGkuX19zdG9yZUxpbmtzW25hbWVdO1xuICAgIFxuICAgIGZvciAobGV0IGkgPSBsaW5rcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgbGV0IHJlcyA9IGxpbmtzW2ldO1xuXG4gICAgICBpZiAocmVzLmNvbXBvbmVudCA9PT0gdGhpcyAmJiByZXMubmFtZSA9PSBuYW1lICYmIHJlcy5mbiA9PT0gZm4pIHtcbiAgICAgICAgbGlua3Muc3BsaWNlKGksIDEpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIWxpbmtzLmxlbmd0aCkge1xuICAgICAgZGVsZXRlIEFraWxpLl9fc3RvcmVMaW5rc1tuYW1lXTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVHJpZ2dlciB0aGUgYXR0cmlidXRlIGV2ZW50IGJ5IHRoZSBrZXlzXG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBrZXlzIFxuICAgKiBAcGFyYW0geyp9IHZhbHVlICAgIFxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2F0dHJUcmlnZ2VyQnlLZXlzKGtleXMsIHZhbHVlKSB7XG4gICAgaWYgKHRoaXMuX19jaGVja0Rpc2FibGVtZW50KGtleXMsICdhdHRyJykpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgY29uc3QgbGlua3MgPSB0aGlzLl9fYXR0ckxpbmtzW0FraWxpLmpvaW5CaW5kaW5nS2V5cyhrZXlzKV07XG4gICBcbiAgICBpZiAoIWxpbmtzIHx8ICFsaW5rcy5sZW5ndGgpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIEFraWxpLmlzb2xhdGUoKCkgPT4ge1xuICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSBsaW5rcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgY29uc3QgbGluayA9IGxpbmtzW2ldO1xuICAgICAgICBcbiAgICAgICAgaWYgKGxpbmsuZm4pIHtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghbGluay5zZXQpIHtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgY29uc3QgZXYgPSAnb24nICsgdXRpbHMuY2FwaXRhbGl6ZShsaW5rLm5hbWUpO1xuICAgICAgICB0aGlzLmF0dHJzW2V2XSAmJiB0aGlzLmF0dHJzW2V2XS50cmlnZ2VyKHZhbHVlLCB7IGJ1YmJsZXM6IHRydWUgfSk7XG4gICAgICB9XG4gICAgfSk7ICBcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmlnZ2VyIHRoZSBhdHRyaWJ1dGUgZXZlbnQgYnkgdGhlIG5hbWVcbiAgICogXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIFxuICAgKiBAcGFyYW0geyp9IHZhbHVlIFxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2F0dHJUcmlnZ2VyQnlOYW1lKG5hbWUsIHZhbHVlKSB7XG4gICAgbGV0IGxpbmtzID0gKHRoaXMuX19hdHRyTGlua3NbbmFtZV0gfHwgW10pLmNvbmNhdCh0aGlzLl9fYXR0ckxpbmtzWycqJ10gfHwgW10pO1xuICAgIFxuICAgIGlmICghbGlua3MgfHwgIWxpbmtzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gIFxuICAgIFxuICAgIGxpbmtzID0gdXRpbHMuc29ydChsaW5rcywgWydkYXRlJ10sIHRydWUpO1xuICAgIFxuICAgIGZvciAobGV0IGkgPSAwLCBsID0gbGlua3MubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBjb25zdCBsaW5rID0gbGlua3NbaV07ICAgIFxuXG4gICAgICBpZiAobGluay5mbikge1xuICAgICAgICBBa2lsaS51bmlzb2xhdGUoKCkgPT4gbGluay5mbi5jYWxsKHRoaXMsIHZhbHVlLCB1dGlscy50b0Rhc2hDYXNlKG5hbWUpKSk7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZighbGluay5nZXQpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHRoaXMuX19kaXNhYmxlS2V5cyhsaW5rLmtleXMsICdhdHRyJyk7XG4gICAgICBsZXQgY3VycmVudCA9IHV0aWxzLmdldFByb3BlcnR5QnlLZXlzKGxpbmsua2V5cywgdGhpcy5fX3Njb3BlKTtcbiAgICAgICF1dGlscy5jb21wYXJlKGN1cnJlbnQsIHZhbHVlKSAmJiB0aGlzLnNjb3BlLl9fc2V0KGxpbmsua2V5cywgdmFsdWUpO1xuICAgICAgdGhpcy5fX2VuYWJsZUtleXMobGluay5rZXlzLCAnYXR0cicpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgdGhlICBhdHRyaWJ1dGUgbGluayB3aXRoIHRoZSBzY29wZSBwcm9wZXJ0eVxuICAgKiBcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgXG4gICAqIEBwYXJhbSB7c3RyaW5nfHN0cmluZ1tdfSBrZXlzXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19hdHRyQnlLZXlzKG5hbWUsIGtleXMsIG9wdGlvbnMgPSB7fSkgeyAgIFxuICAgIG9wdGlvbnMgPSB7IGdldDogdHJ1ZSwgc2V0OiB0cnVlLCAuLi5vcHRpb25zIH07XG4gICAgbmFtZSA9IHV0aWxzLnRvQ2FtZWxDYXNlKG5hbWUpO1xuXG4gICAgaWYgKCFrZXlzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEF0dHJpYnV0ZSBsaW5rIFwiJHtuYW1lfVwiIG11c3QgaGF2ZSB0aGUgc2NvcGUgcHJvcGVydHkgbmFtZWApO1xuICAgIH1cblxuICAgIGlmICghQXJyYXkuaXNBcnJheShrZXlzKSkge1xuICAgICAga2V5cyA9IFtrZXlzXTtcbiAgICB9XG4gICAgXG4gICAgdGhpcy5fX2Rpc2FibGVLZXlzKGtleXMsICdhdHRyJyk7XG4gICAgKHRoaXMuYXR0cnMuaGFzT3duUHJvcGVydHkobmFtZSkgfHwgIXV0aWxzLmhhc1Byb3BlcnR5QnlLZXlzKGtleXMsIHRoaXMuX19zY29wZSkpICYmIHRoaXMuc2NvcGUuX19zZXQoa2V5cywgdGhpcy5hdHRyc1tuYW1lXSk7IFxuICAgIHRoaXMuX19lbmFibGVLZXlzKGtleXMsICdhdHRyJyk7XG4gICAgbGV0IGtleVN0cmluZyA9IEFraWxpLmpvaW5CaW5kaW5nS2V5cyhrZXlzKTtcbiAgICBcbiAgICBpZiAoIXRoaXMuX19hdHRyTGlua3Nba2V5U3RyaW5nXSkge1xuICAgICAgdGhpcy5fX2F0dHJMaW5rc1trZXlTdHJpbmddID0gW107XG4gICAgfVxuXG4gICAgbGV0IGFyciA9IHRoaXMuX19hdHRyTGlua3Nba2V5U3RyaW5nXTtcbiAgICBcbiAgICBmb3IgKGxldCBpID0gYXJyLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICBsZXQgcmVzID0gYXJyW2ldO1xuXG4gICAgICBpZiAocmVzLm5hbWUgPT0gbmFtZSAmJiByZXMua2V5U3RyaW5nID09IGtleVN0cmluZykge1xuICAgICAgICByZXMuZ2V0ID0gb3B0aW9ucy5nZXQ7XG4gICAgICAgIHJlcy5zZXQgPSBvcHRpb25zLnNldDtcbiAgICAgICAgcmVzLmRhdGUgPSBEYXRlLm5vdygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5fX2F0dHJMaW5rc1trZXlTdHJpbmddLnB1c2goeyBuYW1lLCBrZXlzLCBrZXlTdHJpbmcsIGRhdGU6IERhdGUubm93KCksIHNldDogb3B0aW9ucy5zZXQsIGdldDogb3B0aW9ucy5nZXQgfSk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIHRoZSBhdHRyaWJ1dGUgbGluayB3aXRoIHRoZSBmdW5jdGlvblxuICAgKiBcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGZuXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICogQHByb3RlY3RlZCBcbiAgICogQHJldHVybnMgeyp9XG4gICAqL1xuICBfX2F0dHJCeUZ1bmN0aW9uKG5hbWUsIGZuLCBvcHRpb25zID0ge30pIHsgICAgXG4gICAgbmFtZSA9IHV0aWxzLnRvQ2FtZWxDYXNlKG5hbWUpO1xuICAgIGxldCBjYWxsID0gb3B0aW9ucy5jYWxsT25TdGFydCA9PT0gdW5kZWZpbmVkPyB0aGlzLmF0dHJzLmhhc093blByb3BlcnR5KG5hbWUpOiBvcHRpb25zLmNhbGxPblN0YXJ0OyAgICBcblxuICAgIGlmICghdGhpcy5fX2F0dHJMaW5rc1tuYW1lXSkge1xuICAgICAgdGhpcy5fX2F0dHJMaW5rc1tuYW1lXSA9IFtdO1xuICAgIH1cblxuICAgIGxldCBsaW5rcyA9IHRoaXMuX19hdHRyTGlua3NbbmFtZV07XG4gICAgXG4gICAgZm9yIChsZXQgaSA9IGxpbmtzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICBsZXQgcmVzID0gbGlua3NbaV07XG5cbiAgICAgIGlmIChyZXMubmFtZSA9PSBuYW1lICYmIHJlcy5mbiA9PT0gZm4pIHtcbiAgICAgICAgcmVzLmRhdGUgPSBEYXRlLm5vdygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIHRoaXMuX19hdHRyTGlua3NbbmFtZV0ucHVzaCh7IG5hbWUsIGZuLCBkYXRlOiBEYXRlLm5vdygpIH0pO1xuXG4gICAgaWYgKG5hbWUgPT0gJyonICYmIG9wdGlvbnMuY2FsbE9uU3RhcnQgIT09IGZhbHNlKSB7XG4gICAgICBsZXQgYXR0cnNLZXlzID0gT2JqZWN0LmtleXModGhpcy5fX2F0dHJzKS5maWx0ZXIoayA9PiAhKHRoaXMuX19hdHRyc1trXSBpbnN0YW5jZW9mIEFraWxpLkV2ZW50RW1pdHRlcikpO1xuICAgICAgbGV0IHAgPSBbXTtcblxuICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSBhdHRyc0tleXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGxldCBrZXkgPSBhdHRyc0tleXNbaV07XG4gICAgICAgIGxldCB2YWwgPSB0aGlzLl9fYXR0cnNba2V5XTtcbiAgICAgICAgcC5wdXNoKEFraWxpLnVuaXNvbGF0ZSgoKSA9PiBmbi5jYWxsKHRoaXMsIHZhbCwgdXRpbHMudG9EYXNoQ2FzZShrZXkpKSkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUHJvbWlzZS5hbGwocCk7XG4gICAgfVxuICAgIFxuICAgIGlmIChjYWxsKSB7XG4gICAgICByZXR1cm4gQWtpbGkudW5pc29sYXRlKCgpID0+IGZuLmNhbGwodGhpcywgdGhpcy5hdHRyc1tuYW1lXSkpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgdGhlIGF0dHJpYnV0ZSBsaW5rIHdpdGggdGhlIHNjb3BlIHByb3BlcnR5XG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge3N0cmluZ3xzdHJpbmdbXX0ga2V5c1xuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX3VuYXR0ckJ5S2V5cyhuYW1lLCBrZXlzKSB7XG4gICAgaWYgKCFrZXlzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFlvdSBoYXZlIHRvIHBhc3MgdGhlIHNjb3BlIHByb3BlcnR5IG5hbWUgZm9yIGF0dHJpYnV0ZSBsaW5rIFwiJHtuYW1lfVwiYCk7XG4gICAgfVxuXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGtleXMpKSB7XG4gICAgICBrZXlzID0gW2tleXNdO1xuICAgIH1cblxuICAgIGNvbnN0IGtleVN0cmluZyA9IEFraWxpLmpvaW5CaW5kaW5nS2V5cyhrZXlzKTtcbiAgICBjb25zdCBhcnIgPSB0aGlzLl9fYXR0ckxpbmtzW2tleVN0cmluZ107XG5cbiAgICBpZiAoIWFyci5sZW5ndGgpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgZm9yIChsZXQgaSA9IGFyci5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgbGV0IHJlcyA9IGFycltpXTtcblxuICAgICAgaWYgKHJlcy5uYW1lICE9IG5hbWUgfHwgcmVzLmtleVN0cmluZyAhPSBrZXlTdHJpbmcpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGFyci5zcGxpY2UoaSwgMSk7XG4gICAgfVxuXG4gICAgaWYgKCFhcnIubGVuZ3RoKSB7XG4gICAgICBkZWxldGUgdGhpcy5fX2F0dHJMaW5rc1trZXlTdHJpbmddO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgdGhlIGF0dHJpYnV0ZSBsaW5rIHdpdGggdGhlIGZ1bmN0aW9uXG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSBcbiAgICogQHBhcmFtIHtmdW5jdGlvbn0gZm5cbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX191bmF0dHJCeUZ1bmN0aW9uKG5hbWUsIGZuKSB7XG4gICAgaWYgKCF0aGlzLl9fYXR0ckxpbmtzW25hbWVdKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgbGlua3MgPSB0aGlzLl9fYXR0ckxpbmtzW25hbWVdO1xuICAgIFxuICAgIGZvciAobGV0IGkgPSBsaW5rcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgbGV0IHJlcyA9IGxpbmtzW2ldO1xuXG4gICAgICBpZiAocmVzLm5hbWUgPT0gbmFtZSAmJiByZXMuZm4gPT09IGZuKSB7XG4gICAgICAgIGxpbmtzLnNwbGljZShpLCAxKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFsaW5rcy5sZW5ndGgpIHtcbiAgICAgIGRlbGV0ZSB0aGlzLl9fYXR0ckxpbmtzW25hbWVdO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayB0aGUga2V5IGlzIHN5c3RlbVxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2lzU3lzdGVtS2V5IChrZXkpIHtcbiAgICByZXR1cm4gKGtleS5tYXRjaCAmJiBrZXkubWF0Y2goJ15ffCMnKSkgfHwga2V5ID09ICdjb25zdHJ1Y3Rvcic7XG4gIH1cblxuICAvKipcbiAgICogTmVzdGVkIG9ic2VydmluZyBvZiB0aGUgdmFsdWVcbiAgICpcbiAgICogQHBhcmFtIHsqfSB2YWx1ZVxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBbc3RhcnRLZXlzXVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX25lc3RlZE9ic2VydmUgKHZhbHVlLCBzdGFydEtleXMpIHtcbiAgICBjb25zdCBvYnNlcnZlID0gKHZhbHVlLCBwYXJlbnRzKSA9PiB7XG4gICAgICBpZiAodHlwZW9mIHZhbHVlICE9ICdvYmplY3QnIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCF1dGlscy5pc1BsYWluT2JqZWN0KHZhbHVlKSAmJiAhdXRpbHMuaXNTY29wZVByb3h5KHZhbHVlKSAmJiAhKHZhbHVlIGluc3RhbmNlb2YgU2NvcGUpKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cblxuICAgICAgbGV0IHRhcmdldCA9IHZhbHVlO1xuXG4gICAgICBDSEVDS19QUk9YWTogaWYgKHZhbHVlLl9faXNQcm94eSkge1xuICAgICAgICB0YXJnZXQgPSB2YWx1ZS5fX3RhcmdldDtcblxuICAgICAgICBpZiAodGhpcy5fX2Rpc2FibGVQcm94eVJlZGVmaW5pbmcpIHtcbiAgICAgICAgICBicmVhayBDSEVDS19QUk9YWTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKFxuICAgICAgICAgIHZhbHVlLl9fY29tcG9uZW50ICE9PSB0aGlzIHx8XG4gICAgICAgICAgQWtpbGkuam9pbkJpbmRpbmdLZXlzKHBhcmVudHMpICE9IEFraWxpLmpvaW5CaW5kaW5nS2V5cyh2YWx1ZS5fX2tleXMpXG4gICAgICAgICkge1xuICAgICAgICAgIHRhcmdldCA9IHV0aWxzLmNvcHkodGFyZ2V0LCB7IG5lc3RlZDogZmFsc2UgfSk7XG4gICAgICAgICAgdmFsdWUgPSB0YXJnZXQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKCF0aGlzLl9fZGlzYWJsZVByb3h5UmVkZWZpbmluZyAmJiAhKHZhbHVlIGluc3RhbmNlb2YgU2NvcGUpKSB7XG4gICAgICAgIHRhcmdldCA9IHV0aWxzLmNvcHkodGFyZ2V0LCB7IG5lc3RlZDogZmFsc2UgfSApOyAgICAgICAgICBcbiAgICAgICAgdmFsdWUgPSB0YXJnZXQ7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHRhcmdldEtleXMgPSBPYmplY3Qua2V5cyh0YXJnZXQpO1xuXG4gICAgICBmb3IgKGxldCBpID0gMCwgbCA9IHRhcmdldEtleXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7ICAgIFxuICAgICAgICBjb25zdCBrID0gdGFyZ2V0S2V5c1tpXTtcbiAgICAgICAgY29uc3QgdmFsID0gdGFyZ2V0W2tdOyAgICAgICAgXG4gICAgICAgIGNvbnN0IGtleXMgPSBbXS5jb25jYXQocGFyZW50cywgW2tdKTsgICBcbiAgICAgICAgdGFyZ2V0W2tdID0gb2JzZXJ2ZSh2YWwsIGtleXMpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXZhbHVlLl9faXNQcm94eSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fX29ic2VydmUodmFsdWUsIHBhcmVudHMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfTtcblxuICAgIHJldHVybiBvYnNlcnZlKHZhbHVlLCBzdGFydEtleXMgfHwgW10pO1xuICB9XG5cbiAgIC8qKlxuICAgKiBDcmVhdGUgYW4gaXNvbGF0aW9uIG9iamVjdFxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBwYXJlbnRzXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICogQHJldHVybnMgeyp9XG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fY3JlYXRlSXNvbGF0aW9uT2JqZWN0IChwYXJlbnRzLCBrZXkpIHtcbiAgICBjb25zdCBrZXlzID0gcGFyZW50cy5sZW5ndGg/IFtwYXJlbnRzWzBdXTogW2tleV07XG4gICAgY29uc3QgaXNvbGF0aW9uSGFzaCA9IHRoaXMuX19jcmVhdGVLZXlzSGFzaChrZXlzKTtcblxuICAgIGlmICghQWtpbGkuX19pc29sYXRpb25baXNvbGF0aW9uSGFzaF0pIHtcbiAgICAgIEFraWxpLl9faXNvbGF0aW9uW2lzb2xhdGlvbkhhc2hdID0ge1xuICAgICAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCkuZ2V0VGltZSgpLFxuICAgICAgICBjb21wb25lbnQ6IHRoaXMsXG4gICAgICAgIGtleXNcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIEFraWxpLl9faXNvbGF0aW9uW2lzb2xhdGlvbkhhc2hdO1xuICB9XG5cbiAgLyoqXG4gICAqIFByZXBhcmUgdGhlIG5vZGUgdG8gdGhlIGJpbmRpbmdcbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGJpbmQgLSBieSBkZWZhdWx0IGlzIGNvbXBvbmVudC5fX2V2YWx1YXRpb24ubGlzdFxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBrZXlzXG4gICAqIEBwYXJhbSB7c3RyaW5nW119IHBhcmVudHNcbiAgICogQHBhcmFtIHsqfSB2YWx1ZVxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtub3RCaW5kaW5nPWZhbHNlXVxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtldmFsdWF0ZWQ9ZmFsc2VdXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fYmluZE5vZGUoYmluZCwgcmVhbENvbXBvbmVudCwga2V5cywgcGFyZW50cywgdmFsdWUsIG5vdEJpbmRpbmcgPSBmYWxzZSwgZXZhbHVhdGVkID0gZmFsc2UpIHtcbiAgICBjb25zdCBwYXJlbnRLZXlzU3RyaW5nID0gQWtpbGkuam9pbkJpbmRpbmdLZXlzKHBhcmVudHMpO1xuICAgIGxldCBjb21wb25lbnQgPSB0aGlzO1xuXG4gICAgaWYgKGJpbmQubGVuZ3RoICYmICFub3RCaW5kaW5nKSB7XG4gICAgICBsZXQgbCA9IGJpbmQubGVuZ3RoIC0gMTtcbiAgICAgIGxldCBkYXRhID0gYmluZFtsXTtcblxuICAgICAgaWYgKGRhdGEucmVhbENvbXBvbmVudCA9PT0gdGhpcyAmJiBkYXRhLmtleXNTdHJpbmcgPT0gcGFyZW50S2V5c1N0cmluZykge1xuICAgICAgICBjb21wb25lbnQgPSBkYXRhLmNvbXBvbmVudDtcbiAgICAgIH0gICAgICBcbiAgICAgIFxuICAgICAgaWYgKGRhdGEua2V5c1N0cmluZyA9PSBwYXJlbnRLZXlzU3RyaW5nICYmIGRhdGEuY29tcG9uZW50ID09PSBjb21wb25lbnQpIHtcbiAgICAgICAgYmluZC5zcGxpY2UobCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGJpbmQucHVzaCh7XG4gICAgICBjb21wb25lbnQsXG4gICAgICByZWFsQ29tcG9uZW50OiByZWFsQ29tcG9uZW50LFxuICAgICAga2V5c1N0cmluZzogQWtpbGkuam9pbkJpbmRpbmdLZXlzKGtleXMpLFxuICAgICAgcGFyZW50cyxcbiAgICAgIGtleXMsXG4gICAgICB2YWx1ZSxcbiAgICAgIGV2YWx1YXRlZCxcbiAgICAgIG5vdEJpbmRpbmdcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayB0aGUga2V5IGlzIHRoZSBzeXN0ZW1cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICogQHByb3RlY3RlZFxuICAgKi8gXG4gIF9faXNTeXN0ZW1CaW5kaW5nS2V5KGtleSkge1xuICAgIHJldHVybiBrZXkgPT0gJ19fZGF0YSc7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGEgYmluZGluZyBieSB0aGUga2V5c1xuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBrZXlzXG4gICAqIEByZXR1cm5zIHtvYmplY3R8bnVsbH1cbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19nZXRCaW5kKGtleXMpIHtcbiAgICByZXR1cm4gdXRpbHMuZ2V0UHJvcGVydHlCeUtleXMoa2V5cywgdGhpcy5fX2JpbmRpbmdzKSB8fCBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhbGwgbmVzdGVkIGJpbmRpbmdzIGJ5IHRoZSBrZXlzXG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBrZXlzIFxuICAgKi9cbiAgX19nZXRBbGxCaW5kcyhrZXlzKSB7XG4gICAgY29uc3Qgcm9vdCA9IHRoaXMuX19nZXRCaW5kKGtleXMpO1xuXG4gICAgaWYgKCFyb290KSB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuXG4gICAgbGV0IGRhdGEgPSBbXTtcblxuICAgIGNvbnN0IGNvbGxlY3QgPSBvYmogPT4ge1xuICAgICAgZGF0YSA9IGRhdGEuY29uY2F0KG9iai5fX2RhdGEgfHwgW10pO1xuXG4gICAgICBmb3IgKGxldCBrZXkgaW4gb2JqKSB7XG4gICAgICAgIGlmICghb2JqLmhhc093blByb3BlcnR5KGtleSkgfHwga2V5ID09ICdfX2RhdGEnKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBjb2xsZWN0KG9ialtrZXldKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb2xsZWN0KHJvb3QpO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhIGJpbmRpbmcgYnkgdGhlIGtleXNcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0ga2V5c1xuICAgKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAgICogQHJldHVybnMge29iamVjdHxudWxsfVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2dldEJvdW5kTm9kZShrZXlzLCBub2RlKSB7XG4gICAgY29uc3QgYmluZCA9ICB1dGlscy5nZXRQcm9wZXJ0eUJ5S2V5cyhrZXlzLCB0aGlzLl9fYmluZGluZ3MpO1xuXG4gICAgaWYgKCFiaW5kIHx8ICFiaW5kLl9fZGF0YSB8fCAhYmluZC5fX2RhdGEubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IGJpbmQuX19kYXRhLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgY29uc3QgZGF0YSA9IGJpbmQuX19kYXRhW2ldO1xuXG4gICAgICBpZiAoZGF0YS5ub2RlID09PSBub2RlKSB7XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgbm9kZSBwcm9wZXJ0eVxuICAgKlxuICAgKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0ga2V5c1xuICAgKiBAcGFyYW0geyp9IHZhbHVlXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2V2YWx1YXRlZD1mYWxzZV1cbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fc2V0Tm9kZVByb3BlcnR5KG5vZGUsIGtleXMsIHZhbHVlLCBldmFsdWF0ZWQgPSBmYWxzZSkge1xuICAgIGNvbnN0IHByb3AgPSB0aGlzLl9fZ2V0Tm9kZVByb3BlcnR5KG5vZGUsIGtleXMpOyAgICBcbiAgICBjb25zdCBoYXNoID0gdXRpbHMuY3JlYXRlSGFzaCh2YWx1ZSk7XG5cbiAgICBpZiAocHJvcCkge1xuICAgICAgbGV0IHJlcyA9IG5vZGUuX19jb21wb25lbnQuX19jb21wYXJlTm9kZVByb3BlcnR5VmFsdWUocHJvcCwgdmFsdWUpO1xuICAgICAgcHJvcC52YWx1ZSA9IHZhbHVlO1xuICAgICAgcHJvcC5oYXNoID0gaGFzaDtcbiAgICAgIHJldHVybiAhcmVzO1xuICAgIH1cbiAgICBcbiAgICBub2RlLl9fcHJvcGVydGllc1t0aGlzLl9fY3JlYXRlS2V5c0hhc2goa2V5cyldID0ge1xuICAgICAgY29tcG9uZW50OiB0aGlzLFxuICAgICAgdmFsdWUsXG4gICAgICBoYXNoLFxuICAgICAgbm9kZSxcbiAgICAgIGtleXMsXG4gICAgICBldmFsdWF0ZWQgIFxuICAgIH07XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIG5vZGUgcHJvcGVydHlcbiAgICpcbiAgICogQHBhcmFtIHtOb2RlfSBub2RlXG4gICAqIEBwYXJhbSB7c3RyaW5nW119IGtleXNcbiAgICogQHJldHVybnMge29iamVjdHxudWxsfVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2dldE5vZGVQcm9wZXJ0eShub2RlLCBrZXlzKSB7XG4gICAgcmV0dXJuIG5vZGUuX19wcm9wZXJ0aWVzW3RoaXMuX19jcmVhdGVLZXlzSGFzaChrZXlzKV0gfHwgbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZWxldGUgdGhlIG5vZGUgcHJvcGVydHlcbiAgICpcbiAgICogQHBhcmFtIHtOb2RlfSBub2RlXG4gICAqIEBwYXJhbSB7c3RyaW5nW119IGtleXNcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19kZWxldGVOb2RlUHJvcGVydHkobm9kZSwga2V5cykge1xuICAgIGNvbnN0IGhhc2ggPSBgJHt0aGlzLl9fc2NvcGUuX19uYW1lfS4ke0FraWxpLmpvaW5CaW5kaW5nS2V5cyhrZXlzKX1gO1xuICAgIGRlbGV0ZSBub2RlLl9fcHJvcGVydGllc1toYXNoXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYXAgdGhlIG5vZGVzXG4gICAqIFxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBmblxuICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fbWFwTm9kZXMoZm4sIG9wdGlvbnMgPSB7fSkge1xuICAgIG9wdGlvbnMgPSB7IHJvb3RBdHRyczogdHJ1ZSwgYXR0cnM6IHRydWUsIG5vZGU6IHRydWUsIGVsOiB0cnVlLCAuLi5vcHRpb25zIH07XG5cbiAgICBjb25zdCBmaW5kID0gZWwgPT4ge1xuICAgICAgaWYoIWVsKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYob3B0aW9ucy5hdHRycyAmJiAoZWwgIT09IHRoaXMuZWwgfHwgb3B0aW9ucy5yb290QXR0cnMpKSB7XG4gICAgICAgIGZvciAobGV0IGsgPSAwLCBhdHRycyA9IGVsLmF0dHJpYnV0ZXMsIGMgPSBhdHRycy5sZW5ndGg7IGsgPCBjOyBrKyspIHtcbiAgICAgICAgICBmbihhdHRyc1trXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgZm9yIChsZXQgaSA9IGVsLmNoaWxkTm9kZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IGVsLmNoaWxkTm9kZXNbaV07XG5cbiAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT0gMykge1xuICAgICAgICAgIG9wdGlvbnMubm9kZSAmJiBmbihub2RlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChub2RlLm5vZGVUeXBlID09IDEgJiYgIW5vZGUuX19ha2lsaSkge1xuICAgICAgICAgIGZpbmQobm9kZSk7XG4gICAgICAgICAgb3B0aW9ucy5lbCAmJiBmbihub2RlKTsgICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICAgIFxuICAgIGZpbmQodGhpcy5lbCk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGFsbCBub2Rlc1xuICAgKiBcbiAgICogQHJldHVybnMge05vZGVbXX1cbiAgICogQHByb3RlY3RlZCBcbiAgICovXG4gIF9fZ2V0QWxsTm9kZXMoKSB7XG4gICAgY29uc3Qgbm9kZXMgPSBbXTtcbiAgICB0aGlzLl9fbWFwTm9kZXMobm9kZSA9PiBub2Rlcy5wdXNoKG5vZGUpKTtcbiAgICByZXR1cm4gbm9kZXM7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBCaW5kIHRoZSBkYXRhIHdpdGggdGhlIGtleXNcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0ga2V5c1xuICAgKiBAcGFyYW0ge29iamVjdH0gZGF0YVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2JpbmQoa2V5cywgZGF0YSkge1xuICAgIHV0aWxzLnNldFByb3BlcnR5QnlLZXlzKGtleXMsIHRoaXMuX19iaW5kaW5ncywgKGxhc3QsIHZhbHVlKSA9PiB7XG4gICAgICBsZXQgb2JqID0geyBfX2RhdGE6IFtdIH07XG5cbiAgICAgIGlmICghbGFzdCkge1xuICAgICAgICByZXR1cm4gdmFsdWU/IHZhbHVlOiBvYmo7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcpIHtcbiAgICAgICAgb2JqID0gdmFsdWU7XG4gICAgICB9XG5cbiAgICAgIGlmICghb2JqLl9fZGF0YSkge1xuICAgICAgICBvYmouX19kYXRhID0gW107XG4gICAgICB9XG5cbiAgICAgIG9iai5fX2RhdGEucHVzaChkYXRhKTtcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogVW5iaW5kIHRoZSBkYXRhIGJ5IG5vZGVzXG4gICAqXG4gICAqIEBwYXJhbSB7Tm9kZXxOb2RlW119IG5vZGVzXG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fdW5iaW5kQnlOb2Rlcyhub2Rlcykge1xuICAgIG5vZGVzIGluc3RhbmNlb2YgTm9kZSAmJiAobm9kZXMgPSBbbm9kZXNdKTtcblxuICAgIGNvbnN0IHVuYmluZCA9IChvYmosIHBhcmVudCwga2V5KSA9PiB7XG4gICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcblxuICAgICAgZm9yIChsZXQgaiA9IDAsIGMgPSBrZXlzLmxlbmd0aDsgaiA8IGM7IGorKykge1xuICAgICAgICBjb25zdCBrID0ga2V5c1tqXTtcbiAgICAgICAgXG4gICAgICAgIGlmIChrID09ICdfX2RhdGEnKSB7XG4gICAgICAgICAgbGV0IGRhdGEgPSBvYmpba10gfHwgW107XG4gICAgICAgICAgbGV0IGwgPSBkYXRhLmxlbmd0aDtcblxuICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgYmluZCA9IGRhdGFbaV07XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChub2Rlcy5pbmRleE9mKGJpbmQubm9kZSkgIT0gLTEpIHtcbiAgICAgICAgICAgICAgZGVsZXRlIGJpbmQubm9kZTsgICAgICAgICAgICBcbiAgICAgICAgICAgICAgZGF0YS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICAgIGktLTtcbiAgICAgICAgICAgICAgbC0tO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghbCkge1xuICAgICAgICAgICAgZGVsZXRlIG9ialtrXTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIXRoaXMuX19pc1N5c3RlbUJpbmRpbmdLZXkoaykpIHtcbiAgICAgICAgICB1bmJpbmQob2JqW2tdLCBvYmosIGspO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYocGFyZW50ICYmICFPYmplY3Qua2V5cyhvYmopLmxlbmd0aCkge1xuICAgICAgICAgIGRlbGV0ZSBwYXJlbnRba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICB1bmJpbmQodGhpcy5fX2JpbmRpbmdzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgYWxsIHBhcmVudCBiaW5kaW5ncyB3aXRoIHRoZSBub2Rlc1xuICAgKiBcbiAgICogQHBhcmFtIHtOb2RlfE5vZGVbXX0gbm9kZXNcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX191bmJpbmRQYXJlbnRzQnlOb2Rlcyhub2RlcykgeyAgXG4gICAgZm9yKGxldCBpID0gMCwgbCA9IHRoaXMuX19wYXJlbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgY29uc3QgcGFyZW50ID0gdGhpcy5fX3BhcmVudHNbaV07ICAgICAgXG4gICAgICBwYXJlbnQgJiYgcGFyZW50Ll9fYWtpbGkgJiYgcGFyZW50Ll9fYWtpbGkuX191bmJpbmRCeU5vZGVzKG5vZGVzKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2xlYXIgdGhlIGxpbmtzXG4gICAqIFxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2NsZWFyU3RvcmVMaW5rcygpIHtcbiAgICBjb25zdCBsaW5rcyA9IEFraWxpLl9fc3RvcmVMaW5rcztcblxuICAgIGZvciAobGV0IGtleSBpbiBsaW5rcykge1xuICAgICAgY29uc3QgYXJyID0gbGlua3Nba2V5XTtcblxuICAgICAgZm9yIChsZXQgaSA9IGFyci5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICBjb25zdCBsaW5rID0gYXJyW2ldO1xuICBcbiAgICAgICAgaWYgKGxpbmsuY29tcG9uZW50ID09PSB0aGlzKSB7ICAgICAgICAgICAgICAgICBcbiAgICAgICAgICBhcnIuc3BsaWNlKGksIDEpOyAgICAgIFxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICghYXJyLmxlbmd0aCkge1xuICAgICAgICBkZWxldGUgbGlua3Nba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIHRoZSBjb21wb25lbnQgd2l0aG91dCB0aGUgY2hpbGRyZW4gcmVtb3ZpbmdcbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICAgKiBAcmV0dXJucyB7Tm9kZVtdfVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX3JlbW92ZShvcHRpb25zID0ge30pIHtcbiAgICB0aGlzLmF0dHJzLm9uUmVtb3ZlZCAmJiB0aGlzLmF0dHJzLm9uUmVtb3ZlZC50cmlnZ2VyKHVuZGVmaW5lZCwgeyBidWJibGVzOiBmYWxzZSB9KTsgXG4gICAgdGhpcy5yZW1vdmVkKCk7XG4gICAgY29uc3QgZGV0YWNoTm9kZXMgPSB0aGlzLl9fZGV0YWNoKHsgc2F2ZUJpbmRpbmdzOiB0cnVlLCBkZWluaXRpYWxpemVOb2RlczogdHJ1ZSB9KTtcbiAgICBjb25zdCBub2RlcyA9IFtdLmNvbmNhdChkZXRhY2hOb2RlcywgdGhpcy5fX2VtcHR5KHsgc2F2ZUJpbmRpbmdzOiB0cnVlIH0pKTsgXG4gICAgdGhpcy5fX3VuYmluZEJ5Tm9kZXMoZGV0YWNoTm9kZXMpO1xuICAgICFvcHRpb25zLnNhdmVCaW5kaW5ncyAmJiB0aGlzLl9fdW5iaW5kUGFyZW50c0J5Tm9kZXMobm9kZXMpOyAgICBcbiAgICB0aGlzLl9fY2xlYXJTdG9yZUxpbmtzKCk7ICBcbiAgICB0aGlzLl9fc2NvcGUuX19yZW1vdmUoKTtcbiAgICBkZWxldGUgdGhpcy5fX3Njb3BlO1xuICAgIGRlbGV0ZSB0aGlzLnNjb3BlOyBcbiAgICB0aGlzLmVsLnJlbW92ZSgpO1xuICAgIGRlbGV0ZSB0aGlzLmVsLl9fYWtpbGk7XG4gICAgZGVsZXRlIHRoaXMuZWw7ICAgIFxuICAgIGRlbGV0ZSB0aGlzLl9fcGFyZW50O1xuICAgIGRlbGV0ZSB0aGlzLl9fYXR0cmlidXRlT2Y7XG4gICAgZGVsZXRlIHRoaXMuX19ldmFsdWF0aW9uQ29tcG9uZW50O1xuICAgIGRlbGV0ZSB0aGlzLl9fZXZhbHVhdGlvblBhcmVudDsgICBcbiAgICBkZWxldGUgdGhpcy5fX3BhcmVudHM7XG4gICAgZGVsZXRlIHRoaXMuX19iaW5kaW5ncztcbiAgICBkZWxldGUgdGhpcy5fX2F0dHJMaW5rcztcbiAgICBkZWxldGUgdGhpcy5fX3N0b3JlTGlua3M7XG4gICAgZGVsZXRlIHRoaXMuX19hdHRycztcbiAgICBkZWxldGUgdGhpcy5hdHRycztcbiAgICB0aGlzLl9faXNSZW1vdmVkID0gdHJ1ZTtcbiAgICByZXR1cm4gbm9kZXM7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGFsbCBjaGlsZHJlblxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gICAqIEByZXR1cm5zIHtOb2RlW119XG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fcmVtb3ZlQ2hpbGRyZW4ob3B0aW9ucyA9IHt9KSB7XG4gICAgbGV0IG5vZGVzID0gW107XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX19jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgbGV0IGNoaWxkID0gdGhpcy5fX2NoaWxkcmVuW2ldO1xuICAgICAgbm9kZXMgPSBub2Rlcy5jb25jYXQoY2hpbGQuX19ha2lsaS5fX3JlbW92ZShvcHRpb25zKSk7XG4gICAgICBpLS07XG4gICAgfVxuXG4gICAgcmV0dXJuIG5vZGVzO1xuICB9XG5cbiAgLyoqXG4gICAqIERldGFjaCB0aGUgY29tcG9uZW50XG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICogQHJldHVybnMge29iamVjdH1cbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19kZXRhY2gob3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy5fX3BhcmVudCAmJiB0aGlzLl9fcGFyZW50Ll9fYWtpbGkuX19zcGxpY2VDaGlsZCh0aGlzLmVsKTtcbiAgICBjb25zdCBub2RlcyA9IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSB0aGlzLmVsLmF0dHJpYnV0ZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBsZXQgbm9kZSA9IHRoaXMuZWwuYXR0cmlidXRlc1tpXTtcblxuICAgICAgaWYobm9kZS5fX2luaXRpYWxpemVkKSB7XG4gICAgICAgIG5vZGVzLnB1c2gobm9kZSk7XG4gICAgICAgIG9wdGlvbnMuZGVpbml0aWFsaXplTm9kZXMgJiYgdGhpcy5fX2RlaW5pdGlhbGl6ZU5vZGUobm9kZSwgeyBzYXZlQmluZGluZ3M6IHRydWUgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgIW9wdGlvbnMuc2F2ZUJpbmRpbmdzICYmIHRoaXMuX191bmJpbmRQYXJlbnRzQnlOb2Rlcyhub2Rlcyk7XG4gICAgcmV0dXJuIG5vZGVzO1xuICB9XG5cbiAgLyoqXG4gICAqIENsZWFyIHRoZSBjb21wb25lbnQgaHRtbFxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gICAqIEByZXR1cm5zIHtOb2RlW119XG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIF9fZW1wdHkob3B0aW9ucyA9IHt9KSB7ICAgIFxuICAgIGNvbnN0IG5vZGVzID0gdGhpcy5fX3JlbW92ZUNoaWxkcmVuKHsgc2F2ZUJpbmRpbmdzOiB0cnVlIH0pO1xuICAgIFxuICAgIHRoaXMuX19tYXBOb2Rlcyhub2RlID0+IHsgICAgICBcbiAgICAgIGlmKG5vZGUubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICBub2RlLnJlbW92ZSgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmKCFub2RlLl9faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSAgICAgIFxuICAgICAgXG4gICAgICB0aGlzLl9fZGVpbml0aWFsaXplTm9kZShub2RlLCB7IHNhdmVCaW5kaW5nczogdHJ1ZSB9KTsgIFxuICAgICAgbm9kZXMucHVzaChub2RlKTtcbiAgICB9LCB7IHJvb3RBdHRyczogZmFsc2UgfSk7XG5cbiAgICB0aGlzLl9fdW5iaW5kQnlOb2Rlcyhub2Rlcyk7XG5cbiAgICAhb3B0aW9ucy5zYXZlQmluZGluZ3MgJiYgdGhpcy5fX3VuYmluZFBhcmVudHNCeU5vZGVzKG5vZGVzKTtcbiAgICB0aGlzLmVsLmlubmVySFRNTCA9ICcnO1xuICAgIHJldHVybiBub2RlcztcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIHBhcmVudCBjb21wb25lbnRzXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbc2VsZWN0b3I9JyddXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2ZpbmRBbGw9dHJ1ZV0gLSBnZXQgYXJyYXkgaWYgdHJ1ZVxuICAgKiBAcGFyYW0ge251bWJlcnxudW1iZXJbXX0gW2xldmVscz1udWxsXVxuICAgKiBAcmV0dXJucyB7Q29tcG9uZW50fENvbXBvbmVudFtdfVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2dldFBhcmVudChzZWxlY3RvciA9ICcnLCBmaW5kQWxsID0gZmFsc2UsIGxldmVscyA9IG51bGwpIHtcbiAgICBsZXQgYXJyID0gW107XG4gICAgbGV0IGxldmVsID0gMDtcblxuICAgIGlmICh0eXBlb2YgbGV2ZWxzICE9ICdvYmplY3QnKSB7XG4gICAgICBsZXZlbHMgPSBbbGV2ZWxzXTtcbiAgICB9XG5cbiAgICBjb25zdCBmaW5kID0gcGFyZW50ID0+IHtcbiAgICAgIGlmICghcGFyZW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKCFsZXZlbHMgfHwgbGV2ZWxzLmluZGV4T2YobGV2ZWwpICE9IC0xKSB7XG4gICAgICAgIGlmICghc2VsZWN0b3IgfHwgcGFyZW50Ll9fYWtpbGkubWF0Y2hlcyhzZWxlY3RvcikpIHtcbiAgICAgICAgICBpZiAoIWZpbmRBbGwpIHtcbiAgICAgICAgICAgIGFyci5wdXNoKHBhcmVudC5fX2FraWxpKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBhcnIucHVzaChwYXJlbnQuX19ha2lsaSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGV2ZWwrKztcbiAgICAgIGZpbmQocGFyZW50Ll9fYWtpbGkuX19wYXJlbnQpO1xuICAgIH07XG5cbiAgICBmaW5kKHRoaXMuX19wYXJlbnQpO1xuICAgIHJldHVybiBmaW5kQWxsPyBhcnI6IChhcnJbMF0gfHwgbnVsbCk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBjaGlsZCBjb21wb25lbnRzXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbc2VsZWN0b3I9JyddXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2ZpbmRBbGw9dHJ1ZV0gLSBnZXQgYXJyYXkgaWYgdHJ1ZVxuICAgKiBAcGFyYW0ge251bWJlcnxudW1iZXJbXX0gW2xldmVscz1udWxsXVxuICAgKiBAcmV0dXJucyB7Q29tcG9uZW50fENvbXBvbmVudFtdfVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX2dldENoaWxkcmVuKHNlbGVjdG9yID0gJycsIGZpbmRBbGwgPSB0cnVlLCBsZXZlbHMgPSBudWxsKSB7XG4gICAgbGV0IGFyciA9IFtdO1xuICAgIGxldCBsZXZlbCA9IDA7XG5cbiAgICBpZiAodHlwZW9mIGxldmVscyAhPSAnb2JqZWN0Jykge1xuICAgICAgbGV2ZWxzID0gW2xldmVsc107XG4gICAgfVxuXG4gICAgY29uc3QgZmluZCA9IGNoaWxkcmVuID0+IHtcbiAgICAgIGZvciAobGV0IGkgPSAwLCBsID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGxldCBjaGlsZCA9IGNoaWxkcmVuW2ldO1xuXG4gICAgICAgIGlmICghbGV2ZWxzIHx8IGxldmVscy5pbmRleE9mKGxldmVsKSAhPSAtMSkge1xuICAgICAgICAgIGlmICghc2VsZWN0b3IgfHwgY2hpbGQuX19ha2lsaS5tYXRjaGVzKHNlbGVjdG9yKSkge1xuICAgICAgICAgICAgaWYgKCFmaW5kQWxsKSB7XG4gICAgICAgICAgICAgIGFyci5wdXNoKGNoaWxkLl9fYWtpbGkpO1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFyci5wdXNoKGNoaWxkLl9fYWtpbGkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsZXZlbCsrO1xuXG4gICAgICBmb3IgKGxldCBpID0gMCwgbCA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICBmaW5kKGNoaWxkcmVuW2ldLl9fYWtpbGkuX19jaGlsZHJlbik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZpbmQodGhpcy5fX2NoaWxkcmVuKTtcbiAgICByZXR1cm4gZmluZEFsbD8gYXJyOiAoYXJyWzBdIHx8IG51bGwpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgbmVhcmVzdCBjb21wb25lbnRzXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbc2VsZWN0b3I9JyddXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2ZpbmRBbGw9dHJ1ZV0gLSBnZXQgYXJyYXkgaWYgdHJ1ZVxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtyaWdodD1mYWxzZV0gLSBmcm9tIHRoZSByaWdodCBzaWRlIGlmIHRydWVcbiAgICogQHJldHVybnMge0NvbXBvbmVudHxDb21wb25lbnRbXX1cbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19nZXROZWFyKHNlbGVjdG9yID0gJycsIGZpbmRBbGwgPSB0cnVlLCByaWdodCA9IGZhbHNlKSB7XG4gICAgaWYgKCF0aGlzLl9fcGFyZW50KSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBsZXQgbGV2ZWxFbGVtZW50cyA9IHRoaXMuX19wYXJlbnQuX19ha2lsaS5fX2NoaWxkcmVuLnNsaWNlKCk7XG4gICAgbGV0IGFyciA9IFtdO1xuICAgIHJpZ2h0ICYmIGxldmVsRWxlbWVudHMucmV2ZXJzZSgpO1xuXG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBsZXZlbEVsZW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgbGV0IGVsID0gbGV2ZWxFbGVtZW50c1tpXTtcblxuICAgICAgaWYgKGVsID09PSB0aGlzLmVsKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXNlbGVjdG9yIHx8IGVsLl9fYWtpbGkubWF0Y2hlcyhzZWxlY3RvcikpIHtcbiAgICAgICAgYXJyLnB1c2goZWwuX19ha2lsaSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgYXJyLnJldmVyc2UoKTtcblxuICAgIGlmICghZmluZEFsbCkge1xuICAgICAgcmV0dXJuIGFyci5sZW5ndGg/IGFyclswXTogbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJyO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSB0aGUgbGluayB3aXRoIHRoZSBzdG9yZVxuICAgKiBcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgXG4gICAqIEBwYXJhbSB7c3RyaW5nfHN0cmluZ1tdfGZ1bmN0aW9ufSBoYW5kbGVyXG4gICAqL1xuICBzdG9yZShuYW1lLCBoYW5kbGVyKSB7XG4gICAgaWYgKCF0aGlzLl9faXNNb3VudGVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYE1ldGhvZCBcInN0b3JlXCIgbXVzdCBiZSBjYWxsZWQgYWZ0ZXIgdGhlIGNvbXBpbGF0aW9uLiBGb3IgZXhhbXBsZSwgaW4gXCJjb21waWxlZFwiIG1ldGhvZC5gKTtcbiAgICB9XG5cbiAgICBjb25zdCBhcmdzID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuXG4gICAgaWYgKHR5cGVvZiBuYW1lID09ICdmdW5jdGlvbicpIHtcbiAgICAgIGFyZ3MudW5zaGlmdCgnKicpO1xuICAgICAgaGFuZGxlciA9IG5hbWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHR5cGVvZiBoYW5kbGVyID09PSAnZnVuY3Rpb24nPyB0aGlzLl9fc3RvcmVCeUZ1bmN0aW9uKC4uLmFyZ3MpOiB0aGlzLl9fc3RvcmVCeUtleXMoLi4uYXJncyk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIHRoZSBsaW5rIHdpdGggdGhlIGF0dHJpYnV0ZVxuICAgKiBcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgXG4gICAqIEBwYXJhbSB7c3RyaW5nfHN0cmluZ1tdfGZ1bmN0aW9ufSBoYW5kbGVyXG4gICAqL1xuICBhdHRyKG5hbWUsIGhhbmRsZXIpIHtcbiAgICBpZiAoIXRoaXMuX19pc01vdW50ZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgTWV0aG9kIFwiYXR0clwiIG11c3QgYmUgY2FsbGVkIGFmdGVyIHRoZSBjb21waWxhdGlvbi4gRm9yIGV4YW1wbGUsIGluIFwiY29tcGlsZWRcIiBtZXRob2QuYCk7XG4gICAgfVxuXG4gICAgY29uc3QgYXJncyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcblxuICAgIGlmICh0eXBlb2YgbmFtZSA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICBhcmdzLnVuc2hpZnQoJyonKTtcbiAgICAgIGhhbmRsZXIgPSBuYW1lO1xuICAgIH1cblxuICAgIHJldHVybiB0eXBlb2YgaGFuZGxlciA9PT0gJ2Z1bmN0aW9uJz8gdGhpcy5fX2F0dHJCeUZ1bmN0aW9uKC4uLmFyZ3MpOiB0aGlzLl9fYXR0ckJ5S2V5cyguLi5hcmdzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgdGhlIHN0b3JlIGxpbmtcbiAgICogXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIFxuICAgKiBAcGFyYW0ge3N0cmluZ3xzdHJpbmdbXXxmdW5jdGlvbn0gaGFuZGxlclxuICAgKi9cbiAgdW5zdG9yZShuYW1lLCBoYW5kbGVyKSB7XG4gICAgaWYgKCF0aGlzLl9faXNNb3VudGVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYE1ldGhvZCBcInVuc3RvcmVcIiBtdXN0IGJlIGNhbGxlZCBhZnRlciB0aGUgY29tcGlsYXRpb24uIEZvciBleGFtcGxlLCBpbiBcImNvbXBpbGVkXCIgbWV0aG9kLmApO1xuICAgIH1cblxuICAgIGNvbnN0IGFyZ3MgPSBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cbiAgICBpZiAodHlwZW9mIG5hbWUgPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYXJncy51bnNoaWZ0KCcqJyk7XG4gICAgICBoYW5kbGVyID0gbmFtZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHlwZW9mIGhhbmRsZXIgPT09ICdmdW5jdGlvbic/IHRoaXMuX191bnN0b3JlQnlGdW5jdGlvbiguLi5hcmd1bWVudHMpOiB0aGlzLl9fdW5zdG9yZUJ5S2V5cyguLi5hcmd1bWVudHMpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgYXR0cmlidXRlIGxpbmtcbiAgICogXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIFxuICAgKiBAcGFyYW0ge3N0cmluZ3xzdHJpbmdbXXxmdW5jdGlvbn0gaGFuZGxlclxuICAgKi9cbiAgdW5hdHRyKG5hbWUsIGhhbmRsZXIpIHtcbiAgICBpZiAoIXRoaXMuX19pc01vdW50ZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgTWV0aG9kIFwidW5hdHRyXCIgbXVzdCBiZSBjYWxsZWQgYWZ0ZXIgdGhlIGNvbXBpbGF0aW9uLiBGb3IgZXhhbXBsZSwgaW4gXCJjb21waWxlZFwiIG1ldGhvZC5gKTtcbiAgICB9XG5cbiAgICBjb25zdCBhcmdzID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuXG4gICAgaWYgKHR5cGVvZiBuYW1lID09ICdmdW5jdGlvbicpIHtcbiAgICAgIGFyZ3MudW5zaGlmdCgnKicpO1xuICAgICAgaGFuZGxlciA9IG5hbWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHR5cGVvZiBoYW5kbGVyID09PSAnZnVuY3Rpb24nPyB0aGlzLl9fdW5hdHRyQnlGdW5jdGlvbiguLi5hcmd1bWVudHMpOiB0aGlzLl9fdW5hdHRyQnlLZXlzKC4uLmFyZ3VtZW50cyk7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgdGhlIGNvbXBvbmVudCB1c2luZyB0aGUgc2VsZWN0b3JcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd8ZnVuY3Rpb259IHNlbGVjdG9yXG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgbWF0Y2hlcyhzZWxlY3Rvcikge1xuICAgIGlmICh0eXBlb2Ygc2VsZWN0b3IgPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIHNlbGVjdG9yKHRoaXMpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmVsLm1hdGNoZXMoc2VsZWN0b3IpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgY2xvc2VzdCBwYXJlbnQgY29tcG9uZW50IGJ5IHRoZSBzZWxlY3RvclxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ3xmdW5jdGlvbn0gW3NlbGVjdG9yPScnXVxuICAgKiBAcGFyYW0ge251bWJlcnxudW1iZXJbXX0gW2xldmVscz1udWxsXVxuICAgKiBAcmV0dXJucyB7Q29tcG9uZW50fVxuICAgKi9cbiAgcGFyZW50KHNlbGVjdG9yID0gJycsIGxldmVscyA9IG51bGwpIHtcbiAgICByZXR1cm4gdGhpcy5fX2dldFBhcmVudChzZWxlY3RvciwgZmFsc2UsIGxldmVscyk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGFuIGFycmF5IG9mIHBhcmVudCBjb21wb25lbnRzIGJ5IHRoZSBzZWxlY3RvclxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ3xmdW5jdGlvbn0gW3NlbGVjdG9yPScnXVxuICAgKiBAcGFyYW0ge251bWJlcnxudW1iZXJbXX0gW2xldmVscz1udWxsXVxuICAgKiBAcmV0dXJucyB7Q29tcG9uZW50W119XG4gICAqL1xuICBwYXJlbnRzKHNlbGVjdG9yID0gJycsIGxldmVscyA9IG51bGwpIHtcbiAgICByZXR1cm4gdGhpcy5fX2dldFBhcmVudChzZWxlY3RvciwgdHJ1ZSwgbGV2ZWxzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGNsb3Nlc3QgY2hpbGQgY29tcG9uZW50IGJ5IHRoZSBzZWxlY3RvclxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ3xmdW5jdGlvbn0gW3NlbGVjdG9yPScnXVxuICAgKiBAcGFyYW0ge251bWJlcnxudW1iZXJbXX0gW2xldmVscz1udWxsXVxuICAgKiBAcmV0dXJucyB7Q29tcG9uZW50fVxuICAgKi9cbiAgY2hpbGQoc2VsZWN0b3IgPSAnJywgbGV2ZWxzID0gbnVsbCkge1xuICAgIHJldHVybiB0aGlzLl9fZ2V0Q2hpbGRyZW4oc2VsZWN0b3IsIGZhbHNlLCBsZXZlbHMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhbiBhcnJheSBvZiBjaGlsZCBjb21wb25lbnRzIGJ5IHRoZSBzZWxlY3RvclxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ3xmdW5jdGlvbn0gW3NlbGVjdG9yPScnXVxuICAgKiBAcGFyYW0ge251bWJlcnxudW1iZXJbXX0gW2xldmVscz1udWxsXVxuICAgKiBAcmV0dXJucyB7Q29tcG9uZW50W119XG4gICAqL1xuICBjaGlsZHJlbihzZWxlY3RvciA9ICcnLCBsZXZlbHMgPSBudWxsKSB7XG4gICAgcmV0dXJuIHRoaXMuX19nZXRDaGlsZHJlbihzZWxlY3RvciwgdHJ1ZSwgbGV2ZWxzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgYW4gYXJyYXkgb2YgY29tcG9uZW50cyBsZWZ0IGZyb20gdGhlIGN1cnJlbnQgYnkgdGhlIHNlbGVjdG9yXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfGZ1bmN0aW9ufSBbc2VsZWN0b3I9JyddXG4gICAqIEByZXR1cm5zIHtDb21wb25lbnRbXX1cbiAgICovXG4gIGJlZm9yZShzZWxlY3RvciA9ICcnKSB7XG4gICAgcmV0dXJuIHRoaXMuX19nZXROZWFyKHNlbGVjdG9yLCB0cnVlLCBmYWxzZSk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGFuIGFycmF5IG9mIGNvbXBvbmVudHMgcmlnaHQgZnJvbSB0aGUgY3VycmVudCBieSB0aGUgc2VsZWN0b3JcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd8ZnVuY3Rpb259IFtzZWxlY3Rvcj0nJ11cbiAgICogQHJldHVybnMge0NvbXBvbmVudFtdfVxuICAgKi9cbiAgYWZ0ZXIoc2VsZWN0b3IgPSAnJykge1xuICAgIHJldHVybiB0aGlzLl9fZ2V0TmVhcihzZWxlY3RvciwgdHJ1ZSwgdHJ1ZSk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBjbG9zZXN0IGxlZnRjb21wb25lbnQgYnkgdGhlIHNlbGVjdG9yXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfGZ1bmN0aW9ufSBbc2VsZWN0b3I9JyddXG4gICAqIEByZXR1cm5zIHtDb21wb25lbnR9XG4gICAqL1xuICBwcmV2KHNlbGVjdG9yID0gJycpIHtcbiAgICByZXR1cm4gdGhpcy5fX2dldE5lYXIoc2VsZWN0b3IsIGZhbHNlLCBmYWxzZSk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBjbG9zZXN0IHJpZ2h0IGNvbXBvbmVudCBieSB0aGUgc2VsZWN0b3JcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd8ZnVuY3Rpb259IFtzZWxlY3Rvcj0nJ11cbiAgICogQHJldHVybnMge0NvbXBvbmVudH1cbiAgICovXG4gIG5leHQoc2VsZWN0b3IgPSAnJykge1xuICAgIHJldHVybiB0aGlzLl9fZ2V0TmVhcihzZWxlY3RvciwgZmFsc2UsIHRydWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSB0aGUgZWxlbWVudCBwYXJlbnRcbiAgICpcbiAgICogQHBhcmFtIHtFbGVtZW50fSBwYXJlbnRcbiAgICovXG4gIGFwcGVuZFRvKHBhcmVudCkgeyAgIFxuICAgIHBhcmVudC5hcHBlbmRDaGlsZCh0aGlzLmVsKTtcbiAgICByZXR1cm4gQWtpbGkuY29tcGlsZSh0aGlzLmVsLCB7IHJlY29tcGlsZTogeyBzZXRQYXJlbnRzOiB0cnVlLCBjaGVja0NoYW5nZXM6IGZhbHNlIH0gfSk7XG4gIH1cblxuICAvKipcbiAgICogQ2FuY2VsIHRoZSBjb21wb25lbnQgY29tcGlsYXRpb25cbiAgICovXG4gIGNhbmNlbCgpIHtcbiAgICB0aGlzLl9fY2FuY2VsbGVkID0gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb21waWxlIHRoZSBjb21wb25lbnQgYnV0IHByZXZlbnQgdGhlIGNvbXBpbGF0aW9uIGluc2lkZVxuICAgKi9cbiAgcHJldmVudCgpIHtcbiAgICB0aGlzLl9fcHJldmVudCA9IHRydWU7XG4gIH1cblxuICAvKipcbiAgICogQ2xlYXIgdGhlIGVsZW1lbnQgY29udGVudFxuICAgKlxuICAgKiBAcmV0dXJucyB7Kn1cbiAgICovXG4gIGVtcHR5KCkge1xuICAgIHJldHVybiB0aGlzLl9fZW1wdHkuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgdGhlIGVsZW1lbnRcbiAgICpcbiAgICogQHJldHVybnMgeyp9XG4gICAqL1xuICByZW1vdmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX19yZW1vdmUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIGNyZWF0ZWQoKSB7fVxuICBjb21waWxlZCgpIHt9XG4gIHJlY29tcGlsZWQoKSB7fVxuICByZXNvbHZlZCgpIHt9XG4gIHJlbW92ZWQoKSB7fVxuXG4gIGdldCB0cmFuc2l0aW9uKCkge1xuICAgIHJldHVybiAodGhpcy5fX3Njb3BlICYmIHRoaXMuX19zY29wZS5fX3RyYW5zaXRpb24pIHx8IG51bGw7XG4gIH1cbn0iLCJpbXBvcnQgQ29tcG9uZW50IGZyb20gJy4uL2NvbXBvbmVudC5qcyc7XG5pbXBvcnQgcm91dGVyIGZyb20gJy4uL3NlcnZpY2VzL3JvdXRlci5qcyc7XG5pbXBvcnQgQWtpbGkgZnJvbSAnLi4vYWtpbGkuanMnO1xuXG4vKipcbiAqIENvbXBvbmVudCBmb3IgbGlua3MuXG4gKiBJdCB3b3JrcyB3aXRoIHJvdXRlciBhcyB3ZWxsLiBcbiAqIFxuICoge0BsaW5rIGh0dHBzOi8vYWtpbGlqcy5jb20vZG9jcy9jb21wb25lbnRzI2RvY3NfbGlua3N9XG4gKiBcbiAqIEB0YWcgYVxuICogQHNlbGVjdG9yIGFbc3RhdGVdOm5vdChbdXJsXSksYVt1cmxdOm5vdChbc3RhdGVdKVxuICogQGF0dHIge3N0cmluZ30gW3VybF0gLSB1cmwgdG8gZ29cbiAqIEBhdHRyIHtzdHJpbmd9IFtzdGF0ZV0gLSBzdGF0ZSB0byBnbyB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL3JvdXRpbmd9XG4gKiBAYXR0ciB7b2JqZWN0fSBbcGFyYW1zXSAtIHBhcmFtcyBmb3IgdGhlIHN0YXRlIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3Mvcm91dGluZyNkb2NzX3N0YXRlX3BhcmFtc31cbiAqIEBhdHRyIHtvYmplY3R9IFtxdWVyeV0gLSBxdWVyeSBmb3IgdGhlIHN0YXRlIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3Mvcm91dGluZyNkb2NzX3N0YXRlX3F1ZXJ5fVxuICogQGF0dHIge3N0cmluZ30gW2hhc2hdIC0gaGFzaCBmb3IgdGhlIHN0YXRlIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3Mvcm91dGluZyNkb2NzX3N0YXRlX2hhc2h9XG4gKiBAYXR0ciB7b2JqZWN0fSBbb3B0aW9uc10gLSBvcHRpb25zIGZvciB0aGUgc3RhdGUge0BsaW5rIGh0dHBzOi8vYWtpbGlqcy5jb20vZG9jcy9yb3V0aW5nI2RvY3Nfcm91dGVyLmxvY2F0aW9ufVxuICogQHNjb3BlIHtib29sZWFufSBpc0FjdGl2ZVN0YXRlIC0gdGhlIHN0YXRlIGlzIGFjdGl2ZSBvciBub3QgXG4gKiBAc2NvcGUge2Jvb2xlYW59IGluQWN0aXZlU3RhdGUgLSB0aGUgc3RhdGUgaXMgcGFydCBvZiB0aGUgYWN0aXZlIHN0YXRlIG9yIG5vdFxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIG1hdGNoZXMgPSAnW3N0YXRlXTpub3QoW3VybF0pLFt1cmxdOm5vdChbc3RhdGVdKSc7XG4gIHN0YXRpYyBjb250cm9sQXR0cmlidXRlcyA9IHRydWU7XG5cbiAgc3RhdGljIGRlZmluZSgpIHtcbiAgICBBa2lsaS5jb21wb25lbnQoJ2EnLCB0aGlzKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICBzdXBlciguLi5hcmdzKTtcblxuICAgIHRoaXMuc3RhdGUgPSBudWxsO1xuICAgIHRoaXMucGFyYW1zID0ge307XG4gICAgdGhpcy5xdWVyeSA9IHt9O1xuICAgIHRoaXMub3B0aW9ucyA9IHt9O1xuICAgIHRoaXMuaXNVcmwgPSB0aGlzLmVsLmhhc0F0dHJpYnV0ZSgndXJsJyk7XG4gIH1cblxuICBjb21waWxlZCgpIHtcbiAgICB0aGlzLmVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIGlmICh0aGlzLmlzVXJsKSB7XG4gICAgICAgIHJvdXRlci5sb2NhdGlvbih0aGlzLmF0dHJzLnVybCwgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICByb3V0ZXIuc3RhdGUodGhpcy5zdGF0ZS5uYW1lLCB0aGlzLnBhcmFtcywgdGhpcy5xdWVyeSwgdGhpcy5oYXNoLCAgdGhpcy5vcHRpb25zKTtcbiAgICB9KTtcblxuICAgIHRoaXMub25TdGF0ZUNoYW5nZWQgPSAoKSA9PiB0aGlzLnN0YXRlICYmIHRoaXMuc2V0QWN0aXZpdHkoKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc3RhdGUtY2hhbmdlZCcsIHRoaXMub25TdGF0ZUNoYW5nZWQpO1xuXG4gICAgdGhpcy5hdHRyKCdzdGF0ZScsIHRoaXMuc2V0U3RhdGUpO1xuICAgIHRoaXMuYXR0cigncGFyYW1zJywgdGhpcy5zZXRQYXJhbXMpO1xuICAgIHRoaXMuYXR0cigncXVlcnknLCB0aGlzLnNldFF1ZXJ5KTtcbiAgICB0aGlzLmF0dHIoJ2hhc2gnLCB0aGlzLnNldEhhc2gpO1xuICAgIHRoaXMuYXR0cignb3B0aW9ucycsIHRoaXMuc2V0T3B0aW9ucyk7XG4gICAgdGhpcy5hdHRyKCd1cmwnLCB0aGlzLnNldFVybCk7XG4gICAgdGhpcy5hdHRyKCdzdGF0ZScsIHRoaXMucmVzZXRIcmVmLCB7IGNhbGxPblN0YXJ0OiBmYWxzZSB9KTtcbiAgICB0aGlzLmF0dHIoJ3BhcmFtcycsIHRoaXMucmVzZXRIcmVmLCB7IGNhbGxPblN0YXJ0OiBmYWxzZSB9KTtcbiAgICB0aGlzLmF0dHIoJ3F1ZXJ5JywgdGhpcy5yZXNldEhyZWYsIHsgY2FsbE9uU3RhcnQ6IGZhbHNlIH0pO1xuICAgIHRoaXMuYXR0cignaGFzaCcsIHRoaXMucmVzZXRIcmVmLCB7IGNhbGxPblN0YXJ0OiBmYWxzZSB9KTtcbiAgICB0aGlzLmF0dHIoJ3VybCcsIHRoaXMucmVzZXRIcmVmLCB7IGNhbGxPblN0YXJ0OiBmYWxzZSB9KTtcbiAgICB0aGlzLnJlc2V0SHJlZigpO1xuICB9XG5cbiAgcmVtb3ZlZCgpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignc3RhdGUtY2hhbmdlZCcsIHRoaXMub25TdGF0ZUNoYW5nZWQpO1xuICB9XG5cbiAgc2V0VXJsKHVybCkge1xuICAgIHRoaXMudXJsID0gdXJsO1xuICB9XG5cbiAgc2V0U3RhdGUobmFtZSkge1xuICAgIHRoaXMuc3RhdGUgPSB0aGlzLmdldFN0YXRlKG5hbWUpO1xuICAgIHRoaXMuc2V0QWN0aXZpdHkoKTtcbiAgfVxuXG4gIHNldEFjdGl2aXR5KCkge1xuICAgIHRoaXMuc2NvcGUuaXNBY3RpdmVTdGF0ZSA9IHJvdXRlci5pc0FjdGl2ZVN0YXRlKHRoaXMuc3RhdGUpO1xuICAgIHRoaXMuc2NvcGUuaW5BY3RpdmVTdGF0ZSA9IHJvdXRlci5pbkFjdGl2ZVN0YXRlKHRoaXMuc3RhdGUpO1xuICB9XG5cbiAgc2V0UGFyYW1zKHBhcmFtcykge1xuICAgIGlmICh0eXBlb2YgcGFyYW1zICE9ICdvYmplY3QnIHx8ICFwYXJhbXMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgUm91dGVyIHN0YXRlIHBhcmFtcyBtdXN0IGJlIGFuIG9iamVjdGApO1xuICAgIH1cblxuICAgIHRoaXMucGFyYW1zID0gcGFyYW1zO1xuICB9XG5cbiAgc2V0UXVlcnkocXVlcnkpIHtcbiAgICBpZiAodHlwZW9mIHF1ZXJ5ICE9ICdvYmplY3QnIHx8ICFxdWVyeSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBSb3V0ZXIgc3RhdGUgcXVlcnkgbXVzdCBiZSBhbiBvYmplY3RgKTtcbiAgICB9XG5cbiAgICB0aGlzLnF1ZXJ5ID0gcXVlcnk7XG4gIH1cblxuICBzZXRIYXNoKGhhc2gpIHtcbiAgICBpZiAodHlwZW9mIGhhc2ggIT0gJ3N0cmluZycgJiYgaGFzaCAhPT0gdW5kZWZpbmVkICYmIGhhc2ggIT09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgUm91dGVyIHN0YXRlIGhhc2ggbXVzdCBiZSBhIHN0cmluZ3xudWxsYCk7XG4gICAgfVxuXG4gICAgdGhpcy5oYXNoID0gaGFzaDtcbiAgfVxuXG4gIHNldE9wdGlvbnMob3B0aW9ucykge1xuICAgIGlmICh0eXBlb2Ygb3B0aW9ucyAhPSAnb2JqZWN0JyB8fCAhb3B0aW9ucykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBSb3V0ZXIgc3RhdGUgb3B0aW9ucyBtdXN0IGJlIGFuIG9iamVjdGApO1xuICAgIH1cblxuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cblxuICBnZXRTdGF0ZShuYW1lKSB7XG4gICAgbGV0IHN0YXRlID0gcm91dGVyLmdldFN0YXRlKG5hbWUpO1xuXG4gICAgaWYgKCFzdGF0ZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBOb3QgZm91bmQgcm91dGVyIHN0YXRlIHdpdGggbmFtZSBcIiR7bmFtZX1cImApO1xuICAgIH1cblxuICAgIHJldHVybiBzdGF0ZTtcbiAgfVxuXG4gIHJlc2V0SHJlZigpIHtcbiAgICBpZiAodGhpcy51cmwpIHtcbiAgICAgIHRoaXMuYXR0cnMuaHJlZiA9IHRoaXMudXJsO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMuYXR0cnMuaHJlZiA9IHJvdXRlci5jcmVhdGVTdGF0ZVVybCh0aGlzLnN0YXRlLCB0aGlzLnBhcmFtcywgdGhpcy5xdWVyeSwgdGhpcy5oYXNoLCB0aGlzLm9wdGlvbnMpO1xuICAgIH1cbiAgfVxufSIsImltcG9ydCBVcmwgZnJvbSAnLi91cmwuanMnO1xuaW1wb3J0IEFraWxpIGZyb20gJy4uL2FraWxpLmpzJztcblxuLyoqXG4gKiBDb21wb25lbnQgZm9yIGF1ZGlvIGVsZW1lbnRzLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2NvbXBvbmVudHMjZG9jc19pbWFnZSxfaWZyYW1lLF9lbWJlZCxfYXVkaW8sX3ZpZGVvLF90cmFjayxfc291cmNlLF9vYmplY3R9XG4gKiBcbiAqIEB0YWcgYXVkaW9cbiAqIEBhdHRyIHtzdHJpbmd9IFt1cmxdXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEF1ZGlvIGV4dGVuZHMgVXJsIHsgIFxuICBzdGF0aWMgZGVmaW5lKCkge1xuICAgIEFraWxpLmNvbXBvbmVudCgnYXVkaW8nLCB0aGlzKTtcbiAgfVxufSIsImltcG9ydCBUZXh0IGZyb20gJy4vdGV4dC5qcyc7XG5pbXBvcnQgQWtpbGkgZnJvbSAnLi4vYWtpbGkuanMnO1xuXG4vKipcbiAqIENvbXBvbmVudCBmb3IgZWxlbWVudHMgd2l0aCB0aGUgY29udGVudGVkaXRhYmxlIGF0dHJpYnV0ZS5cbiAqIFxuICoge0BsaW5rIGh0dHBzOi8vYWtpbGlqcy5jb20vZG9jcy9jb21wb25lbnRzI2RvY3NfY29udGVudGVkaXRhYmxlfVxuICogXG4gKiBAdGFnIGNvbnRlbnRcbiAqIEBzZWxlY3RvciBjb250ZW50LFtjb250ZW50ZWRpdGFibGVdXG4gKiBAYXR0ciBAc2VlIFRleHRcbiAqIEBhdHRyIHtib29sZWFufSBbZWRpdGFibGVdIC0gZWRpdGFibGUgb3Igbm90XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbnRlbnQgZXh0ZW5kcyBUZXh0IHtcbiAgc3RhdGljIGRlZmluZSgpIHtcbiAgICBBa2lsaS5jb21wb25lbnQoJ2NvbnRlbnQnLCB0aGlzKTtcbiAgICBBa2lsaS5hbGlhcygnW2NvbnRlbnRlZGl0YWJsZV0nLCAnY29udGVudCcpO1xuICB9XG5cbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpO1xuXG4gICAgaWYgKHRoaXMuZWwuaGFzQXR0cmlidXRlKCdlZGl0YWJsZScpKSB7XG4gICAgICB0aGlzLmVsLnNldEF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJywgdGhpcy5lbC5nZXRBdHRyaWJ1dGUoJ2VkaXRhYmxlJykpO1xuICAgICAgdGhpcy5lbC5yZW1vdmVBdHRyaWJ1dGUoJ2VkaXRhYmxlJyk7XG4gICAgfVxuXG4gICAgaWYgKGdldENvbXB1dGVkU3R5bGUodGhpcy5lbCkuZGlzcGxheSA9PSAnaW5saW5lJykge1xuICAgICAgdGhpcy5lbC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICB9XG5cbiAgICB0aGlzLnZhbHVlS2V5ID0gJ2lubmVySFRNTCc7XG4gIH1cblxuICBzZXRFbGVtZW50Rm9jdXMoKSB7XG4gICAgbGV0IHJhbmdlID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtcbiAgICBsZXQgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xuXG4gICAgcmFuZ2Uuc2VsZWN0Tm9kZUNvbnRlbnRzKHRoaXMuZWwpO1xuICAgIHJhbmdlLmNvbGxhcHNlKGZhbHNlKTtcbiAgICBzZWxlY3Rpb24ucmVtb3ZlQWxsUmFuZ2VzKCk7XG4gICAgc2VsZWN0aW9uLmFkZFJhbmdlKHJhbmdlKTtcbiAgICB0aGlzLmVsLmZvY3VzKCk7XG4gIH1cbn0iLCJpbXBvcnQgVXJsIGZyb20gJy4vdXJsLmpzJztcbmltcG9ydCBBa2lsaSBmcm9tICcuLi9ha2lsaS5qcyc7XG5cbi8qKlxuICogQ29tcG9uZW50IGZvciBlbWJlZCBlbGVtZW50cy5cbiAqIFxuICoge0BsaW5rIGh0dHBzOi8vYWtpbGlqcy5jb20vZG9jcy9jb21wb25lbnRzI2RvY3NfaW1hZ2UsX2lmcmFtZSxfZW1iZWQsX2F1ZGlvLF92aWRlbyxfdHJhY2ssX3NvdXJjZSxfb2JqZWN0fVxuICogXG4gKiBAdGFnIGVtYmVkXG4gKiBAYXR0ciB7c3RyaW5nfSBbdXJsXVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbWJlZCBleHRlbmRzIFVybCB7ICBcbiAgc3RhdGljIGRlZmluZSgpIHtcbiAgICBBa2lsaS5jb21wb25lbnQoJ2VtYmVkJywgdGhpcyk7XG4gIH1cbn0iLCJpbXBvcnQgQ29tcG9uZW50IGZyb20gJy4uL2NvbXBvbmVudC5qcyc7XG5pbXBvcnQgQWtpbGkgZnJvbSAnLi4vYWtpbGkuanMnO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcblxuLyoqXG4gKiBDb21wb25lbnQgZm9yIGxvb3BzLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2NvbXBvbmVudHMjZG9jc19sb29wc31cbiAqIFxuICogQHRhZyBmb3JcbiAqIEBzZWxlY3RvciBmb3JbaW5dLG9sW2luXSx1bFtpbl0sdGhlYWRbaW5dLHRib2R5W2luXSx0Zm9vdFtpbl1cbiAqIEBhdHRyIHtvYmplY3R8YXJyYXl9IGluIC0gZGF0YSB0byBjcmVhdGUgdGhlIGxvb3BcbiAqIEBtZXNzYWdlIHtvYmplY3R8YXJyYXl9IG91dCAtIHNlbnQgb24gdGhlIGRhdGEgY2hhbmdlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBtYXRjaGVzID0gJ1tpbl0nO1xuICBzdGF0aWMgZXZlbnRzID0gWydvdXQnXTtcblxuICBzdGF0aWMgZGVmaW5lKCkge1xuICAgIEFraWxpLmNvbXBvbmVudCgnZm9yJywgdGhpcyk7XG4gICAgQWtpbGkuY29tcG9uZW50KCdvbCcsIHRoaXMpO1xuICAgIEFraWxpLmNvbXBvbmVudCgndWwnLCB0aGlzKTtcbiAgICBBa2lsaS5jb21wb25lbnQoJ3RoZWFkJywgdGhpcyk7XG4gICAgQWtpbGkuY29tcG9uZW50KCd0Ym9keScsIHRoaXMpO1xuICAgIEFraWxpLmNvbXBvbmVudCgndGZvb3QnLCB0aGlzKTtcbiAgICBBa2lsaS5jb21wb25lbnQoJ3RyJywgdGhpcy5Mb29wKTtcbiAgICBBa2lsaS5jb21wb25lbnQoJ2xvb3AnLCB0aGlzLkxvb3ApO1xuICB9XG5cbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpO1xuICAgIFxuICAgIHRoaXMuaXRlcmF0b3JzID0gW107XG4gICAgdGhpcy5pdGVyYXRvckVsID0gbnVsbDtcbiAgICB0aGlzLnJlc2V0KCk7XG4gIH1cblxuICBfX3ByZXBhcmVBdHRyaWJ1dGVJbihub2RlLCB2YWx1ZSkgeyAgXG4gICAgaWYoKG5vZGUgaW5zdGFuY2VvZiB3aW5kb3cuQXR0cikgJiYgbm9kZS5uYW1lID09ICdpbicpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gc3VwZXIuX19wcmVwYXJlQXR0cmlidXRlSW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIF9fY29tcGFyZU5vZGVQcm9wZXJ0eVZhbHVlKHByb3AsIHZhbHVlKSB7XG4gICAgY29uc3Qgbm9kZSA9IHByb3Aubm9kZTtcblxuICAgIGlmKChub2RlIGluc3RhbmNlb2Ygd2luZG93LkF0dHIpICYmIG5vZGUubmFtZSA9PSAnaW4nICYmIHByb3AudmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBzdXBlci5fX2NvbXBhcmVOb2RlUHJvcGVydHlWYWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgY3JlYXRlZCgpIHsgICAgXG4gICAgdGhpcy5jcmVhdGVJdGVyYXRvcigpOyAgICBcbiAgfVxuXG4gIGNvbXBpbGVkKCkge1xuICAgIHRoaXMuYXR0cignaW4nLCB0aGlzLmRyYXcpO1xuICB9XG5cbiAgcmVtb3ZlZCgpIHtcbiAgICBzdXBlci5yZW1vdmVkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgdGhpcy5pdGVyYXRvckVsICYmIHRoaXMuaXRlcmF0b3JFbC5yZW1vdmUoKTtcbiAgICBkZWxldGUgdGhpcy5odG1sO1xuICAgIGRlbGV0ZSB0aGlzLml0ZXJhdG9ycztcbiAgICBkZWxldGUgdGhpcy5pdGVyYXRvckVsOyBcbiAgICBkZWxldGUgdGhpcy5fX2l0ZXJhdG9yO1xuICAgIGRlbGV0ZSB0aGlzLl9fdmFsdWU7XG4gIH1cblxuICBjcmVhdGVJdGVyYXRvcigpIHtcbiAgICBsZXQgZWw7XG5cbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IHRoaXMuZWwuY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBsZXQgY2hpbGQgPSB0aGlzLmVsLmNoaWxkcmVuW2ldO1xuXG4gICAgICBpZiAoY2hpbGQuZ2V0QXR0cmlidXRlKCdjb21wb25lbnQnKSA9PSAnbG9vcCcpIHtcbiAgICAgICAgZWwgPSBjaGlsZDtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIGVsID0gY2hpbGQ7XG4gICAgfVxuXG4gICAgaWYgKCFlbCkge1xuICAgICAgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsb29wJyk7ICAgICAgXG4gICAgICBlbC5pbm5lckhUTUwgPSB0aGlzLmVsLmlubmVySFRNTDsgXG4gICAgICB0aGlzLmVsLmlubmVySFRNTCA9ICcnO1xuICAgICAgdGhpcy5lbC5hcHBlbmRDaGlsZChlbCk7XG4gICAgfVxuXG4gICAgbGV0IGNvbXBvbmVudE5hbWUgPSBlbC5nZXRBdHRyaWJ1dGUoJ2NvbXBvbmVudCcpO1xuXG4gICAgaWYgKGNvbXBvbmVudE5hbWUgIT0gJ2xvb3AnKSB7XG4gICAgICBsZXQgY29tcG9uZW50ID0gQWtpbGkuY29tcG9uZW50KGNvbXBvbmVudE5hbWUgfHwgZWwudGFnTmFtZSk7XG5cbiAgICAgIGlmICghY29tcG9uZW50KSB7XG4gICAgICAgIGVsLnNldEF0dHJpYnV0ZSgnY29tcG9uZW50JywgJ2xvb3AnKTtcbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKCEoY29tcG9uZW50LnByb3RvdHlwZSBpbnN0YW5jZW9mIEZvcikpIHtcbiAgICAgICAgbGV0IG1hc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsb29wJyk7XG4gICAgICAgIG1hc2suYXBwZW5kQ2hpbGQoZWwpO1xuICAgICAgICBlbCA9IG1hc2s7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5odG1sID0gZWwuaW5uZXJIVE1MO1xuICAgIHRoaXMuaXRlcmF0b3JFbCA9IHRoaXMuY3JlYXRlSXRlcmF0b3JFbGVtZW50KGVsLm91dGVySFRNTCk7XG4gICAgZWwucmVtb3ZlKCk7XG4gIH1cblxuICBjcmVhdGVJdGVyYXRvckVsZW1lbnQoaHRtbCkge1xuICAgIGxldCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RlbXBsYXRlJyk7XG4gICAgZWwuaW5uZXJIVE1MID0gaHRtbDtcbiAgICByZXR1cm4gZWwuY29udGVudC5maXJzdENoaWxkO1xuICB9XG5cbiAgbG9vcChrZXksIHZhbHVlLCBpbmRleCkge1xuICAgIHRoaXMuX19pbmRleCA9IGluZGV4O1xuICAgIHRoaXMuX19rZXkgPSBrZXk7XG4gICAgdGhpcy5fX3ZhbHVlID0gdmFsdWU7ICAgIFxuICAgIHRoaXMuX19oYXNoID0gdXRpbHMuY3JlYXRlSGFzaCh2YWx1ZSk7XG5cbiAgICBpZih0aGlzLml0ZXJhdG9ycy5sZW5ndGggPiBpbmRleCkge1xuICAgICAgbGV0IGl0ZXJhdG9yID0gdGhpcy5pdGVyYXRvcnNbaW5kZXhdOyAgICAgICAgXG4gICAgICBpdGVyYXRvci5zZXRJbmRleCh0aGlzLl9faW5kZXggPT09IGl0ZXJhdG9yLmluZGV4KTsgICAgIFxuICAgICAgaXRlcmF0b3Iuc2V0S2V5KHRoaXMuX19rZXkgPT09IGl0ZXJhdG9yLmtleSk7XG4gICAgICBpdGVyYXRvci5zZXRWYWx1ZSh1dGlscy5jb21wYXJlKHRoaXMuX19oYXNoLCBpdGVyYXRvci5oYXNoKSk7XG4gICAgICB0aGlzLl9fcHJvbWlzZXMucHVzaChBa2lsaS5jb21waWxlKGl0ZXJhdG9yLmVsLCB7IFxuICAgICAgICByZWNvbXBpbGU6IHsgXG4gICAgICAgICAgY2hlY2tDaGFuZ2VzOiB0cnVlXG4gICAgICAgIH0gXG4gICAgICB9KSk7XG4gICAgICByZXR1cm4gaXRlcmF0b3I7XG4gICAgfVxuICAgIFxuICAgIGxldCBlbCA9IHRoaXMuaXRlcmF0b3JFbC5jbG9uZU5vZGUoKTtcbiAgICBlbC5pbm5lckhUTUwgPSB0aGlzLmh0bWw7XG4gICAgdGhpcy5lbC5hcHBlbmRDaGlsZChlbCk7XG4gICAgdGhpcy5fX3Byb21pc2VzLnB1c2goQWtpbGkuY29tcGlsZShlbCkpO1xuICAgIHRoaXMuaXRlcmF0b3JzLnB1c2goZWwuX19ha2lsaSk7XG4gICAgcmV0dXJuIGVsLl9fYWtpbGk7XG4gIH1cblxuICBkcmF3KGRhdGEpIHtcbiAgICBpZiAodHlwZW9mIGRhdGEgIT0gJ29iamVjdCcgfHwgZGF0YSA9PT0gbnVsbCkge1xuICAgICAgaWYgKEFraWxpLm9wdGlvbnMuZGVidWcpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgY29uc29sZS53YXJuKGBcIkZvclwiIGNvbXBvbmVudCBcImluXCIgYXR0cmlidXRlIHZhbHVlIHR5cGUgbXVzdCBiZSBhbiBvYmplY3QvYXJyYXlgKTsgICAgICAgIFxuICAgICAgfVxuXG4gICAgICBkYXRhID0gW107XG4gICAgfVxuXG4gICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICBsZXQgaW5kZXggPSAwO1xuICAgIGNvbnN0IGNoaWxkcmVuID0gW10uc2xpY2UuY2FsbCh0aGlzLmVsLmNoaWxkcmVuKTsgXG4gICAgdGhpcy5pdGVyYXRvcnMuc29ydCgoYSwgYikgPT4gY2hpbGRyZW4uaW5kZXhPZihhLmVsKSAtIGNoaWxkcmVuLmluZGV4T2YoYi5lbCkpO1xuICAgIHRoaXMuX19jaGlsZHJlbi5zb3J0KChhLCBiKSA9PiBjaGlsZHJlbi5pbmRleE9mKGEpIC0gY2hpbGRyZW4uaW5kZXhPZihiKSk7XG4gICAgY29uc3QgbG9vcCA9IChrZXksIHZhbHVlLCBpbmRleCkgPT4gdGhpcy5sb29wKGtleSwgdmFsdWUsIGluZGV4KS5pdGVyYXRlKGluZGV4KTtcblxuICAgIGlmKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgIGZvciAobGV0IGwgPSBkYXRhLmxlbmd0aDsgaW5kZXggPCBsOyBpbmRleCsrKSB7XG4gICAgICAgIGxvb3AoaW5kZXgsIGRhdGFbaW5kZXhdLCBpbmRleCk7XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGRhdGEpO1xuXG4gICAgICBmb3IgKGxldCBsID0ga2V5cy5sZW5ndGg7IGluZGV4IDwgbDsgaW5kZXgrKykge1xuICAgICAgICBsZXQga2V5ID0ga2V5c1tpbmRleF07XG4gICAgICAgIGxvb3Aoa2V5LCBkYXRhW2tleV0sIGluZGV4KTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgZm9yIChsZXQgaSA9IGluZGV4LCBsID0gdGhpcy5pdGVyYXRvcnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBsZXQgaXRlcmF0b3IgPSB0aGlzLml0ZXJhdG9yc1tpXTtcbiAgICAgIGl0ZXJhdG9yLl9fcmVtb3ZlKCk7XG4gICAgICB0aGlzLml0ZXJhdG9ycy5zcGxpY2UoaSwgMSk7XG4gICAgICBsLS07XG4gICAgICBpLS07XG4gICAgfVxuXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKHRoaXMuX19wcm9taXNlcykudGhlbigoKSA9PiB7XG4gICAgICB0aGlzLnJlc2V0KCk7XG4gICAgICB0aGlzLmF0dHJzLm9uT3V0LnRyaWdnZXIoZGF0YSwgeyBidWJibGVzOiB0cnVlIH0pO1xuICAgIH0pOyAgICBcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXNldCB0aGUgaW5pdGlhbCBzdGF0ZVxuICAgKi9cbiAgcmVzZXQoKSB7XG4gICAgdGhpcy5fX2l0ZXJhdG9yID0gbnVsbDtcbiAgICB0aGlzLl9faW5kZXggPSAwO1xuICAgIHRoaXMuX19rZXkgPSAnJztcbiAgICB0aGlzLl9fdmFsdWUgPSBudWxsO1xuICAgIHRoaXMuX19oYXNoID0gJyc7XG4gICAgdGhpcy5fX3Byb21pc2VzID0gW107XG4gIH0gIFxufVxuXG4vKipcbiAqIENvbXBvbmVudCBmb3IgbG9vcHMuXG4gKiBcbiAqIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3MvY29tcG9uZW50cyNkb2NzX2xvb3BzfVxuICogXG4gKiBAdGFnIGxvb3BcbiAqIEBzZWxlY3RvciBsb29wLHRyXG4gKiBAYXR0ciBAc2VlIEZvclxuICogQHNjb3BlIHsqfSBsb29wVmFsdWUgLSBkYXRhIGl0ZW0ncyB2YWx1ZSBvZiB0aGUgY3VycmVudCBpdGVyYXRpb24gXG4gKiBAc2NvcGUge3N0cmluZ3xudW1iZXJ9IGxvb3BLZXkgLSBrZXkgb2YgdGhlIGl0ZXJhdGlvblxuICogQHNjb3BlIHtudW1iZXJ9IGxvb3BJbmRleCAtIGluZGV4IG9mIHRoZSBpdGVyYXRpb25cbiAqL1xuZXhwb3J0IGNsYXNzIExvb3AgZXh0ZW5kcyBGb3Ige1xuICBzdGF0aWMgbWF0Y2hlcyA9ICcnO1xuICBzdGF0aWMgY29udHJvbEF0dHJpYnV0ZXMgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICBzdXBlciguLi5hcmdzKTtcblxuICAgIHRoaXMuZm9yID0gbnVsbDtcbiAgICB0aGlzLmh0bWwgPSB0aGlzLmVsLmlubmVySFRNTDtcbiAgICB0aGlzLmlzRm9yID0gdGhpcy5lbC5oYXNBdHRyaWJ1dGUoJ2luJyk7XG5cbiAgICBpZiAoIXRoaXMuaXNGb3IgJiYgISh0aGlzLmVsLnBhcmVudE5vZGUuX19ha2lsaSBpbnN0YW5jZW9mIEZvcikpIHtcbiAgICAgIHRoaXMuY2FuY2VsKCk7XG4gICAgfVxuICB9XG5cbiAgY3JlYXRlZCgpIHtcbiAgICB0aGlzLl9fcGFyZW50Ll9fYWtpbGkuX19pdGVyYXRvciA9IHRoaXM7XG4gICAgdGhpcy5mb3IgPSB0aGlzLl9fcGFyZW50Ll9fYWtpbGk7XG4gICAgdGhpcy5zZXRJbmRleCh0cnVlKTtcbiAgICB0aGlzLnNldEtleSh0cnVlKTtcbiAgICB0aGlzLnNldFZhbHVlKHRydWUpO1xuXG4gICAgaWYodGhpcy5pc0Zvcikge1xuICAgICAgcmV0dXJuIHN1cGVyLmNyZWF0ZWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG4gIH1cblxuICBjb21waWxlZCgpIHtcbiAgICBpZih0aGlzLmlzRm9yKSB7XG4gICAgICByZXR1cm4gc3VwZXIuY29tcGlsZWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG4gIH1cblxuICByZW1vdmVkKCkge1xuICAgIHN1cGVyLnJlbW92ZWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBkZWxldGUgdGhpcy5mb3I7XG4gICAgZGVsZXRlIHRoaXMudmFsdWU7XG4gIH1cblxuICBzZXRJbmRleCh0YXJnZXQpIHtcbiAgICB0aGlzLmluZGV4ID0gdGhpcy5mb3IuX19pbmRleDtcbiAgICB0aGlzLnNjb3BlLl9fc2V0KCdsb29wSW5kZXgnLCB0aGlzLmluZGV4LCB7IHRhcmdldCB9KTtcbiAgfVxuXG4gIHNldEtleSh0YXJnZXQpIHtcbiAgICB0aGlzLmtleSA9IHRoaXMuZm9yLl9fa2V5O1xuICAgIHRoaXMuc2NvcGUuX19zZXQoJ2xvb3BLZXknLCB0aGlzLmtleSwgeyB0YXJnZXQgfSk7XG4gIH1cblxuICBzZXRWYWx1ZSh0YXJnZXQpIHtcbiAgICB0aGlzLnZhbHVlID0gdGhpcy5mb3IuX192YWx1ZTtcbiAgICB0aGlzLnNjb3BlLl9fc2V0KCdsb29wVmFsdWUnLCB0aGlzLnZhbHVlLCB7IHRhcmdldCwgc2F2ZVByb3h5OiB0cnVlIH0pO1xuICAgIHRoaXMuaGFzaCA9IHRoaXMuZm9yLl9faGFzaDtcbiAgfVxuXG4gIGl0ZXJhdGUoKSB7fVxufVxuXG5Gb3IuTG9vcCA9IExvb3A7IiwiaW1wb3J0IENvbXBvbmVudCBmcm9tICcuLi9jb21wb25lbnQuanMnO1xuaW1wb3J0IEFraWxpIGZyb20gJy4uL2FraWxpLmpzJztcblxuLyoqXG4gKiBDb21wb25lbnQgZm9yIGNvbmRpdGlvbmFsIHN0YXRlbWVudHMuXG4gKiBcbiAqIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3MvY29tcG9uZW50cyNkb2NzX2NvbmRpdGlvbmFsX3N0YXRlbWVudHN9XG4gKiBcbiAqIEB0YWcgaWZcbiAqIEBzZWxlY3RvciBpZltpc11cbiAqIEBhdHRyIHtib29sZWFufSBpcyAtIHNob3cgdGhlIGVsZW1lbnQgY29udGVudCBvciBub3RcbiAqIEBhdHRyIHtib29sZWFufSByZWNyZWF0ZSAtIGRlbGV0ZSB0aGUgY29udGVudCBhbmQgcmVjcmVhdGUgb3IganVzdCBzaG93L2hpZGUgXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElmIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHRyYW5zcGFyZW50ID0gdHJ1ZTsgXG4gIHN0YXRpYyBtYXRjaGVzID0gJ1tpc10nO1xuICBzdGF0aWMgYm9vbGVhbkF0dHJpYnV0ZXMgPSBbJ3JlY3JlYXRlJ107XG5cbiAgc3RhdGljIGRlZmluZSgpIHtcbiAgICBBa2lsaS5jb21wb25lbnQoJ2lmJywgdGhpcyk7XG4gICAgQWtpbGkuY29tcG9uZW50KCdlbHNlLWlmJywgdGhpcy5FbHNlSWYpO1xuICAgIEFraWxpLmNvbXBvbmVudCgnZWxzZScsIHRoaXMuRWxzZSk7XG4gIH1cblxuICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgc3VwZXIoLi4uYXJncyk7XG5cbiAgICB0aGlzLmh0bWwgPSB0aGlzLmVsLmlubmVySFRNTDtcbiAgICB0aGlzLmVsLmlubmVySFRNTCA9ICcnO1xuICAgIHRoaXMuc3RhdGUgPSBmYWxzZTtcbiAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlO1xuICAgIHRoaXMucmVjcmVhdGUgPSBmYWxzZTtcbiAgICB0aGlzLmlzQ29tcGlsZWQgPSBmYWxzZTtcbiAgICB0aGlzLmRpc3BsYXkgPSBnZXRDb21wdXRlZFN0eWxlKHRoaXMuZWwpLmRpc3BsYXk7XG4gIH1cblxuICBjb21waWxlZCgpIHtcbiAgICB0aGlzLmF0dHIoJ3JlY3JlYXRlJywgdGhpcy5zZXRSZWNyZWF0aW9uKTtcbiAgICByZXR1cm4gdGhpcy5hdHRyKCdpcycsIHRoaXMuc2V0SXMpO1xuICB9XG5cbiAgc2V0SXModmFsKSB7XG4gICAgdGhpcy5zdGF0ZSA9ICEhdmFsO1xuICAgIHJldHVybiB0aGlzLnNldFN0YXRlKCk7XG4gIH1cblxuICBzZXRBY3Rpdml0eShhY3RpdmUpIHtcbiAgICB0aGlzLmFjdGl2ZSA9IGFjdGl2ZTtcbiAgfVxuXG4gIHNldFJlY3JlYXRpb24ocmVjcmVhdGUpIHtcbiAgICB0aGlzLnJlY3JlYXRlID0gcmVjcmVhdGU7XG4gIH1cblxuICBzZXRTdGF0ZSgpIHtcbiAgICBsZXQgcmVzID0gdGhpcy5jb21waWxhdGlvbigpO1xuICAgIGxldCBuZXh0ID0gdGhpcy5lbC5uZXh0RWxlbWVudFNpYmxpbmc7XG4gICAgbGV0IHJlc3VsdDtcblxuICAgIGlmICghbmV4dCB8fCAhbmV4dC5tYXRjaGVzKCdlbHNlLWlmLGVsc2UnKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIG5leHQuX19ha2lsaS5zZXRBY3Rpdml0eSh0aGlzLmFjdGl2ZSB8fCB0aGlzLnN0YXRlKTtcbiAgICBuZXh0Ll9fYWtpbGkuc2V0UmVjcmVhdGlvbih0aGlzLnJlY3JlYXRlKTtcbiAgICByZXN1bHQgPSBuZXh0Ll9fYWtpbGkuc2V0U3RhdGUoKTsgICAgXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZXMpLnRoZW4oKCkgPT4gIHJlc3VsdCk7XG4gIH1cblxuICBjb21waWxhdGlvbigpIHtcbiAgICBsZXQgcmVzID0gUHJvbWlzZS5yZXNvbHZlKCk7XG5cbiAgICBpZiAodGhpcy5zdGF0ZSAmJiAhdGhpcy5hY3RpdmUpIHtcbiAgICAgIGlmICh0aGlzLnJlY3JlYXRlIHx8ICF0aGlzLmlzQ29tcGlsZWQpIHtcbiAgICAgICAgcmVzID0gdGhpcy5jb21waWxlKCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZWwuc3R5bGUuc2V0UHJvcGVydHkoJ2Rpc3BsYXknLCB0aGlzLmRpc3BsYXksICdpbXBvcnRhbnQnKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBpZiAodGhpcy5yZWNyZWF0ZSkge1xuICAgICAgICB0aGlzLmVtcHR5KCk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmICghdGhpcy5pc0NvbXBpbGVkKSB7XG4gICAgICAgIHJlcyA9IHRoaXMuY29tcGlsZSgpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmVsLnN0eWxlLnNldFByb3BlcnR5KCdkaXNwbGF5JywgJ25vbmUnLCAnaW1wb3J0YW50Jyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlcztcbiAgfVxuXG4gIGNvbXBpbGUoKSB7XG4gICAgbGV0IHJlcztcbiAgICB0aGlzLmVtcHR5KCk7XG4gICAgdGhpcy5lbC5pbm5lckhUTUwgPSB0aGlzLmh0bWw7ICAgXG4gICAgcmVzID0gQWtpbGkuY29tcGlsZSh0aGlzLmVsLCB7IHJlY29tcGlsZTogdHJ1ZSB9KTtcbiAgICB0aGlzLmlzQ29tcGlsZWQgPSB0cnVlO1xuICAgIHJldHVybiByZXM7XG4gIH1cbn1cblxuLyoqXG4gKiBDb21wb25lbnQgZm9yIGNvbmRpdGlvbmFsIHN0YXRlbWVudHMuXG4gKiBcbiAqIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3MvY29tcG9uZW50cyNkb2NzX2NvbmRpdGlvbmFsX3N0YXRlbWVudHN9XG4gKiBcbiAqIEB0YWcgZWxzZS1pZlxuICogQHNlbGVjdG9yIGVsc2UtaWZbaXNdXG4gKiBAYXR0ciB7Ym9vbGVhbn0gaXMgQHNlZSBJZlxuICovXG5leHBvcnQgY2xhc3MgRWxzZUlmIGV4dGVuZHMgSWYge1xuICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgc3VwZXIoLi4uYXJncyk7XG5cbiAgICB0aGlzLmFjdGl2ZSA9IHRydWU7XG4gIH1cbn1cblxuLyoqXG4gKiBDb21wb25lbnQgZm9yIGNvbmRpdGlvbmFsIHN0YXRlbWVudHMuXG4gKiBcbiAqIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3MvY29tcG9uZW50cyNkb2NzX2NvbmRpdGlvbmFsX3N0YXRlbWVudHN9XG4gKiBcbiAqIEB0YWcgZWxzZVxuICovXG5leHBvcnQgY2xhc3MgRWxzZSBleHRlbmRzIEVsc2VJZiB7XG4gIHN0YXRpYyBtYXRjaGVzID0gJyc7XG5cbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpO1xuXG4gICAgdGhpcy5lbC5zZXRBdHRyaWJ1dGUoJ2lzJywgJ3RydWUnKTtcbiAgfVxufVxuXG5JZi5FbHNlSWYgPSBFbHNlSWY7XG5JZi5FbHNlID0gRWxzZTsiLCJpbXBvcnQgVXJsIGZyb20gJy4vdXJsLmpzJztcbmltcG9ydCBBa2lsaSBmcm9tICcuLi9ha2lsaS5qcyc7XG5cbi8qKlxuICogQ29tcG9uZW50IGZvciBpZnJhbWVzLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2NvbXBvbmVudHMjZG9jc19pbWFnZSxfaWZyYW1lLF9lbWJlZCxfYXVkaW8sX3ZpZGVvLF90cmFjayxfc291cmNlLF9vYmplY3R9XG4gKiBcbiAqIEB0YWcgaWZyYW1lXG4gKiBAYXR0ciB7c3RyaW5nfSBbdXJsXVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJZnJhbWUgZXh0ZW5kcyBVcmwgeyAgXG4gIHN0YXRpYyBkZWZpbmUoKSB7XG4gICAgQWtpbGkuY29tcG9uZW50KCdpZnJhbWUnLCB0aGlzKTtcbiAgfVxufSIsImltcG9ydCBVcmwgZnJvbSAnLi91cmwuanMnO1xuaW1wb3J0IEFraWxpIGZyb20gJy4uL2FraWxpLmpzJztcblxuLyoqXG4gKiBDb21wb25lbnQgZm9yIGltYWdlcy5cbiAqIFxuICoge0BsaW5rIGh0dHBzOi8vYWtpbGlqcy5jb20vZG9jcy9jb21wb25lbnRzI2RvY3NfaW1hZ2UsX2lmcmFtZSxfZW1iZWQsX2F1ZGlvLF92aWRlbyxfdHJhY2ssX3NvdXJjZSxfb2JqZWN0fVxuICogXG4gKiBAdGFnIGltZ1xuICogQGF0dHIge3N0cmluZ30gW3VybF1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW1hZ2UgZXh0ZW5kcyBVcmwgeyAgXG4gIHN0YXRpYyBkZWZpbmUoKSB7XG4gICAgQWtpbGkuY29tcG9uZW50KCdpbWcnLCB0aGlzKTtcbiAgfVxufSIsImltcG9ydCBDb21wb25lbnQgZnJvbSAnLi4vY29tcG9uZW50LmpzJztcbmltcG9ydCBBa2lsaSBmcm9tICcuLi9ha2lsaS5qcyc7XG5pbXBvcnQgcmVxdWVzdCBmcm9tICcuLi9zZXJ2aWNlcy9yZXF1ZXN0LmpzJztcblxuLyoqXG4gKiBDb21wb25lbnQgdG8gaW5jbHVkZSB0ZW1wbGF0ZXMgYnkgdXJsLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2NvbXBvbmVudHMjZG9jc19odG1sX3RlbXBsYXRlc31cbiAqIFxuICogQHRhZyBpbmNsdWRlXG4gKiBAc2VsZWN0b3IgaW5jbHVkZVt1cmxdXG4gKiBAYXR0ciB7c3RyaW5nfSB1cmwgLSB0ZW1wbGF0ZSBwYXRoXG4gKiBAYXR0ciB7bnVtYmVyfGZ1bmN0aW9ufGJvb2xlYW59IFtjYWNoZV0gLSByZXF1ZXN0IGNhY2hlIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3MvcmVxdWVzdHMjZG9jc19jYWNoZX1cbiAqIEBtZXNzYWdlIHt2b2lkfSBsb2FkIC0gc2VudCBvbiB0aGUgdGVtcGxhdGUgbG9hZFxuICogQG1lc3NhZ2Uge0Vycm9yfSBlcnJvciAtIHNlbnQgb24gZXJyb3JcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5jbHVkZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyB0cmFuc3BhcmVudCA9IHRydWU7IFxuICBzdGF0aWMgbWF0Y2hlcyA9ICdbdXJsXSc7XG4gIHN0YXRpYyBldmVudHMgPSBbJ2xvYWQnLCAnZXJyb3InXTtcblxuICBzdGF0aWMgZGVmaW5lKCkge1xuICAgIEFraWxpLmNvbXBvbmVudCgnaW5jbHVkZScsIHRoaXMpO1xuICB9XG5cbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpO1xuXG4gICAgdGhpcy5odG1sID0gdGhpcy5lbC5pbm5lckhUTUw7XG4gICAgdGhpcy5lbC5pbm5lckhUTUwgPSAnJztcbiAgICB0aGlzLmNvbm5lY3Rpb24gPSBudWxsO1xuICB9XG5cbiAgY29tcGlsZWQoKSB7XG4gICAgdGhpcy5hdHRyKCdjYWNoZScsIHRoaXMuc2V0Q2FjaGUpO1xuICAgIHJldHVybiB0aGlzLmF0dHIoJ3VybCcsIHRoaXMuc2V0VGVtcGxhdGUpO1xuICB9XG5cbiAgc2V0Q2FjaGUoY2FjaGUpIHtcbiAgICB0aGlzLmNhY2hlID0gY2FjaGU7XG4gIH1cblxuICBzZXRUZW1wbGF0ZSh1cmwpIHtcbiAgICB0aGlzLmNvbm5lY3Rpb24gJiYgdGhpcy5jb25uZWN0aW9uLmFib3J0KCk7XG5cbiAgICByZXR1cm4gcmVxdWVzdC5nZXQodXJsLCB7XG4gICAgICBjYWNoZTogdGhpcy5jYWNoZSxcbiAgICAgIG9uU3RhcnQ6IHhociA9PiB7XG4gICAgICAgIHRoaXMuY29ubmVjdGlvbiA9IHhocjtcbiAgICAgIH1cbiAgICB9KS50aGVuKHJlcyA9PiB7XG4gICAgICB0aGlzLmNvbm5lY3Rpb24gPSBudWxsO1xuICAgICAgdGhpcy5lbXB0eSgpO1xuICAgICAgdGhpcy5lbC5pbm5lckhUTUwgPSB0aGlzLmh0bWw7XG4gICAgICBBa2lsaS5zZXRUZW1wbGF0ZSh0aGlzLmVsLCByZXMuZGF0YSk7XG5cbiAgICAgIHJldHVybiBBa2lsaS5jb21waWxlKHRoaXMuZWwsIHsgcmVjb21waWxlOiB0cnVlIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgICB0aGlzLmF0dHJzLm9uTG9hZC50cmlnZ2VyKHVuZGVmaW5lZCwgeyBidWJibGVzOiBmYWxzZSB9KTtcbiAgICAgIH0pO1xuICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICB0aGlzLmF0dHJzLm9uRXJyb3IudHJpZ2dlcihlcnIsIHsgYnViYmxlczogZmFsc2UgfSk7XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfSk7XG4gIH1cbn0iLCJpbXBvcnQgVGV4dCBmcm9tICcuL3RleHQuanMnO1xuaW1wb3J0IEFraWxpIGZyb20gJy4uL2FraWxpLmpzJztcblxuLyoqXG4gKiBDb21wb25lbnQgdG8gd29yayB3aXRoIGlucHV0IGVsZW1lbnRzLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2NvbXBvbmVudHMjZG9jc19pbnB1dH1cbiAqIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3MvY29tcG9uZW50cyNkb2NzX2NoZWNrYm94X2FuZF9yYWRpb31cbiAqIFxuICogQHRhZyBpbnB1dFxuICogQGF0dHIgQHNlZSBUZXh0XG4gKiBAbWVzc2FnZSBAc2VlIFRleHRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5wdXQgZXh0ZW5kcyBUZXh0IHtcbiAgc3RhdGljIGJvb2xlYW5BdHRyaWJ1dGVzID0gWydjaGVja2VkJywgJ211bHRpcGxlJ10uY29uY2F0KFRleHQuYm9vbGVhbkF0dHJpYnV0ZXMpO1xuICBzdGF0aWMgZXZlbnRzID0gWydjaGFuZ2UnXS5jb25jYXQoVGV4dC5ldmVudHMpO1xuXG4gIHN0YXRpYyBkZWZpbmUoKSB7XG4gICAgQWtpbGkuY29tcG9uZW50KCdpbnB1dCcsIHRoaXMpO1xuICB9XG5cbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpO1xuXG4gICAgdGhpcy5pc0NoZWNrYm94ID0gdGhpcy5lbC50eXBlID09ICdjaGVja2JveCc7XG4gICAgdGhpcy5pc1JhZGlvID0gdGhpcy5lbC50eXBlID09ICdyYWRpbyc7ICAgIFxuICB9XG5cbiAgY29tcGlsZWQoKSB7XG4gICAgKHRoaXMuaXNDaGVja2JveCB8fCB0aGlzLmlzUmFkaW8pICYmIHRoaXMuYXR0cignY2hlY2tlZCcsIHRoaXMuc2V0Q2hlY2tlZCk7XG4gICAgcmV0dXJuIHN1cGVyLmNvbXBpbGVkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH0gIFxuXG4gIHNldENoZWNrZWQodmFsdWUpIHtcbiAgICB2YWx1ZSA9ICEhdmFsdWU7XG4gICAgXG4gICAgaWYgKHRoaXMuZWwuY2hlY2tlZCA9PT0gdmFsdWUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLmVsLmNoZWNrZWQgPSB2YWx1ZTtcbiAgICB0aGlzLl9faXNDb21waWxlZCAmJiB0aGlzLmF0dHJzLm9uQ2hhbmdlLmRpc3BhdGNoKEV2ZW50LCB7IGJ1YmJsZXM6IHRydWUgfSk7XG4gICAgdGhpcy5pc1JhZGlvICYmIHRoaXMuY2hhbmdlUmFkaW8oKTtcbiAgfVxuXG4gIHNldFZhbHVlKCkge1xuICAgIHN1cGVyLnNldFZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgdGhpcy5pc1JhZGlvICYmIHRoaXMuYXR0cnMub25DaGFuZ2UuZGlzcGF0Y2goRXZlbnQsIHsgYnViYmxlczogdHJ1ZSB9KTtcbiAgfVxuXG4gIGNoYW5nZVJhZGlvKCkge1xuICAgIGxldCBuYW1lID0gdGhpcy5lbC5nZXRBdHRyaWJ1dGUoJ25hbWUnKTtcbiAgICBsZXQgc2VsZWN0b3IgPSBgaW5wdXRbdHlwZT1yYWRpb11bbmFtZT0nJHtuYW1lfSddOm5vdChbc2NvcGU9JyR7dGhpcy5zY29wZS5fX25hbWV9J10pYDtcbiAgICBsZXQgY2hpbGRyZW4gPSBBa2lsaS5yb290LmNoaWxkcmVuKHNlbGVjdG9yKTtcblxuICAgIGZvciAobGV0IGkgPSAwLCBsID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBsZXQgcmFkaW8gPSBjaGlsZHJlbltpXTtcbiAgICAgIHJhZGlvLnNldENoZWNrZWQocmFkaW8uZWwuY2hlY2tlZCk7XG4gICAgfVxuICB9XG59IiwiaW1wb3J0IFVybCBmcm9tICcuL3VybC5qcyc7XG5pbXBvcnQgQWtpbGkgZnJvbSAnLi4vYWtpbGkuanMnO1xuXG4vKipcbiAqIENvbXBvbmVudCBmb3Igb2JqZWN0IGVsZW1lbnRzLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2NvbXBvbmVudHMjZG9jc19pbWFnZSxfaWZyYW1lLF9lbWJlZCxfYXVkaW8sX3ZpZGVvLF90cmFjayxfc291cmNlLF9vYmplY3R9XG4gKiBcbiAqIEB0YWcgb2JqZWN0XG4gKiBAYXR0ciB7c3RyaW5nfSBbdXJsXVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPYmplY3RzIGV4dGVuZHMgVXJsIHsgIFxuICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgc3VwZXIoLi4uYXJncyk7XG5cbiAgICB0aGlzLnVybEF0dHJpYnV0ZSA9ICdkYXRhJztcbiAgfVxuXG4gIHN0YXRpYyBkZWZpbmUoKSB7XG4gICAgQWtpbGkuY29tcG9uZW50KCdvYmplY3QnLCB0aGlzKTtcbiAgfVxufSIsImltcG9ydCBGb3IsIHsgTG9vcCB9IGZyb20gJy4vZm9yLmpzJztcbmltcG9ydCBBa2lsaSBmcm9tICcuLi9ha2lsaS5qcyc7XG5cbi8qKlxuICogQ29tcG9uZW50IHRvIHdvcmsgd2l0aCByYWRpbyBncm91cC5cbiAqIFxuICoge0BsaW5rIGh0dHBzOi8vYWtpbGlqcy5jb20vZG9jcy9jb21wb25lbnRzI2RvY3NfcmFkaW9fZ3JvdXB9XG4gKiBcbiAqIEB0YWcgcmFkaW9cbiAqIEBzZWxlY3RvciByYWRpb1tuYW1lXVxuICogQGF0dHIge3N0cmluZ30gbmFtZSAtIG5hbWUgb2YgdGhlIGdyb3VwXG4gKiBAYXR0ciB7c3RyaW5nfG51bGx9IHZhbHVlIC0gc2VsZWN0ZWQgdmFsdWVcbiAqIEBhdHRyIFtpbl0gQHNlZSBGb3JcbiAqIEBtZXNzYWdlIHtzdHJpbmd9IHJhZGlvIC0gc2VudCBvbiB2YWx1ZSBjaGFuZ2VcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmFkaW8gZXh0ZW5kcyBGb3Ige1xuICBzdGF0aWMgbWF0Y2hlcyA9ICdbbmFtZV0nO1xuICBzdGF0aWMgZXZlbnRzID0gWydyYWRpbyddLmNvbmNhdChGb3IuZXZlbnRzKTtcblxuICBzdGF0aWMgZGVmaW5lKCkge1xuICAgIEFraWxpLmNvbXBvbmVudCgncmFkaW8nLCB0aGlzKTtcbiAgICBBa2lsaS5jb21wb25lbnQoJ3JhZGlvLWJ1dHRvbicsIHRoaXMuUmFkaW9CdXR0b24pO1xuICB9XG5cbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpO1xuXG4gICAgdGhpcy5pdGVyYWJsZSA9IHRoaXMuZWwuaGFzQXR0cmlidXRlKCdpbicpO1xuICB9XG5cbiAgY3JlYXRlZCgpIHtcbiAgICBpZih0aGlzLml0ZXJhYmxlKSB7XG4gICAgICByZXR1cm4gc3VwZXIuY3JlYXRlZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfVxuXG4gIGNvbXBpbGVkKCkge1xuICAgIHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xuICAgICAgbGV0IHZhbHVlID0gdGhpcy5nZXRSYWRpb1ZhbHVlKCk7XG5cbiAgICAgIGlmICh2YWx1ZSA9PT0gdGhpcy5wcmV2VmFsdWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnByZXZWYWx1ZSA9IHZhbHVlO1xuICAgICAgdGhpcy5hdHRycy5vblJhZGlvLnRyaWdnZXIodmFsdWUsIHsgYnViYmxlczogdHJ1ZSB9KTtcbiAgICB9KTtcblxuICAgIGlmKHRoaXMuaXRlcmFibGUpIHtcbiAgICAgIHJldHVybiBzdXBlci5jb21waWxlZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfVxuXG4gIHJlc29sdmVkKCkge1xuICAgIHRoaXMuYXR0cignaW4nLCAoKSA9PiB0aGlzLnNldE5hbWVzKCksIHsgY2FsbE9uU3RhcnQ6IGZhbHNlIH0pO1xuICAgIHRoaXMuYXR0cigndmFsdWUnLCB0aGlzLnNldFZhbHVlKTtcbiAgICB0aGlzLmF0dHIoJ25hbWUnLCB0aGlzLnNldE5hbWVzKTtcblxuICAgIGlmKHRoaXMuaXRlcmFibGUpIHtcbiAgICAgIHJldHVybiBzdXBlci5yZXNvbHZlZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfVxuXG4gIHNldE5hbWVzKG5hbWUpIHtcbiAgICBsZXQgY2hpbGRyZW4gPSB0aGlzLmNoaWxkcmVuKCdpbnB1dFt0eXBlPXJhZGlvXScpO1xuXG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBjaGlsZHJlbi5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGNoaWxkcmVuW2ldLmVsLnNldEF0dHJpYnV0ZSgnbmFtZScsIG5hbWUgfHwgdGhpcy5hdHRycy5uYW1lKTtcbiAgICB9XG4gIH1cblxuICBzZXRWYWx1ZSh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdGhpcy5wcmV2VmFsdWUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQgcHJldiA9IHRoaXMucHJldlZhbHVlO1xuICAgIGxldCBjaGlsZHJlbiA9IHRoaXMuY2hpbGRyZW4oJ2lucHV0W3R5cGU9cmFkaW9dJyk7XG4gICAgbGV0IGlzVHJ1ZSA9IGZhbHNlO1xuICAgIHRoaXMucHJldlZhbHVlID0gdmFsdWU7XG5cbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgbGV0IHJhZGlvID0gY2hpbGRyZW5baV07XG4gICAgICBsZXQgaXNTZWxlY3RlZCA9IHJhZGlvLmVsLnZhbHVlID09PSB2YWx1ZTtcblxuICAgICAgaXNTZWxlY3RlZCAmJiAoaXNUcnVlID0gdHJ1ZSk7XG4gICAgICByYWRpby5zZXRDaGVja2VkKGlzU2VsZWN0ZWQpO1xuICAgIH1cblxuICAgIGlmICghaXNUcnVlKSB7XG4gICAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgaWYgKHByZXYgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHRoaXMucHJldlZhbHVlID0gdW5kZWZpbmVkO1xuICAgICAgICB2YWx1ZSA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5hdHRycy5vblJhZGlvLnRyaWdnZXIodmFsdWUsIHsgYnViYmxlczogdHJ1ZSB9KTtcbiAgfVxuXG4gIGdldFJhZGlvVmFsdWUoKSB7XG4gICAgbGV0IGNoaWxkcmVuID0gdGhpcy5jaGlsZHJlbignaW5wdXRbdHlwZT1yYWRpb10nKTtcblxuICAgIGZvciAobGV0IGkgPSAwLCBsID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBsZXQgcmFkaW8gPSBjaGlsZHJlbltpXTtcblxuICAgICAgaWYgKHJhZGlvLmVsLmNoZWNrZWQpIHtcbiAgICAgICAgcmV0dXJuIHJhZGlvLmVsLnZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbi8qKlxuICogQ29tcG9uZW50IHRvIHdvcmsgd2l0aCByYWRpbyBncm91cCBpdGVtLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2NvbXBvbmVudHMjZG9jc19yYWRpb19ncm91cH1cbiAqIFxuICogQHRhZyByYWRpby1idXR0b25cbiAqIEBhdHRyIHtzdHJpbmd9IHZhbHVlIC0gdmFsdWVcbiAqL1xuZXhwb3J0IGNsYXNzIFJhZGlvQnV0dG9uIGV4dGVuZHMgTG9vcCB7XG4gIHN0YXRpYyB0ZW1wbGF0ZSA9ICc8bGFiZWw+PGlucHV0IHR5cGU9XCJyYWRpb1wiIHZhbHVlPVwiJHt0aGlzLnZhbHVlfVwiLz4ke3RoaXMuX19jb250ZW50fTwvbGFiZWw+JztcblxuICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgc3VwZXIoLi4uYXJncyk7XG4gIH1cblxuICBjb21waWxlZCgpIHtcbiAgICB0aGlzLmF0dHIoJ3ZhbHVlJywgJ3ZhbHVlJyk7XG4gICAgcmV0dXJuIHN1cGVyLmNvbXBpbGVkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cbn1cblxuUmFkaW8uUmFkaW9CdXR0b24gPSBSYWRpb0J1dHRvbjsiLCJpbXBvcnQgQ29tcG9uZW50IGZyb20gJy4uL2NvbXBvbmVudC5qcyc7XG5pbXBvcnQgQWtpbGkgZnJvbSAnLi4vYWtpbGkuanMnO1xuaW1wb3J0IHJlcXVlc3QgZnJvbSAnLi4vc2VydmljZXMvcmVxdWVzdC5qcyc7XG5cbi8qKlxuICogQ29tcG9uZW50IHRvIHdvcmsgd2l0aCByb3V0ZXIgdGVtcGxhdGVzLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL3JvdXRpbmcjZG9jc190ZW1wbGF0ZXN9XG4gKiBcbiAqIEB0YWcgcm91dGVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUm91dGUgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgZGVmaW5lKCkge1xuICAgIEFraWxpLmNvbXBvbmVudCgncm91dGUnLCB0aGlzKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICBzdXBlciguLi5hcmdzKTtcblxuICAgIHRoaXMuZWwuaW5uZXJIVE1MID0gJyc7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtUcmFuc2l0aW9ufSB0cmFuc2l0aW9uXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gbG9hZFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAgICovXG4gIHNldFRyYW5zaXRpb24odHJhbnNpdGlvbiwgbG9hZCA9IHRydWUpIHtcbiAgICBsZXQgc3RhdGUgPSB0cmFuc2l0aW9uLnBhdGguc3RhdGU7XG5cbiAgICBjb25zdCBnZXRQYXJlbnRTY29wZVRyYW5zaXRpb24gPSBwYXRoID0+IHtcbiAgICAgIGlmIChwYXRoLnBhcmVudCkge1xuICAgICAgICBpZiAocGF0aC5wYXJlbnQuY29tcG9uZW50KSB7XG4gICAgICAgICAgcmV0dXJuIHBhdGgucGFyZW50LmNvbXBvbmVudC5fX3Njb3BlLl9fdHJhbnNpdGlvbi5wYXRoO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGdldFBhcmVudFNjb3BlVHJhbnNpdGlvbihwYXRoLnBhcmVudCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGNvbnN0IGNvbXBpbGUgPSBodG1sID0+IHsgXG4gICAgICB0aGlzLmVtcHR5KCk7ICBcbiAgICAgIGxldCBuYW1lID0gJ2NvbXBvbmVudCc7XG5cbiAgICAgIGlmKHN0YXRlLmNvbXBvbmVudCkge1xuICAgICAgICBsZXQgZXhpc3RzID0gZmFsc2U7XG4gICAgXG4gICAgICAgIGZvcihsZXQga2V5IGluIEFraWxpLl9fY29tcG9uZW50cykge1xuICAgICAgICAgIGNvbnN0IGNvbXBvbmVudCA9IEFraWxpLl9fY29tcG9uZW50c1trZXldO1xuICAgIFxuICAgICAgICAgIGlmKGNvbXBvbmVudCA9PT0gc3RhdGUuY29tcG9uZW50KSB7XG4gICAgICAgICAgICBuYW1lID0ga2V5OyAgICAgICAgICAgIFxuICAgICAgICAgICAgZXhpc3RzID0gdHJ1ZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICBpZighZXhpc3RzKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBSb3V0ZXIgc3RhdGUgXCIke3N0YXRlLm5hbWV9XCIgaGFzIG5vIGRlZmluZWQgY29tcG9uZW50YClcbiAgICAgICAgfSBcbiAgICAgIH1cblxuICAgICAgdGhpcy5lbC5pbm5lckhUTUwgPSBgPCR7IG5hbWUgfT4keyBodG1sIH08LyR7IG5hbWUgfT5gO1xuICAgICAgcmV0dXJuIEFraWxpLmNvbXBpbGUodGhpcy5lbCwgeyByZWNvbXBpbGU6IHRydWUgfSk7XG4gICAgfVxuXG4gICAgdGhpcy5fX3Njb3BlLl9fdHJhbnNpdGlvbiA9IHsgIFxuICAgICAgcGFyZW50OiBnZXRQYXJlbnRTY29wZVRyYW5zaXRpb24odHJhbnNpdGlvbi5wYXRoKSwgICBcbiAgICAgIHN0YXRlOiB0cmFuc2l0aW9uLnBhdGguc3RhdGUsXG4gICAgICBkYXRhOiB0cmFuc2l0aW9uLnBhdGguZGF0YSxcbiAgICAgIHVybDogdHJhbnNpdGlvbi5wYXRoLnVybCxcbiAgICAgIHBhcmFtczogdHJhbnNpdGlvbi5wYXRoLnBhcmFtcyxcbiAgICAgIHF1ZXJ5OiB0cmFuc2l0aW9uLnBhdGgucXVlcnksXG4gICAgICBoYXNoOiB0cmFuc2l0aW9uLnBhdGguaGFzaFxuICAgIH07XG5cbiAgICBpZiAoIWxvYWQpIHtcbiAgICAgIHJldHVybiBBa2lsaS5jb21waWxlKHRoaXMuZWwsIHsgcmVjb21waWxlOiB7IGNoZWNrQ2hhbmdlczogdHJ1ZSB9IH0pO1xuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKCgpID0+IHtcbiAgICAgIGlmIChzdGF0ZS50ZW1wbGF0ZSkge1xuICAgICAgICByZXR1cm4gc3RhdGUudGVtcGxhdGU7XG4gICAgICB9XG4gIFxuICAgICAgaWYgKHN0YXRlLnRlbXBsYXRlVXJsKSB7XG4gICAgICAgIHJldHVybiByZXF1ZXN0LmdldChzdGF0ZS50ZW1wbGF0ZVVybCkudGhlbihyZXMgPT4gcmVzLmRhdGEpO1xuICAgICAgfVxuICAgIH0pLnRoZW4oaHRtbCA9PiBjb21waWxlKGh0bWwpKTtcbiAgfVxufSIsImltcG9ydCBGb3IsIHsgTG9vcCB9IGZyb20gJy4vZm9yLmpzJztcbmltcG9ydCB1dGlscyBmcm9tICcuLi91dGlscy5qcyc7XG5pbXBvcnQgQWtpbGkgZnJvbSAnLi4vYWtpbGkuanMnO1xuXG4vKipcbiAqIENvbXBvbmVudCB0byB3b3JrIHdpdGggc2VsZWN0LlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2NvbXBvbmVudHMjZG9jc19zZWxlY3R9XG4gKiBcbiAqIEB0YWcgc2VsZWN0ICBcbiAqIEBhdHRyIHtzdHJpbmd9IHZhbHVlIC0gYWN0dWFsIHZhbHVlXG4gKiBAYXR0ciBbaW5dIEBzZWUgRm9yXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlbGVjdCBleHRlbmRzIEZvciB7XG4gIHN0YXRpYyBib29sZWFuQXR0cmlidXRlcyA9IFsnbXVsdGlwbGUnXS5jb25jYXQoRm9yLmJvb2xlYW5BdHRyaWJ1dGVzKTtcbiAgc3RhdGljIGV2ZW50cyA9IFsnY2hhbmdlJ10uY29uY2F0KEZvci5ldmVudHMpO1xuXG4gIHN0YXRpYyBkZWZpbmUoKSB7XG4gICAgQWtpbGkuY29tcG9uZW50KCdzZWxlY3QnLCB0aGlzKTtcbiAgICBBa2lsaS5jb21wb25lbnQoJ29wdGlvbicsIHRoaXMuT3B0aW9uKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICBzdXBlciguLi5hcmdzKTtcblxuICAgIHRoaXMuaXRlcmF0b3JUYWdOYW1lID0gJ29wdGlvbic7XG4gICAgdGhpcy5pc011bHRpcGxlID0gZmFsc2U7XG4gIH1cblxuICBjb21waWxlZCgpIHsgXG4gICAgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB0aGlzLmVsLmNvbnRlbnQgPSB0aGlzLmdldENvbnRlbnQoKSk7XG4gICAgbGV0IHJlcyA9IHN1cGVyLmNvbXBpbGVkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7ICAgXG4gICAgdGhpcy5hdHRyKCdtdWx0aXBsZScsIHRoaXMuc2V0TXVsdGlwbGUpO1xuICAgIHRoaXMuYXR0cignY29udGVudCcsIHRoaXMuc2V0Q29udGVudCk7XG4gICAgdGhpcy5hdHRyKCdpbicsIHRoaXMuZHJhd1NlbGVjdCk7XG4gICAgcmV0dXJuIHJlcztcbiAgfVxuXG4gIHNldE11bHRpcGxlKHZhbHVlKSB7XG4gICAgdGhpcy5pc011bHRpcGxlID0gdmFsdWU7XG4gICAgdGhpcy5jaGFuZ2VWYWx1ZSh0aGlzLmZvcm1hdFZhbHVlKHV0aWxzLmNvcHkodGhpcy5lbC5jb250ZW50KSkpO1xuICB9XG5cbiAgc2V0Q29udGVudCh2YWx1ZSkge1xuICAgIHRoaXMuY2hhbmdlVmFsdWUodGhpcy5mb3JtYXRWYWx1ZSh2YWx1ZSkpO1xuICB9XG5cbiAgZHJhd1NlbGVjdCgpIHtcbiAgICBsZXQgc2VsZWN0ZWQgPSBbXTtcblxuICAgIGZvciAobGV0IGkgPSAwLCBsID0gdGhpcy5lbC5vcHRpb25zLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgbGV0IG9wdGlvbiA9IHRoaXMuZWwub3B0aW9uc1tpXS5fX2FraWxpO1xuICAgICAgbGV0IHNlbGVjdGlvbiA9IG9wdGlvbi5hdHRycy5zZWxlY3RlZDtcblxuICAgICAgaWYgKHNlbGVjdGlvbikge1xuICAgICAgICBzZWxlY3RlZC5wdXNoKG9wdGlvbi5lbC52YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIG9wdGlvbi5lbC5zZWxlY3RlZCA9IHNlbGVjdGlvbjtcbiAgICB9XG5cbiAgICBpZiAoIXNlbGVjdGVkLmxlbmd0aCkge1xuICAgICAgdGhpcy5yZWRlZmluZSgpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMuY2hhbmdlVmFsdWUodGhpcy5mb3JtYXRWYWx1ZShzZWxlY3RlZCkpO1xuICAgIH1cbiAgfVxuXG4gIGNyZWF0ZUl0ZXJhdG9yRWxlbWVudCgpIHtcbiAgICBsZXQgZWwgPSBzdXBlci5jcmVhdGVJdGVyYXRvckVsZW1lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICAgIGlmICghZWwuaGFzQXR0cmlidXRlKCd2YWx1ZScpKSB7XG4gICAgICBlbC5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgdGhpcy5odG1sLnRyaW0oKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGVsO1xuICB9XG5cbiAgZ2V0Q29udGVudCgpIHtcbiAgICBpZiAoIXRoaXMuaXNNdWx0aXBsZSkge1xuICAgICAgcmV0dXJuIHRoaXMuZWwudmFsdWU7XG4gICAgfVxuXG4gICAgbGV0IGNvbnRlbnQgPSBbXTtcblxuICAgIGZvciAobGV0IGkgPSAwLCBsID0gdGhpcy5lbC5vcHRpb25zLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgbGV0IG9wdGlvbiA9IHRoaXMuZWwub3B0aW9uc1tpXTtcblxuICAgICAgaWYgKG9wdGlvbi5zZWxlY3RlZCkge1xuICAgICAgICBjb250ZW50LnB1c2gob3B0aW9uLnZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGZvcm1hdFZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKHRoaXMuaXNNdWx0aXBsZSkge1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICB2YWx1ZSA9ICh2YWx1ZSAhPT0gdW5kZWZpbmVkICYmIHZhbHVlICE9PSBudWxsKT8gW3ZhbHVlXTogW107XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHZhbHVlID0gdmFsdWUubGVuZ3RoPyB2YWx1ZVswXTogJyc7XG4gICAgICB9XG4gICAgICBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcgfHwgdHlwZW9mIHZhbHVlID09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdmFsdWUgPSAnJztcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICByZWRlZmluZSgpIHtcbiAgICB0aGlzLmNoYW5nZVZhbHVlKHRoaXMuZ2V0Q29udGVudCgpKTtcbiAgfVxuXG4gIGNoYW5nZVZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKHV0aWxzLmNvbXBhcmUodGhpcy5lbC5jb250ZW50LCB2YWx1ZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIHRoaXMuZWwudmFsdWUgPSB2YWx1ZVt2YWx1ZS5sZW5ndGggLSAxXTtcblxuICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSB0aGlzLmVsLm9wdGlvbnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGxldCBvcHRpb24gPSB0aGlzLmVsLm9wdGlvbnNbaV07XG5cbiAgICAgICAgb3B0aW9uLnNlbGVjdGVkID0gdmFsdWUuaW5kZXhPZihvcHRpb24udmFsdWUpICE9IC0xO1xuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMuZWwudmFsdWUgPSB2YWx1ZTtcblxuICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSB0aGlzLmVsLm9wdGlvbnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGxldCBvcHRpb24gPSB0aGlzLmVsLm9wdGlvbnNbaV07XG5cbiAgICAgICAgb3B0aW9uLnNlbGVjdGVkID0gb3B0aW9uLnZhbHVlID09IHZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuZWwuY29udGVudCA9IHZhbHVlO1xuICAgIHRoaXMuYXR0cnMub25DaGFuZ2UuZGlzcGF0Y2goRXZlbnQsIHsgYnViYmxlczogdHJ1ZSB9KTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgT3B0aW9uIGV4dGVuZHMgTG9vcCB7XG4gIHN0YXRpYyBib29sZWFuQXR0cmlidXRlcyA9IFsnc2VsZWN0ZWQnXTtcblxuICBfX2dldFBhcnNlZEV4cHJlc3Npb24oZXhwcmVzc2lvbikge1xuICAgIHJldHVybiB1dGlscy5kZWNvZGVIdG1sRW50aXRpZXMoZXhwcmVzc2lvbik7XG4gIH1cblxuICBjaGFuZ2VkU2VsZWN0ZWQodmFsdWUpIHtcbiAgICB0aGlzLnNldFNlbGVjdGVkKHZhbHVlKTtcbiAgfVxuXG4gIHNldFNlbGVjdGVkKHZhbHVlKSB7XG4gICAgdGhpcy5lbC5zZWxlY3RlZCA9IHZhbHVlO1xuICAgIHRoaXMuZm9yLnJlZGVmaW5lKCk7XG4gIH1cbn1cblxuU2VsZWN0Lk9wdGlvbiA9IE9wdGlvbjsiLCJpbXBvcnQgVXJsIGZyb20gJy4vdXJsLmpzJztcbmltcG9ydCBBa2lsaSBmcm9tICcuLi9ha2lsaS5qcyc7XG5cbi8qKlxuICogQ29tcG9uZW50IGZvciBzb3VyY2UgZWxlbWVudHMuXG4gKiBcbiAqIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3MvY29tcG9uZW50cyNkb2NzX2ltYWdlLF9pZnJhbWUsX2VtYmVkLF9hdWRpbyxfdmlkZW8sX3RyYWNrLF9zb3VyY2UsX29iamVjdH1cbiAqIFxuICogQHRhZyBzb3VyY2VcbiAqIEBhdHRyIHtzdHJpbmd9IFt1cmxdXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNvdXJjZSBleHRlbmRzIFVybCB7ICBcbiAgc3RhdGljIGRlZmluZSgpIHtcbiAgICBBa2lsaS5jb21wb25lbnQoJ3NvdXJjZScsIHRoaXMpO1xuICB9XG59IiwiaW1wb3J0IENvbXBvbmVudCBmcm9tICcuLi9jb21wb25lbnQuanMnO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcblxuLyoqXG4gKiBCYXNlIGNvbXBvbmVudCB0byB3b3JrIHdpdGggdGV4dCBlbGVtZW50cy5cbiAqIFxuICoge0BsaW5rIGh0dHBzOi8vYWtpbGlqcy5jb20vZG9jcy9jb21wb25lbnRzI2RvY3NfaW5wdXR9XG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2NvbXBvbmVudHMjZG9jc190ZXh0YXJlYX1cbiAqIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3MvY29tcG9uZW50cyNkb2NzX2NvbnRlbnRlZGl0YWJsZX1cbiAqIFxuICogQGF0dHIge3N0cmluZ30gdmFsdWUgLSBhY3R1YWwgdmFsdWVcbiAqIEBhdHRyIHtib29sZWFufSBmb2N1cyAtIHNldCB0aGUgZm9jdXMgb3Igbm90XG4gKiBAYXR0ciB7bnVtYmVyfSBkZWJvdW5jZSAtIGRlYm91bmNlIGRlbGF5XG4gKiBAbWVzc2FnZSB7dm9pZH0gZGVib3VuY2UgLSBzZW50IG9uIHRoZSBkZWJvdW5jZSB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2NvbXBvbmVudHMjZG9jc19pbnB1dH1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGV4dCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICBzdXBlciguLi5hcmdzKTtcblxuICAgIHRoaXMudmFsdWVLZXkgPSAndmFsdWUnO1xuICAgIHRoaXMuZGVib3VuY2VJbnRlcnZhbCA9IDUwMDtcbiAgfVxuXG4gIGNvbXBpbGVkKCkge1xuICAgIGlmKHRoaXMuZWwuaGFzQXR0cmlidXRlKCdvbi1kZWJvdW5jZScpKSB7XG4gICAgICB0aGlzLmVsLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgdXRpbHMuZGVib3VuY2UoKCkgPT4gdGhpcy5hdHRycy5vbkRlYm91bmNlLnRyaWdnZXIodW5kZWZpbmVkLCB7IGJ1YmJsZXM6IHRydWUgfSksIHRoaXMuZGVib3VuY2VJbnRlcnZhbCkpO1xuICAgIH1cblxuICAgIHRoaXMuYXR0cignZm9jdXMnLCB0aGlzLnNldEZvY3VzKTtcbiAgICB0aGlzLmF0dHIoJ3ZhbHVlJywgdGhpcy5zZXRWYWx1ZSk7XG4gICAgdGhpcy5hdHRyKCdkZWJvdW5jZScsIHRoaXMuc2V0RGVib3VuY2UpO1xuICB9XG5cbiAgc2V0RGVib3VuY2UoaW50ZXJ2YWwpIHtcbiAgICB0aGlzLmRlYm91bmNlSW50ZXJ2YWwgPSAraW50ZXJ2YWw7XG4gIH1cblxuICBzZXRGb2N1cyh2YWx1ZSkge1xuICAgIHZhbHVlPyB0aGlzLnNldEVsZW1lbnRGb2N1cygpOiB0aGlzLnNldEVsZW1lbnRCbHVyKCk7XG4gIH1cblxuICBzZXRWYWx1ZSh2YWx1ZSkge1xuICAgICh0aGlzLmVsW3RoaXMudmFsdWVLZXldICE9PSB2YWx1ZSkgJiYgKHRoaXMuZWxbdGhpcy52YWx1ZUtleV0gPSB2YWx1ZSA9PT0gMD8gJzAnOiAodmFsdWUgfHwgJycpKTtcbiAgfVxuXG4gIHNldEVsZW1lbnRGb2N1cygpIHtcbiAgICB0aGlzLmVsLmZvY3VzKCk7XG4gIH1cblxuICBzZXRFbGVtZW50Qmx1cigpIHtcbiAgICB0aGlzLmVsLmJsdXIoKTtcbiAgfVxufVxuXG4iLCJpbXBvcnQgVGV4dCBmcm9tICcuL3RleHQuanMnO1xuaW1wb3J0IEFraWxpIGZyb20gJy4uL2FraWxpLmpzJztcblxuLyoqXG4gKiBDb21wb25lbnQgdG8gd29yayB3aXRoIHRleHRhcmVhLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2NvbXBvbmVudHMjZG9jc190ZXh0YXJlYX1cbiAqIFxuICogQHRhZyB0ZXh0YXJlYVxuICogQGF0dHIgQHNlZSBUZXh0XG4gKiBAbWVzc2FnZSBAc2VlIFRleHRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGV4dGFyZWEgZXh0ZW5kcyBUZXh0IHtcbiAgc3RhdGljIGRlZmluZSgpIHtcbiAgICBBa2lsaS5jb21wb25lbnQoJ3RleHRhcmVhJywgdGhpcyk7XG4gIH1cbn0iLCJpbXBvcnQgVXJsIGZyb20gJy4vdXJsLmpzJztcbmltcG9ydCBBa2lsaSBmcm9tICcuLi9ha2lsaS5qcyc7XG5cbi8qKlxuICogQ29tcG9uZW50IGZvciB0cmFjayBlbGVtZW50cy5cbiAqIFxuICoge0BsaW5rIGh0dHBzOi8vYWtpbGlqcy5jb20vZG9jcy9jb21wb25lbnRzI2RvY3NfaW1hZ2UsX2lmcmFtZSxfZW1iZWQsX2F1ZGlvLF92aWRlbyxfdHJhY2ssX3NvdXJjZSxfb2JqZWN0fVxuICogXG4gKiBAdGFnIHRyYWNrXG4gKiBAYXR0ciB7c3RyaW5nfSBbdXJsXVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUcmFjayBleHRlbmRzIFVybCB7ICBcbiAgc3RhdGljIGRlZmluZSgpIHtcbiAgICBBa2lsaS5jb21wb25lbnQoJ3RyYWNrJywgdGhpcyk7XG4gIH1cbn0iLCJpbXBvcnQgQ29tcG9uZW50IGZyb20gJy4uL2NvbXBvbmVudC5qcyc7XHJcblxyXG4vKipcclxuICogQ29tcG9uZW50IGZvciBlbGVtZW50cyB3aGljaCBoYXZlIGFzeW5jIGF0dHJpYnV0ZSBjb250ZW50LlxyXG4gKiBcclxuICoge0BsaW5rIGh0dHBzOi8vYWtpbGlqcy5jb20vZG9jcy9jb21wb25lbnRzI2RvY3NfaW1hZ2UsX2lmcmFtZSxfZW1iZWQsX2F1ZGlvLF92aWRlbyxfdHJhY2ssX3NvdXJjZSxfb2JqZWN0fVxyXG4gKiBcclxuICogQHRhZyB1cmxcclxuICogQGF0dHIge3N0cmluZ30gW3VybF1cclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVybCBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgc3RhdGljIG1hdGNoZXMgPSAnW3VybF0nO1xyXG5cclxuICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XHJcbiAgICBzdXBlciguLi5hcmdzKTtcclxuICAgIHRoaXMudXJsQXR0cmlidXRlID0gJ3NyYyc7XHJcbiAgfVxyXG5cclxuICBjb21waWxlZCgpIHtcclxuICAgIHRoaXMuYXR0cigndXJsJywgdGhpcy5zZXRVcmwpO1xyXG4gIH1cclxuXHJcbiAgc2V0VXJsKHVybCkge1xyXG4gICAgdGhpcy5hdHRyc1t0aGlzLnVybEF0dHJpYnV0ZV0gPSB1cmw7XHJcbiAgfVxyXG59IiwiaW1wb3J0IFVybCBmcm9tICcuL3VybC5qcyc7XG5pbXBvcnQgQWtpbGkgZnJvbSAnLi4vYWtpbGkuanMnO1xuXG4vKipcbiAqIENvbXBvbmVudCBmb3IgdmlkZW8gZWxlbWVudHMuXG4gKiBcbiAqIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3MvY29tcG9uZW50cyNkb2NzX2ltYWdlLF9pZnJhbWUsX2VtYmVkLF9hdWRpbyxfdmlkZW8sX3RyYWNrLF9zb3VyY2UsX29iamVjdH1cbiAqIFxuICogQHRhZyB2aWRlb1xuICogQGF0dHIge3N0cmluZ30gW3VybF1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVmlkZW8gZXh0ZW5kcyBVcmwgeyAgXG4gIHN0YXRpYyBkZWZpbmUoKSB7XG4gICAgQWtpbGkuY29tcG9uZW50KCd2aWRlbycsIHRoaXMpO1xuICB9XG59IiwiLyoqXG4gKiBDbGFzcyB0byB3b3JrIHdpdGggZXZlbnRzLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL2V2ZW50c31cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXZlbnRFbWl0dGVyIHtcbiAgY29uc3RydWN0b3IobmFtZSwgbm9kZSwgZWwsIGNvbXBvbmVudCkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5ub2RlID0gbm9kZTtcbiAgICB0aGlzLmVsID0gZWw7XG4gICAgdGhpcy5jb21wb25lbnQgPSBjb21wb25lbnQ7XG4gIH1cblxuICAvKipcbiAgICogVHJpZ2dlciB0aGUgZXZlbnRcbiAgICpcbiAgICogQHBhcmFtIHsqfSBkYXRhXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICogQHBhcmFtIHtib29sZWFufSBbZm9yY2VdXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxuICAgKi9cbiAgdHJpZ2dlcihkYXRhLCBvcHRpb25zID0ge30sIGZvcmNlID0gZmFsc2UpIHtcbiAgICBpZih0aGlzLl9fcmVtb3ZlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChmb3JjZSB8fCAhdGhpcy5pbkV2YWx1YXRpbmcoKSkge1xuICAgICAgdGhpcy5lbC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCh0aGlzLm5hbWUsIHRoaXMucHJlcGFyZU9wdGlvbnMoeyBkZXRhaWw6IGRhdGEsICAuLi5vcHRpb25zIH0pKSk7XG4gICAgfSAgIFxuICB9XG5cbiAgLyoqXG4gICAqIERpc3BhdGNoIHRoZSBldmVudFxuICAgKlxuICAgKiBAcGFyYW0ge0V2ZW50fSBfRXZlbnQgLSBjbGFzcyBvZiB0aGUgZXZlbnRcbiAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtmb3JjZV1cbiAgICogQHJldHVybnMge1Byb21pc2V9XG4gICAqL1xuICBkaXNwYXRjaChfRXZlbnQsIG9wdGlvbnMgPSB7fSwgZm9yY2UgPSBmYWxzZSkge1xuICAgIGlmKHRoaXMuX19yZW1vdmVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGZvcmNlIHx8ICF0aGlzLmluRXZhbHVhdGluZygpKSB7XG4gICAgICB0aGlzLmVsLmRpc3BhdGNoRXZlbnQobmV3IF9FdmVudCh0aGlzLm5hbWUsIHRoaXMucHJlcGFyZU9wdGlvbnMob3B0aW9ucykpKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUHJlcGVyZSB0aGUgZXZlbnQgb3B0aW9uc1xuICAgKiBcbiAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXSBcbiAgICovXG4gIHByZXBhcmVPcHRpb25zKG9wdGlvbnMgPSB7fSkge1xuICAgIG9wdGlvbnMgPSB7IGJ1YmJsZXM6IHRydWUsIC4uLm9wdGlvbnMgfTsgXG4gICAgdGhpcy5ub2RlLl9fY29tcG9uZW50Ll9fcHJlcGFyZUF0dHJpYnV0ZU91dCh0aGlzLm5vZGUsIG9wdGlvbnMuZGV0YWlsKTtcbiAgICByZXR1cm4gb3B0aW9ucztcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayB0aGUgZXZlbnQgY2FsbGJhY2sgZG9lc24ndCBydW4gcmVjdXJzaXZlbHlcbiAgICpcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBpbkV2YWx1YXRpbmcoKSB7XG4gICAgbGV0IGRhdGEgPSB0aGlzLmNvbXBvbmVudC5fX2V2YWx1YXRpbmdFdmVudDtcblxuICAgIGlmICghZGF0YSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiBkYXRhLmVsID09PSB0aGlzLmVsICYmIGRhdGEuZXZlbnQudHlwZSA9PT0gdGhpcy5uYW1lICYmIGRhdGEuY29tcG9uZW50ID09PSB0aGlzLmNvbXBvbmVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBCaW5kIHRoZSBmdW5jdGlvblxuICAgKlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBmblxuICAgKi9cbiAgYmluZChmbikge1xuICAgIHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcih0aGlzLm5hbWUsIHRoaXMuZm4gPSBmbik7XG4gIH1cblxuICAvKipcbiAgICogVW5iaW5kIHRoZSBmdW5jdGlvblxuICAgKi9cbiAgdW5iaW5kKCkge1xuICAgIHRoaXMuZm4gJiYgdGhpcy5lbC5yZW1vdmVFdmVudExpc3RlbmVyKHRoaXMubmFtZSwgdGhpcy5mbik7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIHRoZSBlbWl0dGVyXG4gICAqL1xuICByZW1vdmUoKSB7XG4gICAgdGhpcy51bmJpbmQoKTtcbiAgICBkZWxldGUgdGhpcy5uYW1lO1xuICAgIGRlbGV0ZSB0aGlzLm5vZGU7XG4gICAgZGVsZXRlIHRoaXMuY29tcG9uZW50XG4gICAgZGVsZXRlIHRoaXMuZWw7XG4gICAgdGhpcy5fX3JlbW92ZWQgPSB0cnVlO1xuICB9XG59IiwiaW1wb3J0IEFraWxpIGZyb20gJy4vYWtpbGkuanMnO1xuXG5jb25zdCBvYmogPSB7fTtcblxuLyoqXG4gKiBHbG9iYWxzIGlzIGZvciB1c2luZyB0aGUgY3VzdG9tIHZhcmlhYmxlcyBpbiBodG1sXG4gKiBcbiAqIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3Mvc2NvcGUjZG9jc19nbG9iYWxzfVxuICovXG5jb25zdCBnbG9iYWxzID0gbmV3IFByb3h5KG9iaiwge1xuICBnZXQ6ICh0YXJnZXQsIGtleSkgPT4ge1xuICAgIGlmKGtleSA9PSAnX190YXJnZXQnKSB7XG4gICAgICByZXR1cm4gb2JqXG4gICAgfSAgIFxuICAgIFxuICAgIHJldHVybiB0YXJnZXRba2V5XTtcbiAgfSxcbiAgc2V0OiAodGFyZ2V0LCBrZXksIHZhbHVlKSA9PiB7XG4gICAgdGFyZ2V0W2tleV0gPSBBa2lsaS53cmFwKHZhbHVlLCB7IHRhZzoga2V5IH0pOyAgICBcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcbiAgZGVsZXRlUHJvcGVydHk6ICh0YXJnZXQsIGtleSkgPT4geyAgIFxuICAgIEFraWxpLnJlbW92ZVRhZyhrZXkpO1xuICAgIGRlbGV0ZSB0YXJnZXRba2V5XTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGdsb2JhbHM7IiwiaW1wb3J0IEFraWxpIGZyb20gJy4vYWtpbGkuanMnO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMuanMnO1xuXG4vKipcbiAqIFNjb3BlIGNsYXNzXG4gKiBcbiAqIHtAbGluayBodHRwczovL2FraWxpanMuY29tL2RvY3Mvc2NvcGV9XG4gKlxuICogQWxsIHByb3BlcnRpZXMgc3RhcnRpbmcgd2l0aCBfXyBhcmUgbm90IG1vbml0b3JlZC5cbiAqIFlvdSBjYW4gdXNlIHRoZW0gZm9yIGludGVybmFsIG1hbmlwdWxhdGlvbnMuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjb3BlIHtcbiAgY29uc3RydWN0b3IobmFtZSwgZWwsIGNvbXBvbmVudCkge1xuICAgIHRoaXMuX19uYW1lID0gbmFtZTtcbiAgICB0aGlzLl9fZWwgPSBlbDtcbiAgICB0aGlzLl9fY29tcG9uZW50ID0gY29tcG9uZW50O1xuICAgIGVsLnNldEF0dHJpYnV0ZSgnc2NvcGUnLCBuYW1lKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIHNjb3BlIHZhbHVlXG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ3xzdHJpbmdbXX0ga2V5c1xuICAgKiBAcGFyYW0geyp9IHZhbHVlXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc10gXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMuc2F2ZVByb3h5XSBcbiAgICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5zaWxlbnRdXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMudGFyZ2V0XVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBfX3NldChrZXlzLCB2YWx1ZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGtleXMpKSB7XG4gICAgICBrZXlzID0gW2tleXNdO1xuICAgIH1cbiAgICBcbiAgICBBa2lsaS51bmlzb2xhdGUoKCkgPT4ge1xuICAgICAgb3B0aW9ucy5zYXZlUHJveHkgJiYgKHRoaXMuX19jb21wb25lbnQuX19kaXNhYmxlUHJveHlSZWRlZmluaW5nID0gdHJ1ZSk7XG4gICAgICBvcHRpb25zLnNpbGVudCAmJiB0aGlzLl9fY29tcG9uZW50Ll9fZGlzYWJsZUtleXMoKTtcbiAgICAgIHV0aWxzLnNldFByb3BlcnR5QnlLZXlzKGtleXMsIG9wdGlvbnMudGFyZ2V0PyB0aGlzLl9fdGFyZ2V0OiB0aGlzLCAobGFzdCwgdmFsKSA9PiB7XG4gICAgICAgIGlmICghbGFzdCkge1xuICAgICAgICAgIHJldHVybiB2YWwgfHwge307XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9KTtcbiAgICAgIG9wdGlvbnMuc2lsZW50ICYmIHRoaXMuX19jb21wb25lbnQuX19lbmFibGVLZXlzKCk7XG4gICAgICBvcHRpb25zLnNhdmVQcm94eSAmJiAodGhpcy5fX2NvbXBvbmVudC5fX2Rpc2FibGVQcm94eVJlZGVmaW5pbmcgPSBmYWxzZSk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIHRoZSBzY29wZVxuICAgKiBcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgX19yZW1vdmUoKSB7XG4gICAgQWtpbGkucmVtb3ZlU2NvcGUodGhpcy5fX25hbWUpO1xuXG4gICAgZm9yKGxldCBrZXkgaW4gdGhpcykge1xuICAgICAgaWYoIXRoaXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgZGVsZXRlIHRoaXNba2V5XTtcbiAgICB9XG4gIH1cbn0iLCJpbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IEFraWxpIGZyb20gJy4uL2FraWxpLmpzJztcblxuLyoqXG4gKiBSZXF1ZXN0IGNsYXNzLlxuICogVGhlIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MgYWxsb3dzIHlvdSB0byBtYWtlIHJlcXVlc3RzLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL3JlcXVlc3RzfVxuICovXG5leHBvcnQgY2xhc3MgUmVxdWVzdCB7XG4gIF9fY2FjaGUgPSB7fTtcblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVcmxcbiAgICogQHBhcmFtIHtvYmplY3R9IFtkZWZhdWx0c10gXG4gICAqL1xuICBjb25zdHJ1Y3RvcihiYXNlVXJsLCBkZWZhdWx0cykge1xuICAgIHRoaXMuYmFzZVVybCA9IGJhc2VVcmw/IChiYXNlVXJsLnJlcGxhY2UoL1xcLyQvLCAnJykgKyAnLycpOiAnJztcblxuICAgIHRoaXMuZGVmYXVsdHMgPSB7XG4gICAgICBzdGF0dXNFcnJvclBhdHRlcm46IC9eW14yM10vLFxuICAgICAgY2FjaGU6IGZhbHNlLFxuICAgICAgLi4uKGRlZmF1bHRzIHx8IHt9KVxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogU2VuZCB0aGUgcmVxdWVzdFxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAgICovXG4gIHF1ZXJ5KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgb3B0aW9ucyA9IHsuLi50aGlzLmRlZmF1bHRzLCAuLi4ob3B0aW9ucyB8fCB7fSl9OyBcbiAgICAgIG9wdGlvbnMudXJsID0gdGhpcy5iYXNlVXJsPyBgJHt0aGlzLmJhc2VVcmx9JHtvcHRpb25zLnVybC5yZXBsYWNlKC9eXFwvLywgJycpfWA6IG9wdGlvbnMudXJsOyAgXG4gICAgICBvcHRpb25zLm1ldGhvZCA9IG9wdGlvbnMubWV0aG9kIHx8ICdHRVQnO1xuICAgICAgXG4gICAgICBsZXQgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7ICAgICAgXG4gICAgICBjb25zdCBiZWZvcmUgPSB0aGlzLnRyYW5zZm9ybUJlZm9yZSh4aHIsIG9wdGlvbnMpO1xuICAgICAgeGhyID0gYmVmb3JlLnhocjtcbiAgICAgIG9wdGlvbnMgPSBiZWZvcmUub3B0aW9ucztcbiAgICAgICh0eXBlb2Ygb3B0aW9ucy5vblN0YXJ0ID09ICdmdW5jdGlvbicpICYmIG9wdGlvbnMub25TdGFydCh4aHIpOyAgXG4gICAgICBvcHRpb25zLmhlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnMgfHwge307XG4gICAgICBcbiAgICAgIGlmIChvcHRpb25zLmpzb24pIHtcbiAgICAgICAgb3B0aW9ucy5qc29uICE9PSB0cnVlICYmIChvcHRpb25zLmJvZHkgPSBKU09OLnN0cmluZ2lmeShvcHRpb25zLmpzb24pKTtcbiAgICAgICAgb3B0aW9ucy5oZWFkZXJzWydjb250ZW50LXR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJztcbiAgICAgICAgb3B0aW9ucy5yZXNwb25zZVR5cGUgPSBvcHRpb25zLnJlc3BvbnNlVHlwZSB8fCAnanNvbic7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChvcHRpb25zLmZvcm0pIHtcbiAgICAgICAgb3B0aW9ucy5ib2R5ID0gdGhpcy5jcmVhdGVGb3JtRGF0YShvcHRpb25zLmZvcm0pO1xuICAgICAgICBvcHRpb25zLmhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddID0gJ211bHRpcGFydC9mb3JtLWRhdGEnO1xuICAgICAgfVxuXG4gICAgICBpZiAob3B0aW9ucy5wYXJhbXMpIHtcbiAgICAgICAgbGV0IHN0ciA9IHRoaXMucGFyYW1zVG9RdWVyeShvcHRpb25zLnBhcmFtcyk7XG4gICAgICAgIHN0ciAmJiAob3B0aW9ucy51cmwgKz0gXCI/XCIgKyBzdHIpO1xuICAgICAgfVxuICAgICAgICAgICBcbiAgICAgIGxldCBoYXNoID0gbnVsbDtcbiAgICAgIGxldCBjYWNoZSA9IHR5cGVvZiBvcHRpb25zLmNhY2hlID09ICdmdW5jdGlvbic/IG9wdGlvbnMuY2FjaGUob3B0aW9ucyk6IG9wdGlvbnMuY2FjaGU7XG4gICAgICAoIXdpbmRvdy5BS0lMSV9TU1IgJiYgIUFraWxpLl9faW5pdCkgJiYgKGNhY2hlID0gdHJ1ZSk7XG5cbiAgICAgIGlmKG9wdGlvbnMubWV0aG9kLnRvVXBwZXJDYXNlKCkgPT0gJ0dFVCcgJiYgKCFvcHRpb25zLmJvZHkgfHwgdHlwZW9mIG9wdGlvbnMuYm9keSA9PSAnc3RyaW5nJykpIHtcbiAgICAgICAgaGFzaCA9IHRoaXMuY3JlYXRlQ2FjaGVIYXNoKHsgXG4gICAgICAgICAgdXJsOiBvcHRpb25zLnVybCxcbiAgICAgICAgICBtZXRob2Q6IG9wdGlvbnMubWV0aG9kLFxuICAgICAgICAgIHVzZXI6IG9wdGlvbnMudXNlciwgXG4gICAgICAgICAgcGFzc3dvcmQ6IG9wdGlvbnMucGFzc3dvcmQsIFxuICAgICAgICAgIGJvZHk6IG9wdGlvbnMuYm9keSBcbiAgICAgICAgfSk7ICAgICAgICBcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYoY2FjaGUgJiYgaGFzaCkgeyAgICAgICAgXG4gICAgICAgIGxldCBfY2FjaGUgPSB0aGlzLmdldENhY2hlKGhhc2gpO1xuICAgICAgICBsZXQgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG5cbiAgICAgICAgaWYoX2NhY2hlICYmIChjYWNoZSA9PT0gdHJ1ZSB8fCBub3cgLSBfY2FjaGUuY3JlYXRlZEF0IDw9IGNhY2hlKSkge1xuICAgICAgICAgIHJldHVybiByZXNvbHZlKHRoaXMudHJhbnNmb3JtQWZ0ZXIoX2NhY2hlLnJlc3VsdCkpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHhoci5vcGVuKG9wdGlvbnMubWV0aG9kLCBvcHRpb25zLnVybCwgdHJ1ZSwgb3B0aW9ucy51c2VyLCBvcHRpb25zLnBhc3N3b3JkKTtcblxuICAgICAgaWYgKG9wdGlvbnMuaGFzT3duUHJvcGVydHkoJ3RpbWVvdXQnKSkge1xuICAgICAgICB4aHIudGltZW91dCA9IG9wdGlvbnMudGltZW91dDtcbiAgICAgIH1cblxuICAgICAgaWYgKG9wdGlvbnMucmVzcG9uc2VUeXBlKSB7XG4gICAgICAgIHhoci5yZXNwb25zZVR5cGUgPSBvcHRpb25zLnJlc3BvbnNlVHlwZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG9wdGlvbnMud2l0aENyZWRlbnRpYWxzKSB7XG4gICAgICAgIHhoci53aXRoQ3JlZGVudGlhbHMgPSBvcHRpb25zLndpdGhDcmVkZW50aWFscztcbiAgICAgIH1cblxuICAgICAgbGV0IGhlYWRlcktleXMgPSBPYmplY3Qua2V5cyhvcHRpb25zLmhlYWRlcnMpO1xuXG4gICAgICBmb3IgKGxldCBpID0gMCwgbCA9IGhlYWRlcktleXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGxldCBrID0gaGVhZGVyS2V5c1tpXTtcbiAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoaywgb3B0aW9ucy5oZWFkZXJzW2tdKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLm9uUHJvZ3Jlc3MgPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB4aHIub25wcm9ncmVzcyA9ICgpID0+IHtcbiAgICAgICAgICByZXR1cm4gb3B0aW9ucy5vblByb2dyZXNzKHhocik7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHhoci5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHtcbiAgICAgICAgICByZXNwb25zZTogeGhyLnJlc3BvbnNlLFxuICAgICAgICAgIHN0YXR1czogeGhyLnN0YXR1cyxcbiAgICAgICAgICByZWFkeVN0YXRlOiB4aHIucmVhZHlTdGF0ZSxcbiAgICAgICAgICBzdGF0dXNUZXh0OiB4aHIuc3RhdHVzVGV4dCxcbiAgICAgICAgICB3aXRoQ3JlZGVudGlhbHM6IHhoci53aXRoQ3JlZGVudGlhbHMsXG4gICAgICAgICAgcmVzcG9uc2VUeXBlOiB4aHIucmVzcG9uc2VUeXBlLFxuICAgICAgICAgIHJlc3BvbnNlVGV4dDogeGhyLnJlc3BvbnNlVHlwZSA9PSAndGV4dCc/IHhoci5yZXNwb25zZVRleHQ6ICcnLFxuICAgICAgICAgIHJlc3BvbnNlWE1MOiB4aHIucmVzcG9uc2VUeXBlID09ICdkb2N1bWVudCc/IHhoci5yZXNwb25zZVhNTDogJycsXG4gICAgICAgICAgcmVzcG9uc2VVUkw6IHhoci5yZXNwb25zZVVSTCxcbiAgICAgICAgICB0aW1lb3V0OiB4aHIudGltZW91dCxcbiAgICAgICAgICBoZWFkZXJzOiB0aGlzLmdldEhlYWRlcnMoeGhyKSwgICAgICAgICBcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCByZXNwb25zZSA9IHRoaXMudHJhbnNmb3JtQWZ0ZXIocmVzdWx0KTtcblxuICAgICAgICBpZiAob3B0aW9ucy5zdGF0dXNFcnJvclBhdHRlcm4gJiYgKHhoci5zdGF0dXMgKyAnJykubWF0Y2gob3B0aW9ucy5zdGF0dXNFcnJvclBhdHRlcm4pKSB7XG4gICAgICAgICAgbGV0IGVyciA9IG5ldyBFcnJvcihgUmVxdWVzdCB0byBcIiR7b3B0aW9ucy51cmx9XCIgcmV0dXJucyBmYWlsdXJlIHN0YXR1cyBjb2RlICR7eGhyLnN0YXR1c31gKTtcbiAgICAgICAgICBlcnIucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgICAgICAgICByZXR1cm4gcmVqZWN0KGVycik7XG4gICAgICAgIH0gXG5cbiAgICAgICAgKGNhY2hlIHx8IHdpbmRvdy5BS0lMSV9TU1IpICYmIGhhc2ggJiYgdGhpcy5jcmVhdGVDYWNoZShoYXNoLCByZXN1bHQpO1xuICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgIH07XG5cbiAgICAgIHhoci5vbnRpbWVvdXQgPSAoKSA9PiB7XG4gICAgICAgIHJlamVjdChuZXcgRXJyb3IoYFJlcXVlc3QgdG8gXCIke29wdGlvbnMudXJsfVwiIHRpbWVkIG91dGApKTtcbiAgICAgIH07XG5cbiAgICAgIHhoci5vbmVycm9yID0gcmVqZWN0O1xuICAgICAgeGhyLnNlbmQob3B0aW9ucy5ib2R5KTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGhlYWRlcnMgb2YgYW4gWE1MSHR0cFJlcXVlc3QgaW5zdGFuY2VcbiAgICogXG4gICAqIEBwYXJhbSB7WE1MSHR0cFJlcXVlc3R9XG4gICAqL1xuICBnZXRIZWFkZXJzID0gZnVuY3Rpb24oeGhyKSB7XG4gICAgbGV0IGhlYWRlcnMgPSB7fTtcbiAgICBsZXQgc3RyID0geGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpOyAgXG4gICAgbGV0IGFyciA9IHN0ci5zcGxpdCgnXFx1MDAwZFxcdTAwMGEnKTtcblxuICAgIGZvciAobGV0IGkgPSAwLCBsID0gYXJyLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgbGV0IGxpbmUgPSBhcnJbaV07XG4gICAgICBsZXQgaW5kZXggPSBsaW5lLmluZGV4T2YoJ1xcdTAwM2FcXHUwMDIwJyk7XG5cbiAgICAgIGlmIChpbmRleCA+IDApIHtcbiAgICAgICAgbGV0IGtleSA9IGxpbmUuc3Vic3RyaW5nKDAsIGluZGV4KTtcbiAgICAgICAgbGV0IHZhbCA9IGxpbmUuc3Vic3RyaW5nKGluZGV4ICsgMik7XG4gICAgICAgIGhlYWRlcnNba2V5XSA9IHZhbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gaGVhZGVycztcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGNhY2hlXG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ30gaGFzaFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fVxuICAgKi9cbiAgZ2V0Q2FjaGUoaGFzaCkge1xuICAgIHJldHVybiB0aGlzLl9fY2FjaGVbaGFzaF0gfHwgbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgdGhlIGNhY2hlXG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ30gaGFzaFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVzdWx0XG4gICAqL1xuICBjcmVhdGVDYWNoZShoYXNoLCByZXN1bHQpIHtcbiAgICB0aGlzLl9fY2FjaGVbaGFzaF0gPSB7IHJlc3VsdCwgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLmdldFRpbWUoKSB9O1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgY2FjaGVcbiAgICogXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBoYXNoXG4gICAqL1xuICByZW1vdmVDYWNoZShoYXNoKSB7XG4gICAgZGVsZXRlIHRoaXMuX19jYWNoZVtoYXNoXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgYSBoYXNoIGZvciBzYXZpbmcgaW4gdGhlIGNhY2hlXG4gICAqIFxuICAgKiBAcGFyYW0ge29iamVjdH0gZGF0YVxuICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgKi9cbiAgY3JlYXRlQ2FjaGVIYXNoKGRhdGEpIHtcbiAgICByZXR1cm4gdXRpbHMuY3JlYXRlSGFzaChkYXRhKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb252ZXJ0IHRoZSBvYmplY3QgdG8gYSBxdWVyeSBzdHJpbmdcbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IG9ialxuICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgKi9cbiAgcGFyYW1zVG9RdWVyeShvYmopIHtcbiAgICBsZXQgc2VwID0gJyYnO1xuICAgIGxldCBlcSA9ICc9JztcblxuICAgIGlmICghb2JqIHx8IHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikubWFwKGsgPT4ge1xuICAgICAgbGV0IGtzID0gZW5jb2RlVVJJQ29tcG9uZW50KGspO1xuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShvYmpba10pKSB7XG4gICAgICAgIGtzID0gZW5jb2RlVVJJQ29tcG9uZW50KGspO1xuICAgICAgICByZXR1cm4gb2JqW2tdLm1hcCgodiwgaSkgPT4ga3MgKyBgWyR7aX1dYCArIGVxICsgZW5jb2RlVVJJQ29tcG9uZW50KHYpKS5qb2luKHNlcCk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChvYmpba10gJiYgdHlwZW9mIG9ialtrXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgbGV0IG9wdCA9IFtdO1xuICAgICAgICBPYmplY3Qua2V5cyhvYmpba10pLm1hcChrZXkgPT4gb3B0LnB1c2goa3MgKyBgWyR7a2V5fV1gICsgZXEgKyBlbmNvZGVVUklDb21wb25lbnQob2JqW2tdW2tleV0pKSk7XG4gICAgICAgIHJldHVybiBvcHQuam9pbihzZXApO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBrcyArIGVxICsgZW5jb2RlVVJJQ29tcG9uZW50KG9ialtrXSk7XG4gICAgICB9XG4gICAgfSkuam9pbihzZXApO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbnZlcnQgdGhlIHF1ZXJ5IHN0cmluZyB0byBhbiBvYmplY3RcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICAgKiBAcmV0dXJucyB7b2JqZWN0fVxuICAgKi9cbiAgcGFyYW1zRnJvbVF1ZXJ5KHN0cikge1xuICAgIGxldCBxdWVyeSA9IHt9O1xuICAgIGxldCBhbXBzID0gc3RyLnNwbGl0KCcmJyk7XG5cbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IGFtcHMubGVuZ3RoOyBpIDxsOyBpKyspIHtcbiAgICAgIGxldCBlcXMgPSAgYW1wc1tpXS5zcGxpdCgnPScpO1xuICAgICAgbGV0IGtleSA9IGRlY29kZVVSSUNvbXBvbmVudChlcXNbMF0pO1xuICAgICAgbGV0IHZhbCA9IGRlY29kZVVSSUNvbXBvbmVudChlcXNbMV0pO1xuXG4gICAgICBpZiAoIWtleSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkocXVlcnlba2V5XSkpIHtcbiAgICAgICAgcXVlcnlba2V5XS5wdXNoKHZhbCk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChxdWVyeVtrZXldKSB7XG4gICAgICAgIHF1ZXJ5W2tleV0gPSBbcXVlcnlba2V5XSwgdmFsXTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICBxdWVyeVtrZXldID0gdmFsO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBxdWVyeTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgbXVsdGlwYXJ0IGZvcm0gZGF0YSBmcm9tIHRoZSBvYmplY3RcbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IG9ialxuICAgKiBAcGFyYW0ge0Zvcm1EYXRhfSBbZGF0YV1cbiAgICogQHBhcmFtIHtzdHJpbmd9IFtuYW1lc3BhY2VdXG4gICAqIEByZXR1cm5zIHtGb3JtRGF0YX1cbiAgICovXG4gIGNyZWF0ZUZvcm1EYXRhKG9iaiwgZGF0YSA9IG51bGwsIG5hbWVzcGFjZSA9ICcnKSB7XG4gICAgbGV0IGZkID0gZGF0YSB8fCBuZXcgRm9ybURhdGEoKTtcblxuICAgIGZvciAobGV0IGsgaW4gb2JqKSB7XG4gICAgICBpZiAob2JqLmhhc093blByb3BlcnR5KGspICYmIG9ialtrXSkge1xuICAgICAgICBsZXQga2V5ID0gbmFtZXNwYWNlPyBuYW1lc3BhY2UgKyAnWycgKyBrICsgJ10nOiBrO1xuXG4gICAgICAgIGlmIChvYmpba10gaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgICAgICAgZmQuYXBwZW5kKGtleSwgb2JqW2tdLnRvSVNPU3RyaW5nKCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHV0aWxzLmlzUGxhaW5PYmplY3Qob2JqW2tdKSkge1xuICAgICAgICAgIHRoaXMuY3JlYXRlRm9ybURhdGEob2JqW2tdLCBmZCwga2V5KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBmZC5hcHBlbmQoa2V5LCBvYmpba10pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZkO1xuICB9XG5cbiAgLyoqXG4gICAqIFRyYW5zZm9ybSB0aGUgZGF0YSBiZWZvcmUgdGhlIHJlcXVlc3RcbiAgICpcbiAgICogQHBhcmFtIHtYTUxIdHRwUmVxdWVzdH0geGhyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XG4gICAqL1xuICB0cmFuc2Zvcm1CZWZvcmUoeGhyLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHsgeGhyLCBvcHRpb25zIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBUcmFuc2Zvcm0gdGhlIGRhdGEgYWZ0ZXIgdGhlIHJlcXVlc3RcbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlc3VsdFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fVxuICAgKi9cbiAgdHJhbnNmb3JtQWZ0ZXIocmVzdWx0KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnJlc3VsdCxcbiAgICAgIGRhdGE6IHJlc3VsdC5yZXNwb25zZSxcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqICBNYWtlIGEgR0VUIHJlcXVlc3RcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICAgKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAgICovXG4gIGdldCh1cmwsIG9wdGlvbnMgPSB7fSkge1xuICAgIG9wdGlvbnMudXJsID0gdXJsO1xuICAgIG9wdGlvbnMubWV0aG9kID0gJ0dFVCc7XG4gICAgcmV0dXJuIHRoaXMucXVlcnkob3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogTWFrZWEgYSBERUxFVEUgcmVxdWVzdFxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxuICAgKi9cbiAgZGVsZXRlKHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgb3B0aW9ucy51cmwgPSB1cmw7XG4gICAgb3B0aW9ucy5tZXRob2QgPSAnREVMRVRFJztcbiAgICByZXR1cm4gdGhpcy5xdWVyeShvcHRpb25zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYWtlIGEgUE9TVCByZXF1ZXN0XG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAgICogQHJldHVybnMge1Byb21pc2V9XG4gICAqL1xuICBwb3N0KHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgb3B0aW9ucy51cmwgPSB1cmw7XG4gICAgb3B0aW9ucy5tZXRob2QgPSAnUE9TVCc7XG4gICAgcmV0dXJuIHRoaXMucXVlcnkob3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogTWFrZSBhIFBVVCByZXF1ZXN0XG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAgICogQHJldHVybnMge1Byb21pc2V9XG4gICAqL1xuICBwdXQodXJsLCBvcHRpb25zID0ge30pIHtcbiAgICBvcHRpb25zLnVybCA9IHVybDtcbiAgICBvcHRpb25zLm1ldGhvZCA9ICdQVVQnO1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5KG9wdGlvbnMpO1xuICB9XG5cbiAgLyoqXG4gICAqICBNYWtlIGEgUEFUQ0ggcmVxdWVzdFxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxuICAgKi9cbiAgcGF0Y2godXJsLCBvcHRpb25zID0ge30pIHtcbiAgICBvcHRpb25zLnVybCA9IHVybDtcbiAgICBvcHRpb25zLm1ldGhvZCA9ICdQQVRDSCc7XG4gICAgcmV0dXJuIHRoaXMucXVlcnkob3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogTWFrZSBhIEhFQUQgcmVxdWVzdFxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxuICAgKi9cbiAgaGVhZCh1cmwsIG9wdGlvbnMgPSB7fSkge1xuICAgIG9wdGlvbnMudXJsID0gdXJsO1xuICAgIG9wdGlvbnMubWV0aG9kID0gJ0hFQUQnO1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5KG9wdGlvbnMpO1xuICB9XG59XG5cbmNvbnN0IHJlcXVlc3QgPSBuZXcgUmVxdWVzdCgpO1xuXG5yZXF1ZXN0Ll9faW5zdGFuY2VzID0ge307XG5yZXF1ZXN0Ll9fY2FjaGUgPSB7fTtcblxuLyoqXG4gKiBBZGQgYSBuZXcgaW5zdGFuY2VcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICogQHBhcmFtIHtSZXF1ZXN0fSBpbnN0YW5jZVxuICovXG5yZXF1ZXN0LmFkZEluc3RhbmNlID0gZnVuY3Rpb24gKG5hbWUsIGluc3RhbmNlKSB7XG4gIHRoaXMuX19pbnN0YW5jZXNbbmFtZV0gPSBpbnN0YW5jZTtcbn07XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbnN0YW5jZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gKi9cbnJlcXVlc3QucmVtb3ZlSW5zdGFuY2UgPSBmdW5jdGlvbiAobmFtZSkge1xuICBkZWxldGUgdGhpcy5fX2luc3RhbmNlc1tuYW1lXTtcbn07XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1ZXN0LCAndXNlJywge1xuICBnZXQ6ICgpID0+IHtcbiAgICByZXR1cm4gcmVxdWVzdC5fX2luc3RhbmNlcztcbiAgfVxufSk7XG5cbnJlcXVlc3QuUmVxdWVzdCA9IFJlcXVlc3Q7XG5leHBvcnQgZGVmYXVsdCByZXF1ZXN0OyIsImltcG9ydCBBa2lsaSBmcm9tICcuLi9ha2lsaS5qcyc7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IHJlcXVlc3QgZnJvbSAnLi9yZXF1ZXN0LmpzJztcbmltcG9ydCBSb3V0ZSBmcm9tICcuLi9jb21wb25lbnRzL3JvdXRlLmpzJztcblxuLyoqXG4gKiBUcmFuc2l0aW9uIGNsYXNzLlxuICogVGhlIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MgaW5jbHVkZXMgdGhlIGxhc3QgYWN0dWFsIHJvdXRlciB0cmFuc2l0aW9uIGluZm9ybWF0aW9uLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL3JvdXRpbmcjZG9jc190cmFuc2l0aW9ufVxuICovXG5leHBvcnQgY2xhc3MgVHJhbnNpdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHVybCwgcHJldmlvdXMgPSBudWxsKSB7ICBcbiAgICB0aGlzLnVybCA9IHVybDsgIFxuICAgIHRoaXMucHJldmlvdXMgPSBwcmV2aW91cztcbiAgICB0aGlzLnBhdGggPSBudWxsO1xuICAgIHRoaXMucm91dGVzID0gW107XG4gICAgdGhpcy5zdGF0ZXMgPSB7fTtcbiAgICB0aGlzLl9fY2FuY2VsbGVkID0gZmFsc2U7ICAgIFxuICAgIHRoaXMuX19maW5pc2hlZCA9IGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlZGlyZWN0IHRvIGFub3RoZXIgc3RhdGVcbiAgICogXG4gICAqIEBzZWUgcm91dGVyLnN0YXRlXG4gICAqL1xuICByZWRpcmVjdChzdGF0ZSwgcGFyYW1zID0ge30sIHF1ZXJ5ID0ge30sIGhhc2ggPSB1bmRlZmluZWQsIG9wdGlvbnMgPSB7fSkge1xuICAgIG9wdGlvbnMgPSB7IC4uLnRoaXMucGF0aC5vcHRpb25zLCAuLi5vcHRpb25zIH07XG4gICAgdGhpcy5jYW5jZWwoKTsgICBcbiAgICByZXR1cm4gcm91dGVyLnN0YXRlLmNhbGwocm91dGVyLCBzdGF0ZSwgcGFyYW1zLCBxdWVyeSwgaGFzaCwgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogUmVsb2FkIHRoZSBjdXJyZW50IHN0YXRlXG4gICAqIFxuICAgKiBAc2VlIHJvdXRlci5zdGF0ZVxuICAgKi9cbiAgcmVsb2FkKHBhcmFtcyA9IHt9LCBxdWVyeSA9IHt9LCBoYXNoID0gdW5kZWZpbmVkLCBvcHRpb25zID0ge30pIHtcbiAgICBvcHRpb25zID0geyAuLi50aGlzLnBhdGgub3B0aW9ucywgLi4ub3B0aW9ucyB9O1xuICAgIHBhcmFtcyA9IHsgLi4udGhpcy5wYXRoLnBhcmFtcywgLi4ucGFyYW1zIH07XG4gICAgcXVlcnkgPSB7IC4uLnRoaXMucGF0aC5xdWVyeSwgLi4ucXVlcnkgfTtcbiAgICBoYXNoID0gaGFzaCA9PT0gdW5kZWZpbmVkPyB0aGlzLnBhdGguaGFzaDogaGFzaDtcbiAgICByZXR1cm4gcm91dGVyLnN0YXRlLmNhbGwocm91dGVyLCB0aGlzLnBhdGguc3RhdGUubmFtZSwgcGFyYW1zLCBxdWVyeSwgaGFzaCwgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHRoZSBjdXJyZW50IHBhdGhcbiAgICogXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBwYXRoIFxuICAgKi9cbiAgc2V0UGF0aChwYXRoKSB7XG4gICAgcGF0aC5wYXJlbnQgPSB0aGlzLnBhdGggfHwgbnVsbDtcbiAgICB0aGlzLnBhdGggPSB7IHBhcmFtczoge30sIHF1ZXJ5OiB7fSwgLi4ucGF0aCB9O1xuICAgIHRoaXMucm91dGVzLnB1c2godGhpcy5wYXRoKTtcbiAgICB0aGlzLnN0YXRlc1t0aGlzLnBhdGguc3RhdGUubmFtZV0gPSB0aGlzLnBhdGg7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGEgcm91dGUgYnkgdGhlIHN0YXRlXG4gICAqICBcbiAgICogQHBhcmFtIHsqfSBzdGF0ZSBcbiAgICovXG4gIGdldFJvdXRlKHN0YXRlKSB7XG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSB0aGlzLnJvdXRlcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGxldCByb3V0ZSA9IHRoaXMucm91dGVzW2ldO1xuXG4gICAgICBpZiAocm91dGUuc3RhdGUgPT09IHN0YXRlKSB7XG4gICAgICAgIHJldHVybiByb3V0ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBpdCBoYXMgdGhlIHN0YXRlXG4gICAqIFxuICAgKiBAcGFyYW0ge29iamVjdH0gc3RhdGUgXG4gICAqL1xuICBoYXNTdGF0ZShzdGF0ZSkge1xuICAgIHJldHVybiAhIXRoaXMuc3RhdGVzW3N0YXRlLm5hbWVdO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIHRoZSByb3V0ZSBpcyBjaGFuZ2VkXG4gICAqIFxuICAgKiBAcGFyYW0ge29iamVjdH0gcm91dGVcbiAgICovXG4gIGlzUm91dGVDaGFuZ2VkKHJvdXRlKSB7XG4gICAgaWYoIXRoaXMucHJldmlvdXMpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGNvbnN0IHN0YXRlID0gcm91dGUuc3RhdGU7XG5cbiAgICBpZighdGhpcy5wcmV2aW91cy5oYXNTdGF0ZShzdGF0ZSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGNvbnN0IHBhcmFtS2V5cyA9IFtdO1xuICAgIHN0YXRlLmZ1bGxQYXR0ZXJuLnJlcGxhY2Uocm91dGVyLl9fcGFyYW1SZWdleCwgKG0sIGYsIHYpID0+IHBhcmFtS2V5cy5wdXNoKHYpKTtcbiAgICBcbiAgICBmb3IobGV0IGtleSBpbiBzdGF0ZS5wYXJhbXMpIHtcbiAgICAgIGlmKHBhcmFtS2V5cy5pbmRleE9mKGtleSkgPT0gLTEpIHtcbiAgICAgICAgcGFyYW1LZXlzLnB1c2goa2V5KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBxdWVyeUtleXMgPSBPYmplY3Qua2V5cyhzdGF0ZS5xdWVyeSk7XG4gICAgY29uc3Qgd2F0Y2hIYXNoID0gc3RhdGUuaGFzaCAhPT0gdW5kZWZpbmVkOyAgICBcbiAgICBjb25zdCBwcmV2Um91dGUgPSB0aGlzLnByZXZpb3VzLmdldFJvdXRlKHN0YXRlKTsgXG5cbiAgICBjb25zdCBwcmV2ID0geyBcbiAgICAgIHBhcmFtczogdXRpbHMuaW5jbHVkZUtleXMocHJldlJvdXRlLnBhcmFtcywgcGFyYW1LZXlzKSwgXG4gICAgICBxdWVyeTogdXRpbHMuaW5jbHVkZUtleXMocHJldlJvdXRlLnF1ZXJ5LCBxdWVyeUtleXMpXG4gICAgfTtcblxuICAgIGNvbnN0IGN1cnJlbnQgPSB7XG4gICAgICBwYXJhbXM6IHV0aWxzLmluY2x1ZGVLZXlzKHJvdXRlLnBhcmFtcywgcGFyYW1LZXlzKSxcbiAgICAgIHF1ZXJ5OiB1dGlscy5pbmNsdWRlS2V5cyhyb3V0ZS5xdWVyeSwgcXVlcnlLZXlzKVxuICAgIH1cblxuICAgIGlmKHdhdGNoSGFzaCkge1xuICAgICAgcHJldi5oYXNoID0gcHJldlJvdXRlLmhhc2g7XG4gICAgICBjdXJyZW50Lmhhc2ggPSByb3V0ZS5oYXNoO1xuICAgIH1cblxuICAgIHJldHVybiAhdXRpbHMuY29tcGFyZShwcmV2LCBjdXJyZW50KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDYW5jZWwgdGhlIGN1cnJlbnQgdHJhbnNpdGlvblxuICAgKi9cbiAgY2FuY2VsKCkgeyAgIFxuICAgIHRoaXMuX19jYW5jZWxsZWQgPSB0cnVlOyAgXG4gICAgdGhpcy5maW5pc2goKTsgIFxuICB9XG5cbiAgLyoqXG4gICAqIEZpbmlzaCB0aGUgdHJhbnNpdGlvblxuICAgKi9cbiAgZmluaXNoKCkge1xuICAgIHRoaXMuX19maW5pc2hlZCA9IHRydWU7XG4gICAgZGVsZXRlIHRoaXMucHJldmlvdXM7XG4gICAgY29uc3QgaW5kZXggPSByb3V0ZXIuX19xdWV1ZS5pbmRleE9mKHRoaXMpO1xuICAgIGluZGV4ID49IDAgJiYgcm91dGVyLl9fcXVldWUuc3BsaWNlKGluZGV4LCAxKTtcbiAgfVxufVxuXG4vKipcbiAqIEFraWxpIHJvdXRlclxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL3JvdXRpbmd9XG4gKi9cbmNvbnN0IHJvdXRlciA9IHt9O1xuXG5yb3V0ZXIuYmFzZVVybCA9IFwiL1wiO1xucm91dGVyLnN0YXRlcyA9IFtdO1xucm91dGVyLmhhc2hNb2RlID0gdHJ1ZTtcbnJvdXRlci50cmFuc2l0aW9uID0gbnVsbDtcbnJvdXRlci5fX3F1ZXVlID0gW107XG5yb3V0ZXIuX19yZWRpcmVjdHMgPSAwO1xucm91dGVyLl9faW5pdCA9IGZhbHNlO1xucm91dGVyLl9fcGFyYW1SZWdleCA9IC8oXFwvPzooW1xcd1xcZC1dKykpL2c7XG5yb3V0ZXIuX19yb3V0ZVNlbGVjdG9yID0gYyA9PiBjIGluc3RhbmNlb2YgUm91dGU7XG5cbi8qKlxuICogQWRkIGEgbmV3IHN0YXRlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBzdGF0ZSBuYW1lLiBUbyBzZXQgcGFyZW50cyB5b3UgY2FuIHVzZSBkb3QsIGUuZy4gJ2FwcC5hcnRpY2xlLmVkaXQnXG4gKiBAcGFyYW0ge3N0cmluZ30gcGF0dGVybiAtIHVybCBwYXR0ZXJuIGxpa2UgJ2FwcC9hcnRpY2xlLzppZCdcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm5zIHtyb3V0ZXJ9XG4gKi9cbnJvdXRlci5hZGQgPSBmdW5jdGlvbiAobmFtZSwgcGF0dGVybiwgb3B0aW9ucyA9IHt9KSB7XG4gIGlmKHR5cGVvZiBuYW1lID09ICdvYmplY3QnKSB7XG4gICAgb3B0aW9ucyA9IG5hbWU7XG4gICAgcGF0dGVybiA9IG9wdGlvbnMucGF0dGVybjtcbiAgICBuYW1lID0gb3B0aW9ucy5zdGF0ZTtcbiAgICBkZWxldGUgb3B0aW9ucy5wYXR0ZXJuO1xuICAgIGRlbGV0ZSBvcHRpb25zLnN0YXRlO1xuICB9XG5cbiAgaWYoIW5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFJvdXRlciBzdGF0ZSBtdXN0IGhhdmUgYSBuYW1lYCk7XG4gIH1cblxuICBjb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICB0ZW1wbGF0ZTogJycsXG4gICAgdGVtcGxhdGVVcmw6ICcnLFxuICAgIGFic3RyYWN0OiBmYWxzZSxcbiAgICBjb21wb25lbnQ6IG51bGwsXG4gICAgcGFyYW1zOiB7fSxcbiAgICBxdWVyeToge30sXG4gICAgaGFuZGxlcjogKCkgPT4ge30sXG4gIH07XG5cbiAgaWYoQWtpbGkub3B0aW9ucy5kZWJ1ZyAmJiBvcHRpb25zLmNvbXBvbmVudCAmJiAob3B0aW9ucy50ZW1wbGF0ZSB8fCBvcHRpb25zLnRlbXBsYXRlVXJsKSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgY29uc29sZS53YXJuKGBSb3V0ZXIgc3RhdGUgXCIke25hbWV9XCIgbXVzdCBvbmx5IGhhdmUgYSBjb21wb25lbnQgb3IgdGVtcGxhdGUgb3B0aW9uYCk7XG4gIH0gXG5cbiAgaWYgKCFvcHRpb25zLnRlbXBsYXRlICYmICFvcHRpb25zLnRlbXBsYXRlVXJsICYmICFvcHRpb25zLmNvbXBvbmVudCkge1xuICAgIG9wdGlvbnMuYWJzdHJhY3QgPSB0cnVlO1xuICB9XG5cbiAgaWYgKHRoaXMuaGFzKG5hbWUpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBSb3V0ZXIgc3RhdGUgXCIke25hbWV9XCIgaXMgYWxyZWFkeSBleGlzdHNgKVxuICB9XG5cbiAgdGhpcy5zZXRTdGF0ZShuYW1lLCBwYXR0ZXJuLCB7Li4uZGVmYXVsdE9wdGlvbnMsIC4uLm9wdGlvbnN9KTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgc3RhdGVcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICovXG5yb3V0ZXIucmVtb3ZlID0gZnVuY3Rpb24obmFtZSkge1xuICBmb3IgKGxldCBpID0gMCwgbCA9IHRoaXMuc3RhdGVzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGlmICh0aGlzLnN0YXRlc1tpXS5uYW1lID09IG5hbWUpIHtcbiAgICAgIHRoaXMuc3RhdGVzLnNwbGljZShpLCAxKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBDaGVjayB0aGUgc3RhdGUgZXhpc3RzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5yb3V0ZXIuaGFzID0gZnVuY3Rpb24obmFtZSkge1xuICBmb3IgKGxldCBpID0gMCwgbCA9IHRoaXMuc3RhdGVzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGlmICh0aGlzLnN0YXRlc1tpXS5uYW1lID09IG5hbWUpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn07XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBzdGF0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdGF0ZVxuICogQHBhcmFtIHtvYmplY3R9IFtwYXJhbXNdIC0gcGFyYW1zIGZvciBzdGF0ZSB7aWQ6IDF9ID0+ICcvYXBwLzppZCcgPT4gJy9hcHAvMSdcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcXVlcnldIC0gcXVlcnkge3g6IDF9ID0+ICcvYXBwLz94PTEnXG4gKiBAcGFyYW0ge3N0cmluZ30gW2hhc2hdXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gKi9cbnJvdXRlci5zdGF0ZSA9IGZ1bmN0aW9uIChzdGF0ZSwgcGFyYW1zID0ge30sIHF1ZXJ5ID0ge30sIGhhc2ggPSB1bmRlZmluZWQsIG9wdGlvbnMgPSB7fSkgeyAgXG4gIHR5cGVvZiBzdGF0ZSAhPT0gJ29iamVjdCcgJiYgKHN0YXRlID0gdGhpcy5nZXRTdGF0ZShzdGF0ZSkpO1xuICBcbiAgaWYgKCFzdGF0ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgTm90IGZvdW5kIHJvdXRlIHN0YXRlIHdpdGggbmFtZSAke3N0YXRlfWApO1xuICB9XG5cbiAgb3B0aW9ucyA9IHsgLi4ub3B0aW9ucyB9O1xuICBvcHRpb25zLm1hbnVhbCA9IHRydWU7XG4gICh7IHBhcmFtcywgcXVlcnksIGhhc2gsIG9wdGlvbnMgfSA9IHRoaXMucHJlcGFyZVN0YXRlQXJncyhzdGF0ZSwgcGFyYW1zLCBxdWVyeSwgaGFzaCwgb3B0aW9ucywgZmFsc2UpKTsgIFxuICBsZXQgdXJsID0gdGhpcy5jcmVhdGVTdGF0ZVVybChzdGF0ZSwgcGFyYW1zLCBxdWVyeSwgaGFzaCwgb3B0aW9ucyk7ICAgIFxuICB0aGlzLmlzb2xhdGUoKCkgPT4gdGhpcy5zZXRVcmwodXJsKSk7XG4gIHJldHVybiB0aGlzLmNoYW5nZVN0YXRlKG9wdGlvbnMpO1xufTtcblxuLyoqXG4gKiBHbyBiYWNrXG4gKi9cbnJvdXRlci5iYWNrID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeS5iYWNrLmFwcGx5KHdpbmRvdy5oaXN0b3J5LCBhcmd1bWVudHMpO1xufTtcblxuLyoqXG4gKiBHbyB0byBzb21lIHBvc2l0aW9uXG4gKi9cbnJvdXRlci5nbyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gd2luZG93Lmhpc3RvcnkuZ28uYXBwbHkod2luZG93Lmhpc3RvcnksIGFyZ3VtZW50cyk7XG59O1xuXG4vKipcbiAqIEdvIGZvcndhcmRcbiAqL1xucm91dGVyLmZvcndhcmQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LmZvcndhcmQuYXBwbHkod2luZG93Lmhpc3RvcnksIGFyZ3VtZW50cyk7XG59O1xuXG4vKipcbiAqIENoYW5nZSB0aGUgc3RhdGUgYnkgdGhlIHVybFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqL1xucm91dGVyLmxvY2F0aW9uID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gIG9wdGlvbnMgPSB7IC4uLm9wdGlvbnMgfTtcbiAgb3B0aW9ucy5tYW51YWwgPSB0cnVlO1xuICB0aGlzLmlzb2xhdGUoKCkgPT4gdGhpcy5zZXRVcmwodXJsKSk7ICBcbiAgcmV0dXJuIHRoaXMuY2hhbmdlU3RhdGUob3B0aW9ucyk7XG59O1xuXG4vKipcbiAqIEluaXRpYWxpemUgdGhlIHJvdXRlci4gXG4gKiBNdXN0IGJlIGNhbGxlZCBiZWZvcmUgQWtpbGkuaW5pdCgpXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IFtkZWZhdWx0VXJsXVxuICogQHBhcmFtIHtib29sZWFufSBbaGFzaE1vZGU9dHJ1ZV1cbiAqL1xucm91dGVyLmluaXQgPSBmdW5jdGlvbiAoZGVmYXVsdFVybCA9ICcnLCBoYXNoTW9kZSA9IHRydWUpIHtcbiAgbGV0IG9sZFB1c2hTdGF0ZSA9IHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZTtcblxuICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUgPSBmdW5jdGlvbigpIHtcbiAgICBsZXQgcmVzID0gb2xkUHVzaFN0YXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICByb3V0ZXIuY2hhbmdlU3RhdGUoKS5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcihlcnIpKTtcbiAgICByZXR1cm4gcmVzO1xuICB9O1xuXG4gIHRoaXMuX19vblN0YXRlQ2hhbmdlSGFuZGxlciA9ICgpID0+IHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIHRoaXMuY2hhbmdlU3RhdGUoKS5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcihlcnIpKTtcbiAgfTtcblxuICB0aGlzLmRlZmF1bHRVcmwgPSBkZWZhdWx0VXJsO1xuICB0aGlzLmhhc2hNb2RlID0gaGFzaE1vZGU7ICAgIFxuXG4gIHRoaXMuc3RhdGVzLnNvcnQoKGEsIGIpID0+IHtcbiAgICBhID0gYS5uYW1lLnNwbGl0KCcuJykubGVuZ3RoO1xuICAgIGIgPSBiLm5hbWUuc3BsaXQoJy4nKS5sZW5ndGg7XG4gICAgcmV0dXJuIGEgLSBiO1xuICB9KTtcblxuICBmb3IgKGxldCBpID0gMCwgbCA9IHRoaXMuc3RhdGVzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIHRoaXMuaW5pdFN0YXRlKHRoaXMuc3RhdGVzW2ldKTtcbiAgfVxuXG4gIGlmICghdGhpcy5zdGF0ZXMubGVuZ3RoICYmIEFraWxpLm9wdGlvbnMuZGVidWcpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUud2FybihgWW91IGRpZG4ndCBhZGQgYW55IHJvdXRlcyB0byB0aGUgcm91dGVyYCk7XG4gIH1cblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncG9wc3RhdGUnLCB0aGlzLl9fb25TdGF0ZUNoYW5nZUhhbmRsZXIpO1xuICB0aGlzLl9faW5pdCA9IHRydWU7XG59O1xuXG4vKipcbiAqIEluaXRpYWxpemUgdGhlIHN0YXRlIFxuICogXG4gKiBAcGFyYW0ge29iamVjdH0gc3RhdGUgXG4gKi9cbnJvdXRlci5pbml0U3RhdGUgPSBmdW5jdGlvbiAoc3RhdGUpIHtcbiAgbGV0IHBhcmVudHMgPSBbXTtcbiAgc3RhdGUuY2hpbGRyZW4gPSBbXTtcbiAgcGFyZW50cyA9IHN0YXRlLm5hbWUuc3BsaXQoJy4nKTtcbiAgcGFyZW50cy5wb3AoKTtcbiAgc3RhdGUubGV2ZWwgPSBzdGF0ZS5hYnN0cmFjdD8gbnVsbDogcGFyZW50cy5sZW5ndGg7XG5cbiAgaWYgKHBhcmVudHMubGVuZ3RoKSB7XG4gICAgbGV0IHBhcmVudE5hbWUgPSBwYXJlbnRzLmpvaW4oJy4nKTtcbiAgICBsZXQgcGFyZW50ID0gdGhpcy5nZXRTdGF0ZShwYXJlbnROYW1lKTtcblxuICAgIGlmICghcGFyZW50KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vdCBmb3VuZCBwYXJlbnQgcm91dGUgc3RhdGUgXCIke3BhcmVudE5hbWV9XCIgZm9yIFwiJHtzdGF0ZS5uYW1lfVwiYClcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUubGV2ZWwgIT09IG51bGwgJiYgcGFyZW50LmFic3RyYWN0KSB7XG4gICAgICBzdGF0ZS5sZXZlbC0tO1xuICAgIH1cblxuICAgIHN0YXRlLmZ1bGxQYXR0ZXJuID0gdGhpcy5zcGxpdFNsYXNoZXMocGFyZW50LmZ1bGxQYXR0ZXJuICsgJy8nICsgc3RhdGUucGF0dGVybik7XG4gICAgcGFyZW50LmNoaWxkcmVuLnB1c2goc3RhdGUpO1xuICB9XG4gIGVsc2Uge1xuICAgIHN0YXRlLmZ1bGxQYXR0ZXJuID0gc3RhdGUucGF0dGVybjtcbiAgfVxufVxuXG4vKipcbiAqIEdldCB0aGUgc3RhdGUgYnkgdGhlIG5hbWVcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICogQHJldHVybnMge29iamVjdHxudWxsfVxuICovXG5yb3V0ZXIuZ2V0U3RhdGUgPSBmdW5jdGlvbiAobmFtZSkge1xuICBmb3IgKGxldCBpID0gMCwgbCA9IHRoaXMuc3RhdGVzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGxldCBzdGF0ZSA9IHRoaXMuc3RhdGVzW2ldO1xuXG4gICAgaWYgKHN0YXRlLm5hbWUgPT0gbmFtZSkge1xuICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufTtcblxuLyoqXG4gKiBTZXQgdGhlIHN0YXRlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXR0ZXJuXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICovXG5yb3V0ZXIuc2V0U3RhdGUgPSBmdW5jdGlvbiAobmFtZSwgcGF0dGVybiwgb3B0aW9ucyA9IHt9KSB7XG4gIGxldCBzdGF0ZSA9IHsuLi5vcHRpb25zLCBuYW1lLCBwYXR0ZXJufTtcbiAgdGhpcy5zdGF0ZXMucHVzaChzdGF0ZSk7XG4gIHRoaXMuX19pbml0ICYmIHRoaXMuaW5pdFN0YXRlKHN0YXRlKTtcbiAgcmV0dXJuIHN0YXRlO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgdGhlIHN0YXRlIGJ5IHRoZSBuYW1lXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqL1xucm91dGVyLnJlbW92ZVN0YXRlID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgZm9yIChsZXQgaSA9IDAsIGwgPSB0aGlzLnN0YXRlcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBsZXQgc3RhdGUgPSB0aGlzLnN0YXRlc1tpXTtcblxuICAgIGlmIChzdGF0ZS5uYW1lID09IG5hbWUpIHtcbiAgICAgIHRoaXMuc3RhdGVzLnNwbGljZShpLCAxKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBTZXQgdGhlIHVybFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAqL1xucm91dGVyLnNldFVybCA9IGZ1bmN0aW9uICh1cmwpIHtcbiAgdGhpcy5oYXNoTW9kZT8gdGhpcy5zZXRIYXNoVXJsKHVybCk6IHRoaXMuc2V0SGlzdG9yeVVybCh1cmwpO1xufTtcblxuLyoqXG4gKiBTZXQgdGhlIHVybCB1c2luZyB0aGUgaGlzdG9yeVxuICpcbiAqIEBwYXJhbSB1cmxcbiAqL1xucm91dGVyLnNldEhpc3RvcnlVcmwgPSBmdW5jdGlvbiAodXJsKSB7XG4gIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSh1bmRlZmluZWQsIHVuZGVmaW5lZCwgdXJsKTtcbn07XG5cbi8qKlxuICogU2V0IHRoZSB1cmwgdXNpbmcgdGhlIGhhc2hcbiAqXG4gKiBAcGFyYW0gdXJsXG4gKi9cbnJvdXRlci5zZXRIYXNoVXJsID0gZnVuY3Rpb24gKHVybCkge1xuICB3aW5kb3cubG9jYXRpb24uaGFzaCA9ICcjJyArICh1cmwgfHwgJy8nKTtcbn07XG5cbi8qKlxuICogUmVwbGFjZSB0aGUgdXJsXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICovXG5yb3V0ZXIucmVwbGFjZVVybCA9IGZ1bmN0aW9uICh1cmwpIHtcbiAgdGhpcy5oYXNoTW9kZT8gdGhpcy5yZXBsYWNlSGFzaFVybCh1cmwpOiB0aGlzLnJlcGxhY2VIaXN0b3J5VXJsKHVybCk7XG59O1xuXG4vKipcbiAqIFJlcGxhY2UgdGhlIHVybCB1c2luZyB0aGUgaGlzdG9yeVxuICpcbiAqIEBwYXJhbSB1cmxcbiAqL1xucm91dGVyLnJlcGxhY2VIaXN0b3J5VXJsID0gZnVuY3Rpb24gKHVybCkge1xuICB3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUodW5kZWZpbmVkLCB1bmRlZmluZWQsIHVybCk7XG59O1xuXG4vKipcbiAqIFJlcGxhY2UgdGhlIHVybCB1c2luZyB0aGUgaGFzaFxuICpcbiAqIEBwYXJhbSB1cmxcbiAqL1xucm91dGVyLnJlcGxhY2VIYXNoVXJsID0gZnVuY3Rpb24gKHVybCkge1xuICB3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUodW5kZWZpbmVkLCB1bmRlZmluZWQsICcjJyArICh1cmwgfHwgJy8nKSk7XG59O1xuXG4vKipcbiAqIEdldCB0aGUgdXJsXG4gKlxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xucm91dGVyLmdldFVybCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuaGFzaE1vZGUgPyB0aGlzLmdldEhhc2hVcmwoKSA6IHRoaXMuZ2V0SGlzdG9yeVVybCgpO1xufTtcblxuLyoqXG4gKiBHZXQgdGhlIHVybCB1c2luZyB0aGUgaGlzdG9yeVxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbnJvdXRlci5nZXRIaXN0b3J5VXJsID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgd2luZG93LmxvY2F0aW9uLnNlYXJjaCArIHdpbmRvdy5sb2NhdGlvbi5oYXNoO1xufTtcblxuLyoqXG4gKiBHZXQgdGhlIHVybCB1c2luZyB0aGUgaGFzaFxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbnJvdXRlci5nZXRIYXNoVXJsID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gd2luZG93LmxvY2F0aW9uLmhhc2gucmVwbGFjZSgvXiMvLCAnJyk7XG59O1xuXG4vKipcbiAqIEdldCB0aGUgcXVlcnkgcGFyYW1zXG4gKlxuICogQHJldHVybnMge29iamVjdH1cbiAqL1xucm91dGVyLmdldFVybFF1ZXJ5ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmhhc2hNb2RlID8gdGhpcy5nZXRIYXNoVXJsUXVlcnkoKSA6IHRoaXMuZ2V0SGlzdG9yeVVybFF1ZXJ5KCk7XG59O1xuXG4vKipcbiAqIEdldCB0aGUgcXVlcnkgcGFyYW1zIHVzaW5nIHRoZSBoaXN0b3J5XG4gKlxuICogQHJldHVybnMge29iamVjdH1cbiAqL1xucm91dGVyLmdldEhpc3RvcnlVcmxRdWVyeSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcmVxdWVzdC5wYXJhbXNGcm9tUXVlcnkod2luZG93LmxvY2F0aW9uLnNlYXJjaC5yZXBsYWNlKC9eXFw/LywgJycpKTtcbn07XG5cbi8qKlxuICogR2V0IHRoZSBxdWVyeSBwYXJhbXMgdXNpbmcgdGhlIGhhc2hcbiAqXG4gKiBAcmV0dXJucyB7b2JqZWN0fVxuICovXG5yb3V0ZXIuZ2V0SGFzaFVybFF1ZXJ5ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiByZXF1ZXN0LnBhcmFtc0Zyb21RdWVyeSgod2luZG93LmxvY2F0aW9uLmhhc2guc3BsaXQoJz8nKVsxXSB8fCAnJykpO1xufTtcblxuLyoqXG4gKiBDcmVhdGUgdGhlIHVybFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfE9iamVjdH0gc3RhdGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXVxuICogQHBhcmFtIHtvYmplY3R9IFtxdWVyeV1cbiAqIEBwYXJhbSB7c3RyaW5nfSBbaGFzaF1cbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW3ByZXBhcmVdXG4gKi9cbnJvdXRlci5jcmVhdGVTdGF0ZVVybCA9IGZ1bmN0aW9uIChzdGF0ZSwgcGFyYW1zID0ge30sIHF1ZXJ5ID0ge30sIGhhc2ggPSB1bmRlZmluZWQsIG9wdGlvbnMgPSB7fSwgcHJlcGFyZSA9IHRydWUpIHtcbiAgdHlwZW9mIHN0YXRlICE9PSAnb2JqZWN0JyAmJiAoc3RhdGUgPSB0aGlzLmdldFN0YXRlKHN0YXRlKSk7XG4gIG9wdGlvbnMgPSB7IC4uLm9wdGlvbnMgfTtcbiAgXG4gIGlmKHByZXBhcmUpIHtcbiAgICAoeyBwYXJhbXMsIHF1ZXJ5LCBoYXNoLCBvcHRpb25zIH0gPSB0aGlzLnByZXBhcmVTdGF0ZUFyZ3Moc3RhdGUsIHBhcmFtcywgcXVlcnksIGhhc2gsIG9wdGlvbnMpKTtcbiAgfVxuXG4gIGxldCB1cmwgPSBzdGF0ZS5mdWxsUGF0dGVybi5yZXBsYWNlKHRoaXMuX19wYXJhbVJlZ2V4LCAobSwgZiwgdikgPT4gJy8nICsgKHBhcmFtc1t2XSB8fCAnJykpO1xuICB1cmwgPSB1cmwucmVwbGFjZSgvXlxcXi8sICcnKTtcbiAgdXJsID0gdGhpcy5zcGxpdFNsYXNoZXModXJsKTtcblxuICBpZiAoT2JqZWN0LmtleXMocXVlcnkpLmxlbmd0aCkge1xuICAgIHVybCArPSAnPycgKyByZXF1ZXN0LnBhcmFtc1RvUXVlcnkocXVlcnkpO1xuICB9XG5cbiAgaWYgKCF0aGlzLmhhc2hNb2RlICYmIGhhc2gpIHtcbiAgICB1cmwgKz0gJyMnICsgaGFzaC5yZXBsYWNlKCcjJywgJycpO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07XG5cbi8qKlxuICogUHJlcGFyZSB0aGUgc3RhdGUgYXJndW1lbnRzXG4gKiBcbiAqIEBwYXJhbSB7c3RyaW5nfE9iamVjdH0gc3RhdGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXVxuICogQHBhcmFtIHtvYmplY3R9IFtxdWVyeV1cbiAqIEBwYXJhbSB7c3RyaW5nfSBbaGFzaF1cbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqL1xucm91dGVyLnByZXBhcmVTdGF0ZUFyZ3MgPSBmdW5jdGlvbiAoc3RhdGUsIHBhcmFtcyA9IHt9LCBxdWVyeSA9IHt9LCBoYXNoID0gdW5kZWZpbmVkLCBvcHRpb25zID0ge30pIHtcbiAgbGV0IGFyZ3MgPSB7IHBhcmFtcywgcXVlcnksIGhhc2gsIG9wdGlvbnMgfTtcblxuICBmb3IobGV0IGkgPSAwOyBpIDwgMjc7IGkrKykge1xuICAgIGNvbnN0IHBhcmFtc1RlbXAgPSB0aGlzLnByZXBhcmVTdGF0ZVBhcmFtcyhzdGF0ZSwgcGFyYW1zLCBhcmdzKTtcbiAgICBjb25zdCBxdWVyeVRlbXAgPSB0aGlzLnByZXBhcmVTdGF0ZVF1ZXJ5KHN0YXRlLCBxdWVyeSwgYXJncyk7XG4gICAgY29uc3QgaGFzaFRlbXAgPSB0aGlzLnByZXBhcmVTdGF0ZUhhc2goc3RhdGUsIGhhc2gsIGFyZ3MpO1xuICAgIFxuICAgIGlmKGhhc2hUZW1wID09PSBudWxsKSB7XG4gICAgICBvcHRpb25zLmVtcHR5SGFzaCA9IG51bGw7XG4gICAgfVxuICAgIGVsc2UgaWYoaGFzaFRlbXAgPT09ICcnKSB7XG4gICAgICBvcHRpb25zLmVtcHR5SGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGNvbnN0IG5ld0FyZ3MgPSB7IHBhcmFtczogcGFyYW1zVGVtcCwgcXVlcnk6IHF1ZXJ5VGVtcCwgaGFzaDogaGFzaFRlbXAsIG9wdGlvbnMgfTtcblxuICAgIGlmKHV0aWxzLmNvbXBhcmUobmV3QXJncywgYXJncykpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGFyZ3MgPSBuZXdBcmdzO1xuICB9XG4gICAgXG4gIHJldHVybiBhcmdzO1xufVxuXG4vKipcbiAqIFByZXBhcmUgdGhlIHN0YXRlIHBhcmFtc1xuICogXG4gKiBAcGFyYW0ge3N0cmluZ3xPYmplY3R9IHN0YXRlXG4gKiBAcGFyYW0ge29iamVjdH0gcGFyYW1zXG4gKiBAcGFyYW0ge29iamVjdH0gW2FyZ3NdXG4gKi9cbnJvdXRlci5wcmVwYXJlU3RhdGVQYXJhbXMgPSBmdW5jdGlvbihzdGF0ZSwgcGFyYW1zLCBhcmdzKSB7XG4gIHR5cGVvZiBzdGF0ZSAhPT0gJ29iamVjdCcgJiYgKHN0YXRlID0gdGhpcy5nZXRTdGF0ZShzdGF0ZSkpO1xuICBjb25zdCBzdGF0ZXMgPSBzdGF0ZS5uYW1lLnNwbGl0KCcuJyk7XG4gIHBhcmFtcyA9IE9iamVjdC5hc3NpZ24oe30sIHBhcmFtcyk7XG5cbiAgZm9yKGxldCBpID0gc3RhdGVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgY29uc3QgY3VycmVudCA9IHN0YXRlcy5zbGljZSgwLCBzdGF0ZXMubGVuZ3RoIC0gaSkuam9pbignLicpO1xuICAgIHBhcmFtcyA9IHRoaXMuY3JlYXRlU3RhdGVPYmplY3RBcmdzKHBhcmFtcywgdGhpcy5nZXRTdGF0ZShjdXJyZW50KS5wYXJhbXMsIGFyZ3MpO1xuICB9XG5cbiAgcmV0dXJuIHBhcmFtcztcbn1cblxuLyoqXG4gKiBQcmVwYXJlIHRoZSBzdGF0ZSBxdWVyeVxuICogXG4gKiBAcGFyYW0ge3N0cmluZ3xPYmplY3R9IHN0YXRlXG4gKiBAcGFyYW0ge29iamVjdH0gcXVlcnlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbYXJnc11cbiAqL1xucm91dGVyLnByZXBhcmVTdGF0ZVF1ZXJ5ID0gZnVuY3Rpb24oc3RhdGUsIHF1ZXJ5LCBhcmdzKSB7ICBcbiAgdHlwZW9mIHN0YXRlICE9PSAnb2JqZWN0JyAmJiAoc3RhdGUgPSB0aGlzLmdldFN0YXRlKHN0YXRlKSk7XG4gIGNvbnN0IHN0YXRlcyA9IHN0YXRlLm5hbWUuc3BsaXQoJy4nKTtcbiAgcXVlcnkgPSBPYmplY3QuYXNzaWduKHt9LCBxdWVyeSk7XG5cbiAgZm9yKGxldCBpID0gc3RhdGVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgY29uc3QgY3VycmVudCA9IHN0YXRlcy5zbGljZSgwLCBzdGF0ZXMubGVuZ3RoIC0gaSkuam9pbignLicpO1xuICAgIHF1ZXJ5ID0gdGhpcy5jcmVhdGVTdGF0ZU9iamVjdEFyZ3MocXVlcnksIHRoaXMuZ2V0U3RhdGUoY3VycmVudCkucXVlcnksIGFyZ3MpO1xuICB9XG5cbiAgcmV0dXJuIHF1ZXJ5O1xufVxuXG4vKipcbiAqIENyZWF0ZSB0aGUgc3RhdGUgYXJndW1lbnRzXG4gKiBcbiAqIEBwYXJhbSB7b2JqZWN0fSBjdXJyZW50XG4gKiBAcGFyYW0ge29iamVjdH0gZGVmYXVsdHNcbiAqIEBwYXJhbSB7b2JqZWN0fSBbYXJnc11cbiAqL1xucm91dGVyLmNyZWF0ZVN0YXRlT2JqZWN0QXJncyA9IGZ1bmN0aW9uIChjdXJyZW50LCBkZWZhdWx0cywgYXJncyA9IHsgcGFyYW1zOiB7fSwgcXVlcnk6IHt9IH0pIHtcbiAgY29uc3QgYWxsID0gT2JqZWN0LmFzc2lnbih7fSwgY3VycmVudCk7XG5cbiAgZm9yKGxldCBrZXkgaW4gZGVmYXVsdHMpIHtcbiAgICBsZXQgdmFsID0gZGVmYXVsdHNba2V5XTtcblxuICAgIGlmKGFsbFtrZXldID09PSBudWxsKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZih0eXBlb2YgdmFsID09ICdmdW5jdGlvbicpIHtcbiAgICAgIGFsbFtrZXldID0gdmFsKGFyZ3MpO1xuICAgIH1cblxuICAgIGlmKGFsbFtrZXldID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGFsbFtrZXldID0gdmFsO1xuICAgIH1cbiAgfVxuXG4gIGZvcihsZXQga2V5IGluIGFsbCkge1xuICAgIGlmKGFsbFtrZXldID09PSBudWxsKSB7XG4gICAgICBkZWxldGUgYWxsW2tleV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGFsbDsgXG59XG5cbi8qKlxuICogUHJlcGFyZSB0aGUgc3RhdGUgaGFzaFxuICogXG4gKiBAcGFyYW0ge3N0cmluZ3xPYmplY3R9IHN0YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gaGFzaFxuICogQHBhcmFtIHtvYmplY3R9IFthcmdzXVxuICovXG5yb3V0ZXIucHJlcGFyZVN0YXRlSGFzaCA9IGZ1bmN0aW9uKHN0YXRlLCBoYXNoLCBhcmdzKSB7XG4gIGlmKGhhc2ggPT09IG51bGwpIHtcbiAgICByZXR1cm4gaGFzaDtcbiAgfVxuXG4gIHR5cGVvZiBzdGF0ZSAhPT0gJ29iamVjdCcgJiYgKHN0YXRlID0gdGhpcy5nZXRTdGF0ZShzdGF0ZSkpO1xuICBjb25zdCBzdGF0ZXMgPSBzdGF0ZS5uYW1lLnNwbGl0KCcuJyk7XG5cbiAgZm9yKGxldCBpID0gc3RhdGVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgY29uc3QgY3VycmVudCA9IHN0YXRlcy5zbGljZSgwLCBzdGF0ZXMubGVuZ3RoIC0gaSkuam9pbignLicpO1xuICAgIGhhc2ggPSB0aGlzLmNyZWF0ZVN0YXRlSGFzaEFyZ3MoaGFzaCwgdGhpcy5nZXRTdGF0ZShjdXJyZW50KS5oYXNoLCBhcmdzKTtcbiAgfVxuICBcbiAgcmV0dXJuIGhhc2g7XG59XG5cbi8qKlxuICogQ3JlYXRlIHRoZSBzdGF0ZSBoYXNoIGFyZ3VtZW50c1xuICogXG4gKiBAcGFyYW0ge3N0cmluZ3xudWxsfSBjdXJyZW50XG4gKiBAcGFyYW0ge3N0cmluZ3xudWxsfSBkZWZhdWx0c1xuICogQHBhcmFtIHtvYmplY3R9IFthcmdzXVxuICovXG5yb3V0ZXIuY3JlYXRlU3RhdGVIYXNoQXJncyA9IGZ1bmN0aW9uIChjdXJyZW50LCBkZWZhdWx0cywgYXJncyA9IHsgcGFyYW1zOiB7fSwgcXVlcnk6IHt9IH0pIHtcbiAgaWYoY3VycmVudCA9PT0gbnVsbCkge1xuICAgIHJldHVybiBjdXJyZW50O1xuICB9XG5cbiAgaWYodHlwZW9mIGRlZmF1bHRzID09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gZGVmYXVsdHMoYXJncyk7XG4gIH1cblxuICBpZihjdXJyZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gZGVmYXVsdHM7XG4gIH1cblxuICByZXR1cm4gY3VycmVudDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgYWxsIHVubmVjZXNzYXJ5IHNsYXNoZXMgZnJvbSB0aGUgdXJsXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xucm91dGVyLnNwbGl0U2xhc2hlcyA9IGZ1bmN0aW9uICh1cmwpIHtcbiAgcmV0dXJuIHVybC5yZXBsYWNlKC9bL10rL2csICcvJyk7XG59O1xuXG4vKipcbiAqIEdldCB0aGUgcGF0dGVybiBpbmZvXG4gKlxuICogQHBhcmFtIHtzdHJpbmd8T2JqZWN0fSBzdGF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICogQHJldHVybnMge29iamVjdH1cbiAqL1xucm91dGVyLmdldFBhdHRlcm5Db250ZW50ID0gZnVuY3Rpb24gKHN0YXRlLCB1cmwpIHtcbiAgdHlwZW9mIHN0YXRlICE9PSAnb2JqZWN0JyAmJiAoc3RhdGUgPSB0aGlzLmdldFN0YXRlKHN0YXRlKSk7XG4gIGxldCBrZXlzID0gW107XG4gIGxldCBwYXJhbXMgPSB7fTtcblxuICB1cmwgPSB1cmwuc3BsaXQoJz8nKVswXTtcbiAgdXJsID0gdXJsLnNwbGl0KCcjJylbMF07XG5cbiAgbGV0IHVybFBhdHRlcm4gPSBzdGF0ZS5mdWxsUGF0dGVybi5yZXBsYWNlKHRoaXMuX19wYXJhbVJlZ2V4LCAobSwgZiwgdikgPT4ge1xuICAgIGtleXMucHVzaCh2KTtcbiAgICByZXR1cm4gJy8/KFteL10qKSc7XG4gIH0pO1xuXG4gIHVybFBhdHRlcm4gPSB1cmxQYXR0ZXJuLnJlcGxhY2UoLyhbXl4vXSspWy9dKyQvLCAnJDEnKTtcbiAgbGV0IHJlZ2V4ID0gbmV3IFJlZ0V4cCh1cmxQYXR0ZXJuLCAnZycpO1xuICBsZXQgaXNJbmNsdWRlZCA9IHVybC5tYXRjaChyZWdleCk7XG4gIFxuICBpZiAoIWlzSW5jbHVkZWQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHVybC5yZXBsYWNlKHJlZ2V4LCAobSwgLi4uYXJncykgPT4geyBcbiAgICBhcmdzID0gYXJncy5zbGljZSgwLCBhcmdzLmxlbmd0aCAtIDIpO1xuXG4gICAgZm9yKGxldCBpID0gMCwgbCA9IGFyZ3MubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBsZXQgdiA9IGFyZ3NbaV07XG4gICAgICB2ICYmIChwYXJhbXNba2V5c1tpXV0gPSB2KTtcbiAgICB9ICBcbiAgfSk7XG5cbiAgcmV0dXJuIHsgcGFyYW1zIH07XG59O1xuXG4vKipcbiAqIENoZWNrIHRoZSBzdGF0ZSBpcyBhY3RpdmVcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ3xPYmplY3R9IHN0YXRlXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGluY2x1ZGVzXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xucm91dGVyLmlzQWN0aXZlU3RhdGUgPSBmdW5jdGlvbihzdGF0ZSwgaW5jbHVkZXMgPSBmYWxzZSkge1xuICB0eXBlb2Ygc3RhdGUgIT09ICdvYmplY3QnICYmIChzdGF0ZSA9IHRoaXMuZ2V0U3RhdGUoc3RhdGUpKTtcbiAgbGV0IHVybCA9IHJvdXRlci50cmFuc2l0aW9uICYmICFyb3V0ZXIudHJhbnNpdGlvbi5fX2ZpbmlzaGVkPyByb3V0ZXIudHJhbnNpdGlvbi51cmw6IHRoaXMuZ2V0VXJsKCk7XG4gIHVybCA9IHRoaXMuc3BsaXRTbGFzaGVzKCcvJyArIHVybC5zcGxpdCgnPycpWzBdICsgJy8nKTtcbiAgbGV0IHVybFBhdHRlcm4gPSBzdGF0ZS5mdWxsUGF0dGVybi5yZXBsYWNlKHRoaXMuX19wYXJhbVJlZ2V4LCAnLz8oW14vXSopJyk7XG4gIHVybFBhdHRlcm4gPSB1cmxQYXR0ZXJuLnJlcGxhY2UoL15cXF4vLCAnJykucmVwbGFjZSgvXFwkJC8sICcnKTtcbiAgbGV0IHN0ciA9IGluY2x1ZGVzPyB1cmxQYXR0ZXJuOiB0aGlzLnNwbGl0U2xhc2hlcygnXi8nICsgdXJsUGF0dGVybiArICcvJCcpO1xuICBsZXQgcmVnZXggPSBuZXcgUmVnRXhwKHN0cik7ICBcbiAgcmV0dXJuIHJlZ2V4LnRlc3QodXJsKTtcbn07XG5cbi8qKlxuICogQ2hlY2sgdGhlIGN1cnJlbnQgdXJsIGluY2x1ZGVzIHRoZSBzdGF0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfE9iamVjdH0gc3RhdGVcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5yb3V0ZXIuaW5BY3RpdmVTdGF0ZSA9IGZ1bmN0aW9uKHN0YXRlKSB7XG4gIHJldHVybiByb3V0ZXIuaXNBY3RpdmVTdGF0ZShzdGF0ZSwgdHJ1ZSk7XG59O1xuXG4vKipcbiAqIEdldCB0aGUgcm91dGUgY29tcG9uZW50IGJ5IHRoZSBsZXZlbFxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZXZlbFxuICovXG5yb3V0ZXIuZ2V0Um91dGUgPSBmdW5jdGlvbiAobGV2ZWwpIHtcbiAgbGV0IGkgPSAwO1xuXG4gIGNvbnN0IGZpbmQgPSBlbCA9PiB7XG4gICAgbGV0IHJvdXRlID0gZWwuY2hpbGQodGhpcy5fX3JvdXRlU2VsZWN0b3IpO1xuXG4gICAgaWYgKCFyb3V0ZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgaWYgKGkgPT0gbGV2ZWwpIHtcbiAgICAgIHJldHVybiByb3V0ZTtcbiAgICB9XG5cbiAgICBpKys7XG4gICAgcmV0dXJuIGZpbmQocm91dGUpO1xuICB9O1xuXG4gIHJldHVybiBmaW5kKEFraWxpLnJvb3QpO1xufTtcblxuLyoqXG4gKiBHZXQgdGhlIHBhdHRlcm5zIGFycmF5IGluZm9cbiAqXG4gKiBAcGFyYW0ge2FycmF5fSBhcnJcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAqIEByZXR1cm5zIHtvYmplY3R8bnVsbH1cbiAqL1xucm91dGVyLmdldEFycmF5UGF0dGVybkNvbnRlbnQgPSBmdW5jdGlvbiAoYXJyLCB1cmwpIHtcbiAgZm9yIChsZXQgaSA9IDAsIGwgPSBhcnIubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgbGV0IHN0YXRlID0gYXJyW2ldO1xuICAgIGxldCBjb250ZW50ID0gdGhpcy5nZXRQYXR0ZXJuQ29udGVudChzdGF0ZSwgdXJsKTtcblxuICAgIGlmICghY29udGVudCkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgc3RhdGU6IHN0YXRlLCAuLi5jb250ZW50IH07XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5cbi8qKlxuICogR2V0IHRoZSBzdGF0ZXMgYnkgdGhlIGxldmVsXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IGxldmVsXG4gKiBAcmV0dXJucyB7QXJyYXl9XG4gKi9cbnJvdXRlci5nZXRTdGF0ZXNCeUxldmVsID0gZnVuY3Rpb24gKGxldmVsKSB7XG4gIGxldCBzdGF0ZXMgPSBbXTtcblxuICBmb3IgKGxldCBpID0gMCwgbCA9IHRoaXMuc3RhdGVzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGxldCBzdGF0ZSA9IHRoaXMuc3RhdGVzW2ldO1xuXG4gICAgaWYgKHN0YXRlLmxldmVsIDwgbGV2ZWwpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBlbHNlIGlmIChzdGF0ZS5sZXZlbCA+IGxldmVsKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBzdGF0ZXMucHVzaChzdGF0ZSk7XG4gIH1cblxuICByZXR1cm4gc3RhdGVzO1xufTtcblxuLyoqXG4gKiBSZWxvYWQgdGhlIHN0YXRlXG4gKiBcbiAqIEBzZWUgVHJhbnNpdGlvbi5yZWxvYWRcbiAqL1xucm91dGVyLnJlbG9hZCA9IGZ1bmN0aW9uKC4uLmFyZ3MpIHtcbiAgaWYoIXRoaXMudHJhbnNpdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcignTm90IGZvdW5kIGFuIGFjdGl2ZSB0cmFuc2l0aW9uIHRvIHJlbG9hZCB0aGUgc3RhdGUnKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzLnRyYW5zaXRpb24ucmVsb2FkKC4uLmFyZ3MpO1xufVxuXG4vKipcbiAqIElzb2xhdGUgdGhlIGZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHtmdW5jdGlvbn0gZm5cbiAqIEByZXR1cm5zIHsqfVxuICovXG5yb3V0ZXIuaXNvbGF0ZSA9IGZ1bmN0aW9uIChmbikge1xuICB0aGlzLl9faXNvbGF0ZWQgPSB0cnVlO1xuICBsZXQgcmVzID0gZm4oKTtcbiAgdGhpcy5fX2lzb2xhdGVkID0gZmFsc2U7XG4gIHJldHVybiByZXM7XG59XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBzdGF0ZVxuICogXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gKi9cbnJvdXRlci5jaGFuZ2VTdGF0ZSA9IGZ1bmN0aW9uIChvcHRpb25zID0ge30pIHsgICAgXG4gIGlmKHRoaXMuX19pc29sYXRlZCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgfVxuXG4gIGxldCB1cmwgPSB0aGlzLmdldFVybCgpO1xuICBsZXQgdHJhbnNpdGlvbiA9IG5ldyBUcmFuc2l0aW9uKHVybCk7ICBcbiAgdGhpcy5fX3F1ZXVlLnB1c2godHJhbnNpdGlvbik7XG4gIFxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgIGlmKHRoaXMuX19xdWV1ZVswXSA9PT0gdHJhbnNpdGlvbikgeyAgICAgICBcbiAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gICAgICAgIHJlc29sdmUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSkudGhlbigoKSA9PiB7IFxuICAgIHRyYW5zaXRpb24ucHJldmlvdXMgPSByb3V0ZXIudHJhbnNpdGlvbiB8fCBudWxsO1xuICAgIHJvdXRlci50cmFuc2l0aW9uID0gdHJhbnNpdGlvbjtcbiAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ3N0YXRlLWNoYW5nZScsIHsgZGV0YWlsOiB0cmFuc2l0aW9uIH0pKTsgICBcbiAgICBsZXQgcGFyYW1zID0ge307XG4gICAgbGV0IHF1ZXJ5ID0gdGhpcy5nZXRVcmxRdWVyeSgpO1xuICAgIGxldCBoYXNoID0gdGhpcy5oYXNoTW9kZT8gJyc6IHdpbmRvdy5sb2NhdGlvbi5oYXNoLnJlcGxhY2UoJyMnLCAnJyk7IFxuICAgIGxldCBsZXZlbCA9IDA7ICAgICAgXG5cbiAgICBjb25zdCBuZXh0ID0gc3RhdGVzID0+IHtcbiAgICAgIGlmICghc3RhdGVzLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICB9XG5cbiAgICAgIGxldCBjb250ZW50ID0gdGhpcy5nZXRBcnJheVBhdHRlcm5Db250ZW50KHN0YXRlcywgdXJsKTtcblxuICAgICAgaWYgKCFjb250ZW50KSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIH1cblxuICAgICAgbGV0IHN0YXRlID0gY29udGVudC5zdGF0ZTsgXG4gICAgICB0cmFuc2l0aW9uLnNldFBhdGgoeyBzdGF0ZSwgY29tcG9uZW50OiByb3V0ZSB9KTsgICAgXG4gICAgICBwYXJhbXMgPSB7IC4uLnBhcmFtcywgLi4uY29udGVudC5wYXJhbXMgfTtcbiAgICAgIGhhc2ggPSBoYXNoIHx8IG9wdGlvbnMuZW1wdHlIYXNoO1xuICAgICAgKHsgcGFyYW1zLCBxdWVyeSwgaGFzaCwgb3B0aW9ucyB9ID0gdGhpcy5wcmVwYXJlU3RhdGVBcmdzKHN0YXRlLCBwYXJhbXMsIHF1ZXJ5LCBoYXNoLCBvcHRpb25zKSk7ICAgICBcbiAgICAgIGhhc2ggPSBoYXNoIHx8ICcnO1xuICAgICAgbGV0IHJlYWxVcmwgPSB0aGlzLmNyZWF0ZVN0YXRlVXJsKHN0YXRlLCBwYXJhbXMsIHF1ZXJ5LCBoYXNoLCBvcHRpb25zLCBmYWxzZSk7IFxuICAgICAgdGhpcy5pc29sYXRlKCgpID0+IHRoaXMucmVwbGFjZVVybChyZWFsVXJsKSk7IFxuICAgICAgbGV0IHJvdXRlID0gc3RhdGUuYWJzdHJhY3Q/IG51bGw6IHRoaXMuZ2V0Um91dGUobGV2ZWwpO1xuICAgICAgXG4gICAgICBpZiAoIXJvdXRlICYmICFzdGF0ZS5hYnN0cmFjdCkgeyAgICAgIFxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IgKGBOb3QgZm91bmQgcm91dGUgY29tcG9uZW50IGZvciBzdGF0ZSBcIiR7c3RhdGUubmFtZX1cImApO1xuICAgICAgfSAgICBcblxuICAgICAgdHJhbnNpdGlvbi5wYXRoLnBhcmFtcyA9IHBhcmFtcztcbiAgICAgIHRyYW5zaXRpb24ucGF0aC5xdWVyeSA9IHF1ZXJ5O1xuICAgICAgdHJhbnNpdGlvbi5wYXRoLmhhc2ggPSBoYXNoO1xuICAgICAgdHJhbnNpdGlvbi5wYXRoLnVybCA9IHJlYWxVcmw7XG4gICAgICB0cmFuc2l0aW9uLnBhdGgub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAhc3RhdGUuYWJzdHJhY3QgJiYgbGV2ZWwrKztcbiAgICAgIGxldCBpc0RpZmZlcmVudCA9IHRydWU7XG5cbiAgICAgIGlmKHJlYWxVcmwgIT0gdXJsKSB7XG4gICAgICAgIGlzRGlmZmVyZW50ID0gdHJhbnNpdGlvbi5pc1JvdXRlQ2hhbmdlZCh0cmFuc2l0aW9uLnBhdGgpO1xuICAgICAgfVxuICAgICAgICBcbiAgICAgIGxldCBsb2FkID0gaXNEaWZmZXJlbnQgJiYgb3B0aW9ucy5yZWxvYWQgIT09IGZhbHNlOyAgICBcblxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShsb2FkPyBzdGF0ZS5oYW5kbGVyKHRyYW5zaXRpb24pOiB0cmFuc2l0aW9uLnBhdGguZGF0YSkudGhlbihkYXRhID0+IHsgICAgICAgIFxuICAgICAgICB0cmFuc2l0aW9uLnBhdGguZGF0YSA9IGRhdGE7XG4gICAgICAgIHN0YXRlLnRpdGxlICYmIChkb2N1bWVudC50aXRsZSA9IHR5cGVvZiBzdGF0ZS50aXRsZSA9PSAnZnVuY3Rpb24nPyBzdGF0ZS50aXRsZSh0cmFuc2l0aW9uKTogc3RhdGUudGl0bGUpO1xuXG4gICAgICAgIGlmICh0cmFuc2l0aW9uLl9fY2FuY2VsbGVkKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHN0YXRlLmFic3RyYWN0KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcHJldlJvdXRlID0gdHJhbnNpdGlvbi5wcmV2aW91cyAmJiB0cmFuc2l0aW9uLnByZXZpb3VzLmdldFJvdXRlKHN0YXRlKTtcbiAgICAgICAgKHByZXZSb3V0ZSAmJiAhcHJldlJvdXRlLmxvYWRlZCkgJiYgKGxvYWQgPSB0cnVlKTtcbiAgICAgICAgcmV0dXJuIHJvdXRlLnNldFRyYW5zaXRpb24odHJhbnNpdGlvbiwgbG9hZCkudGhlbigoKSA9PiB0cmFuc2l0aW9uLnBhdGgubG9hZGVkID0gdHJ1ZSk7XG4gICAgICB9KS50aGVuKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIG5leHQoc3RhdGUuY2hpbGRyZW4pO1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIHJldHVybiBuZXh0KHRoaXMuZ2V0U3RhdGVzQnlMZXZlbCgwKSkudGhlbigoKSA9PiB7XG4gICAgICBpZiAoIXRyYW5zaXRpb24ucm91dGVzLmxlbmd0aCkge1xuICAgICAgICBpZiAodGhpcy5fX3JlZGlyZWN0cykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgV3Jvbmcgcm91dGVyIGRlZmF1bHQgdXJsIFwiJHt0aGlzLmRlZmF1bHRVcmx9XCJgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmRlZmF1bHRVcmwpIHtcbiAgICAgICAgICBpZiAodGhpcy5kZWZhdWx0VXJsID09IHRoaXMuZ2V0VXJsKCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTm90IGZvdW5kIGFueSByb3V0ZXNgKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLmlzb2xhdGUoKCkgPT4gdGhpcy5yZXBsYWNlVXJsKHRoaXMuZGVmYXVsdFVybCkpOyAgICAgICAgICBcbiAgICAgICAgICB0aGlzLl9fcmVkaXJlY3RzKys7XG4gICAgICAgICAgdHJhbnNpdGlvbi5maW5pc2goKTtcbiAgICAgICAgICByZXR1cm4gdGhpcy5jaGFuZ2VTdGF0ZShvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKEFraWxpLm9wdGlvbnMuZGVidWcpIHtcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgIGNvbnNvbGUud2FybihgTm90IGZvdW5kIGEgZGVmYXVsdCByb3V0ZS4gWW91IGNhbiBwYXNzIGl0IGluIFwicm91dGVyLmluaXQoZGVmYXVsdFVybClcIiBmdW5jdGlvbmApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmICghb3B0aW9ucy5zYXZlU2Nyb2xsUG9zaXRpb24gJiYgKCF0cmFuc2l0aW9uLnBhdGggfHwgIXRyYW5zaXRpb24ucGF0aC5oYXNoKSkge1xuICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX19yZWRpcmVjdHMgPSAwOyAgICAgIFxuICAgICAgd2luZG93LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdzdGF0ZS1jaGFuZ2VkJywgeyBkZXRhaWw6IHRyYW5zaXRpb24gfSkpO1xuICAgICAgdHJhbnNpdGlvbi5maW5pc2goKTtcbiAgICAgIHJldHVybiB0cmFuc2l0aW9uO1xuICAgIH0pO1xuICB9KS5jYXRjaChlcnIgPT4ge1xuICAgIHRyYW5zaXRpb24gJiYgdHJhbnNpdGlvbi5maW5pc2goKTtcbiAgICB0aHJvdyBlcnI7XG4gIH0pXG59O1xuXG4vKipcbiAqIERlaW5pdGlhbGl6ZSB0aGUgcm91dGVyXG4gKi9cbnJvdXRlci5kZWluaXQgPSBmdW5jdGlvbiAoKSB7XG4gIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdwb3BzdGF0ZScsIHRoaXMuX19vblN0YXRlQ2hhbmdlSGFuZGxlcik7XG4gIHRoaXMuX19pbml0ID0gZmFsc2U7XG59O1xuXG5yb3V0ZXIuVHJhbnNpdGlvbiA9IFRyYW5zaXRpb247XG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7IiwiaW1wb3J0IEFraWxpIGZyb20gJy4uL2FraWxpLmpzJztcbmltcG9ydCB1dGlscyBmcm9tICcuLi91dGlscy5qcyc7XG5cbi8qKlxuICogU3RvcmUgYWxsb3dzIHlvdSB0byBzYXZlIGFuZCBzaGFyZSBkYXRhLlxuICogXG4gKiB7QGxpbmsgaHR0cHM6Ly9ha2lsaWpzLmNvbS9kb2NzL3N0b3JlfVxuICovXG5jb25zdCBzdG9yZSA9IG5ldyBQcm94eSh7fSwge1xuICBnZXQ6ICh0YXJnZXQsIGtleSkgPT4ge1xuICAgIGlmIChrZXkgPT0gXCJfX3RhcmdldFwiKSB7XG4gICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRba2V5XTtcbiAgfSxcbiAgc2V0OiAodGFyZ2V0LCBrZXksIHZhbHVlKSA9PiB7XG4gICAgaWYodXRpbHMuY29tcGFyZSh0YXJnZXRba2V5XSwgdmFsdWUpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgXG4gICAgdmFsdWUgPSB1dGlscy5jb3B5KHZhbHVlLCB7IHBsYWluOiB0cnVlIH0pO1xuICAgIHRhcmdldFtrZXldID0gdmFsdWU7XG4gICAgQWtpbGkucm9vdCAmJiBBa2lsaS5yb290Ll9fc3RvcmVUcmlnZ2VyQnlOYW1lKGtleSwgdmFsdWUpOyAgICBcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcbiAgZGVsZXRlUHJvcGVydHk6ICh0YXJnZXQsIGtleSkgPT4ge1xuICAgIEFraWxpLnJvb3QgJiYgQWtpbGkucm9vdC5fX3N0b3JlVHJpZ2dlckJ5TmFtZShrZXksIHVuZGVmaW5lZCk7XG4gICAgZGVsZXRlIHRhcmdldFtrZXldO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgc3RvcmU7IiwiaW1wb3J0IEV2ZW50RW1pdHRlciBmcm9tICcuL2V2ZW50LWVtaXR0ZXIuanMnXG5cbi8qKlxuICogVGhlIG9iamVjdCB3aXRoIGEgbG90IG9mIHVzZWZ1bCBmdW5jdGlvbnNcbiAqIFxuICoge0BsaW5rIGh0dHBzOi8vYWtpbGlqcy5jb20vZG9jcy91dGlsc31cbiAqL1xuY29uc3QgdXRpbHMgPSB7fTtcblxuLyoqXG4gKiBDcmVhdGUgdGhlIGNsYXNzIGF0dHJpYnV0ZSBmcm9tIHRoZSBvYmplY3RcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gcmV0dXJucyBcInJlZCBhY3RpdmVcIlxuICogdXRpbHMuY2xhc3Moe3JlZDogdHJ1ZSwgYWN0aXZlOiB0cnVlLCBncmVlbjogZmFsc2V9KTtcbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG51dGlscy5jbGFzcyA9IGZ1bmN0aW9uIChvYmopIHtcbiAgaWYgKCFvYmogfHwgdHlwZW9mIG9iaiAhPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBsZXQgY2xhc3NlcyA9IFtdO1xuICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG5cbiAgZm9yIChsZXQgaSA9IDAsIGwgPSBrZXlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGxldCBrID0ga2V5c1tpXTtcbiAgICBsZXQgdmFsID0gb2JqW2tdO1xuICAgIHZhbCAmJiBjbGFzc2VzLnB1c2goayk7XG4gIH1cblxuICByZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XG59O1xuXG4vKipcbiAqIENyZWF0ZSB0aGUgc3R5bGUgYXR0cmlidXRlIGZyb20gdGhlIG9iamVjdFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyByZXR1cm5zIFwiY29sb3I6cmVkO3dpZHRoOjEwcHhcIlxuICogdXRpbHMuc3R5bGUoe2NvbG9yOiBcInJlZFwiLCBiYWNrZ3JvdW5kOiBmYWxzZSwgd2lkdGg6IFwiMTBweFwifSk7XG4gKlxuICogQHBhcmFtIHtvYmplY3R9IG9ialxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xudXRpbHMuc3R5bGUgPSBmdW5jdGlvbihvYmopIHtcbiAgaWYgKCFvYmogfHwgdHlwZW9mIG9iaiAhPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBsZXQgc3R5bGVzID0gW107XG4gIGxldCBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcblxuICBmb3IgKGxldCBpID0gMCwgbCA9IGtleXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgbGV0IGsgPSBrZXlzW2ldO1xuICAgIGxldCB2YWwgPSBvYmpba107XG4gICAgdmFsICYmIHN0eWxlcy5wdXNoKGAke3RoaXMudG9EYXNoQ2FzZShrKX06JHt2YWx9YCk7XG4gIH1cblxuICByZXR1cm4gc3R5bGVzLmpvaW4oJzsnKTtcbn07XG5cbi8qKlxuICogU3BsaXQgdGhlIHN0cmluZyBleHRlbmRlZFxuICogXG4gKiBAZXhhbXBsZVxuICogLy8gcmV0dXJucyBbXCJIZWxsb1wiLCBcIldvcmxkXCJdXG4gKiB1dGlscy5zcGxpdChcIkhlbGxvIFdvcmxkXCIsIFwiIFwiKTtcbiAqIFxuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMgWyd4ID0gNScsICcgeSA9IFwiMTsyOzNcIiddXG4gKiB1dGlscy5zcGxpdCgneCA9IDU7IHkgPSBcIjE7MjszXCInLCBcIjtcIiwgWydcIiddKTtcbiAqIFxuICogQHBhcmFtIHtzdHJpbmd8UmVnRXhwfSBzdHIgXG4gKiBAcGFyYW0ge3N0cmluZ30gW2RlbF1cbiAqIEBwYXJhbSB7c3RyaW5nW119IFtleGNsdWRlXSBcbiAqL1xudXRpbHMuc3BsaXQgPSBmdW5jdGlvbihzdHIsIGRlbCA9ICcnLCBleGNsdWRlID0gW10pIHtcblx0Y29uc3QgZXhwcyA9IFtdOyAgICAgXG4gIGxldCBsYXN0ID0gJyc7XG5cbiAgaWYoIWRlbCkge1xuICAgIHJldHVybiBzdHIuc3BsaXQoJycpO1xuICB9XG4gIGVsc2UgaWYoZGVsIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHN0ci5zcGxpdChkZWwpO1xuICB9XG4gIGVsc2UgaWYoc3RyLmluZGV4T2YoZGVsKSA9PSAtMSkge1xuICAgIGxhc3QgPSBzdHI7XG4gIH1cbiAgZWxzZSB7XG4gICAgY29uc3QgYXJyID0gc3RyLnNwbGl0KCcnKTtcbiAgICBsZXQgb3BlbiA9ICcnOyBcblxuICAgIGZvcihsZXQgaSA9IDAsIGwgPSBhcnIubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBsZXQgdmFsID0gYXJyW2ldO1xuICAgICAgbGV0IGluZGV4ID0gZXhjbHVkZS5pbmRleE9mKHZhbCk7ICAgICAgXG5cbiAgICAgIGlmKGluZGV4ID4gLTEgJiYgKCFvcGVuIHx8IG9wZW4gPT0gdmFsKSkge1xuICAgICAgICAhb3Blbj8gb3BlbiA9IGV4Y2x1ZGVbaW5kZXhdOiBvcGVuID0gJyc7XG4gICAgICB9XG5cbiAgICAgIGlmKHZhbCA9PSBkZWwgJiYgIW9wZW4pIHtcbiAgICAgICAgZXhwcy5wdXNoKGxhc3QpO1xuICAgICAgICBsYXN0ID0gJyc7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBsYXN0ICs9IHZhbDtcbiAgICB9XG4gIH1cblxuICBsYXN0ICYmIGV4cHMucHVzaChsYXN0KTtcbiAgcmV0dXJuIGV4cHM7XG59XG5cbi8qKlxuICogRmlsdGVyIHRoZSBhcnJheVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyByZXR1cm5zIFsxLCAxMV1cbiAqIHV0aWxzLmZpbHRlcihbMSwgMiwgMywgMTFdLCAnMScpO1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyByZXR1cm5zIFt7eDogMX0sIHt4OiAxMX1dXG4gKiB1dGlscy5maWx0ZXIoW3t4OiAxfSwge3g6IDJ9LCB7eDogM30sIHt4OiAxMX1dLCAnMScsICd4Jyk7XG4gKiBcbiAqIEBleGFtcGxlXG4gKiAvLyByZXR1cm5zIFt7eDogMX0sIHt4OiAxMX1dXG4gKiB1dGlscy5maWx0ZXIoW3t4OiAxfSwge3g6IDJ9LCB7eDogM30sIHt4OiAxMX1dLCAnMScsIFsneCddKTtcbiAqIFxuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMgW3t4OiAxfSwge3g6IDExfV1cbiAqIHV0aWxzLmZpbHRlcihbe3g6IDF9LCB7eDogMn0sIHt4OiAzfSwge3g6IDExfV0sICcxJywgW1sneCddXSk7XG4gKiBcbiAqIEBleGFtcGxlXG4gKiAvLyByZXR1cm5zIFt7eDoge3k6IDF9fV1cbiAqIHV0aWxzLmZpbHRlcihbe3g6IHt5OiAxfX0sIHt4OiB7eTogMn19XSwgJzEnLCBbWyd4JywgJ3knXV0pO1xuICogXG4gKiBAZXhhbXBsZVxuICogLy8gcmV0dXJucyBbe3g6MSwgeTogMn0sIHt4OiAyLCB5OjF9XSBcbiAqIHV0aWxzLmZpbHRlcihbe3g6IDEsIHk6IDJ9LCB7eDogMywgeTogM30sIHt4OiAyLCB5OiAxfV0sICcxJywgWyd4JywgJ3knXSk7XG4gKiBcbiAqIEBleGFtcGxlXG4gKiAvLyByZXR1cm5zIFt7eDoxLCB5OiAyfSwge3g6IDIsIHk6MX1dXG4gKiB1dGlscy5maWx0ZXIoW3t4OiAxLCB5OiAyfSwge3g6IDMsIHk6IDN9LCB7eDogMiwgeTogMX1dLCAnMScsIFtbJ3gnXSwgWyd5J11dKTtcbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJcbiAqIEBwYXJhbSB7c3RyaW5nfFJlZ0V4cHxmdW5jdGlvbn0gaGFuZGxlciAtIHR5cGUgb2YgdGhlIGZpbHRlcmluZ1xuICogQHBhcmFtIHtzdHJpbmdbXXxzdHJpbmd9IFtrZXlzXSAtIGZpbHRlciBieSB0aGUga2V5c1xuICogQHJldHVybnMge0FycmF5fSBcbiAqL1xudXRpbHMuZmlsdGVyID0gZnVuY3Rpb24gKGFyciwgaGFuZGxlciwga2V5cyA9IG51bGwpIHtcbiAgbGV0IHJlcyA9IFtdO1xuXG4gIGlmIChrZXlzICYmICFBcnJheS5pc0FycmF5KGtleXMpKSB7XG4gICAga2V5cyA9IFtrZXlzXTtcbiAgfVxuXG4gIGlmKHR5cGVvZiBoYW5kbGVyICE9ICdmdW5jdGlvbicpIHtcbiAgICBjb25zdCBzdHIgPSBoYW5kbGVyPyAoaGFuZGxlciArICcnKS50b0xvd2VyQ2FzZSgpOiAnJztcbiAgICBoYW5kbGVyID0gdmFsID0+ICh2YWw/ICh2YWwgKyAnJykudG9Mb3dlckNhc2UoKTogJycpLm1hdGNoKHN0cik7XG4gIH1cblxuICBmb3IgKGxldCBpID0gMCwgbCA9IGFyci5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBsZXQgaXRlbSA9IGFycltpXTtcbiAgICBsZXQgZmlsdGVyZWQgPSBmYWxzZTtcblxuICAgIGlmKCFrZXlzICYmIGhhbmRsZXIoaXRlbSkpIHtcbiAgICAgIGZpbHRlcmVkID0gdHJ1ZTtcbiAgICB9XG4gICAgZWxzZSBpZihrZXlzKSB7XG4gICAgICBmb3IobGV0IGsgPSAwLCBjID0ga2V5cy5sZW5ndGg7IGsgPCBjOyBrKyspIHtcbiAgICAgICAgbGV0IGtleSA9IGtleXNba107XG4gICAgICAgIGtleSA9IEFycmF5LmlzQXJyYXkoa2V5KT8ga2V5OiBba2V5XTtcbiAgICAgICAgbGV0IHZhbCA9IGtleT8gdGhpcy5nZXRQcm9wZXJ0eUJ5S2V5cyhrZXksIGl0ZW0pOiBpdGVtO1xuICAgIFxuICAgICAgICBpZiAoaGFuZGxlcih2YWwpKSB7XG4gICAgICAgICAgZmlsdGVyZWQgPSB0cnVlO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZmlsdGVyZWQgJiYgcmVzLnB1c2goaXRlbSk7ICAgXG4gIH1cblxuICByZXR1cm4gcmVzO1xufTtcblxuLyoqXG4gKiBTb3J0IHRoZSBhcnJheVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyByZXR1cm5zIFsxLCAyLCAzXVxuICogdXRpbHMuc29ydChbMywgMiwgMV0sIHRydWUpO1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyByZXR1cm5zIFszLCAyLCAxXVxuICogdXRpbHMuc29ydChbMSwgMiwgM10sIGZhbHNlKTtcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gcmV0dXJucyBbe3g6IDF9LCB7eDogMn0sIHt4OiAzfV1cbiAqIHV0aWxzLnNvcnQoW3t4OiAzfSwge3g6IDJ9LCB7eDogMX1dLCBbWyd4J11dLCBbdHJ1ZV0pO1xuICogdXRpbHMuc29ydChbe3g6IDN9LCB7eDogMn0sIHt4OiAxfV0sIFsneCddLCB0cnVlKTtcbiAqIHV0aWxzLnNvcnQoW3t4OiAzfSwge3g6IDJ9LCB7eDogMX1dLCAneCcpO1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyByZXR1cm5zIFt7eDogM30sIHt4OiAyfSwge3g6IDF9XVxuICogdXRpbHMuc29ydChbe3g6IDF9LCB7eDogMn0sIHt4OiAzfV0sIFtbJ3gnXV0sIFtmYWxzZV0pO1xuICogdXRpbHMuc29ydChbe3g6IDF9LCB7eDogMn0sIHt4OiAzfV0sIFsneCddLCBmYWxzZSk7XG4gKiB1dGlscy5zb3J0KFt7eDogMX0sIHt4OiAyfSwge3g6IDN9XSwgJ3gnLCBmYWxzZSk7XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMgW3t4OiAxLCB5OiAzfSwge3g6IDIsIHk6IDF9LCB7eDoyLCB5OiAyfV1cbiAqIHV0aWxzLnNvcnQoW3t4OiAyLCB5OiAyfSwge3g6IDIsIHk6IDF9LCB7eDogMiwgeTogM31dLCBbWyd4J10sIFsneSddXSwgW3RydWUsIHRydWVdKTtcbiAqIFxuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMgW3t4OiB7eTogMX19LCB7eDoge3k6IDJ9fV1cbiAqIHV0aWxzLnNvcnQoW3t4OiB7eTogMn19LCB7eDoge3k6IDF9fV0sIFtbJ3gnLCAneSddXSwgW3RydWVdKTtcbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJcbiAqIEBwYXJhbSB7Ym9vbGVhbnxBcnJheVtdfHN0cmluZ1tdfHN0cmluZ30gW2tleXNdXG4gKiBAcGFyYW0ge2Jvb2xlYW58Ym9vbGVhbltdfSBbb3JkZXJdIC0gcmV2ZXJzZSBvciBub3RcbiAqIEByZXR1cm5zIHtBcnJheX1cbiAqL1xudXRpbHMuc29ydCA9IGZ1bmN0aW9uKGFyciwga2V5cyA9IHRydWUsIG9yZGVyID0gW10pIHtcbiAgYXJyID0gYXJyLnNsaWNlKCk7XG5cbiAgaWYgKGtleXMgPT09IHRydWUpIHtcbiAgICBrZXlzID0gW107XG4gICAgb3JkZXIgPSBbdHJ1ZV07XG4gIH1cbiAgZWxzZSBpZiAoa2V5cyA9PT0gZmFsc2UpIHtcbiAgICBrZXlzID0gW107XG4gICAgb3JkZXIgPSBbZmFsc2VdO1xuICB9XG5cbiAgaWYgKCFBcnJheS5pc0FycmF5KGtleXMpKSB7XG4gICAga2V5cyA9IFtrZXlzXTtcbiAgfVxuXG4gIGlmICghQXJyYXkuaXNBcnJheShvcmRlcikpIHtcbiAgICBvcmRlciA9IFtvcmRlcl07XG4gIH1cblxuICBsZXQgbCA9IGtleXMubGVuZ3RoO1xuXG4gIGFyci5zb3J0KChhLCBiKSA9PiB7XG4gICAgbGV0IGkgPSAwO1xuXG4gICAgY29uc3QgY2hlY2sgPSAoYSwgYiwgcmV2ZXJzZSA9IGZhbHNlKSA9PiB7XG4gICAgICBpZiAoYSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgYSA9IGEuZ2V0VGltZSgpO1xuICAgICAgfVxuXG4gICAgICBpZiAoYiBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgYiA9IGIuZ2V0VGltZSgpO1xuICAgICAgfVxuXG4gICAgICBpZiAoYSA+IGIpIHtcbiAgICAgICAgcmV0dXJuIHJldmVyc2U/IC0xOiAxO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAoYSA8IGIpIHtcbiAgICAgICAgcmV0dXJuIHJldmVyc2U/IDE6IC0xO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gMDtcbiAgICB9O1xuXG4gICAgY29uc3QgbmV4dCA9ICgpID0+IHtcbiAgICAgIGlmIChpID49IGwpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgICB9XG5cbiAgICAgIGxldCBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkoa2V5KSkge1xuICAgICAgICBrZXkgPSBba2V5XTtcbiAgICAgIH1cblxuICAgICAgbGV0IGFWID0gdGhpcy5nZXRQcm9wZXJ0eUJ5S2V5cyhrZXksIGEpO1xuICAgICAgbGV0IGJWID0gdGhpcy5nZXRQcm9wZXJ0eUJ5S2V5cyhrZXksIGIpO1xuICAgICAgbGV0IHJlcyA9IGNoZWNrKGFWLCBiViwgb3JkZXJbaV0gPT09IGZhbHNlKTtcblxuICAgICAgaWYgKHJlcyAhPT0gMCkge1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgfVxuXG4gICAgICBpKys7XG4gICAgICByZXR1cm4gbmV4dCgpO1xuICAgIH07XG5cbiAgICBpZiAoIWwpIHtcbiAgICAgIHJldHVybiBjaGVjayhhLCBiLCBvcmRlcltpXSA9PT0gZmFsc2UpO1xuICAgIH1cblxuICAgIHJldHVybiBuZXh0KCk7XG4gIH0pO1xuXG4gIHJldHVybiBhcnI7XG59O1xuXG4vKipcbiAqIFJldHVybiBhIG5ldyBvYmplY3Qgd2l0aCB0aGUgc3BlY2lmaWVkIGtleXNcbiAqIFxuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMge3g6IDEsIHo6IDF9XG4gKiB1dGlscy5pbmNsdWRlS2V5cyh7eDogMSwgeTogMSwgejogMX0sIFsneCcsICd6J10pO1xuICogXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBrZXlzXG4gKi9cbnV0aWxzLmluY2x1ZGVLZXlzID0gZnVuY3Rpb24ob2JqLCBrZXlzKSB7XG4gIGxldCBuZXdPYmogPSB7fTtcbiAgbGV0IG9iaktleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuXG4gIGZvcihsZXQgaSA9IDAsIGwgPSBvYmpLZXlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGxldCBrZXkgPSBvYmpLZXlzW2ldO1xuXG4gICAgaWYoa2V5cy5pbmRleE9mKGtleSkgIT0gLTEpIHtcbiAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ld09iajtcbn1cblxuLyoqXG4gKiBSZXR1cm4gYSBuZXcgb2JqZWN0IHdpdGhvdXQgdGhlIHNwZWNpZmllZCBrZXlzXG4gKiBcbiAqIEBleGFtcGxlXG4gKiAvLyByZXR1cm5zIHt4OiAxLCB6OiAxfVxuICogdXRpbHMuaW5jbHVkZUtleXMoe3g6IDEsIHk6IDEsIHo6IDF9LCBbJ3knXSk7XG4gKiBcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmpcbiAqIEBwYXJhbSB7c3RyaW5nW119IGtleXNcbiAqL1xudXRpbHMuZXhjbHVkZUtleXMgPSBmdW5jdGlvbihvYmosIGtleXMpIHtcbiAgbGV0IG5ld09iaiA9IHt9O1xuICBsZXQgb2JqS2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG5cbiAgZm9yKGxldCBpID0gMCwgbCA9IG9iaktleXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgbGV0IGtleSA9IG9iaktleXNbaV07XG5cbiAgICBpZihrZXlzLmluZGV4T2Yoa2V5KSA9PSAtMSkge1xuICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3T2JqO1xufVxuXG4vKipcbiAqIENoZWNrIHRoZSB2YWx1ZSBpcyB0aGUgc2NvcGUgcHJveHkgb2JqZWN0XG4gKlxuICogQHBhcmFtIHsqfSB2YWxcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG51dGlscy5pc1Njb3BlUHJveHkgPSBmdW5jdGlvbih2YWwpIHtcbiAgcmV0dXJuICEhKHZhbCAmJiB0eXBlb2YgdmFsID09ICdvYmplY3QnICYmIHZhbC5fX2lzUHJveHkpO1xufTtcblxuLyoqXG4gKiBDaGVjayB0aGUgdmFsdWUgaXMgYSBwbGFpbiBvYmplY3RcbiAqXG4gKiBAcGFyYW0geyp9IG9ialxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbnV0aWxzLmlzUGxhaW5PYmplY3QgPSBmdW5jdGlvbihvYmopIHtcbiAgcmV0dXJuICEhKG9iaiAmJiB0eXBlb2Ygb2JqID09ICdvYmplY3QnICYmIChvYmouY29uc3RydWN0b3IgPT0gT2JqZWN0IHx8IG9iai5jb25zdHJ1Y3RvciA9PSBBcnJheSkpO1xufTtcblxuLyoqXG4gKiBDb3B5IHRoZSB2YWx1ZVxuICpcbiAqIEBwYXJhbSB7Kn0gdmFsdWVcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnNdIFxuICogQHJldHVybnMgeyp9XG4gKi9cbnV0aWxzLmNvcHkgPSBmdW5jdGlvbih2YWx1ZSwgb3B0aW9ucyA9IHt9KSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT0gJ29iamVjdCcgfHwgIXZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgb3B0aW9ucyA9IHsgbmVzdGVkOiB0cnVlLCBlbnVtZXJhYmxlOiB0cnVlLCBwbGFpbjogZmFsc2UsIC4uLm9wdGlvbnMgfTtcblxuICBjb25zdCBuZXh0ID0gb2JqID0+IHtcbiAgICBpZihvcHRpb25zLnBsYWluICYmICF0aGlzLmlzUGxhaW5PYmplY3Qob2JqKSkge1xuICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG5cbiAgICBvYmogPSB0aGlzLmlzU2NvcGVQcm94eShvYmopPyBvYmouX190YXJnZXQ6IG9iajtcbiAgICBsZXQga2V5cyA9ICFvcHRpb25zLmVudW1lcmFibGU/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaik6IE9iamVjdC5rZXlzKG9iaik7XG4gICAgbGV0IG5ld09iaiA9IEFycmF5LmlzQXJyYXkob2JqKT8gW106IHt9O1xuICAgIFxuICAgIGZvciAobGV0IGkgPSAwLCBsID0ga2V5cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGxldCBrZXkgPSBrZXlzW2ldO1xuICAgICAgbGV0IHZhbCA9IG9ialtrZXldO1xuICAgICAgdmFsID0gdmFsICYmIHR5cGVvZiB2YWwgPT0gJ29iamVjdCcgJiYgb3B0aW9ucy5uZXN0ZWQ/IG5leHQodmFsKTogdmFsOyAgICAgIFxuICAgICAgXG4gICAgICBpZighb2JqLnByb3BlcnR5SXNFbnVtZXJhYmxlKGtleSkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCB7XG4gICAgICAgICAgLi4uT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSksXG4gICAgICAgICAgdmFsdWU6IHZhbFxuICAgICAgICB9KTtcblxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgbmV3T2JqW2tleV0gPSB2YWw7ICBcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3T2JqO1xuICB9XG5cbiAgcmV0dXJuIG5leHQodmFsdWUpO1xufTtcblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGF0dHJpYnV0ZSB2YWx1ZSB0byB0aGUgYXBwcm9wcmlhdGUgZm9ybWF0XG4gKlxuICogQHBhcmFtIHsqfSB2YWx1ZVxuICogQHJldHVybnMgeyp9XG4gKi9cbnV0aWxzLm1ha2VBdHRyaWJ1dGVWYWx1ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PT0gZmFsc2UgfHwgdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEV2ZW50RW1pdHRlcikge1xuICAgIHJldHVybiAnW29iamVjdCBFdmVudF0nO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuICdbb2JqZWN0IEZ1bmN0aW9uXSc7XG4gIH1cblxuICBpZiAodHlwZW9mIHZhbHVlID09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG4gIH1cblxuICByZXR1cm4gdmFsdWUgKyAnJztcbn07XG5cbi8qKlxuICogQ29tcGFyZSB0d28gdmFsdWVzXG4gKlxuICogQHBhcmFtIHsqfSBhXG4gKiBAcGFyYW0geyp9IGJcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG51dGlscy5jb21wYXJlID0gZnVuY3Rpb24gKGEsIGIsIG9wdGlvbnMgPSB7fSkge1xuICBpZiAoKGEgaW5zdGFuY2VvZiBEYXRlKSAmJiAoYiBpbnN0YW5jZW9mIERhdGUpKSB7XG4gICAgcmV0dXJuIGEuZ2V0VGltZSgpID09PSBiLmdldFRpbWUoKTtcbiAgfVxuICBlbHNlIGlmICh0eXBlb2YgYSA9PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBiID09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYS50b1N0cmluZygpID09PSBiLnRvU3RyaW5nKCk7XG4gIH1cbiAgZWxzZSBpZiAodHlwZW9mIGEgPT0gJ29iamVjdCcgJiYgdHlwZW9mIGIgPT0gJ29iamVjdCcpIHtcbiAgICBpZiAoYSA9PT0gbnVsbCB8fCBiID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gYSA9PT0gYjtcbiAgICB9XG5cbiAgICBvcHRpb25zID0geyBlbnVtZXJhYmxlOiB0cnVlLCBpZ25vcmVVbmRlZmluZWQ6IHRydWUsIC4uLm9wdGlvbnMgfTtcblxuICAgIGNvbnN0IGNsZWFyVW5kZWZpbmVkID0gdmFsID0+IHtcbiAgICAgIGxldCBvYmogPSBBcnJheS5pc0FycmF5KHZhbCk/IFtdOiB7fTtcbiAgICAgIGxldCBrZXlzID0gIW9wdGlvbnMuZW51bWVyYWJsZT8gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoKTogT2JqZWN0LmtleXModmFsKTtcblxuICAgICAgZm9yKGxldCBpID0gMCwgbCA9IGtleXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGxldCBrZXkgPSBrZXlzW2ldO1xuICAgICAgICB2YWxba2V5XSAhPT0gdW5kZWZpbmVkICYmIChvYmpba2V5XSA9IHZhbFtrZXldKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gb2JqO1xuICAgIH1cblxuICAgIGlmKG9wdGlvbnMuaWdub3JlVW5kZWZpbmVkKSB7XG4gICAgICBhID0gY2xlYXJVbmRlZmluZWQoYSk7XG4gICAgICBiID0gY2xlYXJVbmRlZmluZWQoYik7XG4gICAgfVxuXG4gICAgbGV0IGFLZXlzID0gIW9wdGlvbnMuZW51bWVyYWJsZT8gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoKTogT2JqZWN0LmtleXMoYSk7XG4gICAgbGV0IGJLZXlzID0gIW9wdGlvbnMuZW51bWVyYWJsZT8gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoKTogT2JqZWN0LmtleXMoYik7XG4gICAgXG4gICAgaWYgKGFLZXlzLmxlbmd0aCAhPSBiS2V5cy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBhID0gdGhpcy5pc1Njb3BlUHJveHkoYSk/IGEuX190YXJnZXQ6IGE7XG4gICAgYiA9IHRoaXMuaXNTY29wZVByb3h5KGIpPyBiLl9fdGFyZ2V0OiBiO1xuXG4gICAgZm9yKGxldCBpID0gMCwgbCA9IGFLZXlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgY29uc3Qga2V5ID0gYUtleXNbaV07XG5cbiAgICAgIGlmICghdGhpcy5jb21wYXJlKGFba2V5XSwgYltrZXldKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXR1cm4gYSA9PT0gYjtcbn07XG5cbi8qKlxuICogQ3JlYXRlIGEgaGFzaCBmcm9tIHRoZSBzdHJpbmdcbiAqIFxuICogQHBhcmFtIHsqfSBzb3VyY2VcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbnV0aWxzLmNyZWF0ZUhhc2ggPSBmdW5jdGlvbihzb3VyY2UpIHtcbiAgdHlwZW9mIHNvdXJjZSA9PSAnb2JqZWN0JyAmJiAoc291cmNlID0gSlNPTi5zdHJpbmdpZnkoc291cmNlKSk7XG4gIHR5cGVvZiBzb3VyY2UgIT0gJ3N0cmluZycgJiYgKHNvdXJjZSA9ICfioIAnICsgU3RyaW5nKHNvdXJjZSkpO1xuICBsZXQgaGFzaCA9IDA7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzb3VyY2UubGVuZ3RoOyBpKyspIHtcbiAgICBsZXQgY2hhciA9IHNvdXJjZS5jaGFyQ29kZUF0KGkpO1xuICAgIGhhc2ggPSAoKGhhc2ggPDwgNSkgLSBoYXNoKSArIGNoYXI7XG4gICAgaGFzaCA9IGhhc2ggJiBoYXNoO1xuICB9XG5cbiAgcmV0dXJuIGhhc2ggKyAnJztcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGh0bWwgZW50aXRpZXNcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gcmV0dXJucyBcInlvdSAmYW1wIG1lXCJcbiAqIHV0aWxzLmVuY29kZUh0bWxFbnRpdGllcygneW91ICYgbWUnKTtcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gaHRtbFxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xudXRpbHMuZW5jb2RlSHRtbEVudGl0aWVzID0gZnVuY3Rpb24oaHRtbCkge1xuICBsZXQgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBsZXQgdmFsdWU7XG4gIGVsLnRleHRDb250ZW50ID0gaHRtbDtcbiAgdmFsdWUgPSBlbC5pbm5lckhUTUw7XG4gIGVsLnJlbW92ZSgpO1xuICBlbCA9IG51bGw7XG4gIHJldHVybiB2YWx1ZTtcbn07XG5cbi8qKlxuICogRGVjb2RlIHRoZSBodG1sIGVudGl0aWVzXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMgXCJ5b3UgJiBtZVwiXG4gKiB1dGlscy5kZWNvZGVIdG1sRW50aXRpZXMoJ3lvdSAmYW1wIG1lJyk7XG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGh0bWxcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbnV0aWxzLmRlY29kZUh0bWxFbnRpdGllcyA9IGZ1bmN0aW9uKGh0bWwpIHtcbiAgbGV0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIpO1xuICBsZXQgdmFsdWU7XG4gIGVsLmlubmVySFRNTCA9IGh0bWw7XG4gIHZhbHVlID0gZWwudmFsdWU7XG4gIGVsLnJlbW92ZSgpO1xuICBlbCA9IG51bGw7XG4gIHJldHVybiB2YWx1ZTtcbn07XG5cbi8qKlxuICogQ29udmVydCB0aGUgc3RyaW5nIGZyb20gYSBkYXNoIHRvIGEgY2FtZWwgY2FzZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbnV0aWxzLnRvQ2FtZWxDYXNlID0gZnVuY3Rpb24oc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXFxXKyguKS9nLCAobSwgYykgPT4gYy50b1VwcGVyQ2FzZSgpKTtcbn07XG5cbi8qKlxuICogQ2FwaXRhbGl6ZSB0aGUgc3RyaW5nXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xudXRpbHMuY2FwaXRhbGl6ZSA9IGZ1bmN0aW9uKHN0cikge1xuICByZXR1cm4gc3RyWzBdLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG59O1xuXG4vKipcbiAqIENvbnZlcnQgdGhlIHN0cmluZyBmcm9tIGEgY2FtZWwgdG8gYSBkYXNoIGNhc2VcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG51dGlscy50b0Rhc2hDYXNlID0gZnVuY3Rpb24oc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFtBLVpdKS9nLCAobSwgYykgPT4gYC0ke2MudG9Mb3dlckNhc2UoKX1gKTtcbn07XG5cbi8qKlxuICogR2V0IHRoZSBuZXN0ZWQgb2JqZWN0IHByb3BlcnR5IGJ5IGFycmF5IGtleXNcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gcmV0dXJucyA1XG4gKiB1dGlscy5nZXRQcm9wZXJ0eUJ5S2V5cyhbJ3gnLCAneSddLCB7eDoge3k6IDV9fSk7XG4gKlxuICogQHBhcmFtIHtzdHJpbmdbXX0ga2V5c1xuICogQHBhcmFtIHtvYmplY3R9IG9iamVjdFxuICogQHJldHVybnMgeyp9XG4gKi9cbnV0aWxzLmdldFByb3BlcnR5QnlLZXlzID0gZnVuY3Rpb24oa2V5cywgb2JqZWN0KSB7XG4gIGxldCBjdXJyZW50O1xuICBsZXQgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gIGxldCBpID0gMDtcblxuICBrZXlzLnJlZHVjZSgobywgaykgPT4ge1xuICAgIGkrKztcblxuICAgIGlmICghbyB8fCB0eXBlb2YgbyAhPSAnb2JqZWN0Jykge1xuICAgICAgcmV0dXJuIG87XG4gICAgfVxuXG4gICAgaWYgKG9ba10gPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cblxuICAgIChpID09IGxlbmd0aCkgJiYgKGN1cnJlbnQgPSBvW2tdKTtcbiAgICByZXR1cm4gb1trXTtcbiAgfSwgb2JqZWN0KTtcblxuICByZXR1cm4gY3VycmVudDtcbn07XG5cbi8qKlxuICogQ2hlY2sgdGhlIG9iamVjdCBuZXN0ZWQgcHJvcGVydHkgZXhpc3RlbmNlXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMgdHJ1ZVxuICogdXRpbHMuaGFzUHJvcGVydHlCeUtleXMoWyd4JywgJ3knXSwge3g6IHt5OiA1fX0pO1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nW119IGtleXNcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmplY3RcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG51dGlscy5oYXNQcm9wZXJ0eUJ5S2V5cyA9IGZ1bmN0aW9uKGtleXMsIG9iamVjdCkge1xuICBsZXQgaGFzID0gZmFsc2U7XG4gIGxldCBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgbGV0IGkgPSAwO1xuXG4gIGtleXMucmVkdWNlKChvLCBrKSA9PiB7XG4gICAgaSsrO1xuXG4gICAgaWYgKCFvIHx8IHR5cGVvZiBvICE9ICdvYmplY3QnKSB7XG4gICAgICByZXR1cm4gISFvO1xuICAgIH1cblxuICAgIGlmICghby5oYXNPd25Qcm9wZXJ0eShrKSkge1xuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cblxuICAgIChpID09IGxlbmd0aCkgJiYgKGhhcyA9IG8uaGFzT3duUHJvcGVydHkoaykpO1xuICAgIHJldHVybiBvW2tdO1xuICB9LCBvYmplY3QpO1xuXG4gIHJldHVybiBoYXM7XG59O1xuXG4vKipcbiAqIFNldCB0aGUgb2JqZWN0IG5lc3RlZCBwcm9wZXJ0eSB2YWx1ZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyByZXR1cm5zIHt5OiA2fVxuICogdXRpbHMuc2V0UHJvcGVydHlCeUtleXMoWyd4JywgJ3knXSwge3g6IHt5OiA1fX0sIChsYXN0LCB2YWwpID0+IGxhc3Q/IDY6ICh2YWwgfHwge30pKTtcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBrZXlzXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqZWN0XG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBmblxuICogQHJldHVybnMgeyp9XG4gKi9cbnV0aWxzLnNldFByb3BlcnR5QnlLZXlzID0gZnVuY3Rpb24oa2V5cywgb2JqZWN0LCBmbikge1xuICBsZXQgY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgbGV0IGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICBsZXQgaSA9IDA7XG5cbiAga2V5cy5yZWR1Y2UoKG8sIGspID0+IHtcbiAgICBpKys7XG5cbiAgICBpZiAoIW8gfHwgdHlwZW9mIG8gIT0gJ29iamVjdCcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIW8uaGFzT3duUHJvcGVydHkoaykpIHtcbiAgICAgIG9ba10gPSB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgb1trXSA9IGZuKGkgPT0gbGVuZ3RoLCBvW2tdKTtcbiAgICBjdXJyZW50ID0gbztcbiAgICByZXR1cm4gb1trXTtcbiAgfSwgb2JqZWN0KTtcblxuICByZXR1cm4gY3VycmVudDtcbn07XG5cbi8qKlxuICogRGVsZXRlIHRoZSBwcm9wZXJ0eSBmcm9tIHRoZSBvYmplY3RcbiAqIFlvdSBjYW4gY2FuY2VsIHRoZSBkZWxldGlvbiByZXR1cm5pbmcgZmFsc2UgaW4gdGhlIGNhbGxiYWNrIGZ1bmN0aW9uXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMgNVxuICogdXRpbHMuZGVsZXRlUHJvcGVydHlCeUtleXMoWyd4JywgJ3knXSwge3g6IHt5OiA1fX0pO1xuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMgNVxuICogdXRpbHMuZGVsZXRlUHJvcGVydHlCeUtleXMoWyd4JywgJ3knXSwge3g6IHt5OiA1fX0sIHZhbCA9PiB2YWwgIT0gNSk7XG4gKlxuICogQHBhcmFtIHtzdHJpbmdbXX0ga2V5c1xuICogQHBhcmFtIHtvYmplY3R9IG9iamVjdFxuICogQHBhcmFtIHtmdW5jdGlvbn0gW2ZuXVxuICogQHJldHVybnMgeyp9XG4gKi9cbnV0aWxzLmRlbGV0ZVByb3BlcnR5QnlLZXlzID0gZnVuY3Rpb24oa2V5cywgb2JqZWN0LCBmbikge1xuICBsZXQgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gIGxldCB2YWx1ZTtcbiAgbGV0IGkgPSAwO1xuXG4gIGtleXMucmVkdWNlKChvLCBrKSA9PiB7XG4gICAgaSsrO1xuXG4gICAgaWYgKCFvIHx8IHR5cGVvZiBvICE9ICdvYmplY3QnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCFvLmhhc093blByb3BlcnR5KGspKSB7XG4gICAgICByZXR1cm4ge307XG4gICAgfVxuXG4gICAgaWYgKGkgPT0gbGVuZ3RoKSB7XG4gICAgICB2YWx1ZSA9IG9ba107XG4gICAgICAoIWZuIHx8IGZuKHZhbHVlKSkgJiYgKGRlbGV0ZSBvW2tdKTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gb1trXTtcbiAgfSwgb2JqZWN0KTtcblxuICByZXR1cm4gdmFsdWU7XG59O1xuXG5cbi8qKlxuICogR2V0IHRoZSBlbnVtZXJhYmxlIHByb3BlcnR5IHRhcmdldCBvYmplY3RcbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gdGFyZ2V0XG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gKiBAcmV0dXJucyB7b2JqZWN0fVxuICovXG5cbnV0aWxzLmdldEVudW1lcmFibGVQcm9wZXJ0eVRhcmdldCA9IGZ1bmN0aW9uKHRhcmdldCwga2V5KSB7XG4gIGNvbnN0IGNoZWNrID0gb2JqID0+IHtcbiAgICBpZiAob2JqLnByb3BlcnR5SXNFbnVtZXJhYmxlKGtleSkpIHtcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuXG4gICAgbGV0IHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaik7XG5cbiAgICBpZiAoIXByb3RvKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gY2hlY2socHJvdG8pO1xuICB9O1xuXG4gIHJldHVybiBjaGVjayh0YXJnZXQpO1xufTtcblxuLyoqXG4gKiBHZXQgdGhlIG93biBwcm9wZXJ0eSB0YXJnZXQgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHRhcmdldFxuICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICogQHJldHVybnMge29iamVjdH1cbiAqL1xudXRpbHMuZ2V0T3duUHJvcGVydHlUYXJnZXQgPSBmdW5jdGlvbih0YXJnZXQsIGtleSkge1xuICBjb25zdCBjaGVjayA9IG9iaiA9PiB7XG4gICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICByZXR1cm4gb2JqO1xuICAgIH1cblxuICAgIGxldCBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopO1xuXG4gICAgaWYgKCFwcm90bykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNoZWNrKHByb3RvKTtcbiAgfTtcblxuICByZXR1cm4gY2hlY2sodGFyZ2V0KTtcbn07XG5cbi8qKlxuICogR2VuZXJhdGUgYSByYW5kb20gc3RyaW5nXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHBhcmFtIHtmdW5jdGlvbn0gZm5cbiAqIEByZXR1cm5zIHsqfVxuICovXG51dGlscy5jcmVhdGVSYW5kb21TdHJpbmcgPSBmdW5jdGlvbihsZW5ndGggPSAxNiwgZm4gPSBudWxsKSB7XG4gIGxldCBzdHIgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgbGVuZ3RoICsgMik7XG4gIGxldCBub3cgPSBEYXRlLm5vdygpO1xuICBsZXQgdmFsID0gJyc7ICBcblxuICBmb3IgKGxldCBpID0gMCwgbCA9IHN0ci5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBpZiAoIShub3cgJSBpKSkge1xuICAgICAgdmFsICs9IHN0cltpXS50b1VwcGVyQ2FzZSgpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHZhbCArPSBzdHJbaV07XG4gICAgfVxuICB9XG5cbiAgaWYgKGZuICYmIGZuKHZhbCkpIHtcbiAgICByZXR1cm4gdGhpcy5jcmVhdGVSYW5kb21TdHJpbmcobGVuZ3RoLCBmbik7XG4gIH1cblxuICByZXR1cm4gdmFsO1xufTtcblxuLyoqXG4gKiBDcmVhdGUgYSBmdW5jdGlvbiB3aXRoIHRoZSBkZWJvdW5jZVxuICpcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGZuXG4gKiBAcGFyYW0ge251bWJlcn0gZGVsYXlcbiAqIEByZXR1cm5zIHtmbn1cbiAqL1xudXRpbHMuZGVib3VuY2UgPSBmdW5jdGlvbihmbiwgZGVsYXkgPSAwKSB7ICBcbiAgcmV0dXJuICgpID0+IHtcbiAgICBjbGVhclRpbWVvdXQoZm4uX19kZWJvdW5jZVRpbWVvdXQpO1xuICAgIGZuLl9fZGVib3VuY2VUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBmbigpO1xuICAgICAgY2xlYXJUaW1lb3V0KGZuLl9fZGVib3VuY2VUaW1lb3V0KTtcbiAgICAgIGRlbGV0ZSBmbi5fX2RlYm91bmNlVGltZW91dDtcbiAgICB9LCBkZWxheSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IHV0aWxzOyIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9hcnJheS9mcm9tXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5XCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9hc3NpZ25cIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZVwiKSwgX19lc01vZHVsZTogdHJ1ZSB9OyIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5XCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktbmFtZXNcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1wcm90b3R5cGUtb2ZcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXNcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2ZcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZVwiKSwgX19lc01vZHVsZTogdHJ1ZSB9OyIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2xcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sL2l0ZXJhdG9yXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfcHJvbWlzZSA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL3Byb21pc2VcIik7XG5cbnZhciBfcHJvbWlzZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9taXNlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKGZuKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGdlbiA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICBmdW5jdGlvbiBzdGVwKGtleSwgYXJnKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpO1xuICAgICAgICAgIHZhciB2YWx1ZSA9IGluZm8udmFsdWU7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5mby5kb25lKSB7XG4gICAgICAgICAgcmVzb2x2ZSh2YWx1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIF9wcm9taXNlMi5kZWZhdWx0LnJlc29sdmUodmFsdWUpLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICBzdGVwKFwibmV4dFwiLCB2YWx1ZSk7XG4gICAgICAgICAgfSwgZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgc3RlcChcInRocm93XCIsIGVycik7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHN0ZXAoXCJuZXh0XCIpO1xuICAgIH0pO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5XCIpO1xuXG52YXIgX2RlZmluZVByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RlZmluZVByb3BlcnR5KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgICgwLCBfZGVmaW5lUHJvcGVydHkyLmRlZmF1bHQpKHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG4gIH07XG59KCk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfYXNzaWduID0gcmVxdWlyZShcIi4uL2NvcmUtanMvb2JqZWN0L2Fzc2lnblwiKTtcblxudmFyIF9hc3NpZ24yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXNzaWduKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gX2Fzc2lnbjIuZGVmYXVsdCB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZlwiKTtcblxudmFyIF9nZXRQcm90b3R5cGVPZjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZXRQcm90b3R5cGVPZik7XG5cbnZhciBfZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gcmVxdWlyZShcIi4uL2NvcmUtanMvb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvclwiKTtcblxudmFyIF9nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gZ2V0KG9iamVjdCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gIGlmIChvYmplY3QgPT09IG51bGwpIG9iamVjdCA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbiAgdmFyIGRlc2MgPSAoMCwgX2dldE93blByb3BlcnR5RGVzY3JpcHRvcjIuZGVmYXVsdCkob2JqZWN0LCBwcm9wZXJ0eSk7XG5cbiAgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBwYXJlbnQgPSAoMCwgX2dldFByb3RvdHlwZU9mMi5kZWZhdWx0KShvYmplY3QpO1xuXG4gICAgaWYgKHBhcmVudCA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7XG4gICAgfVxuICB9IGVsc2UgaWYgKFwidmFsdWVcIiBpbiBkZXNjKSB7XG4gICAgcmV0dXJuIGRlc2MudmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGdldHRlciA9IGRlc2MuZ2V0O1xuXG4gICAgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIHJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcik7XG4gIH1cbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZlwiKTtcblxudmFyIF9zZXRQcm90b3R5cGVPZjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zZXRQcm90b3R5cGVPZik7XG5cbnZhciBfY3JlYXRlID0gcmVxdWlyZShcIi4uL2NvcmUtanMvb2JqZWN0L2NyZWF0ZVwiKTtcblxudmFyIF9jcmVhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlKTtcblxudmFyIF90eXBlb2YyID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvdHlwZW9mXCIpO1xuXG52YXIgX3R5cGVvZjMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF90eXBlb2YyKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArICh0eXBlb2Ygc3VwZXJDbGFzcyA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiAoMCwgX3R5cGVvZjMuZGVmYXVsdCkoc3VwZXJDbGFzcykpKTtcbiAgfVxuXG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9ICgwLCBfY3JlYXRlMi5kZWZhdWx0KShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xuICBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mMi5kZWZhdWx0ID8gKDAsIF9zZXRQcm90b3R5cGVPZjIuZGVmYXVsdCkoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfdHlwZW9mMiA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3R5cGVvZlwiKTtcblxudmFyIF90eXBlb2YzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdHlwZW9mMik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChzZWxmLCBjYWxsKSB7XG4gIGlmICghc2VsZikge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBjYWxsICYmICgodHlwZW9mIGNhbGwgPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogKDAsIF90eXBlb2YzLmRlZmF1bHQpKGNhbGwpKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9mcm9tID0gcmVxdWlyZShcIi4uL2NvcmUtanMvYXJyYXkvZnJvbVwiKTtcblxudmFyIF9mcm9tMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2Zyb20pO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcnIyW2ldID0gYXJyW2ldO1xuICAgIH1cblxuICAgIHJldHVybiBhcnIyO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAoMCwgX2Zyb20yLmRlZmF1bHQpKGFycik7XG4gIH1cbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfaXRlcmF0b3IgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9zeW1ib2wvaXRlcmF0b3JcIik7XG5cbnZhciBfaXRlcmF0b3IyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaXRlcmF0b3IpO1xuXG52YXIgX3N5bWJvbCA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL3N5bWJvbFwiKTtcblxudmFyIF9zeW1ib2wyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc3ltYm9sKTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgX3N5bWJvbDIuZGVmYXVsdCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBfaXRlcmF0b3IyLmRlZmF1bHQgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBfc3ltYm9sMi5kZWZhdWx0ID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBfc3ltYm9sMi5kZWZhdWx0ICYmIG9iaiAhPT0gX3N5bWJvbDIuZGVmYXVsdC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mKF9pdGVyYXRvcjIuZGVmYXVsdCkgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Yob2JqKTtcbn0gOiBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBvYmogJiYgdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IF9zeW1ib2wyLmRlZmF1bHQgJiYgb2JqICE9PSBfc3ltYm9sMi5kZWZhdWx0LnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Yob2JqKTtcbn07IiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5hcnJheS5mcm9tJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5BcnJheS5mcm9tO1xuIiwidmFyIGNvcmUgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJyk7XG52YXIgJEpTT04gPSBjb3JlLkpTT04gfHwgKGNvcmUuSlNPTiA9IHsgc3RyaW5naWZ5OiBKU09OLnN0cmluZ2lmeSB9KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3RyaW5naWZ5KGl0KSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgcmV0dXJuICRKU09OLnN0cmluZ2lmeS5hcHBseSgkSlNPTiwgYXJndW1lbnRzKTtcbn07XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuYXNzaWduJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3QuYXNzaWduO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZScpO1xudmFyICRPYmplY3QgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGUoUCwgRCkge1xuICByZXR1cm4gJE9iamVjdC5jcmVhdGUoUCwgRCk7XG59O1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xudmFyICRPYmplY3QgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShpdCwga2V5LCBkZXNjKSB7XG4gIHJldHVybiAkT2JqZWN0LmRlZmluZVByb3BlcnR5KGl0LCBrZXksIGRlc2MpO1xufTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnZhciAkT2JqZWN0ID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpIHtcbiAgcmV0dXJuICRPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpO1xufTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LW5hbWVzJyk7XG52YXIgJE9iamVjdCA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3Q7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoaXQpIHtcbiAgcmV0dXJuICRPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhpdCk7XG59O1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdC5nZXRQcm90b3R5cGVPZjtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3Qua2V5cztcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3Quc2V0UHJvdG90eXBlT2Y7XG4iLCJyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucHJvbWlzZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczcucHJvbWlzZS5maW5hbGx5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNy5wcm9taXNlLnRyeScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9tb2R1bGVzL19jb3JlJykuUHJvbWlzZTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2LnN5bWJvbCcpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZycpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuU3ltYm9sO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fd2tzLWV4dCcpLmYoJ2l0ZXJhdG9yJyk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGEgZnVuY3Rpb24hJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBDb25zdHJ1Y3RvciwgbmFtZSwgZm9yYmlkZGVuRmllbGQpIHtcbiAgaWYgKCEoaXQgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikgfHwgKGZvcmJpZGRlbkZpZWxkICE9PSB1bmRlZmluZWQgJiYgZm9yYmlkZGVuRmllbGQgaW4gaXQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKG5hbWUgKyAnOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEnKTtcbiAgfSByZXR1cm4gaXQ7XG59O1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoIWlzT2JqZWN0KGl0KSkgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYW4gb2JqZWN0IScpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwiLy8gZmFsc2UgLT4gQXJyYXkjaW5kZXhPZlxuLy8gdHJ1ZSAgLT4gQXJyYXkjaW5jbHVkZXNcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoSVNfSU5DTFVERVMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcywgZWwsIGZyb21JbmRleCkge1xuICAgIHZhciBPID0gdG9JT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgIHZhciBpbmRleCA9IHRvQWJzb2x1dGVJbmRleChmcm9tSW5kZXgsIGxlbmd0aCk7XG4gICAgdmFyIHZhbHVlO1xuICAgIC8vIEFycmF5I2luY2x1ZGVzIHVzZXMgU2FtZVZhbHVlWmVybyBlcXVhbGl0eSBhbGdvcml0aG1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgaWYgKElTX0lOQ0xVREVTICYmIGVsICE9IGVsKSB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIHtcbiAgICAgIHZhbHVlID0gT1tpbmRleCsrXTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICAgIGlmICh2YWx1ZSAhPSB2YWx1ZSkgcmV0dXJuIHRydWU7XG4gICAgLy8gQXJyYXkjaW5kZXhPZiBpZ25vcmVzIGhvbGVzLCBBcnJheSNpbmNsdWRlcyAtIG5vdFxuICAgIH0gZWxzZSBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykgaWYgKElTX0lOQ0xVREVTIHx8IGluZGV4IGluIE8pIHtcbiAgICAgIGlmIChPW2luZGV4XSA9PT0gZWwpIHJldHVybiBJU19JTkNMVURFUyB8fCBpbmRleCB8fCAwO1xuICAgIH0gcmV0dXJuICFJU19JTkNMVURFUyAmJiAtMTtcbiAgfTtcbn07XG4iLCIvLyBnZXR0aW5nIHRhZyBmcm9tIDE5LjEuMy42IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcoKVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuLy8gRVMzIHdyb25nIGhlcmVcbnZhciBBUkcgPSBjb2YoZnVuY3Rpb24gKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpID09ICdBcmd1bWVudHMnO1xuXG4vLyBmYWxsYmFjayBmb3IgSUUxMSBTY3JpcHQgQWNjZXNzIERlbmllZCBlcnJvclxudmFyIHRyeUdldCA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGl0W2tleV07XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIE8sIFQsIEI7XG4gIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkID8gJ1VuZGVmaW5lZCcgOiBpdCA9PT0gbnVsbCA/ICdOdWxsJ1xuICAgIC8vIEBAdG9TdHJpbmdUYWcgY2FzZVxuICAgIDogdHlwZW9mIChUID0gdHJ5R2V0KE8gPSBPYmplY3QoaXQpLCBUQUcpKSA9PSAnc3RyaW5nJyA/IFRcbiAgICAvLyBidWlsdGluVGFnIGNhc2VcbiAgICA6IEFSRyA/IGNvZihPKVxuICAgIC8vIEVTMyBhcmd1bWVudHMgZmFsbGJhY2tcbiAgICA6IChCID0gY29mKE8pKSA9PSAnT2JqZWN0JyAmJiB0eXBlb2YgTy5jYWxsZWUgPT0gJ2Z1bmN0aW9uJyA/ICdBcmd1bWVudHMnIDogQjtcbn07XG4iLCJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoaXQpLnNsaWNlKDgsIC0xKTtcbn07XG4iLCJ2YXIgY29yZSA9IG1vZHVsZS5leHBvcnRzID0geyB2ZXJzaW9uOiAnMi42LjExJyB9O1xuaWYgKHR5cGVvZiBfX2UgPT0gJ251bWJlcicpIF9fZSA9IGNvcmU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIGluZGV4LCB2YWx1ZSkge1xuICBpZiAoaW5kZXggaW4gb2JqZWN0KSAkZGVmaW5lUHJvcGVydHkuZihvYmplY3QsIGluZGV4LCBjcmVhdGVEZXNjKDAsIHZhbHVlKSk7XG4gIGVsc2Ugb2JqZWN0W2luZGV4XSA9IHZhbHVlO1xufTtcbiIsIi8vIG9wdGlvbmFsIC8gc2ltcGxlIGNvbnRleHQgYmluZGluZ1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZuLCB0aGF0LCBsZW5ndGgpIHtcbiAgYUZ1bmN0aW9uKGZuKTtcbiAgaWYgKHRoYXQgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGZuO1xuICBzd2l0Y2ggKGxlbmd0aCkge1xuICAgIGNhc2UgMTogcmV0dXJuIGZ1bmN0aW9uIChhKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhKTtcbiAgICB9O1xuICAgIGNhc2UgMjogcmV0dXJuIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiKTtcbiAgICB9O1xuICAgIGNhc2UgMzogcmV0dXJuIGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiLCBjKTtcbiAgICB9O1xuICB9XG4gIHJldHVybiBmdW5jdGlvbiAoLyogLi4uYXJncyAqLykge1xuICAgIHJldHVybiBmbi5hcHBseSh0aGF0LCBhcmd1bWVudHMpO1xuICB9O1xufTtcbiIsIi8vIDcuMi4xIFJlcXVpcmVPYmplY3RDb2VyY2libGUoYXJndW1lbnQpXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgPT0gdW5kZWZpbmVkKSB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgXCIgKyBpdCk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIvLyBUaGFuaydzIElFOCBmb3IgaGlzIGZ1bm55IGRlZmluZVByb3BlcnR5XG5tb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ2EnLCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfSB9KS5hICE9IDc7XG59KTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG4vLyB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0JyBpbiBvbGQgSUVcbnZhciBpcyA9IGlzT2JqZWN0KGRvY3VtZW50KSAmJiBpc09iamVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpcyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307XG59O1xuIiwiLy8gSUUgOC0gZG9uJ3QgZW51bSBidWcga2V5c1xubW9kdWxlLmV4cG9ydHMgPSAoXG4gICdjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YnXG4pLnNwbGl0KCcsJyk7XG4iLCIvLyBhbGwgZW51bWVyYWJsZSBvYmplY3Qga2V5cywgaW5jbHVkZXMgc3ltYm9sc1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciByZXN1bHQgPSBnZXRLZXlzKGl0KTtcbiAgdmFyIGdldFN5bWJvbHMgPSBnT1BTLmY7XG4gIGlmIChnZXRTeW1ib2xzKSB7XG4gICAgdmFyIHN5bWJvbHMgPSBnZXRTeW1ib2xzKGl0KTtcbiAgICB2YXIgaXNFbnVtID0gcElFLmY7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKHN5bWJvbHMubGVuZ3RoID4gaSkgaWYgKGlzRW51bS5jYWxsKGl0LCBrZXkgPSBzeW1ib2xzW2krK10pKSByZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcblxudmFyICRleHBvcnQgPSBmdW5jdGlvbiAodHlwZSwgbmFtZSwgc291cmNlKSB7XG4gIHZhciBJU19GT1JDRUQgPSB0eXBlICYgJGV4cG9ydC5GO1xuICB2YXIgSVNfR0xPQkFMID0gdHlwZSAmICRleHBvcnQuRztcbiAgdmFyIElTX1NUQVRJQyA9IHR5cGUgJiAkZXhwb3J0LlM7XG4gIHZhciBJU19QUk9UTyA9IHR5cGUgJiAkZXhwb3J0LlA7XG4gIHZhciBJU19CSU5EID0gdHlwZSAmICRleHBvcnQuQjtcbiAgdmFyIElTX1dSQVAgPSB0eXBlICYgJGV4cG9ydC5XO1xuICB2YXIgZXhwb3J0cyA9IElTX0dMT0JBTCA/IGNvcmUgOiBjb3JlW25hbWVdIHx8IChjb3JlW25hbWVdID0ge30pO1xuICB2YXIgZXhwUHJvdG8gPSBleHBvcnRzW1BST1RPVFlQRV07XG4gIHZhciB0YXJnZXQgPSBJU19HTE9CQUwgPyBnbG9iYWwgOiBJU19TVEFUSUMgPyBnbG9iYWxbbmFtZV0gOiAoZ2xvYmFsW25hbWVdIHx8IHt9KVtQUk9UT1RZUEVdO1xuICB2YXIga2V5LCBvd24sIG91dDtcbiAgaWYgKElTX0dMT0JBTCkgc291cmNlID0gbmFtZTtcbiAgZm9yIChrZXkgaW4gc291cmNlKSB7XG4gICAgLy8gY29udGFpbnMgaW4gbmF0aXZlXG4gICAgb3duID0gIUlTX0ZPUkNFRCAmJiB0YXJnZXQgJiYgdGFyZ2V0W2tleV0gIT09IHVuZGVmaW5lZDtcbiAgICBpZiAob3duICYmIGhhcyhleHBvcnRzLCBrZXkpKSBjb250aW51ZTtcbiAgICAvLyBleHBvcnQgbmF0aXZlIG9yIHBhc3NlZFxuICAgIG91dCA9IG93biA/IHRhcmdldFtrZXldIDogc291cmNlW2tleV07XG4gICAgLy8gcHJldmVudCBnbG9iYWwgcG9sbHV0aW9uIGZvciBuYW1lc3BhY2VzXG4gICAgZXhwb3J0c1trZXldID0gSVNfR0xPQkFMICYmIHR5cGVvZiB0YXJnZXRba2V5XSAhPSAnZnVuY3Rpb24nID8gc291cmNlW2tleV1cbiAgICAvLyBiaW5kIHRpbWVycyB0byBnbG9iYWwgZm9yIGNhbGwgZnJvbSBleHBvcnQgY29udGV4dFxuICAgIDogSVNfQklORCAmJiBvd24gPyBjdHgob3V0LCBnbG9iYWwpXG4gICAgLy8gd3JhcCBnbG9iYWwgY29uc3RydWN0b3JzIGZvciBwcmV2ZW50IGNoYW5nZSB0aGVtIGluIGxpYnJhcnlcbiAgICA6IElTX1dSQVAgJiYgdGFyZ2V0W2tleV0gPT0gb3V0ID8gKGZ1bmN0aW9uIChDKSB7XG4gICAgICB2YXIgRiA9IGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gICAgICAgIGlmICh0aGlzIGluc3RhbmNlb2YgQykge1xuICAgICAgICAgIHN3aXRjaCAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gbmV3IEMoKTtcbiAgICAgICAgICAgIGNhc2UgMTogcmV0dXJuIG5ldyBDKGEpO1xuICAgICAgICAgICAgY2FzZSAyOiByZXR1cm4gbmV3IEMoYSwgYik7XG4gICAgICAgICAgfSByZXR1cm4gbmV3IEMoYSwgYiwgYyk7XG4gICAgICAgIH0gcmV0dXJuIEMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH07XG4gICAgICBGW1BST1RPVFlQRV0gPSBDW1BST1RPVFlQRV07XG4gICAgICByZXR1cm4gRjtcbiAgICAvLyBtYWtlIHN0YXRpYyB2ZXJzaW9ucyBmb3IgcHJvdG90eXBlIG1ldGhvZHNcbiAgICB9KShvdXQpIDogSVNfUFJPVE8gJiYgdHlwZW9mIG91dCA9PSAnZnVuY3Rpb24nID8gY3R4KEZ1bmN0aW9uLmNhbGwsIG91dCkgOiBvdXQ7XG4gICAgLy8gZXhwb3J0IHByb3RvIG1ldGhvZHMgdG8gY29yZS4lQ09OU1RSVUNUT1IlLm1ldGhvZHMuJU5BTUUlXG4gICAgaWYgKElTX1BST1RPKSB7XG4gICAgICAoZXhwb3J0cy52aXJ0dWFsIHx8IChleHBvcnRzLnZpcnR1YWwgPSB7fSkpW2tleV0gPSBvdXQ7XG4gICAgICAvLyBleHBvcnQgcHJvdG8gbWV0aG9kcyB0byBjb3JlLiVDT05TVFJVQ1RPUiUucHJvdG90eXBlLiVOQU1FJVxuICAgICAgaWYgKHR5cGUgJiAkZXhwb3J0LlIgJiYgZXhwUHJvdG8gJiYgIWV4cFByb3RvW2tleV0pIGhpZGUoZXhwUHJvdG8sIGtleSwgb3V0KTtcbiAgICB9XG4gIH1cbn07XG4vLyB0eXBlIGJpdG1hcFxuJGV4cG9ydC5GID0gMTsgICAvLyBmb3JjZWRcbiRleHBvcnQuRyA9IDI7ICAgLy8gZ2xvYmFsXG4kZXhwb3J0LlMgPSA0OyAgIC8vIHN0YXRpY1xuJGV4cG9ydC5QID0gODsgICAvLyBwcm90b1xuJGV4cG9ydC5CID0gMTY7ICAvLyBiaW5kXG4kZXhwb3J0LlcgPSAzMjsgIC8vIHdyYXBcbiRleHBvcnQuVSA9IDY0OyAgLy8gc2FmZVxuJGV4cG9ydC5SID0gMTI4OyAvLyByZWFsIHByb3RvIG1ldGhvZCBmb3IgYGxpYnJhcnlgXG5tb2R1bGUuZXhwb3J0cyA9ICRleHBvcnQ7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG4iLCJ2YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpO1xudmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xudmFyIEJSRUFLID0ge307XG52YXIgUkVUVVJOID0ge307XG52YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhYmxlLCBlbnRyaWVzLCBmbiwgdGhhdCwgSVRFUkFUT1IpIHtcbiAgdmFyIGl0ZXJGbiA9IElURVJBVE9SID8gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcmFibGU7IH0gOiBnZXRJdGVyRm4oaXRlcmFibGUpO1xuICB2YXIgZiA9IGN0eChmbiwgdGhhdCwgZW50cmllcyA/IDIgOiAxKTtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxlbmd0aCwgc3RlcCwgaXRlcmF0b3IsIHJlc3VsdDtcbiAgaWYgKHR5cGVvZiBpdGVyRm4gIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ZXJhYmxlICsgJyBpcyBub3QgaXRlcmFibGUhJyk7XG4gIC8vIGZhc3QgY2FzZSBmb3IgYXJyYXlzIHdpdGggZGVmYXVsdCBpdGVyYXRvclxuICBpZiAoaXNBcnJheUl0ZXIoaXRlckZuKSkgZm9yIChsZW5ndGggPSB0b0xlbmd0aChpdGVyYWJsZS5sZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgIHJlc3VsdCA9IGVudHJpZXMgPyBmKGFuT2JqZWN0KHN0ZXAgPSBpdGVyYWJsZVtpbmRleF0pWzBdLCBzdGVwWzFdKSA6IGYoaXRlcmFibGVbaW5kZXhdKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfSBlbHNlIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChpdGVyYWJsZSk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTspIHtcbiAgICByZXN1bHQgPSBjYWxsKGl0ZXJhdG9yLCBmLCBzdGVwLnZhbHVlLCBlbnRyaWVzKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcbmV4cG9ydHMuQlJFQUsgPSBCUkVBSztcbmV4cG9ydHMuUkVUVVJOID0gUkVUVVJOO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbnZhciBnbG9iYWwgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Lk1hdGggPT0gTWF0aFxuICA/IHdpbmRvdyA6IHR5cGVvZiBzZWxmICE9ICd1bmRlZmluZWQnICYmIHNlbGYuTWF0aCA9PSBNYXRoID8gc2VsZlxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgOiBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuaWYgKHR5cGVvZiBfX2cgPT0gJ251bWJlcicpIF9fZyA9IGdsb2JhbDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwidmFyIGhhc093blByb3BlcnR5ID0ge30uaGFzT3duUHJvcGVydHk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGl0LCBrZXkpO1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIHJldHVybiBkUC5mKG9iamVjdCwga2V5LCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG59IDogZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICByZXR1cm4gb2JqZWN0O1xufTtcbiIsInZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xubW9kdWxlLmV4cG9ydHMgPSBkb2N1bWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4iLCJtb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2RpdicpLCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwiLy8gZmFzdCBhcHBseSwgaHR0cDovL2pzcGVyZi5sbmtpdC5jb20vZmFzdC1hcHBseS81XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgYXJncywgdGhhdCkge1xuICB2YXIgdW4gPSB0aGF0ID09PSB1bmRlZmluZWQ7XG4gIHN3aXRjaCAoYXJncy5sZW5ndGgpIHtcbiAgICBjYXNlIDA6IHJldHVybiB1biA/IGZuKClcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCk7XG4gICAgY2FzZSAxOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdKTtcbiAgICBjYXNlIDI6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgIGNhc2UgMzogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgY2FzZSA0OiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKTtcbiAgfSByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJncyk7XG59O1xuIiwiLy8gZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBhbmQgbm9uLWVudW1lcmFibGUgb2xkIFY4IHN0cmluZ3NcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0KCd6JykucHJvcGVydHlJc0VudW1lcmFibGUoMCkgPyBPYmplY3QgOiBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGNvZihpdCkgPT0gJ1N0cmluZycgPyBpdC5zcGxpdCgnJykgOiBPYmplY3QoaXQpO1xufTtcbiIsIi8vIGNoZWNrIG9uIGRlZmF1bHQgQXJyYXkgaXRlcmF0b3JcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCAhPT0gdW5kZWZpbmVkICYmIChJdGVyYXRvcnMuQXJyYXkgPT09IGl0IHx8IEFycmF5UHJvdG9bSVRFUkFUT1JdID09PSBpdCk7XG59O1xuIiwiLy8gNy4yLjIgSXNBcnJheShhcmd1bWVudClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiBpc0FycmF5KGFyZykge1xuICByZXR1cm4gY29mKGFyZykgPT0gJ0FycmF5Jztcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nO1xufTtcbiIsIi8vIGNhbGwgc29tZXRoaW5nIG9uIGl0ZXJhdG9yIHN0ZXAgd2l0aCBzYWZlIGNsb3Npbmcgb24gZXJyb3JcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlcmF0b3IsIGZuLCB2YWx1ZSwgZW50cmllcykge1xuICB0cnkge1xuICAgIHJldHVybiBlbnRyaWVzID8gZm4oYW5PYmplY3QodmFsdWUpWzBdLCB2YWx1ZVsxXSkgOiBmbih2YWx1ZSk7XG4gIC8vIDcuNC42IEl0ZXJhdG9yQ2xvc2UoaXRlcmF0b3IsIGNvbXBsZXRpb24pXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB2YXIgcmV0ID0gaXRlcmF0b3JbJ3JldHVybiddO1xuICAgIGlmIChyZXQgIT09IHVuZGVmaW5lZCkgYW5PYmplY3QocmV0LmNhbGwoaXRlcmF0b3IpKTtcbiAgICB0aHJvdyBlO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciBkZXNjcmlwdG9yID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuXG4vLyAyNS4xLjIuMS4xICVJdGVyYXRvclByb3RvdHlwZSVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faGlkZScpKEl0ZXJhdG9yUHJvdG90eXBlLCByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KSB7XG4gIENvbnN0cnVjdG9yLnByb3RvdHlwZSA9IGNyZWF0ZShJdGVyYXRvclByb3RvdHlwZSwgeyBuZXh0OiBkZXNjcmlwdG9yKDEsIG5leHQpIH0pO1xuICBzZXRUb1N0cmluZ1RhZyhDb25zdHJ1Y3RvciwgTkFNRSArICcgSXRlcmF0b3InKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgJGl0ZXJDcmVhdGUgPSByZXF1aXJlKCcuL19pdGVyLWNyZWF0ZScpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEJVR0dZID0gIShbXS5rZXlzICYmICduZXh0JyBpbiBbXS5rZXlzKCkpOyAvLyBTYWZhcmkgaGFzIGJ1Z2d5IGl0ZXJhdG9ycyB3L28gYG5leHRgXG52YXIgRkZfSVRFUkFUT1IgPSAnQEBpdGVyYXRvcic7XG52YXIgS0VZUyA9ICdrZXlzJztcbnZhciBWQUxVRVMgPSAndmFsdWVzJztcblxudmFyIHJldHVyblRoaXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChCYXNlLCBOQU1FLCBDb25zdHJ1Y3RvciwgbmV4dCwgREVGQVVMVCwgSVNfU0VULCBGT1JDRUQpIHtcbiAgJGl0ZXJDcmVhdGUoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpO1xuICB2YXIgZ2V0TWV0aG9kID0gZnVuY3Rpb24gKGtpbmQpIHtcbiAgICBpZiAoIUJVR0dZICYmIGtpbmQgaW4gcHJvdG8pIHJldHVybiBwcm90b1traW5kXTtcbiAgICBzd2l0Y2ggKGtpbmQpIHtcbiAgICAgIGNhc2UgS0VZUzogcmV0dXJuIGZ1bmN0aW9uIGtleXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgICBjYXNlIFZBTFVFUzogcmV0dXJuIGZ1bmN0aW9uIHZhbHVlcygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICB9IHJldHVybiBmdW5jdGlvbiBlbnRyaWVzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICB9O1xuICB2YXIgVEFHID0gTkFNRSArICcgSXRlcmF0b3InO1xuICB2YXIgREVGX1ZBTFVFUyA9IERFRkFVTFQgPT0gVkFMVUVTO1xuICB2YXIgVkFMVUVTX0JVRyA9IGZhbHNlO1xuICB2YXIgcHJvdG8gPSBCYXNlLnByb3RvdHlwZTtcbiAgdmFyICRuYXRpdmUgPSBwcm90b1tJVEVSQVRPUl0gfHwgcHJvdG9bRkZfSVRFUkFUT1JdIHx8IERFRkFVTFQgJiYgcHJvdG9bREVGQVVMVF07XG4gIHZhciAkZGVmYXVsdCA9ICRuYXRpdmUgfHwgZ2V0TWV0aG9kKERFRkFVTFQpO1xuICB2YXIgJGVudHJpZXMgPSBERUZBVUxUID8gIURFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZCgnZW50cmllcycpIDogdW5kZWZpbmVkO1xuICB2YXIgJGFueU5hdGl2ZSA9IE5BTUUgPT0gJ0FycmF5JyA/IHByb3RvLmVudHJpZXMgfHwgJG5hdGl2ZSA6ICRuYXRpdmU7XG4gIHZhciBtZXRob2RzLCBrZXksIEl0ZXJhdG9yUHJvdG90eXBlO1xuICAvLyBGaXggbmF0aXZlXG4gIGlmICgkYW55TmF0aXZlKSB7XG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZigkYW55TmF0aXZlLmNhbGwobmV3IEJhc2UoKSkpO1xuICAgIGlmIChJdGVyYXRvclByb3RvdHlwZSAhPT0gT2JqZWN0LnByb3RvdHlwZSAmJiBJdGVyYXRvclByb3RvdHlwZS5uZXh0KSB7XG4gICAgICAvLyBTZXQgQEB0b1N0cmluZ1RhZyB0byBuYXRpdmUgaXRlcmF0b3JzXG4gICAgICBzZXRUb1N0cmluZ1RhZyhJdGVyYXRvclByb3RvdHlwZSwgVEFHLCB0cnVlKTtcbiAgICAgIC8vIGZpeCBmb3Igc29tZSBvbGQgZW5naW5lc1xuICAgICAgaWYgKCFMSUJSQVJZICYmIHR5cGVvZiBJdGVyYXRvclByb3RvdHlwZVtJVEVSQVRPUl0gIT0gJ2Z1bmN0aW9uJykgaGlkZShJdGVyYXRvclByb3RvdHlwZSwgSVRFUkFUT1IsIHJldHVyblRoaXMpO1xuICAgIH1cbiAgfVxuICAvLyBmaXggQXJyYXkje3ZhbHVlcywgQEBpdGVyYXRvcn0ubmFtZSBpbiBWOCAvIEZGXG4gIGlmIChERUZfVkFMVUVTICYmICRuYXRpdmUgJiYgJG5hdGl2ZS5uYW1lICE9PSBWQUxVRVMpIHtcbiAgICBWQUxVRVNfQlVHID0gdHJ1ZTtcbiAgICAkZGVmYXVsdCA9IGZ1bmN0aW9uIHZhbHVlcygpIHsgcmV0dXJuICRuYXRpdmUuY2FsbCh0aGlzKTsgfTtcbiAgfVxuICAvLyBEZWZpbmUgaXRlcmF0b3JcbiAgaWYgKCghTElCUkFSWSB8fCBGT1JDRUQpICYmIChCVUdHWSB8fCBWQUxVRVNfQlVHIHx8ICFwcm90b1tJVEVSQVRPUl0pKSB7XG4gICAgaGlkZShwcm90bywgSVRFUkFUT1IsICRkZWZhdWx0KTtcbiAgfVxuICAvLyBQbHVnIGZvciBsaWJyYXJ5XG4gIEl0ZXJhdG9yc1tOQU1FXSA9ICRkZWZhdWx0O1xuICBJdGVyYXRvcnNbVEFHXSA9IHJldHVyblRoaXM7XG4gIGlmIChERUZBVUxUKSB7XG4gICAgbWV0aG9kcyA9IHtcbiAgICAgIHZhbHVlczogREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKFZBTFVFUyksXG4gICAgICBrZXlzOiBJU19TRVQgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChLRVlTKSxcbiAgICAgIGVudHJpZXM6ICRlbnRyaWVzXG4gICAgfTtcbiAgICBpZiAoRk9SQ0VEKSBmb3IgKGtleSBpbiBtZXRob2RzKSB7XG4gICAgICBpZiAoIShrZXkgaW4gcHJvdG8pKSByZWRlZmluZShwcm90bywga2V5LCBtZXRob2RzW2tleV0pO1xuICAgIH0gZWxzZSAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChCVUdHWSB8fCBWQUxVRVNfQlVHKSwgTkFNRSwgbWV0aG9kcyk7XG4gIH1cbiAgcmV0dXJuIG1ldGhvZHM7XG59O1xuIiwidmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgU0FGRV9DTE9TSU5HID0gZmFsc2U7XG5cbnRyeSB7XG4gIHZhciByaXRlciA9IFs3XVtJVEVSQVRPUl0oKTtcbiAgcml0ZXJbJ3JldHVybiddID0gZnVuY3Rpb24gKCkgeyBTQUZFX0NMT1NJTkcgPSB0cnVlOyB9O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdGhyb3ctbGl0ZXJhbFxuICBBcnJheS5mcm9tKHJpdGVyLCBmdW5jdGlvbiAoKSB7IHRocm93IDI7IH0pO1xufSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMsIHNraXBDbG9zaW5nKSB7XG4gIGlmICghc2tpcENsb3NpbmcgJiYgIVNBRkVfQ0xPU0lORykgcmV0dXJuIGZhbHNlO1xuICB2YXIgc2FmZSA9IGZhbHNlO1xuICB0cnkge1xuICAgIHZhciBhcnIgPSBbN107XG4gICAgdmFyIGl0ZXIgPSBhcnJbSVRFUkFUT1JdKCk7XG4gICAgaXRlci5uZXh0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4geyBkb25lOiBzYWZlID0gdHJ1ZSB9OyB9O1xuICAgIGFycltJVEVSQVRPUl0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiBpdGVyOyB9O1xuICAgIGV4ZWMoYXJyKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiBzYWZlO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGRvbmUsIHZhbHVlKSB7XG4gIHJldHVybiB7IHZhbHVlOiB2YWx1ZSwgZG9uZTogISFkb25lIH07XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7fTtcbiIsIm1vZHVsZS5leHBvcnRzID0gdHJ1ZTtcbiIsInZhciBNRVRBID0gcmVxdWlyZSgnLi9fdWlkJykoJ21ldGEnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHNldERlc2MgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGlkID0gMDtcbnZhciBpc0V4dGVuc2libGUgPSBPYmplY3QuaXNFeHRlbnNpYmxlIHx8IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRydWU7XG59O1xudmFyIEZSRUVaRSA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGlzRXh0ZW5zaWJsZShPYmplY3QucHJldmVudEV4dGVuc2lvbnMoe30pKTtcbn0pO1xudmFyIHNldE1ldGEgPSBmdW5jdGlvbiAoaXQpIHtcbiAgc2V0RGVzYyhpdCwgTUVUQSwgeyB2YWx1ZToge1xuICAgIGk6ICdPJyArICsraWQsIC8vIG9iamVjdCBJRFxuICAgIHc6IHt9ICAgICAgICAgIC8vIHdlYWsgY29sbGVjdGlvbnMgSURzXG4gIH0gfSk7XG59O1xudmFyIGZhc3RLZXkgPSBmdW5jdGlvbiAoaXQsIGNyZWF0ZSkge1xuICAvLyByZXR1cm4gcHJpbWl0aXZlIHdpdGggcHJlZml4XG4gIGlmICghaXNPYmplY3QoaXQpKSByZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnID8gaXQgOiAodHlwZW9mIGl0ID09ICdzdHJpbmcnID8gJ1MnIDogJ1AnKSArIGl0O1xuICBpZiAoIWhhcyhpdCwgTUVUQSkpIHtcbiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdFxuICAgIGlmICghaXNFeHRlbnNpYmxlKGl0KSkgcmV0dXJuICdGJztcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmICghY3JlYXRlKSByZXR1cm4gJ0UnO1xuICAgIC8vIGFkZCBtaXNzaW5nIG1ldGFkYXRhXG4gICAgc2V0TWV0YShpdCk7XG4gIC8vIHJldHVybiBvYmplY3QgSURcbiAgfSByZXR1cm4gaXRbTUVUQV0uaTtcbn07XG52YXIgZ2V0V2VhayA9IGZ1bmN0aW9uIChpdCwgY3JlYXRlKSB7XG4gIGlmICghaGFzKGl0LCBNRVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmICghY3JlYXRlKSByZXR1cm4gZmFsc2U7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIGhhc2ggd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSByZXR1cm4gaXRbTUVUQV0udztcbn07XG4vLyBhZGQgbWV0YWRhdGEgb24gZnJlZXplLWZhbWlseSBtZXRob2RzIGNhbGxpbmdcbnZhciBvbkZyZWV6ZSA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoRlJFRVpFICYmIG1ldGEuTkVFRCAmJiBpc0V4dGVuc2libGUoaXQpICYmICFoYXMoaXQsIE1FVEEpKSBzZXRNZXRhKGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbnZhciBtZXRhID0gbW9kdWxlLmV4cG9ydHMgPSB7XG4gIEtFWTogTUVUQSxcbiAgTkVFRDogZmFsc2UsXG4gIGZhc3RLZXk6IGZhc3RLZXksXG4gIGdldFdlYWs6IGdldFdlYWssXG4gIG9uRnJlZXplOiBvbkZyZWV6ZVxufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBtYWNyb3Rhc2sgPSByZXF1aXJlKCcuL190YXNrJykuc2V0O1xudmFyIE9ic2VydmVyID0gZ2xvYmFsLk11dGF0aW9uT2JzZXJ2ZXIgfHwgZ2xvYmFsLldlYktpdE11dGF0aW9uT2JzZXJ2ZXI7XG52YXIgcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzO1xudmFyIFByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcbnZhciBpc05vZGUgPSByZXF1aXJlKCcuL19jb2YnKShwcm9jZXNzKSA9PSAncHJvY2Vzcyc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICB2YXIgaGVhZCwgbGFzdCwgbm90aWZ5O1xuXG4gIHZhciBmbHVzaCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcGFyZW50LCBmbjtcbiAgICBpZiAoaXNOb2RlICYmIChwYXJlbnQgPSBwcm9jZXNzLmRvbWFpbikpIHBhcmVudC5leGl0KCk7XG4gICAgd2hpbGUgKGhlYWQpIHtcbiAgICAgIGZuID0gaGVhZC5mbjtcbiAgICAgIGhlYWQgPSBoZWFkLm5leHQ7XG4gICAgICB0cnkge1xuICAgICAgICBmbigpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoaGVhZCkgbm90aWZ5KCk7XG4gICAgICAgIGVsc2UgbGFzdCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cbiAgICB9IGxhc3QgPSB1bmRlZmluZWQ7XG4gICAgaWYgKHBhcmVudCkgcGFyZW50LmVudGVyKCk7XG4gIH07XG5cbiAgLy8gTm9kZS5qc1xuICBpZiAoaXNOb2RlKSB7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhmbHVzaCk7XG4gICAgfTtcbiAgLy8gYnJvd3NlcnMgd2l0aCBNdXRhdGlvbk9ic2VydmVyLCBleGNlcHQgaU9TIFNhZmFyaSAtIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8zMzlcbiAgfSBlbHNlIGlmIChPYnNlcnZlciAmJiAhKGdsb2JhbC5uYXZpZ2F0b3IgJiYgZ2xvYmFsLm5hdmlnYXRvci5zdGFuZGFsb25lKSkge1xuICAgIHZhciB0b2dnbGUgPSB0cnVlO1xuICAgIHZhciBub2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpO1xuICAgIG5ldyBPYnNlcnZlcihmbHVzaCkub2JzZXJ2ZShub2RlLCB7IGNoYXJhY3RlckRhdGE6IHRydWUgfSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgbm9kZS5kYXRhID0gdG9nZ2xlID0gIXRvZ2dsZTtcbiAgICB9O1xuICAvLyBlbnZpcm9ubWVudHMgd2l0aCBtYXliZSBub24tY29tcGxldGVseSBjb3JyZWN0LCBidXQgZXhpc3RlbnQgUHJvbWlzZVxuICB9IGVsc2UgaWYgKFByb21pc2UgJiYgUHJvbWlzZS5yZXNvbHZlKSB7XG4gICAgLy8gUHJvbWlzZS5yZXNvbHZlIHdpdGhvdXQgYW4gYXJndW1lbnQgdGhyb3dzIGFuIGVycm9yIGluIExHIFdlYk9TIDJcbiAgICB2YXIgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSh1bmRlZmluZWQpO1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHByb21pc2UudGhlbihmbHVzaCk7XG4gICAgfTtcbiAgLy8gZm9yIG90aGVyIGVudmlyb25tZW50cyAtIG1hY3JvdGFzayBiYXNlZCBvbjpcbiAgLy8gLSBzZXRJbW1lZGlhdGVcbiAgLy8gLSBNZXNzYWdlQ2hhbm5lbFxuICAvLyAtIHdpbmRvdy5wb3N0TWVzc2FnXG4gIC8vIC0gb25yZWFkeXN0YXRlY2hhbmdlXG4gIC8vIC0gc2V0VGltZW91dFxuICB9IGVsc2Uge1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIHN0cmFuZ2UgSUUgKyB3ZWJwYWNrIGRldiBzZXJ2ZXIgYnVnIC0gdXNlIC5jYWxsKGdsb2JhbClcbiAgICAgIG1hY3JvdGFzay5jYWxsKGdsb2JhbCwgZmx1c2gpO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKGZuKSB7XG4gICAgdmFyIHRhc2sgPSB7IGZuOiBmbiwgbmV4dDogdW5kZWZpbmVkIH07XG4gICAgaWYgKGxhc3QpIGxhc3QubmV4dCA9IHRhc2s7XG4gICAgaWYgKCFoZWFkKSB7XG4gICAgICBoZWFkID0gdGFzaztcbiAgICAgIG5vdGlmeSgpO1xuICAgIH0gbGFzdCA9IHRhc2s7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjUuNC4xLjUgTmV3UHJvbWlzZUNhcGFiaWxpdHkoQylcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG5cbmZ1bmN0aW9uIFByb21pc2VDYXBhYmlsaXR5KEMpIHtcbiAgdmFyIHJlc29sdmUsIHJlamVjdDtcbiAgdGhpcy5wcm9taXNlID0gbmV3IEMoZnVuY3Rpb24gKCQkcmVzb2x2ZSwgJCRyZWplY3QpIHtcbiAgICBpZiAocmVzb2x2ZSAhPT0gdW5kZWZpbmVkIHx8IHJlamVjdCAhPT0gdW5kZWZpbmVkKSB0aHJvdyBUeXBlRXJyb3IoJ0JhZCBQcm9taXNlIGNvbnN0cnVjdG9yJyk7XG4gICAgcmVzb2x2ZSA9ICQkcmVzb2x2ZTtcbiAgICByZWplY3QgPSAkJHJlamVjdDtcbiAgfSk7XG4gIHRoaXMucmVzb2x2ZSA9IGFGdW5jdGlvbihyZXNvbHZlKTtcbiAgdGhpcy5yZWplY3QgPSBhRnVuY3Rpb24ocmVqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMuZiA9IGZ1bmN0aW9uIChDKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZUNhcGFiaWxpdHkoQyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMTkuMS4yLjEgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHNvdXJjZSwgLi4uKVxudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BTID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKTtcbnZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJT2JqZWN0ID0gcmVxdWlyZSgnLi9faW9iamVjdCcpO1xudmFyICRhc3NpZ24gPSBPYmplY3QuYXNzaWduO1xuXG4vLyBzaG91bGQgd29yayB3aXRoIHN5bWJvbHMgYW5kIHNob3VsZCBoYXZlIGRldGVybWluaXN0aWMgcHJvcGVydHkgb3JkZXIgKFY4IGJ1Zylcbm1vZHVsZS5leHBvcnRzID0gISRhc3NpZ24gfHwgcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHZhciBBID0ge307XG4gIHZhciBCID0ge307XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgUyA9IFN5bWJvbCgpO1xuICB2YXIgSyA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdCc7XG4gIEFbU10gPSA3O1xuICBLLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7IEJba10gPSBrOyB9KTtcbiAgcmV0dXJuICRhc3NpZ24oe30sIEEpW1NdICE9IDcgfHwgT2JqZWN0LmtleXMoJGFzc2lnbih7fSwgQikpLmpvaW4oJycpICE9IEs7XG59KSA/IGZ1bmN0aW9uIGFzc2lnbih0YXJnZXQsIHNvdXJjZSkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gIHZhciBUID0gdG9PYmplY3QodGFyZ2V0KTtcbiAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgaW5kZXggPSAxO1xuICB2YXIgZ2V0U3ltYm9scyA9IGdPUFMuZjtcbiAgdmFyIGlzRW51bSA9IHBJRS5mO1xuICB3aGlsZSAoYUxlbiA+IGluZGV4KSB7XG4gICAgdmFyIFMgPSBJT2JqZWN0KGFyZ3VtZW50c1tpbmRleCsrXSk7XG4gICAgdmFyIGtleXMgPSBnZXRTeW1ib2xzID8gZ2V0S2V5cyhTKS5jb25jYXQoZ2V0U3ltYm9scyhTKSkgOiBnZXRLZXlzKFMpO1xuICAgIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgICB2YXIgaiA9IDA7XG4gICAgdmFyIGtleTtcbiAgICB3aGlsZSAobGVuZ3RoID4gaikge1xuICAgICAga2V5ID0ga2V5c1tqKytdO1xuICAgICAgaWYgKCFERVNDUklQVE9SUyB8fCBpc0VudW0uY2FsbChTLCBrZXkpKSBUW2tleV0gPSBTW2tleV07XG4gICAgfVxuICB9IHJldHVybiBUO1xufSA6ICRhc3NpZ247XG4iLCIvLyAxOS4xLjIuMiAvIDE1LjIuMy41IE9iamVjdC5jcmVhdGUoTyBbLCBQcm9wZXJ0aWVzXSlcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGRQcyA9IHJlcXVpcmUoJy4vX29iamVjdC1kcHMnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcbnZhciBFbXB0eSA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcblxuLy8gQ3JlYXRlIG9iamVjdCB3aXRoIGZha2UgYG51bGxgIHByb3RvdHlwZTogdXNlIGlmcmFtZSBPYmplY3Qgd2l0aCBjbGVhcmVkIHByb3RvdHlwZVxudmFyIGNyZWF0ZURpY3QgPSBmdW5jdGlvbiAoKSB7XG4gIC8vIFRocmFzaCwgd2FzdGUgYW5kIHNvZG9teTogSUUgR0MgYnVnXG4gIHZhciBpZnJhbWUgPSByZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2lmcmFtZScpO1xuICB2YXIgaSA9IGVudW1CdWdLZXlzLmxlbmd0aDtcbiAgdmFyIGx0ID0gJzwnO1xuICB2YXIgZ3QgPSAnPic7XG4gIHZhciBpZnJhbWVEb2N1bWVudDtcbiAgaWZyYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIHJlcXVpcmUoJy4vX2h0bWwnKS5hcHBlbmRDaGlsZChpZnJhbWUpO1xuICBpZnJhbWUuc3JjID0gJ2phdmFzY3JpcHQ6JzsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1zY3JpcHQtdXJsXG4gIC8vIGNyZWF0ZURpY3QgPSBpZnJhbWUuY29udGVudFdpbmRvdy5PYmplY3Q7XG4gIC8vIGh0bWwucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbiAgaWZyYW1lRG9jdW1lbnQgPSBpZnJhbWUuY29udGVudFdpbmRvdy5kb2N1bWVudDtcbiAgaWZyYW1lRG9jdW1lbnQub3BlbigpO1xuICBpZnJhbWVEb2N1bWVudC53cml0ZShsdCArICdzY3JpcHQnICsgZ3QgKyAnZG9jdW1lbnQuRj1PYmplY3QnICsgbHQgKyAnL3NjcmlwdCcgKyBndCk7XG4gIGlmcmFtZURvY3VtZW50LmNsb3NlKCk7XG4gIGNyZWF0ZURpY3QgPSBpZnJhbWVEb2N1bWVudC5GO1xuICB3aGlsZSAoaS0tKSBkZWxldGUgY3JlYXRlRGljdFtQUk9UT1RZUEVdW2VudW1CdWdLZXlzW2ldXTtcbiAgcmV0dXJuIGNyZWF0ZURpY3QoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmNyZWF0ZSB8fCBmdW5jdGlvbiBjcmVhdGUoTywgUHJvcGVydGllcykge1xuICB2YXIgcmVzdWx0O1xuICBpZiAoTyAhPT0gbnVsbCkge1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBhbk9iamVjdChPKTtcbiAgICByZXN1bHQgPSBuZXcgRW1wdHkoKTtcbiAgICBFbXB0eVtQUk9UT1RZUEVdID0gbnVsbDtcbiAgICAvLyBhZGQgXCJfX3Byb3RvX19cIiBmb3IgT2JqZWN0LmdldFByb3RvdHlwZU9mIHBvbHlmaWxsXG4gICAgcmVzdWx0W0lFX1BST1RPXSA9IE87XG4gIH0gZWxzZSByZXN1bHQgPSBjcmVhdGVEaWN0KCk7XG4gIHJldHVybiBQcm9wZXJ0aWVzID09PSB1bmRlZmluZWQgPyByZXN1bHQgOiBkUHMocmVzdWx0LCBQcm9wZXJ0aWVzKTtcbn07XG4iLCJ2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBkUCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxuZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gZFAoTywgUCwgQXR0cmlidXRlcyk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoJ2dldCcgaW4gQXR0cmlidXRlcyB8fCAnc2V0JyBpbiBBdHRyaWJ1dGVzKSB0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIScpO1xuICBpZiAoJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzKSBPW1BdID0gQXR0cmlidXRlcy52YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuIiwidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBrZXlzID0gZ2V0S2V5cyhQcm9wZXJ0aWVzKTtcbiAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICB2YXIgaSA9IDA7XG4gIHZhciBQO1xuICB3aGlsZSAobGVuZ3RoID4gaSkgZFAuZihPLCBQID0ga2V5c1tpKytdLCBQcm9wZXJ0aWVzW1BdKTtcbiAgcmV0dXJuIE87XG59O1xuIiwidmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi9faWU4LWRvbS1kZWZpbmUnKTtcbnZhciBnT1BEID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcblxuZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGdPUEQgOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUCkge1xuICBPID0gdG9JT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gZ09QRChPLCBQKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIGlmIChoYXMoTywgUCkpIHJldHVybiBjcmVhdGVEZXNjKCFwSUUuZi5jYWxsKE8sIFApLCBPW1BdKTtcbn07XG4iLCIvLyBmYWxsYmFjayBmb3IgSUUxMSBidWdneSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB3aXRoIGlmcmFtZSBhbmQgd2luZG93XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG52YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxudmFyIHdpbmRvd05hbWVzID0gdHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyAmJiB3aW5kb3cgJiYgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXNcbiAgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh3aW5kb3cpIDogW107XG5cbnZhciBnZXRXaW5kb3dOYW1lcyA9IGZ1bmN0aW9uIChpdCkge1xuICB0cnkge1xuICAgIHJldHVybiBnT1BOKGl0KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB3aW5kb3dOYW1lcy5zbGljZSgpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5mID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCkge1xuICByZXR1cm4gd2luZG93TmFtZXMgJiYgdG9TdHJpbmcuY2FsbChpdCkgPT0gJ1tvYmplY3QgV2luZG93XScgPyBnZXRXaW5kb3dOYW1lcyhpdCkgOiBnT1BOKHRvSU9iamVjdChpdCkpO1xufTtcbiIsIi8vIDE5LjEuMi43IC8gMTUuMi4zLjQgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKS5jb25jYXQoJ2xlbmd0aCcsICdwcm90b3R5cGUnKTtcblxuZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgfHwgZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhPKSB7XG4gIHJldHVybiAka2V5cyhPLCBoaWRkZW5LZXlzKTtcbn07XG4iLCJleHBvcnRzLmYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuIiwiLy8gMTkuMS4yLjkgLyAxNS4yLjMuMiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xudmFyIE9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gKE8pIHtcbiAgTyA9IHRvT2JqZWN0KE8pO1xuICBpZiAoaGFzKE8sIElFX1BST1RPKSkgcmV0dXJuIE9bSUVfUFJPVE9dO1xuICBpZiAodHlwZW9mIE8uY29uc3RydWN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBPIGluc3RhbmNlb2YgTy5jb25zdHJ1Y3Rvcikge1xuICAgIHJldHVybiBPLmNvbnN0cnVjdG9yLnByb3RvdHlwZTtcbiAgfSByZXR1cm4gTyBpbnN0YW5jZW9mIE9iamVjdCA/IE9iamVjdFByb3RvIDogbnVsbDtcbn07XG4iLCJ2YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGFycmF5SW5kZXhPZiA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJykoZmFsc2UpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIG5hbWVzKSB7XG4gIHZhciBPID0gdG9JT2JqZWN0KG9iamVjdCk7XG4gIHZhciBpID0gMDtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIga2V5O1xuICBmb3IgKGtleSBpbiBPKSBpZiAoa2V5ICE9IElFX1BST1RPKSBoYXMoTywga2V5KSAmJiByZXN1bHQucHVzaChrZXkpO1xuICAvLyBEb24ndCBlbnVtIGJ1ZyAmIGhpZGRlbiBrZXlzXG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSBpZiAoaGFzKE8sIGtleSA9IG5hbWVzW2krK10pKSB7XG4gICAgfmFycmF5SW5kZXhPZihyZXN1bHQsIGtleSkgfHwgcmVzdWx0LnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsIi8vIDE5LjEuMi4xNCAvIDE1LjIuMy4xNCBPYmplY3Qua2V5cyhPKVxudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiBrZXlzKE8pIHtcbiAgcmV0dXJuICRrZXlzKE8sIGVudW1CdWdLZXlzKTtcbn07XG4iLCJleHBvcnRzLmYgPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbiIsIi8vIG1vc3QgT2JqZWN0IG1ldGhvZHMgYnkgRVM2IHNob3VsZCBhY2NlcHQgcHJpbWl0aXZlc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEtFWSwgZXhlYykge1xuICB2YXIgZm4gPSAoY29yZS5PYmplY3QgfHwge30pW0tFWV0gfHwgT2JqZWN0W0tFWV07XG4gIHZhciBleHAgPSB7fTtcbiAgZXhwW0tFWV0gPSBleGVjKGZuKTtcbiAgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiBmYWlscyhmdW5jdGlvbiAoKSB7IGZuKDEpOyB9KSwgJ09iamVjdCcsIGV4cCk7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiB7IGU6IGZhbHNlLCB2OiBleGVjKCkgfTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB7IGU6IHRydWUsIHY6IGUgfTtcbiAgfVxufTtcbiIsInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbmV3UHJvbWlzZUNhcGFiaWxpdHkgPSByZXF1aXJlKCcuL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEMsIHgpIHtcbiAgYW5PYmplY3QoQyk7XG4gIGlmIChpc09iamVjdCh4KSAmJiB4LmNvbnN0cnVjdG9yID09PSBDKSByZXR1cm4geDtcbiAgdmFyIHByb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkuZihDKTtcbiAgdmFyIHJlc29sdmUgPSBwcm9taXNlQ2FwYWJpbGl0eS5yZXNvbHZlO1xuICByZXNvbHZlKHgpO1xuICByZXR1cm4gcHJvbWlzZUNhcGFiaWxpdHkucHJvbWlzZTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChiaXRtYXAsIHZhbHVlKSB7XG4gIHJldHVybiB7XG4gICAgZW51bWVyYWJsZTogIShiaXRtYXAgJiAxKSxcbiAgICBjb25maWd1cmFibGU6ICEoYml0bWFwICYgMiksXG4gICAgd3JpdGFibGU6ICEoYml0bWFwICYgNCksXG4gICAgdmFsdWU6IHZhbHVlXG4gIH07XG59O1xuIiwidmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0YXJnZXQsIHNyYywgc2FmZSkge1xuICBmb3IgKHZhciBrZXkgaW4gc3JjKSB7XG4gICAgaWYgKHNhZmUgJiYgdGFyZ2V0W2tleV0pIHRhcmdldFtrZXldID0gc3JjW2tleV07XG4gICAgZWxzZSBoaWRlKHRhcmdldCwga2V5LCBzcmNba2V5XSk7XG4gIH0gcmV0dXJuIHRhcmdldDtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbiIsIi8vIFdvcmtzIHdpdGggX19wcm90b19fIG9ubHkuIE9sZCB2OCBjYW4ndCB3b3JrIHdpdGggbnVsbCBwcm90byBvYmplY3RzLlxuLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG8gKi9cbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgY2hlY2sgPSBmdW5jdGlvbiAoTywgcHJvdG8pIHtcbiAgYW5PYmplY3QoTyk7XG4gIGlmICghaXNPYmplY3QocHJvdG8pICYmIHByb3RvICE9PSBudWxsKSB0aHJvdyBUeXBlRXJyb3IocHJvdG8gKyBcIjogY2FuJ3Qgc2V0IGFzIHByb3RvdHlwZSFcIik7XG59O1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8ICgnX19wcm90b19fJyBpbiB7fSA/IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICBmdW5jdGlvbiAodGVzdCwgYnVnZ3ksIHNldCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0ID0gcmVxdWlyZSgnLi9fY3R4JykoRnVuY3Rpb24uY2FsbCwgcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKS5mKE9iamVjdC5wcm90b3R5cGUsICdfX3Byb3RvX18nKS5zZXQsIDIpO1xuICAgICAgICBzZXQodGVzdCwgW10pO1xuICAgICAgICBidWdneSA9ICEodGVzdCBpbnN0YW5jZW9mIEFycmF5KTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsgYnVnZ3kgPSB0cnVlOyB9XG4gICAgICByZXR1cm4gZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pIHtcbiAgICAgICAgY2hlY2soTywgcHJvdG8pO1xuICAgICAgICBpZiAoYnVnZ3kpIE8uX19wcm90b19fID0gcHJvdG87XG4gICAgICAgIGVsc2Ugc2V0KE8sIHByb3RvKTtcbiAgICAgICAgcmV0dXJuIE87XG4gICAgICB9O1xuICAgIH0oe30sIGZhbHNlKSA6IHVuZGVmaW5lZCksXG4gIGNoZWNrOiBjaGVja1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgdmFyIEMgPSB0eXBlb2YgY29yZVtLRVldID09ICdmdW5jdGlvbicgPyBjb3JlW0tFWV0gOiBnbG9iYWxbS0VZXTtcbiAgaWYgKERFU0NSSVBUT1JTICYmIEMgJiYgIUNbU1BFQ0lFU10pIGRQLmYoQywgU1BFQ0lFUywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH1cbiAgfSk7XG59O1xuIiwidmFyIGRlZiA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCB0YWcsIHN0YXQpIHtcbiAgaWYgKGl0ICYmICFoYXMoaXQgPSBzdGF0ID8gaXQgOiBpdC5wcm90b3R5cGUsIFRBRykpIGRlZihpdCwgVEFHLCB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRhZyB9KTtcbn07XG4iLCJ2YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ2tleXMnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gc2hhcmVkW2tleV0gfHwgKHNoYXJlZFtrZXldID0gdWlkKGtleSkpO1xufTtcbiIsInZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIFNIQVJFRCA9ICdfX2NvcmUtanNfc2hhcmVkX18nO1xudmFyIHN0b3JlID0gZ2xvYmFsW1NIQVJFRF0gfHwgKGdsb2JhbFtTSEFSRURdID0ge30pO1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gc3RvcmVba2V5XSB8fCAoc3RvcmVba2V5XSA9IHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IHt9KTtcbn0pKCd2ZXJzaW9ucycsIFtdKS5wdXNoKHtcbiAgdmVyc2lvbjogY29yZS52ZXJzaW9uLFxuICBtb2RlOiByZXF1aXJlKCcuL19saWJyYXJ5JykgPyAncHVyZScgOiAnZ2xvYmFsJyxcbiAgY29weXJpZ2h0OiAnwqkgMjAxOSBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KSdcbn0pO1xuIiwiLy8gNy4zLjIwIFNwZWNpZXNDb25zdHJ1Y3RvcihPLCBkZWZhdWx0Q29uc3RydWN0b3IpXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgU1BFQ0lFUyA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBEKSB7XG4gIHZhciBDID0gYW5PYmplY3QoTykuY29uc3RydWN0b3I7XG4gIHZhciBTO1xuICByZXR1cm4gQyA9PT0gdW5kZWZpbmVkIHx8IChTID0gYW5PYmplY3QoQylbU1BFQ0lFU10pID09IHVuZGVmaW5lZCA/IEQgOiBhRnVuY3Rpb24oUyk7XG59O1xuIiwidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuLy8gdHJ1ZSAgLT4gU3RyaW5nI2F0XG4vLyBmYWxzZSAtPiBTdHJpbmcjY29kZVBvaW50QXRcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFRPX1NUUklORykge1xuICByZXR1cm4gZnVuY3Rpb24gKHRoYXQsIHBvcykge1xuICAgIHZhciBzID0gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xuICAgIHZhciBpID0gdG9JbnRlZ2VyKHBvcyk7XG4gICAgdmFyIGwgPSBzLmxlbmd0aDtcbiAgICB2YXIgYSwgYjtcbiAgICBpZiAoaSA8IDAgfHwgaSA+PSBsKSByZXR1cm4gVE9fU1RSSU5HID8gJycgOiB1bmRlZmluZWQ7XG4gICAgYSA9IHMuY2hhckNvZGVBdChpKTtcbiAgICByZXR1cm4gYSA8IDB4ZDgwMCB8fCBhID4gMHhkYmZmIHx8IGkgKyAxID09PSBsIHx8IChiID0gcy5jaGFyQ29kZUF0KGkgKyAxKSkgPCAweGRjMDAgfHwgYiA+IDB4ZGZmZlxuICAgICAgPyBUT19TVFJJTkcgPyBzLmNoYXJBdChpKSA6IGFcbiAgICAgIDogVE9fU1RSSU5HID8gcy5zbGljZShpLCBpICsgMikgOiAoYSAtIDB4ZDgwMCA8PCAxMCkgKyAoYiAtIDB4ZGMwMCkgKyAweDEwMDAwO1xuICB9O1xufTtcbiIsInZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBpbnZva2UgPSByZXF1aXJlKCcuL19pbnZva2UnKTtcbnZhciBodG1sID0gcmVxdWlyZSgnLi9faHRtbCcpO1xudmFyIGNlbCA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgc2V0VGFzayA9IGdsb2JhbC5zZXRJbW1lZGlhdGU7XG52YXIgY2xlYXJUYXNrID0gZ2xvYmFsLmNsZWFySW1tZWRpYXRlO1xudmFyIE1lc3NhZ2VDaGFubmVsID0gZ2xvYmFsLk1lc3NhZ2VDaGFubmVsO1xudmFyIERpc3BhdGNoID0gZ2xvYmFsLkRpc3BhdGNoO1xudmFyIGNvdW50ZXIgPSAwO1xudmFyIHF1ZXVlID0ge307XG52YXIgT05SRUFEWVNUQVRFQ0hBTkdFID0gJ29ucmVhZHlzdGF0ZWNoYW5nZSc7XG52YXIgZGVmZXIsIGNoYW5uZWwsIHBvcnQ7XG52YXIgcnVuID0gZnVuY3Rpb24gKCkge1xuICB2YXIgaWQgPSArdGhpcztcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xuICBpZiAocXVldWUuaGFzT3duUHJvcGVydHkoaWQpKSB7XG4gICAgdmFyIGZuID0gcXVldWVbaWRdO1xuICAgIGRlbGV0ZSBxdWV1ZVtpZF07XG4gICAgZm4oKTtcbiAgfVxufTtcbnZhciBsaXN0ZW5lciA9IGZ1bmN0aW9uIChldmVudCkge1xuICBydW4uY2FsbChldmVudC5kYXRhKTtcbn07XG4vLyBOb2RlLmpzIDAuOSsgJiBJRTEwKyBoYXMgc2V0SW1tZWRpYXRlLCBvdGhlcndpc2U6XG5pZiAoIXNldFRhc2sgfHwgIWNsZWFyVGFzaykge1xuICBzZXRUYXNrID0gZnVuY3Rpb24gc2V0SW1tZWRpYXRlKGZuKSB7XG4gICAgdmFyIGFyZ3MgPSBbXTtcbiAgICB2YXIgaSA9IDE7XG4gICAgd2hpbGUgKGFyZ3VtZW50cy5sZW5ndGggPiBpKSBhcmdzLnB1c2goYXJndW1lbnRzW2krK10pO1xuICAgIHF1ZXVlWysrY291bnRlcl0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgICAgIGludm9rZSh0eXBlb2YgZm4gPT0gJ2Z1bmN0aW9uJyA/IGZuIDogRnVuY3Rpb24oZm4pLCBhcmdzKTtcbiAgICB9O1xuICAgIGRlZmVyKGNvdW50ZXIpO1xuICAgIHJldHVybiBjb3VudGVyO1xuICB9O1xuICBjbGVhclRhc2sgPSBmdW5jdGlvbiBjbGVhckltbWVkaWF0ZShpZCkge1xuICAgIGRlbGV0ZSBxdWV1ZVtpZF07XG4gIH07XG4gIC8vIE5vZGUuanMgMC44LVxuICBpZiAocmVxdWlyZSgnLi9fY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2soY3R4KHJ1biwgaWQsIDEpKTtcbiAgICB9O1xuICAvLyBTcGhlcmUgKEpTIGdhbWUgZW5naW5lKSBEaXNwYXRjaCBBUElcbiAgfSBlbHNlIGlmIChEaXNwYXRjaCAmJiBEaXNwYXRjaC5ub3cpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgRGlzcGF0Y2gubm93KGN0eChydW4sIGlkLCAxKSk7XG4gICAgfTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBNZXNzYWdlQ2hhbm5lbCwgaW5jbHVkZXMgV2ViV29ya2Vyc1xuICB9IGVsc2UgaWYgKE1lc3NhZ2VDaGFubmVsKSB7XG4gICAgY2hhbm5lbCA9IG5ldyBNZXNzYWdlQ2hhbm5lbCgpO1xuICAgIHBvcnQgPSBjaGFubmVsLnBvcnQyO1xuICAgIGNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gbGlzdGVuZXI7XG4gICAgZGVmZXIgPSBjdHgocG9ydC5wb3N0TWVzc2FnZSwgcG9ydCwgMSk7XG4gIC8vIEJyb3dzZXJzIHdpdGggcG9zdE1lc3NhZ2UsIHNraXAgV2ViV29ya2Vyc1xuICAvLyBJRTggaGFzIHBvc3RNZXNzYWdlLCBidXQgaXQncyBzeW5jICYgdHlwZW9mIGl0cyBwb3N0TWVzc2FnZSBpcyAnb2JqZWN0J1xuICB9IGVsc2UgaWYgKGdsb2JhbC5hZGRFdmVudExpc3RlbmVyICYmIHR5cGVvZiBwb3N0TWVzc2FnZSA9PSAnZnVuY3Rpb24nICYmICFnbG9iYWwuaW1wb3J0U2NyaXB0cykge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBnbG9iYWwucG9zdE1lc3NhZ2UoaWQgKyAnJywgJyonKTtcbiAgICB9O1xuICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgbGlzdGVuZXIsIGZhbHNlKTtcbiAgLy8gSUU4LVxuICB9IGVsc2UgaWYgKE9OUkVBRFlTVEFURUNIQU5HRSBpbiBjZWwoJ3NjcmlwdCcpKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIGh0bWwuYXBwZW5kQ2hpbGQoY2VsKCdzY3JpcHQnKSlbT05SRUFEWVNUQVRFQ0hBTkdFXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaHRtbC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICAgICAgcnVuLmNhbGwoaWQpO1xuICAgICAgfTtcbiAgICB9O1xuICAvLyBSZXN0IG9sZCBicm93c2Vyc1xuICB9IGVsc2Uge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBzZXRUaW1lb3V0KGN0eChydW4sIGlkLCAxKSwgMCk7XG4gICAgfTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogc2V0VGFzayxcbiAgY2xlYXI6IGNsZWFyVGFza1xufTtcbiIsInZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWF4ID0gTWF0aC5tYXg7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbmRleCwgbGVuZ3RoKSB7XG4gIGluZGV4ID0gdG9JbnRlZ2VyKGluZGV4KTtcbiAgcmV0dXJuIGluZGV4IDwgMCA/IG1heChpbmRleCArIGxlbmd0aCwgMCkgOiBtaW4oaW5kZXgsIGxlbmd0aCk7XG59O1xuIiwiLy8gNy4xLjQgVG9JbnRlZ2VyXG52YXIgY2VpbCA9IE1hdGguY2VpbDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXNOYU4oaXQgPSAraXQpID8gMCA6IChpdCA+IDAgPyBmbG9vciA6IGNlaWwpKGl0KTtcbn07XG4iLCIvLyB0byBpbmRleGVkIG9iamVjdCwgdG9PYmplY3Qgd2l0aCBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIHN0cmluZ3NcbnZhciBJT2JqZWN0ID0gcmVxdWlyZSgnLi9faW9iamVjdCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gSU9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuIiwiLy8gNy4xLjE1IFRvTGVuZ3RoXG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ID4gMCA/IG1pbih0b0ludGVnZXIoaXQpLCAweDFmZmZmZmZmZmZmZmZmKSA6IDA7IC8vIHBvdygyLCA1MykgLSAxID09IDkwMDcxOTkyNTQ3NDA5OTFcbn07XG4iLCIvLyA3LjEuMTMgVG9PYmplY3QoYXJndW1lbnQpXG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiIsIi8vIDcuMS4xIFRvUHJpbWl0aXZlKGlucHV0IFssIFByZWZlcnJlZFR5cGVdKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG4vLyBpbnN0ZWFkIG9mIHRoZSBFUzYgc3BlYyB2ZXJzaW9uLCB3ZSBkaWRuJ3QgaW1wbGVtZW50IEBAdG9QcmltaXRpdmUgY2FzZVxuLy8gYW5kIHRoZSBzZWNvbmQgYXJndW1lbnQgLSBmbGFnIC0gcHJlZmVycmVkIHR5cGUgaXMgYSBzdHJpbmdcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBTKSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSByZXR1cm4gaXQ7XG4gIHZhciBmbiwgdmFsO1xuICBpZiAoUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKHR5cGVvZiAoZm4gPSBpdC52YWx1ZU9mKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIGlmICghUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpO1xufTtcbiIsInZhciBpZCA9IDA7XG52YXIgcHggPSBNYXRoLnJhbmRvbSgpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiAnU3ltYm9sKCcuY29uY2F0KGtleSA9PT0gdW5kZWZpbmVkID8gJycgOiBrZXksICcpXycsICgrK2lkICsgcHgpLnRvU3RyaW5nKDM2KSk7XG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIG5hdmlnYXRvciA9IGdsb2JhbC5uYXZpZ2F0b3I7XG5cbm1vZHVsZS5leHBvcnRzID0gbmF2aWdhdG9yICYmIG5hdmlnYXRvci51c2VyQWdlbnQgfHwgJyc7XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyIHdrc0V4dCA9IHJlcXVpcmUoJy4vX3drcy1leHQnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHZhciAkU3ltYm9sID0gY29yZS5TeW1ib2wgfHwgKGNvcmUuU3ltYm9sID0gTElCUkFSWSA/IHt9IDogZ2xvYmFsLlN5bWJvbCB8fCB7fSk7XG4gIGlmIChuYW1lLmNoYXJBdCgwKSAhPSAnXycgJiYgIShuYW1lIGluICRTeW1ib2wpKSBkZWZpbmVQcm9wZXJ0eSgkU3ltYm9sLCBuYW1lLCB7IHZhbHVlOiB3a3NFeHQuZihuYW1lKSB9KTtcbn07XG4iLCJleHBvcnRzLmYgPSByZXF1aXJlKCcuL193a3MnKTtcbiIsInZhciBzdG9yZSA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCd3a3MnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciBTeW1ib2wgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5TeW1ib2w7XG52YXIgVVNFX1NZTUJPTCA9IHR5cGVvZiBTeW1ib2wgPT0gJ2Z1bmN0aW9uJztcblxudmFyICRleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gc3RvcmVbbmFtZV0gfHwgKHN0b3JlW25hbWVdID1cbiAgICBVU0VfU1lNQk9MICYmIFN5bWJvbFtuYW1lXSB8fCAoVVNFX1NZTUJPTCA/IFN5bWJvbCA6IHVpZCkoJ1N5bWJvbC4nICsgbmFtZSkpO1xufTtcblxuJGV4cG9ydHMuc3RvcmUgPSBzdG9yZTtcbiIsInZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvcmUnKS5nZXRJdGVyYXRvck1ldGhvZCA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgIT0gdW5kZWZpbmVkKSByZXR1cm4gaXRbSVRFUkFUT1JdXG4gICAgfHwgaXRbJ0BAaXRlcmF0b3InXVxuICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuL19pdGVyLWNhbGwnKTtcbnZhciBpc0FycmF5SXRlciA9IHJlcXVpcmUoJy4vX2lzLWFycmF5LWl0ZXInKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG52YXIgZ2V0SXRlckZuID0gcmVxdWlyZSgnLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKShmdW5jdGlvbiAoaXRlcikgeyBBcnJheS5mcm9tKGl0ZXIpOyB9KSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjIuMSBBcnJheS5mcm9tKGFycmF5TGlrZSwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG4gIGZyb206IGZ1bmN0aW9uIGZyb20oYXJyYXlMaWtlIC8qICwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQgKi8pIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KGFycmF5TGlrZSk7XG4gICAgdmFyIEMgPSB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5O1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgbWFwZm4gPSBhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgbWFwcGluZyA9IG1hcGZuICE9PSB1bmRlZmluZWQ7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgaXRlckZuID0gZ2V0SXRlckZuKE8pO1xuICAgIHZhciBsZW5ndGgsIHJlc3VsdCwgc3RlcCwgaXRlcmF0b3I7XG4gICAgaWYgKG1hcHBpbmcpIG1hcGZuID0gY3R4KG1hcGZuLCBhTGVuID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZCwgMik7XG4gICAgLy8gaWYgb2JqZWN0IGlzbid0IGl0ZXJhYmxlIG9yIGl0J3MgYXJyYXkgd2l0aCBkZWZhdWx0IGl0ZXJhdG9yIC0gdXNlIHNpbXBsZSBjYXNlXG4gICAgaWYgKGl0ZXJGbiAhPSB1bmRlZmluZWQgJiYgIShDID09IEFycmF5ICYmIGlzQXJyYXlJdGVyKGl0ZXJGbikpKSB7XG4gICAgICBmb3IgKGl0ZXJhdG9yID0gaXRlckZuLmNhbGwoTyksIHJlc3VsdCA9IG5ldyBDKCk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTsgaW5kZXgrKykge1xuICAgICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBtYXBwaW5nID8gY2FsbChpdGVyYXRvciwgbWFwZm4sIFtzdGVwLnZhbHVlLCBpbmRleF0sIHRydWUpIDogc3RlcC52YWx1ZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICAgIGZvciAocmVzdWx0ID0gbmV3IEMobGVuZ3RoKTsgbGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIHtcbiAgICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgbWFwcGluZyA/IG1hcGZuKE9baW5kZXhdLCBpbmRleCkgOiBPW2luZGV4XSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJlc3VsdC5sZW5ndGggPSBpbmRleDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBhZGRUb1Vuc2NvcGFibGVzID0gcmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJyk7XG52YXIgc3RlcCA9IHJlcXVpcmUoJy4vX2l0ZXItc3RlcCcpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcblxuLy8gMjIuMS4zLjQgQXJyYXkucHJvdG90eXBlLmVudHJpZXMoKVxuLy8gMjIuMS4zLjEzIEFycmF5LnByb3RvdHlwZS5rZXlzKClcbi8vIDIyLjEuMy4yOSBBcnJheS5wcm90b3R5cGUudmFsdWVzKClcbi8vIDIyLjEuMy4zMCBBcnJheS5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKVxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19pdGVyLWRlZmluZScpKEFycmF5LCAnQXJyYXknLCBmdW5jdGlvbiAoaXRlcmF0ZWQsIGtpbmQpIHtcbiAgdGhpcy5fdCA9IHRvSU9iamVjdChpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuICB0aGlzLl9rID0ga2luZDsgICAgICAgICAgICAgICAgLy8ga2luZFxuLy8gMjIuMS41LjIuMSAlQXJyYXlJdGVyYXRvclByb3RvdHlwZSUubmV4dCgpXG59LCBmdW5jdGlvbiAoKSB7XG4gIHZhciBPID0gdGhpcy5fdDtcbiAgdmFyIGtpbmQgPSB0aGlzLl9rO1xuICB2YXIgaW5kZXggPSB0aGlzLl9pKys7XG4gIGlmICghTyB8fCBpbmRleCA+PSBPLmxlbmd0aCkge1xuICAgIHRoaXMuX3QgPSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHN0ZXAoMSk7XG4gIH1cbiAgaWYgKGtpbmQgPT0gJ2tleXMnKSByZXR1cm4gc3RlcCgwLCBpbmRleCk7XG4gIGlmIChraW5kID09ICd2YWx1ZXMnKSByZXR1cm4gc3RlcCgwLCBPW2luZGV4XSk7XG4gIHJldHVybiBzdGVwKDAsIFtpbmRleCwgT1tpbmRleF1dKTtcbn0sICd2YWx1ZXMnKTtcblxuLy8gYXJndW1lbnRzTGlzdFtAQGl0ZXJhdG9yXSBpcyAlQXJyYXlQcm90b192YWx1ZXMlICg5LjQuNC42LCA5LjQuNC43KVxuSXRlcmF0b3JzLkFyZ3VtZW50cyA9IEl0ZXJhdG9ycy5BcnJheTtcblxuYWRkVG9VbnNjb3BhYmxlcygna2V5cycpO1xuYWRkVG9VbnNjb3BhYmxlcygndmFsdWVzJyk7XG5hZGRUb1Vuc2NvcGFibGVzKCdlbnRyaWVzJyk7XG4iLCIvLyAxOS4xLjMuMSBPYmplY3QuYXNzaWduKHRhcmdldCwgc291cmNlKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYsICdPYmplY3QnLCB7IGFzc2lnbjogcmVxdWlyZSgnLi9fb2JqZWN0LWFzc2lnbicpIH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7IGNyZWF0ZTogcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpIH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi40IC8gMTUuMi4zLjYgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0eTogcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZiB9KTtcbiIsIi8vIDE5LjEuMi42IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUClcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSkge1xuICAgIHJldHVybiAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRvSU9iamVjdChpdCksIGtleSk7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi43IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2dldE93blByb3BlcnR5TmFtZXMnLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiByZXF1aXJlKCcuL19vYmplY3QtZ29wbi1leHQnKS5mO1xufSk7XG4iLCIvLyAxOS4xLjIuOSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRQcm90b3R5cGVPZicsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKGl0KSB7XG4gICAgcmV0dXJuICRnZXRQcm90b3R5cGVPZih0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuMTQgT2JqZWN0LmtleXMoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdrZXlzJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZnVuY3Rpb24ga2V5cyhpdCkge1xuICAgIHJldHVybiAka2V5cyh0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjMuMTkgT2JqZWN0LnNldFByb3RvdHlwZU9mKE8sIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBzZXRQcm90b3R5cGVPZjogcmVxdWlyZSgnLi9fc2V0LXByb3RvJykuc2V0IH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKS5zZXQ7XG52YXIgbWljcm90YXNrID0gcmVxdWlyZSgnLi9fbWljcm90YXNrJykoKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eU1vZHVsZSA9IHJlcXVpcmUoJy4vX25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcbnZhciBwZXJmb3JtID0gcmVxdWlyZSgnLi9fcGVyZm9ybScpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcbnZhciBwcm9taXNlUmVzb2x2ZSA9IHJlcXVpcmUoJy4vX3Byb21pc2UtcmVzb2x2ZScpO1xudmFyIFBST01JU0UgPSAnUHJvbWlzZSc7XG52YXIgVHlwZUVycm9yID0gZ2xvYmFsLlR5cGVFcnJvcjtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgdmVyc2lvbnMgPSBwcm9jZXNzICYmIHByb2Nlc3MudmVyc2lvbnM7XG52YXIgdjggPSB2ZXJzaW9ucyAmJiB2ZXJzaW9ucy52OCB8fCAnJztcbnZhciAkUHJvbWlzZSA9IGdsb2JhbFtQUk9NSVNFXTtcbnZhciBpc05vZGUgPSBjbGFzc29mKHByb2Nlc3MpID09ICdwcm9jZXNzJztcbnZhciBlbXB0eSA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbnZhciBJbnRlcm5hbCwgbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5LCBPd25Qcm9taXNlQ2FwYWJpbGl0eSwgV3JhcHBlcjtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IG5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmY7XG5cbnZhciBVU0VfTkFUSVZFID0gISFmdW5jdGlvbiAoKSB7XG4gIHRyeSB7XG4gICAgLy8gY29ycmVjdCBzdWJjbGFzc2luZyB3aXRoIEBAc3BlY2llcyBzdXBwb3J0XG4gICAgdmFyIHByb21pc2UgPSAkUHJvbWlzZS5yZXNvbHZlKDEpO1xuICAgIHZhciBGYWtlUHJvbWlzZSA9IChwcm9taXNlLmNvbnN0cnVjdG9yID0ge30pW3JlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyldID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgICAgIGV4ZWMoZW1wdHksIGVtcHR5KTtcbiAgICB9O1xuICAgIC8vIHVuaGFuZGxlZCByZWplY3Rpb25zIHRyYWNraW5nIHN1cHBvcnQsIE5vZGVKUyBQcm9taXNlIHdpdGhvdXQgaXQgZmFpbHMgQEBzcGVjaWVzIHRlc3RcbiAgICByZXR1cm4gKGlzTm9kZSB8fCB0eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50ID09ICdmdW5jdGlvbicpXG4gICAgICAmJiBwcm9taXNlLnRoZW4oZW1wdHkpIGluc3RhbmNlb2YgRmFrZVByb21pc2VcbiAgICAgIC8vIHY4IDYuNiAoTm9kZSAxMCBhbmQgQ2hyb21lIDY2KSBoYXZlIGEgYnVnIHdpdGggcmVzb2x2aW5nIGN1c3RvbSB0aGVuYWJsZXNcbiAgICAgIC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTgzMDU2NVxuICAgICAgLy8gd2UgY2FuJ3QgZGV0ZWN0IGl0IHN5bmNocm9ub3VzbHksIHNvIGp1c3QgY2hlY2sgdmVyc2lvbnNcbiAgICAgICYmIHY4LmluZGV4T2YoJzYuNicpICE9PSAwXG4gICAgICAmJiB1c2VyQWdlbnQuaW5kZXhPZignQ2hyb21lLzY2JykgPT09IC0xO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn0oKTtcblxuLy8gaGVscGVyc1xudmFyIGlzVGhlbmFibGUgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIHRoZW47XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgdHlwZW9mICh0aGVuID0gaXQudGhlbikgPT0gJ2Z1bmN0aW9uJyA/IHRoZW4gOiBmYWxzZTtcbn07XG52YXIgbm90aWZ5ID0gZnVuY3Rpb24gKHByb21pc2UsIGlzUmVqZWN0KSB7XG4gIGlmIChwcm9taXNlLl9uKSByZXR1cm47XG4gIHByb21pc2UuX24gPSB0cnVlO1xuICB2YXIgY2hhaW4gPSBwcm9taXNlLl9jO1xuICBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3Y7XG4gICAgdmFyIG9rID0gcHJvbWlzZS5fcyA9PSAxO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgcnVuID0gZnVuY3Rpb24gKHJlYWN0aW9uKSB7XG4gICAgICB2YXIgaGFuZGxlciA9IG9rID8gcmVhY3Rpb24ub2sgOiByZWFjdGlvbi5mYWlsO1xuICAgICAgdmFyIHJlc29sdmUgPSByZWFjdGlvbi5yZXNvbHZlO1xuICAgICAgdmFyIHJlamVjdCA9IHJlYWN0aW9uLnJlamVjdDtcbiAgICAgIHZhciBkb21haW4gPSByZWFjdGlvbi5kb21haW47XG4gICAgICB2YXIgcmVzdWx0LCB0aGVuLCBleGl0ZWQ7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoaGFuZGxlcikge1xuICAgICAgICAgIGlmICghb2spIHtcbiAgICAgICAgICAgIGlmIChwcm9taXNlLl9oID09IDIpIG9uSGFuZGxlVW5oYW5kbGVkKHByb21pc2UpO1xuICAgICAgICAgICAgcHJvbWlzZS5faCA9IDE7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChoYW5kbGVyID09PSB0cnVlKSByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChkb21haW4pIGRvbWFpbi5lbnRlcigpO1xuICAgICAgICAgICAgcmVzdWx0ID0gaGFuZGxlcih2YWx1ZSk7IC8vIG1heSB0aHJvd1xuICAgICAgICAgICAgaWYgKGRvbWFpbikge1xuICAgICAgICAgICAgICBkb21haW4uZXhpdCgpO1xuICAgICAgICAgICAgICBleGl0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocmVzdWx0ID09PSByZWFjdGlvbi5wcm9taXNlKSB7XG4gICAgICAgICAgICByZWplY3QoVHlwZUVycm9yKCdQcm9taXNlLWNoYWluIGN5Y2xlJykpO1xuICAgICAgICAgIH0gZWxzZSBpZiAodGhlbiA9IGlzVGhlbmFibGUocmVzdWx0KSkge1xuICAgICAgICAgICAgdGhlbi5jYWxsKHJlc3VsdCwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9IGVsc2UgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9IGVsc2UgcmVqZWN0KHZhbHVlKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGRvbWFpbiAmJiAhZXhpdGVkKSBkb21haW4uZXhpdCgpO1xuICAgICAgICByZWplY3QoZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB3aGlsZSAoY2hhaW4ubGVuZ3RoID4gaSkgcnVuKGNoYWluW2krK10pOyAvLyB2YXJpYWJsZSBsZW5ndGggLSBjYW4ndCB1c2UgZm9yRWFjaFxuICAgIHByb21pc2UuX2MgPSBbXTtcbiAgICBwcm9taXNlLl9uID0gZmFsc2U7XG4gICAgaWYgKGlzUmVqZWN0ICYmICFwcm9taXNlLl9oKSBvblVuaGFuZGxlZChwcm9taXNlKTtcbiAgfSk7XG59O1xudmFyIG9uVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3Y7XG4gICAgdmFyIHVuaGFuZGxlZCA9IGlzVW5oYW5kbGVkKHByb21pc2UpO1xuICAgIHZhciByZXN1bHQsIGhhbmRsZXIsIGNvbnNvbGU7XG4gICAgaWYgKHVuaGFuZGxlZCkge1xuICAgICAgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChpc05vZGUpIHtcbiAgICAgICAgICBwcm9jZXNzLmVtaXQoJ3VuaGFuZGxlZFJlamVjdGlvbicsIHZhbHVlLCBwcm9taXNlKTtcbiAgICAgICAgfSBlbHNlIGlmIChoYW5kbGVyID0gZ2xvYmFsLm9udW5oYW5kbGVkcmVqZWN0aW9uKSB7XG4gICAgICAgICAgaGFuZGxlcih7IHByb21pc2U6IHByb21pc2UsIHJlYXNvbjogdmFsdWUgfSk7XG4gICAgICAgIH0gZWxzZSBpZiAoKGNvbnNvbGUgPSBnbG9iYWwuY29uc29sZSkgJiYgY29uc29sZS5lcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbicsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICAvLyBCcm93c2VycyBzaG91bGQgbm90IHRyaWdnZXIgYHJlamVjdGlvbkhhbmRsZWRgIGV2ZW50IGlmIGl0IHdhcyBoYW5kbGVkIGhlcmUsIE5vZGVKUyAtIHNob3VsZFxuICAgICAgcHJvbWlzZS5faCA9IGlzTm9kZSB8fCBpc1VuaGFuZGxlZChwcm9taXNlKSA/IDIgOiAxO1xuICAgIH0gcHJvbWlzZS5fYSA9IHVuZGVmaW5lZDtcbiAgICBpZiAodW5oYW5kbGVkICYmIHJlc3VsdC5lKSB0aHJvdyByZXN1bHQudjtcbiAgfSk7XG59O1xudmFyIGlzVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgcmV0dXJuIHByb21pc2UuX2ggIT09IDEgJiYgKHByb21pc2UuX2EgfHwgcHJvbWlzZS5fYykubGVuZ3RoID09PSAwO1xufTtcbnZhciBvbkhhbmRsZVVuaGFuZGxlZCA9IGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gIHRhc2suY2FsbChnbG9iYWwsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgaGFuZGxlcjtcbiAgICBpZiAoaXNOb2RlKSB7XG4gICAgICBwcm9jZXNzLmVtaXQoJ3JlamVjdGlvbkhhbmRsZWQnLCBwcm9taXNlKTtcbiAgICB9IGVsc2UgaWYgKGhhbmRsZXIgPSBnbG9iYWwub25yZWplY3Rpb25oYW5kbGVkKSB7XG4gICAgICBoYW5kbGVyKHsgcHJvbWlzZTogcHJvbWlzZSwgcmVhc29uOiBwcm9taXNlLl92IH0pO1xuICAgIH1cbiAgfSk7XG59O1xudmFyICRyZWplY3QgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgdmFyIHByb21pc2UgPSB0aGlzO1xuICBpZiAocHJvbWlzZS5fZCkgcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHByb21pc2UuX3YgPSB2YWx1ZTtcbiAgcHJvbWlzZS5fcyA9IDI7XG4gIGlmICghcHJvbWlzZS5fYSkgcHJvbWlzZS5fYSA9IHByb21pc2UuX2Muc2xpY2UoKTtcbiAgbm90aWZ5KHByb21pc2UsIHRydWUpO1xufTtcbnZhciAkcmVzb2x2ZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICB2YXIgcHJvbWlzZSA9IHRoaXM7XG4gIHZhciB0aGVuO1xuICBpZiAocHJvbWlzZS5fZCkgcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHRyeSB7XG4gICAgaWYgKHByb21pc2UgPT09IHZhbHVlKSB0aHJvdyBUeXBlRXJyb3IoXCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZlwiKTtcbiAgICBpZiAodGhlbiA9IGlzVGhlbmFibGUodmFsdWUpKSB7XG4gICAgICBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgd3JhcHBlciA9IHsgX3c6IHByb21pc2UsIF9kOiBmYWxzZSB9OyAvLyB3cmFwXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdGhlbi5jYWxsKHZhbHVlLCBjdHgoJHJlc29sdmUsIHdyYXBwZXIsIDEpLCBjdHgoJHJlamVjdCwgd3JhcHBlciwgMSkpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgJHJlamVjdC5jYWxsKHdyYXBwZXIsIGUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvbWlzZS5fdiA9IHZhbHVlO1xuICAgICAgcHJvbWlzZS5fcyA9IDE7XG4gICAgICBub3RpZnkocHJvbWlzZSwgZmFsc2UpO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgICRyZWplY3QuY2FsbCh7IF93OiBwcm9taXNlLCBfZDogZmFsc2UgfSwgZSk7IC8vIHdyYXBcbiAgfVxufTtcblxuLy8gY29uc3RydWN0b3IgcG9seWZpbGxcbmlmICghVVNFX05BVElWRSkge1xuICAvLyAyNS40LjMuMSBQcm9taXNlKGV4ZWN1dG9yKVxuICAkUHJvbWlzZSA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICBhbkluc3RhbmNlKHRoaXMsICRQcm9taXNlLCBQUk9NSVNFLCAnX2gnKTtcbiAgICBhRnVuY3Rpb24oZXhlY3V0b3IpO1xuICAgIEludGVybmFsLmNhbGwodGhpcyk7XG4gICAgdHJ5IHtcbiAgICAgIGV4ZWN1dG9yKGN0eCgkcmVzb2x2ZSwgdGhpcywgMSksIGN0eCgkcmVqZWN0LCB0aGlzLCAxKSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAkcmVqZWN0LmNhbGwodGhpcywgZXJyKTtcbiAgICB9XG4gIH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuICBJbnRlcm5hbCA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICB0aGlzLl9jID0gW107ICAgICAgICAgICAgIC8vIDwtIGF3YWl0aW5nIHJlYWN0aW9uc1xuICAgIHRoaXMuX2EgPSB1bmRlZmluZWQ7ICAgICAgLy8gPC0gY2hlY2tlZCBpbiBpc1VuaGFuZGxlZCByZWFjdGlvbnNcbiAgICB0aGlzLl9zID0gMDsgICAgICAgICAgICAgIC8vIDwtIHN0YXRlXG4gICAgdGhpcy5fZCA9IGZhbHNlOyAgICAgICAgICAvLyA8LSBkb25lXG4gICAgdGhpcy5fdiA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSB2YWx1ZVxuICAgIHRoaXMuX2ggPSAwOyAgICAgICAgICAgICAgLy8gPC0gcmVqZWN0aW9uIHN0YXRlLCAwIC0gZGVmYXVsdCwgMSAtIGhhbmRsZWQsIDIgLSB1bmhhbmRsZWRcbiAgICB0aGlzLl9uID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIG5vdGlmeVxuICB9O1xuICBJbnRlcm5hbC5wcm90b3R5cGUgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKSgkUHJvbWlzZS5wcm90b3R5cGUsIHtcbiAgICAvLyAyNS40LjUuMyBQcm9taXNlLnByb3RvdHlwZS50aGVuKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKVxuICAgIHRoZW46IGZ1bmN0aW9uIHRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpIHtcbiAgICAgIHZhciByZWFjdGlvbiA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCAkUHJvbWlzZSkpO1xuICAgICAgcmVhY3Rpb24ub2sgPSB0eXBlb2Ygb25GdWxmaWxsZWQgPT0gJ2Z1bmN0aW9uJyA/IG9uRnVsZmlsbGVkIDogdHJ1ZTtcbiAgICAgIHJlYWN0aW9uLmZhaWwgPSB0eXBlb2Ygb25SZWplY3RlZCA9PSAnZnVuY3Rpb24nICYmIG9uUmVqZWN0ZWQ7XG4gICAgICByZWFjdGlvbi5kb21haW4gPSBpc05vZGUgPyBwcm9jZXNzLmRvbWFpbiA6IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX2MucHVzaChyZWFjdGlvbik7XG4gICAgICBpZiAodGhpcy5fYSkgdGhpcy5fYS5wdXNoKHJlYWN0aW9uKTtcbiAgICAgIGlmICh0aGlzLl9zKSBub3RpZnkodGhpcywgZmFsc2UpO1xuICAgICAgcmV0dXJuIHJlYWN0aW9uLnByb21pc2U7XG4gICAgfSxcbiAgICAvLyAyNS40LjUuMSBQcm9taXNlLnByb3RvdHlwZS5jYXRjaChvblJlamVjdGVkKVxuICAgICdjYXRjaCc6IGZ1bmN0aW9uIChvblJlamVjdGVkKSB7XG4gICAgICByZXR1cm4gdGhpcy50aGVuKHVuZGVmaW5lZCwgb25SZWplY3RlZCk7XG4gICAgfVxuICB9KTtcbiAgT3duUHJvbWlzZUNhcGFiaWxpdHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHByb21pc2UgPSBuZXcgSW50ZXJuYWwoKTtcbiAgICB0aGlzLnByb21pc2UgPSBwcm9taXNlO1xuICAgIHRoaXMucmVzb2x2ZSA9IGN0eCgkcmVzb2x2ZSwgcHJvbWlzZSwgMSk7XG4gICAgdGhpcy5yZWplY3QgPSBjdHgoJHJlamVjdCwgcHJvbWlzZSwgMSk7XG4gIH07XG4gIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmYgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uIChDKSB7XG4gICAgcmV0dXJuIEMgPT09ICRQcm9taXNlIHx8IEMgPT09IFdyYXBwZXJcbiAgICAgID8gbmV3IE93blByb21pc2VDYXBhYmlsaXR5KEMpXG4gICAgICA6IG5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eShDKTtcbiAgfTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgeyBQcm9taXNlOiAkUHJvbWlzZSB9KTtcbnJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJykoJFByb21pc2UsIFBST01JU0UpO1xucmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKShQUk9NSVNFKTtcbldyYXBwZXIgPSByZXF1aXJlKCcuL19jb3JlJylbUFJPTUlTRV07XG5cbi8vIHN0YXRpY3NcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjUgUHJvbWlzZS5yZWplY3QocilcbiAgcmVqZWN0OiBmdW5jdGlvbiByZWplY3Qocikge1xuICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkodGhpcyk7XG4gICAgdmFyICQkcmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgJCRyZWplY3Qocik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChMSUJSQVJZIHx8ICFVU0VfTkFUSVZFKSwgUFJPTUlTRSwge1xuICAvLyAyNS40LjQuNiBQcm9taXNlLnJlc29sdmUoeClcbiAgcmVzb2x2ZTogZnVuY3Rpb24gcmVzb2x2ZSh4KSB7XG4gICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKExJQlJBUlkgJiYgdGhpcyA9PT0gV3JhcHBlciA/ICRQcm9taXNlIDogdGhpcywgeCk7XG4gIH1cbn0pO1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKFVTRV9OQVRJVkUgJiYgcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKShmdW5jdGlvbiAoaXRlcikge1xuICAkUHJvbWlzZS5hbGwoaXRlcilbJ2NhdGNoJ10oZW1wdHkpO1xufSkpLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC4xIFByb21pc2UuYWxsKGl0ZXJhYmxlKVxuICBhbGw6IGZ1bmN0aW9uIGFsbChpdGVyYWJsZSkge1xuICAgIHZhciBDID0gdGhpcztcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICAgIHZhciByZXNvbHZlID0gY2FwYWJpbGl0eS5yZXNvbHZlO1xuICAgIHZhciByZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdmFsdWVzID0gW107XG4gICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgdmFyIHJlbWFpbmluZyA9IDE7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gICAgICAgIHZhciAkaW5kZXggPSBpbmRleCsrO1xuICAgICAgICB2YXIgYWxyZWFkeUNhbGxlZCA9IGZhbHNlO1xuICAgICAgICB2YWx1ZXMucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICByZW1haW5pbmcrKztcbiAgICAgICAgQy5yZXNvbHZlKHByb21pc2UpLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKGFscmVhZHlDYWxsZWQpIHJldHVybjtcbiAgICAgICAgICBhbHJlYWR5Q2FsbGVkID0gdHJ1ZTtcbiAgICAgICAgICB2YWx1ZXNbJGluZGV4XSA9IHZhbHVlO1xuICAgICAgICAgIC0tcmVtYWluaW5nIHx8IHJlc29sdmUodmFsdWVzKTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgIH0pO1xuICAgIGlmIChyZXN1bHQuZSkgcmVqZWN0KHJlc3VsdC52KTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9LFxuICAvLyAyNS40LjQuNCBQcm9taXNlLnJhY2UoaXRlcmFibGUpXG4gIHJhY2U6IGZ1bmN0aW9uIHJhY2UoaXRlcmFibGUpIHtcbiAgICB2YXIgQyA9IHRoaXM7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eShDKTtcbiAgICB2YXIgcmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgdmFyIHJlc3VsdCA9IHBlcmZvcm0oZnVuY3Rpb24gKCkge1xuICAgICAgZm9yT2YoaXRlcmFibGUsIGZhbHNlLCBmdW5jdGlvbiAocHJvbWlzZSkge1xuICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihjYXBhYmlsaXR5LnJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBpZiAocmVzdWx0LmUpIHJlamVjdChyZXN1bHQudik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykodHJ1ZSk7XG5cbi8vIDIxLjEuMy4yNyBTdHJpbmcucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoU3RyaW5nLCAnU3RyaW5nJywgZnVuY3Rpb24gKGl0ZXJhdGVkKSB7XG4gIHRoaXMuX3QgPSBTdHJpbmcoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbi8vIDIxLjEuNS4yLjEgJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIgaW5kZXggPSB0aGlzLl9pO1xuICB2YXIgcG9pbnQ7XG4gIGlmIChpbmRleCA+PSBPLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICBwb2ludCA9ICRhdChPLCBpbmRleCk7XG4gIHRoaXMuX2kgKz0gcG9pbnQubGVuZ3RoO1xuICByZXR1cm4geyB2YWx1ZTogcG9pbnQsIGRvbmU6IGZhbHNlIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEVDTUFTY3JpcHQgNiBzeW1ib2xzIHNoaW1cbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBNRVRBID0gcmVxdWlyZSgnLi9fbWV0YScpLktFWTtcbnZhciAkZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciB3a3NFeHQgPSByZXF1aXJlKCcuL193a3MtZXh0Jyk7XG52YXIgd2tzRGVmaW5lID0gcmVxdWlyZSgnLi9fd2tzLWRlZmluZScpO1xudmFyIGVudW1LZXlzID0gcmVxdWlyZSgnLi9fZW51bS1rZXlzJyk7XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4vX2lzLWFycmF5Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbnZhciBfY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIGdPUE5FeHQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbi1leHQnKTtcbnZhciAkR09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgJEdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyICREUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BEID0gJEdPUEQuZjtcbnZhciBkUCA9ICREUC5mO1xudmFyIGdPUE4gPSBnT1BORXh0LmY7XG52YXIgJFN5bWJvbCA9IGdsb2JhbC5TeW1ib2w7XG52YXIgJEpTT04gPSBnbG9iYWwuSlNPTjtcbnZhciBfc3RyaW5naWZ5ID0gJEpTT04gJiYgJEpTT04uc3RyaW5naWZ5O1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xudmFyIEhJRERFTiA9IHdrcygnX2hpZGRlbicpO1xudmFyIFRPX1BSSU1JVElWRSA9IHdrcygndG9QcmltaXRpdmUnKTtcbnZhciBpc0VudW0gPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbnZhciBTeW1ib2xSZWdpc3RyeSA9IHNoYXJlZCgnc3ltYm9sLXJlZ2lzdHJ5Jyk7XG52YXIgQWxsU3ltYm9scyA9IHNoYXJlZCgnc3ltYm9scycpO1xudmFyIE9QU3ltYm9scyA9IHNoYXJlZCgnb3Atc3ltYm9scycpO1xudmFyIE9iamVjdFByb3RvID0gT2JqZWN0W1BST1RPVFlQRV07XG52YXIgVVNFX05BVElWRSA9IHR5cGVvZiAkU3ltYm9sID09ICdmdW5jdGlvbicgJiYgISEkR09QUy5mO1xudmFyIFFPYmplY3QgPSBnbG9iYWwuUU9iamVjdDtcbi8vIERvbid0IHVzZSBzZXR0ZXJzIGluIFF0IFNjcmlwdCwgaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzE3M1xudmFyIHNldHRlciA9ICFRT2JqZWN0IHx8ICFRT2JqZWN0W1BST1RPVFlQRV0gfHwgIVFPYmplY3RbUFJPVE9UWVBFXS5maW5kQ2hpbGQ7XG5cbi8vIGZhbGxiYWNrIGZvciBvbGQgQW5kcm9pZCwgaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTY4N1xudmFyIHNldFN5bWJvbERlc2MgPSBERVNDUklQVE9SUyAmJiAkZmFpbHMoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gX2NyZWF0ZShkUCh7fSwgJ2EnLCB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBkUCh0aGlzLCAnYScsIHsgdmFsdWU6IDcgfSkuYTsgfVxuICB9KSkuYSAhPSA3O1xufSkgPyBmdW5jdGlvbiAoaXQsIGtleSwgRCkge1xuICB2YXIgcHJvdG9EZXNjID0gZ09QRChPYmplY3RQcm90bywga2V5KTtcbiAgaWYgKHByb3RvRGVzYykgZGVsZXRlIE9iamVjdFByb3RvW2tleV07XG4gIGRQKGl0LCBrZXksIEQpO1xuICBpZiAocHJvdG9EZXNjICYmIGl0ICE9PSBPYmplY3RQcm90bykgZFAoT2JqZWN0UHJvdG8sIGtleSwgcHJvdG9EZXNjKTtcbn0gOiBkUDtcblxudmFyIHdyYXAgPSBmdW5jdGlvbiAodGFnKSB7XG4gIHZhciBzeW0gPSBBbGxTeW1ib2xzW3RhZ10gPSBfY3JlYXRlKCRTeW1ib2xbUFJPVE9UWVBFXSk7XG4gIHN5bS5fayA9IHRhZztcbiAgcmV0dXJuIHN5bTtcbn07XG5cbnZhciBpc1N5bWJvbCA9IFVTRV9OQVRJVkUgJiYgdHlwZW9mICRTeW1ib2wuaXRlcmF0b3IgPT0gJ3N5bWJvbCcgPyBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnc3ltYm9sJztcbn0gOiBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0IGluc3RhbmNlb2YgJFN5bWJvbDtcbn07XG5cbnZhciAkZGVmaW5lUHJvcGVydHkgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShpdCwga2V5LCBEKSB7XG4gIGlmIChpdCA9PT0gT2JqZWN0UHJvdG8pICRkZWZpbmVQcm9wZXJ0eShPUFN5bWJvbHMsIGtleSwgRCk7XG4gIGFuT2JqZWN0KGl0KTtcbiAga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKTtcbiAgYW5PYmplY3QoRCk7XG4gIGlmIChoYXMoQWxsU3ltYm9scywga2V5KSkge1xuICAgIGlmICghRC5lbnVtZXJhYmxlKSB7XG4gICAgICBpZiAoIWhhcyhpdCwgSElEREVOKSkgZFAoaXQsIEhJRERFTiwgY3JlYXRlRGVzYygxLCB7fSkpO1xuICAgICAgaXRbSElEREVOXVtrZXldID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGhhcyhpdCwgSElEREVOKSAmJiBpdFtISURERU5dW2tleV0pIGl0W0hJRERFTl1ba2V5XSA9IGZhbHNlO1xuICAgICAgRCA9IF9jcmVhdGUoRCwgeyBlbnVtZXJhYmxlOiBjcmVhdGVEZXNjKDAsIGZhbHNlKSB9KTtcbiAgICB9IHJldHVybiBzZXRTeW1ib2xEZXNjKGl0LCBrZXksIEQpO1xuICB9IHJldHVybiBkUChpdCwga2V5LCBEKTtcbn07XG52YXIgJGRlZmluZVByb3BlcnRpZXMgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKGl0LCBQKSB7XG4gIGFuT2JqZWN0KGl0KTtcbiAgdmFyIGtleXMgPSBlbnVtS2V5cyhQID0gdG9JT2JqZWN0KFApKTtcbiAgdmFyIGkgPSAwO1xuICB2YXIgbCA9IGtleXMubGVuZ3RoO1xuICB2YXIga2V5O1xuICB3aGlsZSAobCA+IGkpICRkZWZpbmVQcm9wZXJ0eShpdCwga2V5ID0ga2V5c1tpKytdLCBQW2tleV0pO1xuICByZXR1cm4gaXQ7XG59O1xudmFyICRjcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoaXQsIFApIHtcbiAgcmV0dXJuIFAgPT09IHVuZGVmaW5lZCA/IF9jcmVhdGUoaXQpIDogJGRlZmluZVByb3BlcnRpZXMoX2NyZWF0ZShpdCksIFApO1xufTtcbnZhciAkcHJvcGVydHlJc0VudW1lcmFibGUgPSBmdW5jdGlvbiBwcm9wZXJ0eUlzRW51bWVyYWJsZShrZXkpIHtcbiAgdmFyIEUgPSBpc0VudW0uY2FsbCh0aGlzLCBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpKTtcbiAgaWYgKHRoaXMgPT09IE9iamVjdFByb3RvICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICFoYXMoT1BTeW1ib2xzLCBrZXkpKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiBFIHx8ICFoYXModGhpcywga2V5KSB8fCAhaGFzKEFsbFN5bWJvbHMsIGtleSkgfHwgaGFzKHRoaXMsIEhJRERFTikgJiYgdGhpc1tISURERU5dW2tleV0gPyBFIDogdHJ1ZTtcbn07XG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihpdCwga2V5KSB7XG4gIGl0ID0gdG9JT2JqZWN0KGl0KTtcbiAga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKTtcbiAgaWYgKGl0ID09PSBPYmplY3RQcm90byAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhaGFzKE9QU3ltYm9scywga2V5KSkgcmV0dXJuO1xuICB2YXIgRCA9IGdPUEQoaXQsIGtleSk7XG4gIGlmIChEICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICEoaGFzKGl0LCBISURERU4pICYmIGl0W0hJRERFTl1ba2V5XSkpIEQuZW51bWVyYWJsZSA9IHRydWU7XG4gIHJldHVybiBEO1xufTtcbnZhciAkZ2V0T3duUHJvcGVydHlOYW1lcyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoaXQpIHtcbiAgdmFyIG5hbWVzID0gZ09QTih0b0lPYmplY3QoaXQpKTtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIgaSA9IDA7XG4gIHZhciBrZXk7XG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSB7XG4gICAgaWYgKCFoYXMoQWxsU3ltYm9scywga2V5ID0gbmFtZXNbaSsrXSkgJiYga2V5ICE9IEhJRERFTiAmJiBrZXkgIT0gTUVUQSkgcmVzdWx0LnB1c2goa2V5KTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcbnZhciAkZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGl0KSB7XG4gIHZhciBJU19PUCA9IGl0ID09PSBPYmplY3RQcm90bztcbiAgdmFyIG5hbWVzID0gZ09QTihJU19PUCA/IE9QU3ltYm9scyA6IHRvSU9iamVjdChpdCkpO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBpID0gMDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIHtcbiAgICBpZiAoaGFzKEFsbFN5bWJvbHMsIGtleSA9IG5hbWVzW2krK10pICYmIChJU19PUCA/IGhhcyhPYmplY3RQcm90bywga2V5KSA6IHRydWUpKSByZXN1bHQucHVzaChBbGxTeW1ib2xzW2tleV0pO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xuXG4vLyAxOS40LjEuMSBTeW1ib2woW2Rlc2NyaXB0aW9uXSlcbmlmICghVVNFX05BVElWRSkge1xuICAkU3ltYm9sID0gZnVuY3Rpb24gU3ltYm9sKCkge1xuICAgIGlmICh0aGlzIGluc3RhbmNlb2YgJFN5bWJvbCkgdGhyb3cgVHlwZUVycm9yKCdTeW1ib2wgaXMgbm90IGEgY29uc3RydWN0b3IhJyk7XG4gICAgdmFyIHRhZyA9IHVpZChhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7XG4gICAgdmFyICRzZXQgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgIGlmICh0aGlzID09PSBPYmplY3RQcm90bykgJHNldC5jYWxsKE9QU3ltYm9scywgdmFsdWUpO1xuICAgICAgaWYgKGhhcyh0aGlzLCBISURERU4pICYmIGhhcyh0aGlzW0hJRERFTl0sIHRhZykpIHRoaXNbSElEREVOXVt0YWddID0gZmFsc2U7XG4gICAgICBzZXRTeW1ib2xEZXNjKHRoaXMsIHRhZywgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xuICAgIH07XG4gICAgaWYgKERFU0NSSVBUT1JTICYmIHNldHRlcikgc2V0U3ltYm9sRGVzYyhPYmplY3RQcm90bywgdGFnLCB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgc2V0OiAkc2V0IH0pO1xuICAgIHJldHVybiB3cmFwKHRhZyk7XG4gIH07XG4gIHJlZGVmaW5lKCRTeW1ib2xbUFJPVE9UWVBFXSwgJ3RvU3RyaW5nJywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2s7XG4gIH0pO1xuXG4gICRHT1BELmYgPSAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuICAkRFAuZiA9ICRkZWZpbmVQcm9wZXJ0eTtcbiAgcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mID0gZ09QTkV4dC5mID0gJGdldE93blByb3BlcnR5TmFtZXM7XG4gIHJlcXVpcmUoJy4vX29iamVjdC1waWUnKS5mID0gJHByb3BlcnR5SXNFbnVtZXJhYmxlO1xuICAkR09QUy5mID0gJGdldE93blByb3BlcnR5U3ltYm9scztcblxuICBpZiAoREVTQ1JJUFRPUlMgJiYgIXJlcXVpcmUoJy4vX2xpYnJhcnknKSkge1xuICAgIHJlZGVmaW5lKE9iamVjdFByb3RvLCAncHJvcGVydHlJc0VudW1lcmFibGUnLCAkcHJvcGVydHlJc0VudW1lcmFibGUsIHRydWUpO1xuICB9XG5cbiAgd2tzRXh0LmYgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHJldHVybiB3cmFwKHdrcyhuYW1lKSk7XG4gIH07XG59XG5cbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsIHsgU3ltYm9sOiAkU3ltYm9sIH0pO1xuXG5mb3IgKHZhciBlczZTeW1ib2xzID0gKFxuICAvLyAxOS40LjIuMiwgMTkuNC4yLjMsIDE5LjQuMi40LCAxOS40LjIuNiwgMTkuNC4yLjgsIDE5LjQuMi45LCAxOS40LjIuMTAsIDE5LjQuMi4xMSwgMTkuNC4yLjEyLCAxOS40LjIuMTMsIDE5LjQuMi4xNFxuICAnaGFzSW5zdGFuY2UsaXNDb25jYXRTcHJlYWRhYmxlLGl0ZXJhdG9yLG1hdGNoLHJlcGxhY2Usc2VhcmNoLHNwZWNpZXMsc3BsaXQsdG9QcmltaXRpdmUsdG9TdHJpbmdUYWcsdW5zY29wYWJsZXMnXG4pLnNwbGl0KCcsJyksIGogPSAwOyBlczZTeW1ib2xzLmxlbmd0aCA+IGo7KXdrcyhlczZTeW1ib2xzW2orK10pO1xuXG5mb3IgKHZhciB3ZWxsS25vd25TeW1ib2xzID0gJGtleXMod2tzLnN0b3JlKSwgayA9IDA7IHdlbGxLbm93blN5bWJvbHMubGVuZ3RoID4gazspIHdrc0RlZmluZSh3ZWxsS25vd25TeW1ib2xzW2srK10pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCAnU3ltYm9sJywge1xuICAvLyAxOS40LjIuMSBTeW1ib2wuZm9yKGtleSlcbiAgJ2Zvcic6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gaGFzKFN5bWJvbFJlZ2lzdHJ5LCBrZXkgKz0gJycpXG4gICAgICA/IFN5bWJvbFJlZ2lzdHJ5W2tleV1cbiAgICAgIDogU3ltYm9sUmVnaXN0cnlba2V5XSA9ICRTeW1ib2woa2V5KTtcbiAgfSxcbiAgLy8gMTkuNC4yLjUgU3ltYm9sLmtleUZvcihzeW0pXG4gIGtleUZvcjogZnVuY3Rpb24ga2V5Rm9yKHN5bSkge1xuICAgIGlmICghaXNTeW1ib2woc3ltKSkgdGhyb3cgVHlwZUVycm9yKHN5bSArICcgaXMgbm90IGEgc3ltYm9sIScpO1xuICAgIGZvciAodmFyIGtleSBpbiBTeW1ib2xSZWdpc3RyeSkgaWYgKFN5bWJvbFJlZ2lzdHJ5W2tleV0gPT09IHN5bSkgcmV0dXJuIGtleTtcbiAgfSxcbiAgdXNlU2V0dGVyOiBmdW5jdGlvbiAoKSB7IHNldHRlciA9IHRydWU7IH0sXG4gIHVzZVNpbXBsZTogZnVuY3Rpb24gKCkgeyBzZXR0ZXIgPSBmYWxzZTsgfVxufSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsICdPYmplY3QnLCB7XG4gIC8vIDE5LjEuMi4yIE9iamVjdC5jcmVhdGUoTyBbLCBQcm9wZXJ0aWVzXSlcbiAgY3JlYXRlOiAkY3JlYXRlLFxuICAvLyAxOS4xLjIuNCBPYmplY3QuZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcylcbiAgZGVmaW5lUHJvcGVydHk6ICRkZWZpbmVQcm9wZXJ0eSxcbiAgLy8gMTkuMS4yLjMgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcylcbiAgZGVmaW5lUHJvcGVydGllczogJGRlZmluZVByb3BlcnRpZXMsXG4gIC8vIDE5LjEuMi42IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUClcbiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLFxuICAvLyAxOS4xLjIuNyBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhPKVxuICBnZXRPd25Qcm9wZXJ0eU5hbWVzOiAkZ2V0T3duUHJvcGVydHlOYW1lcyxcbiAgLy8gMTkuMS4yLjggT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhPKVxuICBnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6ICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHNcbn0pO1xuXG4vLyBDaHJvbWUgMzggYW5kIDM5IGBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzYCBmYWlscyBvbiBwcmltaXRpdmVzXG4vLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zNDQzXG52YXIgRkFJTFNfT05fUFJJTUlUSVZFUyA9ICRmYWlscyhmdW5jdGlvbiAoKSB7ICRHT1BTLmYoMSk7IH0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIEZBSUxTX09OX1BSSU1JVElWRVMsICdPYmplY3QnLCB7XG4gIGdldE93blByb3BlcnR5U3ltYm9sczogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGl0KSB7XG4gICAgcmV0dXJuICRHT1BTLmYodG9PYmplY3QoaXQpKTtcbiAgfVxufSk7XG5cbi8vIDI0LjMuMiBKU09OLnN0cmluZ2lmeSh2YWx1ZSBbLCByZXBsYWNlciBbLCBzcGFjZV1dKVxuJEpTT04gJiYgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoIVVTRV9OQVRJVkUgfHwgJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgdmFyIFMgPSAkU3ltYm9sKCk7XG4gIC8vIE1TIEVkZ2UgY29udmVydHMgc3ltYm9sIHZhbHVlcyB0byBKU09OIGFzIHt9XG4gIC8vIFdlYktpdCBjb252ZXJ0cyBzeW1ib2wgdmFsdWVzIHRvIEpTT04gYXMgbnVsbFxuICAvLyBWOCB0aHJvd3Mgb24gYm94ZWQgc3ltYm9sc1xuICByZXR1cm4gX3N0cmluZ2lmeShbU10pICE9ICdbbnVsbF0nIHx8IF9zdHJpbmdpZnkoeyBhOiBTIH0pICE9ICd7fScgfHwgX3N0cmluZ2lmeShPYmplY3QoUykpICE9ICd7fSc7XG59KSksICdKU09OJywge1xuICBzdHJpbmdpZnk6IGZ1bmN0aW9uIHN0cmluZ2lmeShpdCkge1xuICAgIHZhciBhcmdzID0gW2l0XTtcbiAgICB2YXIgaSA9IDE7XG4gICAgdmFyIHJlcGxhY2VyLCAkcmVwbGFjZXI7XG4gICAgd2hpbGUgKGFyZ3VtZW50cy5sZW5ndGggPiBpKSBhcmdzLnB1c2goYXJndW1lbnRzW2krK10pO1xuICAgICRyZXBsYWNlciA9IHJlcGxhY2VyID0gYXJnc1sxXTtcbiAgICBpZiAoIWlzT2JqZWN0KHJlcGxhY2VyKSAmJiBpdCA9PT0gdW5kZWZpbmVkIHx8IGlzU3ltYm9sKGl0KSkgcmV0dXJuOyAvLyBJRTggcmV0dXJucyBzdHJpbmcgb24gdW5kZWZpbmVkXG4gICAgaWYgKCFpc0FycmF5KHJlcGxhY2VyKSkgcmVwbGFjZXIgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgICAgaWYgKHR5cGVvZiAkcmVwbGFjZXIgPT0gJ2Z1bmN0aW9uJykgdmFsdWUgPSAkcmVwbGFjZXIuY2FsbCh0aGlzLCBrZXksIHZhbHVlKTtcbiAgICAgIGlmICghaXNTeW1ib2wodmFsdWUpKSByZXR1cm4gdmFsdWU7XG4gICAgfTtcbiAgICBhcmdzWzFdID0gcmVwbGFjZXI7XG4gICAgcmV0dXJuIF9zdHJpbmdpZnkuYXBwbHkoJEpTT04sIGFyZ3MpO1xuICB9XG59KTtcblxuLy8gMTkuNC4zLjQgU3ltYm9sLnByb3RvdHlwZVtAQHRvUHJpbWl0aXZlXShoaW50KVxuJFN5bWJvbFtQUk9UT1RZUEVdW1RPX1BSSU1JVElWRV0gfHwgcmVxdWlyZSgnLi9faGlkZScpKCRTeW1ib2xbUFJPVE9UWVBFXSwgVE9fUFJJTUlUSVZFLCAkU3ltYm9sW1BST1RPVFlQRV0udmFsdWVPZik7XG4vLyAxOS40LjMuNSBTeW1ib2wucHJvdG90eXBlW0BAdG9TdHJpbmdUYWddXG5zZXRUb1N0cmluZ1RhZygkU3ltYm9sLCAnU3ltYm9sJyk7XG4vLyAyMC4yLjEuOSBNYXRoW0BAdG9TdHJpbmdUYWddXG5zZXRUb1N0cmluZ1RhZyhNYXRoLCAnTWF0aCcsIHRydWUpO1xuLy8gMjQuMy4zIEpTT05bQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKGdsb2JhbC5KU09OLCAnSlNPTicsIHRydWUpO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtcHJvbWlzZS1maW5hbGx5XG4ndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgc3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi9fc3BlY2llcy1jb25zdHJ1Y3RvcicpO1xudmFyIHByb21pc2VSZXNvbHZlID0gcmVxdWlyZSgnLi9fcHJvbWlzZS1yZXNvbHZlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5SLCAnUHJvbWlzZScsIHsgJ2ZpbmFsbHknOiBmdW5jdGlvbiAob25GaW5hbGx5KSB7XG4gIHZhciBDID0gc3BlY2llc0NvbnN0cnVjdG9yKHRoaXMsIGNvcmUuUHJvbWlzZSB8fCBnbG9iYWwuUHJvbWlzZSk7XG4gIHZhciBpc0Z1bmN0aW9uID0gdHlwZW9mIG9uRmluYWxseSA9PSAnZnVuY3Rpb24nO1xuICByZXR1cm4gdGhpcy50aGVuKFxuICAgIGlzRnVuY3Rpb24gPyBmdW5jdGlvbiAoeCkge1xuICAgICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKEMsIG9uRmluYWxseSgpKS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHg7IH0pO1xuICAgIH0gOiBvbkZpbmFsbHksXG4gICAgaXNGdW5jdGlvbiA/IGZ1bmN0aW9uIChlKSB7XG4gICAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoQywgb25GaW5hbGx5KCkpLnRoZW4oZnVuY3Rpb24gKCkgeyB0aHJvdyBlOyB9KTtcbiAgICB9IDogb25GaW5hbGx5XG4gICk7XG59IH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtcHJvbWlzZS10cnlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgbmV3UHJvbWlzZUNhcGFiaWxpdHkgPSByZXF1aXJlKCcuL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5Jyk7XG52YXIgcGVyZm9ybSA9IHJlcXVpcmUoJy4vX3BlcmZvcm0nKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdQcm9taXNlJywgeyAndHJ5JzogZnVuY3Rpb24gKGNhbGxiYWNrZm4pIHtcbiAgdmFyIHByb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkuZih0aGlzKTtcbiAgdmFyIHJlc3VsdCA9IHBlcmZvcm0oY2FsbGJhY2tmbik7XG4gIChyZXN1bHQuZSA/IHByb21pc2VDYXBhYmlsaXR5LnJlamVjdCA6IHByb21pc2VDYXBhYmlsaXR5LnJlc29sdmUpKHJlc3VsdC52KTtcbiAgcmV0dXJuIHByb21pc2VDYXBhYmlsaXR5LnByb21pc2U7XG59IH0pO1xuIiwicmVxdWlyZSgnLi9fd2tzLWRlZmluZScpKCdhc3luY0l0ZXJhdG9yJyk7XG4iLCJyZXF1aXJlKCcuL193a3MtZGVmaW5lJykoJ29ic2VydmFibGUnKTtcbiIsInJlcXVpcmUoJy4vZXM2LmFycmF5Lml0ZXJhdG9yJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciBUT19TVFJJTkdfVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbnZhciBET01JdGVyYWJsZXMgPSAoJ0NTU1J1bGVMaXN0LENTU1N0eWxlRGVjbGFyYXRpb24sQ1NTVmFsdWVMaXN0LENsaWVudFJlY3RMaXN0LERPTVJlY3RMaXN0LERPTVN0cmluZ0xpc3QsJyArXG4gICdET01Ub2tlbkxpc3QsRGF0YVRyYW5zZmVySXRlbUxpc3QsRmlsZUxpc3QsSFRNTEFsbENvbGxlY3Rpb24sSFRNTENvbGxlY3Rpb24sSFRNTEZvcm1FbGVtZW50LEhUTUxTZWxlY3RFbGVtZW50LCcgK1xuICAnTWVkaWFMaXN0LE1pbWVUeXBlQXJyYXksTmFtZWROb2RlTWFwLE5vZGVMaXN0LFBhaW50UmVxdWVzdExpc3QsUGx1Z2luLFBsdWdpbkFycmF5LFNWR0xlbmd0aExpc3QsU1ZHTnVtYmVyTGlzdCwnICtcbiAgJ1NWR1BhdGhTZWdMaXN0LFNWR1BvaW50TGlzdCxTVkdTdHJpbmdMaXN0LFNWR1RyYW5zZm9ybUxpc3QsU291cmNlQnVmZmVyTGlzdCxTdHlsZVNoZWV0TGlzdCxUZXh0VHJhY2tDdWVMaXN0LCcgK1xuICAnVGV4dFRyYWNrTGlzdCxUb3VjaExpc3QnKS5zcGxpdCgnLCcpO1xuXG5mb3IgKHZhciBpID0gMDsgaSA8IERPTUl0ZXJhYmxlcy5sZW5ndGg7IGkrKykge1xuICB2YXIgTkFNRSA9IERPTUl0ZXJhYmxlc1tpXTtcbiAgdmFyIENvbGxlY3Rpb24gPSBnbG9iYWxbTkFNRV07XG4gIHZhciBwcm90byA9IENvbGxlY3Rpb24gJiYgQ29sbGVjdGlvbi5wcm90b3R5cGU7XG4gIGlmIChwcm90byAmJiAhcHJvdG9bVE9fU1RSSU5HX1RBR10pIGhpZGUocHJvdG8sIFRPX1NUUklOR19UQUcsIE5BTUUpO1xuICBJdGVyYXRvcnNbTkFNRV0gPSBJdGVyYXRvcnMuQXJyYXk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8vIFRoaXMgbWV0aG9kIG9mIG9idGFpbmluZyBhIHJlZmVyZW5jZSB0byB0aGUgZ2xvYmFsIG9iamVjdCBuZWVkcyB0byBiZVxuLy8ga2VwdCBpZGVudGljYWwgdG8gdGhlIHdheSBpdCBpcyBvYnRhaW5lZCBpbiBydW50aW1lLmpzXG52YXIgZyA9IChmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMgfSkoKSB8fCBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG5cbi8vIFVzZSBgZ2V0T3duUHJvcGVydHlOYW1lc2AgYmVjYXVzZSBub3QgYWxsIGJyb3dzZXJzIHN1cHBvcnQgY2FsbGluZ1xuLy8gYGhhc093blByb3BlcnR5YCBvbiB0aGUgZ2xvYmFsIGBzZWxmYCBvYmplY3QgaW4gYSB3b3JrZXIuIFNlZSAjMTgzLlxudmFyIGhhZFJ1bnRpbWUgPSBnLnJlZ2VuZXJhdG9yUnVudGltZSAmJlxuICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhnKS5pbmRleE9mKFwicmVnZW5lcmF0b3JSdW50aW1lXCIpID49IDA7XG5cbi8vIFNhdmUgdGhlIG9sZCByZWdlbmVyYXRvclJ1bnRpbWUgaW4gY2FzZSBpdCBuZWVkcyB0byBiZSByZXN0b3JlZCBsYXRlci5cbnZhciBvbGRSdW50aW1lID0gaGFkUnVudGltZSAmJiBnLnJlZ2VuZXJhdG9yUnVudGltZTtcblxuLy8gRm9yY2UgcmVldmFsdXRhdGlvbiBvZiBydW50aW1lLmpzLlxuZy5yZWdlbmVyYXRvclJ1bnRpbWUgPSB1bmRlZmluZWQ7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vcnVudGltZVwiKTtcblxuaWYgKGhhZFJ1bnRpbWUpIHtcbiAgLy8gUmVzdG9yZSB0aGUgb3JpZ2luYWwgcnVudGltZS5cbiAgZy5yZWdlbmVyYXRvclJ1bnRpbWUgPSBvbGRSdW50aW1lO1xufSBlbHNlIHtcbiAgLy8gUmVtb3ZlIHRoZSBnbG9iYWwgcHJvcGVydHkgYWRkZWQgYnkgcnVudGltZS5qcy5cbiAgdHJ5IHtcbiAgICBkZWxldGUgZy5yZWdlbmVyYXRvclJ1bnRpbWU7XG4gIH0gY2F0Y2goZSkge1xuICAgIGcucmVnZW5lcmF0b3JSdW50aW1lID0gdW5kZWZpbmVkO1xuICB9XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbiEoZnVuY3Rpb24oZ2xvYmFsKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBPcCA9IE9iamVjdC5wcm90b3R5cGU7XG4gIHZhciBoYXNPd24gPSBPcC5oYXNPd25Qcm9wZXJ0eTtcbiAgdmFyIHVuZGVmaW5lZDsgLy8gTW9yZSBjb21wcmVzc2libGUgdGhhbiB2b2lkIDAuXG4gIHZhciAkU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiID8gU3ltYm9sIDoge307XG4gIHZhciBpdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuaXRlcmF0b3IgfHwgXCJAQGl0ZXJhdG9yXCI7XG4gIHZhciBhc3luY0l0ZXJhdG9yU3ltYm9sID0gJFN5bWJvbC5hc3luY0l0ZXJhdG9yIHx8IFwiQEBhc3luY0l0ZXJhdG9yXCI7XG4gIHZhciB0b1N0cmluZ1RhZ1N5bWJvbCA9ICRTeW1ib2wudG9TdHJpbmdUYWcgfHwgXCJAQHRvU3RyaW5nVGFnXCI7XG5cbiAgdmFyIGluTW9kdWxlID0gdHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIjtcbiAgdmFyIHJ1bnRpbWUgPSBnbG9iYWwucmVnZW5lcmF0b3JSdW50aW1lO1xuICBpZiAocnVudGltZSkge1xuICAgIGlmIChpbk1vZHVsZSkge1xuICAgICAgLy8gSWYgcmVnZW5lcmF0b3JSdW50aW1lIGlzIGRlZmluZWQgZ2xvYmFsbHkgYW5kIHdlJ3JlIGluIGEgbW9kdWxlLFxuICAgICAgLy8gbWFrZSB0aGUgZXhwb3J0cyBvYmplY3QgaWRlbnRpY2FsIHRvIHJlZ2VuZXJhdG9yUnVudGltZS5cbiAgICAgIG1vZHVsZS5leHBvcnRzID0gcnVudGltZTtcbiAgICB9XG4gICAgLy8gRG9uJ3QgYm90aGVyIGV2YWx1YXRpbmcgdGhlIHJlc3Qgb2YgdGhpcyBmaWxlIGlmIHRoZSBydW50aW1lIHdhc1xuICAgIC8vIGFscmVhZHkgZGVmaW5lZCBnbG9iYWxseS5cbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBEZWZpbmUgdGhlIHJ1bnRpbWUgZ2xvYmFsbHkgKGFzIGV4cGVjdGVkIGJ5IGdlbmVyYXRlZCBjb2RlKSBhcyBlaXRoZXJcbiAgLy8gbW9kdWxlLmV4cG9ydHMgKGlmIHdlJ3JlIGluIGEgbW9kdWxlKSBvciBhIG5ldywgZW1wdHkgb2JqZWN0LlxuICBydW50aW1lID0gZ2xvYmFsLnJlZ2VuZXJhdG9yUnVudGltZSA9IGluTW9kdWxlID8gbW9kdWxlLmV4cG9ydHMgOiB7fTtcblxuICBmdW5jdGlvbiB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7XG4gICAgLy8gSWYgb3V0ZXJGbiBwcm92aWRlZCBhbmQgb3V0ZXJGbi5wcm90b3R5cGUgaXMgYSBHZW5lcmF0b3IsIHRoZW4gb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IuXG4gICAgdmFyIHByb3RvR2VuZXJhdG9yID0gb3V0ZXJGbiAmJiBvdXRlckZuLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvciA/IG91dGVyRm4gOiBHZW5lcmF0b3I7XG4gICAgdmFyIGdlbmVyYXRvciA9IE9iamVjdC5jcmVhdGUocHJvdG9HZW5lcmF0b3IucHJvdG90eXBlKTtcbiAgICB2YXIgY29udGV4dCA9IG5ldyBDb250ZXh0KHRyeUxvY3NMaXN0IHx8IFtdKTtcblxuICAgIC8vIFRoZSAuX2ludm9rZSBtZXRob2QgdW5pZmllcyB0aGUgaW1wbGVtZW50YXRpb25zIG9mIHRoZSAubmV4dCxcbiAgICAvLyAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMuXG4gICAgZ2VuZXJhdG9yLl9pbnZva2UgPSBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuXG4gICAgcmV0dXJuIGdlbmVyYXRvcjtcbiAgfVxuICBydW50aW1lLndyYXAgPSB3cmFwO1xuXG4gIC8vIFRyeS9jYXRjaCBoZWxwZXIgdG8gbWluaW1pemUgZGVvcHRpbWl6YXRpb25zLiBSZXR1cm5zIGEgY29tcGxldGlvblxuICAvLyByZWNvcmQgbGlrZSBjb250ZXh0LnRyeUVudHJpZXNbaV0uY29tcGxldGlvbi4gVGhpcyBpbnRlcmZhY2UgY291bGRcbiAgLy8gaGF2ZSBiZWVuIChhbmQgd2FzIHByZXZpb3VzbHkpIGRlc2lnbmVkIHRvIHRha2UgYSBjbG9zdXJlIHRvIGJlXG4gIC8vIGludm9rZWQgd2l0aG91dCBhcmd1bWVudHMsIGJ1dCBpbiBhbGwgdGhlIGNhc2VzIHdlIGNhcmUgYWJvdXQgd2VcbiAgLy8gYWxyZWFkeSBoYXZlIGFuIGV4aXN0aW5nIG1ldGhvZCB3ZSB3YW50IHRvIGNhbGwsIHNvIHRoZXJlJ3Mgbm8gbmVlZFxuICAvLyB0byBjcmVhdGUgYSBuZXcgZnVuY3Rpb24gb2JqZWN0LiBXZSBjYW4gZXZlbiBnZXQgYXdheSB3aXRoIGFzc3VtaW5nXG4gIC8vIHRoZSBtZXRob2QgdGFrZXMgZXhhY3RseSBvbmUgYXJndW1lbnQsIHNpbmNlIHRoYXQgaGFwcGVucyB0byBiZSB0cnVlXG4gIC8vIGluIGV2ZXJ5IGNhc2UsIHNvIHdlIGRvbid0IGhhdmUgdG8gdG91Y2ggdGhlIGFyZ3VtZW50cyBvYmplY3QuIFRoZVxuICAvLyBvbmx5IGFkZGl0aW9uYWwgYWxsb2NhdGlvbiByZXF1aXJlZCBpcyB0aGUgY29tcGxldGlvbiByZWNvcmQsIHdoaWNoXG4gIC8vIGhhcyBhIHN0YWJsZSBzaGFwZSBhbmQgc28gaG9wZWZ1bGx5IHNob3VsZCBiZSBjaGVhcCB0byBhbGxvY2F0ZS5cbiAgZnVuY3Rpb24gdHJ5Q2F0Y2goZm4sIG9iaiwgYXJnKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiB7IHR5cGU6IFwibm9ybWFsXCIsIGFyZzogZm4uY2FsbChvYmosIGFyZykgfTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJldHVybiB7IHR5cGU6IFwidGhyb3dcIiwgYXJnOiBlcnIgfTtcbiAgICB9XG4gIH1cblxuICB2YXIgR2VuU3RhdGVTdXNwZW5kZWRTdGFydCA9IFwic3VzcGVuZGVkU3RhcnRcIjtcbiAgdmFyIEdlblN0YXRlU3VzcGVuZGVkWWllbGQgPSBcInN1c3BlbmRlZFlpZWxkXCI7XG4gIHZhciBHZW5TdGF0ZUV4ZWN1dGluZyA9IFwiZXhlY3V0aW5nXCI7XG4gIHZhciBHZW5TdGF0ZUNvbXBsZXRlZCA9IFwiY29tcGxldGVkXCI7XG5cbiAgLy8gUmV0dXJuaW5nIHRoaXMgb2JqZWN0IGZyb20gdGhlIGlubmVyRm4gaGFzIHRoZSBzYW1lIGVmZmVjdCBhc1xuICAvLyBicmVha2luZyBvdXQgb2YgdGhlIGRpc3BhdGNoIHN3aXRjaCBzdGF0ZW1lbnQuXG4gIHZhciBDb250aW51ZVNlbnRpbmVsID0ge307XG5cbiAgLy8gRHVtbXkgY29uc3RydWN0b3IgZnVuY3Rpb25zIHRoYXQgd2UgdXNlIGFzIHRoZSAuY29uc3RydWN0b3IgYW5kXG4gIC8vIC5jb25zdHJ1Y3Rvci5wcm90b3R5cGUgcHJvcGVydGllcyBmb3IgZnVuY3Rpb25zIHRoYXQgcmV0dXJuIEdlbmVyYXRvclxuICAvLyBvYmplY3RzLiBGb3IgZnVsbCBzcGVjIGNvbXBsaWFuY2UsIHlvdSBtYXkgd2lzaCB0byBjb25maWd1cmUgeW91clxuICAvLyBtaW5pZmllciBub3QgdG8gbWFuZ2xlIHRoZSBuYW1lcyBvZiB0aGVzZSB0d28gZnVuY3Rpb25zLlxuICBmdW5jdGlvbiBHZW5lcmF0b3IoKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvbigpIHt9XG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKCkge31cblxuICAvLyBUaGlzIGlzIGEgcG9seWZpbGwgZm9yICVJdGVyYXRvclByb3RvdHlwZSUgZm9yIGVudmlyb25tZW50cyB0aGF0XG4gIC8vIGRvbid0IG5hdGl2ZWx5IHN1cHBvcnQgaXQuXG4gIHZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuICBJdGVyYXRvclByb3RvdHlwZVtpdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgdmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuICB2YXIgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90byAmJiBnZXRQcm90byhnZXRQcm90byh2YWx1ZXMoW10pKSk7XG4gIGlmIChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAmJlxuICAgICAgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgIT09IE9wICYmXG4gICAgICBoYXNPd24uY2FsbChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wpKSB7XG4gICAgLy8gVGhpcyBlbnZpcm9ubWVudCBoYXMgYSBuYXRpdmUgJUl0ZXJhdG9yUHJvdG90eXBlJTsgdXNlIGl0IGluc3RlYWRcbiAgICAvLyBvZiB0aGUgcG9seWZpbGwuXG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBOYXRpdmVJdGVyYXRvclByb3RvdHlwZTtcbiAgfVxuXG4gIHZhciBHcCA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLnByb3RvdHlwZSA9XG4gICAgR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUpO1xuICBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHcC5jb25zdHJ1Y3RvciA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IEdlbmVyYXRvckZ1bmN0aW9uO1xuICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZVt0b1N0cmluZ1RhZ1N5bWJvbF0gPVxuICAgIEdlbmVyYXRvckZ1bmN0aW9uLmRpc3BsYXlOYW1lID0gXCJHZW5lcmF0b3JGdW5jdGlvblwiO1xuXG4gIC8vIEhlbHBlciBmb3IgZGVmaW5pbmcgdGhlIC5uZXh0LCAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMgb2YgdGhlXG4gIC8vIEl0ZXJhdG9yIGludGVyZmFjZSBpbiB0ZXJtcyBvZiBhIHNpbmdsZSAuX2ludm9rZSBtZXRob2QuXG4gIGZ1bmN0aW9uIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhwcm90b3R5cGUpIHtcbiAgICBbXCJuZXh0XCIsIFwidGhyb3dcIiwgXCJyZXR1cm5cIl0uZm9yRWFjaChmdW5jdGlvbihtZXRob2QpIHtcbiAgICAgIHByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnZva2UobWV0aG9kLCBhcmcpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfVxuXG4gIHJ1bnRpbWUuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIHZhciBjdG9yID0gdHlwZW9mIGdlbkZ1biA9PT0gXCJmdW5jdGlvblwiICYmIGdlbkZ1bi5jb25zdHJ1Y3RvcjtcbiAgICByZXR1cm4gY3RvclxuICAgICAgPyBjdG9yID09PSBHZW5lcmF0b3JGdW5jdGlvbiB8fFxuICAgICAgICAvLyBGb3IgdGhlIG5hdGl2ZSBHZW5lcmF0b3JGdW5jdGlvbiBjb25zdHJ1Y3RvciwgdGhlIGJlc3Qgd2UgY2FuXG4gICAgICAgIC8vIGRvIGlzIHRvIGNoZWNrIGl0cyAubmFtZSBwcm9wZXJ0eS5cbiAgICAgICAgKGN0b3IuZGlzcGxheU5hbWUgfHwgY3Rvci5uYW1lKSA9PT0gXCJHZW5lcmF0b3JGdW5jdGlvblwiXG4gICAgICA6IGZhbHNlO1xuICB9O1xuXG4gIHJ1bnRpbWUubWFyayA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIGlmIChPYmplY3Quc2V0UHJvdG90eXBlT2YpIHtcbiAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihnZW5GdW4sIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZ2VuRnVuLl9fcHJvdG9fXyA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICAgICAgaWYgKCEodG9TdHJpbmdUYWdTeW1ib2wgaW4gZ2VuRnVuKSkge1xuICAgICAgICBnZW5GdW5bdG9TdHJpbmdUYWdTeW1ib2xdID0gXCJHZW5lcmF0b3JGdW5jdGlvblwiO1xuICAgICAgfVxuICAgIH1cbiAgICBnZW5GdW4ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShHcCk7XG4gICAgcmV0dXJuIGdlbkZ1bjtcbiAgfTtcblxuICAvLyBXaXRoaW4gdGhlIGJvZHkgb2YgYW55IGFzeW5jIGZ1bmN0aW9uLCBgYXdhaXQgeGAgaXMgdHJhbnNmb3JtZWQgdG9cbiAgLy8gYHlpZWxkIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCh4KWAsIHNvIHRoYXQgdGhlIHJ1bnRpbWUgY2FuIHRlc3RcbiAgLy8gYGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIilgIHRvIGRldGVybWluZSBpZiB0aGUgeWllbGRlZCB2YWx1ZSBpc1xuICAvLyBtZWFudCB0byBiZSBhd2FpdGVkLlxuICBydW50aW1lLmF3cmFwID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHsgX19hd2FpdDogYXJnIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gQXN5bmNJdGVyYXRvcihnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGdlbmVyYXRvclttZXRob2RdLCBnZW5lcmF0b3IsIGFyZyk7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICByZWplY3QocmVjb3JkLmFyZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVjb3JkLmFyZztcbiAgICAgICAgdmFyIHZhbHVlID0gcmVzdWx0LnZhbHVlO1xuICAgICAgICBpZiAodmFsdWUgJiZcbiAgICAgICAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKSkge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUuX19hd2FpdCkudGhlbihmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgaW52b2tlKFwibmV4dFwiLCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGludm9rZShcInRocm93XCIsIGVyciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oZnVuY3Rpb24odW53cmFwcGVkKSB7XG4gICAgICAgICAgLy8gV2hlbiBhIHlpZWxkZWQgUHJvbWlzZSBpcyByZXNvbHZlZCwgaXRzIGZpbmFsIHZhbHVlIGJlY29tZXNcbiAgICAgICAgICAvLyB0aGUgLnZhbHVlIG9mIHRoZSBQcm9taXNlPHt2YWx1ZSxkb25lfT4gcmVzdWx0IGZvciB0aGVcbiAgICAgICAgICAvLyBjdXJyZW50IGl0ZXJhdGlvbi4gSWYgdGhlIFByb21pc2UgaXMgcmVqZWN0ZWQsIGhvd2V2ZXIsIHRoZVxuICAgICAgICAgIC8vIHJlc3VsdCBmb3IgdGhpcyBpdGVyYXRpb24gd2lsbCBiZSByZWplY3RlZCB3aXRoIHRoZSBzYW1lXG4gICAgICAgICAgLy8gcmVhc29uLiBOb3RlIHRoYXQgcmVqZWN0aW9ucyBvZiB5aWVsZGVkIFByb21pc2VzIGFyZSBub3RcbiAgICAgICAgICAvLyB0aHJvd24gYmFjayBpbnRvIHRoZSBnZW5lcmF0b3IgZnVuY3Rpb24sIGFzIGlzIHRoZSBjYXNlXG4gICAgICAgICAgLy8gd2hlbiBhbiBhd2FpdGVkIFByb21pc2UgaXMgcmVqZWN0ZWQuIFRoaXMgZGlmZmVyZW5jZSBpblxuICAgICAgICAgIC8vIGJlaGF2aW9yIGJldHdlZW4geWllbGQgYW5kIGF3YWl0IGlzIGltcG9ydGFudCwgYmVjYXVzZSBpdFxuICAgICAgICAgIC8vIGFsbG93cyB0aGUgY29uc3VtZXIgdG8gZGVjaWRlIHdoYXQgdG8gZG8gd2l0aCB0aGUgeWllbGRlZFxuICAgICAgICAgIC8vIHJlamVjdGlvbiAoc3dhbGxvdyBpdCBhbmQgY29udGludWUsIG1hbnVhbGx5IC50aHJvdyBpdCBiYWNrXG4gICAgICAgICAgLy8gaW50byB0aGUgZ2VuZXJhdG9yLCBhYmFuZG9uIGl0ZXJhdGlvbiwgd2hhdGV2ZXIpLiBXaXRoXG4gICAgICAgICAgLy8gYXdhaXQsIGJ5IGNvbnRyYXN0LCB0aGVyZSBpcyBubyBvcHBvcnR1bml0eSB0byBleGFtaW5lIHRoZVxuICAgICAgICAgIC8vIHJlamVjdGlvbiByZWFzb24gb3V0c2lkZSB0aGUgZ2VuZXJhdG9yIGZ1bmN0aW9uLCBzbyB0aGVcbiAgICAgICAgICAvLyBvbmx5IG9wdGlvbiBpcyB0byB0aHJvdyBpdCBmcm9tIHRoZSBhd2FpdCBleHByZXNzaW9uLCBhbmRcbiAgICAgICAgICAvLyBsZXQgdGhlIGdlbmVyYXRvciBmdW5jdGlvbiBoYW5kbGUgdGhlIGV4Y2VwdGlvbi5cbiAgICAgICAgICByZXN1bHQudmFsdWUgPSB1bndyYXBwZWQ7XG4gICAgICAgICAgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9LCByZWplY3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBwcmV2aW91c1Byb21pc2U7XG5cbiAgICBmdW5jdGlvbiBlbnF1ZXVlKG1ldGhvZCwgYXJnKSB7XG4gICAgICBmdW5jdGlvbiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgIGludm9rZShtZXRob2QsIGFyZywgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwcmV2aW91c1Byb21pc2UgPVxuICAgICAgICAvLyBJZiBlbnF1ZXVlIGhhcyBiZWVuIGNhbGxlZCBiZWZvcmUsIHRoZW4gd2Ugd2FudCB0byB3YWl0IHVudGlsXG4gICAgICAgIC8vIGFsbCBwcmV2aW91cyBQcm9taXNlcyBoYXZlIGJlZW4gcmVzb2x2ZWQgYmVmb3JlIGNhbGxpbmcgaW52b2tlLFxuICAgICAgICAvLyBzbyB0aGF0IHJlc3VsdHMgYXJlIGFsd2F5cyBkZWxpdmVyZWQgaW4gdGhlIGNvcnJlY3Qgb3JkZXIuIElmXG4gICAgICAgIC8vIGVucXVldWUgaGFzIG5vdCBiZWVuIGNhbGxlZCBiZWZvcmUsIHRoZW4gaXQgaXMgaW1wb3J0YW50IHRvXG4gICAgICAgIC8vIGNhbGwgaW52b2tlIGltbWVkaWF0ZWx5LCB3aXRob3V0IHdhaXRpbmcgb24gYSBjYWxsYmFjayB0byBmaXJlLFxuICAgICAgICAvLyBzbyB0aGF0IHRoZSBhc3luYyBnZW5lcmF0b3IgZnVuY3Rpb24gaGFzIHRoZSBvcHBvcnR1bml0eSB0byBkb1xuICAgICAgICAvLyBhbnkgbmVjZXNzYXJ5IHNldHVwIGluIGEgcHJlZGljdGFibGUgd2F5LiBUaGlzIHByZWRpY3RhYmlsaXR5XG4gICAgICAgIC8vIGlzIHdoeSB0aGUgUHJvbWlzZSBjb25zdHJ1Y3RvciBzeW5jaHJvbm91c2x5IGludm9rZXMgaXRzXG4gICAgICAgIC8vIGV4ZWN1dG9yIGNhbGxiYWNrLCBhbmQgd2h5IGFzeW5jIGZ1bmN0aW9ucyBzeW5jaHJvbm91c2x5XG4gICAgICAgIC8vIGV4ZWN1dGUgY29kZSBiZWZvcmUgdGhlIGZpcnN0IGF3YWl0LiBTaW5jZSB3ZSBpbXBsZW1lbnQgc2ltcGxlXG4gICAgICAgIC8vIGFzeW5jIGZ1bmN0aW9ucyBpbiB0ZXJtcyBvZiBhc3luYyBnZW5lcmF0b3JzLCBpdCBpcyBlc3BlY2lhbGx5XG4gICAgICAgIC8vIGltcG9ydGFudCB0byBnZXQgdGhpcyByaWdodCwgZXZlbiB0aG91Z2ggaXQgcmVxdWlyZXMgY2FyZS5cbiAgICAgICAgcHJldmlvdXNQcm9taXNlID8gcHJldmlvdXNQcm9taXNlLnRoZW4oXG4gICAgICAgICAgY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcsXG4gICAgICAgICAgLy8gQXZvaWQgcHJvcGFnYXRpbmcgZmFpbHVyZXMgdG8gUHJvbWlzZXMgcmV0dXJuZWQgYnkgbGF0ZXJcbiAgICAgICAgICAvLyBpbnZvY2F0aW9ucyBvZiB0aGUgaXRlcmF0b3IuXG4gICAgICAgICAgY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmdcbiAgICAgICAgKSA6IGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCk7XG4gICAgfVxuXG4gICAgLy8gRGVmaW5lIHRoZSB1bmlmaWVkIGhlbHBlciBtZXRob2QgdGhhdCBpcyB1c2VkIHRvIGltcGxlbWVudCAubmV4dCxcbiAgICAvLyAudGhyb3csIGFuZCAucmV0dXJuIChzZWUgZGVmaW5lSXRlcmF0b3JNZXRob2RzKS5cbiAgICB0aGlzLl9pbnZva2UgPSBlbnF1ZXVlO1xuICB9XG5cbiAgZGVmaW5lSXRlcmF0b3JNZXRob2RzKEFzeW5jSXRlcmF0b3IucHJvdG90eXBlKTtcbiAgQXN5bmNJdGVyYXRvci5wcm90b3R5cGVbYXN5bmNJdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG4gIHJ1bnRpbWUuQXN5bmNJdGVyYXRvciA9IEFzeW5jSXRlcmF0b3I7XG5cbiAgLy8gTm90ZSB0aGF0IHNpbXBsZSBhc3luYyBmdW5jdGlvbnMgYXJlIGltcGxlbWVudGVkIG9uIHRvcCBvZlxuICAvLyBBc3luY0l0ZXJhdG9yIG9iamVjdHM7IHRoZXkganVzdCByZXR1cm4gYSBQcm9taXNlIGZvciB0aGUgdmFsdWUgb2ZcbiAgLy8gdGhlIGZpbmFsIHJlc3VsdCBwcm9kdWNlZCBieSB0aGUgaXRlcmF0b3IuXG4gIHJ1bnRpbWUuYXN5bmMgPSBmdW5jdGlvbihpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIHZhciBpdGVyID0gbmV3IEFzeW5jSXRlcmF0b3IoXG4gICAgICB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KVxuICAgICk7XG5cbiAgICByZXR1cm4gcnVudGltZS5pc0dlbmVyYXRvckZ1bmN0aW9uKG91dGVyRm4pXG4gICAgICA/IGl0ZXIgLy8gSWYgb3V0ZXJGbiBpcyBhIGdlbmVyYXRvciwgcmV0dXJuIHRoZSBmdWxsIGl0ZXJhdG9yLlxuICAgICAgOiBpdGVyLm5leHQoKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICAgIHJldHVybiByZXN1bHQuZG9uZSA/IHJlc3VsdC52YWx1ZSA6IGl0ZXIubmV4dCgpO1xuICAgICAgICB9KTtcbiAgfTtcblxuICBmdW5jdGlvbiBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpIHtcbiAgICB2YXIgc3RhdGUgPSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGludm9rZShtZXRob2QsIGFyZykge1xuICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUV4ZWN1dGluZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBydW5uaW5nXCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlQ29tcGxldGVkKSB7XG4gICAgICAgIGlmIChtZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIHRocm93IGFyZztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEJlIGZvcmdpdmluZywgcGVyIDI1LjMuMy4zLjMgb2YgdGhlIHNwZWM6XG4gICAgICAgIC8vIGh0dHBzOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy1nZW5lcmF0b3JyZXN1bWVcbiAgICAgICAgcmV0dXJuIGRvbmVSZXN1bHQoKTtcbiAgICAgIH1cblxuICAgICAgY29udGV4dC5tZXRob2QgPSBtZXRob2Q7XG4gICAgICBjb250ZXh0LmFyZyA9IGFyZztcblxuICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgdmFyIGRlbGVnYXRlID0gY29udGV4dC5kZWxlZ2F0ZTtcbiAgICAgICAgaWYgKGRlbGVnYXRlKSB7XG4gICAgICAgICAgdmFyIGRlbGVnYXRlUmVzdWx0ID0gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCk7XG4gICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAoZGVsZWdhdGVSZXN1bHQgPT09IENvbnRpbnVlU2VudGluZWwpIGNvbnRpbnVlO1xuICAgICAgICAgICAgcmV0dXJuIGRlbGVnYXRlUmVzdWx0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJuZXh0XCIpIHtcbiAgICAgICAgICAvLyBTZXR0aW5nIGNvbnRleHQuX3NlbnQgZm9yIGxlZ2FjeSBzdXBwb3J0IG9mIEJhYmVsJ3NcbiAgICAgICAgICAvLyBmdW5jdGlvbi5zZW50IGltcGxlbWVudGF0aW9uLlxuICAgICAgICAgIGNvbnRleHQuc2VudCA9IGNvbnRleHQuX3NlbnQgPSBjb250ZXh0LmFyZztcblxuICAgICAgICB9IGVsc2UgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlU3VzcGVuZGVkU3RhcnQpIHtcbiAgICAgICAgICAgIHN0YXRlID0gR2VuU3RhdGVDb21wbGV0ZWQ7XG4gICAgICAgICAgICB0aHJvdyBjb250ZXh0LmFyZztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKTtcblxuICAgICAgICB9IGVsc2UgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInJldHVyblwiKSB7XG4gICAgICAgICAgY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwgY29udGV4dC5hcmcpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUV4ZWN1dGluZztcblxuICAgICAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2goaW5uZXJGbiwgc2VsZiwgY29udGV4dCk7XG4gICAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJub3JtYWxcIikge1xuICAgICAgICAgIC8vIElmIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd24gZnJvbSBpbm5lckZuLCB3ZSBsZWF2ZSBzdGF0ZSA9PT1cbiAgICAgICAgICAvLyBHZW5TdGF0ZUV4ZWN1dGluZyBhbmQgbG9vcCBiYWNrIGZvciBhbm90aGVyIGludm9jYXRpb24uXG4gICAgICAgICAgc3RhdGUgPSBjb250ZXh0LmRvbmVcbiAgICAgICAgICAgID8gR2VuU3RhdGVDb21wbGV0ZWRcbiAgICAgICAgICAgIDogR2VuU3RhdGVTdXNwZW5kZWRZaWVsZDtcblxuICAgICAgICAgIGlmIChyZWNvcmQuYXJnID09PSBDb250aW51ZVNlbnRpbmVsKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWU6IHJlY29yZC5hcmcsXG4gICAgICAgICAgICBkb25lOiBjb250ZXh0LmRvbmVcbiAgICAgICAgICB9O1xuXG4gICAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIHN0YXRlID0gR2VuU3RhdGVDb21wbGV0ZWQ7XG4gICAgICAgICAgLy8gRGlzcGF0Y2ggdGhlIGV4Y2VwdGlvbiBieSBsb29waW5nIGJhY2sgYXJvdW5kIHRvIHRoZVxuICAgICAgICAgIC8vIGNvbnRleHQuZGlzcGF0Y2hFeGNlcHRpb24oY29udGV4dC5hcmcpIGNhbGwgYWJvdmUuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIC8vIENhbGwgZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdKGNvbnRleHQuYXJnKSBhbmQgaGFuZGxlIHRoZVxuICAvLyByZXN1bHQsIGVpdGhlciBieSByZXR1cm5pbmcgYSB7IHZhbHVlLCBkb25lIH0gcmVzdWx0IGZyb20gdGhlXG4gIC8vIGRlbGVnYXRlIGl0ZXJhdG9yLCBvciBieSBtb2RpZnlpbmcgY29udGV4dC5tZXRob2QgYW5kIGNvbnRleHQuYXJnLFxuICAvLyBzZXR0aW5nIGNvbnRleHQuZGVsZWdhdGUgdG8gbnVsbCwgYW5kIHJldHVybmluZyB0aGUgQ29udGludWVTZW50aW5lbC5cbiAgZnVuY3Rpb24gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCkge1xuICAgIHZhciBtZXRob2QgPSBkZWxlZ2F0ZS5pdGVyYXRvcltjb250ZXh0Lm1ldGhvZF07XG4gICAgaWYgKG1ldGhvZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyBBIC50aHJvdyBvciAucmV0dXJuIHdoZW4gdGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGhhcyBubyAudGhyb3dcbiAgICAgIC8vIG1ldGhvZCBhbHdheXMgdGVybWluYXRlcyB0aGUgeWllbGQqIGxvb3AuXG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcblxuICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgaWYgKGRlbGVnYXRlLml0ZXJhdG9yLnJldHVybikge1xuICAgICAgICAgIC8vIElmIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgYSByZXR1cm4gbWV0aG9kLCBnaXZlIGl0IGFcbiAgICAgICAgICAvLyBjaGFuY2UgdG8gY2xlYW4gdXAuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInJldHVyblwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICAgIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuXG4gICAgICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICAgIC8vIElmIG1heWJlSW52b2tlRGVsZWdhdGUoY29udGV4dCkgY2hhbmdlZCBjb250ZXh0Lm1ldGhvZCBmcm9tXG4gICAgICAgICAgICAvLyBcInJldHVyblwiIHRvIFwidGhyb3dcIiwgbGV0IHRoYXQgb3ZlcnJpZGUgdGhlIFR5cGVFcnJvciBiZWxvdy5cbiAgICAgICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXG4gICAgICAgICAgXCJUaGUgaXRlcmF0b3IgZG9lcyBub3QgcHJvdmlkZSBhICd0aHJvdycgbWV0aG9kXCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2gobWV0aG9kLCBkZWxlZ2F0ZS5pdGVyYXRvciwgY29udGV4dC5hcmcpO1xuXG4gICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgaW5mbyA9IHJlY29yZC5hcmc7XG5cbiAgICBpZiAoISBpbmZvKSB7XG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgIGNvbnRleHQuYXJnID0gbmV3IFR5cGVFcnJvcihcIml0ZXJhdG9yIHJlc3VsdCBpcyBub3QgYW4gb2JqZWN0XCIpO1xuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICBpZiAoaW5mby5kb25lKSB7XG4gICAgICAvLyBBc3NpZ24gdGhlIHJlc3VsdCBvZiB0aGUgZmluaXNoZWQgZGVsZWdhdGUgdG8gdGhlIHRlbXBvcmFyeVxuICAgICAgLy8gdmFyaWFibGUgc3BlY2lmaWVkIGJ5IGRlbGVnYXRlLnJlc3VsdE5hbWUgKHNlZSBkZWxlZ2F0ZVlpZWxkKS5cbiAgICAgIGNvbnRleHRbZGVsZWdhdGUucmVzdWx0TmFtZV0gPSBpbmZvLnZhbHVlO1xuXG4gICAgICAvLyBSZXN1bWUgZXhlY3V0aW9uIGF0IHRoZSBkZXNpcmVkIGxvY2F0aW9uIChzZWUgZGVsZWdhdGVZaWVsZCkuXG4gICAgICBjb250ZXh0Lm5leHQgPSBkZWxlZ2F0ZS5uZXh0TG9jO1xuXG4gICAgICAvLyBJZiBjb250ZXh0Lm1ldGhvZCB3YXMgXCJ0aHJvd1wiIGJ1dCB0aGUgZGVsZWdhdGUgaGFuZGxlZCB0aGVcbiAgICAgIC8vIGV4Y2VwdGlvbiwgbGV0IHRoZSBvdXRlciBnZW5lcmF0b3IgcHJvY2VlZCBub3JtYWxseS4gSWZcbiAgICAgIC8vIGNvbnRleHQubWV0aG9kIHdhcyBcIm5leHRcIiwgZm9yZ2V0IGNvbnRleHQuYXJnIHNpbmNlIGl0IGhhcyBiZWVuXG4gICAgICAvLyBcImNvbnN1bWVkXCIgYnkgdGhlIGRlbGVnYXRlIGl0ZXJhdG9yLiBJZiBjb250ZXh0Lm1ldGhvZCB3YXNcbiAgICAgIC8vIFwicmV0dXJuXCIsIGFsbG93IHRoZSBvcmlnaW5hbCAucmV0dXJuIGNhbGwgdG8gY29udGludWUgaW4gdGhlXG4gICAgICAvLyBvdXRlciBnZW5lcmF0b3IuXG4gICAgICBpZiAoY29udGV4dC5tZXRob2QgIT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgY29udGV4dC5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUmUteWllbGQgdGhlIHJlc3VsdCByZXR1cm5lZCBieSB0aGUgZGVsZWdhdGUgbWV0aG9kLlxuICAgICAgcmV0dXJuIGluZm87XG4gICAgfVxuXG4gICAgLy8gVGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGlzIGZpbmlzaGVkLCBzbyBmb3JnZXQgaXQgYW5kIGNvbnRpbnVlIHdpdGhcbiAgICAvLyB0aGUgb3V0ZXIgZ2VuZXJhdG9yLlxuICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICB9XG5cbiAgLy8gRGVmaW5lIEdlbmVyYXRvci5wcm90b3R5cGUue25leHQsdGhyb3cscmV0dXJufSBpbiB0ZXJtcyBvZiB0aGVcbiAgLy8gdW5pZmllZCAuX2ludm9rZSBoZWxwZXIgbWV0aG9kLlxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoR3ApO1xuXG4gIEdwW3RvU3RyaW5nVGFnU3ltYm9sXSA9IFwiR2VuZXJhdG9yXCI7XG5cbiAgLy8gQSBHZW5lcmF0b3Igc2hvdWxkIGFsd2F5cyByZXR1cm4gaXRzZWxmIGFzIHRoZSBpdGVyYXRvciBvYmplY3Qgd2hlbiB0aGVcbiAgLy8gQEBpdGVyYXRvciBmdW5jdGlvbiBpcyBjYWxsZWQgb24gaXQuIFNvbWUgYnJvd3NlcnMnIGltcGxlbWVudGF0aW9ucyBvZiB0aGVcbiAgLy8gaXRlcmF0b3IgcHJvdG90eXBlIGNoYWluIGluY29ycmVjdGx5IGltcGxlbWVudCB0aGlzLCBjYXVzaW5nIHRoZSBHZW5lcmF0b3JcbiAgLy8gb2JqZWN0IHRvIG5vdCBiZSByZXR1cm5lZCBmcm9tIHRoaXMgY2FsbC4gVGhpcyBlbnN1cmVzIHRoYXQgZG9lc24ndCBoYXBwZW4uXG4gIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvaXNzdWVzLzI3NCBmb3IgbW9yZSBkZXRhaWxzLlxuICBHcFtpdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBHcC50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBcIltvYmplY3QgR2VuZXJhdG9yXVwiO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHB1c2hUcnlFbnRyeShsb2NzKSB7XG4gICAgdmFyIGVudHJ5ID0geyB0cnlMb2M6IGxvY3NbMF0gfTtcblxuICAgIGlmICgxIGluIGxvY3MpIHtcbiAgICAgIGVudHJ5LmNhdGNoTG9jID0gbG9jc1sxXTtcbiAgICB9XG5cbiAgICBpZiAoMiBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5maW5hbGx5TG9jID0gbG9jc1syXTtcbiAgICAgIGVudHJ5LmFmdGVyTG9jID0gbG9jc1szXTtcbiAgICB9XG5cbiAgICB0aGlzLnRyeUVudHJpZXMucHVzaChlbnRyeSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXNldFRyeUVudHJ5KGVudHJ5KSB7XG4gICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb24gfHwge307XG4gICAgcmVjb3JkLnR5cGUgPSBcIm5vcm1hbFwiO1xuICAgIGRlbGV0ZSByZWNvcmQuYXJnO1xuICAgIGVudHJ5LmNvbXBsZXRpb24gPSByZWNvcmQ7XG4gIH1cblxuICBmdW5jdGlvbiBDb250ZXh0KHRyeUxvY3NMaXN0KSB7XG4gICAgLy8gVGhlIHJvb3QgZW50cnkgb2JqZWN0IChlZmZlY3RpdmVseSBhIHRyeSBzdGF0ZW1lbnQgd2l0aG91dCBhIGNhdGNoXG4gICAgLy8gb3IgYSBmaW5hbGx5IGJsb2NrKSBnaXZlcyB1cyBhIHBsYWNlIHRvIHN0b3JlIHZhbHVlcyB0aHJvd24gZnJvbVxuICAgIC8vIGxvY2F0aW9ucyB3aGVyZSB0aGVyZSBpcyBubyBlbmNsb3NpbmcgdHJ5IHN0YXRlbWVudC5cbiAgICB0aGlzLnRyeUVudHJpZXMgPSBbeyB0cnlMb2M6IFwicm9vdFwiIH1dO1xuICAgIHRyeUxvY3NMaXN0LmZvckVhY2gocHVzaFRyeUVudHJ5LCB0aGlzKTtcbiAgICB0aGlzLnJlc2V0KHRydWUpO1xuICB9XG5cbiAgcnVudGltZS5rZXlzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgdmFyIGtleXMgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICBrZXlzLnB1c2goa2V5KTtcbiAgICB9XG4gICAga2V5cy5yZXZlcnNlKCk7XG5cbiAgICAvLyBSYXRoZXIgdGhhbiByZXR1cm5pbmcgYW4gb2JqZWN0IHdpdGggYSBuZXh0IG1ldGhvZCwgd2Uga2VlcFxuICAgIC8vIHRoaW5ncyBzaW1wbGUgYW5kIHJldHVybiB0aGUgbmV4dCBmdW5jdGlvbiBpdHNlbGYuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICB3aGlsZSAoa2V5cy5sZW5ndGgpIHtcbiAgICAgICAgdmFyIGtleSA9IGtleXMucG9wKCk7XG4gICAgICAgIGlmIChrZXkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgbmV4dC52YWx1ZSA9IGtleTtcbiAgICAgICAgICBuZXh0LmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBUbyBhdm9pZCBjcmVhdGluZyBhbiBhZGRpdGlvbmFsIG9iamVjdCwgd2UganVzdCBoYW5nIHRoZSAudmFsdWVcbiAgICAgIC8vIGFuZCAuZG9uZSBwcm9wZXJ0aWVzIG9mZiB0aGUgbmV4dCBmdW5jdGlvbiBvYmplY3QgaXRzZWxmLiBUaGlzXG4gICAgICAvLyBhbHNvIGVuc3VyZXMgdGhhdCB0aGUgbWluaWZpZXIgd2lsbCBub3QgYW5vbnltaXplIHRoZSBmdW5jdGlvbi5cbiAgICAgIG5leHQuZG9uZSA9IHRydWU7XG4gICAgICByZXR1cm4gbmV4dDtcbiAgICB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIHZhbHVlcyhpdGVyYWJsZSkge1xuICAgIGlmIChpdGVyYWJsZSkge1xuICAgICAgdmFyIGl0ZXJhdG9yTWV0aG9kID0gaXRlcmFibGVbaXRlcmF0b3JTeW1ib2xdO1xuICAgICAgaWYgKGl0ZXJhdG9yTWV0aG9kKSB7XG4gICAgICAgIHJldHVybiBpdGVyYXRvck1ldGhvZC5jYWxsKGl0ZXJhYmxlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBpdGVyYWJsZS5uZXh0ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhYmxlO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzTmFOKGl0ZXJhYmxlLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIGkgPSAtMSwgbmV4dCA9IGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICAgICAgd2hpbGUgKCsraSA8IGl0ZXJhYmxlLmxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKGhhc093bi5jYWxsKGl0ZXJhYmxlLCBpKSkge1xuICAgICAgICAgICAgICBuZXh0LnZhbHVlID0gaXRlcmFibGVbaV07XG4gICAgICAgICAgICAgIG5leHQuZG9uZSA9IGZhbHNlO1xuICAgICAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBuZXh0LnZhbHVlID0gdW5kZWZpbmVkO1xuICAgICAgICAgIG5leHQuZG9uZSA9IHRydWU7XG5cbiAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gbmV4dC5uZXh0ID0gbmV4dDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gYW4gaXRlcmF0b3Igd2l0aCBubyB2YWx1ZXMuXG4gICAgcmV0dXJuIHsgbmV4dDogZG9uZVJlc3VsdCB9O1xuICB9XG4gIHJ1bnRpbWUudmFsdWVzID0gdmFsdWVzO1xuXG4gIGZ1bmN0aW9uIGRvbmVSZXN1bHQoKSB7XG4gICAgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICB9XG5cbiAgQ29udGV4dC5wcm90b3R5cGUgPSB7XG4gICAgY29uc3RydWN0b3I6IENvbnRleHQsXG5cbiAgICByZXNldDogZnVuY3Rpb24oc2tpcFRlbXBSZXNldCkge1xuICAgICAgdGhpcy5wcmV2ID0gMDtcbiAgICAgIHRoaXMubmV4dCA9IDA7XG4gICAgICAvLyBSZXNldHRpbmcgY29udGV4dC5fc2VudCBmb3IgbGVnYWN5IHN1cHBvcnQgb2YgQmFiZWwnc1xuICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgIHRoaXMuc2VudCA9IHRoaXMuX3NlbnQgPSB1bmRlZmluZWQ7XG4gICAgICB0aGlzLmRvbmUgPSBmYWxzZTtcbiAgICAgIHRoaXMuZGVsZWdhdGUgPSBudWxsO1xuXG4gICAgICB0aGlzLm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgdGhpcy5hcmcgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRoaXMudHJ5RW50cmllcy5mb3JFYWNoKHJlc2V0VHJ5RW50cnkpO1xuXG4gICAgICBpZiAoIXNraXBUZW1wUmVzZXQpIHtcbiAgICAgICAgZm9yICh2YXIgbmFtZSBpbiB0aGlzKSB7XG4gICAgICAgICAgLy8gTm90IHN1cmUgYWJvdXQgdGhlIG9wdGltYWwgb3JkZXIgb2YgdGhlc2UgY29uZGl0aW9uczpcbiAgICAgICAgICBpZiAobmFtZS5jaGFyQXQoMCkgPT09IFwidFwiICYmXG4gICAgICAgICAgICAgIGhhc093bi5jYWxsKHRoaXMsIG5hbWUpICYmXG4gICAgICAgICAgICAgICFpc05hTigrbmFtZS5zbGljZSgxKSkpIHtcbiAgICAgICAgICAgIHRoaXNbbmFtZV0gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIHN0b3A6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5kb25lID0gdHJ1ZTtcblxuICAgICAgdmFyIHJvb3RFbnRyeSA9IHRoaXMudHJ5RW50cmllc1swXTtcbiAgICAgIHZhciByb290UmVjb3JkID0gcm9vdEVudHJ5LmNvbXBsZXRpb247XG4gICAgICBpZiAocm9vdFJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgdGhyb3cgcm9vdFJlY29yZC5hcmc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnJ2YWw7XG4gICAgfSxcblxuICAgIGRpc3BhdGNoRXhjZXB0aW9uOiBmdW5jdGlvbihleGNlcHRpb24pIHtcbiAgICAgIGlmICh0aGlzLmRvbmUpIHtcbiAgICAgICAgdGhyb3cgZXhjZXB0aW9uO1xuICAgICAgfVxuXG4gICAgICB2YXIgY29udGV4dCA9IHRoaXM7XG4gICAgICBmdW5jdGlvbiBoYW5kbGUobG9jLCBjYXVnaHQpIHtcbiAgICAgICAgcmVjb3JkLnR5cGUgPSBcInRocm93XCI7XG4gICAgICAgIHJlY29yZC5hcmcgPSBleGNlcHRpb247XG4gICAgICAgIGNvbnRleHQubmV4dCA9IGxvYztcblxuICAgICAgICBpZiAoY2F1Z2h0KSB7XG4gICAgICAgICAgLy8gSWYgdGhlIGRpc3BhdGNoZWQgZXhjZXB0aW9uIHdhcyBjYXVnaHQgYnkgYSBjYXRjaCBibG9jayxcbiAgICAgICAgICAvLyB0aGVuIGxldCB0aGF0IGNhdGNoIGJsb2NrIGhhbmRsZSB0aGUgZXhjZXB0aW9uIG5vcm1hbGx5LlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gISEgY2F1Z2h0O1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247XG5cbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA9PT0gXCJyb290XCIpIHtcbiAgICAgICAgICAvLyBFeGNlcHRpb24gdGhyb3duIG91dHNpZGUgb2YgYW55IHRyeSBibG9jayB0aGF0IGNvdWxkIGhhbmRsZVxuICAgICAgICAgIC8vIGl0LCBzbyBzZXQgdGhlIGNvbXBsZXRpb24gdmFsdWUgb2YgdGhlIGVudGlyZSBmdW5jdGlvbiB0b1xuICAgICAgICAgIC8vIHRocm93IHRoZSBleGNlcHRpb24uXG4gICAgICAgICAgcmV0dXJuIGhhbmRsZShcImVuZFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2KSB7XG4gICAgICAgICAgdmFyIGhhc0NhdGNoID0gaGFzT3duLmNhbGwoZW50cnksIFwiY2F0Y2hMb2NcIik7XG4gICAgICAgICAgdmFyIGhhc0ZpbmFsbHkgPSBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpO1xuXG4gICAgICAgICAgaWYgKGhhc0NhdGNoICYmIGhhc0ZpbmFsbHkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCB0cnVlKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIGlmIChoYXNDYXRjaCkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsIHRydWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIGlmIChoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInRyeSBzdGF0ZW1lbnQgd2l0aG91dCBjYXRjaCBvciBmaW5hbGx5XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBhYnJ1cHQ6IGZ1bmN0aW9uKHR5cGUsIGFyZykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2ICYmXG4gICAgICAgICAgICBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpICYmXG4gICAgICAgICAgICB0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgdmFyIGZpbmFsbHlFbnRyeSA9IGVudHJ5O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChmaW5hbGx5RW50cnkgJiZcbiAgICAgICAgICAodHlwZSA9PT0gXCJicmVha1wiIHx8XG4gICAgICAgICAgIHR5cGUgPT09IFwiY29udGludWVcIikgJiZcbiAgICAgICAgICBmaW5hbGx5RW50cnkudHJ5TG9jIDw9IGFyZyAmJlxuICAgICAgICAgIGFyZyA8PSBmaW5hbGx5RW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAvLyBJZ25vcmUgdGhlIGZpbmFsbHkgZW50cnkgaWYgY29udHJvbCBpcyBub3QganVtcGluZyB0byBhXG4gICAgICAgIC8vIGxvY2F0aW9uIG91dHNpZGUgdGhlIHRyeS9jYXRjaCBibG9jay5cbiAgICAgICAgZmluYWxseUVudHJ5ID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgdmFyIHJlY29yZCA9IGZpbmFsbHlFbnRyeSA/IGZpbmFsbHlFbnRyeS5jb21wbGV0aW9uIDoge307XG4gICAgICByZWNvcmQudHlwZSA9IHR5cGU7XG4gICAgICByZWNvcmQuYXJnID0gYXJnO1xuXG4gICAgICBpZiAoZmluYWxseUVudHJ5KSB7XG4gICAgICAgIHRoaXMubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgIHRoaXMubmV4dCA9IGZpbmFsbHlFbnRyeS5maW5hbGx5TG9jO1xuICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuY29tcGxldGUocmVjb3JkKTtcbiAgICB9LFxuXG4gICAgY29tcGxldGU6IGZ1bmN0aW9uKHJlY29yZCwgYWZ0ZXJMb2MpIHtcbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHRocm93IHJlY29yZC5hcmc7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJicmVha1wiIHx8XG4gICAgICAgICAgcmVjb3JkLnR5cGUgPT09IFwiY29udGludWVcIikge1xuICAgICAgICB0aGlzLm5leHQgPSByZWNvcmQuYXJnO1xuICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICB0aGlzLnJ2YWwgPSB0aGlzLmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICAgIHRoaXMubWV0aG9kID0gXCJyZXR1cm5cIjtcbiAgICAgICAgdGhpcy5uZXh0ID0gXCJlbmRcIjtcbiAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIgJiYgYWZ0ZXJMb2MpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gYWZ0ZXJMb2M7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH0sXG5cbiAgICBmaW5pc2g6IGZ1bmN0aW9uKGZpbmFsbHlMb2MpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkuZmluYWxseUxvYyA9PT0gZmluYWxseUxvYykge1xuICAgICAgICAgIHRoaXMuY29tcGxldGUoZW50cnkuY29tcGxldGlvbiwgZW50cnkuYWZ0ZXJMb2MpO1xuICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIFwiY2F0Y2hcIjogZnVuY3Rpb24odHJ5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA9PT0gdHJ5TG9jKSB7XG4gICAgICAgICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247XG4gICAgICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICAgIHZhciB0aHJvd24gPSByZWNvcmQuYXJnO1xuICAgICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB0aHJvd247XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVGhlIGNvbnRleHQuY2F0Y2ggbWV0aG9kIG11c3Qgb25seSBiZSBjYWxsZWQgd2l0aCBhIGxvY2F0aW9uXG4gICAgICAvLyBhcmd1bWVudCB0aGF0IGNvcnJlc3BvbmRzIHRvIGEga25vd24gY2F0Y2ggYmxvY2suXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbGxlZ2FsIGNhdGNoIGF0dGVtcHRcIik7XG4gICAgfSxcblxuICAgIGRlbGVnYXRlWWllbGQ6IGZ1bmN0aW9uKGl0ZXJhYmxlLCByZXN1bHROYW1lLCBuZXh0TG9jKSB7XG4gICAgICB0aGlzLmRlbGVnYXRlID0ge1xuICAgICAgICBpdGVyYXRvcjogdmFsdWVzKGl0ZXJhYmxlKSxcbiAgICAgICAgcmVzdWx0TmFtZTogcmVzdWx0TmFtZSxcbiAgICAgICAgbmV4dExvYzogbmV4dExvY1xuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMubWV0aG9kID09PSBcIm5leHRcIikge1xuICAgICAgICAvLyBEZWxpYmVyYXRlbHkgZm9yZ2V0IHRoZSBsYXN0IHNlbnQgdmFsdWUgc28gdGhhdCB3ZSBkb24ndFxuICAgICAgICAvLyBhY2NpZGVudGFsbHkgcGFzcyBpdCBvbiB0byB0aGUgZGVsZWdhdGUuXG4gICAgICAgIHRoaXMuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG4gIH07XG59KShcbiAgLy8gSW4gc2xvcHB5IG1vZGUsIHVuYm91bmQgYHRoaXNgIHJlZmVycyB0byB0aGUgZ2xvYmFsIG9iamVjdCwgZmFsbGJhY2sgdG9cbiAgLy8gRnVuY3Rpb24gY29uc3RydWN0b3IgaWYgd2UncmUgaW4gZ2xvYmFsIHN0cmljdCBtb2RlLiBUaGF0IGlzIHNhZGx5IGEgZm9ybVxuICAvLyBvZiBpbmRpcmVjdCBldmFsIHdoaWNoIHZpb2xhdGVzIENvbnRlbnQgU2VjdXJpdHkgUG9saWN5LlxuICAoZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzIH0pKCkgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpXG4pO1xuIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVnZW5lcmF0b3ItcnVudGltZVwiKTtcbiIsImltcG9ydCBDbGllbnRNdXNlcmlhIGZyb20gJy4uLy4uLy4uL2Rpc3QvbXVzZXJpYS5jbGllbnQuanMnO1xuY29uc3QgY2xpZW50ID0gbmV3IENsaWVudE11c2VyaWEoeyBhZGRyZXNzOiBgJHtsb2NhdGlvbi5ob3N0bmFtZX06JHtsb2NhdGlvbi5wb3J0IHx8IChsb2NhdGlvbi5wcm90b2NvbCA9PSAnaHR0cHM6Jz8gNDQzOiA4MCkgfWAgfSk7XG5leHBvcnQgZGVmYXVsdCBjbGllbnQ7IiwibW9kdWxlLmV4cG9ydHMgPSBcIjxkaXYgY2xhc3M9XFxcImFwcCBjb250YWluZXItZmx1aWRcXFwiPlxcbiAgPGhlYWRlciBjbGFzcz1cXFwiaGVhZGVyIHJvd1xcXCI+XFxuICAgIDxhIHN0YXRlPVxcXCJhcHBcXFwiIGNsYXNzPVxcXCJsb2dvIG14LWF1dG8gcHgtNFxcXCI+XFxuICAgICAgPGRpdj5cXG4gICAgICAgIDxpbWcgc3JjPVxcXCJcIiArIHJlcXVpcmUoXCIuL2ltZy9sb2dvLnN2Z1wiKSArIFwiXFxcIiBjbGFzcz1cXFwibG9nby1pbWdcXFwiPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImxvZ28tdGl0bGVcXFwiPm11c2VyaWE8L3NwYW4+XFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJsb2dvLWRlc2NyaXB0aW9uLXN0YXJ0XFxcIj5kZWNlbnRyYWxpemVkPC9kaXY+XFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJsb2dvLWRlc2NyaXB0aW9uLWVuZC1sZyBkLWxnLW5vbmVcXFwiPnN0b3JhZ2U8L2Rpdj5cXG4gICAgICA8L2Rpdj5cXG4gICAgICA8ZGl2IGNsYXNzPVxcXCJsb2dvLWRlc2NyaXB0aW9uLWVuZCBkLW5vbmUgZC1sZy1ibG9ja1xcXCI+c3RvcmFnZTwvZGl2PiAgICAgICAgXFxuICAgIDwvYT5cXG4gIDwvaGVhZGVyPlxcbiAgPGRpdiBjbGFzcz1cXFwiY29udGVudFxcXCI+XFxuICAgIDxkaXYgY2xhc3M9XFxcInJvdyBwdC01IHBiLTNcXFwiPlxcbiAgICAgIDxkaXYgY2xhc3M9XFxcInNvbmctc2VhcmNoIGNvbC1sZy02IGNvbC0xMiBwbC01IHByLTUgcHItbGctNCBwdC00XFxcIj5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcInNvbmctc2VhcmNoLWlucHV0IGlucHV0LWdyb3VwIGlucHV0LWdyb3VwLWxnXFxcIj5cXG4gICAgICAgICAgPGkgY2xhc3M9XFxcImZhcyBmYS1zZWFyY2ggZmEtbGdcXFwiPjwvaT5cXG4gICAgICAgICAgPGlucHV0IFxcbiAgICAgICAgICAgIHR5cGU9XFxcInRleHRcXFwiIFxcbiAgICAgICAgICAgIGNsYXNzPVxcXCJmb3JtLWNvbnRyb2xcXFwiXFxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XFxcImZpbmQgYSBzb25nXFxcIlxcbiAgICAgICAgICAgIGRlYm91bmNlPVxcXCIyMDAwXFxcIlxcbiAgICAgICAgICAgIGZvY3VzPVxcXCIkeyB0aGlzLnNlYXJjaElucHV0Rm9jdXMgfVxcXCJcXG4gICAgICAgICAgICBvbi1pbnB1dD1cXFwiJHsgdGhpcy5yZXNldFNlYXJjaEV2ZW50KCkgfVxcXCJcXG4gICAgICAgICAgICBvbi1kZWJvdW5jZT1cXFwiJHsgdGhpcy5maW5kU29uZyhldmVudC50YXJnZXQudmFsdWUpIH1cXFwiICAgICAgICAgICAgXFxuICAgICAgICAgICAgb24tZm9jdXM9XFxcIiR7IHRoaXMuc2VhcmNoSW5wdXRGb2N1cyA9IHRydWUgfVxcXCJcXG4gICAgICAgICAgICBvbi1ibHVyPVxcXCIkeyB0aGlzLnNlYXJjaElucHV0Rm9jdXMgPSBmYWxzZSB9XFxcIlxcbiAgICAgICAgICAvPlxcbiAgICAgICAgPC9kaXY+XFxuICAgICAgICA8aWYgXFxuICAgICAgICAgIGlzPVxcXCIkeyB0aGlzLnNlYXJjaEV2ZW50LnN0YXR1cyB9XFxcIiBcXG4gICAgICAgICAgY2xhc3M9XFxcImQtYmxvY2sgYWxlcnQgYWxlcnQtJHt0aGlzLnNlYXJjaEV2ZW50LnN0YXR1c30gbXktNFxcXCJcXG4gICAgICAgID4gICAgIFxcbiAgICAgICAgICA8aWYgcmVjcmVhdGUgaXM9XFxcIiR7ICF0aGlzLnNlYXJjaEV2ZW50Lm1lc3NhZ2UgfVxcXCI+ICAgICAgICAgICAgXFxuICAgICAgICAgICAgPGEgaHJlZj1cXFwiJHsgdGhpcy5zZWFyY2hFdmVudC5tZXRhLmxpbmsgfVxcXCIgdGFyZ2V0PVxcXCJfYmxhbmtcXFwiPlxcbiAgICAgICAgICAgICAgJHsgdGhpcy5zZWFyY2hFdmVudC5tZXRhLnRpdGxlIH0gPGkgY2xhc3M9XFxcImZhcyBmYS1saW5rIG1sLTJcXFwiPjwvaT5cXG4gICAgICAgICAgICA8L2E+XFxuICAgICAgICAgIDwvaWY+XFxuICAgICAgICAgIDxlbHNlPlxcbiAgICAgICAgICAgICR7IHRoaXMuc2VhcmNoRXZlbnQubWVzc2FnZSB9XFxuICAgICAgICAgIDwvZWxzZT4gICAgICAgIFxcbiAgICAgICAgPC9pZj5cXG4gICAgICA8L2Rpdj5cXG4gICAgICA8ZGl2IGNsYXNzPVxcXCJjb2wtbGctNiBjb2wtMTIgcGwtNSBwci01IHBsLWxnLTQgcHQtNFxcXCI+XFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJwb3NpdGlvbi1yZWxhdGl2ZVxcXCI+XFxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XFxcImJ0biBmb3JtLWNvbnRyb2wgbWItMiBidG4tbGcgYnRuLXByaW1hcnlcXFwiIG9uLWNsaWNrPVxcXCIkeyB0aGlzLmNob29zZVNvbmcoKSB9XFxcIj5cXG4gICAgICAgICAgICBDaG9vc2UgYSBzb25nIHRvIHVwbG9hZFxcbiAgICAgICAgICA8L2J1dHRvbj5cXG4gICAgICAgICAgPGlucHV0IFxcbiAgICAgICAgICAgIHR5cGU9XFxcImZpbGVcXFwiIFxcbiAgICAgICAgICAgIGlkPVxcXCJhdWRpby1maWxlXFxcIiBcXG4gICAgICAgICAgICBjbGFzcz1cXFwiaW52aXNpYmxlIHBvc2l0aW9uLWFic29sdXRlXFxcIiBcXG4gICAgICAgICAgICBvbi1jaGFuZ2U9XFxcIiR7IHRoaXMucHJlcGFyZUF1ZGlvKGV2ZW50LnRhcmdldC5maWxlc1swXSkgfVxcXCJcXG4gICAgICAgICAgICBhY2NlcHQ9XFxcIi5tcDMsIC5tcGdhXFxcIlxcbiAgICAgICAgICA+XFxuICAgICAgICAgIDxmb3JtIFxcbiAgICAgICAgICAgIG9uLXN1Ym1pdD1cXFwiJHsgZXZlbnQucHJldmVudERlZmF1bHQoKTsgdGhpcy51cGxvYWRTb25nKCkgfVxcXCIgXFxuICAgICAgICAgICAgY2xhc3M9XFxcImlucHV0LWdyb3VwIG15LTQgZC1ibG9ja1xcXCJcXG4gICAgICAgICAgPlxcbiAgICAgICAgICAgIDxpZiBpcz1cXFwiJHsgdGhpcy5zb25nVXBsb2FkSW5mby5maWxlIH1cXFwiPlxcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiZm9ybS1ncm91cCB3LTEwMFxcXCI+XFxuICAgICAgICAgICAgICAgIDxpbnB1dCBcXG4gICAgICAgICAgICAgICAgICB0eXBlPVxcXCJ0ZXh0XFxcIiBcXG4gICAgICAgICAgICAgICAgICBjbGFzcz1cXFwiJHsgdXRpbHMuY2xhc3MoeyAnZm9ybS1jb250cm9sJzogdHJ1ZSwgJ2lzLWludmFsaWQnOiB0aGlzLnVwbG9hZEZvcm1GYWlscy50aXRsZSB9KSB9XFxcIlxcbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVxcXCJXcml0ZSBhIHNvbmcgdGl0bGVcXFwiXFxuICAgICAgICAgICAgICAgICAgdmFsdWU9XFxcIiR7IHRoaXMuc29uZ1VwbG9hZEluZm8udGl0bGUgfVxcXCJcXG4gICAgICAgICAgICAgICAgICBvbi1pbnB1dD1cXFwiJHsgdGhpcy5zb25nVXBsb2FkSW5mby50aXRsZSA9IGV2ZW50LnRhcmdldC52YWx1ZSB9XFxcIlxcbiAgICAgICAgICAgICAgICAgIGRlYm91bmNlPVxcXCIyMDAwXFxcIlxcbiAgICAgICAgICAgICAgICAgIG9uLWRlYm91bmNlPVxcXCIkeyB0aGlzLmNoZWNrVXBsb2FkU29uZ1RpdGxlKGV2ZW50LnRhcmdldCkgfVxcXCJcXG4gICAgICAgICAgICAgICAgLz5cXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiaW52YWxpZC1mZWVkYmFja1xcXCI+VGl0bGUgbXVzdCBiZSBsaWtlIFxcXCJBcnRpc3QgLSBUaXRsZVxcXCI8L2Rpdj5cXG4gICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiZm9ybS1ncm91cCBtdC0zIHctMTAwXFxcIj5cXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiY3VzdG9tLWZpbGUgcG9zaXRpb24tcmVsYXRpdmVcXFwiPlxcbiAgICAgICAgICAgICAgICAgIDxpbnB1dCBcXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XFxcImZpbGVcXFwiIFxcbiAgICAgICAgICAgICAgICAgICAgY2xhc3M9XFxcIiR7IHV0aWxzLmNsYXNzKHsgJ2N1c3RvbS1maWxlLWlucHV0JzogdHJ1ZSwgJ2lzLWludmFsaWQnOiB0aGlzLnVwbG9hZEZvcm1GYWlscy5jb3ZlciB9KSB9XFxcIlxcbiAgICAgICAgICAgICAgICAgICAgaWQ9XFxcImNvdmVyRmlsZVxcXCIgXFxuICAgICAgICAgICAgICAgICAgICBvbi1jaGFuZ2U9XFxcIiR7IHRoaXMucHJlcGFyZUNvdmVyKGV2ZW50LnRhcmdldC5maWxlc1swXSkgfVxcXCJcXG4gICAgICAgICAgICAgICAgICAgIGFjY2VwdD1cXFwiLmpmaWYsIC5qcGVnLCAuanBnXFxcIlxcbiAgICAgICAgICAgICAgICAgID5cXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJpbnZhbGlkLWZlZWRiYWNrXFxcIj5Db3ZlciBtdXN0IGJlIFxcXCJqcGVnXFxcIiBvciBcXFwicG5nXFxcIjwvZGl2PlxcbiAgICAgICAgICAgICAgICAgIDxpbWcgIFxcbiAgICAgICAgICAgICAgICAgICAgaGlkZGVuPVxcXCIkeyAhdGhpcy5zb25nVXBsb2FkSW5mby5jb3ZlciB9XFxcIlxcbiAgICAgICAgICAgICAgICAgICAgdXJsPVxcXCIkeyB0aGlzLnNvbmdVcGxvYWRJbmZvLmNvdmVyIH1cXFwiIFxcbiAgICAgICAgICAgICAgICAgICAgY2xhc3M9XFxcImNvdmVyLWltZ1xcXCJcXG4gICAgICAgICAgICAgICAgICA+XFxuICAgICAgICAgICAgICAgICAgPGxhYmVsIFxcbiAgICAgICAgICAgICAgICAgICAgY2xhc3M9XFxcImN1c3RvbS1maWxlLWxhYmVsICR7IHV0aWxzLmNsYXNzKHsnY292ZXItbGFiZWwnOiB0cnVlLCAnd2l0aC1pbWcnOiAhIXRoaXMuc29uZ1VwbG9hZEluZm8uY292ZXJ9KSB9XFxcIiBcXG4gICAgICAgICAgICAgICAgICAgIGZvcj1cXFwiY292ZXJGaWxlXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICR7IHRoaXMuc29uZ1VwbG9hZEluZm8uY292ZXI/ICdDb3ZlciBpcyBjaG9zZW4nOiAnQ2hvb3NlIGEgY292ZXIgZmlsZScgfVxcbiAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XFxuICAgICAgICAgICAgICAgICAgPGkgXFxuICAgICAgICAgICAgICAgICAgICBoaWRkZW49XFxcIiR7ICF0aGlzLnNvbmdVcGxvYWRJbmZvLmNvdmVyIH1cXFwiXFxuICAgICAgICAgICAgICAgICAgICBvbi1jbGljaz1cXFwiJHsgdGhpcy5yZW1vdmVDb3ZlcigpIH1cXFwiXFxuICAgICAgICAgICAgICAgICAgICBjbGFzcz1cXFwiY2xvc2UtZmEgY292ZXItcmVtb3ZlIGZhcyBmYS10aW1lcyBmYS1sZ1xcXCIgXFxuICAgICAgICAgICAgICAgICAgICB0aXRsZT1cXFwicmVtb3ZlIHRoZSBjb3ZlclxcXCI+PC9pPlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgIFxcbiAgICAgICAgICAgICAgPGJ1dHRvbiBcXG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ9XFxcIiR7IHRoaXMudXBsb2FkRm9ybUZhaWxzLnRpdGxlIHx8IHRoaXMudXBsb2FkRm9ybUZhaWxzLmNvdmVyIH1cXFwiXFxuICAgICAgICAgICAgICAgIHR5cGU9XFxcInN1Ym1pdFxcXCIgXFxuICAgICAgICAgICAgICAgIGNsYXNzPVxcXCJidG4gZm9ybS1jb250cm9sIGJ0bi1zZWNvbmRhcnkgbXQtM1xcXCJcXG4gICAgICAgICAgICAgID5cXG4gICAgICAgICAgICAgICAgVXBsb2FkIHRoZSBzb25nXFxuICAgICAgICAgICAgICA8L2J1dHRvbj4gXFxuICAgICAgICAgICAgPC9pZj5cXG4gICAgICAgICAgPC9mb3JtPiAgXFxuICAgICAgICAgIDxpZiBcXG4gICAgICAgICAgICBpcz1cXFwiJHsgdGhpcy51cGxvYWRFdmVudC5zdGF0dXMgfVxcXCIgXFxuICAgICAgICAgICAgY2xhc3M9XFxcImQtYmxvY2sgYWxlcnQgYWxlcnQtJHt0aGlzLnVwbG9hZEV2ZW50LnN0YXR1c30gbXktNCBwci01XFxcIlxcbiAgICAgICAgICA+XFxuICAgICAgICAgICAgJHsgdGhpcy51cGxvYWRFdmVudC5tZXNzYWdlIH1cXG4gICAgICAgICAgICA8aSBjbGFzcz1cXFwiY2xvc2UtZmEgZmFzIGZhLXRpbWVzIGZhLWxnXFxcIiBvbi1jbGljaz1cXFwiJHsgdGhpcy5yZXNldFVwbG9hZEV2ZW50KCkgfVxcXCI+PC9pPlxcbiAgICAgICAgICA8L2lmPiAgICAgIFxcbiAgICAgICAgPC9kaXY+XFxuICAgICAgPC9kaXY+ICAgIFxcbiAgICA8L2Rpdj4gIFxcbiAgICA8ZGl2IGNsYXNzPVxcXCJjb250YWluZXIgcHktNVxcXCI+XFxuICAgICAgPGRpdiBjbGFzcz1cXFwicm93IHB4LTIgcGItNVxcXCI+XFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJjb2wtMTIgdGV4dC1jZW50ZXJcXFwiPlxcbiAgICAgICAgICA8dWwgY2xhc3M9XFxcInF1ZXN0aW9uc1xcXCI+XFxuICAgICAgICAgICAgPGxpPlxcbiAgICAgICAgICAgICAgPGRpdj5XaGF0IGlzIHRoaXM/PC9kaXY+XFxuICAgICAgICAgICAgICA8ZGl2Pkl0IGlzIGEgZGVjZW50cmFsaXplZCBtdXNpYyBzdG9yYWdlIG5vZGUuPC9kaXY+XFxuICAgICAgICAgICAgPC9saT5cXG4gICAgICAgICAgICA8bGk+XFxuICAgICAgICAgICAgICA8ZGl2PldoYXQgbm9kZT88L2Rpdj5cXG4gICAgICAgICAgICAgIDxkaXY+VGhpcyBpcyBvbmUgb2YgdGhlIHNlcnZlcnMgdGhhdCBpcyBwYXJ0IG9mIHRoZSBuZXR3b3JrLjwvZGl2PlxcbiAgICAgICAgICAgIDwvbGk+XFxuICAgICAgICAgICAgPGxpPlxcbiAgICAgICAgICAgICAgPGRpdj5XaGF0IG5ldHdvcms/PC9kaXY+XFxuICAgICAgICAgICAgICA8ZGl2PklmIHlvdSBhcmUgaGVyZSBhbmQgZG9u4oCZdCBrbm93IGl0LCB0aGVuIHRoaXMgaXMgbW9zdCBsaWtlbHlcXG4gICAgICAgICAgICAgICAgPGEgaHJlZj1cXFwiaHR0cHM6Ly9naXRodWIuY29tL29ydGV4eC9tdXNlcmlhLWdsb2JhbC9cXFwiIHRhcmdldD1cXFwiX2JsYW5rXFxcIj5hIGdsb2JhbCBzdG9yYWdlIG5ldHdvcms8L2E+LlxcbiAgICAgICAgICAgICAgICBCdXQgaXQgY291bGQgYmUgYW5vdGhlciBvbmUuXFxuICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICA8L2xpPlxcbiAgICAgICAgICAgIDxsaT5cXG4gICAgICAgICAgICAgIDxkaXY+R2xvYmFsIHN0b3JhZ2UgbmV0d29yaz88L2Rpdj5cXG4gICAgICAgICAgICAgIDxkaXY+XFxuICAgICAgICAgICAgICAgIFllcywgPGEgaHJlZj1cXFwiaHR0cHM6Ly9naXRodWIuY29tL29ydGV4eC9tdXNlcmlhLWdsb2JhbC9cXFwiIHRhcmdldD1cXFwiX2JsYW5rXFxcIj5hIGdsb2JhbCBkZWNlbnRyYWxpemVkIG5ldHdvcms8L2E+IFxcbiAgICAgICAgICAgICAgICBoYXMgYmVlbiBsYXVuY2hlZCwgdGhhdCBhbGxvd3MgdXMgYWxsIHRvIHN0b3JlIGFuZCByZWNlaXZlIG11c2ljIGZvciBmcmVlIGFuZCBpbiBhIHNpbmdsZSBwbGFjZS5cXG4gICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgIDwvbGk+XFxuICAgICAgICAgICAgPGxpPlxcbiAgICAgICAgICAgICAgPGRpdj5XaGF0IGNhbiBJIGRvIG9uIHRoaXMgcGFnZT88L2Rpdj5cXG4gICAgICAgICAgICAgIDxkaXY+XFxuICAgICAgICAgICAgICAgIE9uY2UgeW91IGFyZSBoZXJlLCB0aGVuIHRoZSBuZXR3b3JrIGlzIHB1YmxpYyBvciB5b3UgaGF2ZSBhY2Nlc3MuIFxcbiAgICAgICAgICAgICAgICBZb3UgY2FuIHRyeSB0byBmaW5kIGEgc29uZyBpbiB0aGUgc3RvcmFnZSBvciBhZGQgeW91ciBvd24gdGhlcmUuXFxuICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICA8L2xpPiAgICAgICAgICBcXG4gICAgICAgICAgICA8bGk+XFxuICAgICAgICAgICAgICA8ZGl2PkhvdyB0byBsZWFybiBtb3JlIGFib3V0IGFsbCB0aGlzPzwvZGl2PlxcbiAgICAgICAgICAgICAgPGRpdj5cXG4gICAgICAgICAgICAgICAgTG9vayBpbnRvIDxhIGhyZWY9XFxcImh0dHBzOi8vZ2l0aHViLmNvbS9vcnRleHgvbXVzZXJpYS9cXFwiIHRhcmdldD1cXFwiX2JsYW5rXFxcIj50aGUgZG9jdW1lbnRhdGlvbjwvYT4gb2YgdGhlIGxpYnJhcnkgdGhhdCBpcyByZXNwb25zaWJsZSBmb3IgZXZlcnl0aGluZy5cXG4gICAgICAgICAgICAgICAgSWYgeW91IGFyZSBub3QgYSBwcm9ncmFtbWVyIHRoZW4gZmluZCBvdXQgdGhlIGRldGFpbHMgZnJvbSB0aGUgcGVyc29uIHdobyBnYXZlIHlvdSB0aGUgbGluayB0byB0aGUgc2l0ZS5cXG4gICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgIDwvbGk+XFxuICAgICAgICAgIDwvdWw+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICA8L2Rpdj4gICAgXFxuICAgIDwvZGl2PlxcbiAgPC9kaXY+ICBcXG4gIDxmb290ZXIgY2xhc3M9XFxcImZvb3RlciByb3dcXFwiPlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJjb250YWluZXJcXFwiPlxcbiAgICAgIDxkaXYgY2xhc3M9XFxcInJvdyBweC00XFxcIj5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcImNvbC14bC00IGNvbC1sZy02IG10LTQgcHgtMCBmb290ZXItY29udGFjdHNcXFwiPlxcbiAgICAgICAgICA8aDU+Q29udGFjdHM8L2g1PlxcbiAgICAgICAgICA8dWwgY2xhc3M9XFxcImZsZXgtY29sdW1uIG5hdlxcXCI+XFxuICAgICAgICAgICAgPGxpPlxcbiAgICAgICAgICAgICAgPGkgY2xhc3M9XFxcImZhcyBmYS1lbnZlbG9wZVxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjwvaT5cXG4gICAgICAgICAgICAgIDxhIGhyZWY9XFxcIm1haWx0bzpzdG9yYWdlQG11c2VyaWEuY29tXFxcIiB0YXJnZXQ9XFxcIl9ibGFua1xcXCI+XFxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJwbC0xXFxcIj5zdG9yYWdlQG11c2VyaWEuY29tPC9zcGFuPlxcbiAgICAgICAgICAgICAgPC9hPlxcbiAgICAgICAgICAgIDwvbGk+XFxuICAgICAgICAgICAgPGxpPlxcbiAgICAgICAgICAgICAgPGkgY2xhc3M9XFxcImZhYiBmYS1naXRodWJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48L2k+XFxuICAgICAgICAgICAgICA8YSBocmVmPVxcXCJodHRwczovL2dpdGh1Yi5jb20vb3J0ZXh4L1xcXCIgdGFyZ2V0PVxcXCJfYmxhbmtcXFwiPlxcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwicGwtMVxcXCI+b3J0ZXh4PC9zcGFuPlxcbiAgICAgICAgICAgICAgPC9hPlxcbiAgICAgICAgICAgIDwvbGk+XFxuICAgICAgICAgIDwvdWw+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcImNvbC14bC00IGNvbC1sZy02IG10LTQgcHgtMFxcXCI+XFxuICAgICAgICAgIDxoNT5JbmZvcm1hdGlvbjwvaDU+XFxuICAgICAgICAgIDx1bCBjbGFzcz1cXFwiZmxleC1jb2x1bW4gbmF2XFxcIj5cXG4gICAgICAgICAgICA8bGk+XFxuICAgICAgICAgICAgICA8aSBjbGFzcz1cXFwiZmFzIGZhLWJvb2stb3BlblxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjwvaT5cXG4gICAgICAgICAgICAgIDxhIGhyZWY9XFxcImh0dHBzOi8vZ2l0aHViLmNvbS9vcnRleHgvbXVzZXJpYS9cXFwiIHRhcmdldD1cXFwiX2JsYW5rXFxcIj5Eb2N1bWVudGF0aW9uPC9hPlxcbiAgICAgICAgICAgIDwvbGk+XFxuICAgICAgICAgICAgPGxpPlxcbiAgICAgICAgICAgICAgPGkgY2xhc3M9XFxcImZhcyBmYS1nbG9iZVxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjwvaT5cXG4gICAgICAgICAgICAgIDxhIGhyZWY9XFxcImh0dHBzOi8vZ2l0aHViLmNvbS9vcnRleHgvbXVzZXJpYS1nbG9iYWwvXFxcIiB0YXJnZXQ9XFxcIl9ibGFua1xcXCI+R2xvYmFsIG5ldHdvcms8L2E+XFxuICAgICAgICAgICAgPC9saT5cXG4gICAgICAgICAgPC91bD5cXG4gICAgICAgIDwvZGl2PlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwiY29sLXhsLTQgY29sLWxnLTYgbXQtNCBweC0wXFxcIj5cXG4gICAgICAgICAgPGg1PkRvbmF0ZTwvaDU+XFxuICAgICAgICAgIDx1bCBjbGFzcz1cXFwiZmxleC1jb2x1bW4gbmF2XFxcIj5cXG4gICAgICAgICAgICA8bGk+XFxuICAgICAgICAgICAgICA8aSBjbGFzcz1cXFwiZmFiIGZhLWJ0Y1xcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjwvaT5cXG4gICAgICAgICAgICAgIDxzcGFuPjM4ZHl2Q21VYWRxUzJIVkZFdURCVkMzazFhN2g2SjVncVU8L3NwYW4+XFxuICAgICAgICAgICAgPC9saT5cXG4gICAgICAgICAgICA8bGkgY2xhc3M9XFxcInRleHQtbm93cmFwXFxcIj5cXG4gICAgICAgICAgICAgIDxpIGNsYXNzPVxcXCJmYWIgZmEtZXRoZXJldW1cXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48L2k+XFxuICAgICAgICAgICAgICA8c3Bhbj4weDRlNUVmMWIzNjIyNzE1MjNmNWM2ZURlN2E1NEJEY0E5NzUwRDgxRTg8L3NwYW4+XFxuICAgICAgICAgICAgPC9saT5cXG4gICAgICAgICAgPC91bD5cXG4gICAgICAgIDwvZGl2PlxcbiAgICAgIDwvZGl2PlxcbiAgICA8L2Rpdj5cXG4gIDwvZm9vdGVyPlxcbjwvZGl2PlwiOyIsImltcG9ydCAnLi9hcHAuc2Nzcyc7XG5pbXBvcnQgQWtpbGkgZnJvbSAnYWtpbGknO1xuaW1wb3J0IHJvdXRlciBmcm9tICdha2lsaS9zcmMvc2VydmljZXMvcm91dGVyJztcbmltcG9ydCBjbGllbnQgZnJvbSAnLi4vLi4vY2xpZW50JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwIGV4dGVuZHMgQWtpbGkuQ29tcG9uZW50IHtcbiAgc3RhdGljIHRlbXBsYXRlID0gcmVxdWlyZSgnLi9hcHAuaHRtbCcpO1xuXG4gIHN0YXRpYyBkZWZpbmUoKSB7XG4gICAgQWtpbGkuY29tcG9uZW50KCdhcHAnLCB0aGlzKTtcblxuICAgIHJvdXRlci5hZGQoJ2FwcCcsICdeL2FwcCcsIHtcbiAgICAgIGNvbXBvbmVudDogdGhpcyxcbiAgICAgIHRpdGxlOiAnTXVzZXJpYSAtIGRlY2VudHJhbGl6ZWQgc3RvcmFnZScgICAgIFxuICAgIH0pO1xuICB9XG5cbiAgY3JlYXRlZCgpIHsgIFxuICAgIHRoaXMuc2NvcGUuc2VhcmNoSW5wdXRGb2N1cyA9IHRydWU7XG4gICAgdGhpcy5zY29wZS51cGxvYWRGb3JtRmFpbHMgPSB7IGNvdmVyOiBmYWxzZSwgdGl0bGU6IGZhbHNlIH07XG4gICAgdGhpcy5zY29wZS5maW5kU29uZyA9IHRoaXMuZmluZFNvbmcuYmluZCh0aGlzKTtcbiAgICB0aGlzLnNjb3BlLmNob29zZVNvbmcgPSB0aGlzLmNob29zZVNvbmcuYmluZCh0aGlzKTtcbiAgICB0aGlzLnNjb3BlLnByZXBhcmVBdWRpbyA9IHRoaXMucHJlcGFyZUF1ZGlvLmJpbmQodGhpcyk7IFxuICAgIHRoaXMuc2NvcGUucHJlcGFyZUNvdmVyID0gdGhpcy5wcmVwYXJlQ292ZXIuYmluZCh0aGlzKTsgXG4gICAgdGhpcy5zY29wZS5yZW1vdmVDb3ZlciA9IHRoaXMucmVtb3ZlQ292ZXIuYmluZCh0aGlzKTtcbiAgICB0aGlzLnNjb3BlLnVwbG9hZFNvbmcgPSB0aGlzLnVwbG9hZFNvbmcuYmluZCh0aGlzKTsgXG4gICAgdGhpcy5zY29wZS5yZXNldFNlYXJjaEV2ZW50ID0gdGhpcy5yZXNldFNlYXJjaEV2ZW50LmJpbmQodGhpcyk7XG4gICAgdGhpcy5zY29wZS5yZXNldFVwbG9hZEV2ZW50ID0gdGhpcy5yZXNldFVwbG9hZEV2ZW50LmJpbmQodGhpcyk7IFxuICAgIHRoaXMuc2NvcGUuY2hlY2tVcGxvYWRTb25nVGl0bGUgPSB0aGlzLmNoZWNrVXBsb2FkU29uZ1RpdGxlLmJpbmQodGhpcyk7ICAgIFxuICAgIHRoaXMucmVzZXRTZWFyY2hFdmVudCgpO1xuICAgIHRoaXMucmVzZXRVcGxvYWRFdmVudCgpO1xuICAgIHRoaXMucmVzZXRTb25nVXBsb2FkSW5mbygpO1xuICB9XG5cbiAgcmVzZXRTZWFyY2hFdmVudCgpIHtcbiAgICB0aGlzLnNjb3BlLnNlYXJjaEV2ZW50ID0geyBzdGF0dXM6ICcnLCBtZXNzYWdlOiAnJywgbWV0YToge30gfTtcbiAgfVxuXG4gIHJlc2V0VXBsb2FkRXZlbnQoKSB7XG4gICAgdGhpcy5zY29wZS51cGxvYWRFdmVudCA9IHsgc3RhdHVzOiAnJywgbWVzc2FnZTogJycgfTtcbiAgfVxuXG4gIHJlc2V0U29uZ1VwbG9hZEluZm8oKSB7XG4gICAgdGhpcy5zY29wZS5zb25nVXBsb2FkSW5mbyA9IHsgdGl0bGU6ICcnLCDRgW92ZXI6ICcnLCBmaWxlOiBudWxsLCBjb3ZlckZpbGU6IG51bGwgfTtcbiAgfVxuXG4gIGNob29zZVNvbmcoKSB7XG4gICAgdGhpcy5yZXNldFNvbmdVcGxvYWRJbmZvKCk7XG4gICAgdGhpcy5lbC5xdWVyeVNlbGVjdG9yKCcjYXVkaW8tZmlsZScpLmNsaWNrKCk7ICAgIFxuICB9XG5cbiAgY2hlY2tVcGxvYWRTb25nVGl0bGUoKSB7XG4gICAgdGhpcy5zY29wZS51cGxvYWRGb3JtRmFpbHMudGl0bGUgPSBmYWxzZTtcblxuICAgIGlmKCFjbGllbnQuY29uc3RydWN0b3IudXRpbHMuaXNTb25nVGl0bGUodGhpcy5zY29wZS5zb25nVXBsb2FkSW5mby50aXRsZSkpIHtcbiAgICAgIHRoaXMuc2NvcGUudXBsb2FkRm9ybUZhaWxzLnRpdGxlID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBmaW5kU29uZyh0aXRsZSkge1xuICAgIGlmKCF0aXRsZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBpbmZvID0gYXdhaXQgY2xpZW50LmdldFNvbmcodGl0bGUpOyAgICAgICBcbiAgICAgIHRoaXMuc2NvcGUuc2VhcmNoRXZlbnQuc3RhdHVzID0gJ2luZm8nOyAgICAgXG4gICAgICB0aGlzLnNjb3BlLnNlYXJjaEV2ZW50Lm1lc3NhZ2UgPSAnTm8gcmVsYXRlZCBzb25ncyBmb3VuZCc7ICAgIFxuICBcbiAgICAgIGlmKGluZm8pIHsgXG4gICAgICAgIHRoaXMuc2NvcGUuc2VhcmNoRXZlbnQuc3RhdHVzID0gJ3N1Y2Nlc3MnO1xuICAgICAgICB0aGlzLnNjb3BlLnNlYXJjaEV2ZW50Lm1lc3NhZ2UgPSAnJztcbiAgICAgICAgdGhpcy5zY29wZS5zZWFyY2hFdmVudC5tZXRhID0geyB0aXRsZTogaW5mby50aXRsZSwgbGluazogaW5mby5hdWRpb0xpbmsgfTtcbiAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2goZXJyKSB7XG4gICAgICBpZighZXJyLmNvZGUpIHtcbiAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNjb3BlLnNlYXJjaEV2ZW50LnN0YXR1cyA9ICdkYW5nZXInO1xuICAgICAgdGhpcy5zY29wZS5zZWFyY2hFdmVudC5tZXNzYWdlID0gZXJyLm1lc3NhZ2U7XG5cbiAgICAgIGlmKGVyci5jb2RlID09ICdFUlJfTVVTRVJJQV9TT05HX1dST05HX1RJVExFJykge1xuICAgICAgICB0aGlzLnNjb3BlLnNlYXJjaEV2ZW50Lm1lc3NhZ2UgPSAnV3Jvbmcgc29uZyB0aXRsZS4gSXQgbXVzdCBiZSBsaWtlIFwiQXJ0aXN0IC0gVGl0bGVcIic7XG4gICAgICB9XG4gICAgfSAgICAgXG4gIH1cblxuICBhc3luYyBwcmVwYXJlQXVkaW8oZmlsZSkge1xuICAgIGlmKCFmaWxlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgdGFncyA9IGF3YWl0IGNsaWVudC5jb25zdHJ1Y3Rvci51dGlscy5nZXRTb25nVGFncyhmaWxlKTtcblxuICAgIGlmKGZpbGUudHlwZSAhPSBcImF1ZGlvL21wZWdcIiAmJiBmaWxlLnR5cGUgIT0gXCJhdWRpby9tcDNcIikge1xuICAgICAgdGhpcy5zY29wZS51cGxvYWRFdmVudCA9IHsgc3RhdHVzOiAnZGFuZ2VyJywgbWVzc2FnZTogJ0ZpbGUgbXVzdCBiZSBcIm1wM1wiJyB9O1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucmVzZXRVcGxvYWRFdmVudCgpO1xuICAgIHRoaXMuc2NvcGUuc29uZ1VwbG9hZEluZm8gPSB7IGZpbGUsIHRpdGxlOiB0YWdzLmZ1bGxUaXRsZSB9O1xuXG4gICAgaWYodGFncy5BUElDKSB7XG4gICAgICBjb25zdCBjb3ZlckZpbGUgPSBuZXcgQmxvYihbdGFncy5BUElDXSk7XG4gICAgICB0aGlzLnNjb3BlLnNvbmdVcGxvYWRJbmZvLmNvdmVyID0gYXdhaXQgdGhpcy5nZXRDb3ZlckxpbmsoY292ZXJGaWxlKTtcbiAgICAgIHRoaXMuc2NvcGUuc29uZ1VwbG9hZEluZm8uY292ZXJGaWxlID0gY292ZXJGaWxlO1xuICAgIH1cblxuICAgIHRoaXMuY2hlY2tVcGxvYWRTb25nVGl0bGUoKTtcbiAgfVxuXG4gIGFzeW5jIHByZXBhcmVDb3ZlcihmaWxlKSB7XG4gICAgaWYoIWZpbGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZihmaWxlLnR5cGUgIT0gXCJpbWFnZS9qcGVnXCIgJiYgZmlsZS50eXBlICE9IFwiaW1hZ2UvcG5nXCIpIHtcbiAgICAgIHRoaXMuc2NvcGUudXBsb2FkRm9ybUZhaWxzLmNvdmVyID0gJyc7XG4gICAgICB0aGlzLnNjb3BlLnNvbmdVcGxvYWRJbmZvLmNvdmVyID0gJyc7XG4gICAgICB0aGlzLnNjb3BlLnNvbmdVcGxvYWRJbmZvLmNvdmVyRmlsZSA9IG51bGw7XG4gICAgICByZXR1cm47XG4gICAgfSAgICBcbiAgICBcbiAgICB0aGlzLnNjb3BlLnNvbmdVcGxvYWRJbmZvLmNvdmVyRmlsZSA9IGZpbGU7XG4gICAgdGhpcy5zY29wZS5zb25nVXBsb2FkSW5mby5jb3ZlciA9IGF3YWl0IHRoaXMuZ2V0Q292ZXJMaW5rKGZpbGUpO1xuICB9XG5cbiAgYXN5bmMgcmVtb3ZlQ292ZXIoKSB7XG4gICAgdGhpcy5zY29wZS51cGxvYWRGb3JtRmFpbHMuY292ZXIgPSAnJztcbiAgICB0aGlzLnNjb3BlLnNvbmdVcGxvYWRJbmZvLmNvdmVyID0gJyc7XG4gICAgdGhpcy5zY29wZS5zb25nVXBsb2FkSW5mby5jb3ZlckZpbGUgPSBudWxsOyAgIFxuICB9XG5cbiAgYXN5bmMgZ2V0Q292ZXJMaW5rKGZpbGUpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29uc3QgZm4gPSBlID0+IHtcbiAgICAgICAgcmVhZGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xvYWRlbmQnLCBmbik7XG4gICAgICAgIGUuZXJyb3I/IHJlamVjdChlLmVycm9yKTogcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOyAgXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgICByZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcignbG9hZGVuZCcsIGZuKTtcbiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xuICAgIH0pOyAgIFxuICB9XG5cbiAgYXN5bmMgdXBsb2FkU29uZygpIHtcbiAgICBjb25zdCB0YWdzID0gYXdhaXQgY2xpZW50LmNvbnN0cnVjdG9yLnV0aWxzLmdldFNvbmdUYWdzKHRoaXMuc2NvcGUuc29uZ1VwbG9hZEluZm8uZmlsZSk7XG4gICAgdGFncy5mdWxsVGl0bGUgPSB0aGlzLnNjb3BlLnNvbmdVcGxvYWRJbmZvLnRpdGxlO1xuXG4gICAgaWYodGhpcy5zY29wZS5zb25nVXBsb2FkSW5mby5jb3ZlckZpbGUpIHtcbiAgICAgIHRhZ3MuQVBJQyA9IHRoaXMuc2NvcGUuc29uZ1VwbG9hZEluZm8uY292ZXJGaWxlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGRlbGV0ZSB0YWdzLkFQSUM7XG4gICAgfVxuXG4gICAgY29uc3QgZmlsZSA9IGF3YWl0IGNsaWVudC5jb25zdHJ1Y3Rvci51dGlscy5zZXRTb25nVGFncyh0aGlzLnNjb3BlLnNvbmdVcGxvYWRJbmZvLmZpbGUsIHRhZ3MpOyBcbiAgICBcbiAgICB0cnkge1xuICAgICAgYXdhaXQgY2xpZW50LmFkZFNvbmcoZmlsZSk7XG4gICAgICB0aGlzLnNjb3BlLnVwbG9hZEV2ZW50LnN0YXR1cyA9ICdzdWNjZXNzJztcbiAgICAgIHRoaXMuc2NvcGUudXBsb2FkRXZlbnQubWVzc2FnZSA9ICdTb25nIGhhcyBiZWVuIHVwbG9hZGVkJztcbiAgICB9XG4gICAgY2F0Y2goZXJyKSB7XG4gICAgICBpZighZXJyLmNvZGUpIHtcbiAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNjb3BlLnVwbG9hZEV2ZW50LnN0YXR1cyA9ICdkYW5nZXInO1xuICAgICAgdGhpcy5zY29wZS51cGxvYWRFdmVudC5tZXNzYWdlID0gZXJyLm1lc3NhZ2U7XG4gICAgfVxuXG4gICAgdGhpcy5yZXNldFNvbmdVcGxvYWRJbmZvKCk7XG4gICAgdGhpcy5lbC5xdWVyeVNlbGVjdG9yKCcjYXVkaW8tZmlsZScpLnZhbHVlID0gJyc7XG4gIH1cbn0iLCIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJsb2dvLnN2Z1wiOyIsImltcG9ydCAnLi9zdHlsZXMvbWFpbi5zY3NzJztcbmltcG9ydCBBa2lsaSBmcm9tICdha2lsaSc7XG5pbXBvcnQgcm91dGVyIGZyb20gJ2FraWxpL3NyYy9zZXJ2aWNlcy9yb3V0ZXInO1xuaW1wb3J0IEFwcCBmcm9tICcuL2NvbnRyb2xsZXJzL2FwcC9hcHAnO1xuaW1wb3J0IGNsaWVudCBmcm9tICcuL2NsaWVudCc7XG5cbkFwcC5kZWZpbmUoKTtcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGFzeW5jICgpID0+IHtcbiAgdHJ5IHsgICAgXG4gICAgcm91dGVyLmluaXQoJy9hcHAnLCBmYWxzZSk7XG4gICAgYXdhaXQgY2xpZW50LmluaXQoKTtcbiAgICBhd2FpdCBBa2lsaS5pbml0KCk7XG4gIH1cbiAgY2F0Y2goZXJyKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn0pOyIsIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=